<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Redesigning GitHub Repository Page</title>
<link>http://tonsky.me/blog/github-redesign/</link>
<guid isPermaLink="true" >http://tonsky.me/blog/github-redesign/</guid>
<description>&lt;img src=&quot;http://tonsky.me/blog/github-redesign/00_cover.png&quot; /&gt; Illustration by &lt;a href=&quot;https://www.behance.net/yuliaprokopova&quot; target=&quot;_blank&quot;&gt;Yulia Prokopova&lt;/a&gt;
&lt;p&gt;Github design is pretty good: it gets the job done, it’s clean, has consistent visual language, its design is calm and suitable for everyday use.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/10_as-is.png&quot; /&gt;&lt;p&gt;Given all that, there are still many areas that could be improved. Today we’ll take one interface—repository page—and look what UI problems it has and if we can fix them.&lt;/p&gt;
&lt;h2 id=&quot;first-problem-nested-tabs&quot;&gt;First problem: nested tabs&lt;/h2&gt;
&lt;p&gt;Let’s start with the biggest issue right away: information architecture. Take tabs. Currently there’re two levels of tabs, one nested under the other:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/20_tabs.png&quot; /&gt;&lt;p&gt;If you are a programmer, you might be surprised but other people normally don’t like hierarchies. Nested structures are hard to grasp, remember, navigate, and grouping is very often non-intuitive. Nested tabs are one of the worst UI patterns out there.&lt;/p&gt;
&lt;p&gt;Then there’s a plain usability issue: let’s say I’m in Wiki and need to see Releases. What should I do? There’s no Releases tab visible, so I must figure out somehow that Releases are part of the Code (?). That makes almost no sense. Releases are as much part of the Code as Issues or Wiki are.&lt;/p&gt;
&lt;p&gt;Solution here is to flatten all tabs into a single navigational control:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/30_tabs-merged.png&quot; /&gt;&lt;p&gt;Organized that way, tabs are immediately accessible &lt;em&gt;from anywhere&lt;/em&gt; in the repo. &lt;em&gt;This is a big deal&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As a bonus, we also won quite a bit of vertical space without sacrificing anything! Vertical space is very important, it lets you see more content and get to it faster—all good things.&lt;/p&gt;
&lt;p&gt;We still have one problem though: tabs don’t fit. We’re going to solve it by removing icons, but let me build up a case for that first.&lt;/p&gt;
&lt;h2 id=&quot;problem-2-redundant-icons&quot;&gt;Problem 2: Redundant icons&lt;/h2&gt;
&lt;p&gt;Icons are visual cues that help you scan the UI quickly. “Quickly” here means faster than reading text labels. If for some reason reading labels is still faster then icons aren’t working.&lt;/p&gt;
&lt;p&gt;One example of icons misuse: if you put too many icons in a row and they are &lt;em&gt;all&lt;/em&gt; different, they won’t work.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/35_icons.png&quot; /&gt;&lt;p&gt;Prioritizing, or highlighting, something means deprioritizing everything else. You can’t highlight everything.&lt;/p&gt;
&lt;p&gt;Another way to fail at icons: if you use obscure graphics, people will have to read labels anyways, so, again, not working.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/37_obscure_icons.jpeg&quot; /&gt;&lt;p&gt;Now let’s be honest: the domain of repository and project management is pretty abstract. No matter how good you are at design and how hard you try, you won’t come up with a great icon for a commit. Or a release. Or an issue. Or a license. A great icon is something &lt;em&gt;other&lt;/em&gt; people know and understand. And for repositories, there’s simply none. I mean,&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/40_is-this-a-commit.png&quot; /&gt;&lt;p&gt;So Github tab icons are purely decorative. If you don’t believe me, look at what Github itself is doing. They dim icons:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/45_commits.png&quot; /&gt;&lt;p&gt;That’s a sure sign that they, too, think it’s near impossible to figure out why backward clock means “Commit”. Github knows people will be looking at the labels anyways.&lt;/p&gt;
&lt;p&gt;But even being decorative, they’re bad at it. I mean, Icon + Label + Counter make for a symmetric and weak composition:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/50_composition.png&quot; /&gt;&lt;p&gt;By removing icons we:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;free up a lot of horizontal space,&lt;/li&gt;
&lt;li&gt;make design stronger, and&lt;/li&gt;
&lt;li&gt;get rid of visual noize.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Win-win-win! Here’s the result, tabs without icons:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/60_icons-removed.png&quot; /&gt;&lt;p&gt;Test yourself, see if you can find Releases tab without an icon and if it was harder than before? It wasn’t, was it?&lt;/p&gt;
&lt;p&gt;A note on this design: I am using the same limitations Github already uses: English language only, locked page width of 1020px. For different conditions, say, for the adaptive design we might want a different solution.&lt;/p&gt;
&lt;p&gt;Another note: I had to remove Contributors tab (which was actually not a tab, but a sub-tab from Insights that was duplicated in Code for some reason) to accommodate for Settings tab. Don’t worry, we’ll get Contributors back later.&lt;/p&gt;
&lt;h2 id=&quot;problem-3-vanity-counters&quot;&gt;Problem 3: Vanity counters&lt;/h2&gt;
&lt;p&gt;This is the “vanity menu”:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/70_vanity.png&quot; /&gt;&lt;p&gt;The thing with vanity metrics is that there should be just one. One metrics is simple to understand and focus. Two or three split attention, making everything weaker.&lt;/p&gt;
&lt;p&gt;Luckily for us, both watchers and forks perform poorly as metrics anyways. For watches, people tend not to watch too much. For forks, people tend to fork for no reason.&lt;/p&gt;
&lt;p&gt;But stars work. They work because they have no other function but to represent vanity. So let’s keep stars and move them to the left to get more attention:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/73_vanity.png&quot; /&gt;&lt;h2 id=&quot;problem-4-watch-button-ambiguity&quot;&gt;Problem 4: “Watch” button ambiguity&lt;/h2&gt;
&lt;p&gt;In the watch button we have a classic “button or status” UX dilemma. Buttons tell us what can be done but don’t say what the current status is. Status tells current state but it’s not clear what it would change to.&lt;/p&gt;
&lt;p&gt;In Github case “Watch” has a button label but it doesn’t act as a button: clicking on it won’t make you watch the repo. It’s not a status either: if you see “Watch” it means you are &lt;em&gt;not&lt;/em&gt; watching. Same for the other two states: they are neither buttons nor states.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/75_vanity.png&quot; /&gt;&lt;p&gt;The problem here is that a single button can’t be used to switch between three states. But dropdown can! Dropdowns are a well-established UI component that shows status &lt;em&gt;and&lt;/em&gt; can be used to change it at the same time.&lt;/p&gt;
&lt;p&gt;Funny, but Github is already using a dropdown! We just need to fix it to work as any other dropdown on Earth works: to show current status. Trivial fix, really:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/77_vanity.png&quot; /&gt;&lt;p&gt;Minor, but annoying: that checkmark is really hard to spot. Let’s highlight the whole row:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/78_vanity.png&quot; /&gt;&lt;p&gt;All together so far:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/80_vanity-reorganized.png&quot; /&gt;&lt;p&gt;Uff, we’ve done a lot! If you need a little break, now would be a perfect time for it. Don’t worry, I’ll wait.&lt;/p&gt;
&lt;p&gt;Back? Great! Let’s move on.&lt;/p&gt;
&lt;h2 id=&quot;problem-5-repo-description&quot;&gt;Problem 5: Repo description&lt;/h2&gt;
&lt;p&gt;This is the repository description:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/90_details.png&quot; /&gt;&lt;p&gt;The problem with it is: why is it located under the Code tab? It’s a description of the whole repository, not just its code, right?&lt;/p&gt;
&lt;p&gt;To fix this let’s move it above the tabs, to the area that belongs to the whole repository:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/100_details-moved.png&quot; /&gt;&lt;p&gt;It still needs a couple of touches.&lt;/p&gt;
&lt;p&gt;First, font is neither big nor small (it’s 16px, standing between 18px repository name and 14px tabs). Let’s make it 14px so that there’re only two distinct font sizes. Also I’m sure there’s no need to render “https://” in the URL:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/112_details.png&quot; /&gt;&lt;p&gt;The second change is to move topics right next to the repository name. There’re usually just a few of those, so it seems wasteful to dedicate a whole line to them:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/114_details.png&quot; /&gt;&lt;p&gt;Look at us, winning more vertical space again!&lt;/p&gt;
&lt;h2 id=&quot;problem-6-removing-background-color&quot;&gt;Problem 6: Removing background color&lt;/h2&gt;
&lt;p&gt;Blue topics on blue background became harder to read. This is because they used to be on #FFF and now they’re on Github’s #FAFBFC “very light dirty blue”.&lt;/p&gt;
&lt;p&gt;Let’s change tab’s background to #FFF too:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/115_details.png&quot; /&gt;&lt;p&gt;But why was that background there in the first place? What did it do?&lt;/p&gt;
&lt;p&gt;My guess is Github had to add it because the structure of their menu layers was becoming too complex and they needed visual cues to help you “split” it in order to understand. The black top bar serves the same purpose: to separate. I mean, they were literally spending a good half of 768px screen at navigation alone.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/116_details.png&quot; /&gt;&lt;p&gt;When split into layers, at least you are not immediately scared by it. Without a background, it would be a mess.&lt;/p&gt;
&lt;p&gt;But because we simplified the whole header so much and removed one intermediate layer, we don’t need that color coding anymore. Instead, we can enjoy fresh crisp white:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/119_details.png&quot; /&gt;&lt;p&gt;And look at all that free space! Finally, we can see some content in the top half of the screen too.&lt;/p&gt;
&lt;h2 id=&quot;problem-7-description-editing&quot;&gt;Problem 7: Description editing&lt;/h2&gt;
&lt;p&gt;A small touch. If you own the repository, you get to edit both its description and its topics:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/120_details.png&quot; /&gt;&lt;p&gt;First, the “Edit” button is badly misplaced — too far, easy to miss.&lt;/p&gt;
&lt;p&gt;Second, separate edit button for topics is an artifact of topics system being developed at a different time, maybe by a different team. There’s really no need to have two separate buttons.&lt;/p&gt;
&lt;p&gt;The solution? How many edit buttons do we need? I say none.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/122_details.png&quot; /&gt;&lt;p&gt;“But… Where did edit buttons go?” You might ask.&lt;/p&gt;
&lt;p&gt;You see, the nature of description and topics is that it’s important to get people to fill them when they first create their repo. After that, people rarely change them at all.&lt;/p&gt;
&lt;p&gt;When there is no description or no topics, we will show a button to add one:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/124_details.png&quot; /&gt;&lt;p&gt;And if description/topics are already filled, go to Settings to change them. Problem solved!&lt;/p&gt;
&lt;h2 id=&quot;problem-8-files-description&quot;&gt;Problem 8: Files description&lt;/h2&gt;
&lt;p&gt;The traditional Windows File Explorer, together with macOS Finder, have established a simple pattern for file browsing: files on the left, details on the right.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/132_file_explorer.png&quot; /&gt;&lt;p&gt;Github decided to copy that pattern, but they put a very unexpected thing as details: a message from the last commit when that particular file was changed.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/130_code_browser.png&quot; /&gt;&lt;p&gt;Why? I don’t know. Commits often touch files for completely arbitrary reasons, so the last commit tells you almost nothing. I can’t think of any case when somebody would need that particular information.&lt;/p&gt;
&lt;p&gt;Maybe they wanted Github to be “about git” more than about traditional file browsing, and this was the only thing they could think of? That’s my speculation, anyway.&lt;/p&gt;
&lt;p&gt;The problem with those details is not that such a huge area is filled with something so rarely useful. The problem is that it looks &lt;em&gt;so much&lt;/em&gt; like file description it confuses me every time. “Tweak layout” is not a description of the “Docs” folder. “Need these debug tools too” for “Tools”—why should I care?&lt;/p&gt;
&lt;p&gt;That means we can get rid of the descriptions without really losing anything:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/135_no_description.png&quot; /&gt;&lt;h2 id=&quot;problem-9-repository-overview&quot;&gt;Problem 9: Repository overview&lt;/h2&gt;
&lt;p&gt;When you get to the repository, the first page you see should not necessarily be Code. We better call it Overview—something to get a quick idea of what’s going on.&lt;/p&gt;
&lt;p&gt;Now, the Github repository is more than just a list of files. It’s also about how those files change over time. What new features were added? Which bugs were fixed? Were there any new releases recently? All those are as important as the files themselves.&lt;/p&gt;
&lt;p&gt;That’s why I suggest we add a list of recent commits to the Overview page next to files.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/140_code_commits.png&quot; /&gt;&lt;p&gt;You can now see if a project is actively developed, maintained or abandoned, if an issue you care about was recently fixed, if a new version was recently published etc (notice tags and branches pills in commit list—I miss this feature on Commits tab SO MUCH).&lt;/p&gt;
&lt;p&gt;What about that free space on the right? We can put useful stats there:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/150_lang_stats.png&quot; /&gt;&lt;p&gt;First, I added contributors. Github is all about people and collaboration, that’s why they put so much emphasis on Fork and PR buttons. Well, people are the face of that collaboration. They put their free time and energy to make that code happen. It’s only fair to see some of their faces.&lt;/p&gt;
&lt;p&gt;Activity is a relatively new feature that hasn’t found its place on repository page yet—until now. Helps you see how much momentum the project has.&lt;/p&gt;
&lt;p&gt;Language statistics was unfairly hidden away, now it’s front and foremost. I also added code size in lines of code — an obvious addition that Github still doesn’t have for some reason.&lt;/p&gt;
&lt;p&gt;Altogether, in my opinion, the new Overview tab is more helpful in everyday use.&lt;/p&gt;
&lt;h2 id=&quot;problem-10-contextualizing-buttons&quot;&gt;Problem 10: Contextualizing buttons&lt;/h2&gt;
&lt;p&gt;Both “Create new file”, “Upload files” and “Find files” all relate to files, so it will be reasonable to move them right next to the thing they operate on: Files.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/160_files_buttons.png&quot; /&gt;&lt;h2 id=&quot;problem-11-hidden-clone-link&quot;&gt;Problem 11: Hidden clone link&lt;/h2&gt;
&lt;p&gt;Github always used to have clone URL directly on a page. That was pretty useful—when you needed to grab the code, no additional clicks were required.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/165_clone.png&quot; /&gt;&lt;p&gt;Unfortunately, during one of the redesigns Github hid the clone URL behind a button. My guess is they did it because there was simply not enough space. But people kept looking for it so they had to paint the button green.&lt;/p&gt;
&lt;p&gt;Well, after moving file buttons we have enough space to restore full-length Clone link:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/170_clone.png&quot; /&gt;&lt;p&gt;I also unified all four ways to get the repo into a single control, because semantically they are pretty much the same: a way to get the code on your machine.&lt;/p&gt;
&lt;h2 id=&quot;last-problem-dated-look&quot;&gt;Last problem: dated look&lt;/h2&gt;
&lt;p&gt;This is how Github &lt;a href=&quot;https://blog.github.com/2013-06-17-repository-next/&quot;&gt;used to look back in 2013&lt;/a&gt;:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/180_github_2013.jpg&quot; /&gt;&lt;p&gt;And this is &lt;a href=&quot;https://blog.github.com/2015-11-16-a-new-look-for-repositories/&quot;&gt;a screenshot from 2015&lt;/a&gt;:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/190_github_2015.png&quot; /&gt;&lt;p&gt;Finally, this is how it looks today:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/10_as-is.png&quot; /&gt;&lt;p&gt;As you can see, the color scheme and main UI elements haven’t changed much since at least 2013. It’s not necessarily bad and mostly proves that the original design was good enough to stand the test of time.&lt;/p&gt;
&lt;p&gt;But maybe it’s time to fresh it up a little? Get rid of gradients, dirty washed-out colors, unnecessary separators, add a little more air. Something like this:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/200_new_look.png&quot; /&gt;&lt;p&gt;If you feel disoriented, give it a minute. Once you are used to it, you might notice it’s actually easier on the eyes and a bit lighter.&lt;/p&gt;
&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;
&lt;p&gt;Current Github design next to my proposal (click to open in a new window):&lt;/p&gt;
&lt;a href=&quot;http://tonsky.me/blog/github-redesign/210_compare.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://tonsky.me/blog/github-redesign/210_compare.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;We’ve added ~4 more files to the screen of the same vertical size, 6 last commits, 3 branches, 10 contributors’ faces, project activity AND expanded language stats WITHOUT losing any information.&lt;/p&gt;
&lt;p&gt;If you know someone at Github, send them a link to this article. Maybe someone there will like my ideas and eventually get to implement them—who knows?&lt;/p&gt;

&lt;div class=&quot;about&quot; readability=&quot;8.456043956044&quot;&gt;

&lt;div class=&quot;about_inner&quot; readability=&quot;12.461538461538&quot;&gt;
&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I’m Nikita. Here I write about programming and UI design &lt;a class=&quot;btn-subscribe&quot; href=&quot;http://tonsky.me/blog/how-to-subscribe/&quot; target=&quot;_blank&quot;&gt;Subscribe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also create open-source stuff: Fira Code, AnyBar, DataScript and Rum. If you like what I do and want to get early access to my articles (along with other benefits), you should &lt;a href=&quot;https://patreon.com/tonsky&quot; target=&quot;_blank&quot;&gt;support me on Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 28 Feb 2019 22:47:07 +0000</pubDate>
<dc:creator>kirushik</dc:creator>
<og:title>Redesigning Github repository page</og:title>
<og:url>http://tonsky.me/blog/github-redesign/</og:url>
<og:type>article</og:type>
<og:description>Better design for Github repository page</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://tonsky.me/blog/github-redesign/</dc:identifier>
</item>
<item>
<title>$35,000 Tesla Model 3 Available Now</title>
<link>https://www.tesla.com/blog/35000-tesla-model-3-available-now</link>
<guid isPermaLink="true" >https://www.tesla.com/blog/35000-tesla-model-3-available-now</guid>
<description>&lt;p&gt;We are incredibly excited to announce that the standard Model 3, with 220 miles of range, a top speed of 130 mph and 0-60 mph acceleration of 5.6 seconds is now available at $35,000! Although lower in cost, it is built to achieve the same perfect &lt;a href=&quot;https://www.tesla.com/blog/model-3-lowest-probability-injury-any-vehicle-ever-tested-nhtsa&quot;&gt;5-star safety rating&lt;/a&gt; as the longer-ranged version, which has the lowest probability of injury of any car ever tested by the U.S. Government.&lt;/p&gt;
&lt;p&gt;In addition, we are introducing the Model 3 Standard Range Plus, which offers 240 miles of range, a top speed of 140 mph, 0-60 mph acceleration of just 5.3 seconds and most premium interior features at $37,000 before incentives. For 6% more money, you get 9% more range, more power, and an upgraded interior.&lt;/p&gt;
&lt;p&gt;To achieve these prices while remaining financially sustainable, Tesla is shifting sales worldwide to online only. You can now buy a Tesla in North America via your phone in about 1 minute, and that capability will soon be extended worldwide. We are also making it much easier to try out and return a Tesla, so that a test drive prior to purchase isn’t needed. You can now return a car within 7 days or 1,000 miles for a full refund. Quite literally, you could buy a Tesla, drive several hundred miles for a weekend road trip with friends and then return it for free. With the highest consumer satisfaction score of any car on the road, we are confident you will want to keep your Tesla.&lt;/p&gt;
&lt;p&gt;Shifting all sales online, combined with other ongoing cost efficiencies, will enable us to lower all vehicle prices by about 6% on average, allowing us to achieve the $35,000 Model 3 price point earlier than we expected. Over the next few months, we will be winding down many of our stores, with a small number of stores in high-traffic locations remaining as galleries, showcases and Tesla information centers. The important thing for customers in the United States to understand is that, with online sales, anyone in any state can quickly and easily buy a Tesla.&lt;/p&gt;
&lt;p&gt;At the same time, we will be increasing our investment in the Tesla service system, with the goal of same-day, if not same-hour service, and with most service done by us coming to you, rather than you coming to us. Moreover, we guarantee service availability anywhere in any country in which we operate.&lt;/p&gt;
&lt;p&gt;We’re also excited to announce that we’re implementing a number of firmware upgrades for both new and existing customers. These upgrades will increase the range of the Long Range Rear-Wheel Drive Model 3 to 325 miles, increase the top speed of Model 3 Performance to 162 mph, and add an average of approximately 5% peak power to all Model 3 vehicles.&lt;/p&gt;
&lt;p&gt;Tesla is committed to making not just the best electric cars, but the best cars, period. And our products are the reason we continue to &lt;a href=&quot;https://www.consumerreports.org/car-reliability-owner-satisfaction/10-most-satisfying-cars-owner-satisfaction/&quot; target=&quot;_blank&quot;&gt;rank #1 in Consumer Reports owner satisfaction survey&lt;/a&gt; and have every single year since Tesla was first eligible to be included in 2013. Both Model 3 Standard and Standard Plus are available starting today at &lt;a href=&quot;https://www.tesla.com/&quot;&gt;Tesla.com&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 22:08:57 +0000</pubDate>
<dc:creator>felipemesquita</dc:creator>
<og:title>$35,000 Tesla Model 3 Available Now</og:title>
<og:description>We are incredibly excited to announce that the standard Model 3, with 220 miles of range, a top speed of 130 mph and 0-60 mph acceleration of 5.6 seconds is now available at $35,000! Although lower in cost, it is built to achieve the same perfect</og:description>
<og:image>https://www.tesla.com/sites/default/files/blog_images/tesla_announcement_social.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tesla.com/blog/35000-tesla-model-3-available-now</dc:identifier>
</item>
<item>
<title>Show HN: I wrote a book about WebAssembly</title>
<link>https://news.ycombinator.com/item?id=19274941</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19274941</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;19277452&quot; readability=&quot;5.748&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.874&quot;&gt;&lt;tr readability=&quot;5.748&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.748&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.885892116183&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Congratulations on shipping! You accomplished something that vanishingly few people do. You should be incredibly proud of yourself.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Always Remember: the people on this site complaining about price are not your customers, and that’s ok. There are &lt;em&gt;always&lt;/em&gt; people on this site that complain about price. When I launched my book and it got on here half the comments were about the price instead of the book itself. Ignore them. They’re noise. Focus on selling to your audience.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278213&quot; readability=&quot;2.5739644970414&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2869822485207&quot;&gt;&lt;tr readability=&quot;2.5739644970414&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c5a&quot;&gt;Well here it’s more a self published pdf than a book. It didn’t pass a publisher screening nor got an ISBN so it’s hardly a &quot;real&quot; book.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278397&quot; readability=&quot;2.1481481481481&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277477&quot; readability=&quot;1.4716981132075&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277924&quot; readability=&quot;3.1428571428571&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278669&quot; readability=&quot;2.4932432432432&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2466216216216&quot;&gt;&lt;tr readability=&quot;2.4932432432432&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I see the sample chapter has an autoconf porting example. Is porting a CMake based project covered anywhere in the book?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277784&quot; readability=&quot;5.4596273291925&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7298136645963&quot;&gt;&lt;tr readability=&quot;5.4596273291925&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.639751552795&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8817567567568&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Nice work. A small note - you might want to redirect http-&amp;gt;https on your site, especially as you are taking payments. You wouldn't want a MITM to redirect your customers to another payment processing page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Also my browser is reporting your https certificate as invalid so sort that out too.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277830&quot; readability=&quot;4.321608040201&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1608040201005&quot;&gt;&lt;tr readability=&quot;4.321608040201&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks for the tip! Luckily I don’t process payments myself but use Gumroad to do that, so payments are safe, but I’ll get an https certificate for the landing page.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277886&quot; readability=&quot;3.3333333333333&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6666666666667&quot;&gt;&lt;tr readability=&quot;3.3333333333333&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;if someone mitms your landing page, they'd be hijacking the payment links to redirect to their phishing hook rather than your payment service.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278620&quot; readability=&quot;7.2918032786885&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6459016393443&quot;&gt;&lt;tr readability=&quot;7.2918032786885&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Looks nice. If you are planning to expand this, I would be interested in a comparison of the different toolchains (e.g. Emscripten vs. Go vs. Rust). Currently, I would choose the toolkit of my favorite language, but I have no idea what kind of consequences such a choice has.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277046&quot; readability=&quot;6.3809523809524&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277133&quot; readability=&quot;2.9811320754717&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278597&quot; readability=&quot;2.4593023255814&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2296511627907&quot;&gt;&lt;tr readability=&quot;2.4593023255814&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This seems to be a book about unsing emscripten to get c/c++ to run in the browser. What if I want a book about writing wasm from scratch?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278604&quot; readability=&quot;1.2972972972973&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275737&quot; readability=&quot;3.6712328767123&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8356164383562&quot;&gt;&lt;tr readability=&quot;3.6712328767123&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;The capstone project and little pacman game look pretty interesting. Think you can spare a short portion of the book to show what the writing is like? I find them to be some of the best litmus tests of what I'm about to get myself into on a technical book purchase.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275957&quot; readability=&quot;6.1567695961995&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276110&quot; readability=&quot;0.7027027027027&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276283&quot; readability=&quot;3.325&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6625&quot;&gt;&lt;tr readability=&quot;3.325&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;No problem, thanks for the idea! I added the TOC and sample chapter to the landing page too since it seems like a common question.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276349&quot; readability=&quot;7.5830115830116&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.7915057915058&quot;&gt;&lt;tr readability=&quot;7.5830115830116&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6351351351351&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.868421052632&quot;&gt;&lt;span class=&quot;commtext c73&quot;&gt;Hey, if it's about web why not provide the option of reading it on web itself? Today I saw someone selling 'offline-first' on dead-tree medium and thought to myself: Really? Does he not believe in offline-first capability of web enough that he went with the older more inefficient medium for offline reading?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;Can we as developers not do better?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;Above aside, congrats on publishing your book!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;WebAssembly is super-interesting, I have bookmarked the page and will buy as soon as I get home.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276399&quot; readability=&quot;3.175572519084&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278630&quot; readability=&quot;1.2258064516129&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275584&quot; readability=&quot;2.4220183486239&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2110091743119&quot;&gt;&lt;tr readability=&quot;2.4220183486239&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That's a really expensive (and I can afford it). How did you figure out these prices?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276088&quot; readability=&quot;3.6086956521739&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.804347826087&quot;&gt;&lt;tr readability=&quot;3.6086956521739&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Seems like it's in the same price range as a lot of other similar books and courses. Authority and Marketing for Developers are two that spring to mind. I'm sure if you subscribe to his mailing list there'll be some sort of sale on at some point.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276154&quot; readability=&quot;1.4193548387097&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277309&quot; readability=&quot;1.0740740740741&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275642&quot; readability=&quot;2.07&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275679&quot; readability=&quot;2.28&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277403&quot; readability=&quot;3.4725274725275&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7362637362637&quot;&gt;&lt;tr readability=&quot;3.4725274725275&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This very common line of thinking is how books that ought to be 75 pages balloon out to 225 pages, using 3x the words to convey the same amount of content.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275868&quot; readability=&quot;3.1724137931034&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277311&quot; readability=&quot;1.3611111111111&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277485&quot; readability=&quot;1.0819672131148&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278469&quot; readability=&quot;3.0891089108911&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275741&quot; readability=&quot;2.4&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2&quot;&gt;&lt;tr readability=&quot;2.4&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.2&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.578313253012&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Table of contents and sample chapter?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Webassembly for genomics sounds cool :)&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275959&quot; readability=&quot;6.2261306532663&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276556&quot; readability=&quot;1.047619047619&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277353&quot; readability=&quot;1.4857142857143&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277420&quot; readability=&quot;3.3647058823529&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6823529411765&quot;&gt;&lt;tr readability=&quot;3.3647058823529&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That's so cool, thanks for sharing! Do you know where I can find more info about how it was built/which portion of the app uses WebAssembly?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277458&quot; readability=&quot;11.314800901578&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.6574004507889&quot;&gt;&lt;tr readability=&quot;11.314800901578&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.200601051841&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;25.805491990847&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This provides access to hundreds of public and tens of thousands of restricted access cancer genomes (and often the matching &quot;normal&quot; samples): so you can see and visually verify mutations. Interestingly, too, you can check out germline polymorphisms which might predispose someone to get cancer.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Basically all the work is done in the browser : gzip decompression, custom parsing of sequencing alignment, png generation, etc. Lots of data are pushed to the client at load time like gene location information for genome build &quot;hg38&quot; (the latest). Server only provides reference sequence and sample genomic alignment &quot;slices&quot; for the region of interest. So, all the state is handled in the browser, server only provides trivial &quot;wget&quot; requests.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It is mostly wasm (source is C compiled with emcc). The front page is the requisite html/javascript start page. Pages are created in wasm code and pushed to JS for updating the DOM. Lots of calls to emscripten_run_script(&quot;your javascript here&quot;). DOM manipulation straight from Rust/Go/C would be cool but it is not here yet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Upside is server simplicity and security ... and no downloading and setting up complicated software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5987889/&quot; rel=&quot;nofollow&quot;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5987889/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Code is done by the government so it's public domain. (Your tax dollars at work !)&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277471&quot; readability=&quot;3.136&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276091&quot; readability=&quot;2.3275862068966&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277260&quot; readability=&quot;2.3454545454545&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275689&quot; readability=&quot;3.3134328358209&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6567164179104&quot;&gt;&lt;tr readability=&quot;3.3134328358209&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;The book looks good (I like the demos of the examles), but what motivated you to choose that pricing scheme?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278503&quot; readability=&quot;7.3865030674847&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6932515337423&quot;&gt;&lt;tr readability=&quot;7.3865030674847&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;How can web assembly deal with per-env variables? Need to recompile for every environment? That means recompile at startup, since I deploy the same artifact to different envs and allow the env to define its vars. For this reason, as a sys admin, I hate web assembly (and most other asset pipelines)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277313&quot; readability=&quot;2.5037593984962&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2518796992481&quot;&gt;&lt;tr readability=&quot;2.5037593984962&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Just picked up the “complete edition”. Really looking forward to going through it all. This looks great!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277354&quot; readability=&quot;2.0470588235294&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277349&quot; readability=&quot;0.70967741935484&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277407&quot; readability=&quot;1.3333333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277432&quot; readability=&quot;1.3506493506494&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277446&quot; readability=&quot;3.9024390243902&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277459&quot; readability=&quot;1.1698113207547&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277323&quot; readability=&quot;2.214953271028&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277382&quot; readability=&quot;5.4315789473684&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7157894736842&quot;&gt;&lt;tr readability=&quot;5.4315789473684&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Yes! Chapter 8 talks about graphics; the Pacman example shows how to port a C++/SDL2 Pacman clone to WebAssembly and OpenGL (with Emscripten). That said, the focus of that chapter is porting games like that, but it doesn't go into writing OpenGL directly.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277252&quot; readability=&quot;1.3243243243243&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277431&quot; readability=&quot;1.7802197802198&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277257&quot; readability=&quot;1.4567901234568&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277332&quot; readability=&quot;2.2574257425743&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277330&quot; readability=&quot;4.4021739130435&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.2010869565217&quot;&gt;&lt;tr readability=&quot;4.4021739130435&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.8423913043478&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.6969696969697&quot;&gt;&lt;span class=&quot;commtext c9c&quot;&gt;Honest feedback: Pricing is high.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c9c&quot;&gt;Also, to me, this doesn't look like a good way to use Show HN. A link to Amazon wouldn't be different than what you just did.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277457&quot; readability=&quot;13.627730294397&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8138651471985&quot;&gt;&lt;tr readability=&quot;13.627730294397&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.60113960114&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;28.858949416342&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;While shameless self-promotion would be an issue, I think this is exactly in line with what HN (and even Show HN) is for. Although that's really up to Dang et al.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's a topic that is highly relevant to this community and for which there is high demand, given the number of Web Assembly tutorials that make it to the front page. Obviously, it's commercial, but so are many of the projects in Show HN. The ones that aren't are still self-promotional in some manner.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I often find that looking at book sites is an interesting way to learn what technologies are getting popular and I'm always curious to see the projects used to teach these things. Posting a book's website can start a conversation, whereas an Amazon link is more likely to start purchases and little more.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Finally, writing a technical book is an impressive accomplishment. Specifically, it's an impressive technical accomplishment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Regarding price, $29 seems quite reasonable for a technical book. Many cost $35-45, and that's without getting into textbooks.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277615&quot; readability=&quot;7.2619926199262&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6309963099631&quot;&gt;&lt;tr readability=&quot;7.2619926199262&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Show HN is explicitly self-promotional... sure, it's &lt;em&gt;usually&lt;/em&gt; used for software projects of some sort, but I don't see any reason that it shouldn't be used for a book you wrote, especially when it's very topical, relative to the community here.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 28 Feb 2019 20:38:00 +0000</pubDate>
<dc:creator>raboukhalil</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19274941</dc:identifier>
</item>
<item>
<title>YouTube bans comments on all videos of children</title>
<link>https://www.bbc.co.uk/news/technology-47408969</link>
<guid isPermaLink="true" >https://www.bbc.co.uk/news/technology-47408969</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;YouTube logo&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/E2D0/production/_105846085_ytkids.png&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;YouTube says it will switch off comments on almost all videos featuring under-18s, in an attempt to &quot;better protect children and families&quot;.&lt;/p&gt;&lt;p&gt;Several brands stopped advertising on YouTube after discovering that paedophiles were leaving predatory comments on videos of children.&lt;/p&gt;&lt;p&gt;YouTube had originally disabled comments on videos that were attracting predatory and obscene comments.&lt;/p&gt;&lt;p&gt;But it will now disable comments on almost all videos of minors by default.&lt;/p&gt;&lt;p&gt;It said the change would take effect over several months.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What was happening?&lt;/h2&gt;&lt;p&gt;The &lt;a href=&quot;https://www.bbc.co.uk/news/technology-42110068&quot; class=&quot;story-body__link&quot;&gt;BBC first reported that paedophiles were leaving explicit comments&lt;/a&gt; on YouTube videos back in 2017.&lt;/p&gt;&lt;p&gt;As well as leaving obscene or sexual comments, they were also using the comments section to signal content of interest to other paedophiles.&lt;/p&gt;&lt;p&gt;At the time, YouTube said it was &quot;working urgently&quot; to clean up the site.&lt;/p&gt;&lt;p&gt;However, in February this year advertisers including AT&amp;amp;T, Nestle and Hasbro suspended their ads after more predatory activity was found.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What has YouTube announced?&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://youtube-creators.googleblog.com/2019/02/more-updates-on-our-actions-related-to.html&quot; class=&quot;story-body__link-external&quot;&gt;In a blog post&lt;/a&gt;, YouTube said its new policy meant videos of very young children would automatically have the comments section disabled.&lt;/p&gt;&lt;p&gt;The move is likely to include videos of toddlers uploaded by parents, as well as short films featuring children by established YouTube stars.&lt;/p&gt;&lt;p&gt;Videos of older children and teenagers will typically not have the comments disabled, unless a specific video is likely to attract predatory attention. That could include, for example, a video of a teenager doing gymnastics.&lt;/p&gt;&lt;p&gt;YouTube told the BBC it would use algorithms to detect which videos contained children.&lt;/p&gt;&lt;p&gt;Millions of hours of footage are uploaded to YouTube every day.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;When will comments be permitted?&lt;/h2&gt;&lt;p&gt;A small number of YouTube content creators will be allowed to enable comments on videos featuring children.&lt;/p&gt;&lt;p&gt;These channels will be trusted partners such as family video-bloggers or known YouTube stars. &lt;/p&gt;&lt;p&gt;However, they will be required to actively moderate their comments and demonstrate that their videos carry a low risk of attracting predatory comments.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/business-47325893&quot; class=&quot;story-body__link&quot;&gt;AT&amp;amp;T and Hasbro pull YouTube ads over abuse claims&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/technology-42110068&quot; class=&quot;story-body__link&quot;&gt;Predatory comments prompt YouTube ad suspension&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;YouTube said it had developed a system that was better at detecting predatory comments and removing them.&lt;/p&gt;&lt;p&gt;Previously, it had said it would stop video-makers earning ad revenue if paedophiles left explicit comments on their videos, but this will no longer be necessary.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What further action is being taken?&lt;/h2&gt;&lt;p&gt;In addition to updating its comments policy, YouTube said it had terminated several channels that were &quot;endangering&quot; children.&lt;/p&gt;&lt;p&gt;The ban included several channels that were adding shocking content in the middle of children's cartoons.&lt;/p&gt;&lt;p&gt;It named FilthyFrankClips as one of the banned channels. It had released a video instructing children how to cut themselves.&lt;/p&gt;&lt;p&gt;&quot;Nothing is more important to us than ensuring the safety of young people on the platform,&quot; said YouTube chief executive &lt;a href=&quot;https://twitter.com/SusanWojcicki/status/1101182716593135621&quot; class=&quot;story-body__link-external&quot;&gt;Susan Wojcicki on Twitter&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;YouTube's app for children - YouTube Kids - has been criticised for using algorithms to curate content. Inappropriate videos have repeatedly been discovered on the service.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How have creators responded?&lt;/h2&gt;&lt;p&gt;The comments left by fans on YouTube videos help the platform's algorithms decide which videos to serve up and recommend to viewers.&lt;/p&gt;&lt;p&gt;Creators have expressed concern that being forced to disable comments on their videos will affect the growth of their channels.&lt;/p&gt;&lt;p&gt;Despite the wide-ranging new policy, comments will remain part of the recommendation algorithm.&lt;/p&gt;&lt;p&gt;&quot;We understand that comments are an important way creators build and connect with their audiences,&quot; YouTube said in a statement. &quot;We also know that this is the right thing to do to protect the YouTube community.&quot;&lt;/p&gt;&lt;p&gt;Andy Burrows from the child protection charity NSPCC said the announcement was an &quot;important step&quot;.&lt;/p&gt;&lt;p&gt;&quot;We know that offenders are twisting YouTube videos for their own sexual gratification, using them to contact other predators and using the comments section as shop window to child abuse image sites,&quot; he said.&lt;/p&gt;&lt;p&gt;However, he called for an &quot;independent statutory regulator&quot; that could &quot;force social networks to follow the rules or face tough consequences&quot;.&lt;/p&gt;
            </description>
<pubDate>Thu, 28 Feb 2019 19:45:20 +0000</pubDate>
<dc:creator>_wmd</dc:creator>
<og:title>YouTube bans comments on all videos of kids</og:title>
<og:type>article</og:type>
<og:description>The streaming platform is disabling comments on videos of children after paedophiles left predatory comments.</og:description>
<og:url>https://www.bbc.com/news/technology-47408969</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/E2D0/production/_105846085_ytkids.png</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.co.uk/news/technology-47408969</dc:identifier>
</item>
<item>
<title>Announcing Rust 1.33.0</title>
<link>https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</guid>
<description>&lt;p&gt;Feb. 28, 2019 · The Rust Release Team&lt;/p&gt;&lt;div readability=&quot;84.361211094643&quot;&gt;
&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.33.0. Rust is a programming language that is empowering everyone to build reliable and efficient software.&lt;/p&gt;
&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.33.0 is as easy as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-console&quot;&gt;$ rustup update stable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you don't have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes for 1.33.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2&gt;What's in 1.33.0 stable&lt;/h2&gt;
&lt;p&gt;The two largest features in this release are significant improvements to &lt;code&gt;const fn&lt;/code&gt;s, and the stabilization of a new concept: &quot;pinning.&quot;&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;const fn&lt;/code&gt; improvements&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;const fn&lt;/code&gt;, you can &lt;a href=&quot;https://github.com/rust-lang/rust/pull/57175/&quot;&gt;now do way more things!&lt;/a&gt; Specifically:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;irrefutable destructuring patterns (e.g. &lt;code&gt;const fn foo((x, y): (u8, u8)) { ... }&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;let&lt;/code&gt; bindings (e.g. &lt;code&gt;let x = 1;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;mutable &lt;code&gt;let&lt;/code&gt; bindings (e.g. &lt;code&gt;let mut x = 1;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;assignment (e.g. &lt;code&gt;x = y&lt;/code&gt;) and assignment operator (e.g. &lt;code&gt;x += y&lt;/code&gt;) expressions, even where the assignment target is a projection (e.g. a struct field or index operation like &lt;code&gt;x[3] = 42&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;expression statements (e.g. &lt;code&gt;3;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You're also &lt;a href=&quot;https://github.com/rust-lang/rust/pull/57067/&quot;&gt;able to call &lt;code&gt;const unsafe fn&lt;/code&gt;s inside a &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;const unsafe fn foo() -&amp;gt; i32 { 5 }
const fn bar() -&amp;gt; i32 {
    unsafe { foo() }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With these additions, many more functions in the standard library are able to be marked as &lt;code&gt;const&lt;/code&gt;. We'll enumerate those in the library section below.&lt;/p&gt;
&lt;h3&gt;Pinning&lt;/h3&gt;
&lt;p&gt;This release introduces a new concept for Rust programs, implemented as two types: the &lt;a href=&quot;https://doc.rust-lang.org/std/pin/struct.Pin.html&quot;&gt;&lt;code&gt;std::pin::Pin&amp;lt;P&amp;gt;&lt;/code&gt; type&lt;/a&gt;, and the &lt;a href=&quot;https://doc.rust-lang.org/std/marker/trait.Unpin.html&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt; marker trait&lt;/a&gt;. The core idea is elaborated on in &lt;a href=&quot;https://doc.rust-lang.org/std/pin/index.html&quot;&gt;the docs for &lt;code&gt;std::pin&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;It is sometimes useful to have objects that are guaranteed to not move, in the sense that their placement in memory does not change, and can thus be relied upon. A prime example of such a scenario would be building self-referential structs, since moving an object with pointers to itself will invalidate them, which could cause undefined behavior.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; ensures that the pointee of any pointer type &lt;code&gt;P&lt;/code&gt; has a stable location in memory, meaning it cannot be moved elsewhere and its memory cannot be deallocated until it gets dropped. We say that the pointee is &quot;pinned&quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This feature will largely be used by library authors, and so we won't talk a lot more about the details here. Consult the docs if you're interested in digging into the details. However, the stabilization of this API is important to Rust users generally because it is a significant step forward towards a highly anticipated Rust feature: &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;. We're not quite there yet, but this stabilization brings us one step closer. You can track all of the necessary features at &lt;a href=&quot;https://areweasyncyet.rs/&quot;&gt;areweasyncyet.rs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Import as &lt;code&gt;_&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/56303/&quot;&gt;You can now import an item as &lt;code&gt;_&lt;/code&gt;&lt;/a&gt;. This allows you to import a trait's impls, and not have the name in the namespace. e.g.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::io::Read as _;

// Allowed as there is only one `Read` in the module.
pub trait Read {}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;Here's all of the stuff that's been made &lt;code&gt;const&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57566&quot;&gt;The methods &lt;code&gt;overflowing_{add, sub, mul, shl, shr}&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57105&quot;&gt;The methods &lt;code&gt;rotate_left&lt;/code&gt;, &lt;code&gt;rotate_right&lt;/code&gt;, and &lt;code&gt;wrapping_{add, sub, mul, shl, shr}&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57105&quot;&gt;The methods &lt;code&gt;is_positive&lt;/code&gt; and &lt;code&gt;is_negative&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all signed numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57167&quot;&gt;The &lt;code&gt;get&lt;/code&gt; method for all &lt;code&gt;NonZero&lt;/code&gt; types is now &lt;code&gt;const&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57234&quot;&gt;The methods &lt;code&gt;count_ones&lt;/code&gt;, &lt;code&gt;count_zeros&lt;/code&gt;, &lt;code&gt;leading_zeros&lt;/code&gt;, &lt;code&gt;trailing_zeros&lt;/code&gt;, &lt;code&gt;swap_bytes&lt;/code&gt;, &lt;code&gt;from_be&lt;/code&gt;, &lt;code&gt;from_le&lt;/code&gt;, &lt;code&gt;to_be&lt;/code&gt;, &lt;code&gt;to_le&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57234&quot;&gt;&lt;code&gt;Ipv4Addr::new&lt;/code&gt; is now a &lt;code&gt;const&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Additionally, these APIs have become stable:&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6484/&quot;&gt;Cargo should now rebuild a crate if a file was modified during the initial build.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3&gt;Crates.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://users.rust-lang.org/t/a-verified-email-address-will-be-required-to-publish-to-crates-io-starting-on-2019-02-28/22425&quot;&gt;As previously announced&lt;/a&gt;, coinciding with this release, crates.io will require that you have a verified email address to publish. Starting at 2019-03-01 00:00 UTC, if you don't have a verified email address and run &lt;code&gt;cargo publish&lt;/code&gt;, you'll get an error.&lt;/p&gt;
&lt;p&gt;This ensures we can comply with DMCA procedures. If you haven't heeded the warnings cargo printed during the last release cycle, head on over to &lt;a href=&quot;https://crates.io/me&quot;&gt;crates.io/me&lt;/a&gt; to set and verify your email address. This email address will never be displayed publicly and will only be used for crates.io operations.&lt;/p&gt;
&lt;h2&gt;Contributors to 1.33.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.33.0. We couldn't have done it without all of you. &lt;a href=&quot;https://thanks.rust-lang.org/rust/1.33.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 28 Feb 2019 19:11:34 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Announcing Rust 1.33.0 | Rust Blog</og:title>
<og:description>Empowering everyone to build reliable and efficient software.</og:description>
<og:image>http://new-rust-www.herokuapp.com/static/images/rust-social-wide.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</dc:identifier>
</item>
<item>
<title>UC terminates subscriptions with Elsevier in push for open access</title>
<link>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</link>
<guid isPermaLink="true" >https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</guid>
<description>&lt;p&gt;As a leader in the global movement toward open access to publicly funded research, the University of California is taking a firm stand by deciding not to renew its subscriptions with Elsevier. Despite months of contract negotiations, Elsevier was unwilling to meet UC’s key goal: securing universal open access to UC research while containing the rapidly escalating costs associated with for-profit journals.&lt;/p&gt;
&lt;p&gt;In negotiating with Elsevier, UC aimed to accelerate the pace of scientific discovery by ensuring that research produced by UC’s 10 campuses — which accounts for nearly 10 percent of all U.S. publishing output — would be immediately available to the world, without cost to the reader. Under Elsevier’s proposed terms, the publisher would have charged UC authors large publishing fees on top of the university’s multi-million dollar subscription, resulting in much greater cost to the university and much higher profits for Elsevier.&lt;/p&gt;
&lt;p&gt;“Knowledge should not be accessible only to those who can pay,” said Robert May, chair of UC’s faculty Academic Senate. “The quest for full open access is essential if we are to truly uphold the mission of this university.” The Academic Senate issued a &lt;a href=&quot;https://senate.universityofcalifornia.edu/_files/reports/academic-council-statement-elsevier-feb28.pdf&quot;&gt;statement&lt;/a&gt; today endorsing UC’s position.&lt;/p&gt;
&lt;p&gt;Open access publishing, which makes research freely available to anyone, anywhere in the world, fulfills UC’s mission by transmitting knowledge more broadly and facilitating new discoveries that build on the university’s research and scholarly work. This follows UC’s faculty-driven &lt;a href=&quot;https://senate.universityofcalifornia.edu/_files/committees/ucolasc/scholcommprinciples-20180425.pdf&quot;&gt;principles&lt;/a&gt; on scholarly communication.&lt;/p&gt;
&lt;p&gt;“I fully support our faculty, staff and students in breaking down paywalls that hinder the sharing of groundbreaking research,” said UC President Janet Napolitano. “This issue does not just impact UC, but also countless scholars, researchers and scientists across the globe — and we stand with them in their push for full, unfettered access.”&lt;/p&gt;
&lt;p&gt;Elsevier is the largest scholarly publisher in the world, disseminating about 18 percent of journal articles produced by UC faculty. The transformative model that UC faculty and libraries are championing would make it easier and more affordable for UC authors to publish in an open access environment.&lt;/p&gt;
&lt;p&gt;“Make no mistake: The prices of scientific journals now are so high that not a single university in the U.S. — not the University of California, not Harvard, no institution — can afford to subscribe to them all,” said Jeffrey MacKie-Mason, university librarian and economics professor at UC Berkeley, and co-chair of UC’s negotiation team. “Publishing our scholarship behind a paywall deprives people of the access to and benefits of publicly funded research. That is terrible for society.”&lt;/p&gt;
&lt;p&gt;Elsevier was unwilling to meet UC’s reasonable contract terms, which would integrate subscription charges and open access publishing fees, making open access the default for any article by a UC scholar and stabilizing journal costs for the university.&lt;/p&gt;
&lt;p&gt;“The university’s, and the world’s, move toward open access has been a long time in the making. Many institutions and countries agree that the current system is both financially unsustainable and ill-suited to the needs of today’s global research enterprise,” said Ivy Anderson, associate executive director of UC’s California Digital Library and co-chair of UC’s negotiation team. “Open access will spur faster and better research — and greater global equity of access to new knowledge.”&lt;/p&gt;
&lt;p&gt;To learn more about UC’s efforts to establish open access, visit the UC Office of Scholarly Communication’s &lt;a href=&quot;https://osc.universityofcalifornia.edu/open-access-at-uc/publisher-negotiations/uc-and-elsevier/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 18:51:11 +0000</pubDate>
<dc:creator>tingletech</dc:creator>
<og:type>article</og:type>
<og:title>UC terminates subscriptions with world’s largest scientific publisher in push for open access to publicly funded research</og:title>
<og:url>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</og:url>
<og:description>As a leader in the global movement toward open access to publicly funded research, the University of California is taking a firm stand by deciding not to renew its subscriptions with Elsevier. Despite months of contract negotiations, Elsevier was unwilling to meet UC’s key goal: securing universal open access to UC research while containing the rapidly escalating costs associated with for-profit journals.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</dc:identifier>
</item>
<item>
<title>Pagedraw is shutting down and going open source</title>
<link>https://pagedraw.io/</link>
<guid isPermaLink="true" >https://pagedraw.io/</guid>
<description>&lt;p&gt;We want to give one last, big thank you to all our users, supporters, and investors. It’s been An Incredible Journey. We’re moving on, but We’re very proud of the technology we’ve built. We’re releasing it open source both so you can keep using it, and so we can share our ideas about how to build UI tools.&lt;/p&gt;
&lt;p&gt;Ultimately, we think Pagedraw is the wrong product. We think you can get 90% of the benefits of Pagedraw by just using JSX better. Our findings on this will be controversial, as they go entirely against the current “best practices,” so we’ll save them for a later blog post.&lt;/p&gt;
&lt;p&gt;As promised, you can simply stop using Pagedraw— all the generated code already lives in your repo! If you’re using Pagedraw in production, contact us if you’re worried about a more complex migration pathway. You’ll be able to download your &lt;code&gt;.pagedraw.json&lt;/code&gt; files from our servers and use them with the newly released, open source, desktop app. The web version will stay up through April so you can migrate at your convenience.&lt;/p&gt;
&lt;p&gt;— Jared Pochtar and Gabriel Guimaraes&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 18:00:02 +0000</pubDate>
<dc:creator>jameslk</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pagedraw.io/</dc:identifier>
</item>
<item>
<title>America’s Cities Are Running on Software from the ’80s</title>
<link>https://www.bloombergquint.com/businessweek/america-s-cities-are-running-on-software-from-the-80s</link>
<guid isPermaLink="true" >https://www.bloombergquint.com/businessweek/america-s-cities-are-running-on-software-from-the-80s</guid>
<description>&lt;p&gt;For local officials throughout the country, the shift from old-school servers to rented cloud storage has made it tougher than ever to fund upgrades. They can budget physical equipment as capital expenses, meaning they could issue bonds to pay for them. But cloud computing is a service, as the people selling it love to say, which means officials have to pay for it with operating funds—the same pool of money that goes toward addressing more tangible demands, such as parks and cops. The deliberate pace of government compounds the problem of strained resources, says &lt;a href=&quot;https://bloustein.rutgers.edu/pfeiffer/&quot;&gt;Marc Pfeiffer&lt;/a&gt;, a former New Jersey official who now advises municipalities on managing technology as part of Rutgers University’s Bloustein Local Government Research Center.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 14:42:15 +0000</pubDate>
<dc:creator>eplanit</dc:creator>
<og:type>article</og:type>
<og:url>https://www.bloombergquint.com/technology/america-s-cities-are-running-on-software-from-the-80s</og:url>
<og:title>America’s Cities Are Running on Software From the ’80s</og:title>
<og:description>Even San Francisco’s tech chops can’t save it from relying on computers that belong in a museum.</og:description>
<og:image>https://images.assettype.com/bloombergquint%2F2019-03%2F6df6b55d-f87a-4e2a-81f7-ddec5558a7ad%2F_1x_1.jpg?rect=0%2C127%2C2200%2C1155&amp;w=1200&amp;auto=format%2Ccompress</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloombergquint.com/businessweek/america-s-cities-are-running-on-software-from-the-80s</dc:identifier>
</item>
<item>
<title>Implications of Rewriting a Browser Component in Rust</title>
<link>https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/</guid>
<description>&lt;p&gt;&lt;em&gt;The previous posts in this &lt;a href=&quot;https://hacks.mozilla.org/category/fearless-security/&quot;&gt;Fearless Security series&lt;/a&gt; examine &lt;a href=&quot;https://hacks.mozilla.org/2019/01/fearless-security-memory-safety/&quot;&gt;memory safety&lt;/a&gt; and &lt;a href=&quot;https://hacks.mozilla.org/2019/02/fearless-security-thread-safety/&quot;&gt;thread safety&lt;/a&gt; in Rust. This closing post uses the &lt;a href=&quot;https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/&quot;&gt;Quantum CSS project&lt;/a&gt; as a case study to explore the real world impact of rewriting code in Rust.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The style component is the part of a browser that applies CSS rules to a page. This is a top-down process on the DOM tree: given the parent style, the styles of children can be calculated independently—a perfect use-case for parallel computation. By 2017, Mozilla had made two previous attempts to parallelize the style system using C++. Both had failed.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Quantum CSS&lt;/em&gt; resulted from a need to improve page performance. Improving security is a happy byproduct.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/02/successrust-250x250.jpg&quot; alt=&quot;Rewrites code to make it faster; also makes it more secure&quot; width=&quot;250&quot; height=&quot;250&quot; class=&quot;alignnone size-medium wp-image-33199&quot; srcset=&quot;https://hacks.mozilla.org/files/2019/02/successrust-250x250.jpg 250w, https://hacks.mozilla.org/files/2019/02/successrust.jpg 500w&quot; sizes=&quot;(max-width: 250px) 100vw, 250px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There’s a large overlap between memory safety violations and security-related bugs, so we expected this rewrite to reduce the attack surface in Firefox. In this post, I will summarize the potential security vulnerabilities that have appeared in the styling code since &lt;a href=&quot;https://en.wikipedia.org/wiki/Firefox_version_history&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Firefox’s initial release in 2002&lt;/a&gt;. Then I’ll look at what could and could not have been prevented by using Rust.&lt;/p&gt;
&lt;p&gt;Over the course of its lifetime, there have been 69 security bugs in Firefox’s style component. If we’d had a time machine and could have written this component in Rust from the start, 51 (73.9%) of these bugs would not have been possible. While Rust makes it easier to write better code, it’s not foolproof.&lt;/p&gt;
&lt;h2&gt;Rust&lt;/h2&gt;
&lt;p&gt;Rust is a modern systems programming language that is type- and memory-safe. As a side effect of these safety guarantees, Rust programs are also known to be thread-safe at compile time. Thus, Rust can be a particularly good choice when:&lt;/p&gt;
&lt;p&gt;✅ processing untrusted input safely.&lt;br/&gt;✅ introducing parallelism to improve performance.&lt;br/&gt;✅ integrating isolated components into an existing codebase.&lt;/p&gt;
&lt;p&gt;However, there are classes of bugs that Rust explicitly does not address—particularly correctness bugs. In fact, during the Quantum CSS rewrite, engineers accidentally reintroduced a critical security bug that had previously been patched in the C++ code, regressing the fix for &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=641731&quot;&gt;bug 641731&lt;/a&gt;. This allowed global history leakage via SVG image documents, resulting in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1420001&quot;&gt;bug 1420001&lt;/a&gt;. As a trivial history-stealing bug, this is rated security-high. The original fix was an additional check to see if the SVG document was being used as an image. Unfortunately, this check was overlooked during the rewrite.&lt;/p&gt;
&lt;p&gt;While there were automated tests intended to catch &lt;code&gt;:visited&lt;/code&gt; rule violations like this, in practice, they didn’t detect this bug. To speed up our automated tests, we temporarily turned off the mechanism that tested this feature—tests aren’t particularly useful if they aren’t run. The risk of re-implementing logic errors can be mitigated by good test coverage (and actually running the tests). There’s still a danger of introducing new logic errors.&lt;/p&gt;
&lt;p&gt;As developer familiarity with the Rust language increases, best practices will improve. Code written in Rust will become even more secure. While it may not prevent all possible vulnerabilities, Rust eliminates an entire class of the most severe bugs.&lt;/p&gt;
&lt;h2&gt;Quantum CSS Security Bugs&lt;/h2&gt;
&lt;p&gt;Overall, bugs related to memory, bounds, null/uninitialized variables, or integer overflow would be prevented by default in Rust. The miscellaneous bug I referenced above would not have been prevented—it was a crash due to a failed allocation.&lt;/p&gt;
&lt;h3&gt;Security bugs by category&lt;/h3&gt;

&lt;p&gt;All of the bugs in this analysis are related to security, but only 43 received official security classifications. (These are assigned by Mozilla’s security engineers based on educated “exploitability” guesses.) Normal bugs might indicate missing features or problems like crashes. While undesirable, crashes don’t result in data leakage or behavior modification. Official security bugs can range from low severity (highly limited in scope) to critical vulnerability (might allow an attacker to run arbitrary code on the user’s platform).&lt;/p&gt;
&lt;p&gt;There’s a significant overlap between memory vulnerabilities and severe security problems. Of the 34 critical/high bugs, 32 were memory-related.&lt;/p&gt;
&lt;h3&gt;Security rated bug breakdown&lt;/h3&gt;

&lt;h2&gt;Comparing Rust and C++ code&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=955913&quot;&gt;Bug 955914&lt;/a&gt; is a heap buffer overflow in the &lt;code&gt;GetCustomPropertyNameAt&lt;/code&gt; function. The code used the wrong variable for indexing, which resulted in interpreting memory past the end of the array. This could either crash while accessing a bad pointer or copy memory to a string that is passed to another component.&lt;/p&gt;
&lt;p&gt;The ordering of all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Properties_Reference&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CSS properties&lt;/a&gt; (both longhand and custom) is stored in an array, &lt;code&gt;mOrder&lt;/code&gt;. Each element is either represented by its CSS property value or, in the case of custom properties, by a value that starts at &lt;code&gt;eCSSProperty_COUNT&lt;/code&gt; (the total number of non-custom CSS properties). To retrieve the name of a custom property, first, you have to retrieve the custom property value from &lt;code&gt;mOrder&lt;/code&gt;, then access the name at the corresponding index of the &lt;code&gt;mVariableOrder&lt;/code&gt; array, which stores the custom property names in order.&lt;/p&gt;
&lt;h3&gt;Vulnerable C++ code:&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;    void GetCustomPropertyNameAt(uint32_t aIndex, nsAString&amp;amp; aResult) const {
            MOZ_ASSERT(mOrder[aIndex] &amp;gt;= eCSSProperty_COUNT);

            aResult.Truncate();
            aResult.AppendLiteral(&quot;var-&quot;);
            aResult.Append(mVariableOrder[aIndex]);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The problem occurs at line 6 when using &lt;code&gt;aIndex&lt;/code&gt; to access an element of the &lt;code&gt;mVariableOrder&lt;/code&gt; array. &lt;code&gt;aIndex&lt;/code&gt; is intended for use with the &lt;code&gt;mOrder&lt;/code&gt; array not the &lt;code&gt;mVariableOrder&lt;/code&gt; array. The corresponding element for the custom property represented by &lt;code&gt;aIndex&lt;/code&gt; in &lt;code&gt;mOrder&lt;/code&gt; is actually &lt;code&gt;mOrder[aIndex] - eCSSProperty_COUNT&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Fixed C++ code:&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;    void Get CustomPropertyNameAt(uint32_t aIndex, nsAString&amp;amp; aResult) const {
      MOZ_ASSERT(mOrder[aIndex] &amp;gt;= eCSSProperty_COUNT);

      uint32_t variableIndex = mOrder[aIndex] - eCSSProperty_COUNT;
      aResult.Truncate();
      aResult.AppendLiteral(&quot;var-&quot;);
      aResult.Append(mVariableOrder[variableIndex]);
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Equivalent Rust code&lt;/h3&gt;
&lt;p&gt;While Rust is similar to C++ in some ways, idiomatic Rust uses different abstractions and data structures. Rust code will look very different from C++ (see below for details). First, let’s consider what would happen if we translated the vulnerable code as literally as possible:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;    fn GetCustomPropertyNameAt(&amp;amp;self, aIndex: usize) -&amp;gt; String {
        assert!(self.mOrder[aIndex] &amp;gt;= self.eCSSProperty_COUNT);

        let mut result = &quot;var-&quot;.to_string();
        result += &amp;amp;self.mVariableOrder[aIndex];
        result
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The Rust compiler would accept the code, since there is no way to determine the length of vectors before runtime. Unlike arrays, whose length must be known, the &lt;a href=&quot;https://doc.rust-lang.org/std/vec/struct.Vec.html&quot;&gt;&lt;code&gt;Vec&lt;/code&gt; type&lt;/a&gt; in Rust is dynamically sized. However, the standard library vector implementation has built-in bounds checking. When an invalid index is used, the program immediately terminates in a controlled fashion, preventing any illegal access.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://dxr.mozilla.org/mozilla-central/source/servo/ports/geckolib/glue.rs#5735&quot;&gt;actual code&lt;/a&gt; in Quantum CSS uses very different data structures, so there’s no exact equivalent. For example, we use Rust’s powerful built-in data structures to unify the ordering and property name data. This allows us to avoid having to maintain two independent arrays. Rust data structures also improve data encapsulation and reduce the likelihood of these kinds of logic errors. Because the code needs to interact with C++ code in other parts of the browser engine, the new &lt;code&gt;GetCustomPropertyNameAt&lt;/code&gt; function doesn’t look like idiomatic Rust code. It still offers all of the safety guarantees while providing a more understandable abstraction of the underlying data.&lt;/p&gt;
&lt;h2&gt;tl;dr;&lt;/h2&gt;
&lt;p&gt;Due to the overlap between memory safety violations and security-related bugs, we can say that Rust code should result in fewer critical &lt;a href=&quot;https://cve.mitre.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CVEs&lt;/a&gt; (Common Vulnerabilities and Exposures). However, even Rust is not foolproof. Developers still need to be aware of correctness bugs and data leakage attacks. Code review, testing, and fuzzing still remain essential for maintaining secure libraries.&lt;/p&gt;
&lt;p&gt;Compilers can’t catch every mistake that programmers can make. However, Rust has been designed to remove the burden of memory safety from our shoulders, allowing us to focus on logical correctness and soundness instead.&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;0.042553191489362&quot;&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/dhosfeltmozilla-com/&quot;&gt;More articles by Diane Hosfelt…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Thu, 28 Feb 2019 14:30:03 +0000</pubDate>
<dc:creator>zwliew</dc:creator>
<og:url>https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust</og:url>
<og:title>Implications of Rewriting a Browser Component in Rust – Mozilla Hacks - the Web developer blog</og:title>
<og:description>Since our first release in 2002, there have been 69 security bugs in Firefox’s style component. If we'd had a time machine and could have written this component in Rust from the start, 51% wouldn't have happened. That said, Rust is not foolproof. Developers still need to be aware of correctness bugs and data leakage attacks.</og:description>
<og:image>https://hacks.mozilla.org/files/2019/02/fearless.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2019/02/rewriting-a-browser-component-in-rust/</dc:identifier>
</item>
<item>
<title>Heat Pumps Work Miracles</title>
<link>https://dothemath.ucsd.edu/2012/06/heat-pumps-work-miracles/</link>
<guid isPermaLink="true" >https://dothemath.ucsd.edu/2012/06/heat-pumps-work-miracles/</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump.png&quot;&gt;&lt;img class=&quot;alignright size-thumbnail wp-image-1017&quot; title=&quot;heat-pump&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump-150x150.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot;/&gt;&lt;/a&gt;Part of the argument that we cannot expect growth to continue indefinitely is that efficiency gains are capped. Many of our energy applications are within a factor of two of theoretical efficiency limits, so we can’t squeeze too much more out of this orange. After all, nothing can be more than 100% efficient, can it? Well, it turns out there is &lt;em&gt;one&lt;/em&gt; domain in which we can gleefully break these bonds and achieve far better than 100% efficiency: heat pumps (includes refrigerators). Even though it sounds like magic, we still must operate within physical limits, naturally. In this post, I explain how this is possible, and develop the thermodynamic limit to heat engines and heat pumps. It’s a story of entropy.&lt;/p&gt;

&lt;h2&gt;Entropy, Quantified&lt;/h2&gt;
&lt;p&gt;Whole books can be written about the gnarly properties of entropy. Put simply, entropy is a measure of disorder. Strictly speaking, entropy is all about counting the number of quantum-mechanical states that can be occupied at a certain system energy. In this sense, the total entropy of a system is &lt;em&gt;S = k&lt;sub&gt;B&lt;/sub&gt;&lt;/em&gt;ln(&lt;em&gt;Ω&lt;/em&gt;), where &lt;em&gt;Ω&lt;/em&gt; is the number of states available (a rather large number), ln(x) is the natural log function, and &lt;em&gt;k&lt;sub&gt;B&lt;/sub&gt;&lt;/em&gt; is the Boltzmann constant, having a value of 1.38×10&lt;sup&gt;−23&lt;/sup&gt; J/K (Joules per Kelvin) in SI units.&lt;/p&gt;
&lt;p&gt;Okay, that’s deep and cool, but let’s not bog ourselves down counting states. The main purpose of the previous paragraph is to indicate that entropy has a fundamental prescription, and that it carries &lt;em&gt;actual units&lt;/em&gt;. Mostly entropy is discussed in a hand-wavy way, but it &lt;em&gt;can&lt;/em&gt; be pinned down.&lt;/p&gt;
&lt;h2&gt;Change Heat: Change Entropy&lt;/h2&gt;
&lt;p&gt;More relevant to &lt;em&gt;our&lt;/em&gt; discussion is the thermodynamic result that if we add/subtract thermal energy (heat) to/from a thermal “bath” (large reservoir of thermal energy, like outside air, a body of water, rock) at a temperature &lt;em&gt;T&lt;/em&gt;—measured on an absolute scale like Kelvin—the entropy changes according to:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ΔQ = TΔS&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We read this to mean that adding an amount of heat (&lt;em&gt;ΔQ&lt;/em&gt;: negative if removing heat) will result in a concomitant increase in entropy (decrease if negative) with the bath temperature as the proportionality constant. Looking at this equation, the units of J/K for entropy (&lt;em&gt;S&lt;/em&gt;) should make more sense.&lt;/p&gt;
&lt;p&gt;Wait a minute! Did I just allow for the condition that entropy could decrease? Isn’t one of the fundamental rules of thermodynamics that entropy can never go down?&lt;/p&gt;
&lt;p&gt;Almost right. The entropy of a &lt;em&gt;closed system&lt;/em&gt; cannot decrease. But it can easily decrease locally at the expense of an increase elsewhere. You can re-stack books on the shelves after an earthquake, restoring order.  But via exertion, you transfer heat to the ambient air in the process—increasing its entropy.&lt;/p&gt;
&lt;h2&gt;Moving Heat&lt;/h2&gt;
&lt;p&gt;A &lt;strong&gt;heat pump&lt;/strong&gt;, rather than &lt;em&gt;creating&lt;/em&gt; heat, simply &lt;strong&gt;moves heat&lt;/strong&gt;. It may move thermal energy from cooler outdoor air into the warmer inside, or from the cooler refrigerator interior into the ambient air. It pushes heat in a direction counter to its normal flow (cold to hot, rather then hot to cold). Thus the word &lt;em&gt;pump&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So let’s imagine I have a cold environment at temperature &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; and a hot environment at &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;. Cold and hot are relative terms here: the “hot” environment could be uncomfortably cool—it just needs to be hotter than the “cold” environment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-1017 aligncenter&quot; title=&quot;heat-pump&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump-245x300.png&quot; alt=&quot;&quot; width=&quot;245&quot; height=&quot;300&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump-245x300.png 245w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/heat-pump.png 651w&quot; sizes=&quot;(max-width: 245px) 100vw, 245px&quot;/&gt;&lt;/a&gt;If I pull an amount of heat, &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; out of the cold environment and put it into the warmer environment, I reduce the entropy in the cold region by &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; = &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;/&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;. Both &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; and &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; are negative in this case.&lt;/p&gt;
&lt;p&gt;Inevitably, I have to run some machinery to affect this flow of heat against the natural gradient (pushing heat uphill). Let’s call the amount of work (energy) needed to force this thermal extraction &lt;em&gt;ΔW&lt;/em&gt;. That mechanical/electrical/whatever energy also ultimately turns to heat, and if I cleverly send this additional energy to the hot place, I end up pumping an amount of heat into the hot environment that is &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; = −&lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; + &lt;em&gt;ΔW&lt;/em&gt; (just the sum of the two; as indicated by arrow thicknesses in the diagram above).&lt;/p&gt;
&lt;p&gt;The entropy change in the hot environment is determined by &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; = &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;/&lt;em&gt;T&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;. Because total entropy must increase, we need the sum of entropy changes to be positive: &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; + &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; &amp;gt; 0—remembering that &lt;em&gt;ΔS&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; is negative.&lt;/p&gt;
&lt;p&gt;So where does this leave us? If we’re trying to heat a home, we care about how much heat is delivered into the home: &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; = −&lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; + &lt;em&gt;ΔW&lt;/em&gt;. And we’d like to do as little work, &lt;em&gt;ΔW&lt;/em&gt;, as possible to pull this off. So an appropriate figure of merit is &lt;em&gt;ε&lt;/em&gt; = &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;/&lt;em&gt;ΔW&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A little algebra with the relations above (the steps are shown in the following graphic) results in the maximum efficiency of a heat pump of &lt;em&gt;ε &amp;lt; T&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;/&lt;em&gt;ΔT&lt;/em&gt;, where &lt;em&gt;ΔT = T&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; − &lt;em&gt;T&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; is the temperature difference between hot and cold baths.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-1020&quot; title=&quot;entropy-eff&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff-300x255.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;255&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff-300x255.png 300w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff-1024x873.png 1024w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff-351x300.png 351w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/entropy-eff.png 1163w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;&lt;/a&gt;If, instead, you want to cool something down (refrigeration, A/C), the figure of merit is how much heat is removed from the cold zone divided by the input work: &lt;em&gt;ε&lt;/em&gt; = −&lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;/&lt;em&gt;ΔW&lt;/em&gt;. In this case, the maximum efficiency works out to &lt;em&gt;ε &amp;lt; T&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;/&lt;em&gt;ΔT&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Heat Engines&lt;/h3&gt;
&lt;p&gt;As an aside, if we turn the heat flow around, so that &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; flows naturally &lt;em&gt;out&lt;/em&gt; of the hot source (&lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; is negative in this case) and a lesser &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt; flows &lt;em&gt;into&lt;/em&gt; the cold source (positive), the same entropy considerations lead us to derive a maximum amount of work that is extractable from the heat flow, and the efficiency, &lt;em&gt;ε = ΔW/ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt; works out to be no better than &lt;em&gt;ΔT/T&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;. (The bolder among you may want to take up the algebraic challenge.) This is the familiar thermodynamic limit for the amount of work obtainable from a &lt;strong&gt;heat engine&lt;/strong&gt;, like a car’s engine, a coal-fired power plant, or even a nuclear plant. The reason we hit a maximum efficiency is really all about not violating the second law of thermodynamics: that the total entropy of a system may never decrease.&lt;/p&gt;
&lt;h2&gt;Extreme Efficiency&lt;/h2&gt;
&lt;p&gt;The remarkable thing about the heat pump efficiencies we derived above is that &lt;em&gt;ΔT&lt;/em&gt; is &lt;em&gt;in the denominator&lt;/em&gt;! Since &lt;em&gt;T&lt;/em&gt; is absolute temperature (Kelvin), typical situations will have &lt;em&gt;T&lt;/em&gt; ≈ 300 K, and &lt;em&gt;ΔT&lt;/em&gt; often a few tens of Kelvin—leading to efficiencies around &lt;strong&gt;10×&lt;/strong&gt;, or 1000%!! &lt;em&gt;How can this possibly be true?&lt;/em&gt; It seems like a total cheat on nature.&lt;/p&gt;
&lt;p&gt;The key is that unlike an electric coil or a flame, the heat pump does not &lt;em&gt;create&lt;/em&gt; the thermal energy, it &lt;em&gt;moves&lt;/em&gt; thermal energy that already exists. A heat pump is always moving thermal energy from a cooler environment to a warmer one. That means that a heat pump heating a house in the winter is grabbing heat from outside and shoving it inside. This may seem counter-intuitive, but I assure you, even freezing air has plenty of thermal energy, being hundreds of degrees above absolute zero. Capturing some of that energy and moving it can take a lot less energy than creating it directly.&lt;/p&gt;
&lt;p&gt;One aspect of heat pump efficiency worthy of note is that the theoretical limit gets better as &lt;em&gt;ΔT&lt;/em&gt; gets smaller. So a refrigerator in a hot garage will not only have to work harder to maintain a larger &lt;em&gt;ΔT&lt;/em&gt;, but it becomes &lt;em&gt;less efficient&lt;/em&gt; at the same time, compounding the problem. Likewise, heat pumps operate more efficiently in mild-winter climates than in extreme arctic zones. For instance, the theoretical efficiency of a heat pump operating between 293 K indoors (20°C, or 68°F) and freezing outside is 293/20 = 14.7, while a frigid −20°C (−4°F) would only allow a theoretical efficiency of 7—half as good.&lt;/p&gt;
&lt;h2&gt;COP and EER&lt;/h2&gt;
&lt;p&gt;If shopping for heat pumps, one should look for the specification called the Coefficient of Performance, or COP, which is essentially the same &lt;em&gt;ε&lt;/em&gt; = &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;h&lt;/sub&gt;/&lt;em&gt;ΔW&lt;/em&gt; metric from before. Realized values are typically around 3–4. This is a factor of several below the theoretical limit, as is so often the case. But still, it’s &lt;strong&gt;rather impressive&lt;/strong&gt; to me that I can add 4 J of heat energy into my home while expending only 1 J to make it happen (apply any energy unit you wish: kWh, Btu, etc. and get the same 4:1 ratio for a COP=4).&lt;/p&gt;
&lt;p&gt;But before we get carried away, let’s say your electricity comes from natural gas turbines, converted to electricity at 40% efficiency (via a heat engine). Coupled with a heat pump achieving a COP of 3.5, each unit of energy injected at the natural gas plant yields 0.4×3.5 units of thermal energy in the home, for a net gain of 40% over just burning the gas directly in the home. I’ll take the gain, but the benefit goes from overwhelming to just plain whelming. If carbon intensity is your thing, then a heat-pump supplied with coal-fired electricity does worse than burning gas directly in a home furnace, since coal generates 70% more CO&lt;sub&gt;2&lt;/sub&gt; per unit of energy delivered than does gas, eating up the 40% margin previously detailed. We only get the full factor of 3.5 improvement if replacing &lt;em&gt;electric&lt;/em&gt; heat.&lt;/p&gt;
&lt;p&gt;For cooling applications, one may also see a COP reported. But in the U.S., the efficiency metric is often the Energy Efficiency ratio, or EER The EER. is a freak of nature, and I hope it asphyxiates on its own stupidity. It is the rate of heat extraction, in Btu/hr, divided by the electrical power supplied, in Watts. Geez—Btu/hr is already a power: 1 Btu/hr is 1055 J in 3600 s, or 0.293 J/s = 0.293 W. Why complicate things?! So multiply EER by 0.293 to get an apples-to-apples comparison, arriving at a COP for cooling that corresponds to our measure from before: &lt;em&gt;ε&lt;/em&gt; = −&lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;/&lt;em&gt;ΔW&lt;/em&gt;. Air conditioners getting EER values above about 11 qualify as Energy Star, corresponding to a COP above about 3.&lt;/p&gt;
&lt;h2&gt;My Fridge Performance&lt;/h2&gt;
&lt;p&gt;I had a thought that I could test the &amp;gt; 100% efficiency delivered by a heat pump by watching my fridge go through a defrost cycle. The idea is that a bunch of heat is dumped into the coils periodically to melt accumulated ice. I noticed that the first cooling cycle after the defrost is always longer, as the deposited heat must be removed.&lt;/p&gt;
&lt;p&gt;My fridge normally runs on an off-grid stand-alone photovoltaic (PV) system, and I record the system energy expenditures at 5 minute resolution. I see defrost cycles routinely in the data (every day or two). But because of the coarse sample rate and the indirectness of the measurement (measuring battery current, not AC power), I prefer to use TED (the energy detective) data, when available. During unusually cloudy periods, the PV system switches over to utility input, in which case the fridge is monitored by TED and I get one minute samples of direct AC power. One such sequence is shown for my fridge in October, 2011.&lt;/p&gt;
&lt;div id=&quot;attachment_1022&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020.png&quot;&gt;&lt;img class=&quot; wp-image-1022&quot; title=&quot;fridge-111020&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020-1024x768.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;438&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020-1024x768.png 1024w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020-300x225.png 300w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020-400x300.png 400w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-111020.png 1200w&quot; sizes=&quot;(max-width: 584px) 100vw, 584px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;A prominent defrost cycle consumed 155 Wh of energy. The energy and average power associated with each cooling cycle is also shown.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We can see in the figure above a baseload power of 108 W, two normal fridge cycles preceding the defrost pulse at 12:30 AM (and a partial cooling cycle on its leading edge). The first cooling cycle after the defrost deposit is obviously longer than the rest, and subsequent cycles may be slightly fatter and more frequent. The energy expenditure (above baseline) is reported for each cooling pulse in Watt-hours, as is the corresponding average cooling-cycle power measured from the start of one pulse to the start of the next.&lt;/p&gt;
&lt;p&gt;Performing a careful accounting for the energy expended while cooling vs. the energy deposited during defrost, and projecting the rate of power use prior to defrosting (43 W) forward, we find that we would have expected to spend 163 Wh over the time interval between the first cooling cycle and the last (the pre-cycles are 19.7 Wh each), but the actual expenditure cooling was 184 Wh, leaving an extra 21 Wh-worth of cooling (roughly equivalent to one extra cycle). Meanwhile, the defrost activity expended 155 Wh in 23 minutes (400 W). So it took 21 Wh of wall-plug energy in cooling mode to remove 155 Wh of deposited thermal energy, implying a coefficient of performance around 7.5!&lt;/p&gt;
&lt;p&gt;Impossibly high, methinks. One problem is that the defrost cycle puts energy into melting ice, which subsequently runs out to a drip pan below the refrigerator. So the refrigerator does not later need to remove this heat: it found another sort of exit. The heat of fusion barrier that must be overcome amounts to 334 J/g (compared to about 20 J/g to raise the temperature of water by 5°C, or ice by 10°C). If the defrost cycle produces two cupfuls of water (about a half-liter) each time, the investment is approximately 50 Wh of energy. This brings the COP estimate down to 5. Additionally, since time elapses after the defrost injection is complete, some portion of the heat no doubt diffuses out from the cold coils to the hot fins before the cooling kicks in.&lt;/p&gt;
&lt;p&gt;In retrospect, the defrost cycle is not the best way to experimentally determine the COP—despite the fact that the “experiment” runs all the time without my having to lift a finger.&lt;/p&gt;
&lt;h2&gt;A More deliberate Experiment&lt;/h2&gt;
&lt;p&gt;Taking matters into my own hands, I rigged an incandescent light bulb operating on a timer and stuffed in the fridge (in a clip-light fixture). I set the timer to pop the light on from 3AM to 4AM, figuring the fridge would be perfectly quiescent (no door openings, etc. during that time). A couple of long, tapered pieces of wood provided a channel for the cord without compromising the door seal. I shifted the fridge over to utility for the night so TED would catch the action. It took three times to get a good result. “When are you going to take that light out of the fridge?!”&lt;/p&gt;
&lt;h3&gt;Take One&lt;/h3&gt;
&lt;div id=&quot;attachment_1023&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic1.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1023&quot; title=&quot;fridge-pic1&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic1.jpg&quot; alt=&quot;&quot; width=&quot;428&quot; height=&quot;640&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic1.jpg 428w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic1-200x300.jpg 200w&quot; sizes=&quot;(max-width: 428px) 100vw, 428px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Initial location of light in upper left of refrigerator volume&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I placed the light high in the refrigerator, and shone the light onto aluminum foil on an otherwise empty glass shelf (the foil was to keep direct light off the food below). The data were beautifully collected, but the refrigerator stayed on the entire time the light was on. The bulb was rated at 60 W, and the refrigerator typically runs around 120 W, so instantly I knew the measurement indicated a COP less than 1. Not good.&lt;/p&gt;
&lt;p&gt;I presume the bulb was near enough to the thermostat as to elevate the local temperature and fool the refrigerator into staying on the full time. Bet the ice cream got rock hard…&lt;/p&gt;
&lt;h3&gt;Take Two&lt;/h3&gt;
&lt;div id=&quot;attachment_1024&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic2.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-1024&quot; title=&quot;fridge-pic2&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic2.jpg&quot; alt=&quot;&quot; width=&quot;428&quot; height=&quot;640&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic2.jpg 428w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-pic2-200x300.jpg 200w&quot; sizes=&quot;(max-width: 428px) 100vw, 428px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;This time, the light is lower in the fridge.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I moved the light to a lower portion of the refrigerator, hopefully well-enough baffled that the thermostat would not be impacted. This time, I was foiled by a sleepless wife, who turned on and off all manner of electrical devices during the course of the experiment. The refrigerator itself was not disturbed, and if pressed, I could still identify cooling cycles and extract useful data. Just like in astronomy, crummy nights produce crummy data, and you have to work much harder to get marginally useful results. Better to wait for a clear night, if you can. I could at least see that the fridge &lt;em&gt;cycled&lt;/em&gt; this time during the light-on phase.&lt;/p&gt;
&lt;h3&gt;Take Three&lt;/h3&gt;
&lt;p&gt;Fool me once, shame on you. Fool me twice, shame on me. Since the saying has no “thrice” aspect, I felt I had no choice but to make it work. Actually, I did nothing different (no straps to confine wife to bed—patience was already wearing thin on the interminable experiment in the refrigerator). But fortunately, a quiet night resulted in a clean dataset.&lt;/p&gt;
&lt;div id=&quot;attachment_1025&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb.png&quot;&gt;&lt;img class=&quot;size-large wp-image-1025&quot; title=&quot;fridge-bulb&quot; src=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb-1024x768.png&quot; alt=&quot;&quot; width=&quot;584&quot; height=&quot;438&quot; srcset=&quot;https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb-1024x768.png 1024w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb-300x225.png 300w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb-400x300.png 400w, https://dothemath.ucsd.edu/wp-content/uploads/2012/06/fridge-bulb.png 1200w&quot; sizes=&quot;(max-width: 584px) 100vw, 584px&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Light pulse demanded more cooling. Note coincidental defrost at end.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The bulb turned out to expend energy at a rate of 52 W. Subtracting a baseload of 44 W, the first five cycles averaged 35.4 W to keep the fridge cold. The light bulb was on for a bit over 56 minutes, depositing 49 Wh of energy. From the time the light bulb came on until the end of the last cooling pulse before the defrost cycle began (spanning 131 minutes), five cycles totaled 57 minutes of on-time, using 113 Wh of electrical energy. Yet we would have expected 35.4×131/60 = 77 Wh at the nominal rate. Thus the refrigerator consumed an extra 36 Wh of energy to remove the 49 Wh deposited by the light. We calculate a COP of &lt;em&gt;ΔQ&lt;/em&gt;&lt;sub&gt;c&lt;/sub&gt;/&lt;em&gt;ΔW&lt;/em&gt; = 49/36 = 1.36.&lt;/p&gt;
&lt;p&gt;Hmmm. Not in the ballpark of 3. It’s bigger than 1, at least—indicating &lt;em&gt;some&lt;/em&gt; degree of heat-pump magic. But I am disappointed in the result.&lt;/p&gt;
&lt;h3&gt;Reflections on the Experiments&lt;/h3&gt;
&lt;p&gt;My mode of testing certainly deviated from the intended operation of refrigerators. A concentrated pulse of constant heat is not &lt;em&gt;quite&lt;/em&gt; the same as putting warm food into the refrigerator. It may also be that the freezer achieves a COP around 3 while the refrigerator volume does not. I would be curious to know how the COP is actually measured. Do we realize similar values in daily operation? After all, the light bulb test fell short. If I average the ice-melt-corrected defrost value and the light bulb value, I get a COP around 3, but I have no solid justification for performing this average.&lt;/p&gt;
&lt;p&gt;Alternative tests may include placing a known thermal mass into the refrigerator and seeing how much energy is required to bring it to temperature. Door access is a problem, though.&lt;/p&gt;
&lt;h2&gt;Close the Door!&lt;/h2&gt;
&lt;p&gt;While I’m on the subject of refrigerators, how about a quick detour to assess how problematic it is to stand with the door open, or to repeatedly and inefficiently access items within. Should I be irked?&lt;/p&gt;
&lt;p&gt;Let’s say the inner refrigerator volume is half a cubic meter (about 17 cubic feet; American freezer + fridge often are in the low 20’s). Air has a specific heat capacity of 1000 J/kg/K. At a density of 1.2 kg/m³, we’re talking 0.6 kg of air, total. And let’s assume a &lt;em&gt;ΔT&lt;/em&gt; of 20 K between ambient air and fridge air.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;complete&lt;/em&gt; air exchange then costs 12 kJ (3.3 Wh). Even at a COP of 1.0, the refrigerator will remove this amount of energy in 100 seconds at a power of 120 W. It’s a tiny fraction of the daily work of the refrigerator: 0.3%.&lt;/p&gt;
&lt;p&gt;A more serious problem is condensation. If the outside air is saturated (100% humidity), containing about 20 g/m³ of water, we deposit 10 g into the fridge. The latent heat of vaporization means that 2257 J are deposited for every gram of water condensing, plus about 800 J to cool the water down. In total, we drop another 23 kJ (6.5 Wh) of energy into the fridge.&lt;/p&gt;
&lt;p&gt;So depending on how moist the air is, we may drop anywhere from 12–35 kJ. Our 0.3% becomes a 1% effect. Open the fridge 20 times in a day, and you might have a significant issue.&lt;/p&gt;
&lt;p&gt;Another consideration is that each door opening may trip the thermostat before it ordinarily would have been. In doing so, the cooling “schedule” advances forward, and could result in more “on” activity than would otherwise occur.&lt;/p&gt;
&lt;h2&gt;Parting Perspective&lt;/h2&gt;
&lt;p&gt;Heat pumps are really cool, and seem to violate our sense that 100% is the best efficiency we can ever get. Cooling applications have little choice but to use heat pumps, as cooling inevitably involves getting rid of (moving; pumping) thermal energy. Heating applications can see a factor of three or more increase in efficiency over direct heating.  Increasingly, the stable thermal mass of the ground is used as the “bath”—often erroneously referred to as geothermal.&lt;/p&gt;
&lt;p&gt;So I’m generally a fan of seeing more use of heat pumps. Replacing direct electrical heating with a heat pump is a clear win. Replacing a gas furnace with a heat pump is a marginal win if your electricity comes from gas; not so much for coal-derived electricity. But heat pumps pave the way for efficient use of renewable energy sources, like solar or wind. In this sense, getting away from gas furnaces while promoting non-fossil electricity generation may be the best ticket—especially when coupled with concerns over global warming.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 13:26:41 +0000</pubDate>
<dc:creator>mhb</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dothemath.ucsd.edu/2012/06/heat-pumps-work-miracles/</dc:identifier>
</item>
</channel>
</rss>