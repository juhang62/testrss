<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>35-year-old vulnerability discovered in scp</title>
<link>https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt</link>
<guid isPermaLink="true" >https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;47&quot;&gt;
&lt;p&gt;scp client multiple vulnerabilities =================================== The latest version of this advisory is available at: https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt Overview -------- SCP clients from multiple vendors are susceptible to a malicious scp server performing unauthorized changes to target directory and/or client output manipulation. Description ----------- Many scp clients fail to verify if the objects returned by the scp server match those it asked for. This issue dates back to 1983 and rcp, on which scp is based. A separate flaw in the client allows the target directory attributes to be changed arbitrarily. Finally, two vulnerabilities in clients may allow server to spoof the client output. Impact ------ Malicious scp server can write arbitrary files to scp target directory, change the target directory permissions and to spoof the client output. Details ------- The discovered vulnerabilities, described in more detail below, enables the attack described here in brief. 1. The attacker controlled server or Man-in-the-Middle(*) attack drops .bash_aliases file to victim's home directory when the victim performs scp operation from the server. The transfer of extra files is hidden by sending ANSI control sequences via stderr. For example: user@local:~$ scp user@remote:readme.txt . readme.txt 100% 494 1.6KB/s 00:00 user@local:~$ 2. Once the victim launches a new shell, the malicious commands in .bash_aliases get executed. *) Man-in-the-Middle attack does require the victim to accept the wrong host fingerprint. Vulnerabilities --------------- 1. CWE-20: scp client improper directory name validation [CVE-2018-20685] The scp client allows server to modify permissions of the target directory by using empty (&quot;D0777 0 \n&quot;) or dot (&quot;D0777 0 .\n&quot;) directory name. 2. CWE-20: scp client missing received object name validation [CVE-2019-6111] Due to the scp implementation being derived from 1983 rcp [1], the server chooses which files/directories are sent to the client. However, scp client only perform cursory validation of the object name returned (only directory traversal attacks are prevented). A malicious scp server can overwrite arbitrary files in the scp client target directory. If recursive operation (-r) is performed, the server can manipulate subdirectories as well (for example overwrite .ssh/authorized_keys). The same vulnerability in WinSCP is known as CVE-2018-20684. 3. CWE-451: scp client spoofing via object name [CVE-2019-6109] Due to missing character encoding in the progress display, the object name can be used to manipulate the client output, for example to employ ANSI codes to hide additional files being transferred. 4. CWE-451: scp client spoofing via stderr [CVE-2019-6110] Due to accepting and displaying arbitrary stderr output from the scp server, a malicious server can manipulate the client output, for example to employ ANSI codes to hide additional files being transferred. Proof-of-Concept ---------------- Proof of concept malicious scp server will be released at a later date. Vulnerable versions ------------------- The following software packages have some or all vulnerabilities: ver #1 #2 #3 #4 OpenSSH scp &amp;lt;=7.9 x x x x PuTTY PSCP ? - - x x WinSCP scp mode &amp;lt;=5.13 - x - - Tectia SSH scpg3 is not affected since it exclusively uses sftp protocol. Mitigation ---------- 1. OpenSSH 1.1 Switch to sftp if possible 1.2 Alternatively apply the following patch to harden scp against most server-side manipulation attempts: https://sintonen.fi/advisories/scp-name-validator.patch NOTE: This patch may cause problems if the the remote and local shells don't agree on the way glob() pattern matching works. YMMV. 2. PuTTY 2.1 No fix is available yet 3. WinSCP 3.1. Upgrade to WinSCP 5.14 or later Similar or prior work --------------------- 1. CVE-2000-0992 - scp overwrites arbitrary files References ---------- 1. https://www.jeffgeerling.com/blog/brief-history-ssh-and-remote-access Issue tracking -------------- Arch Linux https://security.archlinux.org/CVE-2018-20685 Debian GNU/Linux https://security-tracker.debian.org/tracker/CVE-2019-6111 https://security-tracker.debian.org/tracker/CVE-2018-20685 https://security-tracker.debian.org/tracker/CVE-2019-6109 https://security-tracker.debian.org/tracker/CVE-2019-6110 Red Hat Linux https://access.redhat.com/security/cve/cve-2019-6111 https://access.redhat.com/security/cve/cve-2018-20685 https://access.redhat.com/security/cve/cve-2019-6109 https://access.redhat.com/security/cve/cve-2019-6110 SUSE Linux https://www.suse.com/security/cve/CVE-2019-6111 https://www.suse.com/security/cve/CVE-2018-20685 https://www.suse.com/security/cve/CVE-2019-6109 https://www.suse.com/security/cve/CVE-2019-6110 Ubuntu https://people.canonical.com/~ubuntu-security/cve/2018/CVE-2018-20685.html WinSCP https://www.cvedetails.com/cve/CVE-2018-20684 Credits ------- These vulnerabilities were discovered by Harry Sintonen / F-Secure Corporation. Timeline -------- 2018.08.08 initial discovery of vulnerabilities #1 and #2 2018.08.09 reported vulnerabilities #1 and #2 to OpenSSH 2018.08.10 OpenSSH acknowledged the vulnerabilities 2018.08.14 discovered &amp;amp; reported vulnerability #3 to OpenSSH 2018.08.15 discovered &amp;amp; reported vulnerability #4 to OpenSSH 2018.08.30 reported PSCP vulnerabilities (#3 and #4) to PuTTY developers 2018.08.31 reported WinSCP vulnerability (#2) to WinSCP developers 2018.09.04 WinSCP developers reported the vulnerability #2 fixed 2018.11.12 requested a status update from OpenSSH 2018.11.16 OpenSSH fixed vulnerability #1 2019.01.07 requested a status update from OpenSSH 2019.01.08 requested CVE assignments from MITRE 2019.01.10 received CVE assignments from MITRE 2019.01.11 public disclosure of the advisory 2019.01.14 added a warning about the potential issues caused by the patch 2019.01.15 added issue tracking section (Arch, Debian, Red Hat, SUSE, Ubuntu) 2019.01.15 fixed patch for BROKEN_ONE_BYTE_DIRENT_D_NAME&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 15 Jan 2019 06:55:26 +0000</pubDate>
<dc:creator>runn1ng</dc:creator>
<dc:format>text/plain</dc:format>
<dc:identifier>https://sintonen.fi/advisories/scp-client-multiple-vulnerabilities.txt</dc:identifier>
</item>
<item>
<title>Porting 30K lines of code from Flow to TypeScript</title>
<link>https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/</link>
<guid isPermaLink="true" >https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/</guid>
<description>&lt;h4 id=&quot;werecentlyportedmemsqlstudios30thousandlinesofjavascriptfromusingflowtotypescriptinthisarticleidescribewhyweportedourcodebasehowittookplaceandhowithasbeenworkingoutforus&quot;&gt;We recently ported &lt;a href=&quot;https://www.memsql.com/manage/&quot;&gt;MemSQL Studio&lt;/a&gt;'s 30 thousand lines of JavaScript from using Flow to TypeScript. In this article, I describe why we ported our codebase, how it took place and how it has been working out for us.&lt;/h4&gt;&lt;hr/&gt;&lt;p&gt;&lt;em&gt;&lt;em&gt;Disclaimer: my goal with this blog post is not to condemn Flow or usage of Flow. I highly admire the project, and I think that there is enough space in the JavaScript community for both type checkers. At the end of the day, each team should study all their options and pick what's best for them. I sincerely hope this article helps you with that choice.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Let's start by setting some context. At &lt;a href=&quot;https://www.memsql.com/&quot;&gt;MemSQL&lt;/a&gt;, we are big fans of statically and strongly typing our JavaScript code in order to avoid common issues with dynamic and weak typing such as:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Runtime type errors due to different parts of the code not agreeing on implicit type contracts.&lt;/li&gt;
&lt;li&gt;Too much time spent writing tests for trivial things such as parameter type checking (runtime type checking also increases bundle size).&lt;/li&gt;
&lt;li&gt;Lacking editor/IDE integration, because, without static types, it's much harder to get jump-to-definition, mechanical refactoring and other features.&lt;/li&gt;
&lt;li&gt;Being able to write code around data models, which means that we can design our data types first and then our code will basically just &quot;write itself&quot;.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;These are just some of the advantages of static typing, I describe a few more in &lt;a href=&quot;https://davidgom.es/what-i-wish-i-had-known-before-starting-to-use-flow/&quot;&gt;a recent blog post about Flow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In early 2016, we started using &lt;a href=&quot;https://github.com/gcanti/tcomb&quot;&gt;tcomb&lt;/a&gt; to ensure some runtime type safety in one of our internal JavaScript projects (disclaimer: I was not a part of that project). While runtime type checking is sometimes useful, it doesn't doesn't even begin to scratch the power of static typing. With that in mind, we decided to start using &lt;a href=&quot;https://flow.org/&quot;&gt;Flow&lt;/a&gt; for another project we started in 2016. At the time, Flow was a great choice because:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backed by Facebook which has done an amazing job at growing React and the React community (they also develop React &lt;em&gt;using&lt;/em&gt; Flow).&lt;/li&gt;
&lt;li&gt;We didn't have to buy into an entirely new ecosystem of JavaScript development. Dropping &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; for tsc (TypeScript compiler) was scary because it wouldn't give us the flexibility to switch to Flow or another type checker in the future (obviously this has changed since then).&lt;/li&gt;
&lt;li&gt;We didn't have to type our entire codebase (we wanted to get a feel for statically typed JavaScript before we went all-in), but rather we could just type a subset of the files. Note that both Flow and TypeScript allow you to do this nowadays.&lt;/li&gt;
&lt;li&gt;TypeScript (at the time) was lacking some basic features that Flow already supported such as &lt;a href=&quot;https://blog.mariusschulz.com/2017/01/06/typescript-2-1-keyof-and-lookup-types&quot;&gt;lookup types&lt;/a&gt;, &lt;a href=&quot;https://blog.mariusschulz.com/2017/06/02/typescript-2-3-generic-parameter-defaults&quot;&gt;generic parameter defaults&lt;/a&gt; and others.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When we started working on &lt;a href=&quot;https://docs.memsql.com/memsql-studio/latest/memsql-studio-overview/&quot;&gt;MemSQL Studio&lt;/a&gt; in late 2017, we set out to achieve full type coverage across the entire application (all of it is written in JavaScript and both the frontend and backend run inside the browser). We decided to use Flow as that's what we had been successfully using in the past.&lt;/p&gt;
&lt;p&gt;However, &lt;a href=&quot;https://babeljs.io/blog/2018/08/27/7.0.0#typescript-support-babel-preset-typescript&quot;&gt;Babel 7 being released with TypeScript support&lt;/a&gt; definitely got my attention. This release meant that adopting TypeScript no longer meant buying into the entire TypeScript ecosystem and that we could keep using Babel to emit JavaScript. More importantly, this meant that we could actually &lt;strong&gt;use TypeScript as a type checker&lt;/strong&gt;, and not so much as a &quot;language&quot; per se.&lt;/p&gt;
&lt;p&gt;Personally, I consider that separating the type checker from the emitter is a more elegant way of achieving static (and strong) typing in JavaScript because:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It's a good idea to have some separation of concerns between what emits ES5 and what does type checking. This allows for less lock-in around type checkers and it accelerates development speed (if the type checker is slow for whatever reason, your code will be emitted right way).&lt;/li&gt;
&lt;li&gt;Babel has amazing plugins and great features that TypeScript's emitter doesn't have. As an example, Babel allows you to specify which browsers you want to support and it will automatically emit code that is valid on those browsers. This is very complicated to implement and it makes more sense to only have Babel implement it instead of duplicating this effort in the community in two different projects.&lt;/li&gt;
&lt;li&gt;I like JavaScript as a programming language (besides the lack of static typing) and I have no idea how long TypeScript will be around for, whereas I trust that ECMAScript will be around for a good while. For this reason, I prefer to keep writing and &quot;thinking&quot; in JavaScript. (Note that I always say &quot;using Flow&quot; or &quot;using TypeScript&quot; instead of &quot;in Flow&quot; or &quot;in TypeScript&quot; because I always think about them as tools and not programming languages).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;There are some downsides to this approach of course:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The TypeScript compiler could theoretically perform bundle optimizations based on types and you are missing on that by having a separate emitter and type checker.&lt;/li&gt;
&lt;li&gt;Project configuration becomes a bit more complicated when you have more tools and development dependencies. I think this is a weaker argument than most people make of it because having both Babel + Flow was never a source of configuration issues in our projects.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;investigatingtypescriptasanalternativetoflow&quot;&gt;Investigating TypeScript as an alternative to Flow&lt;/h3&gt;
&lt;p&gt;I had been noticing a growing interest in TypeScript in both online and local JavaScript communities. As such, when I first found out that Babel 7 supported TypeScript, I started investigating a potential move away from Flow. On top of this, we had encountered various frustrations with Flow:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Lower quality editor/IDE integrations (when compared to TypeScript). Nuclide (Facebook's own IDE which had the best Flow integration) &lt;a href=&quot;https://twitter.com/fbOpenSource/status/1072928679695548416&quot;&gt;being deprecated&lt;/a&gt; did not help.&lt;/li&gt;
&lt;li&gt;Smaller community and therefore fewer and overall lower quality type definitions for various libraries (more on this later).&lt;/li&gt;
&lt;li&gt;Lack of a public roadmap and little interaction between the Flow team at Facebook and the community. You can read &lt;a href=&quot;https://github.com/facebook/flow/issues/6833#issuecomment-418608253&quot;&gt;this comment&lt;/a&gt; by a Facebook employee for some more details.&lt;/li&gt;
&lt;li&gt;High memory consumption and frequent memory leaks — various engineers in our team have experienced Flow taking up almost 10 gigabytes of RAM every now and then.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Of course, we also had to research whether TypeScript was sufficient for us. This was very complicated, but it involved a thorough reading of the documentation that helped us figure out that every feature in Flow has an equivalent in TypeScript. I then investigated &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap&quot;&gt;the TypeScript public roadmap&lt;/a&gt; and was extremely delighted with the features that lay ahead (e.g. &lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/26349&quot;&gt;partial type argument inference&lt;/a&gt; which is a feature we used in Flow).&lt;/p&gt;
&lt;h3 id=&quot;porting30klinesofcodefromflowtotypescript&quot;&gt;Porting 30K+ lines of code from Flow to TypeScript&lt;/h3&gt;
&lt;p&gt;The first step to &lt;em&gt;actually&lt;/em&gt; porting all of our code from using Flow to TypeScript was to upgrade Babel from 6 to 7. This was somewhat straightforward but it took us around 2 engineer days since we decided to also upgrade Webpack 3 to 4 at the same time. Since we have some legacy dependencies vendored in our source code, this was harder than it should be for the vast majority of JavaScript projects.&lt;/p&gt;
&lt;p&gt;After this was done, we were able to replace Babel's Flow preset with the new TypeScript preset and then run the TypeScript compiler for the very first time against our full source code written using Flow. It resulted in &lt;strong&gt;8245 syntax errors&lt;/strong&gt; (the tsc CLI doesn't give you the real errors for the full project until you have 0 syntax errors).&lt;/p&gt;
&lt;p&gt;This number scared us (a lot) at first but we quickly figured out that most of these were related to TypeScript not supporting .js files. After some investigation, I found out that TypeScript files have to end in either &quot;.ts&quot; or &quot;.tsx&quot; (if they have JSX in them). I don't want to think about whether a new file I'm creating should have a &quot;.ts&quot; or &quot;.tsx&quot; extension and I think that's a poor developer experience. For that reason, I just renamed every single to &quot;.tsx&quot; (ideally all of our files would have a &quot;.js&quot; extension like in Flow, but I would also be okay with &quot;.ts&quot;).&lt;/p&gt;
&lt;p&gt;After that change, we had around 4000 syntax errors. Most of them were related to &lt;a href=&quot;https://flow.org/blog/2015/02/18/Import-Types/&quot;&gt;import type&lt;/a&gt; which can be replaced with just &quot;import&quot; using TypeScript and also sealed object notation in Flow (&lt;code&gt;{||}&lt;/code&gt; vs &lt;code&gt;{}&lt;/code&gt;). After a couple of quick RegExes, we were down to 414 syntax errors. The rest of them all had to be manually fixed:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;a href=&quot;https://flow.org/en/docs/types/utilities/#toc-existential-type&quot;&gt;existential type&lt;/a&gt; that we use for partial generic type argument inference had to be replaced with explicitly naming the various type arguments or &lt;a href=&quot;https://stackoverflow.com/a/53849968/996056&quot;&gt;using the unknown type&lt;/a&gt; to tell TypeScript that we don't care about some of the type arguments.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://flow.org/en/docs/types/utilities/#toc-keys&quot;&gt;$Keys&lt;/a&gt; type and other Flow advanced types have a &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/advanced-types.html&quot;&gt;different syntax&lt;/a&gt; in TypeScript (e.g. &lt;code&gt;$Shape&amp;lt;&amp;gt;&lt;/code&gt; corresponds to &lt;code&gt;Partial&amp;lt;&amp;gt;&lt;/code&gt; in TypeScript).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;After all the syntax errors were fixed, tsc (the TypeScript compiler) finally told us how many real type errors our codebase had — just around 1300. This is when we had to sit down and decide whether it made sense to keep going or not. After all, if it would take us weeks of development time, it could not be worth it to go forward with the port. However, we figured it should take us less than 1 week of a single engineer's time to perform the port, so we charged ahead.&lt;/p&gt;
&lt;p&gt;Note that during the transition, we had to stop other work on this codebase. However, it should be possible to contribute new work in parallel to such a port — but you'll have to work on top of potentially hundreds of type errors, which will not be an easy feat.&lt;/p&gt;
&lt;h3 id=&quot;whatwereallthesetypeerrors&quot;&gt;What were all these type errors?&lt;/h3&gt;
&lt;p&gt;TypeScript and Flow make different assumptions about many different things, which in practice means that they let your JavaScript code do different things. Flow is more strict about some things, and TypeScript is more strict about other things. A full in-depth comparison between the two type checkers would be really long, so in this blog post we'll just study some examples.&lt;/p&gt;
&lt;p&gt;Note: all the &lt;a href=&quot;http://www.typescriptlang.org/play/&quot;&gt;TypeScript playground&lt;/a&gt; links in this article assume that all the &quot;strict&quot; settings have been turned on, but unfortunately when you share a TypeScript playground link, those settings are not saved in the URL. For this reason, you have to manually set them when you open any TypeScript playground link from this article.&lt;/p&gt;
&lt;h4 id=&quot;invariantjs&quot;&gt;invariant.js&lt;/h4&gt;
&lt;p&gt;A very common function in our source code is the &lt;code&gt;invariant&lt;/code&gt; function. I can't explain it any better than the &lt;a href=&quot;https://github.com/zertosh/invariant#invariantcondition-message&quot;&gt;documentation&lt;/a&gt; does, so I'll just quote it here:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;var invariant = require('invariant');

invariant(someTruthyVal, 'This will not throw');
// No errors

invariant(someFalseyVal, 'This will throw an error with this message');
// Error raised: Invariant Violation: This will throw an error with this message
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The idea is very simple — a simple function that will potentially throw an error based on some condition. Let's see how we could &lt;a href=&quot;https://flow.org/try/#0C4TwDgpgBAsghiARhAPAFQHxQLxTVAHygDcB7ASwBMBuAKFoDMBXAOwGNhzSWpyXi4AJ3JwWwABRtulcp24AuKIlKkANhFEAaKAFsIAZ31wA5hEX7gwlsYCUUAN60ovBlHEBCKSxlyWdx87OwAAWgqQA7lAsEJEAooJhguJ6hiYQNnTOAL60OYysHFw8DOIAHorwSKgsTDrIghjabIo1dRCC-k4ubmxQWAAMnYG8-EIiYmVQ7ti4rJQQDHwQlNoARADqwRA8veT6UGCk+rLkxBDapVD6waRMqpRREGeCStBzC0uUqxn0w5MA1FAAIwZKAAejBUHCpEEAGt9sg2HAmPpoJdgnAERBtlBBB9og9gKQoKtWvVVl0clkgA&quot;&gt;implement it and use it&lt;/a&gt; with Flow:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;type Maybe&amp;lt;T&amp;gt; = T | void;

function invariant(condition: boolean, message: string) {
  if (!condition) {
    throw new Error(message);
  }
}

function f(x: Maybe&amp;lt;number&amp;gt;, c: number) {
  if (c &amp;gt; 0) {
    invariant(x !== undefined, &quot;When c is positive, x should never be undefined&quot;);

    (x + 1); // works because x has been refined to &quot;number&quot;
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now let's run the &lt;a href=&quot;http://www.typescriptlang.org/play/#src=type%20Maybe%3CT%3E%20%3D%20T%20%7C%20void%3B%0D%0A%0D%0Afunction%20invariant(condition%3A%20boolean%2C%20message%3A%20string)%20%7B%0D%0A%20%20if%20(!condition)%20%7B%0D%0A%20%20%20%20throw%20new%20Error(message)%3B%0D%0A%20%20%7D%0D%0A%7D%0D%0A%0D%0Afunction%20f(x%3A%20Maybe%3Cnumber%3E%2C%20c%3A%20number)%20%7B%0D%0A%20%20if%20(c%20%3E%200)%20%7B%0D%0A%20%20%20%20invariant(x%20!%3D%3D%20undefined%2C%20%22When%20c%20is%20positive%2C%20x%20should%20never%20be%20undefined%22)%3B%0D%0A%0D%0A%20%20%20%20(x%20%2B%201)%3B%20%2F%2F%20works%20because%20x%20has%20been%20refined%20to%20%22number%22%0D%0A%20%20%7D%0D%0A%7D&quot;&gt;exact same snippet through TypeScript&lt;/a&gt;. As you can see in the link, we get an error from TypeScript since it can't figure out that &quot;x&quot; is actually guaranteed to not be &lt;code&gt;undefined&lt;/code&gt; on the last line. This is actually a &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/19066&quot;&gt;known issue&lt;/a&gt; with TypeScript — it can't perform this type of inference through a function (yet). However, since it's a very common pattern in our code base, we had to replace every instance of invariant (over 150 of them) with more manual code that just throws an error in-place:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;type Maybe&amp;lt;T&amp;gt; = T | void;

function f(x: Maybe&amp;lt;number&amp;gt;, c: number) {
  if (c &amp;gt; 0) {
    if (x === undefined) {
      throw new Error(&quot;When c is positive, x should never be undefined&quot;);
    }

    (x + 1); // works because x has been refined to &quot;number&quot;
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is not as nice as &lt;code&gt;invariant&lt;/code&gt; but it's not a huge deal either.&lt;/p&gt;
&lt;h4 id=&quot;expecterrorvstsignore&quot;&gt;$ExpectError vs @ts-ignore&lt;/h4&gt;
&lt;p&gt;Flow has a very interesting feature that is similar to &lt;code&gt;@ts-ignore&lt;/code&gt; except that it will error if the next line is &lt;strong&gt;not&lt;/strong&gt; an error. This is very useful for writing &quot;type tests&quot; which are tests that ensure that our type checker (be it TypeScript or Flow) is finding certain type errors that we want it to find.&lt;/p&gt;
&lt;p&gt;Unfortunately, TypeScript does not have this feature which means that our type tests lost some value. It's something that &lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/29394&quot;&gt;I'm looking forward&lt;/a&gt; to TypeScript implementing.&lt;/p&gt;
&lt;h4 id=&quot;generaltypeerrorsandtypeinference&quot;&gt;General Type Errors and Type Inference&lt;/h4&gt;
&lt;p&gt;Often times, TypeScript can be more explicit than Flow as in &lt;a href=&quot;http://www.typescriptlang.org/play/#src=type%20Leaf%20%3D%20%7B%0D%0A%20%20host%3A%20string%3B%0D%0A%20%20port%3A%20number%3B%0D%0A%20%20type%3A%20%22LEAF%22%3B%0D%0A%7D%3B%0D%0A%0D%0Atype%20Aggregator%20%3D%20%7B%0D%0A%20%20host%3A%20string%3B%0D%0A%20%20port%3A%20number%3B%0D%0A%20%20type%3A%20%22AGGREGATOR%22%3B%0D%0A%7D%0D%0A%0D%0Atype%20MemsqlNode%20%3D%20Leaf%20%7C%20Aggregator%3B%0D%0A%0D%0Afunction%20f(leaves%3A%20Array%3CLeaf%3E%2C%20aggregators%3A%20Array%3CAggregator%3E)%3A%20Array%3CMemsqlNode%3E%20%7B%0D%0A%20%20return%20leaves.concat(aggregators)%3B%0D%0A%7D&quot;&gt;this example&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;type Leaf = {
  host: string;
  port: number;
  type: &quot;LEAF&quot;;
};

type Aggregator = {
  host: string;
  port: number;
  type: &quot;AGGREGATOR&quot;;
}

type MemsqlNode = Leaf | Aggregator;

function f(leaves: Array&amp;lt;Leaf&amp;gt;, aggregators: Array&amp;lt;Aggregator&amp;gt;): Array&amp;lt;MemsqlNode&amp;gt; {
  // The next line errors because you cannot concat aggregators to leaves.
  return leaves.concat(aggregators);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Flow &lt;a href=&quot;https://flow.org/try/#0C4TwDgpgBAMhCGAzKBeKBvAPgKClAFgPYDOwAXFKQE4CWAdgOYDcuUYhV5UdArgLYAjCFRZ5QkCgCIYAUQCCAMUktMAXxbZx0OQwZUIDeMA6oMOPEVIVq9Zq3acKvQcNFQtUuQHEvAJRlecgAqAPK+ythqGlpQALIQfMQAjgA2AHKEACbQaHBIUJhQOnoGRhwaiDx0AMbANIR0UIgAFCkIAG4QxBRyVFTwIAA8eYgAfAA0UPC6+obGVN1FfQODxbNlVKMAlD3LQ-GJqRnZoxis1Q2k3Fldpm3wncQAdBc1Rs3TJXMcxFturPpgDwqI17o8Xg1qu9Put5r8WKogA&quot;&gt;infers the type of leaves.concat(aggregators) to be Array&amp;lt;Leaf | Aggregator&amp;gt;&lt;/a&gt; which can then be cast to &lt;code&gt;Array&amp;lt;MemsqlNode&amp;gt;&lt;/code&gt;. I think this is a good example of how sometimes Flow can be a little smarter whereas TypeScript sometimes needs a little bit of help (we can use a &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/basic-types.html&quot;&gt;type assertion&lt;/a&gt; to help TypeScript in this case, but using type assertions is dangerous and should be done very carefully).&lt;/p&gt;
&lt;p&gt;Even though I have no formal proof that allows me to state this, I consider Flow to be quite superior to TypeScript around type inference. I'm very hopeful that TypeScript will get to Flow's level seen as it is very actively developed and many recent improvements to TypeScript were in this exact area. Throughout many parts of our source code, we had to give TypeScript a bit of help via annotations or type assertions (&lt;a href=&quot;https://basarat.gitbooks.io/typescript/docs/types/type-assertion.html#assertion-considered-harmful&quot;&gt;we avoided type assertions&lt;/a&gt; as much as possible). Let's look at &lt;a href=&quot;http://www.typescriptlang.org/play/#src=type%20Player%20%3D%20%7B%0D%0A%20%20%20%20name%3A%20string%3B%0D%0A%20%20%20%20age%3A%20number%3B%0D%0A%20%20%20%20position%3A%20%22STRIKER%22%20%7C%20%22GOALKEEPER%22%2C%0D%0A%7D%3B%0D%0A%0D%0Atype%20F%20%3D%20()%20%3D%3E%20Promise%3CArray%3CPlayer%3E%3E%3B%0D%0A%0D%0Aconst%20f1%3A%20F%20%3D%20()%20%3D%3E%20%7B%0D%0A%20%20%20%20return%20Promise.all(%5B%0D%0A%20%20%20%20%20%20%20%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20%22David%20Gomes%22%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20age%3A%2023%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20position%3A%20%22GOALKEEPER%22%2C%0D%0A%20%20%20%20%20%20%20%20%7D%2C%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20name%3A%20%22Cristiano%20Ronaldo%22%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20age%3A%2033%2C%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20position%3A%20%22STRIKER%22%2C%0D%0A%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%5D)%3B%0D%0A%7D%3B&quot;&gt;one more example&lt;/a&gt; (we had perhaps over 200 instances of this type error):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;type Player = {
    name: string;
    age: number;
    position: &quot;STRIKER&quot; | &quot;GOALKEEPER&quot;,
};

type F = () =&amp;gt; Promise&amp;lt;Array&amp;lt;Player&amp;gt;&amp;gt;;

const f1: F = () =&amp;gt; {
    return Promise.all([
        {
            name: &quot;David Gomes&quot;,
            age: 23,
            position: &quot;GOALKEEPER&quot;,
        }, {
            name: &quot;Cristiano Ronaldo&quot;,
            age: 33,
            position: &quot;STRIKER&quot;,
        }
    ]);
};
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;TypeScript will not let you write this because it can't let you cast &lt;code&gt;{ name: &quot;David Gomes&quot;, age: 23, type: &quot;GOALKEEPER&quot; }&lt;/code&gt; as an object of type &lt;code&gt;Player&lt;/code&gt; (open the Playground link to see the exact error). This is another instance where I consider TypeScript to not be &quot;smart enough&quot; (at least when compared to Flow &lt;a href=&quot;https://flow.org/try/#0C4TwDgpgBACgNgQxBATlAvFA3gHwFBSFQB2CAthAFxQDOwKAlsQOYDcBRCzVJArmQCNU7IlFCRqAIgDKAFQBKASQDSAUXmSoOKJIDiAeQCCAGTWqY6yQBo8OAL7s846ADEM2DoQrAAFgHsAE2oACgBKDAA+WBQ-MgYaCAAeQxQUJET4JFQIiPYHPDwAYz9iOigAMwBGajdMLE8ob38gqDDIj1FRFAhgXhRiaNj4iAA6BDg4YIBtBs6iernFolIKKQARBAA3BgCoXViIGmtZpc5uagAmAGYbU8XnKQMTMwsNW7uoOysFj9EVnkkG22u32FCO71+hC4PGuEMhDx0T1MqnMljhSzsJ0IAF1QiIiF88PkgA&quot;&gt;which understands this code&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In order to make this work, you have a few options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Assert &quot;STRIKER&quot; as &quot;STRIKER&quot; so that TypeScript understands that the string is a valid enum of type &lt;code&gt;&quot;STRIKER&quot; | &quot;GOALKEEPER&quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Assert the entire objects &lt;code&gt;as Player&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Or what I consider to be the best solution, just help TypeScript without using any type assertions by writing &lt;code&gt;Promise.all&amp;lt;Player&amp;gt;(...)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Another example is &lt;a href=&quot;http://www.typescriptlang.org/play/#src=type%20Connection%20%3D%20%7B%20id%3A%20number%20%7D%3B%0D%0A%0D%0Adeclare%20function%20getConnection()%3A%20Connection%3B%0D%0A%0D%0Afunction%20resolveConnection()%20%7B%0D%0A%20%20return%20new%20Promise(resolve%20%3D%3E%20%7B%0D%0A%20%20%20%20return%20resolve(getConnection())%3B%0D%0A%20%20%7D)%0D%0A%7D%0D%0A%0D%0AresolveConnection().then(conn%20%3D%3E%20%7B%0D%0A%20%20(conn.id)%3B%0D%0A%7D)&quot;&gt;the following&lt;/a&gt; (TypeScript), where &lt;a href=&quot;https://flow.org/try/#0C4TwDgpgBAwg9gOwRAxsAloqBeKBvKdAEwC4oEBXAWwCMIAnKAXwG4AoNo1AGwEN7oAMwoI0mBFADmEYPCSoMiABQBKMnORjE7NsNGKJAgM5xuANwgaF41fjZQoA4BXoTkAdygAFenCrojCCVjUwscAD47BwcnF0MIE3Mg6VlETQNVFXYHJhU2Jg4QpKstBFUAOmAACwgylDSIqKgleqRy4iz8lSA&quot;&gt;Flow once again comes out as having better type inference&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;type Connection = { id: number };

declare function getConnection(): Connection;

function resolveConnection() {
  return new Promise(resolve =&amp;gt; {
    return resolve(getConnection());
  })
}

resolveConnection().then(conn =&amp;gt; {
  // TypeScript errors in the next line because it does not understand
  // that conn is of type Connection. We have to manually annotate
  // resolveConnection as Promise&amp;lt;Connection&amp;gt;.
  (conn.id);
});
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A very small but nevertheless interesting example is that Flow types &lt;code&gt;Array&amp;lt;T&amp;gt;.pop()&lt;/code&gt; as &lt;code&gt;T,&lt;/code&gt; whereas TypeScript considers that it is &lt;code&gt;T | void&lt;/code&gt;. This is a point in favor of TypeScript because it forces you to double check that the item exists (if the array is empty, &lt;code&gt;Array.pop&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt;). There are some other small examples like this one where TypeScript outshines Flow.&lt;/p&gt;
&lt;h4 id=&quot;typescriptdefinitionsforthirdpartydependencies&quot;&gt;TypeScript Definitions for third-party dependencies&lt;/h4&gt;
&lt;p&gt;Of course, when writing any JavaScript application, the chances are you'll have at least a handful of dependencies. These need to be typed, otherwise you're losing out on much of the power of static type analysis (as explained in the beginning of this article).&lt;/p&gt;
&lt;p&gt;Libraries that you import from npm can ship with Flow type definitions, TypeScript type definitions, both of these or neither. It's very common that (smaller) libraries don't ship with either meaning that you have to either write your own type definitions for them or grab some from the community. Both the Flow and the TypeScript community have a standard repository of third-party type definitions for JavaScript packages: &lt;a href=&quot;https://github.com/flow-typed/flow-typed&quot;&gt;flow-typed&lt;/a&gt; and &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped&quot;&gt;DefinitelyTyped&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have to say that we had a much better time with DefinitelyTyped. With flow-typed, we had to use its CLI tool to bring in type definitions for various dependencies into our project. DefinitelyTyped has figured out a way to merge this functionality with npm's CLI tool by shipping @types/package-name packages in npm's package repository. This is amazing and it made it much easier to bring in type definitions for our dependencies (jest, react, lodash, react-redux just to name a few).&lt;/p&gt;
&lt;p&gt;On top of this, I also had a great time contributing to DefinitelyTyped (don't expect the type definitions to be equivalent when porting code from Flow to TypeScript). I already sent &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31867&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31607&quot;&gt;couple&lt;/a&gt; &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/31722&quot;&gt;of&lt;/a&gt; &lt;a href=&quot;https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32061&quot;&gt;pull&lt;/a&gt; requests and all of them were a breeze. Just clone, edit the type definitions, add tests and send a pull request. The DefinitelyTyped GitHub bot will tag people who have contributed to the type definitions you edited for reviews. If none of them provide a review in 7 days a DefinitelyTyped maintainer will review the PR. After getting merged to master, a new version of the dependency's package is shipped to npm. For instance, when I first updated the @types/redux-form package, the version 7.4.14 was automatically pushed to npm after it got merged to master. This makes it super easy for us to just update our package.json file to get the new type definitions. If you can't wait for the PR to be accepted, you can always override the type definitions that are being used in your project as &lt;a href=&quot;https://davidgom.es/maintaining-overridden-typescript-definitions-for-dependencies/&quot;&gt;I explained in a recent blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Overall, the quality of type definitions in DefinitelyTyped is much better due to the larger and more thriving community behind TypeScript. In fact, &lt;strong&gt;our type coverage increased from 88% to 96%&lt;/strong&gt; after porting our project from Flow to TypeScript mostly due to better third-party dependency type definitions that have fewer &lt;code&gt;any&lt;/code&gt; types in them.&lt;/p&gt;
&lt;h3 id=&quot;lintingandtests&quot;&gt;Linting and Tests&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;We moved from &lt;a href=&quot;https://eslint.org/&quot;&gt;eslint&lt;/a&gt; to &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;tslint&lt;/a&gt; (we found it more complicated to get started with eslint for TypeScript, so we just went with tslint).&lt;/li&gt;
&lt;li&gt;We are using &lt;a href=&quot;https://github.com/kulshekhar/ts-jest&quot;&gt;ts-jest&lt;/a&gt; for running our tests that are using TypeScript. Some of our tests are typed whereas others are untyped (when it's too much work to type tests, we save them as &lt;code&gt;.js&lt;/code&gt; files).&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;whathappenedafterwefixedallofourtypeerrors&quot;&gt;What happened after we fixed all of our type errors?&lt;/h3&gt;
&lt;p&gt;After one engineer week of work we got down to the very last type error which we postponed in the short term with &lt;code&gt;@ts-ignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After addressing some code review comments and fixing a couple of bugs (unfortunately, we had to change a very small amount of runtime code to fix some logic that TypeScript could not understand), the PR landed and we have been using TypeScript since then. (And yes, we fixed the final &lt;code&gt;@ts-ignore&lt;/code&gt; in a followup PR).&lt;/p&gt;
&lt;p&gt;Apart from the editor integration, working with TypeScript has been very similar to working with Flow. The performance of Flow's server is slightly faster, but this doesn't turn out to be a huge problem since they are equally fast at giving you inline errors for the file you're currently looking at. The only performance difference is that TypeScript takes a little bit longer (~0.5 to 1 second) to tell you whether there are any new errors in your project after you &lt;em&gt;save&lt;/em&gt; a file. The server startup time is about the same (~2 minutes), but that doesn't matter as much. So far, we haven't had any issues with memory consumption and tsc seems to consistently use around 600 megabytes of RAM.&lt;/p&gt;
&lt;p&gt;It may seem that Flow's type inference makes it much better than TypeScript, but there are 2 reasons why that isn't a big deal:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We converted a codebase that was adapted to Flow to TypeScript. This means that we obviously only found things that Flow can express but TypeScript can't. If the port had been the other way around, I'm sure we would have found things that TypeScript can infer/express better than Flow.&lt;/li&gt;
&lt;li&gt;Type inference is important and it helps keep our code less verbose. However, at the end of the day, things like a strong community and availability of type definitions are more important because weak type inference can be solved by &quot;handholding&quot; the type checker a bit more.&lt;/li&gt;
&lt;/ol&gt;&lt;h4 id=&quot;codestatistics&quot;&gt;Code Statistics&lt;/h4&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ npm run type-coverage # https://github.com/plantain-00/type-coverage
43330 / 45047 96.19%
&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ cloc # ignoring tests and dependencies
--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
TypeScript                      330           5179           1405          31463
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;whatsnext&quot;&gt;What's next?&lt;/h3&gt;
&lt;p&gt;We're not done with improving the static type analysis in our code. We have other projects at MemSQL that will eventually drop Flow in favor of TypeScript (and some JavaScript projects that may start using TypeScript), and we want to make our TypeScript configuration stricter. We currently have &quot;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;strictNullChecks&lt;/a&gt;&quot; turned on, but &quot;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;noImplicitAny&lt;/a&gt;&quot; is still disabled. We're also going to remove a couple of &lt;a href=&quot;https://basarat.gitbooks.io/typescript/docs/types/type-assertion.html#assertion-considered-harmful&quot;&gt;dangerous type assertions&lt;/a&gt; in our code.&lt;/p&gt;
&lt;p&gt;I am excited to share other things I learned in my adventures with JavaScript type systems in future blog posts. If there is a topic you would like to see me cover, please let me know!&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 20:59:08 +0000</pubDate>
<dc:creator>munchor</dc:creator>
<og:type>article</og:type>
<og:title>Porting 30K lines of code from Flow to TypeScript</og:title>
<og:description>We recently ported MemSQL Studio's 30 thousand lines of JavaScript from using Flow to TypeScript. In this article, I describe why we ported our codebase, how it took place and how it has been working out for us. Disclaimer: my goal with this blog post is not to condemn Flow</og:description>
<og:url>https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/</dc:identifier>
</item>
<item>
<title>FoundationDB Record Layer</title>
<link>https://www.foundationdb.org/blog/announcing-record-layer/</link>
<guid isPermaLink="true" >https://www.foundationdb.org/blog/announcing-record-layer/</guid>
<description>&lt;span class=&quot;published-date&quot;&gt;Published January 14, 2019&lt;/span&gt;
&lt;p&gt;Today, we are excited to announce the open source release of the FoundationDB Record Layer!&lt;/p&gt;
&lt;p&gt;From its inception, FoundationDB was designed as a highly scalable key-value store with a simple API. Layers extend the functionality of the database by adding features and data models to allow new storage access patterns. Today we are releasing the &lt;a href=&quot;https://www.github.com/foundationdb/fdb-record-layer/&quot;&gt;FoundationDB Record Layer&lt;/a&gt;, which provides relational database semantics on top of FoundationDB. This layer features schema management, indexing facilities, and a rich set of query capabilities. The Record Layer is used in production at Apple to support applications and services for hundreds of millions of users.&lt;/p&gt;
&lt;h2 id=&quot;a-record-oriented-database-on-top-of-foundationdb&quot;&gt;A record-oriented database on top of FoundationDB&lt;/h2&gt;
&lt;p&gt;The Record Layer stores structured data, just like a relational database. Databases managed by the Record Layer support records with fields and types, an evolving schema, complex primary and secondary indexes, and declarative query execution. The Record Layer also includes features not typically found in a traditional relational database, such as support for complex nested data types, indexes on the commit-time of records, and indexes and queries that span different types of records.&lt;/p&gt;
&lt;p&gt;Built on top of FoundationDB, the Record Layer inherits FoundationDB's strong ACID semantics, reliability, and performance in a distributed setting. The Record Layer also uses FoundationDB's transactional semantics to provide features similar to a traditional relational database, but in a distributed setting. For example, the Record Layer's secondary indexes are maintained transactionally, so they're always up-to-date with the latest changes to the data. Transactions reduce the number of bugs in application code and greatly simplify application development.&lt;/p&gt;
&lt;h2 id=&quot;built-for-scale&quot;&gt;Built for Scale&lt;/h2&gt;
&lt;p&gt;The Record Layer is built for a massive scale, allowing millions of discrete database instances to be managed within a single FoundationDB cluster. Its design and core feature set were built to scale to many millions of concurrent users and a diverse ecosystem of client applications each with unique data models and query access patterns.&lt;/p&gt;
&lt;p&gt;To make operations simple, the Record Layer is stateless, so scaling up is as simple as launching more instances. It's also built from the ground up for massive multi-tenancy, encapsulating and isolating all of a tenant's state. The Record Layer can also tightly constrain and balance resource consumption across users in a predictable fashion, even in the face of a wide variety of workloads and activity. Together, these properties enable the Record Layer to scale elastically as the demands of its clients grow.&lt;/p&gt;
&lt;p&gt;Together, the Record Layer and FoundationDB form the backbone of Apple's &lt;a href=&quot;https://developer.apple.com/icloud/cloudkit/&quot;&gt;CloudKit&lt;/a&gt;. We wrote a paper describing how we built the Record Layer to run at massive scale and how CloudKit uses it. Today, you can &lt;a href=&quot;https://www.foundationdb.org/files/record-layer-paper.pdf&quot;&gt;read the preprint&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;h2 id=&quot;highlights&quot;&gt;Highlights&lt;/h2&gt;
&lt;p&gt;There's a lot more to say about the Record Layer. At a very high level, the Record Layer:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Represents records as Protocol Buffer messages, providing industry-standard serialization and schema evolution. Features such as nested and repeated fields have first-class support.&lt;/li&gt;
&lt;li&gt;Supports transactional secondary indexing that takes full advantage of the Protocol Buffer data model. We have a variety of advanced index types, including aggregate indexes such as grouped counts, full text indexes, ordinal rank indexes, and extensible functional indexes. Where possible, our implementations leverage advanced FoundationDB features, such as atomic mutations.&lt;/li&gt;
&lt;li&gt;Includes a declarative query API for retrieving data and a query planner for turning those queries into concrete database operations.&lt;/li&gt;
&lt;li&gt;Operates in a completely stateless manner. Instantiating a logical database and performing an operation can be done in milliseconds. Resource constraints allow any given operation or query to be limited. Continuations allow control to be handed back to the client to allow them to iteratively make progress in concert with all other clients.&lt;/li&gt;
&lt;li&gt;Provides a large number of deep extension points. For example, users can build custom index maintainers and query planning features to seamlessly “plug-in” new index types. Similarly, the layer's serialization API supports client-defined encryption and compression algorithms.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All of this leverages the full breadth and power of FoundationDB functionality, including strong ACID semantics and advanced features such as controllable isolation levels.&lt;/p&gt;
&lt;h2 id=&quot;get-started&quot;&gt;Get Started&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://foundationdb.github.io/fdb-record-layer/GettingStarted.html&quot;&gt;getting started guide&lt;/a&gt; will walk you through creating a simple application that uses the Record Layer. If you'd like to dig deeper, we wrote &lt;a href=&quot;https://foundationdb.github.io/fdb-record-layer/Overview.html&quot;&gt;an overview&lt;/a&gt; that goes into greater detail.&lt;/p&gt;
&lt;p&gt;We encourage your participation in a &lt;a href=&quot;https://forums.foundationdb.org/c/record-layer&quot;&gt;new forum section for the Record Layer&lt;/a&gt; where you can ask discuss development, ask questions, and get involved in the open source project. We're excited to see what the community will build on top of the Record Layer.&lt;/p&gt;
&lt;p&gt;More information can be found at:&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 20:51:55 +0000</pubDate>
<dc:creator>davelester</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.foundationdb.org/blog/announcing-record-layer/</dc:identifier>
</item>
<item>
<title>Managing Remote Teams</title>
<link>http://klinger.io/post/180989912140/managing-remote-teams-a-crash-course</link>
<guid isPermaLink="true" >http://klinger.io/post/180989912140/managing-remote-teams-a-crash-course</guid>
<description>&lt;p&gt;Hey folks,&lt;/p&gt;&lt;p&gt;I haven’t been blogging for quite some time, so everything is a bit rusty for me, but i thought this article might be useful for a few more people, because about 1-4 times per week i get approached with a question like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“Should we do remote?”&lt;/li&gt;
&lt;li&gt;“How did you remote work for your team?”&lt;/li&gt;
&lt;li&gt;“Our team struggles with engineers who are remote…”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The post got a bit longer than i planned to, because i tried to cover the outline of all aspects that might be useful for you when you approach this topic. In this article, i will go over the different kind of setups of remote teams, why and how remote teams work differently, when you want to work remotely and when it’s better not to and lastly a few tricks that worked for the teams i was involved. Thanks for reading and thanks for &lt;a href=&quot;https://twitter.com/intent/tweet?text=Managing%20Remote%20Teams%3A%20A%20Crash%20Course%20by%20%40andreasklinger&amp;amp;url=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&quot; target=&quot;_blank&quot;&gt;sharing&lt;/a&gt;. 🙏&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For those who don’t know me and just stumbled into this post by accident: I am &lt;a href=&quot;https://twitter.com/andreasklinger&quot; target=&quot;_blank&quot;&gt;@andreasklinger&lt;/a&gt; -among other things - I helped to build up &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.producthunt.com&amp;amp;t=YjNkYzA5YmRiOTY2MWQ4Yzk5OWFmNjRlMzE1ODJkMzc3NDRjOWVkYyxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;Product Hunt&lt;/a&gt; as a fully distributed team. Btw… yes, they are awesome, yes, they hire internationally, and yes, you should &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fangel.co%2Fproducthunt%2Fjobs&amp;amp;t=YjQwMTFlMGNmNjc0ZmMzMzQ0MjQ3ZDNmYjI4NWIwZWQxMmRjNTViOCxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;consider applying&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;So here without further ado… here… we… go.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/YPIrsRqqO7oB2/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Remote teams - a crash course&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Different setups of remote teams&lt;/h2&gt;
&lt;p&gt;There is a bunch of different setups people call “remote teams”.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Satellite teams
&lt;ul&gt;&lt;li&gt;2 or more teams are in different offices.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Remote employees
&lt;ul&gt;&lt;li&gt;most of the team is in an office, but a few single employees are remote&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fully distributed teams
&lt;ul&gt;&lt;li&gt;everybody is remote&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Remote first teams
&lt;ul&gt;&lt;li&gt;which are “basically” fully distributed&lt;/li&gt;
&lt;li&gt;but have a non-critical-mass office&lt;/li&gt;
&lt;li&gt;they focus on remote-friendly communication&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When i speak of remote teams, i mean fully distributed teams and, if done right, remote-first teams. I consider all the other one’s hybrid setups.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Why does the distinction matter?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;They are actually something entirely different and need different solutions.&lt;/p&gt;
&lt;h2&gt;Process needs&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;As a remote team, you have roughly 5x the process needs as you would in a co-located team.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Example: Meetings&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/l46CsJcPAe3Fec6Iw/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Everybody loves meetings… right? But especially for remote teams, they are expensive, take effort and are – frankly – exhausting.&lt;/p&gt;
&lt;p&gt;If you are 5 people, remote team:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You need to announce meetings upfront&lt;/li&gt;
&lt;li&gt;You need to take notes b/c not everyone needs to join&lt;/li&gt;
&lt;li&gt;Be on time&lt;/li&gt;
&lt;li&gt;Have a meeting agenda&lt;/li&gt;
&lt;li&gt;Make sure it’s not overtime&lt;/li&gt;
&lt;li&gt;Communicate further related information in slack&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In contrast, if you are 5 people co-located you just stand up and say: “everyone over there - we talk now”. Once a co-located team reaches 20-25 people they definitely need to do the same steps. But before…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/5AvMjXihK4hpe/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can’t just “get up and talk with everyone all the time” in a remote team… you simply can’t. People might be offline, might be sleeping, might be deep focused on other work.&lt;/p&gt;
&lt;p&gt;And this is not only about meetings. Meetings are just a straightforward example here. It’s true for any aspect of communication or teamwork. &lt;strong&gt;Remote teams need 5x the process.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;You need to systemize communication and expectations&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When i say processes, i don’t necessarily mean heavy-handed workflows, piles of paper and someone using a giant stamp confirming every action. I mean “systemized communication and expectations made explicit”.&lt;/p&gt;
&lt;p&gt;This can be as simple as: “We do check-ins every morning…” “Please before you do X always do Y…” These simple explicit agreements allow other people to expect those actions to happen and avoid unnecessary communication loops.&lt;/p&gt;
&lt;p&gt;But… i am sorry to say… &lt;em&gt;this is work&lt;/em&gt;… you need to act like a larger company than you actually are… you need to be stricter about best practices, and you will run into communication problems… a lot of them.&lt;/p&gt;
&lt;p&gt;These communication problems are often what people complain about when they discuss if they should switch to remote teams or hire remote engineers. So they consider hybrid setups…&lt;/p&gt;
&lt;h2&gt;Hybrid setups are hard to do&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Imagine you are the only person remote in a small team. You have entirely different process needs. You will suffer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Being the one poor soul remote in a co-located team is hard… you have “5x” the process needs… People will continuously forget to involve you in discussions or decisions, you will be the person not knowing &lt;em&gt;what&lt;/em&gt; is happening &lt;em&gt;why&lt;/em&gt; - you will suffer.&lt;/p&gt;
&lt;p&gt;Similarly problematic are satellite offices. The bridge between the offices has 5x communication needs, but people in each office act like co-located teams. Unless the offices can work mostly autonomously, this communication bridge between them will suffer.&lt;/p&gt;
&lt;p&gt;Establish processes for communication needs for these kinds of setups are hard. Because they are against human nature… I will just discuss things with you while getting water in the kitchen… I won’t repeat what we discussed in slack because i am… well… as all humans… damn lazy!.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/EulSbube9JIha/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Default remote or default non-remote?&lt;/h2&gt;
&lt;p&gt;I have tried all the models described. Personally, I’d recommend you avoid hybrid approaches and act as distributed as possible - or just don’t do remote at all and be co-located. Both are fine.&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;need&lt;/em&gt; a small office, make sure people in it don’t have a critical mass in projects and communicate remote-friendly.&lt;/p&gt;
&lt;p&gt;In these situations, the question is often “Are we default-remote” or “default non-remote” if it’s the first, having a small office might work out for you.&lt;/p&gt;
&lt;p&gt;Questions to ask yourself:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why do you consider doing a remote team?&lt;/li&gt;
&lt;li&gt;Are those advantages worth the effort for you?&lt;/li&gt;
&lt;li&gt;If yes what would need to change if you would commit to it?&lt;/li&gt;
&lt;li&gt;How often do you want to meet in person?&lt;/li&gt;
&lt;li&gt;If you &lt;em&gt;need&lt;/em&gt; a small office how can you communicate more remote friendly?
&lt;ul&gt;&lt;li&gt;Example: Would it be weird if all people in the office would join team calls with their own laptop?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Why would a team want to work remotely?&lt;/h2&gt;
&lt;p&gt;A lot of people mention costs. “It’s cheaper to hire people remotely”. This might be sometimes true – and it’s definitely true if you are used to San Francisco salaries – but… international talent usually expects international salaries… so you’d be surprised how much many people expect. If you want cheap outsourcing, this “remote thing” won’t work for you. &lt;img src=&quot;https://media.giphy.com/media/BXdqYjI3CTRCM/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Overall hiring remote is about four things - being able to hire, the best possible people independent of where they (or you) are - optimizing for the quality of life - tuning your personal performance - having long-term team retention&lt;/p&gt;
&lt;p&gt;“Our startup is amazing, people will want to move to X&quot;… Some will… some won’t. All the &quot;won’t” are a lot of people you are missing out.&lt;/p&gt;
&lt;p&gt;On the other hand with a good remote-team pitch, you can even (often, not always) approach Silicon Valley top talent: “Hey considering leaving the Bay Area? Google might have an issue with it, we don’t - work with global talent on a project that matters – wherever you are. &lt;a href=&quot;https://t.umblr.com/redirect?z=http%3A%2F%2Fzapier.com%2Fjobs&amp;amp;t=MGQxZDI1MDJkODBmMjUyMjg5ZWJhOGI0ZTQzNTNiZTcwZjcxZWMzNCxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;Shall&lt;/a&gt; &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fclearbit.com%2Fjobs&amp;amp;t=MmQ4MzFjZGRkODQzMmEyYmJiMDRmOGI5OTI1MmJkNTZhMjJiYjk5NSxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;we&lt;/a&gt; &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fzeit.co%2Fabout&amp;amp;t=NWExMjJkMDAwMjVlN2M2ZjhiMmQxN2FjOTcwNThiYWE2ZDliYjZkMyxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;talk&lt;/a&gt;?”&lt;/p&gt;
&lt;p&gt;But (imho) what most people are missing… is not the costs… not the untapped talent… nor the ability to optimize your quality of life and own performance. It’s a simple fact: talent retention. Ask remote teams how long their people stayed with them. It’s years longer than in co-located companies.&lt;/p&gt;
&lt;h2&gt;Iteration vs. innovation&lt;/h2&gt;
&lt;p&gt;One thing you will quickly realize is that a lot of human nuance gets lost when discussing things via Hangout or Slack. This nuance is important. Especially if you work on critical, creative work.&lt;/p&gt;
&lt;p&gt;Imagine you need to pivot your product. You make a long passionate speech about what the team needs to do to win the market, just to be followed up with a “Sorry Sarah, your internet connection dropped for a second, what did you say?”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/biJ1jmq9woBMI/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;“Innovation” is more natural in person. It’s better when even the quiet person in the back can pick up a marker and explain something.&lt;/p&gt;
&lt;p&gt;But once you agree on something it’s about individual performance… This is usually easier remote.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Iteration easier remote&lt;/li&gt;
&lt;li&gt;Innovation easier in person&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So even if you work remotely, you will need to define how often you want to meet. I recommend once per quarter or twice per year as a team and whenever required by the individual project teams.&lt;/p&gt;
&lt;h2&gt;Loneliness&lt;/h2&gt;
&lt;p&gt;A lot of people mention loneliness as a problem in remote teams. Personally, i never had this an issue be for me, but i saw it with friends and fully understand why people are worried about this.&lt;/p&gt;
&lt;p&gt;As company-lead it will be your responsibility to make sure people are happy and healthy. Here is what helped in our team:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Don’t work from home but a shared office (coworking spaces tend to be too distracting)&lt;/li&gt;
&lt;li&gt;Make sure you meet non-work friends&lt;/li&gt;
&lt;li&gt;Meet regularly in person&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Optimize for iteration - Optimize for single player&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/DEoswcatD5ISk/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In remote teams, you need to set up in a way people can be as autonomously as they need. Autonomously doesn’t mean “left alone” it means “be able to run alone” (when needed).&lt;/p&gt;
&lt;p&gt;Think of people as “fast decision maker units” and team communication as “slow input/output”. Both are needed to function efficiently, but you want to avoid the slow part when it’s not essential.&lt;/p&gt;
&lt;p&gt;Questions to ask yourself:&lt;/p&gt;
&lt;p&gt;How can you…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;… define strategy clear enough that people can formulate their own decisions without going off-track?&lt;/li&gt;
&lt;li&gt;… set goals clear enough that people can benchmark themselves or their decisions?&lt;/li&gt;
&lt;li&gt;… setup decisions hierarchies in a way that only non-reverse-able important decisions even bubble up to you?&lt;/li&gt;
&lt;li&gt;… create confidence? (speed comes through confidence)&lt;/li&gt;
&lt;li&gt;When is it enough that you hear about it and when do you need to involve?&lt;/li&gt;
&lt;li&gt;How can you make sure that you are only involved in every 10th decision and only “manager-override” every 100th?&lt;/li&gt;
&lt;li&gt;… set up your environment/processes that they can act even in emergencies on their own?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you hired smart, talented people, why can’t you just “let them do their job”? What’s missing? Did you hire the wrong people? Did you not communicate clearly? Are you (yourself) uncertain about strategic elements? Solve that instead of micromanaging them.&lt;/p&gt;
&lt;p&gt;Apart from these company-wide questions, you will want to ask similar questions also for each specific vertical.&lt;/p&gt;
&lt;h3&gt;Digging deeper: managing remote engineering teams&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/DxRx8bMKdgo2k/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here a few example questions for engineering teams (but you will know similar ones for any kind of function):&lt;/p&gt;
&lt;p&gt;How can you or someone in your team…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;… troubleshoot alone when it’s in the middle of the night for everyone else?&lt;/li&gt;
&lt;li&gt;… enable new developers to be able to learn by themselves?&lt;/li&gt;
&lt;li&gt;… guide coding best practices?&lt;/li&gt;
&lt;li&gt;… avoid making pull requests a slow process?&lt;/li&gt;
&lt;li&gt;… prevent meetings that don’t create value?&lt;/li&gt;
&lt;li&gt;… enable developers to make product decisions on their own?&lt;/li&gt;
&lt;li&gt;… avoid worst case scenarios?&lt;/li&gt;
&lt;li&gt;And again: How can you increase confidence? (speed comes through confidence!)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;At Product Hunt we thought a lot about this! Here a few answers that helped us:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Have a clear strategy and high-level goals&lt;/li&gt;
&lt;li&gt;Let engineers take ownership over teams and projects&lt;/li&gt;
&lt;li&gt;Let them take ownership over the product they build, but also the goals they commit to (&lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.slideshare.net%2Fandreasklinger%2Fengineering-management-for-early-stage-startups-97402850&amp;amp;t=M2I1N2Q1OTIzYzA1YjAxMDkzZWQyMjk1NWJhZGJkYTU2MGU4MTc1NyxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;strategy goes top-down, execution bubbles bottom-up&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Making it clear what scenarios require multiple eyes or other people’s feedback (e.g., stack changes, security concerns, etc.)&lt;/li&gt;
&lt;li&gt;Have strong onboarding documents and employee handbooks&lt;/li&gt;
&lt;li&gt;Have new employees improve those onboarding documents&lt;/li&gt;
&lt;li&gt;Be explicit in communication&lt;/li&gt;
&lt;li&gt;Be explicit which are expected rules and which are not.&lt;/li&gt;
&lt;li&gt;Wait for problems before you introduce solutions (esp. processes or infrastructure)&lt;/li&gt;
&lt;li&gt;Friday’s employees can work on what they think creates value (unless their project is on 🔥) - fixing tech debt, improving UX, trying out new libraries, refactoring infrastructure,…&lt;/li&gt;
&lt;li&gt;Share recorded videos instead of live-demos to explain something (e.g., UX prototypes)&lt;/li&gt;
&lt;li&gt;Have a strong (but not too big) test suite (focusing on integration for features, unit tests for risky parts)&lt;/li&gt;
&lt;li&gt;Focus on reuse of standard components instead of pixel-perfect layouts&lt;/li&gt;
&lt;li&gt;Enforce linters for any language you use (even, e.g., HTML/CSS)&lt;/li&gt;
&lt;li&gt;Enable autoformatting (to avoid code style discussions)&lt;/li&gt;
&lt;li&gt;Enforce complexity scoring in linters (⬅️ biggest win)&lt;/li&gt;
&lt;li&gt;No production console access unless for (logged+alerted) emergencies&lt;/li&gt;
&lt;li&gt;Make it easy to recreate a production-like state in development (sanitized)&lt;/li&gt;
&lt;li&gt;Have one-step-to-reinstall development environments&lt;/li&gt;
&lt;li&gt;Have defined times for pull request reviews (first thing every morning)&lt;/li&gt;
&lt;li&gt;Make Pull-request +1’s a “polite thing to do” but not a “required step”&lt;/li&gt;
&lt;li&gt;Enforce pull request +1’s for parts that are security risks (via &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fdanger.systems%2Fjs%2F&amp;amp;t=ZTJmOWM4YjFjZDAwZWMwMTU1OTAwYzc0ODI2OGZmY2M0ZjYxM2E4NSxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;danger.js&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Write comments about &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fdev.to%2Fandreasklinger%2Fcomments-explain-why-not-what-and-2-more-rules-on-writing-good-comments&amp;amp;t=NTE3NDE5YWJkNWVhZTBhYjJkMzAyNzlkMzYyZThlYzdiNzc5OWQyNSxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;why not what&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;etc. etc.…&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/andreasklinger&quot; target=&quot;_blank&quot;&gt;Let me know&lt;/a&gt; if you think it would be useful for you if i’d wrote a larger blog-post going into detail here. For now, there is a lot more detail about we worked at Product Hunt in this first presentation of mine: &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.slideshare.net%2Fandreasklinger%2Fengineering-management-for-early-stage-startups-97402850&amp;amp;t=M2I1N2Q1OTIzYzA1YjAxMDkzZWQyMjk1NWJhZGJkYTU2MGU4MTc1NyxIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;https://www.slideshare.net/andreasklinger/engineering-management-for-early-stage-startups-97402850&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TL;DR:&lt;/em&gt; The ultimate goal of this setup is that an engineer can figure out, on their own, if they are doing things right or wrong. Have low-level feedback coming from automation and that it’s clear when high-level feedback is needed from team members. And most importantly you treat them like capable adults.&lt;/p&gt;
&lt;h2&gt;But… these are not problems of remote teams&lt;/h2&gt;
&lt;p&gt;The problems i mentioned are not unique to remote teams, and the solutions are the same thing good co-located teams do. But they don’t need to be as strict about them because they face them later of can just monkey-patch around them. Their engineers might not like the typical “let’s all get over there and talk…” But i tends to work… so people do it anyway.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;co-located teams monkey-patch their process problems with more meetings and micro-managing people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a remote team - because of the higher process needs - you just end up facing these knowledge worker management problems earlier and more intentionally.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/8ldmiVI8zN9E4/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Because meetings are expensive for you, you need to think about systemizing processes actively.&lt;/p&gt;
&lt;p&gt;Because you cannot watch over your employees’ shoulders, you have to find ways and boundaries you can fully trust them.&lt;/p&gt;
&lt;p&gt;Because you cannot micromanage them, you need to define strategy and goals and treat them as competent adults who make decisions for you.&lt;/p&gt;
&lt;h2&gt;Aren’t you already working in some way?&lt;/h2&gt;
&lt;p&gt;We can discuss the pros and cons of remote work, but let’s be honest…&lt;/p&gt;
&lt;p&gt;We are all already working remote… You might be checking your emails on your weekend, you might be reading papers on your way to work, you might finish some project in the evening at home. You already work remote, the question is only how often and how much enabled you are to do so.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/l378nbxfSUXPakf9S/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The question is no longer if you work remote but how much.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Remote work is the logical evolution of digital work.&lt;/strong&gt; And the best-practices of remote teams are often learnings for all digital knowledge work teams.&lt;/p&gt;
&lt;h2&gt;The end&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/siN8VKr3wgJqw/giphy.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Let me know if this is useful… And if you have experience with remote teams, &lt;a href=&quot;https://twitter.com/andreasklinger&quot; target=&quot;_blank&quot;&gt;tell me&lt;/a&gt; how i could improve this article! Also last but not least: &lt;a href=&quot;https://twitter.com/intent/tweet?text=Managing%20Remote%20Teams%3A%20A%20Crash%20Course%20by%20%40andreasklinger&amp;amp;url=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&quot; target=&quot;_blank&quot;&gt;Please share&lt;/a&gt; this article if you think it’s of value!&lt;/p&gt;
&lt;p&gt;PS: I haven’t been blogging for years… I was very nervous about starting to write again and asked for early feedback. Over 100 people offered their help, more than i can mention here, i am still at awe about the fantastic feedback i got. The offer to help means a lot to me. Thanks to everyone.&lt;/p&gt;
&lt;p&gt;If you want to help me by feedbacking early drafts of my blog-posts please &lt;a href=&quot;https://t.umblr.com/redirect?z=https%3A%2F%2Fwww.getrevue.co%2Fprofile%2Fandreasklinger&amp;amp;t=NmFiNzM2ZTBjNzE2MmFlOGRlNjM4NzJmMmQ2MjY2MDFiYTM4MzQ0YixIUDNFSktkSQ%3D%3D&amp;amp;b=t%3A8RARsnult7flEuRLgYoA1g&amp;amp;p=http%3A%2F%2Fklinger.io%2Fpost%2F180989912140%2Fmanaging-remote-teams-a-crash-course&amp;amp;m=1&quot; target=&quot;_blank&quot;&gt;subscribe here&lt;/a&gt;. Thanks in advance&lt;/p&gt;
&lt;p&gt;🙏 &lt;a href=&quot;https://twitter.com/andreasklinger&quot; target=&quot;_blank&quot;&gt;@andreasklinger&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 20:32:19 +0000</pubDate>
<dc:creator>feross</dc:creator>
<og:title>Managing Remote Teams - A Crash Course</og:title>
<og:description>Startup Lessons Learned - a post by @andreasklinger</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>http://klinger.io/post/180989912140/managing-remote-teams-a-crash-course</dc:identifier>
</item>
<item>
<title>Feds Can&amp;#039;t Force You to Unlock Your iPhone with Finger or Face, Judge Rules</title>
<link>https://www.forbes.com/sites/thomasbrewster/2019/01/14/feds-cant-force-you-to-unlock-your-iphone-with-finger-or-face-judge-rules/#12fbd51842b7</link>
<guid isPermaLink="true" >https://www.forbes.com/sites/thomasbrewster/2019/01/14/feds-cant-force-you-to-unlock-your-iphone-with-finger-or-face-judge-rules/#12fbd51842b7</guid>
<description>&lt;div&gt;&lt;img src=&quot;https://specials-images.forbesimg.com/imageserve/874990416/960x0.jpg?fit=scale&quot; alt=&quot;Social Media Data Security&quot; data-height=&quot;2785&quot; data-width=&quot;4193&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;color-body light-text&quot;&gt;Social Media Data Security&lt;small&gt;NurPhoto via Getty Images&lt;/small&gt;&lt;/p&gt;
&lt;p class=&quot;speakable-paragraph&quot;&gt;A California judge has ruled that American cops can’t force people to unlock a mobile phone with their face or finger. The ruling goes further to protect people’s private lives from government searches than any before and is being hailed as a potentially landmark decision.&lt;/p&gt;
&lt;p&gt;Previously, U.S. judges had ruled that police were allowed to force unlock devices like Apple’s iPhone with biometrics, such as fingerprints, faces or irises. That was despite the fact feds weren’t permitted to force a suspect to divulge a passcode. But according to a &lt;a href=&quot;https://www.documentcloud.org/documents/5684083-Judge-Says-Facial-Recognition-Unlocks-Not.html&quot; target=&quot;_blank&quot; class=&quot;color-accent&quot;&gt;ruling uncovered by &lt;em&gt;Forbes&lt;/em&gt;&lt;/a&gt;, all logins are equal.&lt;/p&gt;
&lt;p&gt;The order came from the U.S. District Court for the Northern District of California in the denial of a search warrant for an unspecified property in Oakland. The warrant was filed as part of an investigation into a Facebook extortion crime, in which a victim was asked to pay up or have an “embarassing” video of them publicly released. The cops had some suspects in mind and wanted to raid their property. In doing so, the feds also wanted to open up any phone on the premises via facial recognition, a fingerprint or an iris.&lt;/p&gt;
&lt;p&gt;While the judge agreed that investigators had shown probable cause to search the property, they didn’t have the right to open all devices inside by forcing unlocks with biometric features.&lt;/p&gt;
&lt;p&gt;On the one hand, magistrate judge Kandis Westmore ruled the request was “overbroad” as it was “neither limited to a particular person nor a particular device.”&lt;/p&gt;
&lt;p&gt;But in a more significant part of the ruling, Judge Westmore declared that the government did not have the right, even with a warrant, to force suspects to incriminate themselves by unlocking their devices with their biological features. Previously, courts had decided biometric features, unlike passcodes, were not “testimonial.” That was because a suspect would have to willingly and verbally give up a passcode, which is not the case with biometrics. A password was therefore deemed testimony, but body parts were not, and so not granted Fifth Amendment protections against self-incrimination.&lt;/p&gt;

&lt;p&gt;That created a paradox: How could a passcode be treated differently to a finger or face, when any of the three could be used to unlock a device and expose a user’s private life?&lt;/p&gt;
&lt;p&gt;And that’s just what Westmore focused on in her ruling. Declaring that “technology is outpacing the law,” the judge wrote that fingerprints and face scans were not the same as “physical evidence” when considered in a context where those body features would be used to unlock a phone.&lt;/p&gt;
&lt;p&gt;“If a person cannot be compelled to provide a passcode because it is a testimonial communication, a person cannot be compelled to provide one’s finger, thumb, iris, face, or other biometric feature to unlock that same device,” the judge wrote.&lt;/p&gt;
&lt;p&gt;“The undersigned finds that a biometric feature is analogous to the 20 nonverbal, physiological responses elicited during a polygraph test, which are used to determine guilt or innocence, and are considered testimonial.”&lt;/p&gt;
&lt;p&gt;There were other ways the government could get access to relevant data in the Facebook extortion case “that do not trample on the Fifth Amendment,” Westmore added. They could, for instance, ask Facebook to provide Messenger communications, she suggested. Facebook has been willing to hand over such messages in a significant number of previous cases &lt;em&gt;Forbes&lt;/em&gt; has reviewed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Law finally catching up with tech?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Over recent years, the government has drawn criticism for its smartphone searches. In 2016, &lt;a href=&quot;https://www.forbes.com/sites/thomasbrewster/2016/10/16/doj-demands-mass-fingerprint-seizure-to-open-iphones/&quot; target=&quot;_blank&quot; class=&quot;color-accent&quot;&gt;&lt;em&gt;Forbes&lt;/em&gt; uncovered a search warrant not dissimilar to the one in California&lt;/a&gt;. Again in the Golden State, the feds wanted to go onto a premises and force unlock devices with fingerprints, regardless of what phones or who was inside.&lt;/p&gt;
&lt;p&gt;Andrew Crocker, senior staff attorney at the digital rights nonprofit Electronic Frontier Foundation, said the latest California ruling went a step further than he’d seen other courts go. In particular, Westmore observed alphanumeric passcodes and biometrics served the same purpose in unlocking phones.&lt;/p&gt;
&lt;p&gt;“While that’s a fairly novel conclusion, it’s important that courts are beginning to look at these issues on their own terms,” Crocker told &lt;em&gt;Forbes&lt;/em&gt;. “In its recent decisions, the Supreme Court has made clear that digital searches raise serious privacy concerns that did not exist in the age of physical searches—a full forensic search of a cellphone reveals far more than a patdown of a suspect’s pockets during an arrest for example.”&lt;/p&gt;
&lt;p&gt;The magistrate judge decision could, of course, be overturned by a district court judge, as happened in Illinois in 2017 with a similar ruling. The best advice for anyone concerned about government overreach into their smartphones: Stick to a strong alphanumeric passcode that you won’t be compelled to disclose.&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 20:10:04 +0000</pubDate>
<dc:creator>koolba</dc:creator>
<og:title>Feds Can't Force You To Unlock Your iPhone With Finger Or Face, Judge Rules</og:title>
<og:image>https://thumbor.forbes.com/thumbor/600x315/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F874990416%2F960x0.jpg</og:image>
<og:url>https://www.forbes.com/sites/thomasbrewster/2019/01/14/feds-cant-force-you-to-unlock-your-iphone-with-finger-or-face-judge-rules/</og:url>
<og:description>Cops can't just hold an iPhone up to a suspect's face to search it, judge rules. It could be a landmark decision in modern privacy.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.forbes.com/sites/thomasbrewster/2019/01/14/feds-cant-force-you-to-unlock-your-iphone-with-finger-or-face-judge-rules/</dc:identifier>
</item>
<item>
<title>Elixir v1.8 released</title>
<link>https://elixir-lang.org/blog/2019/01/14/elixir-v1-8-0-released/</link>
<guid isPermaLink="true" >https://elixir-lang.org/blog/2019/01/14/elixir-v1-8-0-released/</guid>
<description>&lt;p&gt;Elixir v1.8 comes with many improvements at the infrastructure level, improving compilation time, speeding up common patterns, and adding features around introspection of the system.&lt;/p&gt;
&lt;h2 id=&quot;custom-struct-inspections&quot;&gt;Custom struct inspections&lt;/h2&gt;
&lt;p&gt;Elixir now provides a derivable implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Inspect&lt;/code&gt; protocol. In a nutshell, this means it is really easy to filter data from your data structures whenever they are inspected. For example, imagine you have a user struct with security and privacy sensitive information:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;defstruct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:encrypted_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;By default, if you inspect a user via &lt;code class=&quot;highlighter-rouge&quot;&gt;inspect(user)&lt;/code&gt;, it will include all fields. This can cause fields such as &lt;code class=&quot;highlighter-rouge&quot;&gt;:email&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;:encrypted_password&lt;/code&gt; to appear in logs, error reports, etc. You could always define a custom implementation of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Inspect&lt;/code&gt; protocol for such cases but Elixir v1.8 makes it simpler by allowing you to derive the &lt;code class=&quot;highlighter-rouge&quot;&gt;Inspect&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;@derive&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;defstruct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:encrypted_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now all user structs will be printed with all remaining fields collapsed:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;#User&amp;lt;id: 1, name: &quot;Jane&quot;, age: 33, ...&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can also pass &lt;code class=&quot;highlighter-rouge&quot;&gt;@derive {Inspect, except: [...]}&lt;/code&gt; in case you want to keep all fields by default and exclude only some.&lt;/p&gt;
&lt;h2 id=&quot;time-zone-database-support&quot;&gt;Time zone database support&lt;/h2&gt;
&lt;p&gt;In Elixir v1.3, Elixir added four types, known as Calendar types, to work with dates and times: &lt;code class=&quot;highlighter-rouge&quot;&gt;Time&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Date&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;NaiveDateTime&lt;/code&gt; (without time zone), and &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; (with time zone). Over the last versions we have added many enhancements to the Calendar types but the &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; module always evolved at a slower pace since Elixir did not provide an API for time zone databases.&lt;/p&gt;
&lt;p&gt;Elixir v1.8 now defines a &lt;code class=&quot;highlighter-rouge&quot;&gt;Calendar.TimeZoneDatabase&lt;/code&gt; behaviour, allowing developers to bring in their own time zone databases. By defining an explicit contract for time zone behaviours, Elixir can now extend the &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; API, adding functions such as &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime.shift_zone/3&lt;/code&gt;. By default, Elixir ships with a time zone database called &lt;code class=&quot;highlighter-rouge&quot;&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; that only handles UTC.&lt;/p&gt;
&lt;p&gt;Other Calendar related improvements include the addition of &lt;code class=&quot;highlighter-rouge&quot;&gt;Date.day_of_year/1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Date.quarter_of_year/1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Date.year_of_era/1&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Date.day_of_era/1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;faster-compilation-and-other-performance-improvements&quot;&gt;Faster compilation and other performance improvements&lt;/h2&gt;
&lt;p&gt;Due to improvements to the compiler made over the last year, Elixir v1.8 should compile code about 5% faster on average. This is yet another release where we have been able to reduce compilation times and provide a more joyful development experience to everyone.&lt;/p&gt;
&lt;p&gt;The compiler also emits more efficient code for range checks in guards (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;x in y..z&lt;/code&gt;), for charlists with interpolation (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;'foo #{bar} baz'&lt;/code&gt;), and when working with records via the &lt;code class=&quot;highlighter-rouge&quot;&gt;Record&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;Finally, EEx templates got their own share of optimizations, emitting more compact code that runs faster.&lt;/p&gt;
&lt;h2 id=&quot;improved-instrumentation-and-ownership-with-callers&quot;&gt;Improved instrumentation and ownership with &lt;code class=&quot;highlighter-rouge&quot;&gt;$callers&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Task&lt;/code&gt; module is one of the most common ways to spawn light-weight processes to perform work concurrently. Whenever you spawn a new process, Elixir annotates the parent of that process through the &lt;code class=&quot;highlighter-rouge&quot;&gt;$ancestors&lt;/code&gt; key. This information can be used by instrumentation tools to track the relationship between events occurring within multiple processes. However, many times, tracking only the &lt;code class=&quot;highlighter-rouge&quot;&gt;$ancestors&lt;/code&gt; is not enough.&lt;/p&gt;
&lt;p&gt;For example, we recommend developers to always start tasks under a supervisor. This provides more visibility and allows us to control how those tasks are terminated when a node shuts down. In your code, this can be done by invoking something like: &lt;code class=&quot;highlighter-rouge&quot;&gt;Task.Supervisor.start_child(MySupervisor, task_specification)&lt;/code&gt;. This means that, although your code is the one who invokes the task, the actual parent of the task would be the supervisor, as the supervisor is the one spawning it. We would list the supervisor as one of the &lt;code class=&quot;highlighter-rouge&quot;&gt;$ancestors&lt;/code&gt; for the task, but the relationship between your code and the task is lost.&lt;/p&gt;
&lt;p&gt;In Elixir v1.8, we now track the relationship between your code and the task via the &lt;code class=&quot;highlighter-rouge&quot;&gt;$callers&lt;/code&gt; key in the process dictionary, which aligns well with the existing &lt;code class=&quot;highlighter-rouge&quot;&gt;$ancestors&lt;/code&gt; key. Therefore, assuming the &lt;code class=&quot;highlighter-rouge&quot;&gt;Task.Supervisor&lt;/code&gt; call above, we have:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;[your code] -- calls --&amp;gt; [supervisor] ---- spawns --&amp;gt; [task]
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which means we store the following relationships:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;[your code]              [supervisor] &amp;lt;-- ancestor -- [task]
     ^                                                  |
     |--------------------- caller ---------------------|
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When a task is spawned directly from your code, without a supervisor, then the process running your code will be listed under both &lt;code class=&quot;highlighter-rouge&quot;&gt;$ancestors&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;$callers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This small feature is very powerful. It allows instrumentation and monitoring tools to better track and relate the events happening in your system. This feature can also be used by tools like the “Ecto Sandbox”. The “Ecto Sandbox” allows developers to run tests concurrently against the database, by using transactions and an ownership mechanism where each process explicitly gets a connection assigned to it. Without &lt;code class=&quot;highlighter-rouge&quot;&gt;$callers&lt;/code&gt;, every time you spawned a task that queries the database, the task would not know its caller, and therefore it would be unable to know which connection was assigned to it. This often meant features that rely on tasks could not be tested concurrently. With &lt;code class=&quot;highlighter-rouge&quot;&gt;$callers&lt;/code&gt;, figuring out this relationship is trivial and you have more tests using the full power of your machine.&lt;/p&gt;
&lt;h2 id=&quot;summing-up&quot;&gt;Summing up&lt;/h2&gt;
&lt;p&gt;We are really proud of this release (as usual!) which brings many improvements at the infrastructure level. Those improvements were designed with feedback from the community and from the many different companies using Elixir in production. The full list of changes is available in our &lt;a href=&quot;https://github.com/elixir-lang/elixir/releases/tag/v1.8.0&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is only one last major feature planned for upcoming Elixir versions, which is the addition of &lt;code class=&quot;highlighter-rouge&quot;&gt;mix release&lt;/code&gt; to Elixir itself, streamlining the experience provided by packages like &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;distillery&lt;/a&gt;. With &lt;code class=&quot;highlighter-rouge&quot;&gt;mix release&lt;/code&gt;, a developer can bundle the VM and all compiled code in a single directory, which can then be packaged and sent to production. We are glad to say the &lt;a href=&quot;https://github.com/elixir-lang/elixir/issues/8612&quot;&gt;work on this feature has already started&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;During &lt;a href=&quot;https://www.youtube.com/watch?v=suOzNeMJXl0&quot;&gt;my keynote at ElixirConf 2018 US&lt;/a&gt;, I talked about the next five years for Elixir and much of the emphasis is put on the community. Elixir was designed to be an extensible language and therefore the work on the language itself is meant to reduce with time, which we have seen in the last two releases. We trust the community to continue building on this solid foundation, bringing new challenges to the ecosystem and taking the language to new domains.&lt;/p&gt;
&lt;p&gt;Check &lt;a href=&quot;https://elixir-lang.org/install.html&quot;&gt;the Install section&lt;/a&gt; to get Elixir installed and read our &lt;a href=&quot;http://elixir-lang.org/getting-started/introduction.html&quot;&gt;Getting Started guide&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;Your turn. :)&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 19:09:06 +0000</pubDate>
<dc:creator>_asummers</dc:creator>
<og:title>Elixir v1.8 released</og:title>
<og:description>Elixir v1.8 comes with many improvements at the infrastructure level, improving compilation time, speeding up common patterns, and adding features around introspection of the system.</og:description>
<og:url>https://elixir-lang.org/blog/2019/01/14/elixir-v1-8-0-released/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://elixir-lang.org/blog/2019/01/14/elixir-v1-8-0-released/</dc:identifier>
</item>
<item>
<title>Analyzing the chords of 1300 popular songs for patterns</title>
<link>http://www.hooktheory.com/blog/i-analyzed-the-chords-of-1300-popular-songs-for-patterns-this-is-what-i-found/</link>
<guid isPermaLink="true" >http://www.hooktheory.com/blog/i-analyzed-the-chords-of-1300-popular-songs-for-patterns-this-is-what-i-found/</guid>
<description>&lt;p&gt;For many people, listening to music elicits such an emotional response that the idea of dredging it for statistics and structure can seem odd or even misguided. But knowing these patterns can give one a deeper more fundamental sense for how music works; for me this makes listening to music a lot more interesting. Of course, if you play an instrument or want to write songs, being aware of these things is obviously of great practical importance.&lt;/p&gt;
&lt;p&gt;In this article, we’ll look at the statistics gathered from 1300 choruses, verses, etc. of popular songs to discover the answer to a few basic questions. First we’ll look at the relative popularity of different chords based on the frequency that they appear in the chord progressions of popular music. Then we’ll begin to look at the relationship that different chords have with one another. For example, if a chord is found in a song, what can we say about the probability for what the next chord will be that comes after it?&lt;/p&gt;

&lt;h2&gt;To make quantitative statements about music you need to have data; lots of it.&lt;/h2&gt;
&lt;p&gt;Guitar tab websites have tons of information about the chord progressions that songs use, but the quality is not very high. Just as important, the information is not in a format suitable for gathering statistics. So, over the past 2 years we’ve been slowly and painstakingly building up a database of songs taken mainly from the billboard 100 and analyzing them 1 at a time. At the moment the database of songs has over 1300 entries indexed. The genre and where they are taken from is important. This is an analysis of mainly “popular” music, not jazz or classical, so the results are not meant to be treated as universal. If you’re interested, you can check out the database &lt;a title=&quot;here&quot; href=&quot;http://www.hooktheory.com/analysis/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. The entries contain raw information about the chords and melody, while throwing out information about the arrangement and instrumentation.&lt;/p&gt;
&lt;p&gt;We can use the information in the song database to answer all sorts of questions. In this introductory post, I’ll look at a few interesting preliminary results, but we invite you to propose your own questions in the comments at the end of the article.&lt;/p&gt;
&lt;p&gt;Let’s get started.&lt;/p&gt;
&lt;h2&gt;Are some chords more commonly used than others?&lt;/h2&gt;
&lt;p&gt;This seems like such a basic question, but the answer doesn’t actually tell us much because songs are written in different keys. A song written in the key of C♯ will have lots of &lt;em&gt;C#&lt;/em&gt; chords in it, while a song written in G will probably have lots of &lt;em&gt;G&lt;/em&gt;‘s. That &lt;em&gt;G&lt;/em&gt; chords are more popular than &lt;em&gt;C♯&lt;/em&gt; chords is likely only a reflection of the fact that it’s easier to play on the guitar and piano. So instead of answering this meaningless question, I’ll answer the slightly more interesting one of, what keys are most popular for the songs in the database?&lt;/p&gt;
&lt;h4&gt;Most popular keys in music&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.hooktheory.com.s3.amazonaws.com/assets/imgs/part1/most-popular-keys-in-popular-music.png&quot; alt=&quot;Most popular keys in popular music&quot; title=&quot;popular keys&quot;/&gt;&lt;/p&gt;
&lt;p&gt;C (and its relative minor, A) are the most common by far. After that there is a general trend favoring key signatures with less sharps and flats but this is not universal. E♭ with three flats, for instance, is slightly (though not statistically significantly) more common than F with only one flat. B♭ only has two flats but is way at the end of the popularity scale with only 4% of songs using that as the key.&lt;/p&gt;
&lt;h2&gt;What are the most common chords? Part 2&lt;/h2&gt;
&lt;p&gt;It’s much more interesting to look at songs written in a single common key. That way direct comparisons are possible and more illuminating. We transposed every song in the database to be in the key of C to make them directly comparable. Then we looked at the number of chord progressions that contained a given chord. Below we’ve plotted the relative frequency that different chords occurred in descending order.&lt;/p&gt;
&lt;h4&gt;Chord use when all songs are transposed to the key of C major&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.hooktheory.com.s3.amazonaws.com/assets/imgs/part1/chord-frequency-in-c-major.png&quot; alt=&quot;Chord frequency in key of C major&quot; title=&quot;popular chords&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As expected, C major is a very common chord for songs written in C (it’s the &lt;em&gt;I&lt;/em&gt; chord in Roman numeral or Nashville Number notation), but F major and G major (the &lt;em&gt;IV&lt;/em&gt; and &lt;em&gt;V&lt;/em&gt; respectively) are used just as often. Interestingly, &lt;em&gt;F&lt;/em&gt; and &lt;em&gt;G&lt;/em&gt; actually show up in more chord progressions than &lt;em&gt;C&lt;/em&gt;! C major is the tonal center and one might expect it to be ubiquitous, but it turns out to be pretty common to omit this chord in some sections of a song for effect. &lt;a title=&quot;My Heart Will Go On&quot; href=&quot;http://www.hooktheory.com/analysis/view/celine-dion/my-heart-will-go-on&quot; target=&quot;_blank&quot;&gt;“My Heart Will Go On” by Celine Dion&lt;/a&gt; is one of many examples in the database that exhibit this behavior. Clicking on the above link will take you to the song’s entry in the database and show you that of the two sections that were analyzed (the chorus, and the verse), only one contains a &lt;em&gt;C&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The A minor chord is the next most popular, but after that there is a significant drop off in use. If you’ve ever heard someone complain about the “four chord pop song”, this is what they are talking about.&lt;/p&gt;
&lt;h2&gt;Is there a reasonable explanation for the relative popularity of certain chords?&lt;/h2&gt;
&lt;p&gt;Why are A minor chords so popular but A major chords practically non existent? There won’t always be easy answers, but in this case these results can easily be explained with some basic music theory. A discussion of this is out of the scope of this post, but we’ll definitely explore the music theory behind this in future articles.&lt;/p&gt;
&lt;p&gt;Even if you don’t know the music theory behind this yet, there is a lot of practical information to take away. If your song is written in C and you want it to sound good, you probably shouldn’t use any A major chords unless you really know what you’re doing. Better stick with A minor, for example.&lt;/p&gt;
&lt;p&gt;The team over at Apple, Inc. evidently know their music theory. Their latest version of GarageBand lets you play with “Smart Instruments” that “make you sound like an expert musician… even if you’ve never player a note before.”&lt;/p&gt;
&lt;p&gt;I’m skeptical of their claims, but look at the chords they’ve chosen for these “Smart Instruments”:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.hooktheory.com.s3.amazonaws.com/assets/imgs/part1/smartinstrument.png&quot; alt=&quot;&quot; title=&quot;smartinstrument&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Don’t those chords look familiar? Based on what our database is showing, I might suggest some small changes.&lt;/p&gt;
&lt;p&gt;In particular, &lt;em&gt;Bdim&lt;/em&gt;, while diatonic in C, is much less common than some other chords, like &lt;em&gt;D&lt;/em&gt;, and &lt;em&gt;E&lt;/em&gt;. Perhaps in the next version of garageband, Apple will fix this (they really should).&lt;/p&gt;
&lt;p&gt;However, overall Apple is making good choices for the chords that the average “garage band musician” might want to start with.&lt;/p&gt;
&lt;h2&gt;If a song happens to use a particular chord, what chord is most likely to come next?&lt;/h2&gt;
&lt;p&gt;The previous question took an overall look at the relative popularity of different chords, but we can also look at the relationship that different chords have to one another. For example, a great question to ask is, if a song happens to use a particular chord, what chord is most likely to come next? Is it random, or will certain chords sound better than others and thus be more likely to show up in the popular songs that make up our database?&lt;/p&gt;
&lt;p&gt;There are a lot of relationships to analyze, but we’ll start it off by looking at just one for now: For songs written in C, what chords are most likely to come after an E minor chord? The relative popularity of what the &lt;em&gt;next&lt;/em&gt; chord will be is shown below:&lt;/p&gt;
&lt;h4&gt;Chords most likely to come after E minor&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://cdn.hooktheory.com.s3.amazonaws.com/assets/imgs/part1/chords-following-iii.png&quot; alt=&quot;&quot; title=&quot;chordsfollowingem&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This result is striking. If you write a song in C with an E minor in it, you should probably think very hard if you want to put a chord that is anything other than A minor or F major after the E minor. For the songs in the database, 93% of the time one of these two chords came next!&lt;/p&gt;
&lt;p&gt;There are lot of interesting questions to ask, and we want to know what is most interesting to you. Let us know in the comments below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other posts in the 1300 song series&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Mon, 14 Jan 2019 19:03:25 +0000</pubDate>
<dc:creator>ohjeez</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.hooktheory.com/blog/i-analyzed-the-chords-of-1300-popular-songs-for-patterns-this-is-what-i-found/</dc:identifier>
</item>
<item>
<title>Notion – All-in-one workspace for notes, tasks, wikis, and databases</title>
<link>https://www.notion.so</link>
<guid isPermaLink="true" >https://www.notion.so</guid>
<description>&lt;style&gt;&lt;![CDATA[
			/* Used so electron will render a white background. */
			body {
				background: white;
			}
 			.loading-spinner {
				-webkit-animation: rotate 1000ms linear infinite;
				animation: rotate 1000ms linear infinite;
				-webkit-transform-origin: center center;
				transform-origin: center center;
				width: 1em;
				height: 1em;
				opacity: 0.5;
				display: block;
			}
 			@-webkit-keyframes rotate {
				0% {
					-webkit-transform: rotate(0deg) translateZ(0);
					transform: rotate(0deg) translateZ(0);
				}
				100% {
					-webkit-transform: rotate(360deg) translateZ(0);
					transform: rotate(360deg) translateZ(0);
				}
			}
 			@keyframes rotate {
				0% {
					-webkit-transform: rotate(0deg) translateZ(0);
					transform: rotate(0deg) translateZ(0);
				}
				100% {
					-webkit-transform: rotate(360deg) translateZ(0);
					transform: rotate(360deg) translateZ(0);
				}
			}
		]]&gt;&lt;/style&gt;
		
			</description>
<pubDate>Mon, 14 Jan 2019 17:33:16 +0000</pubDate>
<dc:creator>torvald</dc:creator>
<og:type>website</og:type>
<og:url>https://www.notion.so</og:url>
<og:title>Notion – The all-in-one workspace for your notes, tasks, wikis, and databases.</og:title>
<og:description>A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team</og:description>
<og:image>https://www.notion.so/images/meta.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.notion.so/</dc:identifier>
</item>
<item>
<title>Ask HN: How do you motivate yourself to keep working on a project?</title>
<link>https://news.ycombinator.com/item?id=18903886</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=18903886</guid>
<description>&lt;tr readability=&quot;0.55737704918033&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: How do you motivate yourself to keep working on a project?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11.66430469442&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;7.626660761736&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;18903886&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18903886&quot; class=&quot;storylink&quot;&gt;Ask HN: How do you motivate yourself to keep working on a project?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_18903886&quot;&gt;217 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=SamWhited&quot; class=&quot;hnuser&quot;&gt;SamWhited&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18903886&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_18903886&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=18903886&amp;amp;goto=item%3Fid%3D18903886&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20How%20do%20you%20motivate%20yourself%20to%20keep%20working%20on%20a%20project%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20How%20do%20you%20motivate%20yourself%20to%20keep%20working%20on%20a%20project%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=18903886&amp;amp;auth=fc4842f161e9afabf51cd0446a1c6d42ad35a811&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=18903886&quot;&gt;145 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;6&quot;&gt;I've been working on a small issue tracker for a few months, and it's been ready to release for a while, but I have one more hurdle that I just can't convince myself to overcome: billing. I &lt;em&gt;hate&lt;/em&gt; working with the payment provider I've chosen (but they really do seem to be the easiest thing, others I've looked at are no better). I end up with horribly messy code from their terrible Go SDK, everyone says their documentation is great, but as far as I can tell there's a lot of it that all leaves out important information at every step, so I have to tease out how to deal with their million edge cases, etc. I've been putting off a billing rewrite for weeks now and not working towards an actual release; it's to the point where I'm questioning if I even want to be in this industry (although to be fair, I've been questioning that since before I got into software).
&lt;p&gt;What do you do to keep yourself motivated? Especially when you hit something you hate to work on but is necessary.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Mon, 14 Jan 2019 15:55:46 +0000</pubDate>
<dc:creator>SamWhited</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=18903886</dc:identifier>
</item>
<item>
<title>Secure and Ad-Free Internet Anywhere with Streisand and Pi Hole</title>
<link>https://ifelse.io/2019/01/12/secure-ad-free-internet-anywhere-with-streisand-and-pi-hole/</link>
<guid isPermaLink="true" >https://ifelse.io/2019/01/12/secure-ad-free-internet-anywhere-with-streisand-and-pi-hole/</guid>
<description>&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ads are everywhere and aren’t so fun&lt;/li&gt;
&lt;li&gt;everyone is trying to track you (for better or worse)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pi-hole.net&quot;&gt;Pi Hole&lt;/a&gt; is awesome; it’s a network-level adblocker and runs on a Raspberry Pi&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StreisandEffect/streisand&quot;&gt;streisand&lt;/a&gt; gives you a quick way to set up a censorship-resistant and secure server running a number of VPNs/proxies (&lt;a href=&quot;https://openvpn.net/&quot;&gt;OpenVPN&lt;/a&gt;, &lt;a href=&quot;https://shadowsocks.org/en/index.html&quot;&gt;Shadowsocks&lt;/a&gt;, &lt;a href=&quot;https://www.wireguard.com/&quot;&gt;Wireguard&lt;/a&gt;, and more!)&lt;/li&gt;
&lt;li&gt;you can combine them to get a secure &amp;amp; resilient connection with network-level ad-blocking everywhere you go (iOS/android, linux, mac OS, windows, etc.)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span class=&quot;marginnote&quot;&gt;Pi Hole is a suite of tools designed to do network-level ad blocking by acting as a localized DNS resolver.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I recently took some time off of work to spend time with family. During some free-time I had, I worked on a few side projects like &lt;a href=&quot;https://ifelse.io/2018/12/05/better-faster-more-secure-backups-with-restic&quot;&gt;getting our backups in order&lt;/a&gt; and getting a Raspberry Pi 3 running &lt;a href=&quot;https://pi-hole.net&quot;&gt;Pi Hole&lt;/a&gt;. I’m always a fan of better security at every level for people and their data, so these were really fun to get set up. With the Pi Hole running at home and our data being securely backed up, I felt we’d made a couple important leaps forward in terms of data privacy and security. But I wanted that same privacy and ad-blocking capability wherever I was (on my phone, using my laptop remotely, etc.). I’d seen documentation about setting up a VPN on a remote server and using Pi Hole, but the examples were generally unwieldy and assumed too much of the reader (knowing a lot about &lt;em&gt;X&lt;/em&gt; VPN system etc.). So that’s where this post comes in.&lt;/p&gt;
&lt;p&gt;In this post, I’ll walk you through another weekend project that I recently worked on in the same privacy and home-tech vein: setting up a private VPN server on AWS with streisand and adding pi hole to get secure connectivity with network-level ad-blocking &lt;em&gt;anywhere you go&lt;/em&gt; and on &lt;em&gt;all your devices&lt;/em&gt;. Sounds good right? Read on to find out how.&lt;/p&gt;
&lt;h2 id=&quot;pi-hole&quot;&gt;Pi hole?&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;img src=&quot;https://ifelse.io/static/pi-hole-logo.png&quot; width=&quot;10%&quot;/&gt; If you’re interested in learning more about the story behind the Pi Hole, check out &lt;a href=&quot;https://softwareengineeringdaily.com/2018/05/29/pi-hole-ad-blocker-hardware-with-jacob-salmela/&quot;&gt;this episode&lt;/a&gt; from Software Engineering Daily&lt;/span&gt; Let’s start by discussing Pi Hole. Pi Hole is a suite of tools designed to do network-level ad blocking by acting as a localized DNS resolver. It offers (from their site):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;Network-wide protection&lt;/em&gt;: Instead of browser plugins or other software on each computer, install Pi-hole in one place and your entire network is protected.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Block in-app advertisements&lt;/em&gt;: Network-level blocking allows you to block ads in non-traditional places such as mobile apps and smart TVs, regardless of hardware or OS.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Improve network performance&lt;/em&gt;: Since advertisements are blocked before they are downloaded, network performance is improved and will feel faster.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Monitor statistics&lt;/em&gt;: Our Web interface offers control of your Pi-hole and a central place to view statistics. We also include an API for extending these stats.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Like I said, I got one of these set up during some time off in November. And having the Raspberry Pi has been great. For one, it’s easy for my family to use since there’s essentially nothing to be done to use it. And it’s a &lt;em&gt;network-wide&lt;/em&gt; adblocker, so our our non-browser devices are moderated, too! We’ve seen speed-ups on many devices and gotten some insight into which devices are calling home decently often, too. I even started noticing some network calls our ISP appears to be making, something I’m still looking into.&lt;/p&gt;
&lt;p&gt;I won’t do a full walk-through on getting the pi hole set up on a raspberry pi since I think that deserves it’s own treatment. But I do want to show off some of what the Pi Hole brings. Check out this dashboard with some sample data from the other day.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;marginnote&quot;&gt;&lt;em&gt;Our Pi Hole dashboard&lt;/em&gt;. The 14% was even decently low; most days when I check it’s usually around 20%. Which means &lt;em&gt;at least&lt;/em&gt; roughly 1 in 5 network requests is aimed at either ads or some sort of tracking. It’s telling to see which apps and even other devices around our home are calling home often or out to ad services. Not surprising, really, but it’s another thing to see it happening in your own home.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ifelse.io/static/pi-hole-dashboard-screenshot.jpg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;setting-up-a-wiregured-etc-server-with-streisand&quot;&gt;Setting up a Wiregured, etc. Server with Streisand&lt;/h2&gt;
&lt;p&gt;I’d looked into projects like OpenVPN in the past, but what always held me up was 1) a not-hard but also not-easy setup process and 2) feeling &lt;em&gt;juuuust&lt;/em&gt; lazy enough and/or motivated by other things to not want to go through the trouble of setting it up. I have a VPN through work, so it wasn’t something I wasn’t used to or understood the benefits of.&lt;/p&gt;
&lt;p&gt;But once I learned you could easily combine the pi hole’s ad-blocking capabilities with a VPN, I wanted to make it happen ASAP. This fact, plus discovering the &lt;a href=&quot;https://github.com/StreisandEffect/streisand&quot;&gt;streisand&lt;/a&gt; project were a perfect recipe for a (next available) weekend project. Streisand is great because it’s designed for speed and ease of use but also aims to be censorship resistant so it implements best practices. It also offers a wide variety of technologies out of the box, so you can choose a setup that works for you (ranging from more compatible to more performant).&lt;/p&gt;
&lt;p&gt;Clone the streisand repo to start and run it’s python venv setup.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/StreisandEffect/streisand.git &amp;amp;&amp;amp; cd streisand
./util/venv-dependencies.sh ./venv
source ./venv/bin/activate
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can choose a wide variety of platforms to run a streisand server on. I use AWS heavily professionally and personally, so I went with that. I made a few tweaks to the playbooks since I wasn’t happy with some defaults on a first run. Will probably open a PR to see what the team behind the project thinks of a few small changes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;playbooks/roles/genesis-amazon/defaults/main.yml&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can just as easily do this in the EC2 console later, too, if you prefer. I wanted to change to a T3 since that generation of AWS server is generally more cost-effective for the resources it gives you. To keep costs down, I ended up purchasing a reserved instance for the year and that cut my aws costs almost in half (notable, too, when you can run your own VPN instead of paying the likes of Nord VPN or one of the others).&lt;/p&gt;
&lt;p&gt;If you do find yourself here and unfamiliar with or unwilling to use AWS or another system to run your own server, pleast consider &lt;a href=&quot;https://protonvpn.com/&quot;&gt;Proton VPN&lt;/a&gt; as a secure alternative that isn’t as likely as the other providers to skim your data.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-yml&quot;&gt;#...
aws_instance_type: 't3.micro' # or whatever instance type you want
#...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;playbooks/roles/validation/tasks/main.yml&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I first ran through setting up streisand, I set the maximum number of client profiles (20) but later found this likely wouldn’t be enough since I’m trying to get my family and extended family to use the VPN and have better data security and privacy. If I can get them all to use this setup and &lt;a href=&quot;https://1password.com&quot;&gt;1Password&lt;/a&gt; I will be happy. Yes I am a ton of fun at parties and family gatherings ;) If 20 is sufficient for you, no reason to make this change.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: adding more profiles will slow down the setup process, especially if you’ve enabled all the options. I think setting up 150 profiles took around an hour or so for me (another reason to opt for the T3 over the T2.micro).&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-yml&quot;&gt;#...
when: (vpn_clients &amp;gt; 150) or (vpn_clients &amp;lt; 1)
#...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Finally, run the ansible playbooks.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sh&quot;&gt; ./streisand
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Feel free to choose whatever setup works best for you. The streisand ansible playbook will walk you through all the steps. The only parts worth noting or where I deviated from the defaults are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I use &lt;a href=&quot;https://cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt; for DNS, so I used the elastic IP to set a DNS record for the domain/subdomain we use. Streisand will prompt you for this FQDN during the process and try to get a &lt;a href=&quot;https://letsencrypt.org&quot;&gt;Let’s Encrypt&lt;/a&gt; SSL cert for you. If you do use Cloudfare, make sure &lt;em&gt;not&lt;/em&gt; to set the “DNS/HTTP proxy” setting at first. If you do, Cloudflare will see your application as being offline and resolve to a Cloudflare offline server. I discovered this after hitting my domain and then using &lt;code&gt;dig&lt;/code&gt; to see what was actually being resolved. I turned the Cloudflare cache/proxy back online after the server was running.&lt;/li&gt;
&lt;li&gt;I set up all the default options, but didn’t elect to set up a Tor server (for now). Feel free to choose whichever options you prefer&lt;/li&gt;
&lt;li&gt;I had the playbook create a &lt;em&gt;ton&lt;/em&gt; of profiles, so it took a lot longer than 10 min (probably just over an hour).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Once the setup is complete, streisand will let you open up a local HTML file that has the instructions for connecting to your gateway.&lt;/p&gt;
&lt;h2 id=&quot;adding-pi-hole&quot;&gt;Adding Pi Hole&lt;/h2&gt;
&lt;p&gt;To get the benefits of Pi Hole in your new VPN(s), ssh into your box. If you used the AWS setup, the EC2 console has a easy “connect” button that will show you how to do this. Once you’re in, you should run the pi hole installation script:&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;in your instance&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;marginnote&quot;&gt;If you’re interested in other installation methods, check out &lt;a href=&quot;https://github.com/pi-hole/pi-hole/#one-step-automated-install&quot;&gt;https://github.com/pi-hole/pi-hole/#one-step-automated-install&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-sh&quot;&gt;curl -sSL https://install.pi-hole.net | bash
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For the pi hole options, I followed all the defaults, choosing &lt;code&gt;tun0&lt;/code&gt; as the interface to listen on and I also installed the web interface. Interestingly, since streisand’s gateway is fronted by nginx, I’ll need to find a way to allow access to the &lt;code&gt;pi.hole&lt;/code&gt; UI admin. This is on my to-do list and shouldn’t be all that hard (likely just some nginx config). If you want to see stats sooner, you can run &lt;code&gt;pihole -c&lt;/code&gt; from inside your instances and get some basic stats. If you want to update your blocklists, you can also do that from the CLI inside your server. I added a few from &lt;a href=&quot;https://firebog.net&quot;&gt;https://firebog.net&lt;/a&gt; and have had good success. Blocklists there are marked as more or less likely to cause issues while browsing. This is helpful since you can gauge how often you wan to intervene to resolve issues or false-positives.&lt;/p&gt;
&lt;p&gt;There’s not much else to do to get up and running. For our setup, we use either &lt;a href=&quot;https://tunnelblick.net/downloads.html&quot;&gt;TunnelBlick&lt;/a&gt;, &lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot;&gt;Shadowsocks NG&lt;/a&gt;, or &lt;a href=&quot;https://www.wireguard.com/&quot;&gt;Wireguard&lt;/a&gt; clients for desktop and primarily Wireguard for our phones since it offers the best overall performance. There are also OpenVPN clients available for seemingly every platform. Once you’ve connected, check out &lt;a href=&quot;https://pi-hole.net/pages-to-test-ad-blocking-performance/&quot;&gt;https://pi-hole.net/pages-to-test-ad-blocking-performance/&lt;/a&gt; to see the ad blocking goodness at work! You can also visit &lt;a href=&quot;https://duckduckgo.com/?q=ip+address&amp;amp;ia=answer&quot;&gt;duckduckgo&lt;/a&gt; to see your IP (should be the elastic IP you set or similar).&lt;/p&gt;
&lt;p&gt;Questions, thoughts? Let me know in the comments or &lt;a href=&quot;https://twitter.com/MarkTheThomas&quot;&gt;@markthethomas&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 14 Jan 2019 15:42:58 +0000</pubDate>
<dc:creator>markthethomas</dc:creator>
<og:title>Secure &amp; Ad-free Internet Anywhere With Streisand and Pi Hole</og:title>
<og:description>tl;dr: ads are everywhere and aren’t so fun everyone is trying to track you (for better or worse) Pi Hole is awesome; it’s a network-level adblocker and runs on a Raspberry Pi streisand gives you a quick way to set up a censorship-resistant and secure server running a number of VPNs/proxies (OpenVPN, Shadowsocks, Wireguard, and more!) you can combine them to get a secure &amp; resilient connection with network-level ad-blocking everywhere you go (iOS/android, linux, mac OS, windows, etc.</og:description>
<og:type>article</og:type>
<og:url>https://ifelse.io/2019/01/12/secure-ad-free-internet-anywhere-with-streisand-and-pi-hole/</og:url>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ifelse.io/2019/01/12/secure-ad-free-internet-anywhere-with-streisand-and-pi-hole/</dc:identifier>
</item>
</channel>
</rss>