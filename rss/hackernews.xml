<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Chicago Police Department shuts down its arrest API</title>
<link>https://www.chicagoreporter.com/chicago-police-department-arrest-api-shutdown-is-its-own-kind-of-cover-up/</link>
<guid isPermaLink="true" >https://www.chicagoreporter.com/chicago-police-department-arrest-api-shutdown-is-its-own-kind-of-cover-up/</guid>
<description>&lt;p&gt;With Chicago reeling this week from a bloody July 4 weekend that saw more than 80 shootings claim the lives of at least 17 people, including &lt;a href=&quot;https://www.nytimes.com/2020/07/05/us/chicago-shootings.html&quot;&gt;young children&lt;/a&gt;, police Superintendent David Brown doubled down on his approach to stemming the violence at a press conference Monday. &lt;/p&gt;
&lt;p&gt;“We must keep violent offenders in jail longer,” Brown said, arguing that arrestees are getting released too quickly and that the electronic monitoring program is “clearly not working” and needs to be revamped. Mayor Lori Lightfoot agreed on the need to keep violent offenders locked up in order to reduce crime. &lt;/p&gt;
&lt;p&gt;Brown had deployed an &lt;a href=&quot;https://www.chicagotribune.com/politics/ct-chicago-fourth-of-july-violence-lightfoot-20200702-qtevpraxqbasjpc6hu2el6efie-story.html&quot;&gt;additional 1,200 officers&lt;/a&gt; on the streets ahead of the holiday weekend to break up “drug corners,” in a strategy not unlike that of police chiefs before him. His plan was criticized by civil rights advocates and criminologists, &lt;a href=&quot;https://www.wbez.org/stories/advocates-blast-chicago-plan-to-sweep-up-drug-corner-teens-before-july-4/5ed35122-8b84-4319-a0bc-21b9e291cd2f&quot;&gt;WBEZ reported&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;“Our endgame is arrests for the precursors to violence,” Brown said. “But when we clear the corner, we’re pleading with the court systems: Keep them in jail through the weekend.”&lt;/p&gt;
&lt;p&gt;Brown’s remarks raise many questions. How did officers carry out this policing strategy? Did they make arrests for violent crimes or other charges? How long were arrestees in police custody? Do these defendants quickly bond out or remain detained? Do these kinds of arrests really keep violent offenders off the street and effectively prevent more violence? Queries like these are key to digging into Brown’s claims and gauging how effective CPD’s tactics are. &lt;/p&gt;
&lt;p&gt;But it’s now substantially more difficult to check CPD’s claims and details about arrests. That’s because the department recently shut down its arrest API used by journalists and researchers. A data API, or application programming interface, provides access to structured information in a way machines can read, akin to the difference between getting data in a spreadsheet file versus copying it by hand into a spreadsheet. &lt;/p&gt;
&lt;p&gt;CPD’s API provided access to comprehensive and timely data about arrests going back to 2014 in ways that can be processed and analyzed by software engineers and reporters. &lt;/p&gt;
&lt;p&gt;The Chicago Reporter used the API last month to analyze police tactics during local mass protests following the Minneapolis police killing of George Floyd. CPD had released figures stating that the majority of arrests made on the weekend of May 29 were for criminal conduct related to looting, not protesting. &lt;/p&gt;
&lt;p&gt;But by using CPD’s own data from the arrest API, &lt;a href=&quot;https://www.chicagoreporter.com/chicago-police-arrested-more-people-for-protesting-than-for-looting-in-early-days-of-unrest-contradicting-original-claims/&quot;&gt;we found the opposite to be true&lt;/a&gt;: the majority of civil unrest-related arrests made that weekend had been for offenses related to protesting. CPD revised their numbers and acknowledged that a number of arrests had been miscategorized. The mayor’s office also addressed the discrepancy in a statement to The Chicago Reporter, saying it was “working with the Chicago Police Department to ensure they re-run all data during this period of time to ensure a more accurate representation of arrests throughout the city.” &lt;/p&gt;
&lt;p&gt;Within a day of our publishing this analysis, &lt;a href=&quot;https://twitter.com/foiachap/status/1273411468080316416&quot;&gt;CPD removed access to the API for all users&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;When we asked CPD why the API was no longer available, Assistant Director of Communications Luis Agostini said in a statement emailed June 18:&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote is-style-default&quot;&gt;
&lt;p&gt;“We looked into this and confirmed with our IT Department that API was a tool that was previously available at one point, but has been discontinued / turned off. The API Access site is stagnant and not being monitored and should have been pulled down once the tool was no longer publicly accessible, and as a result, requests for access were not being reviewed.” &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Reporter has submitted two FOIA requests to CPD for emails and other internal communications about closing access to the arrest API but one was rejected for being unduly burdensome and the other has not received a response. In response to another request sent to The Civilian Office of Police Accountability for similar communications, that office said no relevant records existed. Of three related requests sent to CPD, one was never responded to, and two were also rejected for being unduly burdensome.&lt;/p&gt;
&lt;p&gt;Gaining access to the API had actually been a lengthy process for The Chicago Reporter. We had requested access in late 2019 but never heard back from CPD and instead got access as a member of the &lt;a href=&quot;https://chicagodatacollaborative.org/&quot;&gt;Chicago Data Collaborative&lt;/a&gt;, a cooperative between newsrooms, academics, and nonprofit researchers to obtain, organize, document and link criminal justice data from public agencies. &lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;dollars to donuts, CPD “revised” their inflated claims of looting *because* the &lt;a href=&quot;https://twitter.com/ChicagoReporter?ref_src=twsrc%5Etfw&quot;&gt;@chicagoreporter&lt;/a&gt; checked the numbers. chilling that CPD has since restricted access to the underlying data.&lt;/p&gt;&lt;p&gt;vital work by the &lt;a href=&quot;https://twitter.com/ChicagoReporter?ref_src=twsrc%5Etfw&quot;&gt;@chicagoreporter&lt;/a&gt;&lt;a href=&quot;https://t.co/tVKaEa0zhw&quot;&gt;https://t.co/tVKaEa0zhw&lt;/a&gt;&lt;/p&gt;
— Forest Gregg (@forestgregg) &lt;a href=&quot;https://twitter.com/forestgregg/status/1273017222345170944?ref_src=twsrc%5Etfw&quot;&gt;June 16, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;With the API inaccessible, TCR and others now only have direct access to arrest information via CPD’s web-based arrest search data portal. But that portal does not provide data in a way that can be readily analyzed. Obtaining structured data from this system is costly and time-consuming due to the need to tell the system you’re not a robot every few searches. It also doesn’t include some key categories of information formerly available via the API, including the primary charge, bond hearing dates, IR number, and the FBI code associated with the type of arrest.&lt;/p&gt;
&lt;p&gt;Another method to obtain detailed arrest data formerly available via the API is to file FOIAs for specific timespans, which are subject to exemptions and lengthy delays. The Reporter has submitted a request for arrest data from July 2 to 5 to analyze police tactics that weekend.&lt;/p&gt;
&lt;p&gt;The removal of the API flies in the face of Lightfoot’s stated philosophy of “radical transparency.” Her mayoral transition report included a section on &lt;a href=&quot;https://assets.documentcloud.org/documents/6009536/Lori-Lightfoot-Transition-Report.pdf&quot;&gt;transparency through open data&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;“A veil of secrecy, which hides many city decisions, exacerbates Chicagoans’ mistrust of city government,” the report says. “A radically transparent Chicago would see all Chicagoans having meaningful access to city records— not just the ability to access them, but the ability to find them in a user-friendly database with sufficient context to help identify and understand the information.” &lt;/p&gt;
&lt;p&gt;The city of Chicago did not respond to request for comment at the time the arrest API was shut down.&lt;/p&gt;
&lt;p&gt;“Having access to individual-level arrest data allows researchers like me to answer many important questions,” said Justin Feldman, research fellow at Harvard FXB Center for Health and Human Rights, who was using data obtained from the arrest API to study how policing practices might be contributing to the spread of COVID-19. “Limiting our access to arrest data means researchers cannot answer crucial questions that could inform criminal justice policy throughout the United States.”&lt;/p&gt;
&lt;p&gt;For a police department notorious for its lack of transparency, this has a simple fix: release the data. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Matt Chapman and Josh McGhee contributed reporting. &lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 09 Jul 2020 19:10:28 +0000</pubDate>
<dc:creator>blinding-streak</dc:creator>
<og:type>article</og:type>
<og:title>Chicago Police Department arrest API shutdown is its own kind of ‘cover up’ - Chicago Reporter</og:title>
<og:description>Blocking access to key law enforcement data hinders critical accountability efforts by journalists and researchers and ultimately limits discourse on public safety.</og:description>
<og:url>https://www.chicagoreporter.com/chicago-police-department-arrest-api-shutdown-is-its-own-kind-of-cover-up/</og:url>
<og:image>https://i2.wp.com/www.chicagoreporter.com/wp-content/uploads/2020/07/web_20180802_LSD_Shutdown_004.jpg?fit=1170%2C780&amp;ssl=1</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.chicagoreporter.com/chicago-police-department-arrest-api-shutdown-is-its-own-kind-of-cover-up/</dc:identifier>
</item>
<item>
<title>U.S. Supreme Court deems half of Oklahoma a Native American reservation</title>
<link>https://www.reuters.com/article/usa-court-oklahoma/us-supreme-court-deems-half-of-oklahoma-a-native-american-reservation-idUSKBN24A2BE</link>
<guid isPermaLink="true" >https://www.reuters.com/article/usa-court-oklahoma/us-supreme-court-deems-half-of-oklahoma-a-native-american-reservation-idUSKBN24A2BE</guid>
<description>&lt;p&gt;WASHINGTON (Reuters) - The U.S. Supreme Court on Thursday recognized about half of Oklahoma as Native American reservation land and overturned a tribe member’s rape conviction because the location where the crime was committed should have been considered outside the reach of state criminal law.&lt;/p&gt;
&lt;div class=&quot;PrimaryAsset_container&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;Image_container&quot; tabindex=&quot;-1&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;LazyImage_container LazyImage_dark&quot;&gt;&lt;img src=&quot;https://s4.reutersmedia.net/resources/r/?m=02&amp;amp;d=20200709&amp;amp;t=2&amp;amp;i=1525183929&amp;amp;r=LYNXMPEG6819V&amp;amp;w=20&quot; aria-label=&quot;FILE PHOTO: The U.S. Supreme Court building is seen in Washington, U.S., June 30, 2020. REUTERS/Carlos Barria/File Photo&quot;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;FILE PHOTO: The U.S. Supreme Court building is seen in Washington, U.S., June 30, 2020. REUTERS/Carlos Barria/File Photo&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The justices ruled 5-4 in favor of a man named Jimcy McGirt and agreed that the site of the rape should have been recognized as part of a reservation based on the historical claim of the Muscogee (Creek) Nation - beyond the jurisdiction of state authorities. Conservative Justice Neil Gorsuch joined the court’s four liberals in the majority.&lt;/p&gt;
&lt;p&gt;The ruling means that for the first time much of eastern Oklahoma is legally considered reservation land. More than 1.8 million people live in the land at issue, including roughly 400,000 in Tulsa, Oklahoma’s second-largest city.&lt;/p&gt;
&lt;p&gt;Tribe members who live within the boundaries are now set to become exempt from certain state obligations such as paying state taxes, while certain Native Americans found guilty in state courts may be able to challenge their convictions on jurisdictional grounds. The tribe also may obtain more power to regulate alcohol sales and expand casino gambling.&lt;/p&gt;
&lt;p&gt;The ruling could affect the other four of the “Five Tribes” in Oklahoma: the Cherokee, Chickasaw, Choctaw and Seminole tribes.&lt;/p&gt;
&lt;p&gt;The ruling voided McGirt’s sentence of 1,000 years in prison but he could face a new trial in federal court rather than state court.&lt;/p&gt;
&lt;p&gt;Under U.S. law, tribe members who commit crimes on tribal land cannot be prosecuted in state courts and instead are subject to federal prosecution, which sometimes can be beneficial to defendants. Reservations were established beginning in the 19th century after U.S. authorities expelled Native Americans from their traditional lands.&lt;/p&gt;
&lt;p&gt;McGirt, 71, has served more than two decades in prison after being convicted in 1997 in Wagoner County in eastern Oklahoma of rape, lewd molestation and forcible sodomy of a 4-year-old girl. McGirt, who did not contest his guilt in the case before the justices, had appealed a 2019 ruling by a state appeals court in favor of Oklahoma.&lt;/p&gt;
&lt;p&gt;McGirt is a member of the Seminole Nation. The crime occurred on land historically claimed by the Creek Nation.&lt;/p&gt;
&lt;p&gt;At issue was whether the Muscogee (Creek) Nation territory where the crime was committed should be considered a Native American reservation or whether Congress eliminated that status around the time Oklahoma became a state in 1907.&lt;/p&gt;
&lt;p&gt;Oklahoma argued that the Creek Nation never had a reservation. But even if one existed, the state and President Donald Trump’s administration argued it long ago was eliminated by Congress.&lt;/p&gt;
&lt;p&gt;The justices weighed a complex historical record that started with the forced relocation by the U.S. government of Native Americans, including the Creek Nation, to Oklahoma in a traumatic 19th century event known as the “trail of tears.”&lt;/p&gt;
&lt;p&gt;A reservation is land managed by a tribe under the federal Bureau of Indian Affairs and generally exempt from state jurisdiction including taxation.&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting by Lawrence Hurley; Editing by Will Dunham&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 09 Jul 2020 16:32:40 +0000</pubDate>
<dc:creator>threatofrain</dc:creator>
<og:title>U.S. Supreme Court deems half of Oklahoma a Native American reservation</og:title>
<og:url>https://www.reuters.com/article/usa-court-oklahoma-idUSKBN24A2BE</og:url>
<og:type>article</og:type>
<og:description>The U.S. Supreme Court on Thursday recognized about half of Oklahoma as Native American reservation land and overturned a tribe member's rape conviction because the location where the crime was committed should have been considered outside the reach of state criminal law.</og:description>
<og:image>https://s4.reutersmedia.net/resources/r/?m=02&amp;d=20200709&amp;t=2&amp;i=1525183929&amp;w=1200&amp;r=LYNXMPEG6819V</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/usa-court-oklahoma/us-supreme-court-deems-half-of-oklahoma-a-native-american-reservation-idUSKBN24A2BE</dc:identifier>
</item>
<item>
<title>Slate Star Codex and Silicon Valley’s War Against the Media</title>
<link>https://www.newyorker.com/culture/annals-of-inquiry/slate-star-codex-and-silicon-valleys-war-against-the-media</link>
<guid isPermaLink="true" >https://www.newyorker.com/culture/annals-of-inquiry/slate-star-codex-and-silicon-valleys-war-against-the-media</guid>
<description>&lt;p class=&quot;has-dropcap has-dropcap__lead-standard-heading&quot;&gt;Since the 2016 Presidential election, a contingent of the media has been increasingly critical of Silicon Valley, charging tech founders, C.E.O.s, venture capitalists, and other technology boosters with an arrogant, naïve, and reckless attitude toward the institutions of a functional democracy, noting their tendency to disguise anticompetitive, extractive behavior as disruptive innovation. Many technologists and their investors believe that media coverage of their domain has become histrionic and punitive, scapegoating tech companies for their inability to solve extremely difficult problems, such as political polarization, that are neither of their own devising nor within their ability to solve. The Valley’s most injured, aggrieved, and single-minded partisans don’t want to be judged by the absurdity of Juicero, the much-ridiculed luxury-juicing startup, or the fraud of Theranos, or the depredations of Uber. As Paul Graham pointed out, in a 2017 tweet, it was unfair to condemn the entirety of the tech sector based on a few bad actors. “Criticizing Juicero is fine,” he wrote. “What’s intellectually dishonest is criticizing SV by claiming Juicero is typical of it.” (The obvious irony—that people like Graham nevertheless feel free to write off the entirety of “the media” on a similarly invidious basis—seems lost on many of them.)&lt;/p&gt;

&lt;p&gt;Graham’s tweet linked to a Slate Star Codex piece, also from 2017, called “Silicon Valley: A Reality Check,” in which Alexander had collated the most triumphalist dismissals of Juicero and paired them with his own views of what actual technological innovation looked like. “While Deadspin was busy calling Silicon Valley ‘awful nightmare trash parasites’, my girlfriend in Silicon Valley was working for a company developing a structured-light optical engine to manipulate single cells and speed up high-precision biological research,” he writes. Alexander goes on, in the post, to allow that Silicon Valley is not above reproach, acknowledging that “anything remotely good in the world gets invaded by rent-seeking parasites and empty suits,” but argues that journalists at publications such as the former Deadspin do not understand that the “spirit of Silicon Valley” is “a precious thing that needs to be protected.” (Deadspin, in its original form, did not survive the aftermath of Hulk Hogan’s lawsuit against its former parent company, Gawker Media; the lawsuit was underwritten by Peter Thiel, which complicates the issue of who, exactly, needs protection from whom.) He continues, “At its worst, some of their criticism sounds more like a worry that there might still be some weird nerds who think they can climb out of the crab-bucket, and they need to be beaten into submission by empty suits before they can get away.”&lt;/p&gt;
&lt;p&gt;By then, six months after the election, Alexander had emerged as one of the keenest observers of technologists as a full-fledged social cadre, and of their sharpening class antagonism with an older order—the institutions in New York, Boston, D.C., and Los Angeles that Balaji Srinivasan has disparaged as “the Paper Belt.” (Srinivasan’s Twitter bio reads “not big on credentialism,” a common posture in a place that likes to present itself as the world’s most successful meritocracy, although he provides a link that itemizes his connections to Stanford and M.I.T. “if deemed relevant.”) This new group, Alexander suggested in an earlier beloved essay, “I Can Tolerate Anything Except the Outgroup,” published in 2014, sits at an odd angle to America’s extant tensions. In the essay, he describes our tendency to conceal the degree to which our beliefs and actions are determined by tribal attitudes. It is obvious, Alexander writes, that America is split in recognizable ways. “The Red Tribe is most classically typified by conservative political beliefs, strong evangelical religious beliefs, creationism, opposing gay marriage, owning guns, eating steak, drinking Coca-Cola, driving SUVs, watching lots of TV, enjoying American football, getting conspicuously upset about terrorists and commies, marrying early, divorcing early, shouting ‘USA IS NUMBER ONE!!!’, and listening to country music.” He notes that he himself knows basically none of these people, a sign of how comprehensive our national sorting project has become. “The Blue Tribe,” by contrast, “is most classically typified by liberal political beliefs, vague agnosticism, supporting gay rights, thinking guns are barbaric, eating arugula, drinking fancy bottled water, driving Priuses, reading lots of books, being highly educated, mocking American football, feeling vaguely like they should like soccer but never really being able to get into it, getting conspicuously upset about sexists and bigots, marrying later, constantly pointing out how much more civilized European countries are than America, and listening to ‘everything except country’.” What’s crucial, he emphasizes, is that these are cultural differences rather than political ones—an Ivy League professor might hold right-leaning beliefs, for example, but is nevertheless almost certainly a member of the Blue Tribe.&lt;/p&gt;
&lt;p&gt;These are caricatures, of course, but Alexander’s crude reductionism is part of his argument, which is that these categories are drawn and redrawn in bad faith, as a way to disavow tribalistic rancor without actually giving it up. When, for example, members of the Blue Tribe censure “America,” they are purporting to implicate themselves in their criticism; in reality, however, they are simply using “America” to mean “Red” America, without making that distinction explicit. What may sound like humility and self-scrutiny is, in fact, actually just a form of thinly disguised tribal retrenchment.&lt;/p&gt;
&lt;p&gt;He introduces the idea of a third cohort in an aside: “(There is a partly-formed attempt to spin off a Grey Tribe typified by libertarian political beliefs, Dawkins-style atheism, vague annoyance that the question of gay rights even comes up, eating paleo, drinking Soylent, calling in rides on Uber, reading lots of blogs, calling American football ‘sportsball’, getting conspicuously upset about the War on Drugs and the NSA, and listening to filk—but for our current purposes this is a distraction and they can safely be considered part of the Blue Tribe most of the time.)” This is clearly meant as a teasing description of the S.S.C. reader—and, by extension, the Silicon Valley intellectual. Since the post was published, “Grey Tribe” has become a shorthand compliment paid to thinkers who float free of the polarized fiasco of American discourse. But “Except the Outgroup” is not an encomium to the Grey Tribe; it is his gentle reminder that most of its members, most of the time, share a vast portion of their political commitments with the Blue Tribe that they so often censure. He has been very upfront about this in his own case; last year, he wrote, lest there was any confusion, “I am a pro-gay Jew who has dated trans people and votes pretty much straight Democrat.” Any sense of rivalry, he suggests, is likely reducible to the narcissism of minor differences.&lt;/p&gt;
&lt;p&gt;The division between the Grey and Blue tribes is often rendered in the simplistic terms of a demographic encounter between white, nerdily entitled men in hoodies on one side and diverse, effete, artistic snobs on the other. On this account, one side is generally associated with quantification, libertarianism, speed, scale, automation, science, and unrestricted speech; the other is generally associated with quality, progressivism, precaution, craft, workmanship, the humanities, and respectful language. Alexander, in another widely circulated essay, published in 2018, has popularized an alternative heuristic—a partition between what he calls “mistake theorists” and “conflict theorists.” Mistake theorists, he writes, look at any difference of opinion and conclude that someone must be making an error. They reckon that when the source of the mistake is identified—with more data, more debate, more intelligence, more technical insight—the resolution will be obvious. Conflict theorists are likely to look at the same difference of opinion and assume that no mechanism will provide for a settlement until incompatible desires are brought into alignment. The former tend to believe that after we sort out the problem of means, the question of ends can be left to take care of itself. The latter tend to believe that the preoccupation with means can serve to obscure the real issue of ends. Mistake theorists default to the hope that we just need to fix the bugs in the system. Conflict theorists default to the worry that what look like bugs might be features—and that it’s the system that has to be updated.&lt;/p&gt;
</description>
<pubDate>Thu, 09 Jul 2020 16:11:53 +0000</pubDate>
<dc:creator>hprotagonist</dc:creator>
<og:description>How a controversial rationalist blogger became a mascot and martyr in a struggle against the New York Times.</og:description>
<og:image>https://media.newyorker.com/photos/5f0613006cf18b2e1e0623c7/16:9/w_1280,c_limit/Lewis-slatestarcodex.jpg</og:image>
<og:title>Slate Star Codex and Silicon Valley’s War Against the Media</og:title>
<og:type>article</og:type>
<og:url>https://www.newyorker.com/culture/annals-of-inquiry/slate-star-codex-and-silicon-valleys-war-against-the-media</og:url>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.newyorker.com/culture/annals-of-inquiry/slate-star-codex-and-silicon-valleys-war-against-the-media</dc:identifier>
</item>
<item>
<title>How to unc0ver a 0-day in 4 hours or less</title>
<link>https://googleprojectzero.blogspot.com/2020/07/how-to-unc0ver-0-day-in-4-hours-or-less.html</link>
<guid isPermaLink="true" >https://googleprojectzero.blogspot.com/2020/07/how-to-unc0ver-0-day-in-4-hours-or-less.html</guid>
<description>&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;By Brandon Azad, Project Zero&lt;/span&gt;&lt;/div&gt;
&lt;strong id=&quot;docs-internal-guid-1bcc4480-7fff-690e-fc5e-697e0b778384&quot;&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;At 3 PM PDT on May 23, 2020, the unc0ver jailbreak was&lt;/span&gt; &lt;a href=&quot;https://github.com/pwn20wndstuff/Undecimus/releases/tag/v5.0.0&quot;&gt;&lt;span&gt;released&lt;/span&gt;&lt;/a&gt; &lt;span&gt;for iOS 13.5 (the latest signed version at the time of release) using a zero-day vulnerability and heavy obfuscation. By 7 PM, I had identified the vulnerability and informed Apple. By 1 AM, I had sent Apple a POC and my analysis. This post takes you along that journey.&lt;/span&gt;&lt;/div&gt;

&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;I wanted to find the vulnerability used in unc0ver and report it to Apple quickly in order to demonstrate that obfuscating an exploit does little to prevent the bug from winding up in the hands of bad actors.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;After downloading and extracting the unc0ver IPA, I loaded the main executable into IDA to take a look. Unfortunately, the binary was heavily obfuscated, so finding the bug statically was beyond my abilities.&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-mPArr_KTggU/XwcyKsCrzLI/AAAAAAAAQas/K3f_yUrg8lEuc7V_TnVTEntqEzbepnuiQCNcBGAsYHQ/s1600/image1.png&quot; imageanchor=&quot;1&quot;&gt;&lt;img alt=&quot;Image showing a screenshot of IDA Pro with heavily obfuscated code&quot; border=&quot;0&quot; data-original-height=&quot;851&quot; data-original-width=&quot;1600&quot; height=&quot;340&quot; src=&quot;https://1.bp.blogspot.com/-mPArr_KTggU/XwcyKsCrzLI/AAAAAAAAQas/K3f_yUrg8lEuc7V_TnVTEntqEzbepnuiQCNcBGAsYHQ/s640/image1.png&quot; title=&quot;&quot; width=&quot;640&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;&lt;br/&gt;&lt;/span&gt; &lt;span&gt;Next I loaded the unc0ver app onto an iPod Touch 7 running iOS 13.2.3 to try running the exploit. Exploring the app interface didn't suggest that the user had any sort of control over which vulnerability was used to exploit the device, so I hoped that unc0ver only had support for the one 0-day and did not use the&lt;/span&gt; &lt;a href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1986&quot;&gt;&lt;span&gt;oob_timestamp&lt;/span&gt;&lt;/a&gt; &lt;span&gt;bug instead on iOS 13.3 and lower.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;As I was clicking the &quot;Jailbreak&quot; button, a thought occurred to me: Having written a few kernel exploits before, I understood that most memory-corruption-based exploits have something of a &quot;critical section&quot; during which kernel state has been corrupted and the system would be unstable if the rest of the exploit did not continue. So, on a whim, I double clicked the home button to bring up the app switcher and killed the unc0ver app.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The device immediately panicked.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;panic(cpu 1 caller 0xfffffff020e75424): &quot;&lt;/span&gt;&lt;span&gt;Zone cache element was used after free!&lt;/span&gt; &lt;span&gt;Element 0xffffffe0033ac810 was corrupted at beginning; Expected 0x87be6c0681be12b8 but found 0xffffffe003059d90; canary 0x784193e68284daa8; zone 0xfffffff021415fa8 (&lt;/span&gt;&lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;)&quot;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Debugger message: panic&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Memory ID: 0x6&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;OS version: 17B111&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Kernel version: Darwin Kernel Version 19.0.0: Wed Oct  9 22:41:51 PDT 2019; root:xnu-6153.42.1~1/RELEASE_ARM64_T8010&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;KernelCache UUID: 5AD647C26EF3506257696CF29419F868&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Kernel UUID: F6AED585-86A0-3BEE-83B9-C5B36769EB13&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;iBoot version: iBoot-5540.40.51&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;secure boot?: YES&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Paniclog version: 13&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Kernel slide:     0x0000000019cf0000&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Kernel text base: 0xfffffff020cf4000&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;mach_absolute_time: 0x3943f534b&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Epoch Time:        sec       usec&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  Boot    : 0x5ec9b036 0x0004cf8d&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  Sleep   : 0x00000000 0x00000000&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  Wake    : 0x00000000 0x00000000&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  Calendar: 0x5ec9b138 0x0004b68b&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Panicked task 0xffffffe0008a4800: 9619 pages, 230 threads: pid 222: unc0ver&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Panicked thread: 0xffffffe004303a18, backtrace: 0xffffffe00021b2f0, tid: 4884&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135e70  fp: 0xffffffe00021b330&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135cd0  fp: 0xffffffe00021b3a0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0072345c0  fp: 0xffffffe00021b450&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0070f9610  fp: 0xffffffe00021b460&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135648  fp: 0xffffffe00021b7d0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135990  fp: 0xffffffe00021b820&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0076e1ad4  fp: 0xffffffe00021b840&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007185424  fp: 0xffffffe00021b8b0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007182550  fp: 0xffffffe00021b9e0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007140718  fp: 0xffffffe00021ba30&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0074d5bfc  fp: 0xffffffe00021ba80&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0074d5d90  fp: 0xffffffe00021bb40 &lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0075f10d0  fp: 0xffffffe00021bbd0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff00723468c  fp: 0xffffffe00021bc80&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0070f9610  fp: 0xffffffe00021bc90&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0x00000001bf085ae4  fp: 0x0000000000000000&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;This seemed promising! I had a panic message saying there was a use-after-free in the&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;allocation zone (general purpose allocations of size up to 16 bytes). However, it was possible that this was a symptom of the memory corruption rather than the source of the memory corruption (or even a decoy!). To investigate further, I'd need to analyze the backtrace.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;While waiting for IDA to process the iPod's kernelcache, I tried a few more off-the-cuff experiments. Since many exploits use Mach ports as a fundamental primitive, I wrote an app that would churn up the&lt;/span&gt; &lt;span&gt;ipc.ports&lt;/span&gt; &lt;span&gt;zone, creating fragmentation and mixing up the freelist. When I ran the unc0ver app afterwards the exploit still worked, suggesting that it may not rely on heap grooming of Mach port allocations.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Next, since the panic log mentioned&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;, I decided to write an app that would continuously allocate and free to&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;in the background during the unc0ver exploit. The idea was that if unc0ver relies on reallocating a&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;allocation, then my app might grab that slot instead, which would likely cause the exploit strategy to fail and possibly result in a kernel panic. And sure enough, with my app hammering&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;in the background,  touching the &quot;Jailbreak&quot; button caused an immediate kernel panic.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;As a sanity check, I tried changing my app to hammer a different zone,&lt;/span&gt; &lt;span&gt;kalloc.32&lt;/span&gt;&lt;span&gt;, instead of&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;. This time the exploit ran successfully, suggesting that&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;is indeed the critical allocation zone used by the exploit.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Finally, once IDA had finished analyzing the iPod kernelcache, I started symbolicating the stacktraces collected from the panic logs.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Panicked task 0xffffffe0008a4800: 9619 pages,&lt;/span&gt; &lt;span&gt;230 threads&lt;/span&gt;&lt;span&gt;: pid 222: unc0ver&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Panicked thread: 0xffffffe004303a18, backtrace: 0xffffffe00021b2f0, tid: 4884&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135e70&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135cd0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0072345c0&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0070f9610&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135648&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007135990&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0076e1ad4  # _panic&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007185424  # _zcache_alloc_from_cpu_cache&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007182550  # _zalloc_internal&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff007140718  # _kalloc_canblock&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0074d5bfc  # _aio_copy_in_list&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0074d5d90  #&lt;/span&gt; &lt;span&gt;_lio_listio&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0075f10d0  # _unix_syscall&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff00723468c  # _sleh_synchronous&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0xfffffff0070f9610  # _fleh_synchronous&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;  lr: 0x00000001bf085ae4&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The call to&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;immediately stood out to me. Not long before I had finished writing&lt;/span&gt; &lt;a href=&quot;https://googleprojectzero.blogspot.com/2020/06/a-survey-of-recent-ios-kernel-exploits.html&quot;&gt;&lt;span&gt;a survey of recent iOS kernel exploits&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, and I happened to remember that&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;was the vulnerable syscall used in the&lt;/span&gt; &lt;a href=&quot;https://www.synacktiv.com/posts/exploit/lightspeed-a-race-for-an-iosmacos-sandbox-escape.html&quot;&gt;&lt;span&gt;LightSpeed&lt;/span&gt;&lt;/a&gt;&lt;span&gt;-based exploits. I reread the blog post from Synacktiv to get a sense of the bug and immediately another piece fell into place: the target object that is double-freed in the LightSpeed race is an&lt;/span&gt; &lt;span&gt;aio_lio_context&lt;/span&gt; &lt;span&gt;object that lives in&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;. Also, the large number of threads in the unc0ver app further supported the idea of a race condition.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;At this point I felt I had enough evidence to reach out to Apple with a preliminary analysis suggesting that the bug was LightSpeed, either a variant or a regression. &lt;/span&gt;&lt;/div&gt;

&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Next I wanted to confirm the bug by writing a POC to trigger the issue. I tried the&lt;/span&gt; &lt;a href=&quot;https://github.com/Synacktiv-contrib/lightspeed/blob/master/lightspeed.c&quot;&gt;&lt;span&gt;original POC&lt;/span&gt;&lt;/a&gt; &lt;span&gt;shown in the LightSpeed blog post, but after a minute of running it hadn't yet panicked. This suggested to me that perhaps the 0-day was a variant of the original LightSpeed bug.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;To find out more, I started two lines of investigation: looking at the&lt;/span&gt; &lt;a href=&quot;https://opensource.apple.com/source/xnu/xnu-6153.81.5/bsd/kern/kern_aio.c.auto.html&quot;&gt;&lt;span&gt;XNU sources&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to try and spot the bug, and using&lt;/span&gt; &lt;a href=&quot;https://checkra.in/&quot;&gt;&lt;span&gt;checkra1n&lt;/span&gt;&lt;/a&gt;&lt;span&gt;/&lt;/span&gt;&lt;a href=&quot;https://github.com/checkra1n/pongoOS&quot;&gt;&lt;span&gt;pongoOS&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to patch&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;in the kernelcache and then running the exploit. From the sources I couldn't see how the original vulnerability was fixed at all, which didn't make sense to me. So instead I focused my effort on kernel patching.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Booting a patched kernelcache is tricky but doable because of&lt;/span&gt; &lt;a href=&quot;https://twitter.com/axi0mX/status/1177542201670168576&quot;&gt;&lt;span&gt;checkm8&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. I downloaded checkra1n and booted the iPod into the pongoOS shell. Using the example from the pongoOS repo as a guide, I created a loadable pongo module that would disable the checkra1n kernel patches and instead apply my own patches. (I disabled the checkra1n kernel patches because I was worried that unc0ver would detect checkra1n and engage anti-analysis measures.)&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;My first test was just to insert invalid instruction opcodes into the&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;function so that it would panic if called. Surprisingly, the device booted just fine, and then once I clicked &quot;Jailbreak&quot; it panicked. This meant that unc0ver was the only process calling&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;I next patched the code responsible for allocating the&lt;/span&gt; &lt;span&gt;aio_lio_context&lt;/span&gt; &lt;span&gt;object that is double-freed in the original LightSpeed bug so that it would be allocated from&lt;/span&gt; &lt;span&gt;kalloc.48&lt;/span&gt; &lt;span&gt;instead of&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D54&lt;/span&gt; &lt;span&gt;    MOV     W8, #&lt;/span&gt;&lt;span&gt;0xC&lt;/span&gt; &lt;span&gt;; patched to #0x23&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D58&lt;/span&gt; &lt;span&gt;    STR     X8, [SP,#&lt;/span&gt;&lt;span&gt;0x40&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;; alloc size&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D5C&lt;/span&gt; &lt;span&gt;    ADRL    X2, _lio_listio.site.5&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D64&lt;/span&gt; &lt;span&gt;    ADD     X0, SP, #&lt;/span&gt;&lt;span&gt;0x40&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D68&lt;/span&gt; &lt;span&gt;    MOV     W1, #&lt;/span&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;; can block&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D6C&lt;/span&gt; &lt;span&gt;    BL     &lt;/span&gt; &lt;span&gt;kalloc_canblock&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D70&lt;/span&gt; &lt;span&gt;    CBZ     X0, loc_FFFFFFF0074D6234&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D74&lt;/span&gt; &lt;span&gt;    MOV     X19, X0&lt;/span&gt; &lt;span&gt;; lio_context&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D78&lt;/span&gt; &lt;span&gt;    MOV     W1, #&lt;/span&gt;&lt;span&gt;0xC&lt;/span&gt; &lt;span&gt;; size_t&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;FFFFFFF0074D5D7C&lt;/span&gt; &lt;span&gt;    BL     &lt;/span&gt; &lt;span&gt;_bzero&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The idea is that increasing the object's allocation size will cause unc0ver's exploit strategy to fail because it will try to replace the accidentally-freed&lt;/span&gt; &lt;span&gt;kalloc.48&lt;/span&gt; &lt;span&gt;context object with a replacement object from&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt;&lt;span&gt;, which simply cannot occur. And sure enough, with this patch in place, unc0ver stalled at the &quot;Exploiting kernel&quot; step without actually panicking.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;I then ran a few more experiments patching various points in the function to dump the arguments and data buffers passed to&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;so that I could compare against the values used in the original LightSpeed POC. The idea was that if I noticed any substantial differences, that would point me in the direction of the variant in the source. However, other than the field&lt;/span&gt; &lt;span&gt;aio_reqprio&lt;/span&gt; &lt;span&gt;being set to&lt;/span&gt; &lt;span&gt;'gang'&lt;/span&gt;&lt;span&gt;, there were no differences between the arguments passed to&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;by unc0ver and those in the original POC.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;At this point it looked like the 0-day might actually be the original LightSpeed bug itself, not a variant, so I returned to the original POC to see if perhaps the reason it wasn't triggering was that a specific technique used had been mitigated. The code responsible for reallocating the&lt;/span&gt; &lt;span&gt;kalloc.16&lt;/span&gt; &lt;span&gt;allocation caught my eye:&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;/*&lt;/span&gt; &lt;span&gt;not mandatory but used to make the race more likely&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;/*&lt;/span&gt; &lt;span&gt;this poll() will force a kalloc16 of a struct poll_continue_args&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;/*&lt;/span&gt; &lt;span&gt;with its second dword as 0 (to collide with lio_context-&amp;gt;io_issued == 0)&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;/*&lt;/span&gt; &lt;span&gt;this technique is quite slow (1ms waiting time) and better ways to do so exists&lt;/span&gt; &lt;span&gt;*/&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;n =&lt;/span&gt; &lt;span&gt;poll&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;I hadn't ever seen&lt;/span&gt; &lt;span&gt;poll()&lt;/span&gt; &lt;span&gt;used as a reallocation primitive before. Intuitively it felt like using Mach port based reallocation strategies was more promising, so I replaced this code with an out-of-line Mach ports spray copied from oob_timestamp. Sure enough, that was the only change required to make the POC trigger reliably in a few seconds.&lt;/span&gt;&lt;/div&gt;

&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;After I had a working POC, I retried the original LightSpeed POC and found that it would eventually panic if left to run for long enough. Thus, this is&lt;/span&gt; &lt;a href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1806#c14&quot;&gt;&lt;span&gt;another&lt;/span&gt;&lt;/a&gt; &lt;span&gt;case of a reintroduced bug that could have been identified by simple regression tests.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;So, let's return to the sources to see if we can figure out what happened. As mentioned earlier, when I first checked the XNU sources to see how the&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;patch might have been broken, I actually couldn't identify how the bug was originally patched at all. In retrospect, this isn't all that far off.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The original&lt;/span&gt; &lt;a href=&quot;https://www.synacktiv.com/posts/exploit/lightspeed-a-race-for-an-iosmacos-sandbox-escape.html&quot;&gt;&lt;span&gt;LightSpeed blog post&lt;/span&gt;&lt;/a&gt; &lt;span&gt;describes the vulnerability very well, so I won't rehash it all here; I highly recommend reading that post. From a high level, the bug is that the semantics of which function frees the&lt;/span&gt; &lt;span&gt;aio_lio_context&lt;/span&gt; &lt;span&gt;object are unclear, as both the worker threads that perform the asynchronous I/O and the&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;function itself could do it.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;As mentioned in the post, the original fix for this bug was just to not free the&lt;/span&gt; &lt;span&gt;aio_lio_context&lt;/span&gt; &lt;span&gt;object in the cases in which it might be double-freed:&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;On the one hand, this patch fixes the potential&lt;/span&gt; &lt;span&gt;UaF&lt;/span&gt; &lt;span&gt;on the&lt;/span&gt; &lt;span&gt;lio_context&lt;/span&gt;&lt;span&gt;. But on the other hand, the error case that was handled before the fix is now ignored... As a result it is possible to make&lt;/span&gt; &lt;span&gt;lio_listio()&lt;/span&gt; &lt;span&gt;allocate an&lt;/span&gt; &lt;span&gt;aio_lio_context&lt;/span&gt; &lt;span&gt;that will never be freed by the kernel. This gives us a silly DoS that will also crash the recent kernels (iOS 12 included).&lt;/span&gt;&lt;/div&gt;

&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;For the rest, we will see in the future if Apple bothers to fix the little&lt;/span&gt; &lt;span&gt;DoS&lt;/span&gt; &lt;span&gt;they introduced with the patch :D&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;It turns out that Apple did eventually decide to fix the memory leak in iOS 13... but in doing so it appears they reintroduced the race condition double-free:&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;case&lt;/span&gt; &lt;span&gt;LIO_NOWAIT:&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;+      &lt;/span&gt; &lt;span&gt;/* If no IOs were issued must free it (rdar://problem/45717887) */&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;+      &lt;/span&gt; &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(lio_context-&amp;gt;io_issued ==&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;) {&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;+           free_context =&lt;/span&gt; &lt;span&gt;TRUE&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;+       }&lt;/span&gt;&lt;/div&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;break&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The code in iOS 13 isn't&lt;/span&gt; &lt;span&gt;exactly&lt;/span&gt; &lt;span&gt;the same as iOS 11, but it's semantically equivalent. Anyone who had remembered and understood the original LightSpeed bug could have easily identified this as a regression by reviewing XNU source diffs. And anyone who ran relatively simple regression tests would have found this issue trivially.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;So, to summarize: the LightSpeed bug was fixed in iOS 12 with a patch that didn't address the root cause and instead just turned the race condition double-free into a memory leak. Then, in iOS 13, this memory leak was identified as a bug and &quot;fixed&quot; by reintroducing the original bug, again without addressing the root cause of the issue. And this security regression could have been found trivially by running the original POC from the blog post.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;You can read more about this regression in a&lt;/span&gt; &lt;a href=&quot;https://www.synacktiv.com/posts/exploit/return-of-the-ios-sandbox-escape-lightspeeds-back-in-the-race.html&quot;&gt;&lt;span&gt;followup post&lt;/span&gt;&lt;/a&gt; &lt;span&gt;on the Synacktiv blog.&lt;/span&gt;&lt;/div&gt;

&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;The combination of the SockPuppet regression in iOS 12.4 and the LightSpeed regression in iOS 13 strongly suggests that Apple did not run effective regression tests on at least these old security bugs (and these were&lt;/span&gt; &lt;span&gt;very&lt;/span&gt; &lt;span&gt;public bugs that got a lot of attention). Running effective regression tests is a necessity for basic software testing, and a common starting point for exploitation.&lt;/span&gt;&lt;/div&gt;
&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;
&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Still, I'm very happy that Apple patched this issue in a timely manner once the exploit became public. The reality here is that attackers figure out these issues very quickly, long before the public POC is released. Thus the window of opportunity to exploit regressions is substantial.&lt;/span&gt;&lt;/div&gt;
&lt;br/&gt;&lt;div dir=&quot;ltr&quot;&gt;&lt;span&gt;Also, my goal in trying to identify the bug used by unc0ver was to demonstrate that obfuscation does not block attackers from quickly weaponizing the exploited vulnerability. It turned out that I was lucky in my analysis: my experience writing kernel exploits let me quickly figure out an alternative strategy to find the bug, and I happened to already be familiar with the specific vulnerability used because I've been keeping track of past exploits. But anyone in the business of using exploits against Apple users would also have these same advantages.&lt;/span&gt;&lt;/div&gt;

</description>
<pubDate>Thu, 09 Jul 2020 16:06:34 +0000</pubDate>
<dc:creator>GuardLlama</dc:creator>
<og:url>https://googleprojectzero.blogspot.com/2020/07/how-to-unc0ver-0-day-in-4-hours-or-less.html</og:url>
<og:title>How to unc0ver a 0-day in 4 hours or less</og:title>
<og:description>By Brandon Azad, Project Zero At 3 PM PDT on May 23, 2020, the unc0ver jailbreak was released for iOS 13.5 (the latest signed version a...</og:description>
<og:image>https://1.bp.blogspot.com/-mPArr_KTggU/XwcyKsCrzLI/AAAAAAAAQas/K3f_yUrg8lEuc7V_TnVTEntqEzbepnuiQCNcBGAsYHQ/w1200-h630-p-k-no-nu/image1.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://googleprojectzero.blogspot.com/2020/07/how-to-unc0ver-0-day-in-4-hours-or-less.html</dc:identifier>
</item>
<item>
<title>New German law would force ISPs to allow secret service to install trojans</title>
<link>https://www.privateinternetaccess.com/blog/new-german-law-would-force-isps-to-allow-secret-service-to-install-trojans-on-user-devices/</link>
<guid isPermaLink="true" >https://www.privateinternetaccess.com/blog/new-german-law-would-force-isps-to-allow-secret-service-to-install-trojans-on-user-devices/</guid>
<description>&lt;p&gt;&lt;img width=&quot;840&quot; height=&quot;441&quot; src=&quot;https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices-1024x538.jpg?x70591&quot; class=&quot;attachment-large size-large wp-post-image&quot; alt=&quot;new german law would force ISPs to allow secret service to install trojans on user devices&quot; srcset=&quot;https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices-1024x538.jpg 1024w, https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices-300x158.jpg 300w, https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices-768x403.jpg 768w, https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices.jpg 1200w&quot; sizes=&quot;(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 1362px) 62vw, 840px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A new law being proposed in Germany would see all 19 federal state intelligence agencies in Germany granted the power to spy on German citizens through the use of trojans. The new law would force internet service providers (ISPs) to install government hardware at their data centers which would reroute data to law enforcement, and then on to its intended destination so the target is blissfully unaware that their communications and even software updates are being proxied. Specifically, &lt;a href=&quot;https://netzpolitik.org/2020/staatstrojaner-provider-sollen-internetverkehr-umleiten-damit-geheimdienste-hacken-koennen/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Netzpolitik&lt;/a&gt; pointed out that the law calls for the following:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“the redirected data should remain intended for forwarding to the addressee after the measure has been carried out.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Germany wants to be the man in the middle&lt;/h2&gt;
&lt;p&gt;The state sponsored trojans would likely be utilizing software called FinFly ISP from a company called &lt;a href=&quot;https://netzpolitik.org/2018/geheime-dokumente-das-bundeskriminalamt-kann-jetzt-drei-staatstrojaner-einsetzen/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;FinFisher&lt;/a&gt; which has already been used by German law enforcement in the past. FinFisher claims to be able to inject trojans on target devices from the ISP level with ease::&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“FinFly ISP is able to patch files that are downloaded from the destination on-the-fly or to send fake software updates for popular software.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FinFly ISP has been around for almost a decade and a &lt;a href=&quot;https://wikileaks.org/spyfiles/files/0/297_GAMMA-201110-FinFly_ISP.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;2011 advertising brochure available via WikiLeaks&lt;/a&gt; emphasized that their software has already been used:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“A secret service used FinFly ISP in the network of the most important national Internet service provider. It was sufficient that the system only knew the target person’s log-in information into the provider network in order to install a remote monitoring solution on their computer and monitor them from there.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amnesty.org/en/latest/news/2020/06/nso-spyware-used-against-moroccan-journalist/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amnesty International&lt;/a&gt; noted that this vector of trojan insertion has been previously used on a Morrocan journalist by the NSO Group.&lt;/p&gt;
&lt;h2&gt;Germany has a long history of government malware use&lt;/h2&gt;
&lt;p&gt;The BKA (Germany’s Federal Criminal Police Office) has previously been using &lt;a href=&quot;https://www.privateinternetaccess.com/blog/police-use-trojans-hack-mobile-phones-will-become-routine-new-german-law/&quot;&gt;trojans on individual smart phones&lt;/a&gt; as a way to have access to encrypted communications before they are encrypted. It’s important to remember that all the encryption in the world is useless if your device is compromised and clear text can be accessed before it becomes end-to-end encrypted. The same holds true if there happens to be a camera behind your screen that can see what you’re typing. Hell, even the changes in the &lt;a href=&quot;https://phys.org/news/2017-12-hackers-pin-sensor.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;gyroscope/accelerometer in your smartphone&lt;/a&gt; can be used to derive what your PIN or password is. We can infer that the BKA has seen success with their trojan use and now are seeking to install hardware in the datacenters of ISPs that would allow them to send these trojans to new smartphones, computers, and other devices during an update.&lt;/p&gt;
&lt;h2&gt;This law will and should be challenged for constitutionality&lt;/h2&gt;
&lt;p&gt;Many groups including the &lt;a href=&quot;https://freiheitsrechte.org/bka-gesetz/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Society for Freedom Rights&lt;/a&gt; are already filing suit against the government for their use of trojans and plan to bring a constitutional challenge if this expansion of state trojan use comes to pass. Even the ISPs themselves are not happy with this development, citing a fundamental loss of trust. Bitkom, a group which counts Germany’s top ISPs as members commented that the project:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;“fails to recognize the enormous risks to the overall network integrity of the providers and the associated loss of trust.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The proposed law is already the result of lots of back and forth within the government and many expect it to pass when it is presented to Germany’s congressional body, the Bundestag, after next week. Germany has long been seeking this state trojan power &lt;a href=&quot;https://www.privateinternetaccess.com/blog/german-police-able-read-encrypted-messages-end-2017-government-malware/&quot;&gt;to read encrypted messages&lt;/a&gt; with government malware and otherwise control target devices for years now and the fight is finally coming to a head. Notably, Germany’s top court recently ruled that constitutional protections on internet activity stemming from the &lt;a href=&quot;https://www.privateinternetaccess.com/blog/germanys-highest-court-rules-individual-right-to-privacy-applies-to-everyone-even-non-germans/&quot;&gt;right to privacy&lt;/a&gt; extend to non-Germans, as well; however, the use of trojan software to “support the diversion of telecommunications” seems to be a clear step in the opposite direction, even if it is only used under warrant.&lt;/p&gt;
&lt;div class=&quot;wp-biographia-container-top&quot; readability=&quot;8.2638888888889&quot;&gt;
&lt;div class=&quot;wp-biographia-pic&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://secure.gravatar.com/avatar/8ccc88e97e73d7b13c49acd5cc28cc4e?s=200&amp;amp;d=mm&amp;amp;r=g&quot; srcset=&quot;https://secure.gravatar.com/avatar/8ccc88e97e73d7b13c49acd5cc28cc4e?s=400&amp;amp;d=mm&amp;amp;r=g 2x&quot; class=&quot;wp-biographia-avatar avatar-200 photo&quot; height=&quot;200&quot; width=&quot;200&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;wp-biographia-text&quot; readability=&quot;35.972222222222&quot;&gt;
&lt;h3&gt;About &lt;a href=&quot;https://www.privateinternetaccess.com/blog/author/caleb-chen/&quot; title=&quot;Caleb Chen&quot;&gt;Caleb Chen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Caleb Chen is a digital currency and privacy advocate who believes we must #KeepOurNetFree, preferably through decentralization. Caleb holds a Master's in Digital Currency from the University of Nicosia as well as a Bachelor's from the University of Virginia. He feels that the world is moving towards a better tomorrow, bit by bit by Bitcoin.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;a href=&quot;https://www.privateinternetaccess.com/pages/buy-vpn/20190919BLOGSP&quot; title=&quot;Buy VPN&quot;&gt;&lt;img src=&quot;https://www.privateinternetaccess.com/blog/wp-content/uploads/2019/09/BLOG-AD-BOTTOM2.jpg?x70591&quot; alt=&quot;VPN Service&quot; title=&quot;VPN Service&quot;/&gt;&lt;/a&gt;</description>
<pubDate>Thu, 09 Jul 2020 14:47:57 +0000</pubDate>
<dc:creator>corty</dc:creator>
<og:type>article</og:type>
<og:title>New German law would force ISPs to allow secret service to install trojans on user devices</og:title>
<og:description>A new law being proposed in Germany would see all 19 federal state intelligence agencies in Germany granted the power to spy on German citizens through the use of trojans. The new law would force internet service providers (ISPs) to install government hardware at their data centers which would reroute data to law enforcement, and … Continue reading &quot;New German law would force ISPs to allow secret service to install trojans on user devices&quot;</og:description>
<og:url>https://www.privateinternetaccess.com/blog/new-german-law-would-force-isps-to-allow-secret-service-to-install-trojans-on-user-devices/</og:url>
<og:image>https://www.privateinternetaccess.com/blog/wp-content/uploads/2020/07/new-german-law-would-force-ISPs-to-allow-secret-service-to-install-trojans-on-user-devices.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.privateinternetaccess.com/blog/new-german-law-would-force-isps-to-allow-secret-service-to-install-trojans-on-user-devices/</dc:identifier>
</item>
<item>
<title>Portland approves 10% cap on fees that food delivery apps can charge restaurants</title>
<link>https://www.oregonlive.com/portland/2020/07/portland-approves-10-cap-on-fees-that-food-delivery-apps-can-charge-restaurants.html</link>
<guid isPermaLink="true" >https://www.oregonlive.com/portland/2020/07/portland-approves-10-cap-on-fees-that-food-delivery-apps-can-charge-restaurants.html</guid>
<description>&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;OWBP3XHQFFGUBLHRDUWPCOVJHM&quot;&gt;The Portland City Council voted unanimously Wednesday to make it illegal for third-party food delivery services like DoorDash and Grubhub to &lt;a href=&quot;https://www.oregonlive.com/portland/2020/07/portland-weighing-10-cap-on-fees-delivery-apps-can-charge-restaurants.html&quot; target=&quot;_blank&quot;&gt;collect more than 10% in commission fees from city restaurants&lt;/a&gt; amid the coronavirus pandemic.&lt;/p&gt;
&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;LHT4M6NV5FBKHEZ5GNOYHS4APE&quot;&gt;Portland joins other cities, including &lt;a href=&quot;https://www.seattletimes.com/life/food-drink/to-help-restaurants-seattle-will-impose-a-15-cap-on-food-delivery-service-commissions/&quot; target=&quot;_blank&quot;&gt;Seattle&lt;/a&gt;, &lt;a href=&quot;https://www.latimes.com/california/story/2020-05-20/los-angeles-fee-cap-ubereats-doordash-food-delivery&quot; target=&quot;_blank&quot;&gt;Los Angeles&lt;/a&gt; and &lt;a href=&quot;https://www.inquirer.com/health/coronavirus/coronavirus-restaurants-delivery-fees-cap-grubhub-doordash-outdoor-dining-streeteries-20200625.html&quot; target=&quot;_blank&quot;&gt;Philadelphia&lt;/a&gt;, that have instituted similar caps in recent months. Those cities have limits at 15%. New Jersey last week &lt;a href=&quot;https://www.nj.com/hudson/2020/07/new-jersey-caps-third-party-food-delivery-fees-uber-removes-jersey-city-surcharge.html&quot; target=&quot;_blank&quot;&gt;put a 10% service fee cap that applies to all restaurants&lt;/a&gt; in the state.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;D7GXWEXGZNEYXAGHO5UEWZXIQY&quot;&gt;Food delivery company fees can be as high as 30%.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;M5GFP3LC2JDFRKIIJLISK42TWY&quot;&gt;The new rule also makes it illegal for DoorDash, Uber Eats and other companies to decrease payments to delivery workers in order to make up lost money from restaurant fees, the ordinance said. The city council approved an amendment to the order Wednesday to also include a 5% limit if the delivery service allows a restaurant to transport their own food or if a customer orders through the app and picks up their items at the business.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;ZAKVJGYMDZDZ3CUFDGZC4JS52I&quot;&gt;The restrictions would end 90 days after Portland’s state of emergency order lifts. No date has been set to lift the order, which has been in place &lt;a href=&quot;https://www.oregonlive.com/portland/2020/03/portland-mayor-ted-wheeler-declares-state-of-emergency-due-to-coronavirus.html&quot; target=&quot;_blank&quot;&gt;since March 12&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;JQMQLCMYQVBANE3K6V322GZYXI&quot;&gt;Delivery app companies would be liable for up to $500 in civil penalties if the order is violated and the fine would accrue every day and for every restaurant overcharged. The restaurant would have to sue the company involved if they aren’t given refunds.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;SDU6YR7JPRG2XEH3JRA73NECD4&quot;&gt;The order was developed by Commissioner Chloe Eudaly’s office, the &lt;a href=&quot;http://pdxrestaurantalliance.org/&quot; target=&quot;_blank&quot;&gt;Portland Independent Restaurant Alliance&lt;/a&gt; and the &lt;a href=&quot;https://www.apano.org/&quot; target=&quot;_blank&quot;&gt;Asian Pacific American Network of Oregon&lt;/a&gt;. Mayor Ted Wheeler’s office co-sponsored the ordinance.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;LNOKOM64AZEC3CNFWV2OVJYXCY&quot;&gt;Jenny Lee, advocacy director with the Asian Pacific American Network of Oregon, told the council before their vote that fee cap would be a “lifeline” for small business owners around the city.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;4JGD37DQ5ZBF7OPVHOP4ZGZDIY&quot;&gt;Businesses in Southeast Portland’s Jade District, where much of the city’s Chinese and Vietnamese immigrant communities live, have been struggling to keep up with their rent, food costs and worker wages in addition to the delivery app commission fees and the ongoing impacts of the pandemic, Lee said. Portland food businesses owned by Black, Indigenous and other people of color around the city have been among the most impacted by the commission fees and if they were to close, it would represent deep losses for those communities, she said.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;LLJQFESB6ZEANEFBH4TTBPHHTA&quot;&gt;“They have the least bargaining power with these platforms because they often serve meals that are affordable to many Portlanders,” Lee said. “And these are the same businesses already facing systemic inequity as they are the most shut out of white-dominant systems of banking, access to capital and government assistance programs.”&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;ZH5DBY5CSFHVRBMWCVYEW4ZEHU&quot;&gt;Katy Connors, a member of the Portland Independent Restaurant Alliance, said many restaurants in the city have opted out of working through delivery apps because they can’t afford the commission fees. She also noted that while local restaurant sales are down amid the pandemic, food delivery companies are thriving. She mentioned that when Uber announced buying Postmates for $2.65 billion in stock Monday, the company reported Uber Eats’ bookings in the second quarter of the year have &lt;a href=&quot;https://investor.uber.com/news-events/news/press-release-details/2020/Uber-to-Acquire-Postmates/default.aspx&quot; target=&quot;_blank&quot;&gt;increased by more than 100% from this time last year&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;CW5H2KU635CUJOBCY367W36HDA&quot;&gt;“We understand that delivery services are essential at this time and want to be able to offer it to our guests, but not at the expense of the sustainability of our businesses,” said Connors, who also works as operations director for Portland Thai restaurant Hat Yai. “Right now, every sale counts. Every dollar counts.”&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;AIZWOJBZXNEJDPG2KZX2HMOYVI&quot;&gt;Representatives from DoorDash, Grubhub and Uber Eats sent written testimony to the city opposing the ordinance, saying higher fees may be passed onto customers, fewer delivery orders may result, leading to less income for drivers and restaurants through the service. Some said they’d already made concessions for struggling businesses, DoorDash for example said they temporarily reduced commission fees collected from some businesses and charged no fees for pickup orders.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;6NANZC2O5NC65JSB3OW34LOIWM&quot;&gt;Rebecca Cordia, a Portland delivery worker for DoorDash, told the City Council that she was concerned the new rule could lead to lower wages for her and others. She said she recently moved to Portland from St. Louis, and that DoorDash was the only job she could get amid the pandemic. She said she is making enough money through the app that she plans to continue working as a driver after she gains full-time employment.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;W443G5BLSJG3XAME544NNTZVHU&quot;&gt;“The fees you’re trying to cap go directly to paying delivery workers and I can’t afford to lose out on much needed income because of a law that would do more harm than good. Especially during times like these,” Cordia said.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;4JS5YZVGWVDXXI7B6CFWPJ77I4&quot;&gt;Eudaly noted that the city rule has a provision that drivers’ pay can’t be reduced because of the fee caps.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;OEJNNFTBAJGC3AV4TXT7HGXTLE&quot;&gt;“As much as I’m concerned about these drivers and all people who are relying on the gig economy to earn a living, we can’t allow these companies to run unchecked and price gouge and exploit during the crisis and that’s what we’re responding to,” Eudaly said.&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;TATACSO33VGNTBCTWMUAIDJXOU&quot;&gt;-- Everton Bailey Jr; &lt;a href=&quot;mailto:ebailey@oregonian.com&quot;&gt;ebailey@oregonian.com&lt;/a&gt; | 503-221-8343 | &lt;a href=&quot;https://twitter.com/evertonbailey&quot;&gt;@EvertonBailey&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;article__paragraph article__paragraph--left&quot; id=&quot;XLI74CMOCZHARHHKNCUAIRTY3Y&quot;&gt;&lt;strong&gt;Subscribe to Oregonian/OregonLive&lt;/strong&gt; &lt;a href=&quot;https://subscription.oregonlive.com/newsletters/&quot;&gt;&lt;strong&gt;newsletters&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;and&lt;/strong&gt; &lt;a href=&quot;https://www.oregonlive.com/podcasts/&quot;&gt;&lt;strong&gt;podcasts&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;for the latest news and top stories.&lt;/strong&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 09 Jul 2020 12:26:32 +0000</pubDate>
<dc:creator>Shivetya</dc:creator>
<og:title>Portland approves 10% cap on fees that food delivery apps can charge restaurants</og:title>
<og:url>https://www.oregonlive.com/portland/2020/07/portland-approves-10-cap-on-fees-that-food-delivery-apps-can-charge-restaurants.html</og:url>
<og:type>article</og:type>
<og:description>The Portland City Council voted unanimously Wednesday to make it illegal for third-party food delivery services like DoorDash and Grubhub to collect more than 10% in commission fees from city restaurants amid the coronavirus pandemic.</og:description>
<og:image>https://www.oregonlive.com/resizer/nNz8uFxGMLhZG7os5R6CGqtfwk0=/1280x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/A25XCTWFVRCKVEF62GAOIVBTHE.JPG</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.oregonlive.com/portland/2020/07/portland-approves-10-cap-on-fees-that-food-delivery-apps-can-charge-restaurants.html</dc:identifier>
</item>
<item>
<title>A Woman Who Needed to Be Upside-Down (2012)</title>
<link>https://www.discovermagazine.com/health/vital-signs-the-woman-who-needed-to-be-upside-down</link>
<guid isPermaLink="true" >https://www.discovermagazine.com/health/vital-signs-the-woman-who-needed-to-be-upside-down</guid>
<description>&lt;p&gt;The emergency room was busy that afternoon. I had just started my shift and was making my way through a scrum of frantic doctors, nurses, and orderlies when I heard yelling coming from the ambulance bay entrance.&lt;/p&gt;&lt;p&gt;“Put her down now!” I recognized the stern voice of Herb, one of our security guards.&lt;/p&gt;
&lt;p&gt;“Get a stretcher, stat,” said Ellie, the head nurse.&lt;/p&gt;
&lt;p&gt;“You’re hurting her,” a woman yelled.&lt;/p&gt;
&lt;p&gt;I ran to the ambulance bay, rounded a corner, and saw a huge man, seven-foot-something, holding a petite woman, maybe five feet tall, by her feet, her head dangling down. “I have to hold her this way,” the man insisted.&lt;/p&gt;
&lt;p&gt;“I’m fine,” said the woman through her dangling long black hair. “I feel OK now.”&lt;/p&gt;
&lt;p&gt;Herb grabbed at the man’s muscular arms, attempting to free the woman.&lt;/p&gt;
&lt;p&gt;“This is my wife,” the giant shouted. “Let go of me.” He glared at Herb, who kept pulling at his biceps and wrists. A large group of ER personnel was now watching them from a distance.&lt;/p&gt;
&lt;p&gt;“Let’s everybody take a deep breath here,” I said. “What’s your name, sir?”&lt;/p&gt;
&lt;p&gt;Herb released his grip on the man and took a step back.&lt;/p&gt;
&lt;p&gt;“Jason,” he said, more calmly now.&lt;/p&gt;
&lt;p&gt;“Okay, Jason,” I said. “Why are you carrying your wife by her feet?”&lt;/p&gt;
&lt;p&gt;“Hi, Dr. Janeira,” said the upside-down woman. “Remember me?”&lt;/p&gt;
&lt;p&gt;“No,” I said. “Have we met?”&lt;/p&gt;
&lt;p&gt;“Yes, I was here yesterday,” she said. “Remember? With the slow heartbeat?”&lt;/p&gt;
&lt;p&gt;And then it came to me. Her name was Mary, a woman in her mid-60s. She had arrived at the ER the day before with complete &lt;a class=&quot;sc-16jhh8b-0 DiWBx&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://www.nhlbi.nih.gov/health/health-topics/topics/hb/&quot;&gt;heart block&lt;/a&gt;, caused when the electrical system connecting the atria to the ventricles fails because of scarring, infection, or heart attack. As a result, the heart slows dramatically.&lt;/p&gt;
&lt;p&gt;Mary’s heart rate had been under 40 beats per minute instead of the 60 to 80 that would be considered normal in her age group. She was having recurrent fainting spells and seizures. This giant hadn’t been with her then, and I had called a colleague for urgent implantation of a pacemaker, which generates rhythmic electrical pulses that prevent slowing of the heartbeat. Within minutes she had been taken from my ER to a laboratory where she was fitted for the device.&lt;/p&gt;
&lt;p&gt;I approached the couple slowly. “I didn’t expect to see you so soon,” I said leaning over, trying to see her face. “Didn’t you have your &lt;a class=&quot;sc-16jhh8b-0 DiWBx&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://www.webmd.com/heart-disease/abnormal-rhythyms-pacemaker&quot;&gt;pacemaker&lt;/a&gt; implanted yesterday?”&lt;/p&gt;
&lt;p&gt;“Yes,” she said. “I had the surgery yesterday. Everything went well, and I went home this morning.”&lt;/p&gt;
&lt;p&gt;“Everything was good until about half an hour ago,” Jason said. “She coughed and then collapsed.”&lt;/p&gt;
&lt;p&gt;“But I don’t understand why you’re keeping her upside down,” I said.&lt;/p&gt;
&lt;p&gt;“I picked her up and put her on our bed,” Jason explained. “She regained consciousness for a few seconds. She tried to get up but went out again and fell behind the bed. I picked her up by her ankles and she came to.”&lt;/p&gt;
&lt;p&gt;“I still don’t get it,” I said.&lt;/p&gt;
&lt;p&gt;“If Jason puts me in bed or upright, I faint again,” Mary told me. “We’ve tried it four times now, and every time he changes my position, I go to la-la land.”&lt;/p&gt;
&lt;p&gt;“So you’re conscious upside down but not right side up?” I asked.&lt;/p&gt;
&lt;p&gt;Mary’s upside-down head nodded vigorously.&lt;/p&gt;
&lt;h2 font-size=&quot;[object Object]&quot; class=&quot;sc-bdVaJa sc-htpNat sc-bxivhb sc-11lzyao-1 dqzjMt ijbjxt-0 jExetr&quot; font-weight=&quot;bold&quot;&gt;An Urgent Diagnosis&lt;/h2&gt;
&lt;p&gt;My mind raced through the possibilities. Mary could have something obstructing the blood flow from her heart to her brain that was overcome when her head was down. Or her blood pressure could be so low that blood reached the brain only when she was upside down. Blood pressure that low could have been triggered by an allergic reaction, &lt;a class=&quot;sc-16jhh8b-0 DiWBx&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://www.mayoclinic.com/health/anaphylaxis/DS00009&quot;&gt;anaphylactic shock&lt;/a&gt;, or severe dehydration.&lt;/p&gt;
&lt;p&gt;Another possibility was that Mary was suffering from &lt;a class=&quot;sc-16jhh8b-0 DiWBx&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://www.ncbi.nlm.nih.gov/pubmedhealth/PMH0001245/&quot;&gt;cardiac tamponade&lt;/a&gt;, a compression of the heart caused by a buildup of blood in the sac covering the organ. If her heart had been perforated during the pacemaker implantation and blood had seeped out into the sac around it, it might be that her ventricles were now being squeezed by this accumulating blood, lowering her cardiac output. That condition could improve when she was upside down by increasing blood flow to the brain.&lt;/p&gt;
&lt;p&gt;The first thing to do was to check Mary’s vital signs. “Bring her into a room,” I said. “Let’s get her on a monitor.”&lt;/p&gt;
&lt;p&gt;I pointed the way, and Jason carried her into the cardiac room, an entourage of curious ER personnel trailing behind us.&lt;/p&gt;
&lt;p&gt;Even once in the cardiac room, Jason was unconvinced that he should let go of her ankles and put her on the bed. “When I put her down, she’ll go out on us,” he said.&lt;/p&gt;
&lt;p&gt;I paused for a moment. “We’ll do an assessment of the vital signs first while Mary is upside down. Then we’ll put her in bed and see if and how things change, OK?”&lt;/p&gt;
&lt;p&gt;Jason nodded. Mary’s long black hair waved back and forth, which I took for agreement from her, too. Ellie then placed heart monitor electrodes on her chest.&lt;/p&gt;
&lt;p&gt;“Normal-paced rhythm,” I said, watching the monitor. “The pacemaker is working perfectly fine right now.”&lt;/p&gt;
&lt;p&gt;“And I feel perfectly fine,” said Mary. “Well, except that I’m upside down and have been for about 30 minutes now.”&lt;/p&gt;
&lt;p&gt;Ellie wrapped a blood pressure cuff around her arm. “It’s 120 over 66,” said Ellie. “Pretty good.”&lt;/p&gt;
&lt;p&gt;“OK, slowly get her on her back,” I said. Jason walked closer to the bed and Ellie and I eased Mary down onto it. The only sound came from the heart monitor: beep, beep, beep, steady at 60 times a minute. We all held our breath.&lt;/p&gt;
&lt;p&gt;Then the cardiac monitor showed a sudden change. The alarm began screaming.&lt;/p&gt;
&lt;p&gt;“Here I go,” said Mary. “It’s happeni…” Her words dissolved into nothingness.&lt;/p&gt;
&lt;p&gt;“No heart rhythm,” Ellie called out. “Pacemaker failure.”&lt;/p&gt;
&lt;p&gt;“Get me &lt;a class=&quot;sc-16jhh8b-0 DiWBx&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;http://en.wikipedia.org/wiki/Epinephrine&quot;&gt;epinephrine&lt;/a&gt;,” I yelled. Also known as adrenaline, epinephrine is a hormone that can constrict blood vessels and get a stalled heart beating again.&lt;/p&gt;
&lt;p&gt;“But we don’t have an iv in yet,” said Ellie.&lt;/p&gt;
&lt;p&gt;“Out of my way,” said Jason, pushing us aside to get to Mary’s feet. “I told you this would happen.” The big man grabbed Mary’s ankles and pulled them up in the air. Moments after Mary was upside down again, the heart monitor resumed steadily beeping.&lt;/p&gt;
&lt;p&gt;“I’m back,” said Mary.&lt;/p&gt;
&lt;p&gt;Something must have gone wrong with her operation yesterday, I thought. Then suddenly it hit me. “The pacemaker lead, the wire going from the pacemaker generator to your right ventricle, must have disconnected. Your coughing spell could have done it,” I said. “Somehow, the lead reconnects when you are upside down and continues to stimulate the heart.”&lt;/p&gt;
&lt;p&gt;Pacemakers are made up of two main components, a generator and a lead that carries electrical impulses to the heart. Often the lead tip is screwed directly into the heart muscle, but in rare cases it can dislodge and cease to stimulate the heart. Data from St. Jude Medical, one of the largest pacemaker manufacturers, show that out of about 220,000 implants of the company’s most popular lead attached directly to the heart, only 97 dislodged within 30 days of implantation. Apparently, Mary was one of the rare cases.&lt;/p&gt;
&lt;h2 font-size=&quot;[object Object]&quot; class=&quot;sc-bdVaJa sc-htpNat sc-bxivhb sc-11lzyao-1 dqzjMt ijbjxt-0 jExetr&quot; font-weight=&quot;bold&quot;&gt;Getting The Patient Upright&lt;/h2&gt;
&lt;p&gt;“How are we going to fix this, doc?” Jason wanted to know.&lt;/p&gt;
&lt;p&gt;“You’ll need to go back to surgery to reattach the lead,” I said to Mary. “Let’s page your electrophysiologist stat.” I looked at Jason and sighed. “Meanwhile, keep her upside down.”&lt;/p&gt;
&lt;p&gt;We inserted an iv in Mary’s arm and hooked her up to an external pacing device. But pacing her heart through her chest wall gave her severe discomfort and was not a good option, even in the short term. Moreover, it turned out that Mary’s slow beat did not respond at all to medications, including intravenous epinephrine. So she was quickly transported to the electrophysiology laboratory, dangling by her ankles, carried by the only man around with enough strength to do it. And my ER shift continued.&lt;/p&gt;
&lt;p&gt;The next day I was back on duty. As I came out of a room after examining a small child with a fever, I heard a familiar voice behind me.&lt;/p&gt;
&lt;p&gt;“Dr. Janeira, it’s me, Mary. I’m all fixed up.”&lt;/p&gt;
&lt;p&gt;I turned and smiled at Mary and nodded at Jason, who towered massively behind her. “You were right. The pacemaker’s ventricular lead had to be re-screwed in my heart,” she said. “I’ll be having the pacemaker checked in a few days and then every three months.”&lt;/p&gt;
&lt;p&gt;“How do you feel now?” I asked.&lt;/p&gt;
&lt;p&gt;“Back to normal,” she said. “Thanks for your help!”&lt;/p&gt;
&lt;p&gt;And with that, she left my ER walking upright and hand-in-hand with her giant.&lt;/p&gt;
&lt;hr class=&quot;sc-172mrgc-0 bwPPtG&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Louis F. Janeira&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;is a cardiac electrophysiologist in Terre Haute, Indiana. The cases described in Vital Signs are real, but names and certain details have been changed.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 09 Jul 2020 11:53:35 +0000</pubDate>
<dc:creator>ColinWright</dc:creator>
<og:title>Vital Signs: The Woman Who Needed to Be Upside-Down</og:title>
<og:description>A doctor is baffled: Why did a  giant man walk into the ER holding  a tiny woman by her feet?</og:description>
<og:image>https://images.ctfassets.net/cnu0m8re1exe/iRyTtf3d0kktYraapG7Bu/eec23a15df9171a1bd5d52491cd816ff/upsidedown.jpg?w=650&amp;h=433&amp;fit=fill</og:image>
<og:url>https://www.discovermagazine.com/health/vital-signs-the-woman-who-needed-to-be-upside-down</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.discovermagazine.com/health/vital-signs-the-woman-who-needed-to-be-upside-down</dc:identifier>
</item>
<item>
<title>Unit Testing Is Overrated</title>
<link>https://tyrrrz.me/blog/unit-testing-is-overrated</link>
<guid isPermaLink="true" >https://tyrrrz.me/blog/unit-testing-is-overrated</guid>
<description>&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;cover&quot; title=&quot;cover&quot; src=&quot;https://tyrrrz.me/static/d9c976fbc290d0715efec59d3cd8b3cb/00d43/Cover.png&quot; srcset=&quot;/static/d9c976fbc290d0715efec59d3cd8b3cb/72799/Cover.png 320w, /static/d9c976fbc290d0715efec59d3cd8b3cb/6af66/Cover.png 640w, /static/d9c976fbc290d0715efec59d3cd8b3cb/00d43/Cover.png 1000w&quot; sizes=&quot;(max-width: 1000px) 100vw, 1000px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The importance of testing in modern software development is really hard to overstate. Delivering a successful product is not something you do once and forget about but is rather a continuous recurring process. With every line of code that changes, software must remain in a functional state, which implies the need for rigorous testing.&lt;/p&gt;
&lt;p&gt;Over time, as the software industry evolved, testing practices have matured as well. Gradually moving towards automation, testing approaches have also influenced software design itself, spawning mantras like test-driven development, emphasizing patterns such as dependency inversion, and popularizing high-level architectures that are built around it.&lt;/p&gt;
&lt;p&gt;Nowadays, automated testing is embedded so deeply within our perception of software development, it’s hard to imagine one without the other. And since that ultimately enables us to produce software quickly without sacrificing quality, it’s hard to argue that it’s not a good thing.&lt;/p&gt;
&lt;p&gt;However, despite there being many different approaches, modern “best practices” primarily push developers specifically towards &lt;em&gt;unit testing&lt;/em&gt;. Tests, whose scope lies higher on &lt;a href=&quot;https://martinfowler.com/articles/practical-test-pyramid.html#TheTestPyramid&quot;&gt;Mike Cohn’s pyramid&lt;/a&gt; are either written as part of a wider suite (often by completely different people) or even disregarded entirely.&lt;/p&gt;
&lt;p&gt;The benefit of this approach is often supported by the argument that unit tests provide the most value during development because they’re able to catch errors quickly and help enforce design patterns that facilitate modularity. This idea has become so widely accepted that the term “unit testing” is now somewhat conflated with automated testing in general, losing part of its meaning and contributing to confusion.&lt;/p&gt;
&lt;p&gt;When I was a less experienced developer, I believed in following these “best practices” to the letter, as I thought that would make my code better. I didn’t particularly enjoy writing unit tests because of all the ceremony involved with abstractions and mocking, but it was the recommended approach after all, so who am I to know better.&lt;/p&gt;
&lt;p&gt;It was only later, as I’ve experimented more and built more projects, that I started to realize that there are much better ways to approach testing and that &lt;strong&gt;focusing on unit tests is&lt;/strong&gt;, in most cases, &lt;strong&gt;a complete waste of time&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Aggressively popularized “best practices” often have a tendency of manifesting cargo cults around them, enticing developers to apply design patterns or use specific approaches without giving them a much needed second thought. In the context of automated testing, I find this prevalent when it comes to our industry’s unhealthy obsession with unit testing.&lt;/p&gt;
&lt;p&gt;In this article I will share my observations about this testing technique and go over why I believe it to be inefficient. I’ll also explain which approaches I’m currently using instead to test my code, both in open source projects and day-to-day work.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: this article contains code examples which are written in C#, but the language itself is not (too) important to the points I’m making.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note 2: I’ve come to realize that programming terms are completely useless at conveying meanings because everyone seems to understand them differently. In this article I will be relying on the “standard” definitions, where unit testing targets smallest separable parts of code, end-to-end testing targets software’s outermost entry points, while integration testing is for everything in-between.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note 3: if you don’t feel like reading the entirety of the article, you can skip to the end for the summary.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Fallacies of unit testing&lt;/h2&gt;
&lt;p&gt;Unit tests, as evident by the name, revolve around the concept of a “unit”, which denotes a very small isolated part of a larger system. There is no formal definition of what a unit is or how small it should be, but it’s mostly accepted that it corresponds to an individual function of a module (or method of an object).&lt;/p&gt;
&lt;p&gt;Normally, when the code isn’t written with unit tests in mind, it may be impossible to test some functions in complete isolation because they can have external dependencies. In order to &lt;em&gt;work around&lt;/em&gt; this issue, we can apply the dependency inversion principle and replace concrete dependencies with abstractions. These abstractions can then be substituted with real or fake implementations, depending on whether the code is executing normally or as part of a test.&lt;/p&gt;
&lt;p&gt;Besides that, unit tests are expected to be pure. For example, if a function contains code that writes data to the file system, that part needs to be abstracted away as well, otherwise the test that verifies such behavior will be considered an integration test instead, since its coverage extends to the unit’s integration with the file system.&lt;/p&gt;
&lt;p&gt;Considering the factors mentioned above, we can reason that &lt;strong&gt;unit tests are only useful to verify pure business logic inside of a given function&lt;/strong&gt;. Their scope does not extend to testing side-effects or other integrations because that belongs to the domain of integration testing.&lt;/p&gt;
&lt;p&gt;To illustrate how these nuances affect design, let’s take a look at an example of a simple system that we want to test. Imagine we’re working on an application that calculates local sunrise and sunset times, which it does through the help of the following two classes:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IDisposable&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; _httpClient &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; locationQuery&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _httpClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IDiposable&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; _locationProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SolarTimes&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although the design above is perfectly valid in terms of OOP, neither of these classes are actually unit-testable. Because &lt;code&gt;LocationProvider&lt;/code&gt; depends on its own instance of &lt;code&gt;HttpClient&lt;/code&gt; and &lt;code&gt;SolarCalculator&lt;/code&gt; in turn depends on &lt;code&gt;LocationProvider&lt;/code&gt;, it’s impossible to isolate the business logic that may be contained within methods of these classes.&lt;/p&gt;
&lt;p&gt;Let’s iterate on that code and replace concrete implementations with abstractions:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ILocationProvider&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; locationQuery&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ILocationProvider&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; _httpClient&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;LocationProvider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; httpClient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _httpClient &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; httpClient&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; locationQuery&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ISolarCalculator&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SolarTimes&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ISolarCalculator&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ILocationProvider&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ILocationProvider&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _locationProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SolarTimes&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By doing so we were able to decouple &lt;code&gt;LocationProvider&lt;/code&gt; from &lt;code&gt;SolarCalculator&lt;/code&gt;, but in exchange our code nearly doubled in size. Also note that we had to drop &lt;code&gt;IDisposable&lt;/code&gt; from both classes because they &lt;strong&gt;no longer own their dependencies&lt;/strong&gt; and thus have no business taking responsibility for their lifecycle.&lt;/p&gt;
&lt;p&gt;While these changes may seem as an improvement to some, it’s important to point out that the interfaces we’ve defined serve &lt;strong&gt;no practical purpose other than making unit testing possible&lt;/strong&gt;. There’s no need for actual polymorphism in our design, so, as far as our code is concerned, these abstractions are &lt;em&gt;autotelic&lt;/em&gt; (i.e. abstractions for the sake of abstractions).&lt;/p&gt;
&lt;p&gt;Let’s try to reap the benefits of all that work and write a unit test for &lt;code&gt;SolarCalculator.GetSolarTimesAsync&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculatorTests&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync_ForKyiv_ReturnsCorrectSolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50.45&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;30.52&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSolarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeSpan&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; locationProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Mock&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Of&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ILocationProvider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lp &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
            lp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; Task&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarCalculator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;locationProvider&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        
        solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeEquivalentTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we have a basic test that verifies that &lt;code&gt;SolarCalculator&lt;/code&gt; works correctly for a known location. Since unit tests and their units are tightly coupled, we’re following the recommended naming convention, where the test class is named after the class under test, and the name of the test method follows the &lt;code&gt;Method_Precondition_Result&lt;/code&gt; pattern.&lt;/p&gt;
&lt;p&gt;In order to simulate the desired precondition in the arrange phase, we have to inject corresponding behavior into the unit’s dependency, &lt;code&gt;ILocationProvider&lt;/code&gt;. In this case we do that by substituting the return value of &lt;code&gt;GetLocationAsync()&lt;/code&gt; with a location for which the correct solar times are already known ahead of time.&lt;/p&gt;
&lt;p&gt;Note that although &lt;code&gt;ILocationProvider&lt;/code&gt; exposes two different methods, from the contract perspective &lt;strong&gt;we have no way of knowing which one actually gets called&lt;/strong&gt;. This means that by choosing to mock a specific one of these methods, we are making an &lt;strong&gt;assumption about the underlying implementation&lt;/strong&gt; of the method we’re testing (which was deliberately hidden in the previous snippets).&lt;/p&gt;
&lt;p&gt;All in all, the test does correctly verify that the business logic inside &lt;code&gt;GetSolarTimesAsync&lt;/code&gt; works as expected. However, let’s expand on some of the observations we’ve made in the process.&lt;/p&gt;
&lt;hr/&gt;&lt;ol&gt;&lt;li&gt;Unit tests &lt;strong&gt;have a limited purpose&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;It’s important to understand that the purpose of any unit test is very simple: verify business logic in an isolated scope. Depending on which interactions you intend to test, unit testing may or may not be the right tool for the job.&lt;/p&gt;
&lt;p&gt;For example, does it make sense to unit test a method that calculates solar times using a long and complicated mathematical algorithm? Most likely, &lt;em&gt;yes&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Does it make sense to unit test a method that sends a request to a REST API to get geographical coordinates? Most likely, &lt;em&gt;not&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you treat unit testing as a goal in itself, you will quickly find that, despite putting a lot of effort, most tests will not be able to provide you with the confidence you need, simply because they’re testing the wrong thing. In many cases it’s much more beneficial to test wider interactions with integration tests, rather than focusing specifically on unit tests.&lt;/p&gt;
&lt;p&gt;Interestingly, some developers do end up writing integration tests in such scenarios, but still refer to them as unit tests, mostly due to confusion surrounding the concept. Although it could be argued that a unit size can be chosen arbitrarily and can span multiple components, this makes the definition very fuzzy, ultimately just turning overall usage of the term completely useless.&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;&lt;li&gt;Unit tests &lt;strong&gt;lead to more complicated design&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;One of the most popular arguments in favor of unit testing is that it enforces you to design software in a highly modular way. This builds on an assumption that it’s easier to reason about code when it’s split into many smaller components rather than a few larger ones.&lt;/p&gt;
&lt;p&gt;However, it often leads to the opposite problem, where the functionality may end up becoming unnecessarily fragmented. This makes it much harder to assess the code because a developer needs to scan through multiple components that make up what should have been a single cohesive element.&lt;/p&gt;
&lt;p&gt;Additionally, the abundant usage of abstraction, which is required to achieve component isolation, creates a lot of unneeded indirection. Although an incredibly powerful and useful technique in itself, abstraction inevitably increases cognitive complexity, making it further more difficult to reason about the code.&lt;/p&gt;
&lt;p&gt;Through that indirection we also end up losing some degree of encapsulation that we were able to maintain otherwise. For example, the responsibility of managing lifetimes of individual dependencies shifts from components that contain them to some other unrelated service (usually the dependency container).&lt;/p&gt;
&lt;p&gt;Some of that infrastructural complexity can be also delegated to a dependency injection framework, making it easier to configure, manage, and activate dependencies. However, that reduces portability, which may be undesirable in some cases, for example when writing a library.&lt;/p&gt;
&lt;p&gt;At the end of the day, while it’s clear that unit testing does influence software design, it’s highly debatable whether that’s really a good thing.&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;&lt;li&gt;Unit tests &lt;strong&gt;are expensive&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Logically, it would make sense to assume that, since they are small and isolated, unit tests should be really easy and quick to write. Unfortunately, this is just another fallacy that seems to be rather popular, especially among managers.&lt;/p&gt;
&lt;p&gt;Even though the previously mentioned modular architecture lures us into thinking that individual components can be considered separately from each other, unit tests don’t actually benefit from that. In fact, the complexity of a unit test only grows proportionally to the number of external interactions the unit has, due to all the work that you must do to achieve isolation while still exercising required behavior.&lt;/p&gt;
&lt;p&gt;The example illustrated previously in this article is very simple, but in a real project it’s not unusual to see the arrange phase spanning many long lines, just to set preconditions for a single test. In some cases, the mocked behavior can be so complex, it’s almost impossible to unravel it back to figure out what it was supposed to do.&lt;/p&gt;
&lt;p&gt;Besides that, unit tests are by design very tightly coupled to the code they’re testing, which means that any effort to make a change is effectively doubled as the test suite needs to be updated as well. What makes this worse is that very few developers seem to find doing that an enticing task, often just pawning it off to more junior members on the team.&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;&lt;li&gt;Unit tests &lt;strong&gt;rely on implementation details&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The unfortunate implication of mock-based unit testing is that any test written with this approach is inherently implementation-aware. By mocking a specific dependency, your test becomes reliant on how the code under test consumes that dependency, which is not regulated by the public interface.&lt;/p&gt;
&lt;p&gt;This additional coupling often leads to unexpected issues, where seemingly non-breaking changes can cause tests to start failing as mocks become out of date. It can be very frustrating and ultimately discourages developers from trying to refactor code, because it’s never clear whether the error in test comes from an actual regression or due to being reliant on some implementation detail.&lt;/p&gt;
&lt;p&gt;Unit testing stateful code can be even more tricky because it may not be possible to observe mutations through the publicly exposed interface. To work around this, you would normally inject spies, which is a type of mocked behavior that records when a function is called, helping you ensure that the unit uses its dependencies correctly.&lt;/p&gt;
&lt;p&gt;Of course, when you not only rely on a specific function being called, but also on how many times it happened or which arguments were passed, the test becomes even more coupled to the implementation. Tests written in such way are only useful if the internal specifics are not ever expected to change, which is a highly unreasonable expectation to have.&lt;/p&gt;
&lt;p&gt;Relying too much on implementation details also makes the tests themselves very complex, considering how much setup is required to configure mocks in order to simulate a specific behavior, especially when the interactions are not that trivial or when there are a lot of dependencies. When the tests get so complicated that their own behavior is hard to reason about, who is going to write tests to test the tests?&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;&lt;li&gt;Unit tests &lt;strong&gt;don’t exercise user behavior&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;No matter what type of software you’re developing, its goal is to provide value for the end user. In fact, the primary reason why we’re writing automated tests in the first place is to ensure that there are no unintended defects that would diminish that value.&lt;/p&gt;
&lt;p&gt;In most cases, the user works with the software through some top-level interface such as a UI, CLI, or API. While the code itself might involve numerous layers of abstractions, the only one that matters to the user is the one they get to actually see and interact with.&lt;/p&gt;
&lt;p&gt;It doesn’t even matter if a few layers deep there’s a bug in some part of the system, as long as it never surfaces to the user and doesn’t affect the provided functionality. Conversely, it makes no difference that we may have full coverage on all the lower-level pieces, if there’s a defect in the user interface that renders our system effectively useless.&lt;/p&gt;
&lt;p&gt;Of course, if you want to ensure that something works correctly, you have to check that exact thing and see if it does. In our case, the best way to gain confidence in the system is to simulate how a real user would interact with the top-level interface and see if it works properly according to expectations.&lt;/p&gt;
&lt;p&gt;The problem with unit tests is that they’re the exact opposite of that. Since we’re always dealing with small isolated pieces of our code that the user doesn’t directly interact with, we never test the actual user behavior.&lt;/p&gt;
&lt;p&gt;Doing mock-based testing puts the value of such tests under an even bigger question, because the parts of our system that would’ve been used otherwise are replaced with mocks, further distancing the simulated environment from reality. It’s impossible to gain confidence that the user will have a smooth experience by testing something that doesn’t resemble that experience.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/rkoutnik/status/1242073856128495620&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt; &lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;&amp;quot;Unit testing is a great way to ensure your mocks work&amp;quot; (Tweet by @rkoutnik)&quot; title=&quot;&amp;quot;Unit testing is a great way to ensure your mocks work&amp;quot; (Tweet by @rkoutnik)&quot; src=&quot;https://tyrrrz.me/static/ef618f31180e86a477268240e3ca1200/0b533/Tweet-testing-mocks.png&quot; srcset=&quot;/static/ef618f31180e86a477268240e3ca1200/72799/Tweet-testing-mocks.png 320w, /static/ef618f31180e86a477268240e3ca1200/0b533/Tweet-testing-mocks.png 500w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Pyramid-driven testing&lt;/h2&gt;
&lt;p&gt;So why would we, as an industry, decide that unit testing should be the primary method of testing software, given all of its existing flaws? For the most part, it’s because testing at higher levels has always been considered too hard, slow, and unreliable.&lt;/p&gt;
&lt;p&gt;If you refer to the traditional test pyramid, you will find that it suggests that the most significant part of testing should be performed at the unit level. The idea is that, since coarse-grained tests are assumed to be slower and more complicated, you will want to concentrate efforts towards the bottom of the integration spectrum to end up with an efficient and maintainable test suite:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Test pyramid. Shows unit tests at the bottom, integration tests on top, and end-to-end tests at the peak.&quot; title=&quot;Test pyramid. Shows unit tests at the bottom, integration tests on top, and end-to-end tests at the peak.&quot; src=&quot;https://tyrrrz.me/static/66d6ac4cdf2f95bd92b8f393160edfcb/0012b/Test-pyramid.png&quot; srcset=&quot;/static/66d6ac4cdf2f95bd92b8f393160edfcb/72799/Test-pyramid.png 320w, /static/66d6ac4cdf2f95bd92b8f393160edfcb/6af66/Test-pyramid.png 640w, /static/66d6ac4cdf2f95bd92b8f393160edfcb/0012b/Test-pyramid.png 661w&quot; sizes=&quot;(max-width: 661px) 100vw, 661px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The metaphorical model offered by the pyramid is meant to convey that a good testing approach should involve many different layers, because focusing on the extremes can lead to issues where the tests are either too slow and unwieldy, or are useless at providing any confidence. That said, the lower levels are emphasized as that’s where the return on investment for development testing is believed to be the highest.&lt;/p&gt;
&lt;p&gt;Top-level tests, despite providing the most confidence, often end up being slow, hard to maintain, or too broad to be included as part of typically fast-paced development flow. That’s why, in most cases, such tests are instead maintained separately by dedicated QA specialists, as it’s usually not considered to be the developer’s job to write them.&lt;/p&gt;
&lt;p&gt;Integration testing, which is an abstract part of the spectrum that lies somewhere between unit testing and complete end-to-end testing, is quite often just disregarded entirely. Because it’s not really clear what exact level of integration is preferable, how to structure and organize such tests, or for the fear that they might get out of hand, many developers prefer to avoid them in favor of a more clear-cut extreme which is unit testing.&lt;/p&gt;
&lt;p&gt;For these reasons, all testing done during development typically resides at the very bottom of the pyramid. In fact, over time this has become so commonplace that development testing and unit testing are now practically synonymous with each other, leading to confusion that is only further perpetrated by conference talks, blog posts, books, and even some IDEs (all tests are unit tests, as far as JetBrains Rider is concerned).&lt;/p&gt;
&lt;p&gt;In the eyes of most developers, the test pyramid looks somewhat like this instead:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Test pyramid as developers see it. Shows unit tests at the bottom and the rest marked as someone else's problem.&quot; title=&quot;Test pyramid as developers see it. Shows unit tests at the bottom and the rest marked as someone else's problem.&quot; src=&quot;https://tyrrrz.me/static/d34bb33a893df2f129af9c7d4553bb3b/82158/Test-pyramid-real.png&quot; srcset=&quot;/static/d34bb33a893df2f129af9c7d4553bb3b/72799/Test-pyramid-real.png 320w, /static/d34bb33a893df2f129af9c7d4553bb3b/6af66/Test-pyramid-real.png 640w, /static/d34bb33a893df2f129af9c7d4553bb3b/82158/Test-pyramid-real.png 696w&quot; sizes=&quot;(max-width: 696px) 100vw, 696px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;While the pyramid is a noble attempt to turn software testing into a solved problem, there are obviously many issues with this model. In particular, the assumptions it relies on might not be true for every context, especially the premise of highly integrated test suites being slow or hard.&lt;/p&gt;
&lt;p&gt;As humans, we are naturally inclined to rely on information passed on to us from those who are more experienced, so that we can benefit from the knowledge of past generations and apply our &lt;a href=&quot;https://en.wikipedia.org/wiki/Thinking,_Fast_and_Slow#Two_systems&quot;&gt;second thinking system&lt;/a&gt; on something more useful instead. This is an important evolutionary trait that makes our species extremely fit for survival.&lt;/p&gt;
&lt;p&gt;However, whenever we extrapolate experiences into guidelines, we tend to think of them as being good on their own, forgetting about the circumstances that are integral to their relevancy. The reality is that circumstances change, and once perfectly reasonable conclusions (or best practices) might not apply so well anymore.&lt;/p&gt;
&lt;p&gt;If we look back, it’s clear that high-level testing was tough in 2000, it probably still was in 2009, but it’s 2020 outside and we are, in fact, living in the future. Advancements in technology and software design have made it a much less significant issue than it once was.&lt;/p&gt;
&lt;p&gt;Most modern application frameworks nowadays provide some sort of separate API layer used for testing, where you can run your application in a simulated in-memory environment that is very close to the real one. Virtualization tools like Docker also make it possible to execute tests that rely on actual infrastructural dependencies, while still remaining deterministic and fast.&lt;/p&gt;
&lt;p&gt;We have solutions like &lt;a href=&quot;http://mbtest.org&quot;&gt;Mountebank&lt;/a&gt;, &lt;a href=&quot;http://wiremock.org&quot;&gt;WireMock&lt;/a&gt;, &lt;a href=&quot;https://greenmail-mail-test.github.io/greenmail&quot;&gt;GreenMail&lt;/a&gt;, &lt;a href=&quot;http://appium.io&quot;&gt;Appium&lt;/a&gt;, &lt;a href=&quot;https://selenium.dev&quot;&gt;Selenium&lt;/a&gt;, &lt;a href=&quot;https://cypress.io&quot;&gt;Cypress&lt;/a&gt;, and countless others that simplify different aspects of high-level testing that were once considered unapproachable. Unless you’re developing desktop applications for Windows and are stuck with &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winauto/entry-uiauto-win32&quot;&gt;UIAutomation framework&lt;/a&gt;, you will likely have many options available.&lt;/p&gt;
&lt;p&gt;On one of my previous projects, we had a web service which was tested at the system boundary using close to a hundred behavioral tests that took just under 10 seconds to run in parallel. Sure, it’s possible to get much faster execution time than that with unit tests but given the confidence they provide this was a no-brainer.&lt;/p&gt;
&lt;p&gt;The slow test fallacy is, however, not the only false assumption that the pyramid is based on. The idea of having the majority of testing concentrated at the unit level only works out if those tests actually provide value, which of course depends on how much business logic is contained within the code under test.&lt;/p&gt;
&lt;p&gt;Some applications may have a lot of business logic (e.g. payroll systems), some may have close to none (e.g. CRUD apps), most are somewhere in between. Majority of the projects I’ve personally worked on didn’t have nearly enough of it to warrant extensive coverage with unit tests but had plenty of infrastructural complexity on the other hand, which would benefit from integration testing.&lt;/p&gt;
&lt;p&gt;Of course, in an ideal world one would evaluate the context of the project and come up with a testing approach that is most suitable for the problem at hand. In reality, however, most developers don’t even begin to think about it at all, instead just blindly stacking mountains of unit tests following what the best practices seemingly advise you to do.&lt;/p&gt;
&lt;p&gt;Finally, I think it’s fair to say, the model provided by the test pyramid is just too simplistic in general. The vertical axes present the testing spectrum as a linear scale, where any gain in confidence you get by going up is apparently offset by an equivalent amount of loss in maintainability and speed. This may be true if you compare the extremes, but not necessarily so for the rest of the points in between.&lt;/p&gt;
&lt;p&gt;It also doesn’t account for the fact that isolation has a cost in itself and isn’t something that comes for free simply by “avoiding” external interactions. Given how much effort it takes to write and maintain mocks, it’s entirely possible that a less-isolated test can be cheaper and end up providing more confidence, albeit running slightly slower.&lt;/p&gt;
&lt;p&gt;If you consider these aspects, it seems likely that the scale is not linear after all and that the point of highest return on investment resides somewhere closer to the middle rather than at the unit level:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Graph that shows that the scale of cost &amp;amp; speed might not be linear to integration.&quot; title=&quot;Graph that shows that the scale of cost &amp;amp; speed might not be linear to integration.&quot; src=&quot;https://tyrrrz.me/static/b606743d039cfb56391c5793d0dda8f2/bb630/Test-conversion-efficiency.png&quot; srcset=&quot;/static/b606743d039cfb56391c5793d0dda8f2/72799/Test-conversion-efficiency.png 320w, /static/b606743d039cfb56391c5793d0dda8f2/bb630/Test-conversion-efficiency.png 496w&quot; sizes=&quot;(max-width: 496px) 100vw, 496px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All in all, when you’re trying to establish an efficient test suite for your project, the test pyramid isn’t the best guideline you can follow. It makes a lot more sense to focus on what’s relevant specifically to your context, instead of relying on “best practices”.&lt;/p&gt;
&lt;h2&gt;Reality-driven testing&lt;/h2&gt;
&lt;p&gt;At the most basic level, a test provides value if it grants certainty that the software is working correctly. The more confident we feel, the less we have to rely on ourselves to spot potential bugs and regressions while introducing changes in code, because we trust our tests to do that for us.&lt;/p&gt;
&lt;p&gt;That trust in turn depends on how accurately the test resembles the actual user behavior. A test scenario operating at the system boundary without knowledge of any internal specifics is bound to provide us with greater confidence (and thus, value) than a test working at a lower level.&lt;/p&gt;
&lt;p&gt;In essence, the degree of confidence we gain from tests is the primary metric by which their value should be measured. Pushing it as high as possible is also the primary goal.&lt;/p&gt;
&lt;p&gt;Of course, as we know, there are other factors in play as well, such as cost, speed, ability to parallelize, and whatnot, which are all important. The test pyramid makes strong assumptions about how these things scale in relation to each other, but these assumptions are not universal.&lt;/p&gt;
&lt;p&gt;Moreover, these factors are also secondary to the primary goal of obtaining confidence. An expensive test that takes a really long time to run but provides a lot of confidence is still infinitely more useful than an extremely fast and simple test that does nothing.&lt;/p&gt;
&lt;p&gt;For that reason, I find it best to &lt;strong&gt;write tests that are as highly integrated as possible, while keeping their speed and complexity reasonable&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Does this mean that every test we write should be an end-to-end test? No, but we should be trying to get as far as we can in that direction, while keeping the downsides at an acceptable level.&lt;/p&gt;
&lt;p&gt;What’s acceptable or not is subjective and depends on the context. At the end of the day, it’s important that those tests are written by developers and are used during development, which means they shouldn’t feel like a burden to maintain and it should be possible to run them for local builds and on CI.&lt;/p&gt;
&lt;p&gt;Doing this also means that you will likely end up with tests that are scattered across different levels of the integration scale, with seemingly no clear sense of structure. This isn’t an issue we would have had with unit testing, because there each test is coupled to a specific method or a function, so the structure usually ends up mirroring that of the code itself.&lt;/p&gt;
&lt;p&gt;Fortunately, this doesn’t matter because organizing tests by individual classes or modules is not important in itself but is rather a side-effect of unit testing. Instead, the tests should be partitioned by the actual user-facing functionality that they are meant to verify.&lt;/p&gt;
&lt;p&gt;Such tests are often called &lt;em&gt;functional&lt;/em&gt; because they are based on the software’s functional requirements that describe what features it has and how they work. Functional testing is not another layer on the pyramid, but instead a completely orthogonal concept.&lt;/p&gt;
&lt;p&gt;Contrary to the popular belief, writing functional tests does not require you to use &lt;a href=&quot;https://en.wikipedia.org/wiki/Cucumber_(software)#Gherkin_language&quot;&gt;Gherkin&lt;/a&gt; or a BDD framework, but can be done with the very same tools that are typically used for unit testing. For example, consider how we can rewrite the example from the beginning of the article so that the tests are structured around supported user behavior rather than units of code:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimesSpecs&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_automatically_for_their_location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_during_periods_of_midnight_sun&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_if_their_location_cannot_be_resolved&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the actual implementation of the tests is hidden because it’s not relevant to the fact that they’re functional. What matters is that the tests and their structure are driven by the software requirements, while their scope can theoretically range anywhere from end-to-end to even unit level.&lt;/p&gt;
&lt;p&gt;Naming tests in accordance to specifications rather than classes has an additional advantage of removing that unnecessary coupling. Now, if we decide to rename &lt;code&gt;SolarCalculator&lt;/code&gt; to something else or move it to a different directory, the test names won’t need to be updated to reflect that.&lt;/p&gt;
&lt;p&gt;By adhering to this structure, our test suite will effectively take form of a living documentation. For example, this is how the test suite is organized in &lt;a href=&quot;https://github.com/Tyrrrz/CliWrap&quot;&gt;CliWrap&lt;/a&gt; (the underscores are replaced with spaces by &lt;a href=&quot;https://xunit.net/docs/configuration-files#methodDisplayOptions&quot;&gt;xUnit&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Functional tests used for CliWrap&quot; title=&quot;Functional tests used for CliWrap&quot; src=&quot;https://tyrrrz.me/static/e9d96c5e56d3fa9463804f42abf0734d/a2b88/CliWrap-functional-tests.png&quot; srcset=&quot;/static/e9d96c5e56d3fa9463804f42abf0734d/72799/CliWrap-functional-tests.png 320w, /static/e9d96c5e56d3fa9463804f42abf0734d/6af66/CliWrap-functional-tests.png 640w, /static/e9d96c5e56d3fa9463804f42abf0734d/a2b88/CliWrap-functional-tests.png 908w&quot; sizes=&quot;(max-width: 908px) 100vw, 908px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As long as a piece of software does something at least remotely useful, it will always have functional requirements. Those can be either &lt;em&gt;formal&lt;/em&gt; (specification documents, user stories, etc.) or &lt;em&gt;informal&lt;/em&gt; (verbally agreed upon, assumed, JIRA tickets, written on toilet paper, etc.)&lt;/p&gt;
&lt;p&gt;Turning informal specifications into functional tests can often be difficult because it requires us to take a step away from code and challenge ourselves to think from a user’s perspective. What helps me with my open source projects is that I start by creating a readme file where I list a bunch of relevant usage examples, and then encode those into tests.&lt;/p&gt;
&lt;p&gt;To summarize, we can conclude that it’s a good idea to &lt;strong&gt;partition tests based on threads of behavior, rather than the code’s internal structure&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Both of the aforementioned guidelines, when combined, form a mental framework that provides us with a clear goal for writing tests and a good sense of organization, while not relying on any assumptions. We can use it to establish a test suite for our project that focuses on value, and then scale it according to priorities and limitations relevant to the current context.&lt;/p&gt;
&lt;p&gt;The idea is that, instead of focusing on a specific scope or distribution of scopes, we build our test suite based on the user-facing functionality, while attempting to cover that functionality as accurately as we can.&lt;/p&gt;
&lt;h2&gt;Functional testing for web services (via ASP.NET Core)&lt;/h2&gt;
&lt;p&gt;There might still be some confusion as to what constitutes functional testing or how exactly it’s supposed to look especially if you’ve never done it before, so it makes sense to show a simple but complete example. For this, we will turn the solar calculator from earlier into a web service and cover it with tests according to the rules we’ve outlined in the previous part of the article. This app will be based on ASP.NET Core, which is a web framework I’m most familiar with, but the same idea should also equally apply to any other platform.&lt;/p&gt;
&lt;p&gt;Our web service is going to expose endpoints to calculate sunrise and sunset times based on the user’s IP or provided location. To make things a bit more interesting, we’ll also add a Redis caching layer to store previous calculations for faster responses.&lt;/p&gt;
&lt;p&gt;The tests will work by launching the app in a simulated environment where it can receive HTTP requests, handle routing, perform validation, and exhibit almost identical behavior to an app running in production. At the same time, we will also use Docker to make sure our tests rely on the same infrastructural dependencies as the real app does.&lt;/p&gt;
&lt;p&gt;Let us first go over the implementation of the web app to understand what we’re dealing with. Note, some parts in the code snippets below are omitted for brevity, but you can also check out the full project on &lt;a href=&quot;https://github.com/Tyrrrz/FuncTestingInAspNetCoreExample&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First off, we will need a way to get the user’s location by IP, which is done by the &lt;code&gt;LocationProvider&lt;/code&gt; class we’ve seen in earlier examples. It works simply by wrapping an external GeoIP lookup service called &lt;a href=&quot;https://ip-api.com/&quot;&gt;IP-API&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; _httpClient&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;LocationProvider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; httpClient&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _httpClient &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; httpClient&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Location&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IPAddress&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ipFormatted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;IsLocal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;?&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;MapToIPv4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; json &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _httpClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetJsonAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token string&quot;&gt;&quot;http://ip-api.com/json/{ipFormatted}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; latitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;lat&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetDouble&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; longitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;lon&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetDouble&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            Latitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; latitude&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Longitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; longitude
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to turn location into solar times, we’re going to rely on the &lt;a href=&quot;https://edwilliams.org/sunrise_sunset_algorithm.htm&quot;&gt;sunrise/sunset algorithm published by US Naval Observatory&lt;/a&gt;. The algorithm itself is too long to include here, but the rest of the implementation for &lt;code&gt;SolarCalculator&lt;/code&gt; is as follows:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _locationProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeSpan&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt; location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; instant&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt; zenith&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;bool&lt;/span&gt; isSunrise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        

        

        
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SolarTimes&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt; location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;SolarTimes&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IPAddress&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunriseOffset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;90.83&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunsetOffset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;90.83&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ResetTimeOfDay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sunriseOffset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ResetTimeOfDay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sunsetOffset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            Sunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Sunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sunset
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since it’s an MVC web app, we will also have a controller that provides endpoints to expose the app’s functionality:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ApiController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;solartimes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimeController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ControllerBase&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; _solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SolarTimeController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt; cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        _solarCalculator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        _cachingLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;by_ip&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IActionResult&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetByIp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; HttpContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Connection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RemoteIpAddress&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; cacheKey &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; $&lt;span class=&quot;token string&quot;&gt;&quot;{ip},{date}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; cachedSolarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;TryGetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedSolarTimes &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetSolarTimesAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;??&lt;/span&gt; DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; solarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;solarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;by_location&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IActionResult&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetByLocation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt; lat&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt; lon&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As seen above, the &lt;code&gt;/solartimes/by_ip&lt;/code&gt; endpoint mostly just delegates execution to &lt;code&gt;SolarCalculator&lt;/code&gt;, but also has very simple caching logic to avoid redundant requests to 3rd party services. The caching is done by the &lt;code&gt;CachingLayer&lt;/code&gt; class which encapsulates a Redis client used to store and retrieve JSON content:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IConnectionMultiplexer&lt;/span&gt; _redis&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CachingLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IConnectionMultiplexer&lt;/span&gt; connectionMultiplexer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _redis &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; connectionMultiplexer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;TryGetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;where&lt;/span&gt; T &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _redis&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetDatabase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;StringGetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HasValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;SetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt; obj&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;where&lt;/span&gt; T &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _redis&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetDatabase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;StringSetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;obj&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, all of the above parts are wired together in the &lt;code&gt;Startup&lt;/code&gt; class by configuring request pipeline and registering required services:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Startup&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IConfiguration&lt;/span&gt; _configuration&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IConfiguration&lt;/span&gt; configuration&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _configuration &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; configuration&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetRedisConnectionString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        _configuration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetConnectionString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Redis&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IServiceCollection&lt;/span&gt; services&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;AddMvc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;o &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;EnableEndpointRouting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddSingleton&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IConnectionMultiplexer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            ConnectionMultiplexer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Connect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetRedisConnectionString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddSingleton&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddHttpClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        services&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddTransient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Configure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IApplicationBuilder&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IWebHostEnvironment&lt;/span&gt; env&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;IsDevelopment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UseDeveloperExceptionPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;UseMvcWithDefaultRoute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we didn’t have our classes implement any autotelic interfaces because we’re not planning to use mocks. It may happen that we will need to substitute one of the services in tests but it’s not yet clear now, so we avoid unnecessary work (and design damage) until we’re sure we need it.&lt;/p&gt;
&lt;p&gt;Although it’s a rather simple project, this app already incorporates a decent amount of infrastructural complexity by relying on a 3rd party web service (GeoIP provider) as well as a persistence layer (Redis). This is a rather common setup which a lot of real-life projects can relate to.&lt;/p&gt;
&lt;p&gt;With a classical approach focused on unit testing, we would find ourselves targeting the service layer and possibly the controller layer of our app, writing isolated tests that ensure that every branch of code executes correctly. Doing that would be useful to an extent but could never give us confidence that the actual endpoints, with all of the middleware and peripheral components, work as intended.&lt;/p&gt;
&lt;p&gt;Instead, we will write tests that target the endpoints directly. To do that, we will need to create a separate testing project and add a few infrastructural components that will support our tests. One of them is &lt;code&gt;FakeApp&lt;/code&gt; which is going to be used to encapsulate a virtual instance of our app:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IDisposable&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; WebApplicationFactory&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Startup&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; _appFactory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; Client &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;FakeApp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        _appFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;WebApplicationFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        Client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _appFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        Client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        _appFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Dispose&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The majority of the work here is already done by &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-3.1&quot;&gt;&lt;code&gt;WebApplicationFactory&lt;/code&gt;&lt;/a&gt;, which is a utility provided by the framework that allows us to bootstrap the app in-memory for testing purposes. It also provides us with API to override configuration, service registrations, and the request pipeline if needed.&lt;/p&gt;
&lt;p&gt;We can use an instance of this object in tests to run the app, send requests with the provided &lt;code&gt;HttpClient&lt;/code&gt;, and then check that the response matches our expectations. This instance can be either shared among multiple tests or instead created separately for each one.&lt;/p&gt;
&lt;p&gt;Since we also rely on Redis, we want to have a way to spin up a fresh server to be used by our app. There are many ways to do it, but for a simple example I decided to use xUnit’s fixture API for this purpose:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisFixture&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IAsyncLifetime&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;string&lt;/span&gt; _containerId&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;InitializeAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Cli&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;docker&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithArguments&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;run -d -p 6379:6379 redis&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ExecuteBufferedAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        _containerId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;StandardOutput&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Trim&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ResetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Cli&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;docker&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithArguments&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token string&quot;&gt;&quot;exec {_containerId} redis-cli FLUSHALL&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ExecuteAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;DisposeAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Cli&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Wrap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;docker&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithArguments&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token string&quot;&gt;&quot;container kill {_containerId}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ExecuteAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above code works by implementing the &lt;code&gt;IAsyncLifetime&lt;/code&gt; interface that lets us define methods which are going to be executed before and after the tests run. We are using these methods to start a Redis container in Docker and then kill it once the testing has finished.&lt;/p&gt;
&lt;p&gt;Besides that, the &lt;code&gt;RedisFixture&lt;/code&gt; class also exposes &lt;code&gt;ResetAsync&lt;/code&gt; method which can be used to execute the &lt;code&gt;FLUSHALL&lt;/code&gt; command to delete all keys from the database. We will be calling this method to reset Redis to a clean slate before each test. As an alternative, we could also just restart the container instead, which takes a bit longer but is probably more reliable.&lt;/p&gt;
&lt;p&gt;Now that the infrastructure is set up, we can move on to writing our first test:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimeSpecs&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IClassFixture&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;RedisFixture&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; IAsyncLifetime
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RedisFixture&lt;/span&gt; _redisFixture&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SolarTimeSpecs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RedisFixture&lt;/span&gt; redisFixture&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        _redisFixture &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; redisFixture&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;InitializeAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _redisFixture&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ResetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_their_location_by_ip&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetStringAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/solartimes/by_ip&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        
        solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeWithin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromDays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Now&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromDays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Now&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromDays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the setup is really simple. All we need to do is create an instance of &lt;code&gt;FakeApp&lt;/code&gt; and use the provided &lt;code&gt;HttpClient&lt;/code&gt; to send requests to one of the endpoints, just like you would if it was a real web app.&lt;/p&gt;
&lt;p&gt;This specific test works by querying the &lt;code&gt;/solartimes/by_ip&lt;/code&gt; route, which determines user’s sunrise and sunset times for the current date based on their IP. Since we’re relying on an actual GeoIP provider and don’t know what the result is going to be, we’re performing property-based assertions to ensure that the solar times are valid.&lt;/p&gt;
&lt;p&gt;Although those assertions will be able to catch a multitude of potential bugs, it doesn’t give us full confidence that the result is fully correct. There are a couple of different ways we can improve on this, however.&lt;/p&gt;
&lt;p&gt;An obvious option would be to replace the real GeoIP provider with a fake instance that will always return the same location, allowing us to hard-code the expected solar times. The downside of doing that is that we will be effectively reducing the integration scope, which means we won’t be able to verify that our app talks to the 3rd party service correctly.&lt;/p&gt;
&lt;p&gt;As an alternative approach, we can instead substitute the IP address that the test server receives from the client. This way we can make the test more strict, while maintaining the same integration scope.&lt;/p&gt;
&lt;p&gt;To accomplish this, we will need to create a startup filter that lets us inject a custom IP address into request context using middleware:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeIpStartupFilter&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IStartupFilter&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IPAddress&lt;/span&gt; Ip &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IPAddress&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;::1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; Action&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IApplicationBuilder&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Configure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Action&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IApplicationBuilder&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; nextFilter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; next&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Connection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RemoteIpAddress &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Ip&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token function&quot;&gt;nextFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can then wire it into &lt;code&gt;FakeApp&lt;/code&gt; by registering it as a service:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IDisposable&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; WebApplicationFactory&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Startup&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; _appFactory&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeIpStartupFilter&lt;/span&gt; _fakeIpStartupFilter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeIpStartupFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpClient&lt;/span&gt; Client &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IPAddress&lt;/span&gt; ClientIp
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _fakeIpStartupFilter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Ip&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; _fakeIpStartupFilter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;FakeApp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        _appFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;WebApplicationFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;WithWebHostBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;o &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                s&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;AddSingleton&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IStartupFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;_fakeIpStartupFilter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        Client &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _appFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;CreateClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can update the test to rely on concrete data:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;32&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_their_location_by_ip&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ClientIp &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; IPAddress&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;20.112.101.1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;QueryBuilder&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;O&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CultureInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InvariantCulture&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetStringAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token string&quot;&gt;&quot;/solartimes/by_ip{query}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some developers might still feel uneasy about relying on a real 3rd party web service in tests, because it may lead to non-deterministic results. Conversely, one can argue that we do actually want our tests to incorporate that dependency, because we want to be aware if it breaks or changes in unexpected ways, as it can lead to bugs in our own software.&lt;/p&gt;
&lt;p&gt;Of course, using real dependencies is not always possible, for example if the service has usage quotas, costs money, or is simply slow or unreliable. In such cases we would want to replace it with a fake (preferably not mocked) implementation to be used in tests instead. This, however, is not one of those cases.&lt;/p&gt;
&lt;p&gt;Similarly to how we did with the first one, we can also write a test that covers the second endpoint. This one is simpler because all input parameters are passed directly as part of URL query:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_a_specific_location_and_date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;QueryBuilder&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;lat&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;50.45&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;lon&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;30.52&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;O&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CultureInfo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;InvariantCulture&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetStringAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$&lt;span class=&quot;token string&quot;&gt;&quot;/solartimes/by_location{query}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can keep adding tests like this one to ensure that the app supports all possible locations, dates, and handles potential edge cases such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Midnight_sun&quot;&gt;midnight sun phenomenon&lt;/a&gt;. However, it’s possible that doing so will scale poorly as we may not want to execute the entire pipeline each time just to verify that the business logic that calculates solar times works correctly.&lt;/p&gt;
&lt;p&gt;It’s important to note that, although we want to avoid it if possible, we can still reduce the integration scope if there’s a real reason for it. In this case, we can choose to cover additional cases with unit tests instead.&lt;/p&gt;
&lt;p&gt;Normally, that would imply that we need to isolate &lt;code&gt;SolarCalculator&lt;/code&gt; from &lt;code&gt;LocationProvider&lt;/code&gt; somehow, which in turn implies mocking. Fortunately, there is a clever way to avoid it.&lt;/p&gt;
&lt;p&gt;We can alter the implementation of &lt;code&gt;SolarCalculator&lt;/code&gt; by separating the pure and impure parts of the code away from each other:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;21&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TimeSpan&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt; location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; instant&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;double&lt;/span&gt; zenith&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;bool&lt;/span&gt; isSunrise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetSolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt; location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunriseOffset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;90.83&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunsetOffset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;CalculateSolarTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;90.83&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ResetTimeOfDay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sunriseOffset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; sunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ResetTimeOfDay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sunsetOffset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            Sunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            Sunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sunset
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What changed is now, instead of relying on &lt;code&gt;LocationProvider&lt;/code&gt; to provide it, the &lt;code&gt;GetSolarTimes&lt;/code&gt; method takes location as an explicit parameter. Doing that means that we also no longer require dependency inversion, as there are no dependencies to invert.&lt;/p&gt;
&lt;p&gt;To wire everything back together, all we need to do is update the controller:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ApiController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;solartimes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarTimeController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ControllerBase&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; _solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;SolarTimeController&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt; solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;LocationProvider&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;CachingLayer&lt;/span&gt; cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        _solarCalculator &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        _locationProvider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; locationProvider&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        _cachingLayer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;by_ip&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; Task&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IActionResult&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;GetByIp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ip &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; HttpContext&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Connection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RemoteIpAddress&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; cacheKey &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; cachedSolarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;TryGetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedSolarTimes &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _locationProvider&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetLocationAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ip&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; _solarCalculator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetSolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;??&lt;/span&gt; DateTimeOffset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Now&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; _cachingLayer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;SetAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; solarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;solarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since our existing tests are not aware of implementation details, this simple refactoring didn’t break them in any way. With that done, we can write some additional light-weight tests to cover the business logic more extensively, while still not mocking anything:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;54&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_New_York_in_November&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        Latitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;40.71&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        Longitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;74.00&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;49&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetSolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_Tromso_in_January&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; location &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Location&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        Latitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;69.65&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        Longitude &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;18.96&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunrise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; expectedSunset &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromHours&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SolarCalculator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetSolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunrise&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    solarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;BeCloseTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;expectedSunset&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; TimeSpan&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;FromSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although these tests no longer exercise the full integration scope, they are still driven by functional requirements of the app. Because we already have another high-level test that covers the entire endpoint, we can keep these ones more narrow without sacrificing overall confidence.&lt;/p&gt;
&lt;p&gt;This trade-off makes sense if we’re trying to improve execution speed, but I would recommend to stick to high-level tests as much as possible, at least until it becomes a problem.&lt;/p&gt;
&lt;p&gt;Finally, we may also want to do something to ensure that our Redis caching layer works correctly as well. Even though we’re using it in our tests, it never actually returns a cached response because the database gets reset between tests.&lt;/p&gt;
&lt;p&gt;The problem with testing things like caching is that they can’t be defined by functional requirements. A user, with no awareness of the app’s internal affairs, has no way of knowing whether the responses are returned from cache or not.&lt;/p&gt;
&lt;p&gt;However, if our goal is only to test the integration between the app and Redis, we don’t need to write implementation-aware tests and can do something like this instead:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;csharp&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-csharp&quot;&gt;
&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Fact&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;User_can_get_solar_times_for_their_location_by_ip_multiple_times&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FakeApp&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; collectedSolarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Client&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;GetStringAsync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/solartimes/by_ip&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; solarTimes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; JsonSerializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token generic-method&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Deserialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SolarTimes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        collectedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;solarTimes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    
    collectedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;t &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; t&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunrise&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Distinct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContainSingle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    collectedSolarTimes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Select&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;t &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; t&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Sunset&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Distinct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Should&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ContainSingle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The test will query the same endpoint multiple times and assert that the result always remains the same. This is enough to ensure that the responses are cached properly and then returned in the same way as normal responses.&lt;/p&gt;
&lt;p&gt;At the end of the day we have a simple test suite that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Test suite&quot; title=&quot;Test suite&quot; src=&quot;https://tyrrrz.me/static/3b795164256c6c513a5bcdad38a850ff/1f083/Example-test-results.png&quot; srcset=&quot;/static/3b795164256c6c513a5bcdad38a850ff/72799/Example-test-results.png 320w, /static/3b795164256c6c513a5bcdad38a850ff/6af66/Example-test-results.png 640w, /static/3b795164256c6c513a5bcdad38a850ff/1f083/Example-test-results.png 660w&quot; sizes=&quot;(max-width: 660px) 100vw, 660px&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that the duration of the tests is pretty good, with the fastest integration test completing at 55ms and the slowest being under a second (due to suffering from cold start). Considering that these tests involve the entire lifecycle, include all dependencies and infrastructure, while relying on a grand total of zero mocks, I would say that this is more than acceptable.&lt;/p&gt;
&lt;p&gt;If you want to tinker with the example project yourself, you can find it &lt;a href=&quot;https://github.com/Tyrrrz/FuncTestingInAspNetCoreExample&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Drawbacks and considerations&lt;/h2&gt;
&lt;p&gt;Unfortunately, there is &lt;a href=&quot;https://en.wikipedia.org/wiki/No_Silver_Bullet&quot;&gt;no silver bullet&lt;/a&gt; and the approaches described in this article also suffer from some potential drawbacks. In the interest of fairness, it makes sense to mention them as well.&lt;/p&gt;
&lt;p&gt;One of the biggest challenges I’ve found when doing high-level functional testing is figuring out a good balance between usefulness and usability. Compared to approaches that focus specifically on unit testing, it does take more effort to ensure that such tests are sufficiently deterministic, don’t take too long, can run independently of each other, and are generally usable during development.&lt;/p&gt;
&lt;p&gt;The wide scope of tests also implies the need for a deeper understanding of the project’s dependencies and technologies it relies upon. It’s important to know how they’re used, whether they can be easily containerized, which options are available and what are the trade-offs.&lt;/p&gt;
&lt;p&gt;In the context of integration testing, the “testability” aspect is not defined by how well the code can be isolated, but instead by how well the actual infrastructure accommodates and facilitates testing. This puts a certain prerequisite on the responsible person and the team in general in terms of technical expertise.&lt;/p&gt;
&lt;p&gt;It may also take some time to set up and configure the testing environment, as it includes creating fixtures, wiring fake implementations, adding custom initialization and cleanup behavior, and so on. All these things need to be maintained as the project scales and becomes more complicated.&lt;/p&gt;
&lt;p&gt;Writing functional tests in itself involves a bit more planning as well, because it’s no longer just about covering every method of every class, but rather about outlining software requirements and turning them into code. Understanding what those requirements are and which of them are functional can also be tricky sometimes, as it requires an ability to think from a user’s perspective.&lt;/p&gt;
&lt;p&gt;Another common concern is that high-level tests often suffer from a lack of locality. If a test fails, either due to unmet expectations or because of an unhandled exception, it’s usually unclear what exactly caused the error.&lt;/p&gt;
&lt;p&gt;Although there are ways to mitigate this issue, ultimately it’s always going to be a trade-off: isolated tests are better at indicating the cause of an error, while integrated tests are better at highlighting the impact. Both are equally useful, so it comes down to what you consider to be more important.&lt;/p&gt;
&lt;p&gt;At the end of the day, I still think functional testing is worth it even despite these shortcomings, as I find that it leads to a better developer experience overall. It’s been a while since I’ve done classic unit testing and I’m not looking forward to starting again.&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Unit testing is a popular approach for testing software, but mostly for the wrong reasons. It’s often touted as an effective way for developers to test their code while also enforcing best design practices, however many find it encumbering and superficial.&lt;/p&gt;
&lt;p&gt;It’s important to understand that development testing does not equate to unit testing. The primary goal is not to write tests which are as isolated as possible, but rather to gain confidence that the code works according to its functional requirements. And there are better ways to achieve that.&lt;/p&gt;
&lt;p&gt;Writing high-level tests that are driven by user behavior will provide you with much higher return on investment in the long run, and it isn’t as hard as it seems. Find an approach that makes the most sense for your project and stick to it.&lt;/p&gt;
&lt;p&gt;Here are the main takeaways:&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;&lt;li&gt;Think critically and challenge best practices&lt;/li&gt;
&lt;li&gt;Don’t rely on the test pyramid&lt;/li&gt;
&lt;li&gt;Separate tests by functionality, rather than by classes, modules, or scope&lt;/li&gt;
&lt;li&gt;Aim for the highest level of integration while maintaining reasonable speed and cost&lt;/li&gt;
&lt;li&gt;Avoid sacrificing software design for testability&lt;/li&gt;
&lt;li&gt;Consider mocking only as a last resort&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;There are also other great articles about alternative testing approaches in modern software development. These are the ones I’ve personally found really interesting:&lt;/p&gt;
</description>
<pubDate>Thu, 09 Jul 2020 11:06:40 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:type>website</og:type>
<og:title>Unit Testing is Overrated | Alexey Golub</og:title>
<og:description>The importance of testing in modern software development is really hard to overstate. Delivering a successful product is not something you do once and forget about but is rather a continuous recurring process. With every line of code that changes…</og:description>
<og:image>https://tyrrrz.me/static/Cover-d9c976fbc290d0715efec59d3cd8b3cb.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tyrrrz.me/blog/unit-testing-is-overrated/</dc:identifier>
</item>
<item>
<title>Nvidia is now worth more than Intel</title>
<link>https://www.techspot.com/news/85932-nvidia-passes-intel-most-valuable-us-chipmaker.html</link>
<guid isPermaLink="true" >https://www.techspot.com/news/85932-nvidia-passes-intel-most-valuable-us-chipmaker.html</guid>
<description>&lt;h5&gt;&lt;strong&gt;What just happened?&lt;/strong&gt; Thanks to a recent surge in its stock price, Nvidia has overtaken Intel to become the most valuable chipmaker in the US. Following a 2.3 percent jump yesterday afternoon, team green’s shares have now reached $408, putting its market cap at $251.3 billion, ahead of Intel’s $248.1 billion.&lt;/h5&gt;
&lt;p&gt;We hear a lot about how &lt;a href=&quot;https://www.techspot.com/article/2043-amd-rise-fall-revival-history/&quot;&gt;AMD&lt;/a&gt; is now a big challenger to Intel, but it still lags far behind Chipzilla when it comes to company valuation. Lisa Su’s firm has a market cap of $62.5 billion, almost a quarter of what Intel is worth.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.techspot.com/tag/nvidia/&quot;&gt;Nvidia&lt;/a&gt;, however, now holds the title of the biggest chipmaker in the US, and the third-largest in the world, despite not actually producing its own chips; it leaves that to third-party foundries such as TSMC. Intel’s chips, on the other hand, are created entirely in-house.&lt;/p&gt;
&lt;p class=&quot;img-white full&quot;&gt;&lt;a href=&quot;https://www.techspot.com/images2/news/bigimage/2020/07/2020-07-09-image.jpg&quot;&gt;&lt;img height=&quot;1162&quot; src=&quot;data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2016%209'%3E%3C/svg%3E&quot; width=&quot;1460&quot; data-src=&quot;https://static.techspot.com/images2/news/bigimage/2020/07/2020-07-09-image.jpg&quot; alt=&quot;&quot; class=&quot;b-lazy&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nvidia’s stock has risen 68 percent in 2020, while Intel has seen a 3 percent increase. &lt;a href=&quot;https://www.techspot.com/news/85898-lockdowns-dont-slow-samsung-company-predicts-23-profit.html&quot;&gt;Like Samsung&lt;/a&gt;, the lockdowns have benefited Nvidia—the explosion of people working from home meant a higher demand for its enterprise products. Server manufacturers are snapping up the new, 7nm &lt;a href=&quot;https://www.techspot.com/news/85232-nvidia-first-ampere-gpu-silicon-monster-ai-servers.html&quot;&gt;Ampere A100 GPUs&lt;/a&gt;, which recently saw a &lt;a href=&quot;https://www.techspot.com/news/85718-nvidia-reveals-pcie-40-version-ampere-a100-gpu.html&quot;&gt;PCIe version&lt;/a&gt; (photo below). Moreover, anticipation over the upcoming RTX 3000-series has also helped boost the company’s share price.&lt;/p&gt;
&lt;p class=&quot;img-white full&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1350&quot; src=&quot;data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2016%209'%3E%3C/svg%3E&quot; width=&quot;1800&quot; data-src=&quot;https://static.techspot.com/images2/news/bigimage/2020/06/2020-06-22-image-5.jpg&quot; class=&quot;b-lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Reuters &lt;a href=&quot;https://www.reuters.com/article/us-usa-stocks-chips/nvidia-eclipses-intel-as-most-valuable-u-s-chipmaker-idUSKBN2492Z8&quot;&gt;notes&lt;/a&gt; that despite the stock price surge, Nvidia’s sales are still a fraction of Intel’s. While the former’s revenue is expected to rise 34 percent this year to $14.6 billion, analysts predict Intel’s 2020 revenue will increase 2.5 percent to $73.8 billion.&lt;/p&gt;
&lt;p&gt;When it comes to market caps, calculated by multiplying the share price by the total number of a company’s outstanding shares, Apple remains the &lt;a href=&quot;https://www.techspot.com/news/85584-apple-becomes-first-15-trillion-us-company.html&quot;&gt;top tech firm&lt;/a&gt; thanks to its massive $1.65 trillion valuation, followed closely by Microsoft at $1.61 trillion.&lt;/p&gt;


&lt;div class=&quot;social-share-svg&quot;&gt;
&lt;p&gt;Share this article:&lt;/p&gt;






&lt;/div&gt;

</description>
<pubDate>Thu, 09 Jul 2020 10:17:54 +0000</pubDate>
<dc:creator>neogodless</dc:creator>
<og:title>Nvidia is now worth more than Intel</og:title>
<og:type>article</og:type>
<og:url>https://www.techspot.com/news/85932-nvidia-passes-intel-most-valuable-us-chipmaker.html</og:url>
<og:description>We hear a lot about how AMD is now a big challenger to Intel, but it still lags far behind Chipzilla when it comes to company valuation. Lisa Su’s firm has a market cap of $62.5 billion, almost a quarter&amp;hellip;</og:description>
<og:image>https://static.techspot.com/images2/news/bigimage/2019/05/2019-05-12-image-8.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.techspot.com/news/85932-nvidia-passes-intel-most-valuable-us-chipmaker.html</dc:identifier>
</item>
<item>
<title>Moving from TypeScript to Rust / WebAssembly</title>
<link>https://nicolodavis.com/blog/typescript-to-rust/</link>
<guid isPermaLink="true" >https://nicolodavis.com/blog/typescript-to-rust/</guid>
<description>&lt;p&gt;I recently decided to switch the engine of &lt;a href=&quot;https://boardgamelab.app/&quot;&gt;Boardgame Lab&lt;/a&gt; from TypeScript to Rust. The application itself is an SPA written in Svelte. I only switched the logic that updates the game state to Rust. Here is a summary of my experience with the transition:&lt;/p&gt;
&lt;h2&gt;Isomorphic Architecture&lt;/h2&gt;
&lt;p&gt;One of the advantages of using JavaScript or TypeScript is that you can run the same code on both client and server. For &lt;a href=&quot;https://boardgamelab.app/&quot;&gt;Boardgame Lab&lt;/a&gt;, this means that the game state can be updated independently on both sides. This results in a lag-free experience on the client while still using the server as the authoritative source of data.&lt;/p&gt;
&lt;p&gt;With &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt; taking off, you can get the same advantage writing Rust. Instead of pushing client-side code to the server, we push server-side code to the client by compiling Rust to WebAssembly.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&quot;https://github.com/wasm-tool/rollup-plugin-rust&quot;&gt;Rollup&lt;/a&gt; plugin allows you to import a &lt;em&gt;Cargo.toml&lt;/em&gt; file into your TypeScript codebase, allowing a seamless integration between Rust and TypeScript code. The dev experience is almost as smooth as writing TypeScript itself (for example, the browser refreshes automatically when you change a line of Rust code).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rustwasm/wasm-bindgen&quot;&gt;wasm-bindgen&lt;/a&gt; facilitates serialization of Rust structs into JSON objects and vice-versa.&lt;/p&gt;
&lt;h2&gt;Limitations of TypeScript&lt;/h2&gt;
&lt;p&gt;Coding in TypeScript has been a largely pleasant experience, but switching to Rust immediately brought to light some of the limitations of TypeScript.&lt;/p&gt;
&lt;h4&gt;Strict Typing&lt;/h4&gt;
&lt;p&gt;TypeScript is more of a type-hinter than a type-checker. It primarily ensures that you’re not accessing fields that you aren’t declaring via the type system (which is quite expressive). It also enables nicer autocomplete for your IDE.&lt;/p&gt;
&lt;p&gt;However, it does not actually ensure that the data you are manipulating corresponds to the type that you have declared to represent it. For example, the data might contain &lt;strong&gt;additional fields&lt;/strong&gt; or even &lt;strong&gt;incorrect&lt;/strong&gt; values for declared types.&lt;/p&gt;
&lt;h4&gt;Data Validation&lt;/h4&gt;
&lt;p&gt;You have to write data validation code to ensure that you’re operating on correct data in TypeScript. You get this for free in Rust, which will throw an error if you parse data that doesn’t line up with the struct that is to hold it in memory.&lt;/p&gt;
&lt;h4&gt;Error Handling&lt;/h4&gt;
&lt;p&gt;Rust’s &lt;a href=&quot;https://doc.rust-lang.org/book/ch06-02-match.html&quot;&gt;pattern matching&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html&quot;&gt;error handling&lt;/a&gt; make it easy to handle every code path that could result in an error, leading to very robust code.&lt;/p&gt;
&lt;p&gt;This leads to a great degree of confidence that if it compiles, it’s probably not going to throw an error at runtime.&lt;/p&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;h4&gt;WebAssembly is faster than JavaScript&lt;/h4&gt;
&lt;p&gt;The initial rewrite without any performance optimizations is already faster than the previous TypeScript codebase. This doesn’t matter too much yet, but &lt;a href=&quot;https://boardgamelab.app/&quot;&gt;Boardgame Lab&lt;/a&gt; will eventually ship with bots, so the performance will matter once game trees need to be searched.&lt;/p&gt;
&lt;h4&gt;The Rust server is leaner&lt;/h4&gt;
&lt;p&gt;The multiplayer server receives updates from clients via WebSockets and then:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Updates its copy of the game state.&lt;/li&gt;
&lt;li&gt;Broadcasts the client update to other clients.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The previous server used &lt;a href=&quot;https://github.com/websockets/ws&quot;&gt;ws&lt;/a&gt;, a popular library for NodeJS. The new version uses &lt;a href=&quot;https://github.com/seanmonstar/warp&quot;&gt;Warp&lt;/a&gt; (Rust), which uses less memory under the same load.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Overall, I’m pretty happy with the switch. I haven’t really encountered much resistance from the borrow checker despite being fairly new to Rust (I come from a C++ background, so maybe that helps).&lt;/p&gt;
</description>
<pubDate>Thu, 09 Jul 2020 02:52:18 +0000</pubDate>
<dc:creator>nicolodavis</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://nicolodavis.com/blog/typescript-to-rust/</dc:identifier>
</item>
</channel>
</rss>