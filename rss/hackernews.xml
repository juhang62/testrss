<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Kickstarter’s staff is unionizing</title>
<link>https://www.theverge.com/2019/3/19/18254995/kickstarter-unionizing-union-representation-inclusivity-transparency-tech-us-crowdfunding</link>
<guid isPermaLink="true" >https://www.theverge.com/2019/3/19/18254995/kickstarter-unionizing-union-representation-inclusivity-transparency-tech-us-crowdfunding</guid>
<description>&lt;p id=&quot;KVCFyi&quot;&gt;The staff of Kickstarter announced plans to unionize today. If recognized, Kickstarter would be the first major tech company with union representation in the United States.&lt;/p&gt;
&lt;p id=&quot;OfEQUf&quot;&gt;Members of the union, which goes by Kickstarter United, say they want to improve inclusivity and transparency at the company. To unionize, they’re working with the Office and Professional Employees International Union (OPEIU) Local 153. In a statement, the union said:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p id=&quot;i3FipP&quot;&gt;Kickstarter United is proud to start the process of unionizing to safeguard and enrich Kickstarter’s charter commitments to creativity, equity, and a positive impact on society. We trust in the democratic process and are confident that the leadership of Kickstarter stands with us in that effort. Kickstarter has always been a trailblazer, and this is a pivotal moment for tech. We want to set the standard for the entire industry. Now is the time. Come together. Unionize.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;rWUVdi&quot;&gt;In a world of Facebook and Twitter, Kickstarter feels almost quaint in its &lt;a href=&quot;https://www.kickstarter.com/charter?ref=about_subnav&quot;&gt;mission&lt;/a&gt; — “to help bring creative projects to life” — and in its &lt;a href=&quot;https://www.kickstarter.com/charter?ref=about_subnav&quot;&gt;charter&lt;/a&gt; as a public benefit corporation, which means that the company is “obligated to consider the impact of their decisions on society, not only shareholders.” Its staff unionizing means the company will also have to consider more seriously its responsibilities to its employees. It also means that its fellows in Silicon Valley and beyond could be next. Kickstarter is fundamentally a tech company, and its staff unionizing with the OPEIU shows a way forward for other employees in the space.&lt;/p&gt;
&lt;p id=&quot;9N8AB0&quot;&gt;The nascent union said as much in a memo sent out to the staff today, and &lt;em&gt;The Verge&lt;/em&gt; has obtained a copy. Kickstarter’s staff is unionizing because they want to “promote our collective values: inclusion and solidarity, transparency and accountability; a seat at the table,” the organizers write, noting that in the decade that Kickstarter has been around, it’s democratized crowdfunding and brought more than 150,000 projects to life. “Kickstarter’s efforts are incomplete, and these values have failed to manifest in our workplace. We can do better together — for ourselves and our industry.”&lt;/p&gt;
&lt;p id=&quot;y6fnKu&quot;&gt;Kickstarter staffers say they chose the OPEIU because of its approach to organizing, its experience domestically and internationally, and its diversity of members. As the union organizers mention, OPEIU supports “everyone from helicopter pilots to researchers.” At Kickstarter, all employees, aside from senior management, will be eligible to join the union.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;kKEhjU&quot;&gt;&lt;q&gt;America’s political climate is changing&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;lTbcmu&quot;&gt;At the moment, none of the major tech companies have a unionized workforce. In the last year, employees at Google and Microsoft have begun to agitate collectively to end sexual harassment and their companies’ respective involvements in the military-industrial complex and overseas censorship. Employees at Amazon and Salesforce &lt;a href=&quot;https://www.theatlantic.com/technology/archive/2018/09/tech-labor-movement/567808/&quot;&gt;have also implored their executives&lt;/a&gt; to stop selling technology to the US government.&lt;/p&gt;
&lt;p id=&quot;MZmQVO&quot;&gt;America’s political climate is changing; among other things, the 2016 presidential election brought up the issue of wealth inequality in this country and made people consider more closely the structural forces that define class here. That awareness helped other industries that were not traditionally associated with union membership consider joining — including staffs at digital media companies like Vox Media, for example, which &lt;em&gt;The Verge&lt;/em&gt; is a part of — as the precarity of the American economy for knowledge workers has become more evident.&lt;/p&gt;
&lt;p id=&quot;x3ZpKg&quot;&gt;“The goal of our union is to have a formal seat at the table to negotiate with management,” the Kickstarter Union organizers write in their email to staff. “We’re negotiating to promote our collective values, and ensure Kickstarter is around for the long haul. We care about preserving what’s great about Kickstarter and improving what isn’t.”&lt;/p&gt;
&lt;p id=&quot;4LWmcr&quot;&gt;A spokesperson for Kickstarter provided this statement from the company:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p id=&quot;WO03E7&quot;&gt;We’re proud that everyone here at Kickstarter cares deeply about its mission and its future. We’re aware that there are team members at Kickstarter who are interested in forming a union, and we look forward to hearing more about our employees’ concerns.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p id=&quot;Pa2HrW&quot;&gt;&lt;em&gt;&lt;strong&gt;Update March 19th, 4:30PM ET:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;This story has been updated with a statement from Kickstarter.&lt;/em&gt;&lt;/p&gt;



</description>
<pubDate>Tue, 19 Mar 2019 18:04:47 +0000</pubDate>
<dc:creator>tmm</dc:creator>
<og:description>The company’s staff plans to unionize with the Office and Professional Employees International Union.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/lrpTe7SGYrYNu-xFvYFJOyq18YA=/0x292:2040x1360/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/15948469/akrales_190308_3280_0018.0.jpg</og:image>
<og:title>Kickstarter’s staff is unionizing</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2019/3/19/18254995/kickstarter-unionizing-union-representation-inclusivity-transparency-tech-us-crowdfunding</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2019/3/19/18254995/kickstarter-unionizing-union-representation-inclusivity-transparency-tech-us-crowdfunding</dc:identifier>
</item>
<item>
<title>Google unveils Stadia cloud gaming service</title>
<link>https://www.theverge.com/2019/3/19/18271702/google-stadia-cloud-gaming-service-announcement-gdc-2019</link>
<guid isPermaLink="true" >https://www.theverge.com/2019/3/19/18271702/google-stadia-cloud-gaming-service-announcement-gdc-2019</guid>
<description>&lt;p id=&quot;9Z5HlC&quot;&gt;Google is launching its Stadia cloud gaming service at the Game Developers Conference (GDC) in San Francisco. Google CEO Sundar Pichai, who says he plays &lt;em&gt;FIFA 19&lt;/em&gt; “quite a bit,” introduced the Stadia service during a special keynote at GDC this morning. Describing it as a platform for everyone, Pichai talked up Google’s ambitions to stream games to all types of devices. Stadia will stream games from the cloud to the Chrome browser, Chromecast, and Pixel devices, and it will launch at some point in 2019 in the US, Canada, UK, and Europe.&lt;/p&gt;
&lt;p id=&quot;EUOUtz&quot;&gt;Phil Harrison, a former Sony and Microsoft executive, joined Pichai onstage to fully unveil Stadia in &lt;a href=&quot;https://www.polygon.com/2018/1/22/16921214/phil-harrison-google-games&quot;&gt;his role at Google&lt;/a&gt;. Harrison says Google will amplify this game streaming service by using YouTube and the many creators that already create game clips on the service. Google previously tested this service as &lt;a href=&quot;https://www.theverge.com/2018/10/8/17950998/google-project-stream-gaming-assasins-creed-odyssey-first-impression&quot;&gt;Project Stream&lt;/a&gt; in recent months, allowing Chrome users to stream games in their browser. &lt;em&gt;Assassin’s Creed Odyssey&lt;/em&gt; was the first and only game to be tested publicly using Google’s service, and the public tests finished in January.&lt;/p&gt;
&lt;p id=&quot;MEMoNM&quot;&gt;Of course, Google won’t limit Stadia to just one game. Google demonstrated a new feature in YouTube that lets you view a game clip from a creator and then hit “play now” to instantly stream the title. “Stadia offers instant access to play,” says Harrison, without the need to download or install any games. At launch, games will be streamable across laptops, desktops, TVs, tablets, and phones.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/MCF6t-8AfMryUyPENZfjBWnc4Ks=/0x0:1200x708/320x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 320w, https://cdn.vox-cdn.com/thumbor/rDM_oVXiFGnK3b6y3S4Ie_SDIl0=/0x0:1200x708/520x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 520w, https://cdn.vox-cdn.com/thumbor/fQtUDMaup94nVyQIVs8Hz_UCCZw=/0x0:1200x708/720x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 720w, https://cdn.vox-cdn.com/thumbor/jU-i4yQmNccRaQldsoXcA1iDaz4=/0x0:1200x708/920x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 920w, https://cdn.vox-cdn.com/thumbor/NW7M4p59OSKtQd-Tac5VOh3t8oA=/0x0:1200x708/1120x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 1120w, https://cdn.vox-cdn.com/thumbor/OqoPGy8mWMyw2veOUYrtLtOsp_w=/0x0:1200x708/1320x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 1320w, https://cdn.vox-cdn.com/thumbor/GlkI5lS-EjZ1v018zG9A76z0u2k=/0x0:1200x708/1520x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 1520w, https://cdn.vox-cdn.com/thumbor/SPsoSWsrkwVvo9Nt3Nx6MvbGdFc=/0x0:1200x708/1720x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 1720w, https://cdn.vox-cdn.com/thumbor/Sd-g11OWTEDpXJi4GKCw3NkP7UE=/0x0:1200x708/1920x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; data-upload-width=&quot;1200&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/BYdnlsOcwbjtu9Zd49Pz3CtZ1dA=/0x0:1200x708/1200x0/filters:focal(0x0:1200x708):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972618/D2CZTG3VAAAo5sk.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;EouY3m&quot;&gt;&lt;q&gt;Google will leverage YouTube for Stadia&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;Rxwb2i&quot;&gt;Google demonstrated moving gameplay seamlessly from a phone to a tablet and then to a TV, all using Google-powered devices. While existing USB controllers will work on a laptop or PC, Google is also launching a new Stadia Controller that will power the game streaming service. It looks like a cross between an Xbox and PS4 controller, and it will work with the Stadia service by connecting directly through Wi-Fi to link it to a game session in the cloud. This will presumably help with latency and moving a game from one device to another. You can also use a button to capture and share clips straight to YouTube, or use another button to access the Google Assistant.&lt;/p&gt;
&lt;p id=&quot;bWhdSz&quot;&gt;To power all of this cloud streaming, Google is leveraging its global infrastructure of data centers to ensure servers are as close to players around the world as possible. That’s a key part of Stadia, as lower latency is a necessity to stream games effectively across the internet. Google will support up to 4K at 60 fps at launch, and it’s planning to support up to 8K resolutions and 120 fps in the future.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/B51MKOg_soIRZ0hrwPEx3qfkAAM=/0x0:1885x1076/320x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 320w, https://cdn.vox-cdn.com/thumbor/DeFHucJ8ThLwfZ0f7SdNR-nlKXA=/0x0:1885x1076/520x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 520w, https://cdn.vox-cdn.com/thumbor/Pox1S6SvpLs51fwY6Pewx-aXc6E=/0x0:1885x1076/720x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 720w, https://cdn.vox-cdn.com/thumbor/A_87iYGMYl91ZrzeJPf_81qeB10=/0x0:1885x1076/920x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 920w, https://cdn.vox-cdn.com/thumbor/7p-T9_avhY-vQEYhHmeQThDsjVw=/0x0:1885x1076/1120x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 1120w, https://cdn.vox-cdn.com/thumbor/gk_aeezdyazJccCHTcZIlVhU8AE=/0x0:1885x1076/1320x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 1320w, https://cdn.vox-cdn.com/thumbor/AG_JzWTRDVOagw1x2ONCIBUkb9Q=/0x0:1885x1076/1520x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 1520w, https://cdn.vox-cdn.com/thumbor/r_-iLWfcOTF0lTC_maBZXJOwqt4=/0x0:1885x1076/1720x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 1720w, https://cdn.vox-cdn.com/thumbor/GohejaFn8T8n6RwmZ6wJmoSjgaY=/0x0:1885x1076/1920x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; data-upload-width=&quot;1885&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/m3BWxeihtRuaPbeFY-YvyoTVvxI=/0x0:1885x1076/1200x0/filters:focal(0x0:1885x1076):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972678/google_gaming_announce_gdc_12.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;c-float-left&quot;&gt;
&lt;aside id=&quot;MWRXX5&quot;&gt;&lt;q&gt;Stadia has more teraflops of power than an Xbox One X&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;IQIKYs&quot;&gt;Google is partnering with AMD to build a custom GPU for its datacenters. It’s a chip that Google claims will deliver 10.7 teraflops of power, which is more than the 4.2 teraflops of the PS4 Pro and the 6 teraflops of power on the Xbox One X. Each Stadia instance will also be powered by a custom 2.7GHz x86 processor with 16GB of RAM.&lt;/p&gt;
&lt;p id=&quot;SH2x4w&quot;&gt;One of the first games to launch on Google’s Stadia service will be &lt;em&gt;Doom Eternal&lt;/em&gt;, which will support 4K resolution, HDR, and 60 fps game play. &lt;em&gt;Doom Eternal&lt;/em&gt; doesn’t have a firm launch date just yet, but it will also be available on PC, Nintendo Switch, PS4, and Xbox One. Stadia will also embrace full cross-platform play, so developers can enable cross-platform multiplayer and game saves and progression.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/-nOvVKcc4tK0U77LqiqpAHjCFdM=/0x0:1047x575/320x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 320w, https://cdn.vox-cdn.com/thumbor/28S9LkplTBYeTQNM-80PXT1WFsI=/0x0:1047x575/520x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 520w, https://cdn.vox-cdn.com/thumbor/vjjSV036BSM7crw5wCrRUbDv8a0=/0x0:1047x575/720x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 720w, https://cdn.vox-cdn.com/thumbor/S2uAmVZep7e42BmgNNXM2pmzUoQ=/0x0:1047x575/920x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 920w, https://cdn.vox-cdn.com/thumbor/E0gIz931FaXovZi0iwq5o13_tI0=/0x0:1047x575/1120x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 1120w, https://cdn.vox-cdn.com/thumbor/K4xv422yBYRAXv4NMiUWZr9sr1M=/0x0:1047x575/1320x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 1320w, https://cdn.vox-cdn.com/thumbor/pwUcvDqmivCFkJouWjjuZUpcorY=/0x0:1047x575/1520x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 1520w, https://cdn.vox-cdn.com/thumbor/x9Sx5aYAJynmCEx_LrTfdzL0at8=/0x0:1047x575/1720x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 1720w, https://cdn.vox-cdn.com/thumbor/nakHDa4AKofjiH3quVnwDrHvRMw=/0x0:1047x575/1920x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; data-upload-width=&quot;1047&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/tI7Uq7LYa-_H67Qa029X9jPBZGQ=/0x0:1047x575/1200x0/filters:focal(0x0:1047x575):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972790/15VA0IJ.png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;p id=&quot;yR4lPi&quot;&gt;Focusing on developers, Google also unveiled an impressive way for game developers to apply their own design style to titles on Stadia. It’s a machine learning-based style transfer tool that developers can use to simply drop an image into the video frames of games and have it mimic the style throughout. Google is also using something called State Share to let players easily share moments, so you can even share an exact link to a part of a game, changing the way games are typically shared. Q-Games founder Dylan Cuthbert is even building an entire game all around this new State Share feature.&lt;/p&gt;
&lt;p id=&quot;3LTNBz&quot;&gt;YouTube is a giant part of Stadia, and Google appears to be relying on it to push gamers to its cloud service. More than 50 billion hours of gaming content was watched on YouTube during 2018, so Google is letting Stadia users highlight, capture, and share straight to YouTube or even let viewers play alongside creators. A Crowd Play feature of Stadia is designed to facilitate this, and it includes a lobby system to let you match up with YouTube content creators.&lt;/p&gt;
&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/wHyCypwxLPj95SolRiMuxYYypzk=/0x0:1038x576/320x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 320w, https://cdn.vox-cdn.com/thumbor/BC7SJ1_LPtKIlm-jfnFP8ek7_cc=/0x0:1038x576/520x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 520w, https://cdn.vox-cdn.com/thumbor/kYVxEjbeK33WQg-0s1seE_pfDHw=/0x0:1038x576/720x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 720w, https://cdn.vox-cdn.com/thumbor/dKUzV1e1fxX8SxuP9y600dxGorU=/0x0:1038x576/920x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 920w, https://cdn.vox-cdn.com/thumbor/UFGOjr0Oy2fRLTfetkvvjfbLKts=/0x0:1038x576/1120x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 1120w, https://cdn.vox-cdn.com/thumbor/l4FTFpcAYyXRNEEyx-KEzky3IdQ=/0x0:1038x576/1320x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 1320w, https://cdn.vox-cdn.com/thumbor/bWxp-qO1wcZdACYzxTkFtr_2sDQ=/0x0:1038x576/1520x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 1520w, https://cdn.vox-cdn.com/thumbor/tqlPyPpZYXmJ9dYL1JmBsjRzPso=/0x0:1038x576/1720x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 1720w, https://cdn.vox-cdn.com/thumbor/BMRF_iBzFfwZlsDscbAIouhnbwE=/0x0:1038x576/1920x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;&quot; data-upload-width=&quot;1038&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/Hpsi994UUTTbGvAWwF0Q53i_bVk=/0x0:1038x576/1200x0/filters:focal(0x0:1038x576):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/15972780/2Bn6gUz.png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;zSwB8r&quot;&gt;&lt;q&gt;Google launches its own game dev studio&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;Fs1g7O&quot;&gt;Google is even creating its own game studio for Stadia-exclusive titles, Stadia Games and Entertainment. Jade Raymond, who recently joined Google as a VP is leading Google’s push for its own games. Raymond is an industry veteran who has previously worked at Sony, Electronic Arts, and Ubisoft. Google says more than 100 studios already have dev kits for Stadia, and more than 1,000 creatives and engineers are already working on titles that will work on the service.&lt;/p&gt;
&lt;p id=&quot;DA0wHo&quot;&gt;While Google unveiled Stadia today, it had no details on exactly when the service will be available other than 2019. Google didn’t reveal pricing or even how many games the service will have at launch, but is promising more details in the summer.&lt;/p&gt;
&lt;p id=&quot;Hro8Nw&quot;&gt;Google will naturally face competition from a number of rivals that you’d typically associate with games and gaming services. Microsoft is planning its own &lt;a href=&quot;https://www.theverge.com/2018/10/8/17950878/microsoft-xcloud-game-streaming-xbox-games-features&quot;&gt;xCloud game streaming service&lt;/a&gt;, which it &lt;a href=&quot;https://www.theverge.com/2019/3/13/18263405/microsoft-xcloud-game-streaming-demo-video&quot;&gt;demonstrated recently&lt;/a&gt;, with public trials set to start later this year. &lt;a href=&quot;https://www.theverge.com/2019/1/10/18177253/amazon-cloud-gaming-service-rumor-job-posting&quot;&gt;Amazon also appears to be readying a similar service&lt;/a&gt;, and both Nvidia and Sony are already streaming games over the internet. Even Valve is &lt;a href=&quot;https://www.theverge.com/2019/3/14/18265818/valve-steam-link-anywhere-personal-cloud-service-gaming-pc-gdc-2019&quot;&gt;expanding its Steam Link game-streaming feature&lt;/a&gt; to allow you to stream your Steam games from a PC to anywhere through the Steam Link hardware or the Steam Link app.&lt;/p&gt;
</description>
<pubDate>Tue, 19 Mar 2019 17:15:34 +0000</pubDate>
<dc:creator>valgaze</dc:creator>
<og:description>Stadia is here.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/WUGi4wkyfIZ2hbqudMVRk04hrOk=/0x30:1622x879/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/15972607/Screen_Shot_2019_03_19_at_1.12.34_PM.png</og:image>
<og:title>Google unveils Stadia cloud gaming service, launches in 2019</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2019/3/19/18271702/google-stadia-cloud-gaming-service-announcement-gdc-2019</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2019/3/19/18271702/google-stadia-cloud-gaming-service-announcement-gdc-2019</dc:identifier>
</item>
<item>
<title>Google terminated our startup&amp;#039;s developer account – what do we do?</title>
<link>https://www.reddit.com/r/androiddev/comments/b2ztr0/google_terminated_our_startups_developer_account/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/androiddev/comments/b2ztr0/google_terminated_our_startups_developer_account/</guid>
<description>&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;Hey guys! We're in a weird predicament and hoping the community can help.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;About 4 days ago we received a notification that our startup's Google Play developer account has been terminated due to association with a previously terminated account. We dug more and found out that one of the android developers on our team, whom also was responsible for initially opening our company account had their personal Google Play developer account terminated years ago and therefore by association with that developer, our company's developer account was terminated.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;We've found a few other individuals who've posted online with very similar issues and were able to get their accounts back in good standing after getting in touch with the right people at the Play policy team, but after the last few days we've been hard pressed to get in touch with anyone.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;We've reviewed Google's policies a few times since the termination and we are confident the company itself is in no way in violation aside from having someone on our team open the account, who shouldn't of opened the account.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;Now we're also afraid that if we try and open another company developer account and letting a team member in good standing with Google create the account, that new account will also be terminated due to association with our previously terminated company account.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;Does anyone have any experience with a situation like this, or know how exactly to get a proper review? We submitted an appeal and received an automated response just further clarifying that the account was terminated due to association, the &quot;appeal reviewer&quot; (which we presume was just a bot) would not respond after that with any more information.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;We're not sure what to do.. Google won't respond and we're not in violation of any play policies aside from what I've stated.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;The company is &lt;a class=&quot;s14dydj4-27 jmpRgS&quot; href=&quot;https://www.tryshared.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://www.tryshared.com/&lt;/a&gt; by the way.&lt;/p&gt;

&lt;p class=&quot;s14dydj4-10 kiAEUp&quot;&gt;Edit: If anyone at Google is able to do something about this.. For reference, the bundle identifier for the only application under our terminated developer account is &lt;strong class=&quot;s14dydj4-14 gBjHJP&quot;&gt;com.tryshared.app&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 19 Mar 2019 16:55:23 +0000</pubDate>
<dc:creator>braydo25</dc:creator>
<og:title>r/androiddev - Google terminated our startup's developer account?</og:title>
<og:type>website</og:type>
<og:url>https://www.reddit.com/r/androiddev/comments/b2ztr0/google_terminated_our_startups_developer_account/</og:url>
<og:description>422 votes and 134 comments so far on Reddit</og:description>
<og:image>https://external-preview.redd.it/aaBEV7pvuTkbQtyFUDMEJqK_XJyFY3gGtH0kEZFh8yc.jpg?auto=webp&amp;s=cfa885d52787ba6e2549616b00384eddfe4d468e</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/androiddev/comments/b2ztr0/google_terminated_our_startups_developer_account/</dc:identifier>
</item>
<item>
<title>Firefox now automatically blocks autoplaying audio and video</title>
<link>https://techcrunch.com/2019/03/19/firefox-now-automatically-blocks-autoplaying-audio-and-video/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/03/19/firefox-now-automatically-blocks-autoplaying-audio-and-video/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/mozilla&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;mozilla&quot;&gt;Mozilla&lt;/a&gt; today released &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/66.0/releasenotes/&quot;&gt;version 66&lt;/a&gt; of its Firefox browser. It features all of the usual tech updates and bug fixes, but there’s also a clear theme here: reducing online annoyances.&lt;/p&gt;
&lt;p&gt;With this update, Firefox can now automatically block autoplaying audio and video — the scourge of the modern web. The way Mozilla has implemented this is smart enough to recognize when a video is playing with the audio muted and it’ll still let the page quietly play that video. If it’s a news site that insists on bombarding you with the unmuted video of an anchor talking about a semi-related news story, though, it’ll mute it and leave you in peace.&lt;/p&gt;
&lt;p&gt;To play the video on a site where Firefox has blocked the video, you simply click the play button. You can also always whitelist sites with autoplaying and unmuted videos, too.&lt;/p&gt;
&lt;p&gt;Another major annoyance these days is ads that load after the text or other content on a site is already visible. Often, the ad then moves that text around (and occasionally, slow-loading images are to blame here, too). With this update, Firefox is introducing scroll anchoring, which ensures that you’re not going to bounce around on the page as these slow-loading ads load.&lt;/p&gt;
&lt;p&gt;Other updates in this release include the ability to search within multiple tabs, better search in private browsing mode, improved and clearer security warnings and web authentication support for Windows Hello. Firefox 66 also promises an improved extension experience that should make pages load faster by storing extension settings in a single file instead of a series of individual files for every extension.&lt;/p&gt;
&lt;p&gt;You can find the full release notes &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/66.0/releasenotes/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 19 Mar 2019 16:26:48 +0000</pubDate>
<dc:creator>Errorcod3</dc:creator>
<og:title>Firefox now automatically blocks autoplaying audio and video</og:title>
<og:description>Mozilla today released version 66 of its Firefox browser. It features all of the usual tech updates and bug fixes, but there’s also a clear theme here: reducing online annoyances. With this update, Firefox can now automatically block autoplaying audio and video — the scourge of the mode…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/03/image001-2.jpg?w=729</og:image>
<og:url>http://social.techcrunch.com/2019/03/19/firefox-now-automatically-blocks-autoplaying-audio-and-video/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/03/19/firefox-now-automatically-blocks-autoplaying-audio-and-video/</dc:identifier>
</item>
<item>
<title>A new class-action lawsuit takes aim at real estate agents and their 6% fee</title>
<link>https://www.marketwatch.com/story/big-name-lawsuit-could-upend-realtors-and-their-6-fee-2019-03-19</link>
<guid isPermaLink="true" >https://www.marketwatch.com/story/big-name-lawsuit-could-upend-realtors-and-their-6-fee-2019-03-19</guid>
<description>&lt;div class=&quot;article-image-wrap shareable&quot; data-share-text=&quot;The lawyers who took on Big Tobacco are aiming at Realtors and their 6% fee&quot; data-share-modprefix=&quot;mw_image_&quot;&gt;&lt;img class=&quot;article-image MG&quot; src=&quot;https://ei.marketwatch.com/Multimedia/2018/02/20/Photos/MG/MW-GE062_realto_20180220150500_MG.jpg?uuid=54e6d4f8-1679-11e8-8b71-9c8e992d421e&quot; alt=&quot;&quot;/&gt;&lt;cite&gt;Bloomberg News/Landov&lt;/cite&gt; &lt;/div&gt;
Prospective home buyers view a kitchen while touring a house for sale.
&lt;p&gt;A &lt;a href=&quot;https://www.hbsslaw.com/cases/real-estate-broker-commissions-antitrust&quot; target=&quot;_new&quot; class=&quot;icon&quot;&gt;new class-action lawsuit&lt;/a&gt; takes aim at real estate agents and the tools they use to do business, and housing industry watchers say it could revolutionize the way Americans buy and sell the biggest asset they’ll ever own.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.cohenmilstein.com/sites/default/files/Moehrl%20v%20National%20Assoc%20of%20Realtors%20Complaint%2003062019.pdf&quot; target=&quot;_new&quot; class=&quot;icon&quot;&gt;suit was filed in Chicago&lt;/a&gt; on behalf of anyone who sold a home through one of 20 of the largest listing services in the country over the past five years. It charges that the mighty Washington-based lobby National Association of Realtors, as well as the four largest national real estate brokerages, and the Multiple Listing Services they use, have conspired to require anyone selling a home to pay the commission of the broker representing their buyer “at an inflated amount,” in violation of federal antitrust law.&lt;/p&gt;
&lt;p&gt;Homeowners who are ready to sell their properties usually hire a real-estate agent to represent them by staging the home, photographing it, adding it to the MLS, marketing it, and showing it to prospective buyers. Sellers agree to pay that person a commission on the selling price of the home. That commission has traditionally been known as the “6%,” but it’s a little more complicated than that.&lt;/p&gt;
&lt;p&gt;Sellers can really only negotiate with the agent they’ve hired, while agents representing buyers are generally assured of a standard 3% commission. That means that a seller’s agent who’s willing to negotiate, or one that works for a discount brokerage like Redfin &lt;span class=&quot;quote up bgQuote&quot; data-channel=&quot;/quotes/zigman/94510795/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNASStockRDFN&quot; href=&quot;https://www.marketwatch.com/investing/stock/rdfn&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;RDFN, &lt;span class=&quot;bgPercentChange&quot;&gt;+3.25%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  , will be paid less than a buyer’s agent.&lt;/p&gt;
&lt;p&gt;Buyers can choose to be represented by an agent, or to go without one – but in any case, all commission money for both sides of the deal is always paid by the seller, thanks to a 1996 NAR rule known as the “Buyer Broker Commission Rule.”&lt;/p&gt;
&lt;p&gt;In order to list a property on one of the many regional databases known as Multiple Listing Services, agents must abide by the Buyer Broker Rule. Listing on the MLS is essential for making a sale, and most MLSs are controlled by local NAR associations.&lt;/p&gt;
&lt;p&gt;“The conspiracy has saddled home sellers with a cost that would be borne by the buyer in a competitive market,” the lawsuit says. “Moreover, because most buyer brokers will not show homes to their clients where the seller is offering a lower buyer broker commission, or will show homes with higher commission offers first, sellers are incentivized when making the required blanket, non-negotiable offer to procure the buyer brokers’ cooperation by offering a high commission.”&lt;/p&gt;
&lt;p&gt;As MarketWatch has previously reported, many housing observers call Realtors a “cartel” for the way they purposely steer clients to transactions in which traditional ways of doing business are observed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See:&lt;/strong&gt; &lt;a href=&quot;https://www.marketwatch.com/story/meet-the-tech-savvy-upstarts-who-think-they-can-finally-give-realtors-a-run-for-their-money-2018-08-16&quot; class=&quot;icon none&quot;&gt;Meet the tech-savvy upstarts who think they can finally give Realtors a run for their money&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rob Hahn is founder and managing partner of 7DS Associates, a real estate consultancy. In a blog posted shortly after the lawsuit was filed, Hahn called it a potential “&lt;a href=&quot;https://www.inman.com/2019/03/08/what-the-bombshell-buyer-side-lawsuit-means-for-realtors/amp/&quot; target=&quot;_new&quot; class=&quot;icon&quot;&gt;nuclear bomb on the industry&lt;/a&gt;.” And in an interview with MarketWatch, he said that he’s taking it “very seriously.”&lt;/p&gt;
&lt;p&gt;In large part, that’s because of the heft of the law firms behind the suit. Both &lt;a href=&quot;https://www.cohenmilstein.com/about-us/#awards&quot; target=&quot;_new&quot; class=&quot;icon&quot;&gt;Cohen Milstein Sellers &amp;amp; Toll&lt;/a&gt;, and &lt;a href=&quot;https://www.hbsslaw.com/success-record/landmark-cases&quot; target=&quot;_new&quot; class=&quot;icon&quot;&gt;Hagens Berman Sobol Shapiro&lt;/a&gt; have a long history of prevailing over weighty entities like Volkswagen, for its emissions scandal, Apple, for its e-book collusion, and Exxon , after the Valdez spill.&lt;/p&gt;
&lt;p&gt;In response to a request for comment, NAR said, “The complaint is baseless and contains an abundance of false claims. The U.S. Courts have routinely found that Multiple Listing Services are pro-competitive and benefit consumers by creating great efficiencies in the home-buying and selling process. NAR looks forward to obtaining a similar precedent regarding this filing.”&lt;/p&gt;
&lt;p&gt;Still, as Hahn put it, past lawsuits have mostly been filed by what he calls “ambulance-chasers,” not the firms behind some of the biggest civil settlements in American history.&lt;/p&gt;
&lt;p&gt;That view is shared by Cohen Milstein partner Daniel Small, who called the way Realtors do business “a longstanding problem.” What’s different now, Small told MarketWatch, is that deep-pocketed law firms had done a “substantial investigation” that convinced them that there was merit to the case.&lt;/p&gt;
&lt;p&gt;Small declined to elaborate on what had prompted the investigation in the first place. It’s worth noting, however, that the suit was filed roughly four months after the expiration of a Department of Justice consent decree against the National Association of Realtors. That settlement was struck in 2008 after the federal government spent several years unsuccessfully trying to rein in what it called anti-competitive behavior from NAR, which felt under attack from internet upstarts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Read:&lt;/strong&gt; &lt;a href=&quot;https://www.marketwatch.com/story/realtors-will-soon-be-free-of-10-year-old-justice-department-decree-so-what-happens-to-housing-now-2018-02-06&quot; class=&quot;icon none&quot;&gt;Realtors will soon be free of 10-year-old Justice Department decree — so what happens to housing now?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hahn thinks it’s ironic that an innovation that tried to protect buyers, by providing them with representation in a complex and deeply emotional transaction, has soured the market so badly. Many housing watchers have long argued that real estate services should be paid for a la carte, or in a sliding-scale fee structure, rather than a flat commission, whether that’s 6% or 1%. But, Hahn said, “there’s no chance whatsoever that the industry goes that way voluntarily.”&lt;/p&gt;
&lt;p&gt;What’s more likely, he thinks, is that the American system will come to resemble real estate markets in Australia or England, where sellers and buyers each pay their own broker – or don’t. After all, buyers are usually “cash-strapped,” Hahn noted: saving every nickel for a down payment, closing costs and moving expenses. While the entrenched interests in the American real estate industry will argue that’s not consumer-friendly, Hahn says he’s “never seen a study that says buyers get screwed” without representation.&lt;/p&gt;
&lt;p&gt;A former lawyer himself, Hahn isn’t sure how to handicap this case. But if it prevails, he thinks enormous changes are in store for the industry. The ranks of buyers’ brokers will likely be decimated, and the infrastructure behind the MLSs and the local associations will wither away too.&lt;/p&gt;
&lt;p&gt;A spokesperson for Realogy &lt;span class=&quot;quote down bgQuote&quot; data-channel=&quot;/quotes/zigman/12214823/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNYSStockRLGY&quot; href=&quot;https://www.marketwatch.com/investing/stock/rlgy&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;RLGY, &lt;span class=&quot;bgPercentChange&quot;&gt;-1.02%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;   said, “We believe this case has no merit and will not be commenting further.”&lt;/p&gt;
&lt;p&gt;A spokesperson for Keller Williams said, “It’s not our policy to comment on pending litigation.” A spokesperson for RE/MAX Holdings &lt;span class=&quot;quote down bgQuote&quot; data-channel=&quot;/quotes/zigman/20887177/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNYSStockRMAX&quot; href=&quot;https://www.marketwatch.com/investing/stock/rmax&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;RMAX, &lt;span class=&quot;bgPercentChange&quot;&gt;-2.20%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;  declined to comment, and a request for comment by Berkshire Hathaway-held &lt;span class=&quot;quote down bgQuote&quot; data-channel=&quot;/quotes/zigman/583979/composite&quot; data-bgformat=&quot;&quot;&gt;&lt;a class=&quot;qt-chip trackable&quot; data-fancyid=&quot;XNYSStockBRKB&quot; href=&quot;https://www.marketwatch.com/investing/stock/brk.b&quot; data-track-mod=&quot;MW_story_quote&quot;&gt;BRK.B, &lt;span class=&quot;bgPercentChange&quot;&gt;-0.74%&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;   HomeServices of America, Inc. was not returned.&lt;/p&gt;
&lt;p&gt;“This is an important case for many reasons,” Daniel Small said. “Among them is that this is the biggest transactions of most peoples’ lives. There is a lot at stake.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related:&lt;/strong&gt; &lt;a href=&quot;https://www.marketwatch.com/story/so-remarkably-inefficient-venture-capital-takes-on-the-housing-market-2018-06-06&quot; class=&quot;icon none&quot;&gt;‘So remarkably inefficient’: Venture capital takes on the housing market&lt;/a&gt;&lt;/p&gt;



</description>
<pubDate>Tue, 19 Mar 2019 15:47:29 +0000</pubDate>
<dc:creator>mudil</dc:creator>
<og:description>A new class-action lawsuit takes aim at real estate agents and the tools they use to do business, and housing industry watchers say it could revolutionize...</og:description>
<og:type>article</og:type>
<og:url>https://www.marketwatch.com/story/big-name-lawsuit-could-upend-realtors-and-their-6-fee-2019-03-19</og:url>
<og:title>The lawyers who took on Big Tobacco are aiming at Realtors and their 6% fee</og:title>
<og:image>http://s.marketwatch.com/public/resources/MWimages/MW-GE062_realto_ZG_20180220150500.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.marketwatch.com/story/big-name-lawsuit-could-upend-realtors-and-their-6-fee-2019-03-19</dc:identifier>
</item>
<item>
<title>Open Source Doesn’t Make Money Because It Isn’t Designed to Make Money</title>
<link>http://www.ianbicking.org/blog/2019/03/open-source-doesnt-make-money-by-design.html</link>
<guid isPermaLink="true" >http://www.ianbicking.org/blog/2019/03/open-source-doesnt-make-money-by-design.html</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Or: &lt;em&gt;The Best Way To Do Something Is To At Least Try&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We all know the story: you can’t make money on open source. Is it really true?&lt;/p&gt;
&lt;p&gt;I’m thinking about this now because Mozilla would like to diversify its revenue in the next few years, and one constraint we have is that everything we do is open source.&lt;/p&gt;
&lt;p&gt;There are dozens (hundreds?) of successful open source projects that have tried to become even just modest commercial enterprises, some very seriously. Results aren’t great.&lt;/p&gt;
&lt;p&gt;I myself am trying to pitch a commercial endeavor in Mozilla right now (if writing up plans and sending them into the ether can qualify as “pitching”), and this question often comes up in feedback: can we sell something that is open source?&lt;/p&gt;
&lt;p&gt;I have no evidence that we can (or can’t), but I will make this assertion: it’s hard to sell something that wasn’t designed to be sold.&lt;/p&gt;
&lt;p&gt;We treat open source like it’s a poison pill for a commercial product. And yes, with an open source license it’s harder to force someone to pay for a product, though many successful businesses exist without &lt;em&gt;forcing&lt;/em&gt; anyone.&lt;/p&gt;
&lt;p&gt;I see an implicit assumption that makes it harder to think about this: the idea that if something is useful, it should be profitable. It’s an unspoken and morally-infused expectation, a kind of Just World hypothesis: if something has utility, if it helps people, if it’s something the world needs, if it empowers other people, then there should be a revenue opportunity. It should be possible for the thing to be your day job, to make money, to see some remuneration for your successful effort in creating or doing this thing.&lt;/p&gt;
&lt;p&gt;That’s what we think the world &lt;em&gt;should&lt;/em&gt; be like, but we all know it isn’t. You can’t make a living making music. Or art. You can’t even make a living taking care of children. I think this underlies many of this moment’s critiques of capitalism: there’s too many things that are important, even needed, or that fulfill us more than any profitable item, and yet are economically unsustainable.&lt;/p&gt;
&lt;p&gt;I won’t try to fix that in this blog post, only note: not all good things make money.&lt;/p&gt;
&lt;p&gt;But we know there is money in software. Lots of money! Is the money in secrets? If OpenSSL was secret, could it make money? If it had a licensing paywall, could it make money? Seems unlikely. The license isn’t holding it back. It’s just not shaped like something that makes money. Solving important problems isn’t enough.&lt;/p&gt;
&lt;p&gt;So what can you get paid to do?&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;People will pay a little for apps; not a lot, but a bit. Scaling up requires marketing and capital, which open source projects almost never have (and I doubt many open source projects would know what to do with capital if they had it).&lt;/li&gt;
&lt;li&gt;There’s always money in ads. Sadly. This could potentially offend someone enough to actually repackage your open source software with ads removed. As a form of &lt;a href=&quot;https://en.wikipedia.org/wiki/Price_discrimination&quot;&gt;price discrimination&lt;/a&gt; (e.g., paid ad removal) I think you could avoid defection.&lt;/li&gt;
&lt;li&gt;Fully-hosted services: &lt;a href=&quot;https://automattic.com/&quot;&gt;Automattic’s&lt;/a&gt; wordpress.com is a good example here. Is &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt; doing &lt;span class=&quot;caps&quot;&gt;OK&lt;/span&gt;? These are complete solutions: you don’t just get software, you get a website.&lt;/li&gt;
&lt;li&gt;People will pay if you ensure they get a personalized solution. I.e., consulting. Applied to software you get &lt;a href=&quot;https://www.joelonsoftware.com/2002/05/06/five-worlds/&quot;&gt;consultingware&lt;/a&gt;. While often maligned, many real businesses are built on this. I think Drupal is in this category.&lt;/li&gt;
&lt;li&gt;People will pay you for your dedicated and ongoing attention. In other words: a day job as an employee. It feels unfair to put this option on the list, but it’s such a natural progression from consultingware, and such a dominant pattern in open source that I think it deserves acknowledgement.&lt;/li&gt;
&lt;li&gt;Anything paired with a physical device. People will judge the value based on the hardware and software experience together.&lt;/li&gt;
&lt;li&gt;I’m not sure if Firefox makes money (indirectly) from ads, or as compensation for maintaining monopoly positions.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I’m sure I’m missing some interesting ideas from that list.&lt;/p&gt;
&lt;p&gt;But if you have a business concept, and you think it might work, what does open source even have to do with it? Don’t we learn: focus on your business! On your customer! Software licensing seems like a distraction, even &lt;em&gt;software&lt;/em&gt; is a questionable thing to focus on, separate from the business. Maybe this is why you can’t make money with open source: it’s a distraction. The question isn’t open-source-vs-proprietary, but open-source-vs-business-focused.&lt;/p&gt;
&lt;p&gt;Another lens might be: who are you selling to? Classical scratch-your-own-itch open source software is built by programmers &lt;em&gt;for&lt;/em&gt; programmers. And it is wildly successful, but it’s selling to people who aren’t willing to pay. They want to take the software and turn it around into greater personal productivity (which turns out to be a smart move, given the rise in programmer wages). Can we sell open source to other people? Can anyone else &lt;em&gt;do&lt;/em&gt; anything with source code?&lt;/p&gt;
&lt;p&gt;And so I remain pessimistic that open source can find commercial success. But also frustrated: so much software is open source &lt;em&gt;except&lt;/em&gt; any commercial product. This is where the Free Software mission has faltered despite so many successes: software that people actually touch isn’t free or open. That’s a shame.&lt;/p&gt;
&lt;blockquote readability=&quot;3.3606557377049&quot;&gt;
&lt;p&gt;You may also wish to read &lt;a href=&quot;https://news.ycombinator.com/item?id=19431444&quot;&gt;Hacker News Comments&lt;/a&gt; on this post.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
<pubDate>Tue, 19 Mar 2019 15:04:40 +0000</pubDate>
<dc:creator>collinmanderson</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.ianbicking.org/blog/2019/03/open-source-doesnt-make-money-by-design.html</dc:identifier>
</item>
<item>
<title>Where There Is No Doctor: A Village Health Care Handbook</title>
<link>https://store.hesperian.org/prod/Where_There_Is_No_Doctor.html</link>
<guid isPermaLink="true" >https://store.hesperian.org/prod/Where_There_Is_No_Doctor.html</guid>
<description>&lt;h3 class=&quot;fancy-quote&quot;&gt;“Health care is not only everyone’s right, but everyone’s responsibility.”&lt;/h3&gt;
— &lt;em&gt;Where There Is No Doctor&lt;/em&gt;&lt;p&gt;Considered by the World Health Organization to be the most widely-used health care manual in the world, this classic title is for health workers, clinicians, health educators, midwives, community leaders, and others involved in primary health care delivery and health promotion around the world. This accessible, richly illustrated, and practical guide covers a wide range of health issues from common illnesses to nutrition, the health of children to health and care of the elderly, and from family planning and childbirth to serious illnesses like tuberculosis. Throughout there is an emphasis on addressing the underlying causes of poor health and a focus on cleanliness, healthy diet, vaccinations, and an appropriate, cautious use of medication, including an examination of helpful and harmful home remedies.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Where There Is No Doctor&lt;/em&gt; equips readers to protect and care for their own health and that of their families and their communities, and helps identify which problems need the attention of an experienced health worker.&lt;/p&gt;&lt;p&gt;This newly revised edition includes current medication information such as updates on antibiotics, antiretroviral therapy (ART) and HIV prevention in babies, and new treatment of malaria for pregnant women. It expands further on diabetes, family planning, and hormonal contraceptives, and provides updated treatments for blood flukes, shigella infection, genital herpes, pneumonia, meningitis, diphtheria and other severe infections, and much more.&lt;/p&gt;&lt;h3&gt;View Sample Pages&lt;/h3&gt;
&lt;a href=&quot;http://hesperian.org/wp-content/uploads/pdf/en_wtnd_2017/en_wtnd_2017_fm.pdf&quot;&gt;Table of Contents (PDF)&lt;/a&gt;&lt;p&gt;&lt;a href=&quot;http://hesperian.org/wp-content/uploads/pdf/en_wtnd_2017/en_wtnd_2017_03.pdf&amp;quot;&quot;&gt;Chapter 3: How to Examine a Sick Person (PDF)&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Praise for &lt;em&gt;Where There Is No Doctor&lt;/em&gt;&lt;/h3&gt;
“&lt;em&gt;Where There Is No Doctor&lt;/em&gt; is an indispensable resource…This book has been, quite literally, a lifesaver for the poor – even where there is a doctor.”&lt;br/&gt;— &lt;em&gt;Paul Farmer, Harvard Medical School; Co-Founder, Partners in Health&lt;/em&gt;&lt;p&gt;“Home health care manuals are a dime a dozen, but this in is in a league by itself…This amazing manual successfully brings together modern concepts of public health and personal health care into a usable and understandable format for the Third World villager. If you are a physician, dentist, or nurse planning to volunteer on a medical mercy mission, review this book ahead of time and take it with you.”&lt;br/&gt;— &lt;em&gt;Annals of Internal Medicine, Vol. 125, No. 12&lt;/em&gt;&lt;/p&gt;&lt;p&gt;“I’ll never forget the day when I came home from school, and found my host mother weeping because she had found out that she was pregnant again with her 9th child. I went straight to my copy of &lt;em&gt;Where There Is No Doctor&lt;/em&gt;, and I read the sections on prenatal care, safe labor and delivery, postnatal care, and nutrition. It was on the basis of the book that she agreed to go with me and deliver her baby at a health center. Within moments of giving birth, she went into postpartum hemorrhage, and she would have died if she hadn’t been in the presence of a trained provider. It was that book that taught me that I needed to help her to get to a health center - and her life was absolutely saved by that action.”&lt;br/&gt;— &lt;em&gt;Peace Corps Director Carrie Hessler-Radelet&lt;/em&gt;, &lt;em&gt;Returned Peace Corps Volunteer, Samoa&lt;/em&gt;&lt;/p&gt;&lt;p&gt;“Your book &lt;em&gt;Where There Is No Doctor&lt;/em&gt; is our ‘bible’ of health education and is the first tool with which we equip organizations new to our program. The full body of Hesperian publications is our encyclopedia, and our experience has shown that once we have your publications we need look no further for health education. Even if we did look, we wouldn’t find anything. There nothing out there like it!”&lt;br/&gt;— &lt;em&gt;Ellen Vor der Bruegge, former Vice President of Innovations, Freedom from Hunger&lt;/em&gt;&lt;/p&gt;&lt;p&gt;“I consider &lt;em&gt;Where There Is No Doctor&lt;/em&gt; my health bible. I carry it with me on every trip I take, and refer to it often. The information provided in this book is simple, straightforward, and easy to read. I would highly recommend that any person planning to serve overseas have a personal copy for reference.”&lt;br/&gt;— &lt;em&gt;Anita Good, Mennonite Central Committee, Honduras&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;</description>
<pubDate>Tue, 19 Mar 2019 14:19:18 +0000</pubDate>
<dc:creator>homarp</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://store.hesperian.org/prod/Where_There_Is_No_Doctor.html</dc:identifier>
</item>
<item>
<title>Firefox 66.0 Aims to Reduce Online Annoyances</title>
<link>https://blog.mozilla.org/blog/2019/03/19/todays-firefox-aims-to-reduce-your-online-annoyances/</link>
<guid isPermaLink="true" >https://blog.mozilla.org/blog/2019/03/19/todays-firefox-aims-to-reduce-your-online-annoyances/</guid>
<description>&lt;p&gt;Almost a hundred years ago, John Maynard Keynes suggested that the industrial revolution would effectively end work for humans within a couple of generations, and our biggest challenge would be figuring what to do with that time. That definitely hasn’t happened, and we always seem to have lots to do, much of it online. When you’re on the web, you’re trying to get stuff done, and therefore online annoyances are just annoyances. Whether it’s autoplaying videos, page jumps or finding a topic within all your multiple tabs, Firefox can help. Today’s Firefox release minimizes those online inconveniences, and puts you back in control.&lt;/p&gt;
&lt;h2 id=&quot;block-autoplay&quot;&gt;Block autoplaying content by default&lt;/h2&gt;
&lt;p&gt;Ever open a new page and all of a sudden get bombarded with noise? Well, worry no more. Starting next week, we will be rolling out the peace that silence brings with our latest feature, block autoplay. Here’s how to use block autoplay:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Scenario #1 – For anyone who wants peace and quiet on the web&lt;/em&gt;&lt;/strong&gt;:  Go to a site that plays videos or audio, it could be a news site or site known for hosting movies and television shows, the Block Autoplay feature will stop the audio and video from automatically playing. If you want to view the video, simply click on the play button to watch it.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There will be instances where there are some sites, like social media, that automatically mute the sound but will continue to play the video. In this case, the new Block Autoplay Feature will not stop the video from playing.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Scenario #2 – For the binge-watcher&lt;/em&gt;&lt;/strong&gt;: If your weekend plans involve catching up on your favorite TV series, you’ll want to make it interruption-free. To play the videos continuously, hit play and all subsequent videos will play automatically, just as the site intended. This will apply to all streaming sites including Netflix, Hulu and YouTube. To continue to autoplay from the first video, you should add those sites to your permissions list.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To enable autoplay on your favorite websites, add them to your permissions list by visiting the control center — which can be found by clicking the lowercase “i” with a circle in the address bar. From there go to Permissions and select “allow” in the drop down to automatically play media with sound.&lt;/p&gt;
&lt;div id=&quot;attachment_12069&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;img class=&quot;size-full wp-image-12069&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/wp-content/uploads/2019/03/Autoplay-Screenshot.png&quot; alt=&quot;&quot; width=&quot;743&quot; height=&quot;745&quot; srcset=&quot;https://blog.mozilla.org/wp-content/uploads/2019/03/Autoplay-Screenshot.png 743w, https://blog.mozilla.org/wp-content/uploads/2019/03/Autoplay-Screenshot-150x150.png 150w, https://blog.mozilla.org/wp-content/uploads/2019/03/Autoplay-Screenshot-300x301.png 300w, https://blog.mozilla.org/wp-content/uploads/2019/03/Autoplay-Screenshot-600x602.png 600w&quot; sizes=&quot;(max-width: 743px) 100vw, 743px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;From Permissions, you can choose to allow or block&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;No more annoying page jumps with smoother scrolling&lt;/h2&gt;
&lt;p&gt;Do you ever find yourself immersed in an online article, then all of a sudden an image or ad loads from the top of the page and you lose your place. Images or ads load slower than the written content on a page, and without scroll anchoring in place, you’re left bouncing around the page. Today’s release features scroll anchoring. Now, the page remembers where you are so that you aren’t interrupted by slow loading images or ads.&lt;/p&gt;
&lt;h2&gt;Search made easier and faster&lt;/h2&gt;
&lt;p&gt;Search is one of the most common activities that people do whenever they go online, so we are always looking for ways to streamline that experience. Today, we’re improving the search experience to make it faster, easier and more convenient by enabling:&lt;/p&gt;
&lt;ul&gt;&lt;li id=&quot;search-tabs&quot;&gt;&lt;em&gt;&lt;strong&gt;Searching within Multiple Tabs&lt;/strong&gt;&lt;/em&gt; – Did you know that if you enter a ‘%’ in your Awesome Bar, you can search the tabs on your computer? If you have more than one device on Firefox Sync, you can search the tabs on your other devices as well. Now you can search from the tab overflow menu, which appears when you have a large number of tabs open in a window. When this happens, you’ll see on the right side of the plus sign (where you typically open a new tab) a down arrow. This is called the tab overflow menu. Simply click on it to find the new box for searching your tabs.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Searching in Private Browsing&lt;/em&gt;&lt;/strong&gt; – Sometimes you’d prefer your search history to not be saved, like those times when you’re planning a surprise party or gift. Now, when you open a new tab in Private Browsing, you’ll see a search bar with your default search engine – Google, Bing, Amazon.com, DuckDuckGo, eBay, Twitter or Wikipedia. You can set your default search engine when you go to Preferences, Search, then Default Search Engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;strong&gt;Additional features in today’s Firefox release include:&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Keeping you safe with easy-to-understand security warnings&lt;/em&gt;&lt;/strong&gt; – Whenever you visit a site, it’s our job to make sure the site is safe. We review a security certificate, a proof of their identity, before letting you visit the site. If something isn’t right, you’ll get a security warning. We’ve updated these warnings to be simple and straightforward on why the site might not be safe.To read more about how we created these warnings, visit &lt;a href=&quot;https://blog.mozilla.org/ux/2019/03/designing-better-security-warnings/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Web Authentication support for Windows Hello&lt;/em&gt;&lt;/strong&gt; –  For the security-minded early adopters, we’re providing biometric support for Web Authentication using Windows Hello on Windows 10. With the upcoming release for Windows 10, users will be able to sign in to compatible websites using fingerprint or facial recognition, a PIN, or a security key. To learn more, visit our &lt;a href=&quot;https://blog.mozilla.org/security/2019/03/19/passwordless-web-authentication-support-via-windows-hello&quot;&gt;Security blog&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Improved experience for extension users&lt;/em&gt;&lt;/strong&gt; – Previously, extensions stored their settings in individual files (commonly referred to as a JSON file) which took some time to load a page. We made changes so that the extensions now store their settings in a Firefox database. This makes it faster to get you to the sites you want to visit.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For the complete list of what’s new or what we’ve changed, you can review today’s full &lt;a href=&quot;https://www.mozilla.org/firefox/66.0/releasenotes/&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out and download the latest version of Firefox Quantum, available &lt;a href=&quot;http://mozilla.org/firefox/new&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;img class=&quot;alignleft&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/berlin/files/2017/10/firefox-logo.png&quot; width=&quot;150&quot; height=&quot;155&quot; align=&quot;left&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Get the latest Firefox&lt;/h2&gt;
&lt;p&gt;Stop audio and video content from automatically playing, and say goodbye to jumpy pages, interrupted by ad and image loading, with smoother scrolling.&lt;/p&gt;
&lt;p&gt;Firefox is made by Mozilla, the not-for-profit champions of a healthy internet.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;button button-product&quot; href=&quot;https://www.mozilla.org/firefox/new/?utm_source=blog.mozilla.org&amp;amp;utm_campaign=content-block&amp;amp;utm_medium=referral&quot;&gt;Download Firefox&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 19 Mar 2019 13:41:52 +0000</pubDate>
<dc:creator>sahin-boydas</dc:creator>
<og:url>https://blog.mozilla.org/blog/2019/03/19/todays-firefox-aims-to-reduce-your-online-annoyances</og:url>
<og:title>Today’s Firefox Aims to Reduce Your Online Annoyances – The Mozilla Blog</og:title>
<og:description>Whether it’s autoplaying videos, page jumps or finding a topic within all your multiple tabs, Firefox can help. Today’s Firefox release minimizes those online inconveniences, and puts you back in control.</og:description>
<og:image>https://blog.mozilla.org/wp-content/uploads/2019/03/Fx_66_Annoyances.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.mozilla.org/blog/2019/03/19/todays-firefox-aims-to-reduce-your-online-annoyances/</dc:identifier>
</item>
<item>
<title>Implementing a NES Emulator in Rust</title>
<link>http://www.michaelburge.us/2019/03/18/nes-design.html</link>
<guid isPermaLink="true" >http://www.michaelburge.us/2019/03/18/nes-design.html</guid>
<description>&lt;p&gt;Recently, I made an &lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator&quot;&gt;emulator&lt;/a&gt; for the &lt;strong&gt;Nintendo Entertainment Console&lt;/strong&gt;(NES) - a game console first released in 1983.&lt;/p&gt;
&lt;p&gt;In this article, I’ll talk about how I used &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; to develop the emulator. I’ll cover questions like:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What features does the emulator support? What games can it play?&lt;/li&gt;
&lt;li&gt;How did I approach the problem of emulating the NES?&lt;/li&gt;
&lt;li&gt;Did Rust’s type system or borrow checker interfere? Were there performance issues?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Table of Contents:&lt;/p&gt;
&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;
&lt;p&gt;Super Mario Bros is beatable on my emulator:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/PiHsOFmj8ts&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Runs at a stable 60 FPS(can go up to 430 FPS in “headless” mode)&lt;/li&gt;
&lt;li&gt;Use an Xbox 360 controller for game input&lt;/li&gt;
&lt;li&gt;Savestates allow you to save at any time. Impress your friends with flawless Goomba-stomping&lt;/li&gt;
&lt;li&gt;Video recording works with savestates to remember a single chain of controller inputs.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Games tested:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Donkey Kong&lt;/li&gt;
&lt;li&gt;Super Mario Bros&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are a few remaining tasks that would make it more usable:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Support for more &lt;a href=&quot;https://wiki.nesdev.com/w/index.php/Mapper&quot;&gt;mappers&lt;/a&gt; will allow it to play more games&lt;/li&gt;
&lt;li&gt;The keyboard should be usable as an input device&lt;/li&gt;
&lt;li&gt;The audio sounds different, though I don’t know the words to describe the problem&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Rust seems like it was a fine choice for this project. Using features like iterators and traits generally didn’t slow down the program(though see below for one exception). Since an NES is a fixed hardware device, no dynamic allocation&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:3&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; should be necessary and Rust makes it easy to reason about already-allocated memory with its ownership model.&lt;/p&gt;
&lt;p&gt;People frequently want to run emulators on &lt;a href=&quot;https://arstechnica.com/gaming/2018/07/nintendo-hid-a-load-your-own-nes-emulator-inside-a-gamecube-classic/&quot;&gt;strange embedded systems&lt;/a&gt;. C is probably still a better choice for those cases: It’s more difficult to find someone who can implement a Rust compiler than a C compiler.&lt;/p&gt;
&lt;p&gt;But Rust seems usable in any project where C++ is a viable language.&lt;/p&gt;
&lt;h2 id=&quot;emulator&quot;&gt;Emulator&lt;/h2&gt;
&lt;p&gt;I emulated the NES mostly by emulating each individual component separately. These include:&lt;/p&gt;
&lt;p&gt;These components are either &lt;strong&gt;Clocked&lt;/strong&gt; or are mapped to one of two &lt;strong&gt;Address Spaces&lt;/strong&gt;. I define each component as a &lt;a href=&quot;https://doc.rust-lang.org/rust-by-example/custom_types/structs.html&quot;&gt;C Struct&lt;/a&gt;, and implement one of two &lt;a href=&quot;https://doc.rust-lang.org/rust-by-example/trait.html&quot;&gt;Traits&lt;/a&gt; to specify how it interacts with other components.&lt;/p&gt;
&lt;p&gt;For video/audio/controller IO with the host OS, I used the &lt;a href=&quot;https://github.com/Rust-SDL2/rust-sdl2&quot;&gt;SDL&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Here is a table with all structures in my program. They generally correspond to actual hardware components like RAM or internal timers.&lt;/p&gt;
&lt;div class=&quot;spoiler&quot;&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Structure Name&lt;/th&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;th&gt;Clocked?&lt;/th&gt;
&lt;th&gt;Address Space?&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/nes.rs#L27&quot;&gt;Nes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Top-level hardware component. Has all others as members&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/c6502.rs#L27&quot;&gt;C6502&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;The CPU&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/ppu.rs#L44&quot;&gt;Ppu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Produces a 256x240 pixel display&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/ppu.rs#L163&quot;&gt;PpuRegisters&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Hides some tricky internal PPU state&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/ppu.rs#L534&quot;&gt;PaletteControl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Stores which 13 colors have been chosen of 64 possible&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/ppu.rs#L452&quot;&gt;CpuPpuInterconnect&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Maps certain PPU registers to CPU address space&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/ppu.rs#L419&quot;&gt;Sprite&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Represents a 4-byte entry in the OAM table&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L116&quot;&gt;Apu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Generates audio samples&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L61&quot;&gt;Frame Counter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Generates a clock signal every quarter or half frame that other audio components react to.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L273&quot;&gt;Length Counter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Silences an audio channel after a certain number of clock cycles.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L322&quot;&gt;Linear Counter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Silences an audio channel according to a timer. Has slightly different timing than the length counter&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L371&quot;&gt;Triangle&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Audio channel for a triangle wave&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L451&quot;&gt;Sweep&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Dynamically changes the pitch of an audio channel&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L542&quot;&gt;Envelope&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Dynamically changes the volume of an audio channel&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L603&quot;&gt;Pulse&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Audio channel for a pulse/square wave&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L708&quot;&gt;Noise&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Audio channel for pseudo-random noise&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/apu.rs#L783&quot;&gt;Dmc&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;Audio channel for premade audio samples&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/mapper.rs#L36&quot;&gt;Ram&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;A fixed-size block of readable and writable memory&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/mapper.rs#L82&quot;&gt;Rom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;A fixed-size block of read-only memory&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/mapper.rs#L112&quot;&gt;MirroredAddressSpace&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Makes another &lt;code class=&quot;highlighter-rouge&quot;&gt;AddressSpace&lt;/code&gt; appear in multiple regions. See &lt;a href=&quot;https://wiki.nesdev.com/w/index.php/Mirroring#Memory_Mirroring&quot;&gt;Memory Mirroring&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/mapper.rs#L164&quot;&gt;NullAddressSpace&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Represents unmapped address space. Returns 0 when read, and does nothing on write.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/mapper.rs#L214&quot;&gt;Mapper&lt;/a&gt;&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Splits the address space into regions, which are assigned to other &lt;code class=&quot;highlighter-rouge&quot;&gt;AddressSpace&lt;/code&gt; types&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/joystick.rs#L14&quot;&gt;Joystick&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Input&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;Communicates controller inputs to the CPU&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://github.com/MichaelBurge/nes-emulator/blob/ce768d7b090688a68f4ef732f9d1f18f1d29542a/src/nes.rs#L52&quot;&gt;Ines&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Cartridge&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;A game cartridge, represented in &lt;a href=&quot;https://wiki.nesdev.com/w/index.php/INES&quot;&gt;iNES&lt;/a&gt; format&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;In this section, I’ll talk about the most important of these, and each of the traits that link them together.&lt;/p&gt;
&lt;h3 id=&quot;clocked&quot;&gt;Clocked&lt;/h3&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clocked&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A clock cycle is the smallest discrete step that a component can make: There should be no observable changes outside of a clock cycle.&lt;/p&gt;
&lt;p&gt;The CPU is an example of a clocked component. A single CPU instruction might:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Request an 8-bit value at an address&lt;/li&gt;
&lt;li&gt;Attempt to store an 8-bit value at an address&lt;/li&gt;
&lt;li&gt;Calculate an addition using the Arithmetic Logic Unit(ALU)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Generally, an emulation that does more work at once is faster than a component that simulates each individual clock cycle.&lt;/p&gt;
&lt;p&gt;A clock-accurate emulation of a clocked component is the most accurate&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:1&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, but programmers - even rugged ones in the 1980s - generally don’t depend on the clock-by-clock details of the CPU. It’s common to assume that a bitwise AND instruction takes 6 clock cycles, but not that it does a memory read on clock #2 and a memory write on clock #6. So it can be an acceptable loss of accuracy to run the entire CPU instruction in one clock cycle, and then do nothing for the next 5.&lt;/p&gt;
&lt;p&gt;The NES has a &lt;strong&gt;Master Clock&lt;/strong&gt;, and all other Clocked components run at an integer fraction of its speed:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Component&lt;/th&gt;
&lt;th&gt;Clock Speed&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Master&lt;/td&gt;
&lt;td&gt;1:1 = 21.477272 Mhz&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;1:12&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PPU&lt;/td&gt;
&lt;td&gt;1:4&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;APU&lt;/td&gt;
&lt;td&gt;1:24&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The APU has components that act on two separate clock signals: One from the APU clock, and one from an internal &lt;code class=&quot;highlighter-rouge&quot;&gt;FrameCounter&lt;/code&gt; that sends a signal every half or quarter frame.&lt;/p&gt;
&lt;h3 id=&quot;address-space&quot;&gt;Address Space&lt;/h3&gt;
&lt;p&gt;When a component wants to read or write a value at an address, it places the address on an &lt;strong&gt;Address Bus&lt;/strong&gt;. There is a separate &lt;strong&gt;Data Bus&lt;/strong&gt; that holds the value being read or written. Other components listen for specific addresses that they have been assigned.&lt;/p&gt;
&lt;p&gt;An emulated Address Space is an assignment of addresses to actions that components take.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddressSpace&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;poke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The NES has two different address spaces, primarily used by the CPU and PPU respectively:&lt;/p&gt;
&lt;p&gt;The CPU mostly handles game logic, while the PPU’s address space stores sprites, tiles, and colors.&lt;/p&gt;
&lt;p&gt;Cartridges listen on both address buses. They are not a simple ROM holding a list of bytes, since they can have arbitrary circuitry&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:4&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. Games can choose to include extra RAM, coprocessors for specialized calculations, or control registers for changing the address space.&lt;/p&gt;
&lt;p&gt;Super Mario Bros 3 animates its background by telling the cartridge to suddenly switch between two different background tile patterns. When the PPU reads from the relevant addresses, the cartridge suddenly starts returning different tile data. Its otherwise not possible to update the entire background in a single frame.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.michaelburge.us/assets/articles/20190318-nes-emulator/bankswitch.gif&quot; alt=&quot;Bank Switching&quot;/&gt;&lt;/p&gt;
&lt;p&gt;(Original image from &lt;a href=&quot;https://n3s.io/index.php?title=How_It_Works&quot;&gt;this article&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;cpu&quot;&gt;CPU&lt;/h3&gt;
&lt;p&gt;The CPU handles the game logic: What happens when Mario jumps, stomps on a Goomba, or falls in a pit?&lt;/p&gt;
&lt;p&gt;It repeatedly fetches, decodes, and executes an instruction at the current &lt;strong&gt;Program Counter&lt;/strong&gt; - a pointer in CPU address space - which is then incremented to the next instruction.&lt;/p&gt;
&lt;p&gt;The CPU can only perform three primitive actions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Request a read(in CPU address space)&lt;/li&gt;
&lt;li&gt;Request a write&lt;/li&gt;
&lt;li&gt;Change its internal registers&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All instructions are combinations of these. The &lt;a href=&quot;http://obelisk.me.uk/6502/reference.html&quot;&gt;Arithmetic Shift Left, with Absolute,X addressing mode&lt;/a&gt; instruction(&lt;code class=&quot;highlighter-rouge&quot;&gt;0x1E&lt;/code&gt;) takes 7 clock cycles and causes the CPU to perform the following 7 actions&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:5&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;(1) Fetch the opcode byte &lt;code class=&quot;highlighter-rouge&quot;&gt;0x1E&lt;/code&gt; at the current program counter&lt;/li&gt;
&lt;li&gt;(2,3) Fetch a two-byte value &lt;code class=&quot;highlighter-rouge&quot;&gt;V&lt;/code&gt; immediately after the opcode byte containing a 16-bit address&lt;/li&gt;
&lt;li&gt;(4) Adds the &lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt; register to &lt;code class=&quot;highlighter-rouge&quot;&gt;V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(5) Fetch a one-byte value &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; located at address &lt;code class=&quot;highlighter-rouge&quot;&gt;X+V&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;(6) Calculate the value &lt;code class=&quot;highlighter-rouge&quot;&gt;b = a &amp;lt;&amp;lt; 1&lt;/code&gt;, updating several status flags&lt;/li&gt;
&lt;li&gt;(7) Write the value &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; to address &lt;code class=&quot;highlighter-rouge&quot;&gt;X+V&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It’s a complex operation, but the individual steps are simple: 4 memory fetches, 2 calculations using the ALU, and 1 memory write.&lt;/p&gt;
&lt;p&gt;I implemented each instruction in terms of the three primitive operations, generated an instruction-by-instruction log using the &lt;a href=&quot;https://wiki.nesdev.com/w/index.php/Emulator_tests&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nestest&lt;/code&gt;&lt;/a&gt; test ROM, and verified that it matched the reference log.&lt;/p&gt;
&lt;h3 id=&quot;ppu&quot;&gt;PPU&lt;/h3&gt;
&lt;p&gt;At 60 &lt;strong&gt;Frames per Second&lt;/strong&gt;(FPS) the NES’ CPU can execute &lt;code class=&quot;highlighter-rouge&quot;&gt;29780&lt;/code&gt; clock cycles per frame&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:6&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;, but there are &lt;code class=&quot;highlighter-rouge&quot;&gt;61440&lt;/code&gt; different pixels to display. So the CPU is too slow to draw even a blank screen.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;Picture Processing Unit&lt;/strong&gt;(PPU) runs at triple the CPU’s clock speed, emitting one pixel per cycle. It has more cycles available than pixels to emit, so the idle time(“Vertical Blank”) is used by the CPU to configure the PPU for the next frame.&lt;/p&gt;
&lt;p&gt;The PPU draws two things: Background tiles and sprites. Up to 32 x 30 tiles and 64 sprites can be displayed at once, and these share a pool of 512 different 8x8 4-color patterns.&lt;/p&gt;
&lt;p&gt;There are 4 tables in PPU address space that configure these:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Nametable&lt;/strong&gt;: A table of 32x30 bytes that specify which 8x8 pattern to use&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Attribute Table&lt;/strong&gt;: Specifies which 4-color palette is used for each 16x16 group of tiles&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object Attribute Memory&lt;/strong&gt;(OAM): Stores the position, palette, and status of 64 sprites&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Palette&lt;/strong&gt;: There are 8 different 4-color palettes. The first color is always transparent, and the other 3 choose from 64 different &lt;strong&gt;System Colors&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The PPU and CPU have different address spaces, but they are not isolated. There are three communication channels between them:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are 8 PPU registers mapped in the CPU’s address space.&lt;/li&gt;
&lt;li&gt;The PPU triggers two CPU interrupts: End-of-scanline and Vertical Blank.&lt;/li&gt;
&lt;li&gt;The cartridge itself can choose to modify its assigned PPU address space based on reads or writes to the CPU address space.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are 5 primitive actions that the PPU can take on each clock cycle:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Request a read( in PPU address space)&lt;/li&gt;
&lt;li&gt;Request a write&lt;/li&gt;
&lt;li&gt;Change its internal registers&lt;/li&gt;
&lt;li&gt;Emit a single pixel&lt;/li&gt;
&lt;li&gt;Trigger a CPU interrupt&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It is more difficult to test the PPU than the CPU: Much of the PPU must already be functioning in order to get any output at all. I recommend printing out the 4 tables separately - and once that data is confirmed correct, then test whether these are combined correctly for any particular pixel.&lt;/p&gt;
&lt;h3 id=&quot;save-states&quot;&gt;Save States&lt;/h3&gt;
&lt;p&gt;A common feature in emulators is to save and load a game at any time. Every component implements the &lt;code class=&quot;highlighter-rouge&quot;&gt;Savable&lt;/code&gt; trait:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Savable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There are two properties that make this model useful:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Once a ROM has been loaded, my emulator doesn’t allocate memory. So every object can be written in-place.&lt;/li&gt;
&lt;li&gt;Loading a ROM always creates the same types of components, so the values saved from a previous program execution can be assumed compatible.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first property guarantees that pointers aren’t affected by a savestate restore. If a component is dynamically-allocated and a savestate from before or after its lifetime is loaded, then any pointers to it are no longer valid. This would require keeping track of which objects have pointers to which other objects.&lt;/p&gt;
&lt;p&gt;If this second property failed(say, if someone unplugged a standard NES controller and plugged in a new SNES controller), then the savestate files would need to include type information so the correct &lt;code class=&quot;highlighter-rouge&quot;&gt;load&lt;/code&gt; method is called.&lt;/p&gt;
&lt;p&gt;However, assuming these restrictions makes serialization straightforward. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Savable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6502&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.x&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.y&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.pc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.sp&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.carry&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.zero&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.interruptd&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.decimal&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.overflow&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.negative&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.counter&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.clocks&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.is_tracing&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.clocks_to_pause&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.x&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.y&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.pc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.sp&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.carry&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.zero&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.interruptd&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.decimal&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.overflow&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.negative&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.counter&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.clocks&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.is_tracing&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.clocks_to_pause&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Every component except for the primitives like &lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;u32&lt;/code&gt; look like that. The primitives aren’t too difficult either:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Savable&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.read_exact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Rust’s traits were useful for implementing savestates. The compiler infers which &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;load&lt;/code&gt; methods are needed for each type, so the code is uniform.&lt;/p&gt;
&lt;p&gt;The video playback feature builds on top of savestates by storing 8 bits per frame - one for whether each controller button was pressed. When a savestate is restored, it also restores the active input list.&lt;/p&gt;
&lt;h2 id=&quot;rust-language&quot;&gt;Rust Language&lt;/h2&gt;
&lt;p&gt;The previous section gave a high-level overview of how I designed my NES emulator. In this section, I’ll talk about the Rust language itself.&lt;/p&gt;
&lt;h3 id=&quot;integer-overflow&quot;&gt;Integer overflow&lt;/h3&gt;
&lt;p&gt;By default, Rust will throw an exception if any arithmetic operation overflows. This caught a fair number of bugs during testing, because the &lt;a href=&quot;https://doc.rust-lang.org/std/primitive.u32.html#method.wrapping_add&quot;&gt;wrapping_*&lt;/a&gt; functions require explicit type information and it’s important whether a number wraps as a 16-bit value or an 8-bit value.&lt;/p&gt;
&lt;p&gt;I used functions like &lt;code class=&quot;highlighter-rouge&quot;&gt;wrapping_add&lt;/code&gt; in my emulator, but there are also &lt;a href=&quot;https://doc.rust-lang.org/std/num/struct.Wrapping.html&quot;&gt;Wrapping&lt;/a&gt; types that imply wrapping arithmetic operations.&lt;/p&gt;
&lt;h3 id=&quot;single-ownership&quot;&gt;Single-ownership&lt;/h3&gt;
&lt;p&gt;In Rust, mutable values must have a single owning variable. Other variables can &lt;strong&gt;borrow&lt;/strong&gt; it, but only one mutable reference is allowed at a single time.&lt;/p&gt;
&lt;p&gt;The CPU address space has several PPU registers mapped. So the CPU maintains a permanent mutable reference to the PPU. But the top-level &lt;code class=&quot;highlighter-rouge&quot;&gt;Nes&lt;/code&gt; object also owns the PPU.&lt;/p&gt;
&lt;p&gt;I worked around this using &lt;a href=&quot;https://doc.rust-lang.org/std/boxed/struct.Box.html&quot;&gt;Box&lt;/a&gt; to assign fixed memory addresses to values, and then “unsafe” pointer dereferences when needed.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C6502&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Apu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ppu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CpuPpuInterconnect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6502&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddressSpace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CpuPpuInterconnect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ppu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.ppu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// Games aren't supposed to read some of these, but&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// if they do, the &quot;open bus&quot; is whatever value was last written&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// to any PPU register.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map_ppu_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUCTRL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUMASK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUSTATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.read_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.read_oam_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUSCROLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.read_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMDMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;panic!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;INVALID PPU PORT READ {:?} {:x}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;poke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ppu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.ppu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.open_bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map_ppu_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUCTRL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_control&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUMASK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUSTATUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_oam_address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_oam_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUSCROLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PPUDATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAMDMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.cpu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr_base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr_base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.oam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.oam_ptr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.oam_ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ppu&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.oam_ptr&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.wrapping_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;panic!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;INVALID PPU PORT WRITE {:?} {:x} {:x}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This use of &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;/code&gt; means that my emulator is not thread-safe. If both the PPU and CPU ran in separate threads, they could both issue writes to the same address or read a value while it is being written.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://doc.rust-lang.org/beta/book/ch16-03-shared-state.html&quot;&gt;Mutex&lt;/a&gt; might be a solution here. The lock would be held for a small amount of time, so it shouldn’t cause much of a performance issue.&lt;/p&gt;
&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;/h3&gt;
&lt;p&gt;In a later article, I plan to train a &lt;strong&gt;Reinforcement Learning&lt;/strong&gt;(RL) agent to play Mario. A faster emulator allows me to gather more sample data, so I spent a few hours ensuring my emulator was comparable to other NES emulators used for RL research.&lt;/p&gt;
&lt;p&gt;My benchmark runs 10,000 frames of Mario in a “headless” mode with no video or sound, and then writes a screenshot.&lt;/p&gt;
&lt;p&gt;Before I started optimizing it, my emulator got about 350 frames-per-second(FPS). I saw RL people getting between 200 and 450 FPS on various emulators, so I made a few small changes and ended up at about 430 FPS.&lt;/p&gt;
&lt;p&gt;I found three optimizations, which each gave a 10% FPS increase.&lt;/p&gt;
&lt;h4 id=&quot;division&quot;&gt;Division&lt;/h4&gt;
&lt;p&gt;Compilers try to avoid emitting division instructions, since they are slow. However, division by a non-constant defeats many of the optimizations it uses.&lt;/p&gt;
&lt;p&gt;The code&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clocked&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameCounter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.mode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18641&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14915&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;compiles to&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-assembly&quot; data-lang=&quot;assembly&quot;&gt;add          $0x1, %eax         ; self.step += 1
cmpb         $0x0, 0x33(%rbx)   ; self.mode
mov          $0x3a43,%ecx       ; 14915
mov          $0x46d1,%edi       ; 18641
cmove        %ecx,%edi          ; let cap = if self.mode ...
xor          %edx,%edx
div          %di                ; self.step %= cap&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;. Since the &lt;code class=&quot;highlighter-rouge&quot;&gt;FrameCounter&lt;/code&gt; is clocked every other CPU cycle, it executes about &lt;code class=&quot;highlighter-rouge&quot;&gt;14914&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; instructions per NES frame, or about 6.4 million per second at the accelerated rate of 430 FPS.&lt;/p&gt;
&lt;p&gt;Given the following two conditions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The dividend never decreases&lt;/li&gt;
&lt;li&gt;The dividend never increases by more than the divisor between divisions&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The above code can be replaced with a conditional subtraction:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clocked&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FrameCounter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.mode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18641&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14915&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The branch is only taken once every 15,000 clocks, so this bottleneck is completely removed and the emulator as a whole processes 10% more frames.&lt;/p&gt;
&lt;h4 id=&quot;iterators&quot;&gt;Iterators&lt;/h4&gt;
&lt;p&gt;Consider the following two implementations of the same function:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crate_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.wrapping_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.wrapping_mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;#[no_mangle]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.wrapping_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.wrapping_mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The function &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; is a fairly direct translation of the original source:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-assembly&quot; data-lang=&quot;assembly&quot;&gt;0000000000000000 &amp;lt;foo&amp;gt;:
   0:   48 85 f6                test   rsi,rsi
   3:   74 33                   je     38 &amp;lt;foo+0x38&amp;gt;
   5:   48 8d 0c f5 00 00 00    lea    rcx,[rsi*8+0x0]
   c:   00
   d:   31 c0                   xor    eax,eax
   f:   31 d2                   xor    edx,edx
  11:   66 2e 0f 1f 84 00 00    nop    WORD PTR cs:[rax+rax*1+0x0]
  18:   00 00 00
  1b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]
  20:   48 39 f2                cmp    rdx,rsi
  23:   73 12                   jae    37 &amp;lt;foo+0x37&amp;gt;
  25:   48 03 04 d7             add    rax,QWORD PTR [rdi+rdx*8]
  29:   48 0f af c2             imul   rax,rdx
  2d:   48 8d 52 01             lea    rdx,[rdx+0x1]
  31:   48 83 c1 f8             add    rcx,0xfffffffffffffff8
  35:   75 e9                   jne    20 &amp;lt;foo+0x20&amp;gt;
  37:   c3                      ret
  38:   31 c0                   xor    eax,eax
  3a:   c3                      ret&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The variables are mapped as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rcx&lt;/code&gt; is the remaining number of bytes in the slice &lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdx&lt;/code&gt; is the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rax&lt;/code&gt; is the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;acc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt; points to the beginning of the data in &lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And the loop executes &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;imul&lt;/code&gt; instructions until &lt;code class=&quot;highlighter-rouge&quot;&gt;rcx&lt;/code&gt; is 0.&lt;/p&gt;
&lt;p&gt;However, the function &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; unrolls its loop 4 times:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-assembly&quot; data-lang=&quot;assembly&quot;&gt;0000000000000000 &amp;lt;bar&amp;gt;:
   0:   48 85 f6                test   rsi,rsi
   3:   74 1c                   je     21 &amp;lt;bar+0x21&amp;gt;
   5:   48 8d 46 ff             lea    rax,[rsi-0x1]
   9:   41 89 f0                mov    r8d,esi
   c:   41 83 e0 03             and    r8d,0x3
  10:   48 83 f8 03             cmp    rax,0x3
  14:   73 0e                   jae    24 &amp;lt;bar+0x24&amp;gt;
  16:   31 c0                   xor    eax,eax
  18:   31 d2                   xor    edx,edx
  1a:   4d 85 c0                test   r8,r8
  1d:   75 4e                   jne    6d &amp;lt;bar+0x6d&amp;gt;
  1f:   eb 60                   jmp    81 &amp;lt;bar+0x81&amp;gt;
  21:   31 c0                   xor    eax,eax
  23:   c3                      ret
  24:   4c 29 c6                sub    rsi,r8
  27:   31 c0                   xor    eax,eax
  29:   31 d2                   xor    edx,edx
  2b:   0f 1f 44 00 00          nop    DWORD PTR [rax+rax*1+0x0]
  30:   48 03 04 d7             add    rax,QWORD PTR [rdi+rdx*8]
  34:   48 0f af c2             imul   rax,rdx
  38:   48 03 44 d7 08          add    rax,QWORD PTR [rdi+rdx*8+0x8]
  3d:   48 8d 4a 01             lea    rcx,[rdx+0x1]
  41:   48 0f af c1             imul   rax,rcx
  45:   48 03 44 d7 10          add    rax,QWORD PTR [rdi+rdx*8+0x10]
  4a:   48 8d 4a 02             lea    rcx,[rdx+0x2]
  4e:   48 0f af c1             imul   rax,rcx
  52:   48 03 44 d7 18          add    rax,QWORD PTR [rdi+rdx*8+0x18]
  57:   48 8d 4a 03             lea    rcx,[rdx+0x3]
  5b:   48 8d 52 04             lea    rdx,[rdx+0x4]
  5f:   48 0f af c1             imul   rax,rcx
  63:   48 39 d6                cmp    rsi,rdx
  66:   75 c8                   jne    30 &amp;lt;bar+0x30&amp;gt;
  68:   4d 85 c0                test   r8,r8
  6b:   74 14                   je     81 &amp;lt;bar+0x81&amp;gt;
  6d:   49 f7 d8                neg    r8
  70:   48 03 04 d7             add    rax,QWORD PTR [rdi+rdx*8]
  74:   48 0f af c2             imul   rax,rdx
  78:   48 8d 52 01             lea    rdx,[rdx+0x1]
  7c:   49 ff c0                inc    r8
  7f:   75 ef                   jne    70 &amp;lt;bar+0x70&amp;gt;
  81:   c3                      ret&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There are two loops:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The loop beginning at &lt;code class=&quot;highlighter-rouge&quot;&gt;30:&lt;/code&gt; processes 4 elements from &lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The loop beginning at &lt;code class=&quot;highlighter-rouge&quot;&gt;70:&lt;/code&gt; processes one element from &lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The variables are assigned as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;r8d&lt;/code&gt; contains the remaining number of elements to process after the &lt;code class=&quot;highlighter-rouge&quot;&gt;30:&lt;/code&gt; loop has finished.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rax&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;acc&lt;/code&gt; variable&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt; points to the beginning of the data for &lt;code class=&quot;highlighter-rouge&quot;&gt;xs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rdx&lt;/code&gt; is the &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt; variable, updated once per loop iteration&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rcx&lt;/code&gt; is also the &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt; variable, but updated more frequently in the unrolled &lt;code class=&quot;highlighter-rouge&quot;&gt;30:&lt;/code&gt; loop.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rsi&lt;/code&gt; points to the first data that the &lt;code class=&quot;highlighter-rouge&quot;&gt;30:&lt;/code&gt; loop is unable to process.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The main difference seems to be that &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; counts bytes while &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; counts elements. Perhaps the tuple &lt;code class=&quot;highlighter-rouge&quot;&gt;(x, idx)&lt;/code&gt; has size 16 bytes which is larger than the maximum scale of &lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt; in addressing modes like &lt;code class=&quot;highlighter-rouge&quot;&gt;QWORD PTR [rdi+rdx*8+C]&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;/code&gt; might choose its loop strategy before later optimizations make them equivalent. The difference goes away if &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; are changed to take &lt;code class=&quot;highlighter-rouge&quot;&gt;u8&lt;/code&gt;s rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;usize&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;In any case, changing one of my loops to use &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;’s style improved the emulator’s FPS by 10%.&lt;/p&gt;
&lt;h4 id=&quot;search-order&quot;&gt;Search order&lt;/h4&gt;
&lt;p&gt;The CPU Address Space consists of many components which each listen for reads and writes to specific addresses.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Mapper&lt;/strong&gt; takes an address and does a linear search through all of them looking for the responsible component.&lt;/p&gt;
&lt;p&gt;When I first wrote the code, I mapped the address space from first-to-last:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map_nes_cpu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddressSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddressSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cartridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddressSpace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Mapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpu_ram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ram&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Ram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cpu_ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CpuPpuInterconnect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;CpuPpuInterconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.ppu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.deref_mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.cpu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.deref_mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.apu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.deref_mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Apu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// https://wiki.nesdev.com/w/index.php/CPU_memory_map&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_mirrored&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x07ff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x1fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_ram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_mirrored&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x2007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x3fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4013&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4014&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_ppu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4015&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// TODO - 0x4017 is also mapped to joystick2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x4017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// TODO - joystick2 isn't used, but this transfers ownership so it isn't deallocated(since it is updated through pointers)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4018&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0x401F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// APU test mode&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.map_address_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0x4020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0xFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cartridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.cpu.mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.cpu&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;However, this puts the &lt;code class=&quot;highlighter-rouge&quot;&gt;cartridge&lt;/code&gt; at the very end. The cartridge contains all of the game’s code, so every time the CPU fetched a new instruction it got a worst-case linear-search.&lt;/p&gt;
&lt;p&gt;I experimented with an LRU cache, but found the best improvement by simply reordering those statements to put the most frequently-accessed components first.&lt;/p&gt;
&lt;p&gt;This also gave a 10% improvement in FPS.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This article discussed an NES emulator I developed using the Rust programming language.&lt;/p&gt;
&lt;p&gt;If you’re interested in learning more about NES development, I recommend the &lt;a href=&quot;https://wiki.nesdev.com/w/index.php/Nesdev_Wiki&quot;&gt;Nesdev Wiki&lt;/a&gt; for technical details needed to make emulators or games.&lt;/p&gt;
&lt;p&gt;Future articles on this subject may cover:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Training an agent to play Mario&lt;/li&gt;
&lt;li&gt;Improving the performance of the emulator&lt;/li&gt;
&lt;li&gt;Developing emulators for other systems&lt;/li&gt;
&lt;li&gt;Compiling the emulator to Javascript to run in-browser&lt;/li&gt;
&lt;li&gt;Compatibility issues with less-common games&lt;/li&gt;
&lt;li&gt;How specific NES games worked internally&lt;/li&gt;
&lt;li&gt;Porting the emulator to run on a GPU&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;http://www.michaelburge.us/2019/03/18/nes-design.html#fn:2&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Writing an NES game in Rust&lt;/li&gt;
&lt;li&gt;Making new optimization passes for &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;/code&gt; or LLVM&lt;/li&gt;
&lt;li&gt;Accelerating an emulator with a JIT compiler&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h3&gt;

</description>
<pubDate>Tue, 19 Mar 2019 13:18:55 +0000</pubDate>
<dc:creator>MichaelBurge</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.michaelburge.us/2019/03/18/nes-design.html</dc:identifier>
</item>
<item>
<title>Apple updates its iMac line</title>
<link>https://www.apple.com/newsroom/2019/03/imac-gets-a-2x-performance-boost/</link>
<guid isPermaLink="true" >https://www.apple.com/newsroom/2019/03/imac-gets-a-2x-performance-boost/</guid>
<description>&lt;div class=&quot;pagebody-copy&quot; readability=&quot;45.68813559322&quot;&gt;Cupertino, California — Apple today updated its &lt;a href=&quot;https://www.apple.com/imac/&quot; target=&quot;_blank&quot;&gt;iMac&lt;/a&gt; line with up to 8-core Intel 9th-generation processors for the first time and powerful Vega graphics options, delivering dramatic increases in both compute and graphics performance. From consumers to pros alike, users will notice their iMac is faster for everyday tasks all the way up to the most demanding pro workloads. This boost in performance, combined with its gorgeous Retina display, sleek all-in-one design, quiet operation, fast storage and memory, modern connectivity and macOS Mojave, makes iMac the world’s best desktop.&lt;/div&gt;
&lt;p&gt;“Customers are going to love the huge boost in iMac performance. With up to 8-core processors and powerful Vega graphics, the iMac lineup is stronger than ever,” said Tom Boger, Apple’s senior director of Mac Product Marketing. “With its stunning Retina display, amazing design, twice the performance, and macOS Mojave that our customers love, iMac is by far the best desktop in the world.”&lt;/p&gt;
</description>
<pubDate>Tue, 19 Mar 2019 12:43:25 +0000</pubDate>
<dc:creator>Luc</dc:creator>
<og:type>article</og:type>
<og:title>iMac gets a 2x performance boost</og:title>
<og:description>Apple today updated its iMac line with up to 9th-generation Intel 8-core processors for the first time and powerful Vega graphics options.</og:description>
<og:url>https://www.apple.com/newsroom/2019/03/imac-gets-a-2x-performance-boost/</og:url>
<og:image>https://www.apple.com/newsroom/images/product/mac/standard/Apple-iMac-gets-2x-more-performance-03132019_LP_hero.jpg.og.jpg?201903191737</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.apple.com/newsroom/2019/03/imac-gets-a-2x-performance-boost/</dc:identifier>
</item>
</channel>
</rss>