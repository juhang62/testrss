<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Microsoft finds privilege escalation vulnerability in Huawei driver</title>
<link>https://www.microsoft.com/security/blog/2019/03/25/from-alert-to-driver-vulnerability-microsoft-defender-atp-investigation-unearths-privilege-escalation-flaw/</link>
<guid isPermaLink="true" >https://www.microsoft.com/security/blog/2019/03/25/from-alert-to-driver-vulnerability-microsoft-defender-atp-investigation-unearths-privilege-escalation-flaw/</guid>
<description>&lt;p&gt;With Microsoft continuously improving kernel mitigations and raising the bar for exploiting native kernel components, third-party kernel drivers are becoming a more appealing target for attackers and an important area of research for security analysts. A vulnerability in a signed third-party driver could have a serious impact: it can be abused by attackers to escalate privileges or, more commonly, bypass driver signature enforcement—without the complexity of using a more expensive zero-day kernel exploit in the OS itself.&lt;/p&gt;
&lt;p&gt;Computer manufacturers usually ship devices with software and tools that facilitate device management. These software and tools, including drivers, often contain components that run with ring-0 privileges in the kernel. With these components installed by default, each must be as secure as the kernel; even one flawed component could become the Achilles’ heel of the whole kernel security design.&lt;/p&gt;
&lt;p&gt;We discovered such a driver while investigating an alert raised by &lt;a href=&quot;https://www.microsoft.com/en-us/windowsforbusiness/windows-atp?ocid=cx-blog-mmpc&quot;&gt;Microsoft Defender Advanced Threat Protection&lt;/a&gt;’s kernel sensors. We traced the anomalous behavior to a device management driver developed by Huawei. Digging deeper, we found a lapse in the design that led to a vulnerability that could allow local privilege escalation.&lt;/p&gt;
&lt;p&gt;We reported the vulnerability (assigned CVE-2019-5241) to Huawei, who responded and cooperated quickly and professionally. On January 9, 2019, Huawei released a fix: https://www.huawei.com/en/psirt/security-advisories/huawei-sa-20190109-01-pcmanager-en.&lt;/p&gt;
&lt;p&gt;In this blog post, we’d like to share our journey from investigating one Microsoft Defender ATP alert to discovering a vulnerability, cooperating with the vendor, and protecting customers.&lt;/p&gt;
&lt;h3&gt;Detecting kernel-initiated code injections with Microsoft Defender ATP&lt;/h3&gt;
&lt;p&gt;Starting in Windows 10, version 1809, the kernel has been instrumented with new sensors designed to trace User APC code injection initiated by a kernel code, providing better visibility into kernel threats like DOUBLEPULSAR. As described in our &lt;a href=&quot;https://cloudblogs.microsoft.com/microsoftsecure/2017/06/30/exploring-the-crypt-analysis-of-the-wannacrypt-ransomware-smb-exploit-propagation/&quot;&gt;in-depth analysis&lt;/a&gt;, DOUBLEPULSAR is a kernel backdoor used by the WannaCry ransomware to inject the main payload into user-space. DOUBLEPULSAR copied the user payload from the kernel into an executable memory region in lsass.exe and inserted a User APC to a victim thread with NormalRoutine targeting this region.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-89164&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-01-WannaCry-user-APC-injection-technique-schematic-diagram.png&quot; alt=&quot;figure-01-WannaCry-user-APC-injection-technique-schematic-diagram&quot; width=&quot;700&quot; height=&quot;350&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-01-WannaCry-user-APC-injection-technique-schematic-diagram.png 998w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-01-WannaCry-user-APC-injection-technique-schematic-diagram-300x150.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-01-WannaCry-user-APC-injection-technique-schematic-diagram-768x384.png 768w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 1. WannaCry User APC injection technique schematic diagram&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;While the User APC code injection technique isn’t novel (see &lt;a href=&quot;https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Win32/Conficker&quot;&gt;Conficker&lt;/a&gt; or &lt;a href=&quot;https://community.osr.com/discussion/88852&quot;&gt;Valerino’s earliest proof-of-concept&lt;/a&gt;), detecting threats running in the kernel is not trivial. Since PatchGuard was introduced, hooking NTOSKRNL is no longer allowed; there’s no documented way drivers could get notification for any of the above operations. Hence, without proper optics, the only sustainable strategy would be applying memory forensics, which can be complicated.&lt;/p&gt;
&lt;p&gt;The new set of kernel sensors aim to address this kind of kernel threat. Microsoft Defender ATP leverages these sensors to detect suspicious operations invoked by a kernel code that might lead to code injection into user-mode. One such suspicious operation, though not related to WannaCry, DOUBLEPULSAR, or other known kernel threats, triggered this investigation that led to our discovery of a vulnerability.&lt;/p&gt;
&lt;h3&gt;Investigating an anomalous code injection from the kernel&lt;/h3&gt;
&lt;p&gt;While monitoring alerts related to kernel-mode attacks, one alert drew our attention:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-89189&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-02-2-Microsoft-Defender-ATP-kernel-initiating-code-injection-alert.png&quot; alt=&quot;figure-02-2-Microsoft-Defender-ATP-kernel-initiating-code-injection-alert&quot; width=&quot;997&quot; height=&quot;827&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-02-2-Microsoft-Defender-ATP-kernel-initiating-code-injection-alert.png 997w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-02-2-Microsoft-Defender-ATP-kernel-initiating-code-injection-alert-300x249.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-02-2-Microsoft-Defender-ATP-kernel-initiating-code-injection-alert-768x637.png 768w&quot; sizes=&quot;(max-width: 997px) 100vw, 997px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 2. Microsoft Defender ATP kernel-initiating code injection alert&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The alert process tree showed an abnormal memory allocation and execution in the context of &lt;em&gt;services.exe&lt;/em&gt; by a kernel code. Investigating further, we found that an identical alert was fired on another machine around the same time.&lt;/p&gt;
&lt;p&gt;To get a better understanding of the observed anomaly, we looked at the raw signals we got from the kernel sensors. This analysis yielded the following findings:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A system thread called &lt;em&gt;nt!NtAllocateVirtualMemory&lt;/em&gt; allocated a single page (size = 0x1000) with &lt;em&gt;PAGE_EXECUTE_READWRITE&lt;/em&gt; protection mask in &lt;em&gt;services.exe&lt;/em&gt; address space&lt;/li&gt;
&lt;li&gt;The system thread then called &lt;em&gt;nt!KeInsertQueueApc&lt;/em&gt; to queue User APC to a &lt;em&gt;services.exe&lt;/em&gt; arbitrary thread with &lt;em&gt;NormalRoutine&lt;/em&gt; pointing to the beginning of the executable page and &lt;em&gt;NormalContext&lt;/em&gt; pointing to offset &lt;em&gt;0x800&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The payload copied from kernel mode is divided into two portions: a shellcode (&lt;em&gt;NormalRoutine&lt;/em&gt;) and a parameter block (&lt;em&gt;NormalContext&lt;/em&gt;). At this point, the overall behavior looked suspicious enough for us to proceed with the hunting. Our goal was to incriminate the kernel code that triggered the alert.&lt;/p&gt;
&lt;h3&gt;Incriminating the source&lt;/h3&gt;
&lt;p&gt;In user-mode threats, the caller process context could shed light on the actor and link to other phases in the attack chain. In contrast, with kernel-mode threats, the story is more complicated. The kernel by nature is asynchronous; callbacks might be called in an arbitrary context, making process context meaningless for forensics purposes.&lt;/p&gt;
&lt;p&gt;Therefore, we tried to find an indirect evidence to third-party code loaded into the kernel. By inspecting the machine timeline, we found that several third-party drivers were loaded earlier that day.&lt;/p&gt;
&lt;p&gt;We concluded based on their file path that they are all related to an app from Huawei called PC Manager, a device management software for Huawei MateBook laptops. The installer is available on Huawei website, so we downloaded it for inspection. For each Huawei driver we used &lt;em&gt;dumpbin.exe&lt;/em&gt; to examine imported functions.&lt;/p&gt;
&lt;p&gt;And then we had a hit:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89166 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives.png&quot; alt=&quot;figure-03-dumpbin-utility-used-to-detect-user-APC injection-primitives&quot; width=&quot;1107&quot; height=&quot;54&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives.png 1107w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives-300x15.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives-768x37.png 768w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives-1024x50.png 1024w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-03-dumpbin-utility-used-to-detect-user-APC-injection-primitives-1083x54.png 1083w&quot; sizes=&quot;(max-width: 1107px) 100vw, 1107px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 3. dumpbin utility used to detect user APC injection primitives&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt;: Unexpected behavior from a driver&lt;/h3&gt;
&lt;p&gt;Hunting led us to the kernel code that triggered the alert. One would expect that a device management software would perform mostly hardware-related tasks, with the supplied device drivers being the communication layer with the OEM-specific hardware. So why was this driver exhibiting unusual behavior? To answer this question, we reverse-engineered &lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Our entry point was the function implementing the user APC injection. We found a code path that:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;allocates &lt;em&gt;RWX&lt;/em&gt; page in some target process;&lt;/li&gt;
&lt;li&gt;resolves &lt;em&gt;CreateProcessW&lt;/em&gt; and &lt;em&gt;CloseHandle&lt;/em&gt; function pointers in the address space of the target process;&lt;/li&gt;
&lt;li&gt;copies a code area from the driver as well as what seemed to be a parameter block to the allocated page; and&lt;/li&gt;
&lt;li&gt;performs User APC injection targeting that page&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The parameter block contains both the resolved function pointers as well as a string, which was found to be a command line.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89167 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-04-User-APC-injection-code.png&quot; alt=&quot;figure-04-User-APC-injection-code&quot; width=&quot;1014&quot; height=&quot;791&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-04-User-APC-injection-code.png 1014w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-04-User-APC-injection-code-300x234.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-04-User-APC-injection-code-768x599.png 768w&quot; sizes=&quot;(max-width: 1014px) 100vw, 1014px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 4. User APC injection code&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The APC normal routine is a shellcode which calls &lt;em&gt;CreateProcessW&lt;/em&gt; with the given process command line string. This implied that the purpose of the code injection to &lt;em&gt;services.exe&lt;/em&gt; is to spawn a child process.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89168 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-05-User-shellcode-performing-process-creation.png&quot; alt=&quot;figure-05-User-shellcode-performing-process-creation&quot; width=&quot;441&quot; height=&quot;533&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-05-User-shellcode-performing-process-creation.png 441w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-05-User-shellcode-performing-process-creation-248x300.png 248w&quot; sizes=&quot;(max-width: 441px) 100vw, 441px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 5. User shellcode performing process creation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inspecting the &lt;em&gt;xrefs&lt;/em&gt;, we noticed that the injection code originated from a create-process notify routine when &lt;em&gt;Create = FALSE&lt;/em&gt;. Hence, the trigger was some process termination.&lt;/p&gt;
&lt;p&gt;But what command does the shellcode execute? Attaching a kernel debugger and setting a breakpoint on the &lt;em&gt;memcpy_s&lt;/em&gt; in charge of copying the parameters from kernel to user-mode revealed the created process: one of Huawei’s installed services, &lt;em&gt;MateBookService.exe&lt;/em&gt;, invoked with &lt;em&gt;“/startup”&lt;/em&gt; in its command line.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-89190&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-06-2-Breakpoint-hit-on-the-call-to-memcpy_s-copying-shellcode-parameters.png&quot; alt=&quot;figure-06-2-Breakpoint-hit-on-the-call-to-memcpy_s-copying-shellcode-parameters&quot; width=&quot;968&quot; height=&quot;761&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-06-2-Breakpoint-hit-on-the-call-to-memcpy_s-copying-shellcode-parameters.png 968w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-06-2-Breakpoint-hit-on-the-call-to-memcpy_s-copying-shellcode-parameters-300x236.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-06-2-Breakpoint-hit-on-the-call-to-memcpy_s-copying-shellcode-parameters-768x604.png 768w&quot; sizes=&quot;(max-width: 968px) 100vw, 968px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 6. Breakpoint hit on the call to memcpy_s copying shellcode parameters&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Why would a valid service be started that way? Inspecting &lt;em&gt;MateBookService.exe!main&lt;/em&gt; revealed a “startup mode” that revived the service if it’s stopped – some sort of watchdog mechanism meant to keep the Huawei PC Manager main service running.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89170 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-07-MateBookService-exe-startup-code-path.png&quot; alt=&quot;figure-07-MateBookService-exe-startup-code-path&quot; width=&quot;1140&quot; height=&quot;423&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-07-MateBookService-exe-startup-code-path.png 1140w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-07-MateBookService-exe-startup-code-path-300x111.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-07-MateBookService-exe-startup-code-path-768x285.png 768w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-07-MateBookService-exe-startup-code-path-1024x380.png 1024w&quot; sizes=&quot;(max-width: 1140px) 100vw, 1140px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 7. MateBookService.exe /startup code path&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;At this point of the investigation, the only missing piece in the puzzle was making sure the terminated process triggering the injection is indeed &lt;em&gt;MateBookService.exe&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89171 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-08-Validating-terminated-process-identity.png&quot; alt=&quot;figure-08-Validating-terminated-process-identity&quot; width=&quot;1148&quot; height=&quot;509&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-08-Validating-terminated-process-identity.png 1148w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-08-Validating-terminated-process-identity-300x133.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-08-Validating-terminated-process-identity-768x341.png 768w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-08-Validating-terminated-process-identity-1024x454.png 1024w&quot; sizes=&quot;(max-width: 1148px) 100vw, 1148px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 8. Validating terminated process identity&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The code path that decides whether to inject to &lt;em&gt;services.exe&lt;/em&gt; uses a global list of watched process names. Hitting a breakpoint in the iteration loop revealed which process was registered: it was &lt;em&gt;MateBookService.exe&lt;/em&gt;, as expected, and it was the only process on that list.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89172 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-09-Breakpoint-hit-during-process-name-comparison-against-global-list.png&quot; alt=&quot;figure-09-Breakpoint-hit-during-process-name-comparison-against-global-list&quot; width=&quot;790&quot; height=&quot;456&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-09-Breakpoint-hit-during-process-name-comparison-against-global-list.png 790w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-09-Breakpoint-hit-during-process-name-comparison-against-global-list-300x173.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-09-Breakpoint-hit-during-process-name-comparison-against-global-list-768x443.png 768w&quot; sizes=&quot;(max-width: 790px) 100vw, 790px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 9. Breakpoint hit during process name comparison against global list&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt; also provided process protection against external tampering. Any attempt to force &lt;em&gt;MateBookService.exe&lt;/em&gt; termination would fail with &lt;em&gt;Access Denied&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Abusing &lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt; process watch mechanism&lt;/h3&gt;
&lt;p&gt;The next step in our investigation was to determine whether an attacker can tamper with the global watched process list. We came across an IOCTL handler that added an entry to that list. &lt;em&gt;MateBookService.exe&lt;/em&gt; process likely uses this IOCTL to register itself when the service starts. This IOCTL is sent to the driver control device, created from its &lt;em&gt;DriverEntry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89173 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-10-HwOs2Ec10x64.sys-control-device-creation-with-IoCreateDevice.png&quot; alt=&quot;figure-10-HwOs2Ec10x64.sys-control-device-creation-with-IoCreateDevice&quot; width=&quot;537&quot; height=&quot;143&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-10-HwOs2Ec10x64.sys-control-device-creation-with-IoCreateDevice.png 537w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-10-HwOs2Ec10x64.sys-control-device-creation-with-IoCreateDevice-300x80.png 300w&quot; sizes=&quot;(max-width: 537px) 100vw, 537px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 10. HwOs2Ec10x64.sys control device creation with IoCreateDevice&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Since the device object is created with &lt;em&gt;IoCreateDevice&lt;/em&gt;, &lt;em&gt;Everyone&lt;/em&gt; has RW access to it. Another important observation was that this device isn’t exclusive, hence multiple handles could be opened to it.&lt;/p&gt;
&lt;p&gt;Nevertheless, when we tried to open a handle to the device &lt;em&gt;\\.\HwOs2EcX64&lt;/em&gt;, it failed with &lt;em&gt;Last Error = 537, “Application verifier has found an error in the current process”&lt;/em&gt;. The driver was rejecting our request to open the device. How is access enforced? It must be on the &lt;em&gt;CreateFile&lt;/em&gt; path; in other words, in &lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt; &lt;em&gt;IRP_MJ_CREATE&lt;/em&gt; dispatch routine.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89174 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-11-IRP_MJ_CREATE-dispatch-routine.png&quot; alt=&quot;figure-11-IRP_MJ_CREATE-dispatch-routine&quot; width=&quot;533&quot; height=&quot;243&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-11-IRP_MJ_CREATE-dispatch-routine.png 533w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-11-IRP_MJ_CREATE-dispatch-routine-300x137.png 300w&quot; sizes=&quot;(max-width: 533px) 100vw, 533px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 11. IRP_MJ_CREATE dispatch routine&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function validates the calling process by making sure that the main executable path belongs to a whitelist (e.g., &lt;em&gt;C:\Program Files\Huawei\PCManager\MateBookService.exe&lt;/em&gt;). This simple check on the initiating process name, however, doesn’t guarantee the integrity of the calling process. An attacker-controlled instance of &lt;em&gt;MateBookService.exe&lt;/em&gt; will still be granted access to the device &lt;em&gt;\\.\HwOs2EcX64&lt;/em&gt; and be able to call some of its IRP functions. Then, the attacker-controlled process could abuse this capability to talk with the device to register a watched executable of its own choice. Given the fact that a parent process has full permissions over its children, even a code with low privileges might spawn an infected &lt;em&gt;MateBookService.exe&lt;/em&gt; and inject code into it. In our proof-of-concept, we used &lt;a href=&quot;https://www.microsoft.com/security/blog/2017/07/12/detecting-stealthier-cross-process-injection-techniques-with-windows-defender-atp-process-hollowing-and-atom-bombing/&quot;&gt;process hollowing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89175 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-12-Procmon-utility-results-showing-POC-process-start-exit-IL.png&quot; alt=&quot;figure-12-Procmon-utility-results-showing-POC-process-start-exit-IL&quot; width=&quot;749&quot; height=&quot;132&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-12-Procmon-utility-results-showing-POC-process-start-exit-IL.png 749w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-12-Procmon-utility-results-showing-POC-process-start-exit-IL-300x53.png 300w&quot; sizes=&quot;(max-width: 749px) 100vw, 749px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 12. Procmon utility results showing POC process start/exit &amp;amp; IL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Because watched processes are blindly launched by the watchdog when they’re terminated, the attacker-controlled executable would be invoked as a child of services.exe, running as LocalSystem, hence with elevated privileges.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;size-full wp-image-89176 aligncenter&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-13-Procexp-utility-process-tree-view-showing-LPE_POC-running-as-LocalSystem.png&quot; alt=&quot;figure-13-Procexp-utility-process-tree-view-showing-LPE_POC-running-as-LocalSystem&quot; width=&quot;598&quot; height=&quot;47&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-13-Procexp-utility-process-tree-view-showing-LPE_POC-running-as-LocalSystem.png 598w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-13-Procexp-utility-process-tree-view-showing-LPE_POC-running-as-LocalSystem-300x24.png 300w&quot; sizes=&quot;(max-width: 598px) 100vw, 598px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 13. Procexp utility process-tree view showing LPE_POC running as LocalSystem&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Responsible disclosure and protecting customers&lt;/h3&gt;
&lt;p&gt;Once we had a working POC demonstrating the elevation of privilege from a low-integrity attacker-controlled process, we responsibly reported the bug to Huawei through the Microsoft Security Vulnerability Research (&lt;a href=&quot;https://www.microsoft.com/en-us/msrc/msvr&quot;&gt;MSVR&lt;/a&gt;) program. The vulnerability was assigned CVE-2019-5241. Meanwhile, we kept our customers safe by building a detection mechanism that would raise an alert for any successful privilege escalation exploiting the &lt;em&gt;HwOs2Ec10x64.sys&lt;/em&gt; watchdog vulnerability as we described.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-89191&quot; src=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-14-2-Microsoft-Defender-ATP-alerting-on-the-privilege-escalation-POC-code.png&quot; alt=&quot;figure-14-2-Microsoft-Defender-ATP-alerting-on-the-privilege-escalation-POC-code&quot; width=&quot;942&quot; height=&quot;741&quot; srcset=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-14-2-Microsoft-Defender-ATP-alerting-on-the-privilege-escalation-POC-code.png 942w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-14-2-Microsoft-Defender-ATP-alerting-on-the-privilege-escalation-POC-code-300x236.png 300w, https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/figure-14-2-Microsoft-Defender-ATP-alerting-on-the-privilege-escalation-POC-code-768x604.png 768w&quot; sizes=&quot;(max-width: 942px) 100vw, 942px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 14. Microsoft Defender ATP alerting on the privilege escalation POC code&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Abusing a second IOCTL handler&lt;/h3&gt;
&lt;p&gt;Having been able to freely invoke IOCTL handlers of the driver from user-mode, we looked for other capabilities that can be abused. We found one: the driver provided a capability to map any physical page into user-mode with RW permissions. Invoking this handler allowed a code running with low privileges to read-write beyond the process boundaries—to other processes or even to kernel space. This, of course, means a full machine compromise.&lt;/p&gt;
&lt;p&gt;We also worked with Huawei to fix this second vulnerability, which was assigned CVE-2019-5242. Huawei addressed the flaw in the same security advisory: https://www.huawei.com/en/psirt/security-advisories/huawei-sa-20190109-01-pcmanager-en.&lt;/p&gt;
&lt;p&gt;We presented our research at the Blue Hat IL Conference in February. Watch the &lt;a href=&quot;https://youtu.be/Ltzye0Cj9G8&quot;&gt;video recording here&lt;/a&gt;, and get the &lt;a href=&quot;https://msrnd-cdn-stor.azureedge.net/bluehat/bluehatil/2019/assets/doc/Who%20is%20Watching%20the%20Watchdog%20Uncovering%20a%20Privilege%20Escalation%20Vulnerability%20in%20OEM%20Driver.pdf&quot;&gt;slide deck here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;While the original alert turned out to be benign, in the sense that it didn’t detect an actual kernel threat like DOUBLEPULSAR, it did trigger an investigation that eventually led us to finding vulnerabilities. The two vulnerabilities we discovered in the driver prove the importance of designing software and products with security in mind. The two vulnerabilities we discovered in a driver prove the importance of designing software and products with security in mind. Security boundaries must be honored. Attack surface should be minimized as much as possible. In this case, the flaws could have been prevented if certain precautions were taken:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The device object created by the driver should be created with a DACL granting SYSTEM RW access (since only the vendor’s services were communicating directly with the driver)&lt;/li&gt;
&lt;li&gt;If a service should persist, developers should check that it’s not already provided by the OS before trying to implement a complex mechanism&lt;/li&gt;
&lt;li&gt;User-mode shouldn’t be allowed to perform privileged operations like writing to any physical page; if needed, the driver should do the actual writing for well-defined, hardware-related scenarios&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Microsoft’s &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/driversecurity/driver-security-checklist&quot;&gt;driver security checklist&lt;/a&gt; provides some guidelines for driver developers to help reduce the risk of drivers being compromised.&lt;/p&gt;
&lt;p&gt;Our discovery of the driver vulnerabilities also highlights the strength of &lt;a href=&quot;https://www.microsoft.com/en-us/windowsforbusiness/windows-atp?ocid=cx-blog-mmpc&quot;&gt;Microsoft Defender ATP&lt;/a&gt;’s sensors. These sensors expose anomalous behavior and give SecOps personnel the intelligence and tools to investigate threats, as we did.&lt;/p&gt;
&lt;p&gt;Anomalous behaviors typically point to attack techniques perpetrated by adversaries with only malicious intent. In this case, they pointed to a flawed design that can be abused. Nevertheless, Microsoft Defender ATP exposed a security flaw and protected customers before it can even be used in actual attacks.&lt;/p&gt;
&lt;p&gt;Not yet reaping the benefits of Microsoft Defender ATP’s &lt;a href=&quot;https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/insights-from-the-mitre-attack-based-evaluation-of-windows-defender-atp/&quot;&gt;industry-leading optics and detection capabilities&lt;/a&gt;? &lt;strong&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/windowsforbusiness/windows-atp?ocid=cx-blog-mmpc&quot;&gt;Sign up for free trial&lt;/a&gt;&lt;/strong&gt; today.&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;Amit Rapaport&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;(&lt;/em&gt;&lt;em&gt;&lt;a href=&quot;https://twitter.com/realAmitRap&quot;&gt;@realAmitRap&lt;/a&gt;)&lt;/em&gt;&lt;br/&gt;&lt;em&gt;Microsoft Defender Research team&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 21:27:57 +0000</pubDate>
<dc:creator>trtobe</dc:creator>
<og:type>article</og:type>
<og:title>From alert to driver vulnerability: Microsoft Defender ATP investigation unearths privilege escalation flaw - Microsoft Security</og:title>
<og:description>Our discovery of two privilege escalation vulnerabilities in a driver highlights the strength of Microsoft Defender ATP’s sensors. These sensors expose anomalous behavior and give SecOps personnel the intelligence and tools to investigate threats, as we did.</og:description>
<og:url>https://www.microsoft.com/security/blog/2019/03/25/from-alert-to-driver-vulnerability-microsoft-defender-atp-investigation-unearths-privilege-escalation-flaw/</og:url>
<og:image>https://www.microsoft.com/security/blog/wp-content/uploads/2019/03/Microsoft-Defender-ATP-kernel-initiating-code-injection-alert-thumb.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.microsoft.com/security/blog/2019/03/25/from-alert-to-driver-vulnerability-microsoft-defender-atp-investigation-unearths-privilege-escalation-flaw/</dc:identifier>
</item>
<item>
<title>The Lobster Programming Language</title>
<link>http://strlen.com/lobster/</link>
<guid isPermaLink="true" >http://strlen.com/lobster/</guid>
<description>&lt;p&gt;Lobster is a game programming language. Unlike other game making systems that focus on an engine/editor that happens to be able to call out to a scripting language, Lobster is a general purpose stand-alone programming language that comes with a built-in library suitable for making games and other graphical things. It is therefore not very suitable for non-programmers.&lt;/p&gt;
&lt;p&gt;It’s also meant to be portable (mostly courtesy of OpenGL/SDL/Freetype), allowing your games to be run on Windows, Mac OS X, iOS, Linux, Android and WebAssembly (in that order of maturity, currently).&lt;/p&gt;
&lt;p&gt;Lobster is Open Source (ZLIB license) and can be found on &lt;a href=&quot;https://github.com/aardappel/lobster&quot;&gt;github&lt;/a&gt;. Online copy of the full &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/aardappel/lobster/blob/master/lobster/docs/README_FIRST.html&quot;&gt;documentation&lt;/a&gt;. Discuss things in the &lt;a href=&quot;https://plus.google.com/communities/102851862468639498591&quot;&gt;google+ community&lt;/a&gt; or like the &lt;a href=&quot;https://www.facebook.com/lobsterprogramminglanguage&quot;&gt;Facebook page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;p&gt;Features have been picked for their suitability in a game programming language, and in particular to make code terse, quick to write and refactor. It is meant to not hold you back to get an idea going quickly. It is quite the opposite of a &lt;a href=&quot;http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html&quot;&gt;robust enterprise language&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Language
&lt;ul&gt;&lt;li&gt;Static Typing that still feels like a Dynamically Typed Language thanks to Flow-Sensitive Type-Inference and Specialization.&lt;/li&gt;
&lt;li&gt;Python-style indentation based syntax with C-style flavoring&lt;/li&gt;
&lt;li&gt;Lightweight Blocks / Anonymous Functions that make any function using them look identical to built-in control structures&lt;/li&gt;
&lt;li&gt;Vector operations (for math and many other builtins)&lt;/li&gt;
&lt;li&gt;Multimethods (dynamic dispatch on multiple arguments at once)&lt;/li&gt;
&lt;li&gt;First Class Stackful Asymmetric Coroutines.&lt;/li&gt;
&lt;li&gt;Compile time reference counting / borrow checker.&lt;/li&gt;
&lt;li&gt;Immutable “inline” structs (zero overhead).&lt;/li&gt;
&lt;li&gt;GIL-less, race-less distributed memory model multi-threading.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Implementation
&lt;ul&gt;&lt;li&gt;Choose between using the convenient bytecode VM, or compilation to C++ for extra speed.&lt;/li&gt;
&lt;li&gt;Reference Counting with cycle detection at exit, 95% of reference count ops removed at compile time.&lt;/li&gt;
&lt;li&gt;Debugging functionality (stack traces with full variable output).&lt;/li&gt;
&lt;li&gt;Dynamic code loading.&lt;/li&gt;
&lt;li&gt;Relatively fast (several times faster than Python/Ruby, about as fast as non-JIT Lua) and economical (low overhead memory allocation)&lt;/li&gt;
&lt;li&gt;Easy to deploy (engine/interpreter exe + compressed bytecode file)&lt;/li&gt;
&lt;li&gt;Modularly extendable with your own library of C++ functions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Engine
&lt;ul&gt;&lt;li&gt;High level interface to OpenGL functionality, very quick to get going with simple 2D geometric primitives&lt;/li&gt;
&lt;li&gt;3D primitive construction either directly from triangles, or using high level primitives made into meshes through marching cubes&lt;/li&gt;
&lt;li&gt;GLSL shaders (usable accross OpenGL &amp;amp; OpenGL ES 2 without changes)&lt;/li&gt;
&lt;li&gt;Accurate text rendering through FreeType&lt;/li&gt;
&lt;li&gt;Uniform input system for mouse &amp;amp; touch&lt;/li&gt;
&lt;li&gt;Simple sound system supporting .wav and .sfxr synth files.&lt;/li&gt;
&lt;li&gt;ImGui support.&lt;/li&gt;
&lt;li&gt;Comes with useful libraries written in Lobster for things like A* path finding and game GUIs&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;
&lt;p&gt;let’s start with syntax and blocks:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;find&lt;/span&gt;(xs, fun):
    &lt;span&gt;for&lt;/span&gt;(xs) x, i:
        &lt;span&gt;if&lt;/span&gt; fun(x):
            &lt;span&gt;return&lt;/span&gt; i
    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;

var r &lt;span&gt;=&lt;/span&gt; &lt;span&gt;2&lt;/span&gt;
var i &lt;span&gt;=&lt;/span&gt; find [ &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt; ]: _ &lt;span&gt;&amp;gt;&lt;/span&gt; r&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can learn a lot about the language from this tiny example:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;find&lt;/code&gt; is a function that takes a vector and a function as argument, and returns the index of the first element for which that function returns true, or -1 if none.&lt;/li&gt;
&lt;li&gt;It uses an indentation based syntax, though in this example the &lt;code&gt;for-if-return&lt;/code&gt; could also have been written on a single line.&lt;/li&gt;
&lt;li&gt;Blocks / anonymous function arguments are always written directly after the call they are part of, and generally have the syntax of a (possibly empty) list of arguments (separated by commas), separated from the body by a &lt;code&gt;:&lt;/code&gt;. The body may either follow directly, or start a new indentation block on the next line. Additionally, if you don’t feel like declaring arguments, you may use variable names starting with an &lt;code&gt;_&lt;/code&gt; inside the body that are automatically declared.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt; look like language features, but they have no special syntactical status compared to &lt;code&gt;find&lt;/code&gt;. Any such functions you add will work with the same syntax.&lt;/li&gt;
&lt;li&gt;Notice the complete lack of type declarations. The code is fully statically typed, however, type inference is smart enough to assign types to everything, and functions like &lt;code&gt;find&lt;/code&gt; get specialized to work on whatever arguments they are called with, in this case a list of ints, and a specific lambda. Specialization not only increases the range of code type inference can handle, it allows the compiler to optimize this particular case as if you had hard-coded the loop (much like C++ templates).&lt;/li&gt;
&lt;li&gt;blocks/functions may refer to “free variables”, i.e. variables declared outside of their own scope, like &lt;code&gt;r&lt;/code&gt;. This is essential to utilize the full potential of blocks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt; will contain &lt;code&gt;2&lt;/code&gt; at the end of this (the index of element &lt;code&gt;3&lt;/code&gt;). It does not clash with the other &lt;code&gt;i&lt;/code&gt; because of lexical scoping. Here &lt;code&gt;=&lt;/code&gt; means assignment, and &lt;code&gt;var&lt;/code&gt; defines a new variable (you can also use &lt;code&gt;:&lt;/code&gt; as a shorthand for &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;=&lt;/code&gt; together).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt; returns from &lt;code&gt;find&lt;/code&gt;, not from the enclosing function (which would be the block passed to &lt;code&gt;if&lt;/code&gt;). In fact, it can be made to return from any named function, which makes it powerful enough to implement exception handling in Lobster code, instead of part of the language.&lt;/li&gt;
&lt;li&gt;Not only are higher order functions like &lt;code&gt;find&lt;/code&gt; easy to write and use, you can convert any such functions into coroutines trivially, e.g. &lt;code&gt;coroutine for(10)&lt;/code&gt; creates a coroutine object that yields values 0..9 on demand. Because in lobster coroutines and higher order functions are written in the same way (there is no yield keyword), they are more composable and interchangable.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Types, multimethods, immutables and vector ops:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;17&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;struct point { x, y }
struct circle : point { radius }
struct ray : point { &lt;span&gt;dir&lt;/span&gt; }

&lt;span&gt;def&lt;/span&gt; &lt;span&gt;intersect&lt;/span&gt;(p:point, c:circle): magnitude(p &lt;span&gt;-&lt;/span&gt; c) &lt;span&gt;&amp;lt;&lt;/span&gt; c&lt;span&gt;.&lt;/span&gt;radius
&lt;span&gt;def&lt;/span&gt; &lt;span&gt;intersect&lt;/span&gt;(r:ray, c:circle): &lt;span&gt;...&lt;/span&gt;
&lt;span&gt;def&lt;/span&gt; &lt;span&gt;intersect&lt;/span&gt;(c1:circle, c2:circle): &lt;span&gt;...&lt;/span&gt;
&lt;span&gt;...&lt;/span&gt;

&lt;span&gt;assert&lt;/span&gt; intersect(point { &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt; }, circle { &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt; })&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What we learn here:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;we can declare custom datatypes, that can optionally inherit from existing datatypes&lt;/li&gt;
&lt;li&gt;we can declare them with either &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt;, where the former means the object is immutable and passed by value: its fields may not be assigned to after construction. This enforces more functional style programming for objects which can be seen as unit things (like points and vectors).&lt;/li&gt;
&lt;li&gt;objects are very much like the typed version of the generic vectors we saw earlier, and are treated similarly by the language in many ways (e.g. vector operations also work on them)&lt;/li&gt;
&lt;li&gt;We can declare multiple version of a function, and the language will pick dynamically which one to run, based on all arguments (most OO languages only use the first argument for this, thus writing a function like &lt;code&gt;intersect&lt;/code&gt; requires &lt;em&gt;double dispatch&lt;/em&gt;, i.e. 2 levels of methods). If two functions apply to a certain set of arguments, the most specific one (starting from the first argument) is picked. If such an ordering can’t be determined at compile time, that is a compile time error. If no functions apply at runtime, that’s a runtime error (which you can avoid with a catch-all default function version with no types).&lt;/li&gt;
&lt;li&gt;we can specify types for arguments with &lt;code&gt;:&lt;/code&gt;, also for single functions. Besides their use in multimethods, they can be used in regular functions to make compile time type errors simpler. You can even specify the type with &lt;code&gt;::&lt;/code&gt;, which allows you direct access to all members of the type, so you can write &lt;code&gt;x&lt;/code&gt; instead of &lt;code&gt;p.x&lt;/code&gt; etc.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Enough of dry programming language stuff, how do we draw?&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;include &lt;span&gt;&quot;vec.lobster&quot;&lt;/span&gt;
include &lt;span&gt;&quot;color.lobster&quot;&lt;/span&gt;

const directions &lt;span&gt;=&lt;/span&gt; [ xy_0, xy_x, xy_y ]

&lt;span&gt;def&lt;/span&gt; &lt;span&gt;sierpinski&lt;/span&gt;(depth):
    &lt;span&gt;if&lt;/span&gt; depth:
        gl_scale &lt;span&gt;0.5&lt;/span&gt;:
            &lt;span&gt;for&lt;/span&gt;(directions) d:
                gl_translate d:
                    sierpinski(depth &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;)
    &lt;span&gt;else&lt;/span&gt;:
        gl_polygon(directions)

fatal(gl_window(&lt;span&gt;&quot;sierpinski&quot;&lt;/span&gt;, &lt;span&gt;512&lt;/span&gt;, &lt;span&gt;512&lt;/span&gt;))

&lt;span&gt;while&lt;/span&gt; gl_frame():
    &lt;span&gt;if&lt;/span&gt; gl_wentdown(&lt;span&gt;&quot;escape&quot;&lt;/span&gt;): &lt;span&gt;return&lt;/span&gt;
    gl_clear(color_black)
    gl_scale(&lt;span&gt;float&lt;/span&gt;(gl_windowsize()))
    sierpinski(&lt;span&gt;7&lt;/span&gt;)&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which produces:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://strlen.com/img/lobster/sierpinski.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;What do we see:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if we skip to &lt;code&gt;gl_window&lt;/code&gt;, this creates the window and sets up OpenGL basics. This can theoretically fail which will return us an error string, but here for the example we’re lazy.&lt;/li&gt;
&lt;li&gt;rendering in Lobster centers around frames like in most game engines, so we redraw everything every time (this example has no animation or interaction, so that looks a bit silly). &lt;code&gt;gl_frame&lt;/code&gt; takes care not only of frame swapping, but updating input etc as well&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gl_scalevec&lt;/code&gt; allows us to scale all rendering by specifying the unit size (compared to the previous scale, which by default is pixel size). Using the current window size thus gets us a canvas with a resolution of 1.0 x 1.0 which is convenient for the algorithm we’re about to run&lt;/li&gt;
&lt;li&gt;The include pulls in definitions for 2d/3d/4d vectors and some useful constants (e.g. &lt;code&gt;vec_0&lt;/code&gt; is a vector of all zeroes).&lt;/li&gt;
&lt;li&gt;The recursive function then keeps subdividing and scaling in 3 directions until it gets to the bottom of the recursion where it draws the triangles&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To see more about the builtin functionality of Lobster (graphics or otherwise), check out the &lt;a href=&quot;http://htmlpreview.github.io/?https://raw.githubusercontent.com/aardappel/lobster/master/lobster/docs/builtin_functions_reference.html&quot;&gt;builtin functions reference&lt;/a&gt; (this particular file may be out of date, it can be regenerated by the running &lt;code&gt;lobster -r&lt;/code&gt;). You can also check out draft version of the full Lobster &lt;a href=&quot;http://htmlpreview.github.io/?https://github.com/aardappel/lobster/blob/master/lobster/docs/README_FIRST.html&quot;&gt;documentation&lt;/a&gt;, in particular the &lt;a href=&quot;http://htmlpreview.github.io/?https://raw.githubusercontent.com/aardappel/lobster/master/lobster/docs/language_reference.html&quot;&gt;Language Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most recent version of everything is on &lt;a href=&quot;https://github.com/aardappel/lobster&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel like discussing Lobster? There’s a &lt;a href=&quot;https://plus.google.com/u/0/communities/102851862468639498591&quot;&gt;Google+ community&lt;/a&gt; for it, and &lt;a href=&quot;https://www.facebook.com/lobsterprogramminglanguage&quot;&gt;Facebook page&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 20:49:39 +0000</pubDate>
<dc:creator>openbasic</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://strlen.com/lobster/</dc:identifier>
</item>
<item>
<title>Show HN: Thoughter</title>
<link>https://aytwit.com/thoughter</link>
<guid isPermaLink="true" >https://aytwit.com/thoughter</guid>
<description>&lt;div class=&quot;section_paragraph&quot; readability=&quot;18.068057080132&quot;&gt;The first project out of Aytwit's software research labs. Sometimes you want to ask someone a question or tell them a secret and you suspect or hope they're thinking the same thing, but it's uncomfortable to bring up. &lt;a href=&quot;https://aytwit.com/blog/thoughter_origin_story&quot;&gt;This is why Thoughter was created&lt;/a&gt;. For example let's say it's the holidays and a father and son had a fight a few years ago and haven't spoken since. The father pushes a thought to his son like &quot;I miss you &lt;span class=&quot;hashtag&quot;&gt;#reunite&lt;/span&gt;&quot; that lasts one week. If the son pushes a thought to his father within that time containing the same hashtag then they will both receive an email containing the other's message. Otherwise nothing happens. To help his chances the father can &lt;a href=&quot;https://aytwit.com/thoughter#hints&quot;&gt;have a hint sent&lt;/a&gt; to his son that &lt;span class=&quot;emphasized_text&quot;&gt;someone&lt;/span&gt; wants to &lt;span class=&quot;hashtag&quot;&gt;#reunite&lt;/span&gt; but it won't say who. It's like the ego-saving technique in high school where a guy asks his friend to ask a girl if &lt;span class=&quot;emphasized_text&quot;&gt;her&lt;/span&gt; friend likes him, &lt;a href=&quot;https://aytwit.com/about#technical_details&quot;&gt;but using internet crypto magic instead&lt;/a&gt;.&lt;/div&gt;

&lt;ul&gt;&lt;li&gt;You're romantically interested in someone from your class or office and think they might also be interested but you have cold feet, &lt;span class=&quot;hashtag&quot;&gt;#wannaGoOut&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Two friends are really busy and don't want to disturb each other but want to know how the other person is doing, &lt;span class=&quot;hashtag&quot;&gt;#justCheckingUp&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;New couple is not sure if the other person wants to take it to the next level, &lt;span class=&quot;hashtag&quot;&gt;#1stBase&lt;/span&gt;, &lt;span class=&quot;hashtag&quot;&gt;#2ndBase&lt;/span&gt;, &lt;span class=&quot;hashtag&quot;&gt;#3rdBase&lt;/span&gt;, &lt;span class=&quot;hashtag&quot;&gt;#4thBase&lt;/span&gt; (as appropriate).&lt;/li&gt;
&lt;li&gt;Longtime couple, both people want to break up but don't want to hurt the other person, &lt;span class=&quot;hashtag&quot;&gt;#breakup&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Married couple with communication problems, both want to get intimate after a long drought but not sure if the other wants to, &lt;span class=&quot;hashtag&quot;&gt;#letsGetItOn&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Married couple trying to stick to a new diet and support each other, but both want to pig out tonight, &lt;span class=&quot;hashtag&quot;&gt;#screwTheDiet&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;You have a dream about somebody, want to see if they had a dream about you too, &lt;span class=&quot;hashtag&quot;&gt;#dreamBuddies&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Various other telepathic experiments, &lt;span class=&quot;hashtag&quot;&gt;#whateverTheyMayBe&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Bunch of coworkers want to see if everyone else thinks the new boss is a jerk, &lt;span class=&quot;hashtag&quot;&gt;#mutiny&lt;/span&gt; (when Thoughter supports multiple parties).&lt;/li&gt;
&lt;li&gt;Estranged family members want to reconnect over the holidays, &lt;span class=&quot;hashtag&quot;&gt;#reunite&lt;/span&gt; (as mentioned above).&lt;/li&gt;
&lt;li&gt;Two people want to compare potentially embarrassing interests like bucket list items, or values, or sexual preferences, or, &lt;span class=&quot;hashtag&quot;&gt;#wellLetsLeaveItAtThat&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;Couple on their first date at a restaurant they both don't like but not sure if the other person feels the same way, &lt;span class=&quot;hashtag&quot;&gt;#wannaLeave&lt;/span&gt;. &lt;a href=&quot;https://aytwit.com/blog/thoughter_deep_example&quot;&gt;Explore this last case in more detail here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section_paragraph&quot; readability=&quot;20.534456355283&quot;&gt;No! In the &lt;span class=&quot;hashtag&quot;&gt;#reunite&lt;/span&gt; example, the father's data will be deleted after one week (or on thought match), and encrypted the entire time so that only the father and son, nobody else, not even Thoughter itself, can decrypt it. Everything is private and anonymous to an utterly paranoid degree, with no creepy tracking or ad integration of any kind. The basic idea is to &lt;a href=&quot;https://aytwit.com/donate&quot;&gt;ask humbly for donations&lt;/a&gt; and use the money to ensure your privacy, even from the service itself, instead of selling your data to the highest bidder and pretending that the service is free. Radical idea, and maybe the world's not ready for it. &lt;a href=&quot;https://aytwit.com/about#privacy&quot;&gt;But more on all this boring privacy stuff here&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;When a Patron A pushes a thought to another Patron B, Patron A can have Thoughter send a hint to Patron B without revealing the whole thought or who it's from. This helps solve the adoption problem that Thoughter would otherwise have. That is, Patron B might not even know that Thoughter exists in the first place, in which case Patron A's thought would obviously never get matched. If the service becomes popular then hints will become less necessary. Here are the following hint types:&lt;/p&gt;
&lt;br/&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;bullet_def&quot;&gt;None&lt;/span&gt; - easy one, no hint is sent. You must rely either on real-life hints (&quot;Hey did you hear about this Thoughter thing?&quot;), or that the other person knows about Thoughter already.&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;bullet_def&quot;&gt;Anonymous&lt;/span&gt; - The other person is told that &lt;span class=&quot;emphasized_text&quot;&gt;someone&lt;/span&gt; is thinking &lt;span class=&quot;emphasized_text&quot;&gt;something&lt;/span&gt; about them, but not who or what.&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;bullet_def&quot;&gt;Hashtag-Specific&lt;/span&gt; - The other person is given the exact hashtag you used in your thought. They just have to guess who sent it.&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;bullet_def&quot;&gt;Who It's From&lt;/span&gt; - The other person is told that &lt;span class=&quot;emphasized_text&quot;&gt;you specifically&lt;/span&gt; are thinking something about them. They just have to guess which hashtag you used.&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 03 Apr 2019 20:40:05 +0000</pubDate>
<dc:creator>dougk16</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://aytwit.com/thoughter</dc:identifier>
</item>
<item>
<title>Using a Yubikey as smartcard for SSH public key authentication</title>
<link>http://www.undeadly.org/cgi?action=article;sid=20190302235509</link>
<guid isPermaLink="true" >http://www.undeadly.org/cgi?action=article;sid=20190302235509</guid>
<description>&lt;div class=&quot;article_header&quot; readability=&quot;32&quot;&gt;
&lt;p class=&quot;attrib&quot;&gt;Contributed by Sebastian Benoit (benno@) on &lt;time datetime=&quot;2019-02-26T15:00:20Z&quot;&gt;2019-02-26&lt;/time&gt; from the token dept.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;SSH is an awesome tool. Logging into other machines securely is so pervasive to us sysadmins nowadays that few of us think about what's going on underneath. Even more so once you start using the more advanced features such as the &lt;a href=&quot;https://man.openbsd.org/ssh-agent&quot;&gt;ssh-agent&lt;/a&gt;, &lt;a href=&quot;https://man.openbsd.org/ssh#A&quot;&gt;agent-forwarding&lt;/a&gt; and &lt;a href=&quot;https://man.openbsd.org/ssh_config#ProxyJump&quot;&gt;ProxyJump&lt;/a&gt;. When doing so, care must be taken in order to not compromise one's logins or ssh keys.&lt;/p&gt;
&lt;p&gt;You might have heard of &lt;a href=&quot;https://www.yubico.com/&quot; rel=&quot;nofollow&quot;&gt;Yubikeys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These are &lt;abbr&gt;USB&lt;/abbr&gt; authentication devices that support several different modes: they can be used for &lt;abbr&gt;OTP&lt;/abbr&gt; (One Time Password) authentication, they can store OpenPGP keys, be a 2-factor authentication token and they can act as a SmartCard.&lt;/p&gt;
&lt;p&gt;In OpenBSD, you can use them for Login (with &lt;a href=&quot;https://man.openbsd.org/login_yubikey.8&quot; rel=&quot;nofollow&quot;&gt;login_yubikey(8)&lt;/a&gt;) with &lt;abbr&gt;OTP&lt;/abbr&gt; since 2012, and there are many descriptions available(1) how to set this up.&lt;/p&gt;
&lt;p&gt;I tried this years ago, and while One Time Passwords are nice, they have a few downsides: basically, you have to be root to configure each host where you use them. And you need some other way to access the machine, in case you lock yourself out, for example by losing the &lt;abbr&gt;OTP&lt;/abbr&gt; device, but this is not as easy as adding ssh keys to the authorized_keys file, because &lt;abbr&gt;OTP&lt;/abbr&gt; is configured through the BSD Authentication system.&lt;/p&gt;
&lt;p&gt;But Yubikeys offer some more features:&lt;br/&gt;In its OpenPGP mode, they can store &lt;abbr&gt;PGP&lt;/abbr&gt; &lt;abbr&gt;RSA&lt;/abbr&gt; keys. Thus, the Yubikey will take care of the &lt;abbr&gt;RSA&lt;/abbr&gt; en- and decryption, the private key won't leave the Yubikey and is inaccessible from the computer. Since these are &lt;abbr&gt;RSA&lt;/abbr&gt; keys, they can also be used for SSH authentication. Again, there are descriptions online(2), but all of them tell you to use &lt;em&gt;gpg-agent&lt;/em&gt; from GnuPG with its &lt;em&gt;ssh-agent&lt;/em&gt; functionality. Your &lt;em&gt;ssh&lt;/em&gt;-client will then talk through &lt;em&gt;gpg-agent&lt;/em&gt; (instead of the OpenSSH ssh-agent) with the Yubikey.&lt;/p&gt;
&lt;p&gt;I did not like that very much. GnuPG's user interface is a disaster, and reading its documentation is a pain. Working with OpenBSD has taught me that good documentation is a must, because without that, how can you use the software safely? The documentation also shows how much the developers care. So gpg is out, at least for SSH authentication.&lt;/p&gt;
&lt;p&gt;However, &lt;em&gt;&lt;a href=&quot;https://man.openbsd.org/ssh.1&quot; rel=&quot;nofollow&quot;&gt;ssh(1)&lt;/a&gt;&lt;/em&gt; has another method to talk to smartcards. It can load a &lt;em&gt;PKCS#11&lt;/em&gt; library that contains the functions to access the SmartCard. On OpenBSD, this library is provided by the &lt;em&gt;opensc&lt;/em&gt; package. In turn, it needs the &lt;em&gt;pcsc-lite&lt;/em&gt; package, that actually talks to a smartcard reader.&lt;/p&gt;
&lt;p&gt;During the recent a2k19 hackathon I saw commits to ssh's PKCS#11 code, and decided to again attempt to use my Yubikeys, this time using its &quot;&lt;abbr&gt;PIV&lt;/abbr&gt;&quot; smartcard functionality. Of course this did not work right away. I had to create the &lt;em&gt;yubico-piv-tool&lt;/em&gt; port. I also found a bug in ssh, where it would crash on encountering a smartcard protected with a &lt;abbr&gt;PIN&lt;/abbr&gt;, that was &lt;a href=&quot;https://marc.info/?l=openbsd-cvs&amp;amp;m=154932350404406&amp;amp;w=2&quot; rel=&quot;nofollow&quot;&gt;promptly fixed&lt;/a&gt; by Markus Friedl and Damien Miller.&lt;/p&gt;
&lt;p&gt;I tried the following with a Yubikey NEO and a Yubikey 4. Newer Yubikeys have more features. The NEO only supports &lt;abbr&gt;RSA&lt;/abbr&gt; keys, Yubikey 4 and 5 support Elliptic Curve &lt;abbr&gt;ECDSA&lt;/abbr&gt; keys. They also have another nice feature &quot;touch-policy=always&quot;: you have to touch the Yubikey to be able to use it (in addition to entering the &lt;abbr&gt;PIN&lt;/abbr&gt;). That way it cannot be used without your consent, with a method independent from your computer keyboard.&lt;/p&gt;
&lt;p&gt;To get started, you need the following packages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ykpers (library and tools to program Yubikeys)&lt;/li&gt;
&lt;li&gt;yubico-piv-tool (Yubico Personal Identity Verification (&lt;abbr&gt;PIV&lt;/abbr&gt;) Tool)&lt;/li&gt;
&lt;li&gt;pcsc-lite (resource manager for &lt;abbr&gt;PC&lt;/abbr&gt;/&lt;abbr&gt;SC&lt;/abbr&gt;)&lt;/li&gt;
&lt;li&gt;opensc (set of libraries and utilities to access smart cards)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now use the ykpersonalize tool to bring the Yubikey into &quot;&lt;abbr&gt;OTP&lt;/abbr&gt;+&lt;abbr&gt;U2F&lt;/abbr&gt;+&lt;abbr&gt;CCID&lt;/abbr&gt;&quot; mode. Plug in the Yubikey and run&lt;/p&gt;
&lt;pre&gt;
  ykpersonalize -m86
&lt;/pre&gt;
&lt;p&gt;Normally, the key does not work as a smartcard, and this is needed to activate that functionality. Unplug the Yubikey again.&lt;/p&gt;
&lt;p&gt;Now run&lt;/p&gt;
&lt;pre&gt;
  doas pcscd --foreground --debug
&lt;/pre&gt;
&lt;p&gt;in a separate terminal and plug the key back in. In &lt;a href=&quot;https://man.openbsd.org/dmesg&quot;&gt;dmesg&lt;/a&gt; you should see something like&lt;/p&gt;
&lt;pre&gt;
  uhidev1 at uhub0 port 1 configuration 1 interface 1 &quot;Yubico Yubikey 4 OTP+U2F+CCID&quot; rev 2.00/4.37 addr 3
  ugen0 at uhub0 port 1 configuration 1 &quot;Yubico Yubikey 4 OTP+U2F+CCID&quot; rev 2.00/4.37 addr 3
&lt;/pre&gt;
&lt;p&gt;and pcscd should show that it recognised the Yubikey as a cardreader.&lt;/p&gt;
&lt;pre&gt;
  $ yubico-piv-tool -aversion 
  Application version 4.3.7 found.
&lt;/pre&gt;
&lt;p&gt;can be used to test the communication with the Yubikey.&lt;/p&gt;
&lt;p&gt;The next step is to configure the Yubikey. The configuration and use of the Yubikey's function is protected with a management key, a &lt;abbr&gt;PIN&lt;/abbr&gt; and a &lt;abbr&gt;PUK&lt;/abbr&gt;. You should change the defaults here. For example, you can generate and set a key like this&lt;/p&gt;
&lt;pre&gt;
  dd if=/dev/random bs=1 count=24 2&amp;gt;/dev/null | hexdump -v -e '/1 &quot;%02X&quot;'
  yubico-piv-tool -aset-mgm-key -n&amp;lt;key&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The default &lt;abbr&gt;PIN&lt;/abbr&gt; and &lt;abbr&gt;PUK&lt;/abbr&gt; are 123456 and 12345678 and you can configure your own (up to 8 digits) with&lt;/p&gt;
&lt;pre&gt;
  yubico-piv-tool -achange-pin -P123456 -N&amp;lt;PIN&amp;gt;
  yubico-piv-tool -achange-puk -P12345678 -N&amp;lt;PUK&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Make sure that you remember or store these somewhere safe. The &lt;abbr&gt;PUK&lt;/abbr&gt; can be used to reset the &lt;abbr&gt;PIN&lt;/abbr&gt;, and the whole key can be reset to its default, but all configuration including your SSH key will be lost if you need to do that.&lt;/p&gt;
&lt;p&gt;The Yubikey has the capability to generate the key on the device itself. If you do this, the private key never leaves the Yubikey.&lt;/p&gt;
&lt;pre&gt;
  yubico-piv-tool --key=&amp;lt;key&amp;gt; -s 9a -a generate -o rsa.public
&lt;/pre&gt;
&lt;p&gt;where &lt;em&gt;--key=&amp;lt;key&amp;gt;&lt;/em&gt; is the management key that was configured above. The public key is written to the file &lt;em&gt;rsa.public&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alternatively (and probably the preferred method, see below) you can generate a key (not protected with a passphrase) on your computer and import it into the Yubikey. These commands are for an &lt;abbr&gt;ECDSA&lt;/abbr&gt; key, adapt for &lt;abbr&gt;RSA&lt;/abbr&gt;:&lt;/p&gt;
&lt;pre&gt;
  ssh-keygen -m PEM -t ecdsa -b 384 -C yubikey_ecdsa384 -f yubikey_ecdsa384
&lt;/pre&gt;
&lt;p&gt;This also creates a &lt;em&gt;yubikey_ecdsa384.pub&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;Next we can load the key onto the Yubikey. The Yubikey has something called &quot;slots&quot; which are used to differentiate keys for different uses (3), like different subkeys in &lt;abbr&gt;PGP&lt;/abbr&gt; for signing and encryption. Here we use slot 9a:&lt;/p&gt;
&lt;pre&gt;
  mv yubikey_ecdsa384 yubikey_ecdsa384.key   # just to rename the key
  yubico-piv-tool --key=&amp;lt;key&amp;gt; --pin-policy=once --touch-policy=always -s 9a \
      -a import-key -i yubikey_ecdsa384.key
&lt;/pre&gt;
&lt;p&gt;Some smartcard software expects that the public key comes with a certificate. So now we self-sign the public key to get a certificate in file &lt;em&gt;cert.pem&lt;/em&gt;. For this step we need the public key in &lt;abbr&gt;PEM&lt;/abbr&gt; format instead of the SSH format:&lt;/p&gt;
&lt;pre&gt;
  openssl ec -inform PEM -in yubikey_ecdsa384.key -outform PEM \
      -pubout -out yubikey_ecdsa384.public

  yubico-piv-tool -a verify -a selfsign --valid-days 3650 -s 9a \
      -S &quot;/CN=SSH key yubikey_ecdsa384/&quot; -i yubikey_ecdsa384.public -o cert.pem
&lt;/pre&gt;
&lt;p&gt;This command already uses the private key that we loaded on the Yubikey. That's why you are asked for the &lt;abbr&gt;PIN&lt;/abbr&gt;, and (when using a Yubikey 4) have to touch the Yubikey to authorise access to the key.&lt;/p&gt;
&lt;p&gt;Import the certificate into the Yubikey:&lt;/p&gt;
&lt;pre&gt;
  yubico-piv-tool --key=&amp;lt;key&amp;gt; --pin-policy=once --touch-policy=always \
      -a import-certificate -s 9a -i cert.pem
&lt;/pre&gt;
&lt;p&gt;At this point, unplug the Yubikey, and put it back into the &lt;abbr&gt;USB&lt;/abbr&gt; slot again.&lt;/p&gt;
&lt;p&gt;Add the contents of the &lt;em&gt;yubikey_ecdsa384.pub&lt;/em&gt; file to the &lt;em&gt;authorized_keys&lt;/em&gt; file on a host you want to login to.&lt;/p&gt;
&lt;p&gt;Now you are ready to use it:&lt;/p&gt;
&lt;pre&gt;
 $ ssh -I/usr/local/lib/pkcs11/opensc-pkcs11.so &amp;lt;host&amp;gt;
 Enter PIN for 'SSH key yubikey_ecdsa384': …
&lt;/pre&gt;
&lt;p&gt;If this works, delete the &lt;em&gt;yubikey_ecdsa384.key&lt;/em&gt; file from your system:&lt;/p&gt;
&lt;pre&gt;
 $ rm yubikey_ecdsa384.key
&lt;/pre&gt;
&lt;p&gt;Instead of the &lt;em&gt;-I&lt;/em&gt; option, you can use &lt;em&gt;PKCS11Provider /usr/local/lib/pkcs11/opensc-pkcs11.so&lt;/em&gt; in your &lt;a href=&quot;https://man.openbsd.org/ssh_config&quot;&gt;ssh configuration file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also tell your ssh-agent to use the Yubikey:&lt;/p&gt;
&lt;pre&gt;
 $ ssh-add -s/usr/local/lib/pkcs11/opensc-pkcs11.so
&lt;/pre&gt;
&lt;p&gt;and your agent will then talk to the Yubikey for authentication.&lt;/p&gt;
&lt;p&gt;I mentioned above, that one should not use the command to generate the key on the Yubikey itself. The Yubikey 4 has a Infineon chip. In 2017, the firmware used to generate the &lt;abbr&gt;RSA&lt;/abbr&gt; keys on these chips was found to produce predictable &lt;abbr&gt;RSA&lt;/abbr&gt; keys, the same security bug that compromised millions of Estonian ID cards. Yubico reacted to this by exchanging all Yubikey 4 devices against new ones, free of charge. While this shows that they have customer support, I still don't trust the key generation on such a device, and rather use libressl or openssh running on an OpenBSD host to generate the key. If you don't want the key file to end up on your disk drive, run above commands [&lt;abbr&gt;i.e.&lt;/abbr&gt; ssh-keygen and so on - &lt;abbr&gt;Ed&lt;/abbr&gt;.] in a ramdisk directory mounted with &lt;a href=&quot;https://man.openbsd.org/mount_mfs&quot;&gt;mount_mfs(8)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A few thoughts about the security of this.&lt;/p&gt;
&lt;p&gt;Let's compare it to the usual method of using SSH. In a classical scenario, you have an ssh key stored in &lt;em&gt;~/.ssh/&lt;/em&gt;. To access it, you enter a passphrase. The passphrase is used to decrypt the private key. It is then used to decrypt a authentication challenge to prove your identity to a server you want to log in to.&lt;/p&gt;
&lt;p&gt;With the Yubikey, the challenge is passed to the Yubikey for decryption. To do so, you have to enter a 4-8 digit PIN code.&lt;/p&gt;
&lt;p&gt;The PIN code protects access to it and is much shorter than a passphrase. But the passphrase of a normal ssh key needs to be much longer so that the key cannot be decrypted through bruteforce password guessing by someone who was able to get hold of the key file. Since nobody can get at the ssh key thats in the Yubikey, a short pin will be fine - at least that's what the system promises.&lt;/p&gt;
&lt;p&gt;The fact that you need to enter a long passphrase makes a lot of people use ssh-agent. If you log in and out of machines a lot, it's cumbersome to type the passphrase all the time. The ssh-agent stores the decrypted key for you in &lt;abbr&gt;RAM&lt;/abbr&gt;, and ssh-clients ask the ssh-agent to do the authentication proof for them, much like the Yubikey does.&lt;/p&gt;
&lt;p&gt;If you use ssh-agent because you don't want to enter your passphrase all the time, maybe you would consider entering a shorter &lt;abbr&gt;PIN&lt;/abbr&gt; more often? In that case the Yubikey is a more secure alternative, especially in combination with the optional touch-policy.&lt;/p&gt;
&lt;p&gt;Both passphrase and &lt;abbr&gt;PIN&lt;/abbr&gt; can be attacked with keyboard sniffers. But while the passphrase can be used on a stolen ssh key, the pin is only usable while the Yubikey is physically present. The touch-policy option makes the window of opportunity for an attacker even smaller.&lt;/p&gt;
&lt;p&gt;This is also true if you use agent-forwarding: once you unplug the Yubikey, the agent cannot access it anymore.&lt;/p&gt;
&lt;p&gt;So the Yubikey reduces the risk of leaking private keys from your computer, however it is not a perfect protection against an attacker who has gained access to your computer. You should probably have a plan to remove compromised (or just physically lost) keys from servers and replace them.&lt;/p&gt;
&lt;p&gt;Of course this does not consider the additional attack surface created by the components opensc and pcscd. I have not looked at this in detail yet.&lt;/p&gt;
&lt;p&gt;(1) &lt;a href=&quot;https://undeadly.org/cgi?action=article;sid=20130616112437&quot; rel=&quot;nofollow&quot;&gt;Using Yubikey For SSH Multi-Factor Authentication, Brandon Mercer, undeadly.org&lt;/a&gt;&lt;br/&gt;(2) &lt;a href=&quot;https://www.esev.com/blog/post/2015-01-pgp-ssh-key-on-Yubikey-neo/&quot; rel=&quot;nofollow&quot;&gt;PGP and SSH keys on a Yubikey NEO, Eric Severance&lt;/a&gt;&lt;br/&gt;(3) &lt;a href=&quot;https://developers.yubico.com/PIV/Introduction/Certificate_slots.html&quot; rel=&quot;nofollow&quot;&gt;PIV certificate slots, developers.yubico.com&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 18:56:11 +0000</pubDate>
<dc:creator>sverige</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.undeadly.org/cgi?action=article;sid=20190302235509</dc:identifier>
</item>
<item>
<title>Defence Against the Docker Arts</title>
<link>https://blog.heroku.com/defence-against-the-docker-arts</link>
<guid isPermaLink="true" >https://blog.heroku.com/defence-against-the-docker-arts</guid>
<description>&lt;p&gt;When we open-sourced &lt;a href=&quot;https://blog.heroku.com/buildpacks&quot;&gt;buildpacks&lt;/a&gt; nearly seven years ago, we knew they would simplify the application deployment process. After a developer runs &lt;code&gt;git push heroku master&lt;/code&gt;, a buildpack ensures the application's dependencies and compilation steps are taken care of as part of the deploy.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.heroku.com/buildpacks-go-cloud-native&quot;&gt;As previously announced&lt;/a&gt;, we've taken the same philosophies that made buildpacks so successful and applied them towards creating &lt;a href=&quot;https://buildpacks.io/&quot;&gt;Cloud Native Buildpacks&lt;/a&gt; (CNB), a standard for turning source code into &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; images without the need for Dockerfiles. In this post, we'll take a look at how CNBs work, how they aim to solve many of the problems with that exist with Dockerfile, and how you can use them with the recent &lt;a href=&quot;https://medium.com/buildpacks/&quot;&gt;beta release of the buildpacks.io project&lt;/a&gt;. As part of this release, we’ve created a Heroku buildpacks builder image for Ruby, Node.js, Java, Python, PHP, and Go that works with the CNB tooling.&lt;/p&gt;
&lt;p&gt;Let’s start by creating a strawman. We’ll walk through some of the tedious but essential steps necessary to create a Dockerfile for a Ruby on Rails app.&lt;/p&gt;

&lt;p&gt;Most developers use Docker by creating a &lt;code&gt;Dockerfile&lt;/code&gt;, which defines a build process that generates a Docker image. For example, let's say you have an existing Rails project you want to deploy as a Docker container. You'll need to start from a base Ruby image, and include additional packages that are necessary for the application to run. If you've never used Docker before, you probably have to learn several things just to get this far:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;dockerfile&quot;&gt;FROM ruby
RUN apt-get update -qq \
  &amp;amp;&amp;amp; apt-get install -y nodejs libpq-dev build-essential
COPY . /app
WORKDIR /app
RUN bundle install
RUN bundle exec rake assets:precompile
EXPOSE 5000
CMD bin/rails s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In addition to Ruby, a Docker image for a Rails app also needs several additional Apt packages. It must include the &lt;code&gt;nodejs&lt;/code&gt; runtime in order to run the necessary tooling to precompile assets, &lt;code&gt;libpq-dev&lt;/code&gt; is required for communicating with a Postgres database, and &lt;code&gt;build-essential&lt;/code&gt; is required for &lt;code&gt;gcc&lt;/code&gt; to build native extensions for several Ruby gems.&lt;/p&gt;
&lt;p&gt;This &lt;code&gt;Dockerfile&lt;/code&gt; is enough to run a simple Rails application in production, but the image will be bloated with extraneous cache directories. You might want to reduce the image size by removing those files, which are only useful for sequential local builds:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;dockerfile&quot;&gt;RUN apt-get update -qq \
  &amp;amp;&amp;amp; apt-get install -y nodejs libpq-dev build-essential \
  &amp;amp;&amp;amp; apt-get clean autoclean &amp;amp;&amp;amp; apt-get autoremove -y \
  &amp;amp;&amp;amp; rm -rf /var/lib/apt /var/lib/dpkg /var/lib/cache /var/lib/log
# ..
RUN bundle exec rake assets:precompile
  &amp;amp;&amp;amp; rm -rf /app/tmp/cache/assets/
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This highlights one of the shortcomings of &lt;code&gt;Dockerfile&lt;/code&gt; when it comes to speed. It can’t properly make use of those cache directories because a rebuild takes everything or nothing. However, there are some clever tricks you can use to speed up builds by caching information about dependencies. Instead of copying the entire app in at once, you can selectively add files like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;dockerfile&quot;&gt;ADD Gemfile /app/
ADD Gemfile.lock  /app/
RUN bundle install
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Copying the &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; works around the &lt;code&gt;Dockerfile&lt;/code&gt; caching mechanism to prevent invalidating your entire cache when you change a single line of code.&lt;/p&gt;
&lt;p&gt;These examples highlight just a few of the challenges you’ll face when constructing a &lt;code&gt;Dockerfile&lt;/code&gt; for your app. You’ll need to repeat those challenges for every app that requires a &lt;code&gt;Dockerfile&lt;/code&gt;. Oftentimes, you’ll end up copying and pasting sections of &lt;code&gt;Dockerfile&lt;/code&gt;s from one app to another, which is a recipe for a maintenance nightmare.&lt;/p&gt;
&lt;p&gt;Maintenance is the biggest shortcoming of &lt;code&gt;Dockerfile&lt;/code&gt;. Aside from copy-pasting code, it introduces lower level concerns that you wouldn’t need to worry about without it. For instance, Ruby, as with many languages, has &lt;a href=&quot;https://hub.docker.com/_/ruby&quot;&gt;several base images&lt;/a&gt; you can inherit from, and each one comes with its own size and security considerations. If, one day, the Rails ecosystem requires a new dependency that isn't included in your existing &lt;code&gt;Dockerfile&lt;/code&gt;, you are responsible for updating the configuration as needed. If you've broken your project out into microservices, that could also mean updating several files across multiple locations.&lt;/p&gt;
&lt;p&gt;Ultimately,&lt;code&gt;Dockerfile&lt;/code&gt; is a leaky abstraction. It forces developers to be aware of operational and platform concerns that were previously abstracted away. To write a good &lt;code&gt;Dockerfile&lt;/code&gt;, you must understand the underlying mechanisms and how each step of the image generation process works in order to properly handle future updates.&lt;/p&gt;
&lt;p&gt;All of these problems stem from &lt;code&gt;Dockerfile&lt;/code&gt;'s lack of app awareness. Without context about your application or the frameworks you use, there's a giant mismatch between how a developer builds an application and the tools they use to deploy that app.&lt;/p&gt;
&lt;p&gt;Mixing operational concerns with application concerns like this results in a poor tool for developers who just want to write code and ship it as painlessly as possible. Given these deficiencies, let’s take a look at an alternative to reduce this complexity.&lt;/p&gt;

&lt;p&gt;If you've ever deployed an application using Heroku, you know that it's as easy as running &lt;code&gt;git push heroku master&lt;/code&gt; in your local directory. Behind the scenes, &lt;a href=&quot;https://devcenter.heroku.com/articles/buildpacks&quot;&gt;a buildpack&lt;/a&gt; retrieves dependencies, processes assets, handles caching, and compiles code for whatever language your app is built in. For example, consider a Rails application. The Ruby buildpack will install Ruby and &lt;code&gt;bundler&lt;/code&gt;. Your gem dependencies are fetched, your assets are compiled, and the cache is cleaned up:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-term&quot;&gt;$ git push heroku master
remote: Compressing source files... done.
remote: Building source:
remote: -----&amp;gt; Ruby app detected
remote: -----&amp;gt; Compiling Ruby/Rails
remote: -----&amp;gt; Using Ruby version: ruby-2.6.0
remote: -----&amp;gt; Installing dependencies using bundler 1.15.2
remote:        Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin -j4 --deployment
...
remote:        Bundle complete! 18 Gemfile dependencies, 61 gems now installed.
remote:        Gems in the groups development and test were not installed.
remote:        Bundled gems are installed into `./vendor/bundle`
remote:        Removing bundler (1.15.2)
remote:        Bundle completed (42.62s)
remote:        Cleaning up the bundler cache.
...
remote:        Asset precompilation completed (3.72s)
remote:        Cleaning assets
remote:        Running: rake assets:clean
remote: -----&amp;gt; Detecting rails configuration
remote: -----&amp;gt; Compressing...
remote:        Done: 41.3M
remote: -----&amp;gt; Launching...
remote:        Released v6
remote:        https://myapp.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy... done.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;A buildpack automatically handles all these steps for you by recognizing the conventions of your application's language. Buildpacks were designed to configure whatever is necessary to run your application. With Cloud Native Buildpacks, we wanted a similar system that allowed developers to focus on their app and not piece together a build pipeline, while taking advantage of Docker and modern container standards.&lt;/p&gt;

&lt;p&gt;The desire to combine the simplicity and usability of buildpacks with the benefits of containers led us to develop Cloud Native Buildpacks (CNB), which produce an &lt;a href=&quot;https://www.opencontainers.org/&quot;&gt;OCI-compliant&lt;/a&gt; image that works with existing Docker tooling and the broader container ecosystem.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://buildpacks.io/&quot;&gt;buildpacks.io&lt;/a&gt; project is the home of the open source tooling that makes our vision possible. The first of these tools is &lt;code&gt;pack build&lt;/code&gt;, which behaves in much the same way as &lt;code&gt;git push heroku master&lt;/code&gt;. You can run it against any arbitrary repository and it will produce a Docker image. Here's an example of running the Heroku Cloud Native Ruby buildpack against a Rails app:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://heroku-blog-files.s3.amazonaws.com/posts/1554242856-cnb-beta-3-no-shadow.gif&quot; alt=&quot;cnb-beta-3-no-shadow&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Much like buildpacks that produce execution-ready slugs, a CNB will identify what is necessary to install based on the existing files in your project. There is no configuration necessary to identify your application's requirements. Since the buildpack is app-aware and knows the precise languages and dependencies your app uses, the build phases also come with sane defaults for memory performance and handling concurrency.&lt;/p&gt;
&lt;p&gt;The steps that a CNB process undertakes to produce the final image are very similar to the stages for existing Heroku buildpacks:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The CLI detects the primary language of your project. For example, if your source code directory has a &lt;code&gt;Gemfile&lt;/code&gt;, the CNB will identify it as a Ruby project; a &lt;code&gt;pom.xml&lt;/code&gt; file identifies it as a Java project, and so on.&lt;/li&gt;
&lt;li&gt;The execution environment then analyzes a previous build to determine if there are any steps which can be reused in a subsequent build.&lt;/li&gt;
&lt;li&gt;The CNB runs the build, downloading any dependencies and preparing the application to run in production.&lt;/li&gt;
&lt;li&gt;Finally, it exports the result of that build as a Docker image.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The underlying processes to generate the image are handled behind-the-scenes by the buildpack. If this process needs to be updated—such as when a vulnerability is detected—you can easily fetch a new toolchain and rebuild an image using &lt;code&gt;pack rebase&lt;/code&gt;, which will update your image in less than a second without rebuilding. This saves an enormous amount of time compared to rebuilding from a &lt;code&gt;Dockerfile&lt;/code&gt; on every one of your apps--a process that can take hours.&lt;/p&gt;

&lt;p&gt;There’s no better time to give Cloud Native Buildpacks a try than right now. The project has reached its &lt;a href=&quot;https://medium.com/buildpacks/&quot;&gt;first Beta release&lt;/a&gt;, and it’s ready for you to use and provide feedback.&lt;/p&gt;
&lt;p&gt;To get started, download the &lt;a href=&quot;https://github.com/buildpack/pack/releases/tag/v0.1.0&quot;&gt;pack CLI&lt;/a&gt; and use one of our buildpacks (Ruby, Node.js, Java, Python, PHP, or Go) in your app source directory:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ pack build --builder heroku/buildpacks &amp;lt;docker image name&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Come &lt;a href=&quot;https://slack.buildpacks.io/&quot;&gt;join us on Slack&lt;/a&gt;. We also have &lt;a href=&quot;https://github.com/buildpack/spec&quot;&gt;API documentation available&lt;/a&gt; that defines the buildpack spec if you'd like to generate your own OCI images.&lt;/p&gt;
&lt;p&gt;Heroku has always found it important to meet developers where they are: at their application's source code. We believe that Cloud Native Buildpacks reduce the operational complexity with building container-based applications and frees developers up to focus on building great features for their users.&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 16:37:25 +0000</pubDate>
<dc:creator>codefinger</dc:creator>
<og:url>https://blog.heroku.com/docker-images-with-buildpacks</og:url>
<og:type>article</og:type>
<og:title>Turn Your Code into Docker Images with Cloud Native Buildpacks</og:title>
<og:description>With Cloud Native Buildpacks, we've taken the same philosophies that made buildpacks successful and applied them towards creating Docker images.</og:description>
<og:image>https://www.herokucdn.com/images/og.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.heroku.com/docker-images-with-buildpacks</dc:identifier>
</item>
<item>
<title>The Third Phase of Clean Energy Will Be Most Disruptive Yet</title>
<link>http://rameznaam.com/2019/04/02/the-third-phase-of-clean-energy-will-be-the-most-disruptive-yet/</link>
<guid isPermaLink="true" >http://rameznaam.com/2019/04/02/the-third-phase-of-clean-energy-will-be-the-most-disruptive-yet/</guid>
<description>&lt;p&gt;tl;dr: Building new solar, wind, and storage is about to be cheaper than operating &lt;em&gt;existing &lt;/em&gt;coal and gas power plants. That will change everything.&lt;/p&gt;
&lt;p&gt;When the history of how humanity turned the corner on climate change is written, we’ll look back and see that clean energy – specifically clean electricity from solar, wind, and storage, went through four distinct phases.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;RENEWABLES PHASE 1 – POLICY DEPENDENT  &lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;From the 1980s until roughly 2015, there was virtually no place on earth where new solar, wind, or energy storage was cheaper than generating electricity from coal or natural gas. This was the first phase of renewables, one where they scaled entirely because of government subsidies and mandates. And in this time, renewable growth was paltry. Solar reached 1% of global electricity. Wind reached perhaps 4%. The world spend hundreds of billions of dollars subsidizing clean energy, and seemingly got nothing.&lt;/p&gt;
&lt;h3&gt;RENEWABLES PHASE 2 – COMPETITIVE FOR NEW POWER&lt;/h3&gt;
&lt;p&gt;Except that the world didn’t get nothing. As I’ve written often, the most important aspect of clean energy policy has been to &lt;em&gt;drive down the price of clean energy &lt;/em&gt;by scaling it, and thus kicking in the learning-by-doing that continually lowers the unsubsidized price of new solar, new wind, and new energy storage.  The policies of the 80s, 90s, 2000s, and 2010s finally drove down the cost of new solar and wind electricity by more than a factor of ten. That finally paid off around 2015, when, for the first time, building solar or wind power was, even without subsidies, sometimes cheaper than building new coal-or-gas fired electricity.&lt;/p&gt;
&lt;p&gt;You can see this in IRENA’s graph showing the price of new solar PV, on-shore wind, off-shore wind, and solar CSP.&lt;/p&gt;
&lt;a href=&quot;http://rameznaam.com/wp-content/uploads/2019/03/IRENA-Renewable-Power-Costs-2017-LCOE-and-Auctions.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-1862&quot; src=&quot;http://rameznaam.com/wp-content/uploads/2019/03/IRENA-Renewable-Power-Costs-2017-LCOE-and-Auctions-800x486.jpg&quot; alt=&quot;&quot; width=&quot;660&quot; height=&quot;401&quot; srcset=&quot;http://rameznaam.com/wp-content/uploads/2019/03/IRENA-Renewable-Power-Costs-2017-LCOE-and-Auctions-800x486.jpg 800w, http://rameznaam.com/wp-content/uploads/2019/03/IRENA-Renewable-Power-Costs-2017-LCOE-and-Auctions-400x243.jpg 400w, http://rameznaam.com/wp-content/uploads/2019/03/IRENA-Renewable-Power-Costs-2017-LCOE-and-Auctions-768x467.jpg 768w&quot; sizes=&quot;(max-width: 660px) 100vw, 660px&quot;/&gt;&lt;/a&gt;The cost of solar and wind is dropping below the cost of fossil fuel electricity around the world. Each blue or orange circle reflects one solar or wind project. The heavy lines reflect global weighted average prices of solar and wind. Source: IRENA.
&lt;h3&gt;&lt;strong&gt;RENEWABLES PHASE 3 – DISRUPTIVE TO &lt;em&gt;EXISTING &lt;/em&gt;FOSSIL ELECTRICITY&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Now, after decades of subsidizing solar and wind, we’re on the verge of a new, radically different point in history – the point at which building new solar or wind power (or new energy storage systems, in some cases), is cheaper than the cost of continuing to operate &lt;em&gt;existing &lt;/em&gt;coal- or gas-fueled power plants.&lt;/p&gt;
&lt;p&gt;Dubious?  Consider the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;NextEra CEO:  Cheaper to Build Solar &amp;amp; Wind Than Operate Existing Coal by the Early 2020s: &lt;/strong&gt;In January 2018, NextEra CEO Jim Robo told investors that by the early 2020s, it would be &lt;a href=&quot;https://www.vox.com/energy-and-environment/2018/1/29/16944178/utility-ceo-renewables-cheaper&quot;&gt;cheaper to build new solar and wind power than to operate the utility’s fleet of existing coal power plants&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NIPSCO: Cheapest Option is to Go from 65% Coal-powered to Zero – and Replace it With Solar, Wind, and Storage.  &lt;/strong&gt;In October of 2018, a utility in Northern Indiana, NIPSCO, reached Jim Robo’s prophesied point years ahead of schedule, when it submitted a 5 year resource plan that would take the region from being 65% coal powered in 2018 to just 15% coal powered in 2023, and 0% coal powered in 2028, and &lt;a href=&quot;https://www.utilitydive.com/news/even-in-indiana-new-renewables-are-cheaper-than-existing-coal-plants/540242/&quot;&gt;replace virtually all of that coal power with a mix of solar, wind, storage, and flexible demand&lt;/a&gt;.  Bear in mind that NIPSCO is in a region with mediocre sun, pretty good but not amazing wind, and which &lt;a href=&quot;https://en.wikipedia.org/wiki/2016_United_States_presidential_election_in_Indiana&quot;&gt;voted for Donald Trump by 19 points&lt;/a&gt;. Admittedly, this is with prices of solar and wind which are still somewhat subsidized in the US. But not tremendously so, as the US federal solar and wind tax credits (the ITC and PTC) are winding down in exactly this same period.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2019: Florida Power and Light: Cheaper to Build New Solar + Storage Than Operate Existing Gas Plants. &lt;/strong&gt;In March of 2019, Florida Power and Light said it would retire two aging natural gas plants, and &lt;a href=&quot;https://arstechnica.com/information-technology/2019/03/florida-utility-to-close-natural-gas-plants-build-massive-solar-powered-battery/&quot;&gt;replace them with a combination of energy efficiency and the world’s largest (so far) battery&lt;/a&gt;, which it will use to charge with solar power during the day to deliver during the evening peak.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CarbonTracker &lt;/strong&gt;– &lt;strong&gt;New Wind and Solar Cheaper than Existing Coal and Gas in the US, China, and India by the mid-2020s.  &lt;/strong&gt;Meanwhile, think tank CarbonTracker has been quietly pumping out reports showing that in country after country, new solar and wind are headed for prices cheaper than the operational cost of &lt;em&gt;existing &lt;/em&gt;coal and gas.  Consider this chart (slightly modified by yours truly) of new solar and wind cost in the US vs coal operational cost:&lt;br/&gt;&lt;a href=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-USA-New-Solar-and-Wind-Cheaper-than-Existing-Coal-by-2020s.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-1868&quot; src=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-USA-New-Solar-and-Wind-Cheaper-than-Existing-Coal-by-2020s-800x451.jpg&quot; alt=&quot;&quot; width=&quot;660&quot; height=&quot;372&quot; srcset=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-USA-New-Solar-and-Wind-Cheaper-than-Existing-Coal-by-2020s-800x451.jpg 800w, http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-USA-New-Solar-and-Wind-Cheaper-than-Existing-Coal-by-2020s-400x225.jpg 400w, http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-USA-New-Solar-and-Wind-Cheaper-than-Existing-Coal-by-2020s-768x433.jpg 768w&quot; sizes=&quot;(max-width: 660px) 100vw, 660px&quot;/&gt;&lt;br/&gt;&lt;/a&gt;See CarbonTracker’s report on the disruption of Coal in the US for more: &lt;a href=&quot;https://www.carbontracker.org/reports/no-country-for-coal-gen-below-2c-and-regulatory-risk-for-us-coal-power-owners/&quot;&gt;No Country for Coal Gen&lt;/a&gt;. Or, more importantly, consider what CarbonTracker forecasts for China: That new solar and wind will be cheaper than the operating cost of &lt;em&gt;existing Chinese coal power plants &lt;/em&gt;by the 2020s.&lt;a href=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-China-New-Solar-and-Wind-Cheaper-than-Coal-OpEx-by-2020s.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-1869&quot; src=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-China-New-Solar-and-Wind-Cheaper-than-Coal-OpEx-by-2020s-800x450.jpg&quot; alt=&quot;&quot; width=&quot;660&quot; height=&quot;371&quot; srcset=&quot;http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-China-New-Solar-and-Wind-Cheaper-than-Coal-OpEx-by-2020s-800x450.jpg 800w, http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-China-New-Solar-and-Wind-Cheaper-than-Coal-OpEx-by-2020s-400x225.jpg 400w, http://rameznaam.com/wp-content/uploads/2019/04/Carbon-Tracker-China-New-Solar-and-Wind-Cheaper-than-Coal-OpEx-by-2020s-768x432.jpg 768w&quot; sizes=&quot;(max-width: 660px) 100vw, 660px&quot;/&gt;&lt;/a&gt;See more at CarbonTracker’s report on China’s coal fleet, “&lt;a href=&quot;https://www.carbontracker.org/reports/nowhere-to-hide/&quot;&gt;NoWhere to Hide&lt;/a&gt;“&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;McKinsey: New Solar and Wind Cheaper than Existing Coal and Gas… Pretty Much Everywhere by 2030.&lt;br/&gt;&lt;/strong&gt;Finally, if reports from CarbonTracker, or announcements by actual utilities aren’t enough, consider McKinsey’s assessment from its &lt;a href=&quot;https://www.mckinsey.com/industries/oil-and-gas/our-insights/global-energy-perspective-2019&quot;&gt;Global Energy Perspective 2019&lt;/a&gt;. In the chart below (with a bit of help from me), McKinsey shows that on almost every continent, and particularly in China and India, where energy demand has the most to grow, &lt;em&gt;new &lt;/em&gt;solar and wind are cheaper&lt;br/&gt;than &lt;em&gt;existing &lt;/em&gt;coal and gas by 2030.  And often much sooner.&lt;a href=&quot;http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-1871&quot; src=&quot;http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030-800x450.jpg&quot; alt=&quot;&quot; width=&quot;660&quot; height=&quot;371&quot; srcset=&quot;http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030-800x450.jpg 800w, http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030-400x225.jpg 400w, http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030-768x432.jpg 768w&quot; sizes=&quot;(max-width: 660px) 100vw, 660px&quot;/&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;We’ve gone from Phase 2 to Phase 3 much more rapidly than we went from Phase 1 to Phase 2.  Why?  Because solar and wind power had to drop by a factor of nearly 10 in price – from 60 cents / kwh for new electricity to roughly 6 cents / kwh for new electricity – to move from their early days to being competitive for new power.  But they only have to drop by another factor of 2 or 3 to move from being competitive for new power to being cheaper than the operating cost of existing coal and gas.  The “competitive zone” is much narrower and faster to pass through than the long history of subsidized prices leading up to the first fair market competition.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;RENEWABLES PHASE 4 – SLOWED BY HEADWINDS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Finally, there will in fact be a Phase 4 of renewables, when their penetration has grown so high that they become limited by headwinds of their own creation: Value deflation, where renewables create so much supply at certain hours that they drive down wholesale prices; Depletion of the best sites in some regions; Seasonal intermittency and the unsolved problem of seasonal storage.&lt;/p&gt;
&lt;p&gt;But these problems are distant.  Renewables will start to encounter them in earnest when solar makes up &amp;gt;20-30% of electricity and when wind makes up &amp;gt;40-50% of electricity. Today, worldwide, solar is only 2% and wind is only perhaps 6% of global electricity.  Cheap multi-hour storage will arrive before that (indeed, in the next few years), lowering the price of using solar to meet the evening peak, and of dealing with intermittency on the order of minutes to several hours. Only seasonal storage (and perhaps the political challenges of long-range transmission) seem to be truly difficult problems.  And we have time before they begin to impair the growth of renewables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WHAT THE THIRD PHASE MEANS FOR RENEWABLE GROWTH RATE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’ve said often that renewables have grown exponentially. But the truth is that wind power growth rates around the world have slowed substantially.  And solar power, once growing rapidly in Europe, has stagnated there over the last several years (at least, until a recent growth spurt spurred by solar entering Phase 2 in parts of Europe in the last year.)&lt;/p&gt;
&lt;p&gt;But growth rates up until now are largely irrelevant. The whole point of growing renewables has been to drive down their cost. The actual amount of solar and wind that policies have deployed up until now is almost immaterially small. It just isn’t enough to matter. What matters is that policies up until now have driven down the cost of solar, wind, and energy storage by more than an order of magnitude.&lt;/p&gt;
&lt;p&gt;If those policies – and the fact that renewables are now competitive for new power even &lt;em&gt;without &lt;/em&gt;subsidies in the sunny and windy parts of the world – continue for long enough for renewables to drop another factor of 2 or 3 in price – on top of the factor of 10 or more that they’ve fallen already, then we’ll enter a new domain where renewable growth rates aren’t determined by fickle policy. Instead, they’ll be limited only by the pace at which renewables can be deployed – the pace at which factories for solar panels, wind turbines, and batteries can be built; the pace at which labor forces can be trained to deploy them; the pace at which capital can be deployed to pay for their installation.&lt;/p&gt;
&lt;p&gt;How fast is that?  I have no idea. But there’s good reason to believe that in this second and third phase of renewables, the growth rate will &lt;em&gt;accelerate &lt;/em&gt;rather than slowing. We will look back and see that the growth of renewables is an S-curve to be sure. But we may also look back and find that, as of 2019, we had not yet hit the first upward swing in that S-curve.&lt;/p&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-official sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Wed, 03 Apr 2019 15:33:50 +0000</pubDate>
<dc:creator>kickout</dc:creator>
<og:type>article</og:type>
<og:title>The Third Phase of Clean Energy Will Be the Most Disruptive Yet</og:title>
<og:url>http://rameznaam.com/2019/04/02/the-third-phase-of-clean-energy-will-be-the-most-disruptive-yet/</og:url>
<og:description>tl;dr: Building new solar, wind, and storage is about to be cheaper than operating existing coal and gas power plants. That will change everything. When the history of how humanity turned the corne…</og:description>
<og:image>http://rameznaam.com/wp-content/uploads/2019/04/McKinsey-Solar-and-Wind-Cheaper-than-OpEx-of-Coal-and-Gas-By-Region-Almost-Everywhere-by-2030-800x450.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://rameznaam.com/2019/04/02/the-third-phase-of-clean-energy-will-be-the-most-disruptive-yet/</dc:identifier>
</item>
<item>
<title>Zuckerberg’s Rules Would Hurt Everyone but Facebook</title>
<link>https://www.bloomberg.com/opinion/articles/2019-04-02/zuckerberg-op-ed-new-rules-would-hurt-everyone-but-facebook</link>
<guid isPermaLink="true" >https://www.bloomberg.com/opinion/articles/2019-04-02/zuckerberg-op-ed-new-rules-would-hurt-everyone-but-facebook</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/opinion/articles/2019-04-02/zuckerberg-op-ed-new-rules-would-hurt-everyone-but-facebook&quot;&gt;https://www.bloomberg.com/opinion/articles/2019-04-02/zuckerberg-op-ed-new-rules-would-hurt-everyone-but-facebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19564020&quot;&gt;https://news.ycombinator.com/item?id=19564020&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 576&lt;/p&gt;
&lt;p&gt;# Comments: 235&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 15:16:22 +0000</pubDate>
<dc:creator>howard941</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=de1340a0-56af-11e9-8b57-d7c773771dac&amp;url=L29waW5pb24vYXJ0aWNsZXMvMjAxOS0wNC0wMi96dWNrZXJiZXJnLW9wLWVkLW5ldy1ydWxlcy13b3VsZC1odXJ0LWV2ZXJ5b25lLWJ1dC1mYWNlYm9vaw==</dc:identifier>
</item>
<item>
<title>Privacy Is Just the First Step, the Goal Is Data Ownership</title>
<link>https://thetoolsweneed.com/privacy-is-just-the-first-step-the-goal-is-data-ownership/</link>
<guid isPermaLink="true" >https://thetoolsweneed.com/privacy-is-just-the-first-step-the-goal-is-data-ownership/</guid>
<description>&lt;p&gt;As soon as you connect to the internet, there is a vast surveillance infrastructure tracking your every move. Even the most hackery of hackers have trouble moving in complete anonymity.&lt;/p&gt;&lt;p&gt;For most of us, however, our brains assume our pre-internet intuitions are still accurate. That what we do in our own home stays private until we decide otherwise. We feel violated when we discover how much is known about our online activity.&lt;/p&gt;
&lt;p&gt;In fact, this level of surveillance is quickly taking over the physical world. Voice assistants listen to our conversations, our location can be determined by analyzing disruptions in our wifi signal, our phones track our every move. There are varying levels of difficulty to acquiring all of this data about us, but it's possible to get everything.&lt;/p&gt;
&lt;h3 id=&quot;why-this-is-a-problem&quot;&gt;Why This Is a Problem&lt;/h3&gt;
&lt;p&gt;I listen to &lt;a href=&quot;https://twit.tv/shows/this-week-in-tech&quot;&gt;Leo Leporte on This Week in Tech&lt;/a&gt; every week, and his refrain to this concern is: &quot;So what? I've got nothing to hide.&quot; And his guests struggle to explain what the material consequence is to him. He says he gets cool products that improve his life and he doesn't care what these device makers know about him. Guests say it's creepy, that it's a slippery slope, etc. All stuff I agree with but it doesn't do much to address the skeptic's point.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Privacy for privacy's sake is a weak argument, and privacy advocates should abandon it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The real issue here is data ownership. A news story from &lt;em&gt;The New York Times&lt;/em&gt; is freely accessible to anyone, and if someone takes that story and tries to make money off of it, we all acknowledge this is stealing. Yet if Facebook takes your words, location, and preferences and sells them, this is not (yet) considered theft. Why not?&lt;/p&gt;
&lt;p&gt;Well for one, there is no real way for you to monetize that data on your own, so it's hard to say a company stole X amount of money from you. Also, our limited understanding of the technical aspects of these products has led to us generally assuming that the tools generate the data, not us.&lt;/p&gt;
&lt;h3 id=&quot;your-digital-orchard&quot;&gt;Your Digital Orchard&lt;/h3&gt;
&lt;p&gt;Let's say you have an orchard of apple trees, but you yourself don't really have a use for apples. You just let them ripen and fall to the ground. But let's also say, for some reason all your friends are really interested in the status of your apples. They like to compare them to their apples. They feel like this is a way they can stay in touch with you.&lt;/p&gt;
&lt;p&gt;Then a new company called Applebook comes to your house. Applebook says, &quot;Hey, your friends Joe and Jane sent me over here to show you their apples. Want us to take yours over to show them?&quot;&lt;/p&gt;
&lt;p&gt;&quot;Sure,&quot; you say. &quot;That'll save me the trouble.&quot;&lt;/p&gt;
&lt;p&gt;&quot;Great,&quot; says Applebook. &quot;We'll let you know what they think.&quot;&lt;/p&gt;
&lt;p&gt;Applebook provides a great service to the neighborhood. Everyone enjoys knowing how everyone else's apples are doing. What they look like, how theirs compare. The best part is, Applebook is absolutely free!&lt;/p&gt;
&lt;p&gt;Meanwhile, Applebook has a growing warehouse of apples. Once they're done showing everyone the apples, they put them in their warehouse. Not only that, but they have a bunch of apple buyers who regularly back their trucks up to the warehouse and take tons of apples away to use them however they wish. Applebook is raking in the cash.&lt;/p&gt;
&lt;p&gt;Applebook regularly drops off fertilizer and new seeds to help you grow even more apples. Who in the neighborhood can grow the most? It's a fun competition. So fun, in fact, that people leave work during their lunch break to work on their orchard.&lt;/p&gt;
&lt;p&gt;News reports start coming out that Applebook's warehouse was robbed! Some of the neighborhood's apples are gone! We didn't realize Applebook was storing all our apples, we thought they just threw them away. And hey, it looks like Applebook is selling our apples and making gobs of money off of them. We didn't realize those apples are even worth anything.&lt;/p&gt;
&lt;p&gt;This is about where we're at now with our data. In the above story, the act of theft is clear, but when the same thing happens with data, we're having a hard time calling it like it is. Just like produce grown on your land, the data that we generate rightly belongs to you first, not the companies that collect it.&lt;/p&gt;
&lt;p&gt;The equivalent to privacy in this story would be opting out of Applebook, which takes care of one problem, but then we've just gone back to your apples going to waste, unused. Their value has disappeared.&lt;/p&gt;
&lt;h3 id=&quot;this-is-just-the-beginning&quot;&gt;This Is Just the Beginning&lt;/h3&gt;
&lt;p&gt;To belabor the metaphor even more, apples are not the only thing we grow. We have tons of data trees bearing fruit that just falls to the ground uncollected and un-monetized. Health data, biometrics, DNA, thoughts and feelings, facial expressions, odors, etc. As &lt;a href=&quot;https://twitter.com/Moonalice&quot;&gt;Roger McNamee&lt;/a&gt; put it on a recent Sam Harris podcast, &lt;a href=&quot;https://samharris.org/podcasts/152-trouble-facebook/&quot;&gt;&quot;The Problem With Facebook,&quot;&lt;/a&gt;  these data companies are like governments declaring eminant domain over your data and claiming it for themselves.&lt;/p&gt;
&lt;p&gt;We can't own our data if we're giving it away for free and without consent. Privacy tools are really just data protection tools so that you maintain ownership. What we don't have tools for is monetizing that data for an individual. That value still disappears when you increase your privacy.&lt;/p&gt;
&lt;p&gt;One could make the argument that it's better to let it be captured now so that it can be recovered later via a lawsuit. I'd prefer to stop the bleeding and start building ways to capture all that data in a way that gives me control.&lt;/p&gt;
&lt;h3 id=&quot;a-possible-solution&quot;&gt;A Possible Solution&lt;/h3&gt;
&lt;p&gt;What we need is a digital locker that encrypts all our data and stores it for us. Then, if an app or company would like access to it, they would have to ask us directly. For that we would need a marketplace where potential customers for our data could browse our inventory and purchase what they need.&lt;/p&gt;
&lt;p&gt;Right now the discussion is about privacy, but we need to move it forward to data ownership. That's the only way people who think they don't have anything to hide will really understand that they have something at stake. Only then will the market reward companies that build tools that facilitate the ownership and monetization of a user's data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cover image by &lt;a href=&quot;https://unsplash.com/photos/-8a5eJ1-mmQ?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Sharon McCutcheon&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/search/photos/money?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 13:51:24 +0000</pubDate>
<dc:creator>kaxline</dc:creator>
<og:type>article</og:type>
<og:title>Privacy Is Just the First Step, the Goal Is Data Ownership</og:title>
<og:description>Privacy for privacy sake is a weak argument, and privacy advocates should abandon it.</og:description>
<og:url>https://thetoolsweneed.com/privacy-is-just-the-first-step-the-goal-is-data-ownership/</og:url>
<og:image>https://thetoolsweneed.com/content/images/2019/03/sharon-mccutcheon-556371-unsplash.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thetoolsweneed.com/privacy-is-just-the-first-step-the-goal-is-data-ownership/</dc:identifier>
</item>
<item>
<title>Ex-Mozilla CTO: I was grilled for three hours at US airport by border cops</title>
<link>https://www.theregister.co.uk/2019/04/02/us_border_patrol_search_demand_mozilla_cto/</link>
<guid isPermaLink="true" >https://www.theregister.co.uk/2019/04/02/us_border_patrol_search_demand_mozilla_cto/</guid>
<description>&lt;p&gt;Former Mozilla CTO Andreas Gal says he was interrogated for three hours by America's border cops after arriving at San Francisco airport – because he refused to unlock his work laptop and phone.&lt;/p&gt;
&lt;p&gt;Gal, now employed by Apple, today &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://medium.com/@andreasgal/no-one-should-have-to-travel-in-fear-b2bff4c460e5&quot;&gt;claimed&lt;/a&gt; he was detained and grilled on November 29 after landing in California following a trip to Europe.&lt;/p&gt;
&lt;p&gt;He had attempted to pass through US customs via a Global Entry electronic kiosk. He wasn't expecting a problem, since the Hungarian-born techie is now an American citizen, but it was not to be.&lt;/p&gt;
&lt;p&gt;&quot;On this trip, the kiosk directed me to a Customs and Border Patrol agent who kept my passport and sent me to secondary inspection,&quot; Gal said. &quot;There I quickly found myself surrounded by three armed agents wearing bullet proof vests. They started to question me aggressively regarding my trip, my current employment, and my past work for Mozilla, a non-profit organization dedicated to open technology and online privacy.&quot;&lt;/p&gt;
&lt;p&gt;Gal said the g-men were rather interested in his time at Firefox-maker Mozilla, and of his recent trip to Canada. They also went through his wallet and luggage, and this led to a request by the agents for Gal to unlock his Apple-issued iPhone XS and MacBook Pro so they could search it, it is claimed.&lt;/p&gt;
&lt;p&gt;Given the devices were emblazoned with big red stickers reading &quot;PROPERTY OF APPLE. PROPRIETARY,&quot; and he had signed confidentially agreements with Cupertino, Gal said he asked for permission to call his bosses and/or a lawyer to see if he would get into trouble by handing over access. When this request was repeatedly refused, we're told, he clammed up, taking the Fifth, and citing constitutional rights against unwarranted searches.&lt;/p&gt;
&lt;p&gt;Irked by Gal's refusal, it is claimed, the border agents told him he had no constitutional nor any legal protections, and threatened him with criminal charges should he not concede to the search. He said he was eventually allowed to leave with his belongings, the devices still locked, and no charges were pressed. Gal said the agents did take away his Global Entry pass, which allows express entry through customs, as punishment for not complying with their demands.&lt;/p&gt;
&lt;h3 class=&quot;crosshead&quot;&gt;&lt;span&gt;How random is random?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Gal believes the ordeal was not a random search gone awry, but rather a targeted attempt by the government to send a message. Certainly more and more security researchers report being grilled by US border patrol, if they can even &lt;a target=&quot;_blank&quot; href=&quot;https://www.theregister.co.uk/2019/03/05/rsa_cofounder_us_visa_row/&quot;&gt;get a visa&lt;/a&gt; to enter the country, that is.&lt;/p&gt;
&lt;p&gt;&quot;My past work on encryption and online privacy is well documented, and so is my disapproval of the Trump administration and my history of significant campaign contributions to Democratic candidates,&quot; Gal noted. &quot;I wonder whether these CBP [Customs and Border Patrol] programs led to me being targeted.&quot;&lt;/p&gt;
&lt;div class=&quot;promo_article&quot;&gt;&lt;img src=&quot;https://regmedia.co.uk/2015/07/14/tsa_gloves.jpg?x=174&amp;amp;y=115&amp;amp;crop=1&quot; width=&quot;174&quot; height=&quot;115&quot; alt=&quot;TSA gloves&quot;/&gt;&lt;h2 title=&quot;Customs officials will at least need 'reasonable suspicion' to slurp device contents&quot;&gt;US border cops told to stop copying people's files just for the hell of it&lt;/h2&gt;
&lt;a href=&quot;https://www.theregister.co.uk/2018/01/05/us_customs_copying_files/&quot;&gt;&lt;span&gt;READ MORE&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Now, Gal has enlisted the help of the ACLU to probe into the brouhaha, and determine whether his civil rights were violated. The civil-liberties watchdog has &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.aclunc.org/docs/ACLU-NC_2019-03-28_Letter_re._Electronic_Device_Search_SFO.pdf&quot;&gt;filed a complaint&lt;/a&gt; [PDF] with the Department of Homeland security to determine whether the search violated the US Constitution and demand an investigation of whether the CBP's entry policies are illegal.&lt;/p&gt;
&lt;p&gt;&quot;CBP's baseless detention and intrusive interrogation of Andreas Gal and the attempted search of his devices violated his Fourth Amendment rights,&quot; ACLU Northern California senior counsel William Freeman said of the complaint.&lt;/p&gt;
&lt;p&gt;&quot;Furthermore, CBP’s policies lack protections for First Amendment rights by allowing interrogation and device searches that may be based on a traveler’s political beliefs, activism, nation of origin, or identity.&quot;&lt;/p&gt;
&lt;p&gt;A spokesperson for the border patrol told us: &quot;As a matter of policy, CBP can’t comment on pending litigation.&quot; ®&lt;/p&gt;
&lt;p class=&quot;wptl btm&quot;&gt;&lt;span&gt;Sponsored:&lt;/span&gt; &lt;a href=&quot;https://go.theregister.co.uk/tl/1818/-7142/becoming-a-pragmatic-security-leader?td=wptl1818&quot;&gt;Becoming a Pragmatic Security Leader&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 03 Apr 2019 13:01:07 +0000</pubDate>
<dc:creator>vb6lives</dc:creator>
<og:image>https://regmedia.co.uk/2016/06/27/us_border_agent.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.theregister.co.uk/2019/04/02/us_border_patrol_search_demand_mozilla_cto/</og:url>
<og:title>Ex-Mozilla CTO: US border cops demanded I unlock my phone, laptop at SF airport – and I'm an American citizen</og:title>
<og:description>Techie says he was grilled for three hours after refusing to let agents search his devices</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theregister.co.uk/2019/04/02/us_border_patrol_search_demand_mozilla_cto/</dc:identifier>
</item>
<item>
<title>Why there’s so little left of the early internet</title>
<link>http://www.bbc.com/future/story/20190401-why-theres-so-little-left-of-the-early-internet</link>
<guid isPermaLink="true" >http://www.bbc.com/future/story/20190401-why-theres-so-little-left-of-the-early-internet</guid>
<description>&lt;p&gt;In 2005, student Alex Tew had a million-dollar brainwave.&lt;/p&gt;&lt;p&gt;The 20-year-old was playing around with ideas to pay for a looming three-year business degree; Tew was already worrying that the overdraft he had would mushroom. So he scribbled on a pad: “How to become a millionaire.”&lt;/p&gt;&lt;p&gt;Twenty minutes later he had what he thought was the answer.&lt;/p&gt;&lt;p&gt;Tew set up a website called the &lt;a href=&quot;http://www.milliondollarhomepage.com/&quot;&gt;Million Dollar Homepage&lt;/a&gt;. The site’s model was almost obscenely simple: on it was a million pixels of ad space, the pixels available to buy in blocks of 100 at $1 a pixel. Once you bought them they were yours forever. When the millionth pixel was sold, Tew would be a millionaire. At least, that was the plan.&lt;/p&gt;&lt;p&gt;The Million Dollar Homepage launched on 26 August 2005, after Tew had spent the grand sum of 50 euros on registering the domain and setting up the hosting. Advertisers bought pixels and provided a link, tiny image and a short amount of text for when the cursor hovered over their image.&lt;/p&gt;&lt;p&gt;&lt;em&gt;You might also like:&lt;/em&gt;&lt;/p&gt;&lt;p&gt;After little more than a month, thanks to word-of-mouth and ever-increasing media attention, Tew’s homepage had raised more than $250,000 (£140,000). In January 2006, the last 1,000 pixels were sold at auction for $38,100 (£21,500); Tew had indeed made his million.&lt;/p&gt;&lt;p&gt;The Million Dollar Homepage is still online, nearly a decade and a half after it was created. Many of the customers – which included the likes of the UK’s The Times newspaper, travel service Cheapflights.com, online portal Yahoo! and rock duo Tenacious D – have had 15 years of advertising off that one-off payment. The site still has several thousand viewers every day; it has probably been a very good investment.&lt;/p&gt;&lt;p&gt;Tew, who now runs the meditation and mindfulness app Calm, indeed became a millionaire. But the homepage he created has also become something else: a living museum to an earlier internet era. Fifteen years may not seem a long time, but in terms of the internet it is like a geological age. Some 40% of the links on the Million Pixel Homepage now link to dead sites. Many of the others now point to entirely new domains, their original URL sold to new owners.&lt;/p&gt;&lt;p&gt;The Million Dollar Homepage shows that the decay of this early period of the internet is almost invisible. In the offline world, the closing of, say, a local newspaper is often widely reported. But online sites die, often without fanfare, and the first inkling you may have that they are no longer there is when you click on a link to be met with a blank page.&lt;/p&gt;&lt;p&gt;***&lt;/p&gt;&lt;p&gt;Around a decade ago, I spent two years working on a rock music blog and on the music section of AOL, the sprawling internet pioneer now owned by US phone company Verizon. I edited or wrote hundreds of live reviews, music news stories, artists interviews and listicles. Facebook and Twitter were already massive audience drivers, and smartphones were connecting us to the Web between work and home; surfing the Web had become a round-the-clock activity.&lt;/p&gt;&lt;blockquote readability=&quot;8&quot;&gt;&lt;p&gt; If Brewster Kahle hadn’t set up the Internet Archive and started saving things, without waiting for anyone’s permission, we’d have lost everything – Dame Wendy Hall &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;You could, quite reasonably, assume that if I ever needed to show proof of my time there it would only be a Google search away. But you’d be wrong. In April 2013, AOL abruptly closed down all its music sites – and the collective work of dozens of editors and hundreds of contributors over many years. Little of it remains, aside from a handful of articles saved by the Internet Archive, a San Francisco-based non-profit foundation set up in the late 1990s by computer engineer Brewster Kahle.&lt;/p&gt;&lt;p&gt;It is the most prominent of a clutch of organisations around the world trying to rescue some of the last vestiges of the first decade of humanity’s internet presence before it disappears completely.&lt;/p&gt;&lt;p&gt;Dame Wendy Hall, the executive director of the Web Science Institute at the University of Southampton, is unequivocal about the archive’s work: “If it wasn’t for them we wouldn’t have any” of the early material, she says. “If Brewster Kahle hadn’t set up the Internet Archive and started saving things – without waiting for anyone’s permission – we’d have lost everything.”&lt;/p&gt;&lt;p&gt;Dame Wendy says archives and national libraries had experience saving books, newspapers and periodicals because print had been around so long. But the arrival of the internet – and how quickly it became a mass form of communication and expression – may have taken them by surprise. The attempts to archive the internet have, in many areas, been playing catch-up ever since. “The British Library had to have a copy of every local newspaper published,” she says. As the newspapers have gone from print to the Web, the archiving takes a different form. Are these websites as vital a resource as the papers which preceded them?&lt;/p&gt;&lt;p&gt;Newspaper archives are vulnerable, too, to being lost when the publications are closed down or merged with other titles. “Most newspapers, I imagine, will have some sort or archive,” she says. “But that can be lost unless it is archived properly.”&lt;/p&gt;&lt;blockquote readability=&quot;5&quot;&gt;&lt;p&gt; Who’s going to pay for it? We produce so much more material than we used to – Dame Wendy Hall &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;One major problem with trying to archive the internet is that it never sits still. Every minute – every second – more photos, blog posts, videos, news stories and comments are added to the pile. While digital storage has fallen drastically in price, archiving all this material still costs money. “Who’s going to pay for it?” asks Dame Wendy. “We produce so much more material than we used to.”&lt;/p&gt;&lt;p&gt;In the UK, the role of digital conservation has partly fallen to the British Library. The library runs the UK Web Archive, which has been collecting websites by permission since 2004. The archive’s engagement manager Jason Webber says the problem is much bigger than most people realise.&lt;/p&gt;&lt;p&gt;“It’s not only the early material. Most of the internet is not being stored,” he says.&lt;/p&gt;&lt;p&gt;“The Internet Archive first started archives pages in 1996. That’s five years after the first webpages were set up. There’s nothing from that era that was ever copied from the live web.” Even the first web page set up in 1991 no longer exists; the page you can view on the World Wide Web Consortium is a copy made a year later.&lt;/p&gt;&lt;p&gt;For much of the first five years of the Web, much of the material published in Britain ended with the designation .ac.uk – academic articles written by academics. It was only in 1996 that the Web started seeing more general sites being set up, as commercial websites started outnumbering academic ones.&lt;/p&gt;&lt;blockquote readability=&quot;5&quot;&gt;&lt;p&gt;  I think there’s been very low level of awareness that anything is missing – Jason Webber &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The British Library does one “domain crawl” every year – saving anything that is published in the UK. “We try and get everything, but we do only do it once a year. But the cap for a lot of these sites is set at 500MB; that covers a lot of smaller sites, but you only have to have a few videos in there and that limit gets reached pretty quickly.” News websites like BBC News, however, do get crawled more often. The library, Webber says, has tried to build as complete picture as possible of events such as Brexit, the London 2012 Olympics and the 100th anniversary of World War One.&lt;/p&gt;&lt;p&gt;“I think there’s been very low level of awareness that anything is missing,” Webber says. “The digital world is very ephemeral, we look at our phones, the stuff on it changes and we don’t really think about it. But now people are becoming more aware of how much we might be losing.”&lt;/p&gt;&lt;p&gt;But, Webber says, the only material organisations have the right to gather is publicly viewable; an even bigger amount of culturally or historically important data is sitting on people’s archives, like their hard drives. But few of us are keeping those for posterity.&lt;/p&gt;&lt;p&gt;“The British Library is full of letters between people. There are exchanges between politicians, or love letters, and these things are really important to some people.”&lt;/p&gt;&lt;p&gt;We consider the material we post onto social networks as something that will always be there, just a click of a keyboard away. But the recent loss of some &lt;a href=&quot;https://www.theverge.com/2019/3/18/18271023/myspace-music-videos-deleted-2003-2015-server-migration&quot;&gt;12 years of music and photos&lt;/a&gt; on the pioneering social site MySpace – &lt;a href=&quot;https://mashable.com/2006/07/11/myspace-americas-number-one/#TtJZHPUaS5q1&quot;&gt;once the most popular website in the US&lt;/a&gt; – shows that even material stored on the biggest of sites may not be safe.&lt;/p&gt;&lt;p&gt;And even Google's services are not immune. &lt;a href=&quot;https://www.bbc.com/news/technology-47771927&quot;&gt;Google+, the search giant's attempt at a Facebook-rivalling social network&lt;/a&gt;, closed on 2 April. Did all its users back up the photos and memories they shared on it?&lt;/p&gt;&lt;p&gt;“Putting your photos on Facebook is not archiving them, because one day Facebook won’t exist,” says Webber. If you have any doubt about the temporary nature of the Web, take a few minutes to trawl through the Million Dollar Homepage. It is the testament to how quickly our online past is fading away.&lt;/p&gt;&lt;p&gt;There is another side to data loss. Dame Wendy points out that not archiving stories from news websites could lead to a selective view of history – new governments choosing not to save stories or archives which have cast them in a poor light, for instance.&lt;/p&gt;&lt;blockquote readability=&quot;5&quot;&gt;&lt;p&gt;  The political is so often tied into the technical – Jane Winters &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;“As soon as there’s a change of government, or restructuring of quangos, sites are closed down,” says Jane Winters, a professor of digital humanities at the University of London. “Or look at election campaigning sites, which by their nature are set up to be temporary.”&lt;/p&gt;&lt;p&gt;Sometimes the sites that are lost echo even more seismic changes; the deaths and births of nations themselves. “It happened with Yugoslavia; .yu was the top-level domain for Yugoslavia, and that ended when it collapsed. There’s a researcher who is trying to rebuild what was there before the break-up,” she says.&lt;/p&gt;&lt;p&gt;“The political is so often tied into the technical.”&lt;/p&gt;&lt;p&gt;There is, perhaps, a slight silver lining. “I come from a history background, and we’ve always had to deal with gaps in the historical records, some of which we know about, and some we just have no idea about.”&lt;/p&gt;&lt;p&gt;Dame Wendy Hall also sees parallels with the physical. When she was 15, in the late 1960s, she appeared as part of the audience in a taping of the BBC’s music show Top of the Pops.&lt;/p&gt;&lt;p&gt;The show was shown on Christmas Day. “The TV was on, and my mother said ‘There you are! But I missed it. And I’ve since gone to the BBC and tried to get a copy of it – they taped over it. I never got to see it.”&lt;/p&gt;&lt;p&gt;--&lt;/p&gt;&lt;p&gt;&lt;em&gt;Join 900,000+ Future fans by liking us on &lt;/em&gt;&lt;a href=&quot;https://www.facebook.com/BBCFuture/&quot;&gt;&lt;strong&gt;&lt;em&gt;Facebook&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;em&gt;, or follow us on &lt;/em&gt;&lt;a href=&quot;https://twitter.com/BBC_Future&quot;&gt;&lt;strong&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://www.instagram.com/bbcfuture_official/&quot;&gt;&lt;strong&gt;&lt;em&gt;Instagram&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;If you liked this story, &lt;/em&gt;&lt;a href=&quot;http://pages.emails.bbc.com/subscribe/?ocid=fut.bbc.email.we.email-signup&quot;&gt;&lt;strong&gt;&lt;em&gt;sign up for the weekly bbc.com features newsletter&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;em&gt;, called “If You Only Read 6 Things This Week”. A handpicked selection of stories from BBC Future, Culture, Capital, and Travel, delivered to your inbox every Friday.&lt;/em&gt; &lt;/p&gt;
                        </description>
<pubDate>Wed, 03 Apr 2019 12:08:30 +0000</pubDate>
<dc:creator>seagullz</dc:creator>
<og:title>Why there’s so little left of the early internet</og:title>
<og:type>article</og:type>
<og:url>http://www.bbc.com/future/story/20190401-why-theres-so-little-left-of-the-early-internet</og:url>
<og:description>It took nearly five years into the internet’s life before anyone made a concerted effort to archive it. Much of our earliest online activity has disappeared. </og:description>
<og:image>http://ichef.bbci.co.uk/wwfeatures/live/624_351/images/live/p0/75/5s/p0755sr5.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.bbc.com/future/story/20190401-why-theres-so-little-left-of-the-early-internet</dc:identifier>
</item>
</channel>
</rss>