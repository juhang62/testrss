<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Verizon to Sell Tumblr to Automattic</title>
<link>https://www.wsj.com/articles/verizon-to-sell-tumblr-to-wordpress-owner-11565640000?mod=rsswn</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/verizon-to-sell-tumblr-to-wordpress-owner-11565640000?mod=rsswn</guid>
<description>&lt;div class=&quot;is-lead-inset&quot;&gt;
      &lt;div data-layout=&quot;header&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetMediaIllustration&amp;#10;          header&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetMediaIllustration&amp;#10;          article__inset--header&amp;#10;    article__inset--lead&amp;#10;  &quot;&gt;
      
      
          
    &lt;figure class=&quot;media-object-image enlarge-image renoImageFormat- img-header article__inset__image&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;div data-mobile-ratio=&quot;66.66666666666666%&quot; data-layout-ratio=&quot;66.66666666666666%&quot; data-subtype=&quot;photo&quot; class=&quot;image-container  responsive-media article__inset__image__image&quot;&gt;
    
        &lt;img srcset=&quot;https://images.wsj.net/im-97881?width=140&amp;amp;size=1.5 140w,&amp;#10;https://images.wsj.net/im-97881?width=540&amp;amp;size=1.5 540w,&amp;#10;https://images.wsj.net/im-97881?width=620&amp;amp;size=1.5 620w,&amp;#10;https://images.wsj.net/im-97881?width=700&amp;amp;size=1.5 700w,&amp;#10;https://images.wsj.net/im-97881?width=860&amp;amp;size=1.5 860w,&amp;#10;https://images.wsj.net/im-97881?width=1260&amp;amp;size=1.5 1260w&quot; sizes=&quot;(max-width: 140px) 100px,&amp;#10;(max-width: 540px) 500px,&amp;#10;(max-width: 620px) 580px,&amp;#10;(max-width: 700px) 660px,&amp;#10;(max-width: 860px) 820px,&amp;#10;1260px&quot; src=&quot;https://images.wsj.net/im-97881?width=620&amp;amp;size=1.5&quot; data-enlarge=&quot;https://images.wsj.net/im-97881?width=1260&amp;amp;size=1.5&quot; alt=&quot;&quot; title=&quot;Tumblr is a free service that hosts millions of blogs where users can upload photos,...&quot;/&gt;&lt;/div&gt;
    
      &lt;figcaption class=&quot;wsj-article-caption article__inset__image__caption&quot; itemprop=&quot;caption&quot;&gt;&lt;span class=&quot;wsj-article-caption-content&quot;&gt;Tumblr is a free service that hosts millions of blogs where users can upload photos, music and art, but it has been overshadowed by rival social-media sites.&lt;/span&gt;
          &lt;span class=&quot;wsj-article-credit article__inset__image__caption__credit&quot; itemprop=&quot;creator&quot;&gt;
            &lt;span class=&quot;wsj-article-credit-tag&quot;&gt;
              Photo: 
            &lt;/span&gt;
        thomas white/Reuters
          &lt;/span&gt;
  &lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt; 
    &lt;/div&gt;

  &lt;div class=&quot;clearfix byline-wrap&quot;&gt;


      
      &lt;div class=&quot;byline article__byline&quot;&gt;
      
      
          &lt;span&gt;By&lt;/span&gt;
              &lt;div class=&quot;author mobile-scrim hasMenu&quot; data-scrim=&quot;{&amp;quot;type&amp;quot;:&amp;quot;author&amp;quot;,&amp;quot;header&amp;quot;:&amp;quot;Sarah Krouse&amp;quot;,&amp;quot;subhead&amp;quot;:&amp;quot;The Wall Street Journal&amp;quot;,&amp;quot;list&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;bio&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://www.wsj.com/news/author/8102&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;Biography&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;twitter&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://twitter.com/bysarahkrouse&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;@bysarahkrouse&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;facebook&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://facebook.com/&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;&amp;quot;},{&amp;quot;type&amp;quot;:&amp;quot;link&amp;quot;,&amp;quot;icon&amp;quot;:&amp;quot;email&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;mailto:sarah.krouse@wsj.com&amp;quot;,&amp;quot;text&amp;quot;:&amp;quot;sarah.krouse@wsj.com&amp;quot;}]}&quot;&gt;
                  &lt;span class=&quot;name&quot; itemprop=&quot;name&quot;&gt;Sarah Krouse&lt;/span&gt;
                  &lt;/div&gt;

      &lt;/div&gt;
      
        &lt;time class=&quot;timestamp article__timestamp flexbox__flex--1&quot;&gt;
          Updated Aug. 12, 2019 7:04 pm ET
        &lt;/time&gt;&lt;/div&gt;

  

  &lt;div class=&quot;article-content &quot;&gt;

      &lt;p&gt;






            &lt;a href=&quot;https://quotes.wsj.com/VZ&quot;&gt;Verizon Communications&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.&lt;/span&gt;

      &lt;a href=&quot;https://quotes.wsj.com/VZ?mod=chiclets&quot; class=&quot;media-object-chiclet down &quot; data-channel=&quot;/zigman2/quotes/204980236/composite&quot; data-symbol=&quot;VZ&quot; data-changepercent=&quot;-0.16&quot;&gt;
        VZ &lt;span&gt;-0.16%&lt;/span&gt;
      &lt;/a&gt;

      has agreed to sell its blogging website Tumblr to the owner of popular online-publishing tool WordPress.com, unloading for a nominal amount a site that once fetched a purchase price of more than $1 billion.&lt;/p&gt;




      &lt;div class=&quot;paywall&quot;&gt;&lt;p&gt;Automattic Inc. will buy Tumblr for an undisclosed sum and take on about 200 staffers, the companies said. Tumblr is a free service that hosts millions of blogs where users can upload photos, music and art, but it has been dwarfed by






            &lt;a href=&quot;https://quotes.wsj.com/FB&quot;&gt;Facebook&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt;,&lt;/span&gt;


      Reddit and other services.&lt;/p&gt;




      &lt;p&gt;Verizon became Tumblr’s owner through the carrier’s 2017 acquisition of






            &lt;a href=&quot;https://quotes.wsj.com/AABA&quot;&gt;Yahoo&lt;/a&gt;
            

      &lt;a href=&quot;https://quotes.wsj.com/AABA?mod=chiclets&quot; class=&quot;media-object-chiclet down company-name&quot; data-channel=&quot;/zigman2/quotes/206582450/composite&quot; data-symbol=&quot;AABA&quot; data-changepercent=&quot;-0.03&quot;&gt;
        AABA &lt;span&gt;-0.03%&lt;/span&gt;
      &lt;/a&gt;

      as part of a bid to build a digital media and advertising business. The wireless carrier began seeking a buyer for Tumblr earlier this year, &lt;a href=&quot;https://www.wsj.com/articles/verizon-looks-to-unload-tumblr-blogging-site-11556823135?mod=article_inline&quot; class=&quot;icon none&quot;&gt;The Wall Street Journal reported&lt;/a&gt;.&lt;/p&gt;






      &lt;div data-layout=&quot;wrap&amp;#10;              &quot; data-layout-mobile=&quot;&quot; class=&quot;&amp;#10;        media-object&amp;#10;        type-InsetDynamic&amp;#10;          wrap&amp;#10;    scope-web|mobileapps&amp;#10;  article__inset&amp;#10;        article__inset--type-InsetDynamic&amp;#10;          article__inset--wrap&amp;#10;  &quot;&gt;
      
      
      
      
      
      
      
      
      
      
      
      
        &lt;div class=&quot;dynamic-inset-container article__inset__dynamic&quot;&gt;
            
&lt;/div&gt;

      
      
      
      
      
      
      
      
      
      
      
      
      
      &lt;/div&gt; 




      &lt;p&gt;It discussed a potential transaction with a handful of parties, people familiar with the matter said. The sale price isn’t material to Verizon, one of the people said.&lt;/p&gt;




      &lt;p&gt;Verizon is in the process of &lt;a href=&quot;https://www.wsj.com/articles/verizon-to-lay-off-7-of-media-group-staff-11548270277?mod=article_inline&amp;amp;mod=article_inline&quot; class=&quot;icon none&quot;&gt;revamping its media group&lt;/a&gt;, which struggled to meet revenue targets in recent years. The business, home to legacy Yahoo and AOL web properties such as HuffPost, TechCrunch, feminist media brand Makers and celebrity-interview site Build, is increasingly focused on subscription and original content.&lt;/p&gt;




      &lt;p&gt;The Tumblr acquisition is the largest ever in terms of price and head count for Automattic, the company’s Chief Executive Matt Mullenweg said in an interview. The San Francisco company has &lt;a href=&quot;https://www.wsj.com/articles/wordpress-com-owner-buys-atavist-maker-of-subscription-offering-publishing-software-1529597700?mod=article_inline&quot; class=&quot;icon none&quot;&gt;a stable of brands&lt;/a&gt; focused on online publishing, including longform site Longreads, comment-filtering service Akismet, and avatar-managing service Gravatar.&lt;/p&gt;




      &lt;p&gt;Yahoo had &lt;a href=&quot;https://www.wsj.com/articles/SB10001424127887324787004578493130789235150?mod=article_inline&quot; class=&quot;icon none&quot;&gt;paid about $1.1 billion&lt;/a&gt; for Tumblr in 2013 when it was one of several fast-growing internet startups. Tumblr failed to generate meaningful revenue for Yahoo, prompting the company to &lt;a href=&quot;https://blogs.wsj.com/digits/2016/02/02/yahoo-writes-down-tumblrs-value-by-230-million?mod=article_inline&quot; class=&quot;icon none&quot;&gt;write down the site’s value&lt;/a&gt; by $230 million in 2016.&lt;/p&gt;




      &lt;p&gt;A decision last year by Verizon to ban adult content on Tumblr alienated some users.&lt;/p&gt;




      &lt;p&gt;Mr. Mullenweg said his company intends to maintain the existing policy that bans adult content. He said he has long been a Tumblr user and sees the site as complementary to WordPress.com. “It’s just fun,” he said of Tumblr. “We’re not going to change any of that.”&lt;/p&gt;




      




      &lt;p&gt;Tumblr has a strong mobile interface and dashboard where users follow other blogs, he said. Executives will look for ways WordPress.com and Tumblr can share services and functionality.&lt;/p&gt;




      &lt;p&gt;Revenue within Verizon Media Group, formerly called Oath, was $1.8 billion &lt;a href=&quot;https://www.wsj.com/articles/verizon-adds-wireless-customers-but-profit-slips-11564660072?mod=article_inline&quot; class=&quot;icon none&quot;&gt;in the second quarter&lt;/a&gt;, down 2.9% from a year earlier. The company said during its quarterly call with analysts that it remains focused on news, finance, sports, entertainment and mail products within the media business, including new HuffPost and Yahoo finance subscription services.&lt;/p&gt;




      &lt;p&gt;Verizon last year booked a $4.5 billion accounting charge related to the unit and it has struggled with declining desktop advertising revenue and a digital advertising market dominated by behemoths like






            &lt;a href=&quot;https://quotes.wsj.com/GOOG&quot;&gt;Alphabet&lt;/a&gt;
            &lt;span class=&quot;company-name-type&quot;&gt; Inc.&lt;/span&gt;


      ’s Google.&lt;/p&gt;




      &lt;p class=&quot;articleTagLine&quot;&gt;—Benjamin Mullin contributed to this article.&lt;/p&gt;




      &lt;p&gt; &lt;strong&gt;Write to &lt;/strong&gt;Sarah Krouse at &lt;a href=&quot;mailto:sarah.krouse@wsj.com&quot; target=&quot;_blank&quot; class=&quot;icon &quot;&gt;sarah.krouse@wsj.com&lt;/a&gt;&lt;/p&gt;




      &lt;p&gt; &lt;strong&gt;Corrections &amp;amp; Amplifications &lt;/strong&gt; &lt;br/&gt;Automattic Inc. is the owner of WordPress.com, a service that uses the free WordPress publishing tool to host websites. An earlier version of this article incorrectly referred to it as the owner of WordPress. (Aug. 12, 2019)&lt;/p&gt;




      &lt;/div&gt;



  
  &lt;p&gt;Copyright ©2019 Dow Jones &amp;amp; Company, Inc. All Rights Reserved. 87990cbe856818d5eddac44c7b1cdeb8&lt;/p&gt;
  
  &lt;/div&gt;


</description>
<pubDate>Mon, 12 Aug 2019 20:07:19 +0000</pubDate>
<dc:creator>minimaxir</dc:creator>
<og:title>Verizon to Sell Tumblr to WordPress.com Owner</og:title>
<og:description>Verizon has agreed to sell its blogging website Tumblr to the owner of popular online-publishing tool WordPress.com, unloading for a nominal amount a site that once fetched a purchase price of more than $1 billion.</og:description>
<og:url>https://www.wsj.com/articles/verizon-to-sell-tumblr-to-wordpress-owner-11565640000</og:url>
<og:image>https://images.wsj.net/im-97881/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/verizon-to-sell-tumblr-to-wordpress-owner-11565640000?mod=rsswn</dc:identifier>
</item>
<item>
<title>Ebola Is Now Curable</title>
<link>https://www.wired.com/story/ebola-is-now-curable-heres-how-the-new-treatments-work/</link>
<guid isPermaLink="true" >https://www.wired.com/story/ebola-is-now-curable-heres-how-the-new-treatments-work/</guid>
<description>&lt;p&gt;Amid unrelenting &lt;a href=&quot;https://www.wired.com/story/an-ebola-outbreak-in-a-war-zone-is-about-as-bad-as-it-gets/&quot;&gt;chaos and violence&lt;/a&gt;, scientists and doctors in the Democratic Republic of Congo have been running a clinical trial of new drugs to try to combat a &lt;a href=&quot;https://www.wired.com/story/the-drc-ebola-outbreak-is-an-end-of-year-nightmare/&quot;&gt;year-long Ebola outbreak&lt;/a&gt;. On Monday, the trial’s cosponsors at the World Health Organization and the National Institutes of Health announced that two of the experimental treatments appear to dramatically boost survival rates.&lt;/p&gt;
&lt;p&gt;While &lt;a href=&quot;https://www.wired.com/story/an-ebola-vaccine-gets-its-first-real-world-test/&quot;&gt;an experimental vaccine&lt;/a&gt; previously had been shown to shield people from catching Ebola, the news marks a first for people who already have been infected. “From now on, we will no longer say that Ebola is incurable,” said Jean-Jacques Muyembe, director general of the Institut National de Recherche Biomedicale in the DRC, which has overseen the trial’s operations on the ground.&lt;/p&gt;
&lt;div class=&quot;inset-left-component paywall&quot;&gt;
&lt;h5 name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;&lt;a href=&quot;https://www.wired.com/author/megan-molteni/?itm_campaign=AuthorCarveLeft&quot;&gt;Megan Molteni&lt;/a&gt; covers DNA technologies, medicine, and genetic privacy for WIRED.&lt;/h5&gt;
&lt;/div&gt;
&lt;p class=&quot;paywall&quot;&gt;Starting last November, patients in four treatment centers in the country’s east, where the outbreak is at its worst, were randomly assigned to receive one of four investigational therapies—either an antiviral drug called remdesivir or one of three drugs that use monoclonal antibodies. Scientists concocted these big, Y-shaped proteins to recognize the specific shapes of invading bacteria and viruses and then recruit immune cells to attack those pathogens. One of these, a drug called ZMapp, is currently considered the standard of care during Ebola outbreaks. It had been tested and used during &lt;a href=&quot;https://www.wired.com/2015/05/one-year-later-ebolas-lessons-next-big-outbreak/&quot;&gt;the devastating Ebola epidemic in West Africa&lt;/a&gt; in 2014, and the goal was to see if those other drugs could outperform it. But preliminary data from the first 681 patients (out of a planned 725) showed such strong results that the trial has now been stopped.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Patients receiving Zmapp in the four trial centers experienced an overall mortality rate of 49 percent, according to Anthony Fauci, director of the NIH’s National Institute of Allergy and Infectious Diseases. (Mortality rates are in excess of 75 percent for infected individuals who don’t seek any form of treatment.) The monoclonal antibody cocktail produced by a company called Regeneron Pharmaceuticals had the biggest impact on lowering death rates, down to 29 percent, while NIAID’s monoclonal antibody, called mAb114, had a mortality rate of 34 percent. The results were most striking for patients who received treatments soon after becoming sick, when their viral loads were still low—death rates dropped to 11 percent with mAb114 and just 6 percent with Regeneron’s drug, compared with 24 percent with ZMapp and 33 percent with Remdesivir.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Drugs based on monoclonal antibodies have become &lt;a href=&quot;https://www.wired.com/2016/03/mutant-yeast-cranking-pharmas-next-superdrug/&quot;&gt;a mainstay of modern medicine&lt;/a&gt;—fending off a variety of diseases from cancer to lupus. But it takes many years of painstaking reverse-engineering to make them. Zmapp, for instance, was developed by infecting mice with Ebola and then collecting the antibodies the mice produced against the virus. Those antibodies then had to be further engineered to look more like a human antibody, so as not to provoke an immune reaction. Ebola infiltrates its victims’ cells using spiky proteins on the virus’s outer shell, so researchers screened the antibodies for the ones that did the best job of binding to those proteins. Block access, and the virus can’t replicate and spread. But compared with other viruses, Ebola is large and has the ability to change shape, making it difficult for any one antibody to block its infection. That’s why a cocktail approach has become favored, like the Regeneron product—a combination of three monoclonal antibodies generated first in mice.&lt;/p&gt;
&lt;div class=&quot;inset-left-component paywall inset-left-component--pullquote&quot; readability=&quot;9&quot;&gt;
&lt;blockquote name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;“Today’s news puts us one more step to saving more lives.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;inset-left&quot; class=&quot;inset-left-component__el&quot;&gt;Mike Ryan, WHO director of health emergencies&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;paywall&quot;&gt;An even better solution, &lt;a href=&quot;https://www.wired.com/2015/06/ebola-treatment/&quot;&gt;some have posited&lt;/a&gt;, would be to mine the serum of Ebola survivors and harvest the DNA from the white blood cells that make antibodies. That would yield a set of genetic instructions for making antibodies with a proven track record against the Ebola virus. That’s what the NIH’s mAb114 is—an antibody isolated from &lt;a href=&quot;https://www.wired.com/story/ebola-epidemic-blood-samples/&quot;&gt;the blood of a survivor&lt;/a&gt; of a 1995 outbreak in Kikwit, DRC. Scientists discovered it a few years ago—they had been circulating in his body for more than a decade.&lt;/p&gt;

&lt;p class=&quot;paywall&quot;&gt;With the WHO’s announcement a new trial will now kick off, directly comparing Regeneron to mAb114, which is being produced by a Florida-based company called Ridgeback Biotherapeutics. And all Ebola treatment units in the outbreak zone will now only administer the two most effective monoclonal antibody drugs, according to the WHO’s director of health emergencies, Mike Ryan.&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;“Today’s news puts us one more step to saving more lives,” said Ryan. “The success is clear. But there’s also a tragedy linked to the success. The tragedy is that not enough people are being treated. We are still seeing too many people staying away from treatment centers, people not being found in time to benefit from these therapies.”&lt;/p&gt;
&lt;p class=&quot;paywall&quot;&gt;Since the ongoing outbreak began last August in DRC’s North Kivu province, more than 2,800 people have become infected, with 1,794 confirmed deaths. It is the second-largest Ebola outbreak ever recorded. On July 17, the WHO declared it a “public health emergency of international concern,” after a case showed up in Goma, a large city bordering Rwanda. The risk of transmission &lt;a href=&quot;https://www.wired.com/story/the-risk-that-ebola-will-spread-to-uganda-is-now-very-high/&quot;&gt;across international borders&lt;/a&gt; remains high.&lt;/p&gt;
&lt;hr class=&quot;paywall&quot;/&gt;&lt;h3 class=&quot;paywall&quot;&gt;More Great WIRED Stories&lt;/h3&gt;
</description>
<pubDate>Mon, 12 Aug 2019 19:40:44 +0000</pubDate>
<dc:creator>jelliclesfarm</dc:creator>
<og:type>article</og:type>
<og:title>Ebola Is Now Curable. Here’s How the New Treatments Work</og:title>
<og:description>Officials cut short a clinical trial in the Democratic Republic of Congo after two treatments appear to greatly increase patients' survival rates.</og:description>
<og:image>https://media.wired.com/photos/5d51939d6d700a0008c6581c/191:100/pass/Science_EbolaTreatment-1060577428.jpg</og:image>
<og:url>https://www.wired.com/story/ebola-is-now-curable-heres-how-the-new-treatments-work/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wired.com/story/ebola-is-now-curable-heres-how-the-new-treatments-work/</dc:identifier>
</item>
<item>
<title>NULL license plate not such a bright idea</title>
<link>https://knrs.iheart.com/content/2019-08-12-clever-vanity-license-plate-backfires-on-man-winds-up-with-tons-of-tickets/</link>
<guid isPermaLink="true" >https://knrs.iheart.com/content/2019-08-12-clever-vanity-license-plate-backfires-on-man-winds-up-with-tons-of-tickets/</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;p&gt;Hackers might have the upper hand when it comes to computer systems, but it seems that no one can ever beat the Department of Motor Vehicles. One information security researcher who goes by the name &lt;a href=&quot;https://twitter.com/droogie1xp&quot;&gt;&lt;strong&gt;Droogie&lt;/strong&gt;&lt;/a&gt; told the audience at the Def Con hacking conference about how he tried to get one over on the DMV. &lt;a href=&quot;https://mashable.com/article/dmv-vanity-license-plate-def-con-backfire&quot;&gt;Droogie decided to buy&lt;/a&gt; a vanity California &lt;a href=&quot;https://www.iheart.com/content/2019-06-11-fake-license-plate-on-big-rig-in-moorpark-leads-to-dui-arrest-of-the-driver/&quot;&gt;license plate that simply said&lt;/a&gt; &quot;NULL,&quot; a word used in programming for no specific value. He did it as a joke but also hoped it might confuse automatic license plate readers or the DMV's ticketing system. Well, it wound up doing that, but not in a way Droogie was hoping for.&lt;/p&gt;
&lt;p&gt;Droogie thought he would be &quot;invisible&quot; but things started to go awry when he first registered the tags. He tried typing in his license plate but the DMV website wouldn't accept it. Then things really went downhill. Droogie wound up with a parking ticket but on top of that legitimate fine, he got dozens of other tickets in the mail as well. In total, the outstanding fines against him were over $12,000.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;p&gt;Apparently, when they didn't have the right data for a vehicle, a privately operated citation processing center used the word NULL in the license plate field for many tickets. Since that just happens to be Droogie's license plate, he got all of them.&lt;/p&gt;
&lt;p&gt;Droogie contacted the DMV who told him to change his plate. He refused because he didn't do anything wrong. While they wiped the fines off his record, unfortunately for him, they didn't fix the problem in the system so once again, Droogie has accrued another $6,000 in tickets that he had nothing to do with. He says he won't be paying those either.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Photo: Getty Images&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 12 Aug 2019 16:23:27 +0000</pubDate>
<dc:creator>dublin</dc:creator>
<og:title>Clever Vanity License Plate Backfires On Man, Winds Up With Tons Of Tickets | Talk Radio 105.9 - KNRS</og:title>
<og:type>article</og:type>
<og:image>https://i.iheart.com/v3/re/new_assets/5d51865a88579aca8354eea3</og:image>
<og:url>https://knrs.iheart.com/content/2019-08-12-clever-vanity-license-plate-backfires-on-man-winds-up-with-tons-of-tickets/</og:url>
<og:description>He thought he'd be pranking the DMV with his plate, but it royally backfired.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://knrs.iheart.com/content/2019-08-12-clever-vanity-license-plate-backfires-on-man-winds-up-with-tons-of-tickets/</dc:identifier>
</item>
<item>
<title>Why has examine.com disappeared from search results?</title>
<link>https://examine.com/nutrition/google-update-july-2019/</link>
<guid isPermaLink="true" >https://examine.com/nutrition/google-update-july-2019/</guid>
<description>&lt;div class=&quot;article-module-content&quot;&gt;
&lt;div id=&quot;temporaryContainer&quot;&gt;
&lt;p&gt;Examine.com was born in 2011 out of our &lt;a href=&quot;https://examine.com/about/our-story/&quot;&gt;personal frustration&lt;/a&gt; with the poor quality of information on nutrition and supplementation available on the Internet, and since then we’ve helped tens of millions of people get health information free from advertorial pressures, miracle cures, and clickbait headlines that tease you with promises that lead nowhere.&lt;/p&gt;
&lt;p&gt;But over the past month, a lot of regular users have contacted us to say that they can no longer find us when they use Google to search for health-related information.&lt;/p&gt;
&lt;blockquote class=&quot;quote bs-callout bs-callout-info space-xs&quot;&gt;
&lt;p&gt;Alas, it seems that, in Google’s battle against the immense amount of misinformation and outright lies in the health space, &lt;strong&gt;&lt;em&gt;Examine.com has been caught in the crossfire&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;header&gt;&lt;h2&gt;We only care about the research&lt;/h2&gt;
&lt;/header&gt;&lt;p&gt;One of the ways we know we’re finding the right balance is that we’re constantly being accused of bias — by opposite camps. We’ve sold our soul to the low-carb cult … and the low-fat cult, too. We’re shills for Big Pharma, but also for Alternative Health. We’re secretly paid by the Government. By Corporations. By billionaires.&lt;/p&gt;
&lt;p&gt;Actually, we’re paid only by &lt;em&gt;you&lt;/em&gt;. Our sole income comes from the guides you buy from us. &lt;em&gt;You&lt;/em&gt; allow us to stay independent, so we can focus on analyzing the studies and report back exactly what we find without fear of losing a sponsor or an advertiser.&lt;/p&gt;
&lt;p&gt;And you can see that in our articles:&lt;/p&gt;
&lt;p&gt;You won’t find clickbait articles on Examine.com. You won’t find empty listicles on our site. You won’t find stretched-out content.&lt;/p&gt;
&lt;p&gt;You only need to look at our latest article — &lt;a href=&quot;https://examine.com/nutrition/keto-and-fasting/&quot;&gt;our complete breakdown of a study that analyzed the effects on multiple sclerosis of both fasting and the ketogenic diet&lt;/a&gt; — to know that we’re just nerds that love to analyze research.&lt;/p&gt;
&lt;blockquote class=&quot;quote bs-callout bs-callout-info space-xs&quot;&gt;
&lt;p&gt;Examine.com only cares what the published peer-researched papers show. And we review all of them. We don’t cherry-pick studies, and new studies can change our minds (and our articles), whatever the topic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;header&gt;&lt;h2&gt;Google’s battle against health misinformation&lt;/h2&gt;
&lt;/header&gt;&lt;p&gt;Google tends to be pretty cagey about revealing what their latest search-engine updates are doing. And that’s understandable — every update is an occasion for all the scammers out there to try to game the system to improve the rankings of their dodgey websites.&lt;/p&gt;
&lt;p&gt;But that means that when, after a recent update, Examine.com triggered a penalty from Google, we could only guess at what the trigger &lt;em&gt;was&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In fact, we still don’t know &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We’ve up-front about &lt;a href=&quot;https://examine.com/about/#editors&quot;&gt;who is on our team&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’re up-front about how &lt;a href=&quot;https://examine.com/about/editorial-policy&quot;&gt;our content is verified&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We support every single claim we make with studies (over 55,000 references on the website).&lt;/p&gt;
&lt;p&gt;We are a trusted source for respected organizations (for example, when the &lt;em&gt;New York Times&lt;/em&gt; created &lt;a href=&quot;https://www.nytimes.com/guides/year-of-living-better/how-to-build-muscle-strength/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a guide on “how to get strong”&lt;/a&gt;, they sourced their entire supplement section from Examine.com).&lt;/p&gt;
&lt;p&gt;Way back in 2014, &lt;em&gt;Men’s Fitness&lt;/em&gt; called us a &lt;a href=&quot;https://www.mensjournal.com/health-fitness/game-changers-2014-sol-orwell/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;game changer&lt;/a&gt;, and &lt;em&gt;Fast Company&lt;/em&gt; said we were a top-10 innovative company in health and fitness.&lt;/p&gt;
&lt;p&gt;We’ve spoken at the biggest health and fitness conferences — from &lt;a href=&quot;http://www.ideaontheweb.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IDEA&lt;/a&gt; to the &lt;a href=&quot;https://eatrightfnce.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FNCE&lt;/a&gt; (hosted by the Academy of Dietetics and Nutrition).&lt;/p&gt;
&lt;p&gt;Our social media is devoid of any hype and instead gets super nerdy and technical. For example, we recently posted about &lt;a href=&quot;https://www.instagram.com/p/B0WNsU8AgyK/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a hypothesized CHO-serotonin connection which could explain how carbs affect mood&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The author of &lt;a href=&quot;https://examine.com/nutrition/low-fat-vs-low-carb-for-weight-loss/&quot;&gt;one of the largest low-carb vs. low-fat studies&lt;/a&gt;, Dr. Christopher Gardner, singled out &lt;em&gt;our&lt;/em&gt; analysis of his study &lt;a href=&quot;https://twitter.com/YoniFreedhoff/status/1062758503671087105&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;for praise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’ve even had our work &lt;a href=&quot;https://nutritionandmetabolism.biomedcentral.com/articles/10.1186/1743-7075-11-43&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;plagiarized and published in a respected scientific journal&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;As part of its screening process, Google looks at mentions of a brand and sees if it’s being mentioned in a positive or negative manner. But there again, you’ll almost universally see Examine.com associated with praise/positive words.&lt;/p&gt;
&lt;p&gt;And if you search on Google for Examine.com and look at the “People also searched for”, the websites that come up include Mayo Clinic, the NIH, and WebMD.&lt;/p&gt;
&lt;blockquote class=&quot;quote bs-callout bs-callout-info space-xs&quot;&gt;
&lt;p&gt;By every conceivable measure of trustworthiness, Examine.com &lt;em&gt;should&lt;/em&gt; pass the smell test for what qualifies as a trusted source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;header&gt;&lt;h2&gt;A slow death...&lt;/h2&gt;
&lt;/header&gt;&lt;p&gt;We’re finally posting this after a recent search-engine update, but past updates weren’t any gentler. Over the past 2.5 years, Google has decreased traffic to Examine.com by roughly 90%.&lt;/p&gt;
&lt;img src=&quot;https://a99d9b858c7df59c454c-96c6baa7fa2a34c80f17051de799bc8e.ssl.cf1.rackcdn.com/images/seo-traffic-down.png&quot; title=&quot;Examine.com's SEO traffic is way down.&quot; alt=&quot;Examine.com's SEO traffic is way down.&quot;/&gt;&lt;p&gt;Let’s be clear: Google owes us nothing. They are a private organization, they can do whatever they want.&lt;/p&gt;
&lt;p&gt;And obviously I’m a little biased — I’ve been working on Examine.com for over eight years, now.&lt;/p&gt;
&lt;p&gt;But I would argue that we provide more reliable, nuanced, and honest information than anyone else out there. If Google’s goal is to organize information and help people find what they are looking for while protecting them from scammers, they should see in us an ally for many health topics.&lt;/p&gt;
&lt;p&gt;The latest update was roughly a month ago, and it essentially wiped us out. Even our own users noticed:&lt;/p&gt;
&lt;img src=&quot;https://a99d9b858c7df59c454c-96c6baa7fa2a34c80f17051de799bc8e.ssl.cf1.rackcdn.com/images/seo-user-1.png&quot;/&gt;&lt;p&gt;And it wasn’t just our users — respected SEO analysts noticed, such as &lt;a href=&quot;https://twitter.com/CyrusShepard/status/1160655573446090754&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cyrus Shepard&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/ViperChill/status/1160794856983130113&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Glen Allsopp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can even just look at people’s comments; they show how much Examine.com is trusted!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Let me be clear:&lt;/em&gt; some people think this is some grand conspiracy by Google.&lt;/p&gt;
&lt;p&gt;We do not think there is a conspiracy here. I don’t think we got singled out. I think that, in Google’s attempt to battle health misinformation, we got caught in the crossfire. In their attempt to balance signal and noise, they unwittingly associated us with the noise. What happened to us seems similar to &lt;a href=&quot;https://matt.haughey.com/on-the-future-of-metafilter-941d15ec96f0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;what happened to MetaFilter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is a good side to all this: we’ve implemented a lot of little positive things. We fixed little site issues that had to be taken care of. The user experience is improved.&lt;/p&gt;
&lt;blockquote class=&quot;quote bs-callout bs-callout-info space-xs&quot;&gt;
&lt;p&gt;Over the years, Google has been slowly but surely decreasing the traffic Examine.com gets. We’ve used this as an opportunity to improve the site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;header&gt;&lt;h2&gt;The future of Examine.com&lt;/h2&gt;
&lt;/header&gt;&lt;p&gt;As a bootstrapped company, we’ve always focused on a long-term vision. As an organization, we’ve always tried to remember that we have one job (via &lt;a href=&quot;https://hbr.org/2016/09/know-your-customers-jobs-to-be-done&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jobs to be Done&lt;/a&gt;) — to solve your problem.&lt;/p&gt;
&lt;p&gt;So even with Google turning off the faucet, we still get over a million visitors a month. We still have hundreds of thousands of people that are &lt;a href=&quot;https://examine.com/insiders/&quot;&gt;Examine.com Insiders&lt;/a&gt;. We’re still moving forward with our product development plans (more on that soon — we are &lt;em&gt;very&lt;/em&gt; excited)!&lt;/p&gt;
&lt;p&gt;For those that are new to this website, see this &lt;a href=&quot;https://a99d9b858c7df59c454c-96c6baa7fa2a34c80f17051de799bc8e.ssl.cf1.rackcdn.com/erd/sneakpeek.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;preview of our Examine.com Research Digest&lt;/a&gt; as an example of how in-depth we go when it comes to analyzing research.&lt;/p&gt;
&lt;p&gt;We will &lt;em&gt;continue&lt;/em&gt; as we always have — as an independent organization that is 100% focused on research. No ads. No sponsorships. No partnerships.&lt;/p&gt;
&lt;blockquote class=&quot;quote bs-callout bs-callout-info space-xs&quot;&gt;
&lt;p&gt;We are lucky to have a dedicated audience that not only tells others about what we do, but also supports us, thus allowing us to stay entirely unbiased.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;header&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;/header&gt;&lt;p&gt;We’ve always tried to be up-front with how we operate, and we’ve decided to post about the Google issue &lt;em&gt;because&lt;/em&gt; so many of our users mentioned it to us.&lt;/p&gt;
&lt;p&gt;Regardless, we’ve always taken a very long-term view, and even with Google sending us far less traffic than before, we will continue to work as we have before.&lt;/p&gt;
&lt;p&gt;I’d like to think that Google will eventually tweak their algorithm and have us ranking high again, but that is of course their prerogative.&lt;/p&gt;
&lt;p&gt;Finally, I want to thank everyone that has used the site over the last 8+ years, our amazing team, and all the people who bought our products. Examine.com wouldn’t be what it is without all of you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 12 Aug 2019 16:10:48 +0000</pubDate>
<dc:creator>cyrusshepard</dc:creator>
<og:title>Why has Examine.com disappeared from search results?</og:title>
<og:url>https://examine.com/nutrition/google-update-july-2019/</og:url>
<og:image>https://a99d9b858c7df59c454c-96c6baa7fa2a34c80f17051de799bc8e.ssl.cf1.rackcdn.com/images/examine-logo-seo.png</og:image>
<og:description>Google is waging war on the peddling of magical pills and miracle cures by questionable health sites — and Examine.com seems to have been caught in the crossfire.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://examine.com/nutrition/google-update-july-2019/?PageSpeed=noscript</dc:identifier>
</item>
<item>
<title>I quit my job today to make video games full time</title>
<link>https://imgur.com/gallery/CVq5bO8</link>
<guid isPermaLink="true" >https://imgur.com/gallery/CVq5bO8</guid>
<description>&lt;div id=&quot;PMHtoUM&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;33.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;12&quot;&gt;
&lt;h2 class=&quot;post-image-title&quot; itemprop=&quot;name&quot;&gt;This hallway&lt;/h2&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;This is where I worked. I will call it Monotonous Industries International (TM). Each of those doors lead to a room filled with engineers in cubicles. The people were nice, it paid well, but it was all for projects that I didn’t care about. I was one piece in a very large machines. Side note: doesn't it look like the Death Star from the first scene in Return of the Jedi?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;WADYnfF&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;31.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;This was my desk. There was so much gray everywhere I tried to cover it up with anything colorful. It didn’t work. The gray still got to me.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;2HXVSI3&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;31.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;I would sketch out game ideas and maps while pretending to take notes in the endless deluge of meetings... stand-ups... backlog grooming... weekly-syncs... retrospectives... and project kickoffs...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;UWTHhMp&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;33.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;12&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;I have sketched game ideas since I could draw a straight line. This is from my childhood sketchbook. It is a maze that included boss battles, secret doors, teleporters and treasure chests. If you notice the pictures are always incomplete. I could never actually finish my ideas. I would start with the most epic world then get distracted half way through (usually with actual video games). Side note the drawing includes UI including the inventory area aka &quot;treshers&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;6hEa7ob&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;32.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;When I turned 30 I told myself that my childhood dreams would not go to waste. I committed to actually finishing and releasing a game. For nearly 2 years I spent every night after work coding and designing it. I released it on Xbox Live Indie Games in 2011. It didn’t sell much but it was mine and I made it. I had never felt so accomplished but I knew that this was just the start. I had to make this my career.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;jUwsgUQ&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;31.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;I kept at it and worked more nights and more weekends to release more games. All of them were small and you wouldn’t think much of them. But they were mine and I was proud of them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;al2UYTL&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;32&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;Then 2 years ago I made a decision that changed my life. I decided to give back. I began blogging about my experiences and trying to help other Indies who were also trying to make games. I was open about what worked for me and what didn’t. People started to read them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;SLlAjSp&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/VideoObject&quot; readability=&quot;29.943209876543&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;10.725925925926&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;Those articles got me discovered. I was asked to give talks internationally. Then, in 2019 I gave my first talk at the world's biggest conference for game developers: Game Developer Conference. I was nervous but I bundled all the struggles of those nights all the weekends, all the dreams when I was 9 years old into that talk. You can watch it here on Youtube: &lt;a class=&quot;youtube-link&quot; href=&quot;https://www.youtube.com/watch?v=jZ5H6DeaKKs&quot;&gt;https://www.youtube.com/watch?v=jZ5H6DeaKKs&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;GdkhbG4&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;32.200460829493&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;9.9078341013825&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;And it worked. My talk was rated the &lt;a href=&quot;https://imgur.com/gallery/CVq5bO8#1&quot;&gt;#1&lt;/a&gt; talk at the Indie Game Summit and the &lt;a href=&quot;https://imgur.com/gallery/CVq5bO8#1&quot;&gt;#1&lt;/a&gt; talk across all summits. I cannot believe how well it was recieved. The talk was posted online and people started watching. A lot of people. And then they started calling. I have been offered gigs to consult for established game companies. There is a need here and part of the reason I feel comfortable leaving my job is to help others with what I know.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;aBJyVj9&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/VideoObject&quot; readability=&quot;33.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;12&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;In addition to consulting I am also going to spend my days making more games. A couple months ago I released my first game on Steam. It was very well received. My reviews have been 91% positive. Financially it did alright but considering the short development time, if I can make more like it, they can sustain my family.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;GOZVfWz&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;32.5&quot;&gt;

&lt;div class=&quot;post-image-meta&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;So that is my story. I am a just a guy who really loves making games and has worked for almost a decade to make this happen. I recently received the following review on my last game: &quot;The dev is the most enthusiastic I've ever seen in the history of Steam.&quot; That guy put it in perspective for me. That is my mission. I want to be a good dev and make more fans like this guy. Watch me do it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;XCMFErJ&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; readability=&quot;30.868421052632&quot;&gt;

&lt;div class=&quot;post-image-meta post-image-meta--last&quot; readability=&quot;12.526315789474&quot;&gt;
&lt;p class=&quot;post-image-description&quot; itemprop=&quot;description&quot;&gt;Thank you for reading this and I hope you enjoyed it. Wish me luck on my first day of full time, no boss, on my own game development. I need your help now. I want to keep myself accountable so I setup a &quot;check-in.&quot; Every month I am going to send out what I got done, what I struggled with, and how I stayed motivated. Join my mailing list. &lt;a rel=&quot;noreferrer nofollow&quot; target=&quot;_blank&quot; href=&quot;https://mailchi.mp/chriszukowski/checkin&quot;&gt;https://mailchi.mp/chriszukowski/checkin&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 12 Aug 2019 15:07:44 +0000</pubDate>
<dc:creator>wyldfire</dc:creator>
<og:url>https://imgur.com/gallery/CVq5bO8</og:url>
<og:title>I quit my job today to make video games full time</og:title>
<og:image>https://i.imgur.com/PMHtoUM.jpg?fb</og:image>
<og:type>article</og:type>
<og:description>125829 views and 4074 votes on Imgur</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://imgur.com/gallery/CVq5bO8</dc:identifier>
</item>
<item>
<title>Tourism Is Overwhelming the World&amp;#039;s Top Destinations</title>
<link>https://www.bloomberg.com/opinion/articles/2019-08-12/tourism-is-overwhelming-the-world-s-top-destinations</link>
<guid isPermaLink="true" >https://www.bloomberg.com/opinion/articles/2019-08-12/tourism-is-overwhelming-the-world-s-top-destinations</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/opinion/articles/2019-08-12/tourism-is-overwhelming-the-world-s-top-destinations&quot;&gt;https://www.bloomberg.com/opinion/articles/2019-08-12/tourism-is-overwhelming-the-world-s-top-destinations&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20675096&quot;&gt;https://news.ycombinator.com/item?id=20675096&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 237&lt;/p&gt;
&lt;p&gt;# Comments: 401&lt;/p&gt;
</description>
<pubDate>Mon, 12 Aug 2019 13:16:30 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=e9dc5b70-bd65-11e9-b5d5-e9beba3883e8&amp;url=L29waW5pb24vYXJ0aWNsZXMvMjAxOS0wOC0xMi90b3VyaXNtLWlzLW92ZXJ3aGVsbWluZy10aGUtd29ybGQtcy10b3AtZGVzdGluYXRpb25z</dc:identifier>
</item>
<item>
<title>A Bloomberg reporter’s account of trying to get back his name and credit rating</title>
<link>https://www.bloomberg.com/news/articles/2019-08-12/i-lost-my-identity-to-a-fraudster-and-it-took-six-years-to-clean-up-the-mess</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-08-12/i-lost-my-identity-to-a-fraudster-and-it-took-six-years-to-clean-up-the-mess</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-08-12/i-lost-my-identity-to-a-fraudster-and-it-took-six-years-to-clean-up-the-mess&quot;&gt;https://www.bloomberg.com/news/articles/2019-08-12/i-lost-my-identity-to-a-fraudster-and-it-took-six-years-to-clean-up-the-mess&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20675056&quot;&gt;https://news.ycombinator.com/item?id=20675056&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 225&lt;/p&gt;
&lt;p&gt;# Comments: 173&lt;/p&gt;
</description>
<pubDate>Mon, 12 Aug 2019 13:12:09 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=e9d92720-bd65-11e9-89be-39dd592e1629&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wOC0xMi9pLWxvc3QtbXktaWRlbnRpdHktdG8tYS1mcmF1ZHN0ZXItYW5kLWl0LXRvb2stc2l4LXllYXJzLXRvLWNsZWFuLXVwLXRoZS1tZXNz</dc:identifier>
</item>
<item>
<title>Ask HN: What Neural Networks/Deep Learning Books Should I Read?</title>
<link>https://news.ycombinator.com/item?id=20674745</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=20674745</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: What Neural Networks/Deep Learning Books Should I Read?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10.728323699422&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;7.1522157996146&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;20674745&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20674745&quot; class=&quot;storylink&quot;&gt;Ask HN: What Neural Networks/Deep Learning Books Should I Read?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.77922077922078&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_20674745&quot;&gt;214 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=Oreb&quot; class=&quot;hnuser&quot;&gt;Oreb&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=20674745&quot;&gt;12 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_20674745&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=20674745&amp;amp;goto=item%3Fid%3D20674745&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20What%20Neural%20Networks%2FDeep%20Learning%20Books%20Should%20I%20Read%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20What%20Neural%20Networks%2FDeep%20Learning%20Books%20Should%20I%20Read%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=20674745&amp;amp;auth=83fb9126a0d973c11db877838c20aef1ceed3f7e&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=20674745&quot;&gt;42 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;19.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;18&quot;&gt;There are lots of deep learning books on the market. The vast majority of them are presenting practical examples using some Python (or whatever) deep learning framework. Such books don't interest me at all. If I wanted to learn some particular framework, I would just look up the documentation for that framework.
&lt;p&gt;I'm looking for two types of books:&lt;/p&gt;
&lt;p&gt;1. A technical, math-heavy introduction to neural networks and deep learning, with little or no actual code (except possibly some pseudocode). The often recommended book by Goodfellow et al resembles what I'm looking for, but unfortunately, it completely lacks exercises.&lt;/p&gt;
&lt;p&gt;2. An entertaining pop science like book which takes a more philosophical and cross disciplinary look at neural networks as well as their inspirations and applications. I haven't been able to find a single book like this, but surely it has to exist?&lt;/p&gt;
&lt;p&gt;Recommendations, anyone?&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Mon, 12 Aug 2019 12:27:11 +0000</pubDate>
<dc:creator>Oreb</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=20674745</dc:identifier>
</item>
<item>
<title>Monads as a Programming Pattern</title>
<link>https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/</link>
<guid isPermaLink="true" >https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/</guid>
<description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;&lt;p&gt;This article is written from a programmer’s perspective, where a monad is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_design_pattern&quot;&gt;&lt;em&gt;software engineering pattern&lt;/em&gt;&lt;/a&gt;. Like other patterns, you may have already used it without knowing it was the monad pattern. There is still value in studying such patterns, because then you can use it more fluidly. There is a mathematical &lt;a href=&quot;https://ncatlab.org/nlab/show/monad&quot;&gt;category-theory definition&lt;/a&gt;, but you can use them effectively without understanding that (so don’t @ me, Brendan).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Imprecise definition:&lt;/strong&gt; A monad is a type that wraps an object of another type. There is no direct way to get that ‘inside’ object. Instead you ask the monad to act on it for you. Monadic classes are a lot like classes implementing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Visitor_pattern&quot;&gt;visitor pattern&lt;/a&gt;, but monads are capable of returning something wrapped in another monad. This essential property makes functions on monads composable. I’ll get to a precise definition after you understand the imprecise one through some examples.&lt;/p&gt;
&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&quot;maybenullableoptional-monad&quot;&gt;Maybe/Nullable/Optional monad&lt;/h3&gt;
&lt;p&gt;Our first example is Maybe. I will write its interface in pseudocode resembling Java.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As promised, the Maybe monad can contain another object, and we can ask it to act indirectly. Notice that apply doesn’t take a function from &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt;, but rather from &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; Maybe&amp;lt;V&amp;gt;&lt;/code&gt;. It unboxes the inside object, executes the function and returns the new box. This allows monads to be chained together.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Let's assume getInput asks the user for input,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// and returns Some(value) if the user enters a valid value.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Otherwise it returns Nothing.&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Maybe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedRatio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// maybeDivide returns a Maybe&amp;lt;int&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// because if the denominator is zero, it returns Nothing.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;maybeDivide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt; took &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt;, this would evaluate to a &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe&amp;lt;Maybe&amp;lt;int&amp;gt;&amp;gt;&lt;/code&gt;, which quickly becomes unwieldy. Also note that a function &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; V&lt;/code&gt; can still be used; just compose it with &lt;code class=&quot;highlighter-rouge&quot;&gt;Some&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// let func: T -&amp;gt; V&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// result is Maybe&amp;lt;V&amp;gt;, as desired&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;listcollection-monad&quot;&gt;List/Collection monad&lt;/h3&gt;
&lt;p&gt;In the previous example, you might think a monad is just an interface for &lt;a href=&quot;https://en.wikipedia.org/wiki/Object_composition#Aggregation&quot;&gt;aggregating (in the OOP sense)&lt;/a&gt; another object, but here is a monad that is more general than that.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;8.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;12&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// makes collection containing one element&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// runs func on every element and concatenates the results&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;


    &lt;span class=&quot;c1&quot;&gt;// runs func on every element&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// implemented by calling flatMap&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makeCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Instead of calling the operator &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;, I called it &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt; as &lt;a href=&quot;https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8&quot;&gt;the name is well-known&lt;/a&gt;. Again, &lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt; is more general because it can implement &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;, but not the other way around (you’d need &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; something like Python’s &lt;a href=&quot;https://docs.python.org/3.7/library/itertools.html#itertools.chain.from_iterable&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;chain.from_iterables&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&quot;promiseawaitable-monad&quot;&gt;Promise/Awaitable monad&lt;/h3&gt;
&lt;p&gt;In the previous two examples, you may have wanted a method that exposes the wrapped value(s), maybe &lt;code class=&quot;highlighter-rouge&quot;&gt;getValues&lt;/code&gt;. The whole point of the monad pattern is to avoid that urge, and . It’s like &lt;a href=&quot;https://en.wikipedia.org/wiki/Information_hiding&quot;&gt;data-hiding (in the OOP sense)&lt;/a&gt;. Instead of accessing elements directly, you chain on your computations through &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt;. The Promise monad is an example where you physically can’t ask for the wrapped values, because it might not exist yet! &lt;a href=&quot;https://stackoverflow.com/q/45378267/1078199&quot;&gt;A common question&lt;/a&gt; is how to get the value &lt;em&gt;out&lt;/em&gt; of the promise for subsequent computation, but the answer is instead to put the subsequent computation &lt;em&gt;into&lt;/em&gt; the promise, using &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// this would be cleaner with Promise.all&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// but that would obfuscate the point I am trying to make here&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Streams naturally arise as well; They are just promises that get &lt;code class=&quot;highlighter-rouge&quot;&gt;resolve&lt;/code&gt;d multiple times.&lt;/p&gt;
&lt;h2 id=&quot;precise-definition&quot;&gt;Precise definition&lt;/h2&gt;
&lt;p&gt;Borrowing heavily from &lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(functional_programming)#Definition&quot;&gt;Wikipedia&lt;/a&gt;, a monad is three things…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A generic type &lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;A function, often called &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;of&lt;/code&gt; (&lt;a href=&quot;https://github.com/fantasyland/fantasy-land&quot;&gt;JS fantasy-land&lt;/a&gt;), or &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; (&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.12.0.0/Control-Monad.html#v:return&quot;&gt;Haskell&lt;/a&gt;), with signature is &lt;code class=&quot;highlighter-rouge&quot;&gt;T -&amp;gt; M&amp;lt;T&amp;gt;&lt;/code&gt;. In my examples this is, &lt;code class=&quot;highlighter-rouge&quot;&gt;Nullable.Some&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection.makeCollection&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.makePromise&lt;/code&gt;. This convertor takes a regular value and wraps it in a monadic one.&lt;/li&gt;
&lt;li&gt;A combinator, often called &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;chain&lt;/code&gt; (&lt;a href=&quot;https://github.com/fantasyland/fantasy-land&quot;&gt;JS fantasy-land&lt;/a&gt;) or spelled as an infix operator, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt; (&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.12.0.0/Control-Monad.html#v:-62--62--61-&quot;&gt;Haskell&lt;/a&gt;), with signature &lt;code class=&quot;highlighter-rouge&quot;&gt;(M&amp;lt;T&amp;gt;, T -&amp;gt; M&amp;lt;V&amp;gt;) -&amp;gt; M&amp;lt;V&amp;gt;&lt;/code&gt;. In my examples this is, &lt;code class=&quot;highlighter-rouge&quot;&gt;Nullable.apply&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;Collection.flatMap&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.then&lt;/code&gt;. This combinator unwraps the monad, does an operation, and returns the monad of the result.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;… that respects these three laws…&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; is the left-identity of &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap(a).bind((T x) -&amp;gt; f(x))&lt;/code&gt; evaluates to the same thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;f(a)&lt;/code&gt;. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; really just packages its input into a container.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wrap&lt;/code&gt; is the right-identity of &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;monadicObj.bind((T x) -&amp;gt; wrap(x))&lt;/code&gt; evaluates to the same thing as &lt;code class=&quot;highlighter-rouge&quot;&gt;monadicObj&lt;/code&gt;. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; really does unwrap the container properly, accessing the insides.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; is associative:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                                   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;evaluates to the same thing as&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This last law is why people like Promises; they turn horizontally &lt;a href=&quot;https://medium.com/@justintulk/flattening-nested-promises-in-javascript-88f04793ded7&quot;&gt;nested callbacks into vertically chained callbacks&lt;/a&gt;, saving us from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pyramid_of_doom_(programming)&quot;&gt;Pyramid of Doom&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://qr.ae/TWvqL3&quot;&gt;&lt;img src=&quot;https://samgrayson.me/assets/img/monads-as-a-programming-pattern/pyramid_of_doom.png&quot; alt=&quot;pyramid of doom&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These laws let me write functions that will work with &lt;em&gt;any&lt;/em&gt; monad. For example, I mentioned implementing &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; on some specific monads. Now I’ll implement it for all monads that follow the monad-laws.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// I'll assume that all monads in this language implement the interface Monad&amp;lt;T&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;category-theory&quot;&gt;Category Theory&lt;/h3&gt;
&lt;p&gt;The concept of monads comes from &lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(category_theory)&quot;&gt;category theory&lt;/a&gt;. Their use in computer programming was first explicated rather recently, in 1989 (&lt;a href=&quot;https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.26.2787&quot;&gt;CiteSeerX 10.1.1.26.2787&lt;/a&gt;). The monad has friends which are also borrowed into programming: monoids, functors, and applicatives. Although the math is important and valuable I think the monad pattern can be used effectively without knowledge of category theory, just as a programmer can effectively use the &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt;-functions without understanding &lt;a href=&quot;https://en.wikipedia.org/wiki/Lambda_calculus&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;λ\lambda&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;λ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-calculus&lt;/a&gt;. The concept from category theory is just inspiration. The laws I stated above are enough for program-correctness.&lt;/p&gt;
&lt;p&gt;If a construct does not satisfy the monad laws, it technically isn’t a monad, but it might still be monad-inspired. In most JS libraries, &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; can take &lt;code class=&quot;highlighter-rouge&quot;&gt;A -&amp;gt; Monad&amp;lt;B&amp;gt;&lt;/code&gt; AND &lt;code class=&quot;highlighter-rouge&quot;&gt;A -&amp;gt; B&lt;/code&gt; (not monad-compliant). This design choice breaks associativity for objects with a property named &lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/a/45772042/1078199&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/50173415/1078199&quot;&gt;2&lt;/a&gt;). This is not necessarily wrong or bad. I personally find it a pragmatic decision that often simplifies code, even though it is less theoretically nice. &lt;a href=&quot;[https://github.com/briancavalier/creed](https://github.com/briancavalier/creed)&quot;&gt;Some JS libraries&lt;/a&gt; do fit the mathematical monad bill. Even Haskell’s so-called &lt;code class=&quot;highlighter-rouge&quot;&gt;IO Monad&lt;/code&gt; &lt;a href=&quot;https://www.quora.com/How-would-you-explain-a-concept-of-monads-to-a-non-CS-person&quot;&gt;may not even be a proper category-theory monad&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; is so commonly used that Haskell has special syntax for it: &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/do_notation&quot;&gt;do-notation&lt;/a&gt;. Python, JavaScript, and Rust have this &lt;a href=&quot;https://en.wikipedia.org/wiki/Syntactic_sugar&quot;&gt;syntactic sugar&lt;/a&gt; as well, but in disguise as I will show you shortly.&lt;/p&gt;
&lt;h3 id=&quot;haskells-do-notation&quot;&gt;Haskell’s do-notation&lt;/h3&gt;
&lt;div class=&quot;language-haskell highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- remember `&amp;gt;&amp;gt;=` in Haskell means `.bind` in Java,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- and `\x -&amp;gt;` is the start of a lambda, like `((T x) -&amp;gt;` in Java.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;is &lt;a href=&quot;https://en.wikipedia.org/wiki/Semantics_(computer_science)&quot;&gt;semantically equivalent&lt;/a&gt; to&lt;/p&gt;
&lt;div class=&quot;language-haskell highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monadicObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So a program that gets to integers written using the vanilla syntax looks like this:&lt;/p&gt;
&lt;div class=&quot;language-haskell highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- x and y are just regular ints (remember the signature of &amp;gt;&amp;gt;= (AKA bind)).&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; 
              &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                  &lt;span class=&quot;c1&quot;&gt;-- We have to return a monad&amp;lt;int&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;c1&quot;&gt;-- (remember the signature of bind)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Remember that `return` is not a keyword in Haskell; just a regular function&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- It refers to the function that wraps a regular value in a monad.&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And this is the semantically equivalent using do-notation:&lt;/p&gt;
&lt;div class=&quot;language-haskell highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;-- Everything after here goes after: getInput &amp;gt;&amp;gt;= \x -&amp;gt; ...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;-- Everything after here goes after: getInput &amp;gt;&amp;gt;= \y -&amp;gt; ...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- x and y are just regular ints, not wrapped ints.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It is a weird transformation, but you can see its utility: we can—to some extent—forget that &lt;code class=&quot;highlighter-rouge&quot;&gt;getLine&lt;/code&gt; returns wrapped values; &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is just a regular &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;. This makes writing monadic code as natural as operating on regular values.&lt;/p&gt;
&lt;h3 id=&quot;state&quot;&gt;State&lt;/h3&gt;
&lt;p&gt;Note that &lt;code class=&quot;highlighter-rouge&quot;&gt;getInput&lt;/code&gt; is a pure function: it takes a function of type &lt;code class=&quot;highlighter-rouge&quot;&gt;Int -&amp;gt; Void&lt;/code&gt; and calls it with an argument and returns &lt;code class=&quot;highlighter-rouge&quot;&gt;void&lt;/code&gt;. Although the returned value is always the same (&lt;code class=&quot;highlighter-rouge&quot;&gt;void&lt;/code&gt;), the argument it passes could be different in subsequent calls. This is how we can model what would otherwise be a non-deterministic function in a pure-functional way. Pure functional programming languages represent &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Understanding_monads/IO#The_universe_as_part_of_our_program&quot;&gt;the whole outside world&lt;/a&gt; as a monadic context. Programs just bind computation onto this context.&lt;/p&gt;
&lt;h3 id=&quot;control-flow&quot;&gt;Control-flow&lt;/h3&gt;
&lt;p&gt;Monads are often called &lt;a href=&quot;http://www.thisurlisfalse.com/programmable-semicolon-monads-in-haskell/&quot;&gt;programmable semicolons&lt;/a&gt;, because the monad’s &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt; controls the subsequent computation.&lt;/p&gt;
&lt;div class=&quot;language-haskell highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;squares&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- the List monad controls the code at this point&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- in fact, it runs once for each element in the list.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This allows for complex control-flow operations (such as coroutines) to be implemented at the user-level in a monad instead of the language-level. Languages without do-notation have to bend over backwards to emulate it in specific cases, as we will see.&lt;/p&gt;
&lt;h3 id=&quot;cpythonjavascript-await-keyword&quot;&gt;C#/Python/JavaScript await keyword&lt;/h3&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; keyword in other languages emulates do-notation for Promise monads. Consider JavaScript’s &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;&lt;/a&gt;; It makes everything after the &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; the body of a function that is inputted to &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;is equivalent to:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makePromise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; in Python and other languages does this too—but it is less apparent because callback-based promises are less prominent in those language communities. What do-notation does for all monads, &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt; does for &lt;code class=&quot;highlighter-rouge&quot;&gt;async&lt;/code&gt; monads: it makes writing asynchronous code almost as natural as writing synchronous code.&lt;/p&gt;
&lt;h3 id=&quot;rust-question-mark-operator&quot;&gt;Rust question-mark operator&lt;/h3&gt;
&lt;p&gt;Rust does &lt;a href=&quot;https://doc.rust-lang.org/book/ch09-00-error-handling.html&quot;&gt;not have exceptions&lt;/a&gt; (!), so you might think error-handling would be painful; you would have to anticipate failure at every possible failure point.&lt;/p&gt;
&lt;p&gt;Rust has a &lt;a href=&quot;https://m4rw3r.github.io/rust-questionmark-operator&quot;&gt;question-mark operator&lt;/a&gt; which emulates do-notation for their &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;/code&gt; monad (which is also known as &lt;code class=&quot;highlighter-rouge&quot;&gt;Nullable&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Maybe&lt;/code&gt; in other languages). The question-mark operator makes the lack of exceptions palatable. It lets us call functions which might not succeed with impunity.&lt;/p&gt;
&lt;p&gt;We must explicitly handle every error:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// Maybe you don't know Rust.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// Just know that this is called &quot;pattern matching on a tagged union.&quot;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// It asks if wrappedA looks like Some(_) or Nothing.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedA&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrappedB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;However, we can rewrite the code like this:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;trySuspiciousOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// Even this code is non-idiomatic; do not emulate&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, these language features are just special cases of the more general do-notation. There is &lt;a href=&quot;https://varkor.github.io/blog/2018/11/10/monadic-do-notation-in-rust-part-i.html&quot;&gt;a proposal to incorporate do-notation into Rust&lt;/a&gt;. Since Rust has a different semantic model than Haskell, there are devils in multiple details of the proposal.&lt;/p&gt;
&lt;h2 id=&quot;looking-forward&quot;&gt;Looking forward&lt;/h2&gt;
&lt;p&gt;Here are some ways of thinking about monads. There are other ways to think about monads; I just picked three that make sense to me and seem exhaustive.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Sometimes the monad acts like a container of another type, as in the Collection monad. This is why some people emphatically exclaim eureka’s like “a monad is just like &lt;a href=&quot;https://blog.plover.com/prog/burritos.html&quot;&gt;a burrito&lt;/a&gt;”, “&lt;a href=&quot;http://telofy.soup.io/post/23797479/Think-of-a-monad-as-a-spacesuit&quot;&gt;a spacesuit&lt;/a&gt;”, or “&lt;a href=&quot;https://www.reddit.com/r/haskell/comments/1bymg1/monads_are_burritos_in_spacesuits_full_of_nuclear/&quot;&gt;a burrito in a spacesuit&lt;/a&gt;.” These people miss that it can be anything else; in many use-cases the monad can’t simply ‘contain’ it. While the authors might understand this, a novice reader likely won’t.&lt;/li&gt;
&lt;li&gt;In these non-containing use-cases, the monad can act like a potential for there being a value, kind of like a Promise. Often monads in this case have the same semantics as “&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuation-passing_style&quot;&gt;continuations&lt;/a&gt;” or callbacks: I don’t have the value, but I can have the guy who does call (haha) you.&lt;/li&gt;
&lt;li&gt;Sometimes a monad can act like the context for data. This last case is used in functional programming languages to isolate impure side-effects of functions. &lt;code class=&quot;highlighter-rouge&quot;&gt;getLine&lt;/code&gt; in Haskell returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; in an &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Understanding_monads/IO&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IO&lt;/code&gt;&lt;/a&gt; monad. Perhaps you would have a Thread monad, that represents thread-local data (the thread is context for the data). You can’t operate on the data because it is not in your thread, but you can ask the other thread to operate on it for you. I chose not to elaborate examples of this use-case because it is less applicable outside of ML-family languages.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now you know the pattern. It is useful to recognize in the wild, and it is a good tool in the box.&lt;/p&gt;
&lt;h3 id=&quot;maybe-this-explanation-is-bad&quot;&gt;Maybe this explanation is bad&lt;/h3&gt;
&lt;p&gt;It seems everyone who learns about monads goes through &lt;a href=&quot;https://stackoverflow.com/a/19551168/1078199&quot;&gt;this cycle&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;&lt;li&gt;person X doesn’t understand monads&lt;/li&gt;
&lt;li&gt;person X works long and hard, and groks monads&lt;/li&gt;
&lt;li&gt;person X experiences amazing feeling of enlightenment, wonders why others are not similarly enlightened&lt;/li&gt;
&lt;li&gt;person X gives horrible, incomplete, inaccurate, oversimplified, and confusing explanation of monads to others which probably makes them think that monads are stupid, dumb, worthless, overcomplicated, unnecessary, something incorrect, or a mental wank-ercise&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;It happens so much, there are names for it: some call it &lt;a href=&quot;https://www.youtube.com/watch?v=dkZFtimgAcM&quot;&gt;The Curse of the Monad&lt;/a&gt;, others &lt;a href=&quot;https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/&quot;&gt;The Monad Tutorial Fallacy&lt;/a&gt;. There is even the meme “monads are just monoids on the category of endofunctors; What part of that don’t you understand?”&lt;/p&gt;
&lt;p&gt;It took me three tries over the past five years to understand monads. Of all the presentations I had read,&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;None made it feel like an abstraction of a programming pattern.&lt;/li&gt;
&lt;li&gt;None pointed out how I was already using monadic-inspired constructs in my code.&lt;/li&gt;
&lt;li&gt;None pointed out the connection with &lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The first point was a pragmatic choice to emphasize the utility of a monad, and the latter two are ways of connecting it to things the reader probably already understands. I acknowledge that this article probably won’t help most people because I might not be good at explaining how I learned this thing, and there is a large possibility that I don’t have the same learning style as you. However, I do hope the act of reading it inspires an original thought in at least a few readers or even one; That will make all this worthwhile.&lt;/p&gt;
&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;
</description>
<pubDate>Mon, 12 Aug 2019 08:15:18 +0000</pubDate>
<dc:creator>charmonium</dc:creator>
<og:title>Monads as a Programming Pattern</og:title>
<og:description>Overview This article is written from a programmer’s perspective, where a monad is a software engineering pattern. Like other patterns, you may have already used it without knowing it was the monad pattern. There is still value in studying such patterns, because then you can use it more fluidly. There...</og:description>
<og:type>website</og:type>
<og:url>https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/</og:url>
<og:image>https://samgrayson.me/assets/img/logo/drawinghands.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://samgrayson.me/2019-08-06-monads-as-a-programming-pattern/</dc:identifier>
</item>
<item>
<title>Spying on HTTPS</title>
<link>https://textslashplain.com/2019/08/11/spying-on-https/</link>
<guid isPermaLink="true" >https://textslashplain.com/2019/08/11/spying-on-https/</guid>
<description>&lt;p&gt;When I launched Chrome &lt;a href=&quot;https://twitter.com/ericlaw/status/1159848001415913474&quot;&gt;on Thursday&lt;/a&gt;, I saw something unexpected:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img data-attachment-id=&quot;2142&quot; data-permalink=&quot;https://textslashplain.com/2019/08/11/spying-on-https/sslkeylogfile/&quot; data-orig-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png&quot; data-orig-size=&quot;631,127&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;SSLKeyLogfile&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png?w=300&quot; data-large-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png?w=631&quot; src=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png?w=800&quot; alt=&quot;SSLKeyLogfile&quot; class=&quot;wp-image-2142&quot; srcset=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png 631w, https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png?w=150 150w, https://textplain.files.wordpress.com/2019/08/sslkeylogfile.png?w=300 300w&quot; sizes=&quot;(max-width: 631px) 100vw, 631px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;While most users probably would have no idea what to make of this, I happened to know what it means– Chrome is warning me that the system configuration has instructed it to leak the secret keys it uses to encrypt and decrypt HTTPS traffic to a stream on the local computer.&lt;/p&gt;
&lt;p&gt;Looking at the Chrome source code, this warning was &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/a7a748796156366cb6c6172e91760d32d698f586&quot;&gt;newly added last week&lt;/a&gt;. More surprising was that I couldn’t find the SSLKeyLogFile setting anywhere on my system. Opening a new console showed that it wasn’t set:&lt;/p&gt;
&lt;code class=&quot;wp-block-preformatted&quot;&gt;C:\WINDOWS\system32&amp;gt;set sslkeylogfile&lt;br/&gt;Environment variable sslkeylogfile not defined&lt;/code&gt;
&lt;p&gt;…and opening the System Properties &amp;gt; Advanced &amp;gt; Environment Variables UI showed that it wasn’t set for either my user account or the system at large. Weird.&lt;/p&gt;
&lt;p&gt;Fortunately, I understood from past &lt;a href=&quot;https://textslashplain.com/2018/10/11/shellexecute-doesnt/&quot;&gt;investigations&lt;/a&gt; that a process can have different environment variables than the rest of the system, and &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer&quot;&gt;Process Explorer&lt;/a&gt; can show the environment variables inside a running process. Opening Chrome.exe, we see that it indeed has an SSLKEYLOGFILE set:&lt;/p&gt;
&lt;div class=&quot;wp-block-image&quot;&gt;&lt;img data-attachment-id=&quot;2140&quot; data-permalink=&quot;https://textslashplain.com/2019/08/11/spying-on-https/sslkeylogfileeb/&quot; data-orig-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png&quot; data-orig-size=&quot;508,155&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;SSLKeyLogfileEB&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png?w=300&quot; data-large-file=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png?w=508&quot; src=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png?w=800&quot; alt=&quot;SSLKeyLogfileEB&quot; class=&quot;wp-image-2140&quot; srcset=&quot;https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png 508w, https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png?w=150 150w, https://textplain.files.wordpress.com/2019/08/sslkeylogfileeb.png?w=300 300w&quot; sizes=&quot;(max-width: 508px) 100vw, 508px&quot;/&gt;&lt;/div&gt;
&lt;p&gt;The unusual syntax with the leading &lt;strong&gt;\\.\&lt;/strong&gt; means that this isn’t a typical local file path but instead &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/ipc/pipe-names&quot;&gt;a named pipe&lt;/a&gt;, which means that it doesn’t point to a file on disk (e.g. C:\temp\sslkeys.txt) but instead to memory that another process can see.&lt;/p&gt;
&lt;p&gt;My machine was in this state because earlier that morning, I’d installed Avast Antivirus to attempt to &lt;a href=&quot;https://crbug.com/990640&quot;&gt;reproduce a bug&lt;/a&gt; a Chrome user encountered. Avast is injecting the SSLKEYLOGFILE setting so that it can conduct a &lt;a href=&quot;https://textslashplain.com/2018/02/14/understanding-the-limitations-of-https/&quot;&gt;monster-in-the-browser attack&lt;/a&gt; (MITB) and see the encrypted traffic going into Chrome.&lt;/p&gt;
&lt;p&gt;Makers of antivirus products know that browsers are one of the primary vectors by which attackers compromise PCs, and as a consequence their security products often conduct MITB attacks in order to scan web content. Antivirus developers have two common techniques to scan content running in the browser:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Code injection&lt;/li&gt;
&lt;li&gt;Network interception&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Code Injection&lt;/h2&gt;
&lt;p&gt;The code injection technique relies upon injecting security code into the browser process. The problem with this approach is that &lt;strong&gt;native code injections&lt;/strong&gt; are inherently fragile– any update to the browser might move its functions and data structures around such that the security code will fail and crash the process. Browsers discourage native code injection, and the &lt;a href=&quot;https://crbug.com/990640&quot;&gt;bug&lt;/a&gt; I was looking at was related to a new feature, RendererCodeIntegrity, that directs the Windows kernel to block loading of any code not signed by Microsoft or Google into the browser’s renderer processes.&lt;/p&gt;
&lt;p&gt;An alternative code-injection approach relies upon using a &lt;strong&gt;browser extension&lt;/strong&gt; that operates within the APIs exposed by the browser– this approach is more stable, but can address fewer threats.&lt;/p&gt;
&lt;p&gt;Even well-written code injections that don’t cause stability problems can cause significant performance regressions for browsers– when I last looked at the state of the industry, performance costs for top AV products ranged from 20% to 400% in browser scenarios.&lt;/p&gt;
&lt;h2&gt;Network Interception&lt;/h2&gt;
&lt;p&gt;The Network interception technique relies upon scanning the HTTP and HTTPS traffic that goes into the browser process. Scanning HTTP traffic is straightforward (a simple proxy server can do it), but scanning HTTPS traffic is harder because the whole point of HTTPS is to make it impossible for a network intermediary to view or modify the plaintext network traffic.&lt;/p&gt;
&lt;p&gt;Historically, the most common mechanism for security-scanning HTTPS traffic was to use a &lt;strong&gt;monster-in-the-middle &lt;a href=&quot;https://blog.cloudflare.com/monsters-in-the-middleboxes/&quot;&gt;(MITM) proxy server&lt;/a&gt;&lt;/strong&gt; running on the local computer. The MITM would instruct Windows to trust a self-signed root certificate, and it would automatically generate new interception certificates for every secure site you visit. I spent over a decade working on such a MITM proxy server, the &lt;a href=&quot;https://www.telerik.com/fiddler&quot;&gt;Fiddler Web Debugger&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many problems with using a MITM proxy, however. The primary problem is that it’s very very hard to ensure that it behaves exactly as the browser does and that it does &lt;em&gt;not introduce security vulnerabilities.&lt;/em&gt; For instance, if the MITM’s certificate verification logic has bugs, then it might accept a bogus certificate from a spoof server and the user would not be warned– Avast used to use a MITM proxy and had &lt;a href=&quot;https://www.thesafemac.com/avasts-man-in-the-middle/&quot;&gt;exactly this bug;&lt;/a&gt; they were not alone. Similarly, the MITM might not support the most secure versions of protocols supported by the browser and server (e.g. TLS/1.3) and thus using the MITM would degrade security. Some protocol features (e.g. Client Certificates) are incompatible with MITM proxies. And lastly, some security features (specifically certificate pinning) are fundamentally incompatible with MITM certificates and are &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/security/faq.md#How-does-key-pinning-interact-with-local-proxies-and-filters&quot;&gt;disabled when MITM certificates&lt;/a&gt; are used.&lt;/p&gt;
&lt;p&gt;Given the shortcomings of using a MITM proxy, it appears that Avast has moved on to a newer technique, using the &lt;strong&gt;SSLKeyLogFile &lt;/strong&gt;to leak the secret keys HTTPS negotiates on each connection to encrypt the traffic. Firefox and Chromium support this feature, and it enables decryption of TLS traffic without using the MITM certificate generation technique. While browser vendors are wary of any sort of interception of HTTPS traffic, this approach is generally &lt;a href=&quot;https://twitter.com/agl__/status/1159946851115683840&quot;&gt;preferable&lt;/a&gt; to MITM proxies.&lt;/p&gt;
&lt;p&gt;There’s some worry that Chrome’s new notification bar might drive security vendors back to using more dangerous techniques, so this notification &lt;a href=&quot;https://twitter.com/agl__/status/1159961623001325568&quot;&gt;might not&lt;/a&gt; make its way into the stable release of Chrome.&lt;/p&gt;
&lt;p&gt;When it comes to browser architecture, tradeoffs abound.&lt;/p&gt;
&lt;p&gt;-Eric&lt;/p&gt;
&lt;h2&gt;Appendix: Peeking at the Keys&lt;/h2&gt;
&lt;p&gt;If we point the SSLKeyLog setting at a regular file instead of a named pipe:&lt;/p&gt;
&lt;pre class=&quot;wp-block-preformatted&quot;&gt;
chrome --ssl-key-log-file=C:\temp\sslkeys.txt
&lt;/pre&gt;
&lt;p&gt;…we can examine the file’s contents as we browse to reveal the encryption keys:&lt;/p&gt;
&lt;img data-attachment-id=&quot;2141&quot; data-permalink=&quot;https://textslashplain.com/2019/08/11/spying-on-https/exportedkeys/&quot; data-orig-file=&quot;https://textplain.files.wordpress.com/2019/08/exportedkeys.png&quot; data-orig-size=&quot;1290,256&quot; data-comments-opened=&quot;1&quot; data-image-meta=&quot;{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}&quot; data-image-title=&quot;ExportedKeys&quot; data-image-description=&quot;&quot; data-medium-file=&quot;https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=300&quot; data-large-file=&quot;https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=800&quot; src=&quot;https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=800&quot; alt=&quot;ExportedKeys&quot; class=&quot;wp-image-2141&quot; srcset=&quot;https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=800 800w, https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=150 150w, https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=300 300w, https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=768 768w, https://textplain.files.wordpress.com/2019/08/exportedkeys.png?w=1024 1024w, https://textplain.files.wordpress.com/2019/08/exportedkeys.png 1290w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;&lt;p&gt;This file alone isn’t useful to a human, but you &lt;a href=&quot;https://wiki.wireshark.org/TLS?action=show&amp;amp;redirect=SSL#Using_the_.28Pre.29-Master-Secret&quot;&gt;can&lt;/a&gt; &lt;a href=&quot;https://jimshaver.net/2015/02/11/decrypting-tls-browser-traffic-with-wireshark-the-easy-way/&quot;&gt;configure&lt;/a&gt; tools like Wireshark to make use of it and automatically decrypt captured TLS traffic back to plaintext.&lt;/p&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 12 Aug 2019 07:56:40 +0000</pubDate>
<dc:creator>rom1v</dc:creator>
<og:type>article</og:type>
<og:title>Spying on HTTPS</og:title>
<og:url>https://textslashplain.com/2019/08/11/spying-on-https/</og:url>
<og:description>When I launched Chrome on Thursday, I saw something unexpected: While most users probably would have no idea what to make of this, I happened to know what it means– Chrome is warning me that …</og:description>
<og:image>https://textplain.files.wordpress.com/2019/08/exportedkeys.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://textslashplain.com/2019/08/11/spying-on-https/</dc:identifier>
</item>
</channel>
</rss>