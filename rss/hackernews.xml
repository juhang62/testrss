<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Twitter locks WikiLeaks account days before Assange&amp;#039;s extradition hearing</title>
<link>https://yro.slashdot.org/story/20/02/17/2121236/twitter-locks-wikileaks-official-account-with-54-million-followers-days-before-julian-assanges-extradition-hearing</link>
<guid isPermaLink="true" >https://yro.slashdot.org/story/20/02/17/2121236/twitter-locks-wikileaks-official-account-with-54-million-followers-days-before-julian-assanges-extradition-hearing</guid>
<description>&lt;div id=&quot;text-125476072&quot; class=&quot;p&quot; readability=&quot;59.924548352816&quot;&gt;Days before Julian Assange's extradition hearings are set to continue, WikiLeaks' journalist Kristin Hrafnsson reports that the official WikiLeaks twitter account &lt;a href=&quot;https://twitter.com/khrafnsson/status/1229454629940998144&quot;&gt;has been locked&lt;/a&gt;. &quot;All attempts to get it reopened via regular channels have been unsuccessful,&quot; writes Hrafnsson in a tweet. &quot;It has been impossible to reach a human at twitter to resolve the issue. Can someone fix this?&quot; RT reports: &lt;em&gt;The @wikileaks account's most recent posts date back to February 9 and concern the dire precedent set by extraditing a publisher to stand trial on espionage charges. Assange's extradition hearing in the UK, which a court ordered to be split into two parts, is set to begin next week, while the second half is scheduled for May. The publisher's lawyers have complained that access to their client is being restricted, and Assange was only recently moved from solitary confinement at Belmarsh prison after his fellow inmates staged a protest. The UN special rapporteur on torture Nils Melzer has accused the UK government of contributing to Assange's &quot;psychological torture&quot; after examining the activist last year.&lt;/em&gt; &lt;a href=&quot;https://www.zerohedge.com/technology/why-did-twitter-just-lockdown-wikileaks-account&quot;&gt;ZeroHedge also points out&lt;/a&gt; that this isn't the first time WikiLeaks' account was locked. In 2016, &quot;Twitter lit up in late July with allegations that it tried to suppress news that secret-leaking website Wikileaks exposed thousands of emails obtained from the servers of the Democratic National Committee,&quot; reports ZeroHeads, citing &lt;a href=&quot;https://www.washingtonexaminer.com/twitter-accused-of-suppressing-dnc-wikileaks-story&quot;&gt;The Washington Examiner&lt;/a&gt;. &quot;Friday afternoon, users noted, '#DNCLeaks' was trending, with more than 250,000 tweets about it on the platform. By Friday evening, it vanished completely from the site's 'trending' bar for at least 20 minutes. It returned as '#DNCLeak' after users erupted, though it was too late to quell their rage.&quot;&lt;p&gt;For what it's worth, Twitter CEO Jack Dorsey at the time denied any attempt to intentionally silence the account.&lt;/p&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 17 Feb 2020 21:53:57 +0000</pubDate>
<dc:creator>akvadrako</dc:creator>
<og:url>https://yro.slashdot.org/story/20/02/17/2121236/twitter-locks-wikileaks-official-account-with-54-million-followers-days-before-julian-assanges-extradition-hearing?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+Slashdot%2Fslashdot+%28Slashdot%29</og:url>
<og:title>Twitter Locks WikiLeaks Official Account With 5.4 Million Followers, Days Before Julian Assange's Extradition Hearing - Slashdot</og:title>
<og:description>Days before Julian Assange's extradition hearings are set to continue, WikiLeaks' journalist Kristin Hrafnsson reports that the official WikiLeaks twitter account has been locked. &quot;All attempts to get it reopened via regular channels have been unsuccessful,&quot; writes Hrafnsson in a tweet. &quot;It has been...</og:description>
<og:image>https://a.fsdn.com/sd/topics/twitter_64.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://yro.slashdot.org/story/20/02/17/2121236/twitter-locks-wikileaks-official-account-with-54-million-followers-days-before-julian-assanges-extradition-hearing</dc:identifier>
</item>
<item>
<title>Pay up or we’ll make Google ban your ads</title>
<link>https://krebsonsecurity.com/2020/02/pay-up-or-well-make-google-ban-your-ads/</link>
<guid isPermaLink="true" >https://krebsonsecurity.com/2020/02/pay-up-or-well-make-google-ban-your-ads/</guid>
<description>&lt;p&gt;A new email-based extortion scheme apparently is making the rounds, targeting Web site owners serving banner ads through Google’s &lt;strong&gt;AdSense&lt;/strong&gt; program. In this scam, the fraudsters demand bitcoin in exchange for a promise not to flood the publisher’s ads with so much bot and junk traffic that Google’s automated anti-fraud systems suspend the user’s AdSense account for suspicious traffic.&lt;/p&gt;
&lt;div id=&quot;attachment_50541&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;32&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://krebsonsecurity.com/wp-content/uploads/2020/02/adsense-extortion.png&quot;&gt;&lt;img class=&quot;wp-image-50541&quot; src=&quot;https://krebsonsecurity.com/wp-content/uploads/2020/02/adsense-extortion.png&quot; alt=&quot;&quot; width=&quot;594&quot; height=&quot;244&quot; /&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;A redacted extortion email targeting users of Google’s AdSense program.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Earlier this month, KrebsOnSecurity heard from a reader who maintains several sites that receive a fair amount of traffic. The message this reader shared began by quoting from an automated email Google’s systems might send if they detect your site is seeking to benefit from automated clicks. The message continues:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;“Very soon the warning notice from above will appear at the dashboard of your AdSense account undoubtedly! This will happen due to the fact that we’re about to flood your site with huge amount of direct bot generated web traffic with 100% bounce ratio and thousands of IP’s in rotation — a nightmare for every AdSense publisher. More also we’ll adjust our sophisticated bots to open, in endless cycle with different time duration, every AdSense banner which runs on your site.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The message goes on to warn that while the targeted site’s ad revenue will be briefly increased, “AdSense traffic assessment algorithms will detect very fast such a web traffic pattern as fraudulent.”&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;“Next an ad serving limit will be placed on your publisher account and all the revenue will be refunded to advertisers. This means that the main source of profit for your site will be temporarily suspended. It will take some time, usually a month, for the AdSense to lift your ad ban, but if this happens we will have all the resources needed to flood your site again with bad quality web traffic which will lead to second AdSense ban that could be permanent!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The message demands $5,000 worth of bitcoin to forestall the attack. In this scam, the extortionists are likely betting that some publishers may see paying up as a cheaper alternative to having their main source of advertising revenue evaporate.&lt;/p&gt;
&lt;p&gt;The reader who shared this email said while he considered the message likely to be a baseless threat, a review of his recent AdSense traffic statistics showed that detections in his “AdSense invalid traffic report” from the past month had increased substantially.&lt;span id=&quot;more-50522&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The reader, who asked not to be identified in this story, also pointed to &lt;a href=&quot;https://www.searchenginejournal.com/google-adsense-crackdown/322123/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;articles about a recent AdSense crackdown&lt;/a&gt; in which Google announced it was enhancing its defenses by improving the systems that identify potentially &lt;a href=&quot;https://support.google.com/adsense/answer/16737&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;invalid traffic&lt;/a&gt; or high risk activities before ads are served.&lt;/p&gt;
&lt;p&gt;Google defines invalid traffic as “clicks or impressions generated by publishers clicking their own live ads,” as well as “automated clicking tools or traffic sources.”&lt;/p&gt;
&lt;p&gt;“Pretty concerning, thought it seems this group is only saying they’re planning their attack,” the reader wrote.&lt;/p&gt;
&lt;p&gt;Google declined to discuss this reader’s account, saying its contracts prevent the company from commenting publicly on a specific partner’s status or enforcement actions. But in a statement shared with KrebsOnSecurity, the company said the message appears to be a classic threat of sabotage, wherein an actor attempts to trigger an enforcement action against a publisher by sending invalid traffic to their inventory.&lt;/p&gt;
&lt;p&gt;“We hear a lot about the potential for sabotage, it’s extremely rare in practice, and we have built some safeguards in place to prevent sabotage from succeeding,” the statement explained. “For example, we have detection mechanisms in place to proactively detect potential sabotage and take it into account in our enforcement systems.”&lt;/p&gt;
&lt;p&gt;Google said it has extensive tools and processes to protect against invalid traffic across its products, and that most invalid traffic is filtered from its systems before advertisers and publishers are ever impacted.&lt;/p&gt;
&lt;p&gt;“We have &lt;a href=&quot;https://support.google.com/adsense/answer/1348739&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a help center&lt;/a&gt; on our website with tips for AdSense publishers on sabotage,” the statement continues. “There’s also &lt;a href=&quot;https://support.google.com/adsense/contact/invalid_clicks_contact&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;a form&lt;/a&gt; we provide for publishers to contact us if they believe they are the victims of sabotage. We encourage publishers to disengage from any communication or further action with parties that signal that they will drive invalid traffic to their web properties. If there are concerns about invalid traffic, they should communicate that to us, and our Ad Traffic Quality team will monitor and evaluate their accounts as needed.”&lt;/p&gt;

&lt;p class=&quot;mid-banner&quot;&gt;&lt;a href=&quot;https://www.akamai.com/us/en/security.jsp?utm_source=krebsonsecurity&amp;amp;utm_medium=display&amp;amp;utm_id=F-MC-44701&amp;amp;utm_campaign=unifiedsecurity_digital_2019&amp;amp;utm_content=unifiedsecurity_global&amp;amp;utm_term=unifiedsecurity_ros&quot;&gt;&lt;img src=&quot;https://krebsonsecurity.com/b-akamai/31.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;small&quot;&gt;Tags: &lt;a href=&quot;https://krebsonsecurity.com/tag/adsense-extortion-scam/&quot; rel=&quot;tag&quot;&gt;AdSense extortion scam&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/google-adsense/&quot; rel=&quot;tag&quot;&gt;Google AdSense&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;postmetadata alt&quot;&gt;&lt;small&gt;This entry was posted on Monday, February 17th, 2020 at 9:13 am and is filed under &lt;a href=&quot;https://krebsonsecurity.com/category/sunshine/&quot; rel=&quot;category tag&quot;&gt;A Little Sunshine&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/category/comingstorm/&quot; rel=&quot;category tag&quot;&gt;The Coming Storm&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/category/web-fraud-2-0/&quot; rel=&quot;category tag&quot;&gt;Web Fraud 2.0&lt;/a&gt;. You can follow any comments to this entry through the &lt;a href=&quot;https://krebsonsecurity.com/2020/02/pay-up-or-well-make-google-ban-your-ads/feed/&quot;&gt;RSS 2.0&lt;/a&gt; feed. You can skip to the end and leave a comment. Pinging is currently not allowed.&lt;/small&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 16:01:18 +0000</pubDate>
<dc:creator>akeck</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://krebsonsecurity.com/2020/02/pay-up-or-well-make-google-ban-your-ads/</dc:identifier>
</item>
<item>
<title>Kernighan&amp;#039;s Law: You are not smart enough to debug it</title>
<link>https://github.com/dwmkerr/hacker-laws#kernighans-law</link>
<guid isPermaLink="true" >https://github.com/dwmkerr/hacker-laws#kernighans-law</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://gitlocalize.com/repo/2513/whole_project?utm_source=badge&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e67a8be535930472e7eb7d08643b0bc63f06d020/68747470733a2f2f6769746c6f63616c697a652e636f6d2f7265706f2f323531332f77686f6c655f70726f6a6563742f62616467652e737667&quot; alt=&quot;gitlocalized&quot; data-canonical-src=&quot;https://gitlocalize.com/repo/2513/whole_project/badge.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Laws, Theories, Principles and Patterns that developers will find useful.&lt;/p&gt;
&lt;p&gt;Like this project? Please considering &lt;a href=&quot;https://github.com/sponsors/dwmkerr&quot;&gt;Sponsoring Me&lt;/a&gt;!&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;There are lots of laws which people discuss when talking about development. This repository is a reference and overview of some of the most common ones. Please share and submit PRs!&lt;/p&gt;
&lt;p&gt;❗: This repo contains an explanation of some laws, principles and patterns, but does not &lt;em&gt;advocate&lt;/em&gt; for any of them. Whether they should be applied will always be a matter of debate, and greatly dependent on what you are working on.&lt;/p&gt;
&lt;h2&gt;Laws&lt;/h2&gt;
&lt;p&gt;And here we go!&lt;/p&gt;
&lt;h3&gt;Amdahl's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Amdahl%27s_law&quot; rel=&quot;nofollow&quot;&gt;Amdahl's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;Amdahl's Law is a formula which shows the &lt;em&gt;potential speedup&lt;/em&gt; of a computational task which can be achieved by increasing the resources of a system. Normally used in parallel computing, it can predict the actual benefit of increasing the number of processors, which is limited by the parallelisability of the program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Best illustrated with an example. If a program is made up of two parts, part A, which must be executed by a single processor, and part B, which can be parallelised, then we see that adding multiple processors to the system executing the program can only have a limited benefit. It can potentially greatly improve the speed of part B - but the speed of part A will remain unchanged.&lt;/p&gt;
&lt;p&gt;The diagram below shows some examples of potential improvements in speed:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dwmkerr/hacker-laws/blob/master/images/amdahls_law.png&quot;&gt;&lt;img width=&quot;480px&quot; alt=&quot;Diagram: Amdahl's Law&quot; src=&quot;https://github.com/dwmkerr/hacker-laws/raw/master/images/amdahls_law.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Image Reference: By Daniels220 at English Wikipedia, Creative Commons Attribution-Share Alike 3.0 Unported, &lt;a href=&quot;https://en.wikipedia.org/wiki/File:AmdahlsLaw.svg&quot; rel=&quot;nofollow&quot;&gt;https://en.wikipedia.org/wiki/File:AmdahlsLaw.svg&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As can be seen, even a program which is 50% parallelisable will benefit very little beyond 10 processing units, whereas a program which is 95% parallelisable can still achieve significant speed improvements with over a thousand processing units.&lt;/p&gt;
&lt;p&gt;As &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#moores-law&quot;&gt;Moore's Law&lt;/a&gt; slows, and the acceleration of individual processor speed slows, parallelisation is key to improving performance. Graphics programming is an excellent example - with modern Shader based computing, individual pixels or fragments can be rendered in parallel - this is why modern graphics cards often have many thousands of processing cores (GPUs or Shader Units).&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Broken Windows Theory&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Broken_windows_theory&quot; rel=&quot;nofollow&quot;&gt;The Broken Windows Theory on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Broken Windows Theory suggests that visible signs of crime (or lack of care of an environment) lead to further and more serious crimes (or further deterioration of the environment).&lt;/p&gt;
&lt;p&gt;This theory has been applied to software development, suggesting that poor quality code (or &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#TODO&quot;&gt;Technical Debt&lt;/a&gt;) can lead to a perception that efforts to improve quality may be ignored or undervalued, thus leading to further poor quality code. This effect cascades leading to a great decrease in quality over time.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;h3&gt;Brooks' Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Brooks%27s_law&quot; rel=&quot;nofollow&quot;&gt;Brooks' Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Adding human resources to a late software development project makes it later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This law suggests that in many cases, attempting to accelerate the delivery of a project which is already late, by adding more people, will make the delivery even later. Brooks is clear that this is an over-simplification, however, the general reasoning is that given the ramp up time of new resources and the communication overheads, in the immediate short-term velocity decreases. Also, many tasks may not be divisible, i.e. easily distributed between more resources, meaning the potential velocity increase is also lower.&lt;/p&gt;
&lt;p&gt;The common phrase in delivery &quot;Nine women can't make a baby in one month&quot; relates to Brooks' Law, in particular, the fact that some kinds of work are not divisible or parallelisable.&lt;/p&gt;
&lt;p&gt;This is a central theme of the book '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#reading-list&quot;&gt;The Mythical Man Month&lt;/a&gt;'.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Conway's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_law&quot; rel=&quot;nofollow&quot;&gt;Conway's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This law suggests that the technical boundaries of a system will reflect the structure of the organisation. It is commonly referred to when looking at organisation improvements, Conway's Law suggests that if an organisation is structured into many small, disconnected units, the software it produces will be. If an organisation is built more around 'verticals' which are orientated around features or services, the software systems will also reflect this.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Cunningham's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ward_Cunningham#Cunningham's_Law&quot; rel=&quot;nofollow&quot;&gt;Cunningham's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;The best way to get the right answer on the Internet is not to ask a question, it's to post the wrong answer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to Steven McGeady, Ward Cunningham advised him in the early 1980s: &quot;The best way to get the right answer on the Internet is not to ask a question, it's to post the wrong answer.&quot; McGeady dubbed this Cunningham's law, though Cunningham denies ownership calling it a &quot;misquote.&quot; Although originally referring to interactions on Usenet, the law has been used to describe how other online communities work (e.g., Wikipedia, Reddit, Twitter, Facebook).&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Dunbar's Number&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dunbar%27s_number&quot; rel=&quot;nofollow&quot;&gt;Dunbar's Number on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&quot;Dunbar's number is a suggested cognitive limit to the number of people with whom one can maintain stable social relationships— relationships in which an individual knows who each person is and how each person relates to every other person.&quot; There is some disagreement to the exact number. &quot;... [Dunbar] proposed that humans can comfortably maintain only 150 stable relationships.&quot; He put the number into a more social context, &quot;the number of people you would not feel embarrassed about joining uninvited for a drink if you happened to bump into them in a bar.&quot; Estimates for the number generally lay between 100 and 250.&lt;/p&gt;
&lt;p&gt;Like stable relationships between individuals, a developer's relationship with a codebase takes effort to maintain. When faced with large complicated projects, or ownership of many projects we lean on convention, policy, and modeled procedure to scale. Dunbar's number is not only important to keep in mind as an office grows, but also when setting the scope for team efforts or deciding when a system should invest in tooling to assist in modeling and automating logistical overhead. Putting the number into an engineering context, it is the number of projects (or normalized complexity of a single project) for which you would feel confident in joining an on-call rotation to support.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Gall's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/John_Gall_(author)#Gall's_law&quot; rel=&quot;nofollow&quot;&gt;Gall's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6.7529411764706&quot;&gt;
&lt;p&gt;A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://en.wikipedia.org/wiki/John_Gall_(author)&quot; rel=&quot;nofollow&quot;&gt;John Gall&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gall's Law implies that attempts to &lt;em&gt;design&lt;/em&gt; highly complex systems are likely to fail. Highly complex systems are rarely built in one go, but evolve instead from more simple systems.&lt;/p&gt;
&lt;p&gt;The classic example is the world-wide-web. In it's current state, it is a highly complex system. However, it was defined initially as a simple way to share content between academic institutions. It was very successful in meeting these goals and evolved to become more complex over time.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Goodhart's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Goodhart's_law&quot; rel=&quot;nofollow&quot;&gt;The Goodhart's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Any observed statistical regularity will tend to collapse once pressure is placed upon it for control purposes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Charles Goodhart&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also commonly referenced as:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;When a measure becomes a target, it ceases to be a good measure.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Marilyn Strathern&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The law states that the measure-driven optimizations could lead to devaluation of the measurement outcome itself. Overly selective set of measures (&lt;a href=&quot;https://en.wikipedia.org/wiki/Performance_indicator&quot; rel=&quot;nofollow&quot;&gt;KPIs&lt;/a&gt;) blindly applied to a process results in distorted effect. People tend to optimize locally by &quot;gaming&quot; the system in order to satisfy particular metrics instead of paying attention to holistic outcome of their actions.&lt;/p&gt;
&lt;p&gt;Real-world examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Assert-free tests satisfy the code coverage expectation, despite the metric intent was to create well-tested software.&lt;/li&gt;
&lt;li&gt;Developer performance score indicated by the number of lines committed leads to unjustifiably bloated codebase.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Hanlon's Razor&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hanlon%27s_razor&quot; rel=&quot;nofollow&quot;&gt;Hanlon's Razor on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Never attribute to malice that which is adequately explained by stupidity.&lt;/p&gt;
&lt;p&gt;Robert J. Hanlon&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This principle suggests that actions resulting in a negative outcome were not a result of ill will. Instead the negative outcome is more likely attributed to those actions and/or the impact being not fully understood.&lt;/p&gt;
&lt;h3&gt;Hofstadter's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hofstadter%27s_law&quot; rel=&quot;nofollow&quot;&gt;Hofstadter's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;It always takes longer than you expect, even when you take into account Hofstadter's Law.&lt;/p&gt;
&lt;p&gt;(Douglas Hofstadter)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You might hear this law referred to when looking at estimates for how long something will take. It seems a truism in software development that we tend to not be very good at accurately estimating how long something will take to deliver.&lt;/p&gt;
&lt;p&gt;This is from the book '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#reading-list&quot;&gt;Gödel, Escher, Bach: An Eternal Golden Braid&lt;/a&gt;'.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Hutber's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hutber%27s_law&quot; rel=&quot;nofollow&quot;&gt;Hutber's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;3.5714285714286&quot;&gt;
&lt;p&gt;Improvement means deterioration.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://en.wikipedia.org/wiki/Patrick_Hutber&quot; rel=&quot;nofollow&quot;&gt;Patrick Hutber&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This law suggests that improvements to a system will lead to deterioration in other parts, or it will hide other deterioration, leading overall to a degradation from the current state of the system.&lt;/p&gt;
&lt;p&gt;For example, a decrease in response latency for a particular end-point could cause increased throughput and capacity issues further along in a request flow, affecting an entirely different sub-system.&lt;/p&gt;
&lt;h3&gt;The Hype Cycle &amp;amp; Amara's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hype_cycle&quot; rel=&quot;nofollow&quot;&gt;The Hype Cycle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;We tend to overestimate the effect of a technology in the short run and underestimate the effect in the long run.&lt;/p&gt;
&lt;p&gt;(Roy Amara)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Hype Cycle is a visual representation of the excitement and development of technology over time, originally produced by Gartner. It is best shown with a visual:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dwmkerr/hacker-laws/blob/master/images/gartner_hype_cycle.png&quot;&gt;&lt;img src=&quot;https://github.com/dwmkerr/hacker-laws/raw/master/images/gartner_hype_cycle.png&quot; alt=&quot;The Hype Cycle&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Image Reference: By Jeremykemp at English Wikipedia, CC BY-SA 3.0, &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=10547051&quot; rel=&quot;nofollow&quot;&gt;https://commons.wikimedia.org/w/index.php?curid=10547051&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In short, this cycle suggests that there is typically a burst of excitement around new technology and its potential impact. Teams often jump into these technologies quickly, and sometimes find themselves disappointed with the results. This might be because the technology is not yet mature enough, or real-world applications are not yet fully realised. After a certain amount of time, the capabilities of the technology increase and practical opportunities to use it increase, and teams can finally become productive. Roy Amara's quote sums this up most succinctly - &quot;We tend to overestimate the effect of a technology in the short run and underestimate in the long run&quot;.&lt;/p&gt;
&lt;h3&gt;Hyrum's Law (The Law of Implicit Interfaces)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.hyrumslaw.com/&quot; rel=&quot;nofollow&quot;&gt;Hyrum's Law Online&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;With a sufficient number of users of an API, it does not matter what you promise in the contract: all observable behaviours of your system will be depended on by somebody.&lt;/p&gt;
&lt;p&gt;(Hyrum Wright)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hyrum's Law states that when you have a &lt;em&gt;large enough number of consumers&lt;/em&gt; of an API, all behaviours of the API (even those not defined as part of a public contract) will eventually come to be depended on by someone. A trivial example may be non-functional elements such as the response time of an API. A more subtle example might be consumers who are relying on applying a regex to an error message to determine the &lt;em&gt;type&lt;/em&gt; of error of an API. Even if the public contract of the API states nothing about the contents of the message, indicating users should use an associated error code, &lt;em&gt;some&lt;/em&gt; users may use the message, and changing the message essentially breaks the API for those users.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Kernighan's Law&lt;/h3&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.&lt;/p&gt;
&lt;p&gt;(Brian Kernighan)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kernighan's Law is named for &lt;a href=&quot;https://en.wikipedia.org/wiki/Brian_Kernighan&quot; rel=&quot;nofollow&quot;&gt;Brian Kernighan&lt;/a&gt; and derived from a quote from Kernighan and Plauger's book &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Elements_of_Programming_Style&quot; rel=&quot;nofollow&quot;&gt;The Elements of Programming Style&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While hyperbolic, Kernighan's Law makes the argument that simple code is to be preferred over complex code, because debugging any issues that arise in complex code may be costly or even infeasible.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Metcalfe's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Metcalfe's_law&quot; rel=&quot;nofollow&quot;&gt;Metcalfe's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;In network theory, the value of a system grows as approximately the square of the number of users of the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This law is based on the number of possible pairwise connections within a system and is closely related to &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#reeds-law&quot;&gt;Reed's Law&lt;/a&gt;. Odlyzko and others have argued that both Reed's Law and Metcalfe's Law overstate the value of the system by not accounting for the limits of human cognition on network effects; see &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#dunbars-number&quot;&gt;Dunbar's Number&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Moore's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Moore%27s_law&quot; rel=&quot;nofollow&quot;&gt;Moore's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The number of transistors in an integrated circuit doubles approximately every two years.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Often used to illustrate the sheer speed at which semiconductor and chip technology has improved, Moore's prediction has proven to be highly accurate over from the 1970s to the late 2000s. In more recent years, the trend has changed slightly, partly due to &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantum_tunnelling&quot; rel=&quot;nofollow&quot;&gt;physical limitations on the degree to which components can be miniaturised&lt;/a&gt;. However, advancements in parallelisation, and potentially revolutionary changes in semiconductor technology and quantum computing may mean that Moore's Law could continue to hold true for decades to come.&lt;/p&gt;
&lt;h3&gt;Murphy's Law / Sod's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Murphy%27s_law&quot; rel=&quot;nofollow&quot;&gt;Murphy's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Anything that can go wrong will go wrong.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Edward_A._Murphy_Jr.&quot; rel=&quot;nofollow&quot;&gt;Edward A. Murphy, Jr&lt;/a&gt; &lt;em&gt;Murphy's Law&lt;/em&gt; states that if a thing can go wrong, it will go wrong.&lt;/p&gt;
&lt;p&gt;This is a common adage among developers. Sometimes the unexpected happens when developing, testing or even in production. This can also be related to the (more common in British English) &lt;em&gt;Sod's Law&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;If something can go wrong, it will, at the worst possible time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These 'laws' are generally used in a comic sense. However, phenomena such as &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#TODO&quot;&gt;&lt;em&gt;Confirmation Bias&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#TODO&quot;&gt;&lt;em&gt;Selection Bias&lt;/em&gt;&lt;/a&gt; can lead people to perhaps over-emphasise these laws (the majority of times when things work, they go unnoticed, failures however are more noticeable and draw more discussion).&lt;/p&gt;
&lt;p&gt;See Also:&lt;/p&gt;
&lt;h3&gt;Occam's Razor&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Occam's_razor&quot; rel=&quot;nofollow&quot;&gt;Occam's Razor on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Entities should not be multiplied without necessity.&lt;/p&gt;
&lt;p&gt;William of Ockham&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Occam's razor says that among several possible solutions, the most likely solution is the one with the least number of concepts and assumptions. This solution is the simplest and solves only the given problem, without introducing accidental complexity and possible negative consequences.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;h3&gt;Parkinson's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Parkinson%27s_law&quot; rel=&quot;nofollow&quot;&gt;Parkinson's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Work expands so as to fill the time available for its completion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In its original context, this Law was based on studies of bureaucracies. It may be pessimistically applied to software development initiatives, the theory being that teams will be inefficient until deadlines near, then rush to complete work by the deadline, thus making the actual deadline somewhat arbitrary.&lt;/p&gt;
&lt;p&gt;If this law were combined with &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#hofstadters-law&quot;&gt;Hofstadter's Law&lt;/a&gt;, an even more pessimistic viewpoint is reached - work will expand to fill the time available for its completion and &lt;em&gt;still take longer than expected&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Premature Optimization Effect&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://wiki.c2.com/?PrematureOptimization&quot; rel=&quot;nofollow&quot;&gt;Premature Optimization on WikiWikiWeb&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;3.8709677419355&quot;&gt;
&lt;p&gt;Premature optimization is the root of all evil.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/realdonaldknuth?lang=en&quot; rel=&quot;nofollow&quot;&gt;(Donald Knuth)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Donald Knuth's paper &lt;a href=&quot;http://wiki.c2.com/?StructuredProgrammingWithGoToStatements&quot; rel=&quot;nofollow&quot;&gt;Structured Programming With Go To Statements&lt;/a&gt;, he wrote: &quot;Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: &lt;strong&gt;premature optimization is the root of all evil&lt;/strong&gt;. Yet we should not pass up our opportunities in that critical 3%.&quot;&lt;/p&gt;
&lt;p&gt;However, &lt;em&gt;Premature Optimization&lt;/em&gt; can be defined (in less loaded terms) as optimizing before we know that we need to.&lt;/p&gt;
&lt;h3&gt;Putt's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Putt%27s_Law_and_the_Successful_Technocrat&quot; rel=&quot;nofollow&quot;&gt;Putt's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Technology is dominated by two types of people, those who understand what they do not manage and those who manage what they do not understand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Putt's Law is often followed by Putt's Corollary:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Every technical hierarchy, in time, develops a competence inversion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These statements suggest that due to various selection criteria and trends in how groups organise, there will be a number of skilled people at working levels of a technical organisations, and a number of people in managerial roles who are not aware of the complexities and challenges of the work they are managing. This can be due to phenomena such as &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#the-peter-principle&quot;&gt;The Peter Principle&lt;/a&gt; or &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#the-dilbert-principle&quot;&gt;The Dilbert Principle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, it should be stressed that Laws such as this are vast generalisations and may apply to &lt;em&gt;some&lt;/em&gt; types of organisations, and not apply to others.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Reed's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reed's_law&quot; rel=&quot;nofollow&quot;&gt;Reed's Law on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;The utility of large networks, particularly social networks, scales exponentially with the size of the network.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This law is based on graph theory, where the utility scales as the number of possible sub-groups, which is faster than the number of participants or the number of possible pairwise connections. Odlyzko and others have argued that Reed's Law overstates the utility of the system by not accounting for the limits of human cognition on network effects; see &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#dunbars-number&quot;&gt;Dunbar's Number&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Law of Conservation of Complexity (Tesler's Law)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_conservation_of_complexity&quot; rel=&quot;nofollow&quot;&gt;The Law of Conservation of Complexity on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This law states that there is a certain amount of complexity in a system which cannot be reduced.&lt;/p&gt;
&lt;p&gt;Some complexity in a system is 'inadvertent'. It is a consequence of poor structure, mistakes, or just bad modeling of a problem to solve. Inadvertent complexity can be reduced (or eliminated). However, some complexity is 'intrinsic' as a consequence of the complexity inherent in the problem being solved. This complexity can be moved, but not eliminated.&lt;/p&gt;
&lt;p&gt;One interesting element to this law is the suggestion that even by simplifying the entire system, the intrinsic complexity is not reduced, it is &lt;em&gt;moved to the user&lt;/em&gt;, who must behave in a more complex way.&lt;/p&gt;
&lt;h3&gt;The Law of Leaky Abstractions&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/&quot; rel=&quot;nofollow&quot;&gt;The Law of Leaky Abstractions on Joel on Software&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5.8169014084507&quot;&gt;
&lt;p&gt;All non-trivial abstractions, to some degree, are leaky.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://twitter.com/spolsky&quot; rel=&quot;nofollow&quot;&gt;Joel Spolsky&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This law states that abstractions, which are generally used in computing to simplify working with complicated systems, will in certain situations 'leak' elements of the underlying system, this making the abstraction behave in an unexpected way.&lt;/p&gt;
&lt;p&gt;An example might be loading a file and reading its contents. The file system APIs are an &lt;em&gt;abstraction&lt;/em&gt; of the lower level kernel systems, which are themselves an abstraction over the physical processes relating to changing data on a magnetic platter (or flash memory for an SSD). In most cases, the abstraction of treating a file like a stream of binary data will work. However, for a magnetic drive, reading data sequentially will be &lt;em&gt;significantly&lt;/em&gt; faster than random access (due to increased overhead of page faults), but for an SSD drive, this overhead will not be present. Underlying details will need to be understood to deal with this case (for example, database index files are structured to reduce the overhead of random access), the abstraction 'leaks' implementation details the developer may need to be aware of.&lt;/p&gt;
&lt;p&gt;The example above can become more complex when &lt;em&gt;more&lt;/em&gt; abstractions are introduced. The Linux operating system allows files to be accessed over a network but represented locally as 'normal' files. This abstraction will 'leak' if there are network failures. If a developer treats these files as 'normal' files, without considering the fact that they may be subject to network latency and failures, the solutions will be buggy.&lt;/p&gt;
&lt;p&gt;The article describing the law suggests that an over-reliance on abstractions, combined with a poor understanding of the underlying processes, actually makes dealing with the problem at hand &lt;em&gt;more&lt;/em&gt; complex in some cases.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;p&gt;Real-world examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://forums.adobe.com/thread/376152&quot; rel=&quot;nofollow&quot;&gt;Photoshop Slow Startup&lt;/a&gt; - an issue I encountered in the past. Photoshop would be slow to startup, sometimes taking minutes. It seems the issue was that on startup it reads some information about the current default printer. However, if that printer is actually a network printer, this could take an extremely long time. The &lt;em&gt;abstraction&lt;/em&gt; of a network printer being presented to the system similar to a local printer caused an issue for users in poor connectivity situations.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;The Law of Triviality&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_triviality&quot; rel=&quot;nofollow&quot;&gt;The Law of Triviality on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This law suggests that groups will give far more time and attention to trivial or cosmetic issues rather than serious and substantial ones.&lt;/p&gt;
&lt;p&gt;The common fictional example used is that of a committee approving plans for nuclear power plant, who spend the majority of their time discussing the structure of the bike shed, rather than the far more important design for the power plant itself. It can be difficult to give valuable input on discussions about very large, complex topics without a high degree of subject matter expertise or preparation. However, people want to be seen to be contributing valuable input. Hence a tendency to focus too much time on small details, which can be reasoned about easily, but are not necessarily of particular importance.&lt;/p&gt;
&lt;p&gt;The fictional example above led to the usage of the term 'Bike Shedding' as an expression for wasting time on trivial details. An alternative term is 'Yak Shaving'.&lt;/p&gt;
&lt;h3&gt;The Unix Philosophy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_philosophy&quot; rel=&quot;nofollow&quot;&gt;The Unix Philosophy on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Unix Philosophy is that software components should be small, and focused on doing one specific thing well. This can make it easier to build systems by composing together small, simple, well-defined units, rather than using large, complex, multi-purpose programs.&lt;/p&gt;
&lt;p&gt;Modern practices like 'Microservice Architecture' can be thought of as an application of this law, where services are small, focused and do one specific thing, allowing complex behaviour to be composed of simple building blocks.&lt;/p&gt;
&lt;h3&gt;The Spotify Model&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/&quot; rel=&quot;nofollow&quot;&gt;The Spotify Model on Spotify Labs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Spotify Model is an approach to team and organisation structure which has been popularised by 'Spotify'. In this model, teams are organised around features, rather than technologies.&lt;/p&gt;
&lt;p&gt;The Spotify Model also popularises the concepts of Tribes, Guilds, Chapters, which are other components of their organisation structure.&lt;/p&gt;
&lt;h3&gt;Wadler's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.haskell.org/Wadler's_Law&quot; rel=&quot;nofollow&quot;&gt;Wadler's Law on wiki.haskell.org&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;In any language design, the total time spent discussing a feature in this list is proportional to two raised to the power of its position.&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;&lt;li&gt;Semantics&lt;/li&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;li&gt;Lexical syntax&lt;/li&gt;
&lt;li&gt;Lexical syntax of comments&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(In short, for every hour spent on semantics, 8 hours will be spent on the syntax of comments).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Similar to &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#the-law-of-triviality&quot;&gt;The Law of Triviality&lt;/a&gt;, Wadler's Law states what when designing a language, the amount of time spent on language structures is disproportionately high in comparison to the importance of those features.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;Wheaton's Law&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.wheatonslaw.com/&quot; rel=&quot;nofollow&quot;&gt;The Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dontbeadickday.com/&quot; rel=&quot;nofollow&quot;&gt;The Official Day&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don't be a dick.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Wil Wheaton&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Coined by Wil Wheaton (Star Trek: The Next Generation, The Big Bang Theory), this simple, concise, and powerful law aims for an increase in harmony and respect within a professional organization. It can be applied when speaking with coworkers, performing code reviews, countering other points of view, critiquing, and in general, most professional interactions humans have with each other.&lt;/p&gt;
&lt;h2&gt;Principles&lt;/h2&gt;
&lt;p&gt;Principles are generally more likely to be guidelines relating to design.&lt;/p&gt;
&lt;h3&gt;The Dilbert Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dilbert_principle&quot; rel=&quot;nofollow&quot;&gt;The Dilbert Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Companies tend to systematically promote incompetent employees to management to get them out of the workflow.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Scott Adams&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A management concept developed by Scott Adams (creator of the Dilbert comic strip), the Dilbert Principle is inspired by &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#the-peter-principle&quot;&gt;The Peter Principle&lt;/a&gt;. Under the Dilbert Principle, employees who were never competent are promoted to management in order to limit the damage they can do. Adams first explained the principle in a 1995 Wall Street Journal article, and expanded upon it in his 1996 business book, &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#reading-list&quot;&gt;The Dilbert Principle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See Also:&lt;/p&gt;
&lt;h3&gt;The Pareto Principle (The 80/20 Rule)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot; rel=&quot;nofollow&quot;&gt;The Pareto Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Most things in life are not distributed evenly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Pareto Principle suggests that in some cases, the majority of results come from a minority of inputs:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;80% of a certain piece of software can be written in 20% of the total allocated time (conversely, the hardest 20% of the code takes 80% of the time)&lt;/li&gt;
&lt;li&gt;20% of the effort produces 80% of the result&lt;/li&gt;
&lt;li&gt;20% of the work creates 80% of the revenue&lt;/li&gt;
&lt;li&gt;20% of the bugs cause 80% of the crashes&lt;/li&gt;
&lt;li&gt;20% of the features cause 80% of the usage&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In the 1940s American-Romanian engineer Dr. Joseph Juran, who is widely credited with being the father of quality control, &lt;a href=&quot;https://en.wikipedia.org/wiki/Joseph_M._Juran&quot; rel=&quot;nofollow&quot;&gt;began to apply the Pareto principle to quality issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This principle is also known as: The 80/20 Rule, The Law of the Vital Few and The Principle of Factor Sparsity.&lt;/p&gt;
&lt;p&gt;Real-world examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In 2002 Microsoft reported that by fixing the top 20% of the most-reported bugs, 80% of the related errors and crashes in windows and office would become eliminated (&lt;a href=&quot;https://www.crn.com/news/security/18821726/microsofts-ceo-80-20-rule-applies-to-bugs-not-just-features.htm&quot; rel=&quot;nofollow&quot;&gt;Reference&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;The Peter Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Peter_principle&quot; rel=&quot;nofollow&quot;&gt;The Peter Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;People in a hierarchy tend to rise to their &quot;level of incompetence&quot;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Laurence J. Peter&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A management concept developed by Laurence J. Peter, the Peter Principle observes that people who are good at their jobs are promoted, until they reach a level where they are no longer successful (their &quot;level of incompetence&quot;. At this point, as they are more senior, they are less likely to be removed from the organisation (unless they perform spectacularly badly) and will continue to reside in a role which they have few intrinsic skills at, as their original skills which made them successful are not necessarily the skills required for their new jobs.&lt;/p&gt;
&lt;p&gt;This is of particular interest to engineers - who initial start out in deeply technical roles, but often have a career path which leads to &lt;em&gt;managing&lt;/em&gt; other engineers - which requires a fundamentally different skills-set.&lt;/p&gt;
&lt;p&gt;See Also:&lt;/p&gt;
&lt;h3&gt;The Robustness Principle (Postel's Law)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Robustness_principle&quot; rel=&quot;nofollow&quot;&gt;The Robustness Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Be conservative in what you do, be liberal in what you accept from others.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Often applied in server application development, this principle states that what you send to others should be as minimal and conformant as possible, but you should be aim to allow non-conformant input if it can be processed.&lt;/p&gt;
&lt;p&gt;The goal of this principle is to build systems which are robust, as they can handle poorly formed input if the intent can still be understood. However, there are potentially security implications of accepting malformed input, particularly if the processing of such input is not well tested.&lt;/p&gt;
&lt;p&gt;Allowing non-conformant input, in time, may undermine the ability of protocols to evolve as implementors will eventually rely on this liberality to build their features.&lt;/p&gt;
&lt;p&gt;See Also:&lt;/p&gt;
&lt;h3&gt;SOLID&lt;/h3&gt;
&lt;p&gt;This is an acronym, which refers to:&lt;/p&gt;
&lt;p&gt;These are key principles in &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#todo&quot;&gt;Object-Oriented Programming&lt;/a&gt;. Design principles such as these should be able to aid developers build more maintainable systems.&lt;/p&gt;
&lt;h3&gt;The Single Responsibility Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot; rel=&quot;nofollow&quot;&gt;The Single Responsibility Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Every module or class should have a single responsibility only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first of the '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#solid&quot;&gt;SOLID&lt;/a&gt;' principles. This principle suggests that modules or classes should do one thing and one thing only. In more practical terms, this means that a single, small change to a feature of a program should require a change in one component only. For example, changing how a password is validated for complexity should require a change in only one part of the program.&lt;/p&gt;
&lt;p&gt;Theoretically, this should make the code more robust, and easier to change. Knowing that a component which is being changed has a single responsibility only means that &lt;em&gt;testing&lt;/em&gt; that change should be easier. Using the earlier example, changing the password complexity component should only be able to affect the features which relate to password complexity. It can be much more difficult to reason about the impact of a change to a component which has many responsibilities.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Open/Closed Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle&quot; rel=&quot;nofollow&quot;&gt;The Open/Closed Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Entities should be open for extension and closed for modification.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The second of the '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#solid&quot;&gt;SOLID&lt;/a&gt;' principles. This principle states that entities (which could be classes, modules, functions and so on) should be able to have their behaviour &lt;em&gt;extended&lt;/em&gt;, but that their &lt;em&gt;existing&lt;/em&gt; behaviour should not be able to be modified.&lt;/p&gt;
&lt;p&gt;As a hypothetical example, imagine a module which is able to turn a Markdown document into HTML. If the module could be extended to handle a newly proposed markdown feature, without modifying the module internals, then it would be open for extension. If the module could &lt;em&gt;not&lt;/em&gt; be modified by a consumer so that how existing Markdown features are handled, then it would be &lt;em&gt;closed&lt;/em&gt; for modification.&lt;/p&gt;
&lt;p&gt;This principle has particular relevance for object-oriented programming, where we may design objects to be easily extended, but would avoid designing objects which can have their existing behaviour changed in unexpected ways.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Liskov Substitution Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Liskov_substitution_principle&quot; rel=&quot;nofollow&quot;&gt;The Liskov Substitution Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;It should be possible to replace a type with a subtype, without breaking the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The third of the '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#solid&quot;&gt;SOLID&lt;/a&gt;' principles. This principle states that if a component relies on a type, then it should be able to use subtypes of that type, without the system failing or having to know the details of what that subtype is.&lt;/p&gt;
&lt;p&gt;As an example, imagine we have a method which reads an XML document from a structure which represents a file. If the method uses a base type 'file', then anything which derives from 'file' should be able to be used in the function. If 'file' supports seeking in reverse, and the XML parser uses that function, but the derived type 'network file' fails when reverse seeking is attempted, then the 'network file' would be violating the principle.&lt;/p&gt;
&lt;p&gt;This principle has particular relevance for object-oriented programming, where type hierarchies must be modeled carefully to avoid confusing users of a system.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Interface Segregation Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_segregation_principle&quot; rel=&quot;nofollow&quot;&gt;The Interface Segregation Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;No client should be forced to depend on methods it does not use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The fourth of the '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#solid&quot;&gt;SOLID&lt;/a&gt;' principles. This principle states that consumers of a component should not depend on functions of that component which it doesn't actually use.&lt;/p&gt;
&lt;p&gt;As an example, imagine we have a method which reads an XML document from a structure which represents a file. It only needs to read bytes, move forwards or move backwards in the file. If this method needs to be updated because an unrelated feature of the file structure changes (such as an update to the permissions model used to represent file security), then the principle has been invalidated. It would be better for the file to implement a 'seekable-stream' interface, and for the XML reader to use that.&lt;/p&gt;
&lt;p&gt;This principle has particular relevance for object-oriented programming, where interfaces, hierarchies and abstract types are used to &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#todo&quot;&gt;minimise the coupling&lt;/a&gt; between different components. &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#todo&quot;&gt;Duck typing&lt;/a&gt; is a methodology which enforces this principle by eliminating explicit interfaces.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Dependency Inversion Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_inversion_principle&quot; rel=&quot;nofollow&quot;&gt;The Dependency Inversion Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;High-level modules should not be dependent on low-level implementations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The fifth of the '&lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#solid&quot;&gt;SOLID&lt;/a&gt;' principles. This principle states that higher level orchestrating components should not have to know the details of their dependencies.&lt;/p&gt;
&lt;p&gt;As an example, imagine we have a program which read metadata from a website. We would assume that the main component would have to know about a component to download the webpage content, then a component which can read the metadata. If we were to take dependency inversion into account, the main component would depend only on an abstract component which can fetch byte data, and then an abstract component which would be able to read metadata from a byte stream. The main component would not know about TCP/IP, HTTP, HTML, etc.&lt;/p&gt;
&lt;p&gt;This principle is complex, as it can seem to 'invert' the expected dependencies of a system (hence the name). In practice, it also means that a separate orchestrating component must ensure the correct implementations of abstract types are used (e.g. in the previous example, &lt;em&gt;something&lt;/em&gt; must still provide the metadata reader component a HTTP file downloader and HTML meta tag reader). This then touches on patterns such as &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#todo&quot;&gt;Inversion of Control&lt;/a&gt; and &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws#todo&quot;&gt;Dependency Injection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The DRY Principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot; rel=&quot;nofollow&quot;&gt;The DRY Principle on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DRY is an acronym for &lt;em&gt;Don't Repeat Yourself&lt;/em&gt;. This principle aims to help developers reducing the repetition of code and keep the information in a single place and was cited in 1999 by Andrew Hunt and Dave Thomas in the book &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Pragmatic_Programmer&quot; rel=&quot;nofollow&quot;&gt;The Pragmatic Developer&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The opposite of DRY would be &lt;em&gt;WET&lt;/em&gt; (Write Everything Twice or We Enjoy Typing).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In practice, if you have the same piece of information in two (or more) different places, you can use DRY to merge them into a single one and reuse it wherever you want/need.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The KISS principle&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KISS_principle&quot; rel=&quot;nofollow&quot;&gt;KISS on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keep it simple, stupid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The KISS principle states that most systems work best if they are kept simple rather than made complicated; therefore, simplicity should be a key goal in design, and unnecessary complexity should be avoided. Originating in the U.S. Navy in 1960, the phrase has been associated with aircraft engineer Kelly Johnson.&lt;/p&gt;
&lt;p&gt;The principle is best exemplified by the story of Johnson handing a team of design engineers a handful of tools, with the challenge that the jet aircraft they were designing must be repairable by an average mechanic in the field under combat conditions with only these tools. Hence, the &quot;stupid&quot; refers to the relationship between the way things break and the sophistication of the tools available to repair them, not the capabilities of the engineers themselves.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;YAGNI&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/You_ain%27t_gonna_need_it&quot; rel=&quot;nofollow&quot;&gt;YAGNI on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an acronym for &lt;em&gt;&lt;strong&gt;Y&lt;/strong&gt;ou &lt;strong&gt;A&lt;/strong&gt;in't &lt;strong&gt;G&lt;/strong&gt;onna &lt;strong&gt;N&lt;/strong&gt;eed &lt;strong&gt;I&lt;/strong&gt;t&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;8.4193548387097&quot;&gt;
&lt;p&gt;Always implement things when you actually need them, never when you just foresee that you need them.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://twitter.com/RonJeffries&quot; rel=&quot;nofollow&quot;&gt;Ron Jeffries&lt;/a&gt;) (XP co-founder and author of the book &quot;Extreme Programming Installed&quot;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This &lt;em&gt;Extreme Programming&lt;/em&gt; (XP) principle suggests developers should only implement functionality that is needed for the immediate requirements, and avoid attempts to predict the future by implementing functionality that might be needed later.&lt;/p&gt;
&lt;p&gt;Adhering to this principle should reduce the amount of unused code in the codebase, and avoid time and effort being wasted on functionality that brings no value.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h3&gt;The Fallacies of Distributed Computing&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&quot; rel=&quot;nofollow&quot;&gt;The Fallacies of Distributed Computing on Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also known as &lt;em&gt;Fallacies of Networked Computing&lt;/em&gt;, the Fallacies are a list of conjectures (or beliefs) about distributed computing, which can lead to failures in software development. The assumptions are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The network is reliable&lt;/li&gt;
&lt;li&gt;Latency is zero&lt;/li&gt;
&lt;li&gt;Bandwidth is infinite&lt;/li&gt;
&lt;li&gt;The network is secure&lt;/li&gt;
&lt;li&gt;Topology doesn't change&lt;/li&gt;
&lt;li&gt;There is one administrator&lt;/li&gt;
&lt;li&gt;Transport cost is zero&lt;/li&gt;
&lt;li&gt;The network is homogeneous&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first four items were listed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Bill_Joy&quot; rel=&quot;nofollow&quot;&gt;Bill Joy&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/aka_pugs&quot; rel=&quot;nofollow&quot;&gt;Tom Lyon&lt;/a&gt; around 1991 and first classified by &lt;a href=&quot;https://en.wikipedia.org/wiki/James_Gosling&quot; rel=&quot;nofollow&quot;&gt;James Gosling&lt;/a&gt; as the &quot;Fallacies of Networked Computing&quot;. &lt;a href=&quot;https://en.wikipedia.org/wiki/L._Peter_Deutsch&quot; rel=&quot;nofollow&quot;&gt;L. Peter Deutsch&lt;/a&gt; added the 5th, 6th and 7th fallacies. In the late 90's Gosling added the 8th fallacy.&lt;/p&gt;
&lt;p&gt;The group were inspired by what was happening at the time inside &lt;a href=&quot;https://en.wikipedia.org/wiki/Sun_Microsystems&quot; rel=&quot;nofollow&quot;&gt;Sun Microsystems&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These fallacies should be considered carefully when designing code which is resilient; assuming any of these fallacies can lead to flawed logic which fails to deal with the realities and complexities of distributed systems.&lt;/p&gt;
&lt;p&gt;See also:&lt;/p&gt;
&lt;h2&gt;Reading List&lt;/h2&gt;
&lt;p&gt;If you have found these concepts interesting, you may enjoy the following books.&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please do contribute! &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/issues/new&quot;&gt;Raise an issue&lt;/a&gt; if you'd like to suggest an addition or change, or &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/compare&quot;&gt;Open a pull request&lt;/a&gt; to propose your own changes.&lt;/p&gt;
&lt;p&gt;Please be sure to read the &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/blob/master/.github/contributing.md&quot;&gt;Contributing Guidelines&lt;/a&gt; for requirements on text, style and so on. Please be aware of the &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/blob/master/.github/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; when engaging in discussions on the project.&lt;/p&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;p&gt;Hi! If you land here, you've clicked on a link to a topic I've not written up yet, sorry about this - this is work in progress!&lt;/p&gt;
&lt;p&gt;Feel free to &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/issues&quot;&gt;Raise an Issue&lt;/a&gt; requesting more details, or &lt;a href=&quot;https://github.com/dwmkerr/hacker-laws/pulls&quot;&gt;Open a Pull Request&lt;/a&gt; to submit your proposed definition of the topic.&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 15:36:33 +0000</pubDate>
<dc:creator>dwmkerr</dc:creator>
<og:image>https://repository-images.githubusercontent.com/118858739/dc0ee080-6ab8-11e9-8b5e-e448b8fe667c</og:image>
<og:type>object</og:type>
<og:title>dwmkerr/hacker-laws</og:title>
<og:url>https://github.com/dwmkerr/hacker-laws</og:url>
<og:description>💻📖 Laws, Theories, Principles and Patterns that developers will find useful. #hackerlaws - dwmkerr/hacker-laws</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/dwmkerr/hacker-laws</dc:identifier>
</item>
<item>
<title>Markdeep – plain text documents with diagrams, equations, and Markdown syntax</title>
<link>https://casual-effects.com/markdeep/</link>
<guid isPermaLink="true" >https://casual-effects.com/markdeep/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; href=&quot;logo32.ico&quot;/&gt;&lt;title&gt;Markdeep&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;353.83083078682&quot;&gt;
&lt;center&gt;&lt;span class=&quot;title&quot;&gt;Markdeep&lt;/span&gt;&lt;p&gt;✒&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;✒&lt;/p&gt;
&lt;center&gt;&lt;a href=&quot;https://casual-effects.com/markdeep/features.md.html&quot;&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#features&quot;&gt;Features&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#templates&quot;&gt;&lt;strong&gt;Templates&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#getstarted&quot;&gt;Get Started&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#examples&quot;&gt;Examples&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#api&quot;&gt;Advanced&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#credits&quot;&gt;Credits&lt;/a&gt; | &lt;a href=&quot;https://casual-effects.com/markdeep/#license&quot;&gt;License&lt;/a&gt;&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;Markdeep&lt;/strong&gt; is a technology for writing plain text documents that will look good in any web browser, whether local or remote. It supports diagrams, calendars, equations, and other features as extensions of Markdown syntax.&lt;/p&gt;
&lt;p&gt;Markdeep is free and easy to use. It doesn't require a plugin or Internet connection. Your document never leaves your machine and there's nothing to install. Just start writing in your favorite text editor. You don't have to export, compile, or otherwise process your document. Here's an example of a text editor and a browser viewing the &lt;em&gt;same file&lt;/em&gt; simultaneously: &lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;view&quot;&gt;Text Editor View&lt;br/&gt;&lt;div class=&quot;window&quot;&gt;
&lt;p&gt;📓&lt;/p&gt;
&lt;p&gt;example.md.html&lt;/p&gt;
&lt;p&gt;×&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;view&quot;&gt;Web Browser View&lt;br/&gt;&lt;div class=&quot;window browser&quot;&gt;

&lt;p&gt;☐&lt;/p&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;p&gt;×&lt;/p&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;p&gt;×&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Markdeep is ideal for design documents, specifications, README files, code documentation, lab reports, blogs, and technical web pages. Because the source is plain text, Markdeep works well with software development toolchains.&lt;/p&gt;
&lt;p&gt;Markdeep was created by Morgan McGuire (&lt;a href=&quot;http://casual-effects.com&quot;&gt;Casual Effects&lt;/a&gt;) with inspiration from John Gruber's &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; and Donald Knuth's and Leslie Lamport's &lt;a href=&quot;https://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;(See the &lt;a href=&quot;https://casual-effects.com/markdeep/features.md.html&quot;&gt;demo&lt;/a&gt;!)&lt;/p&gt;
&lt;p&gt;Unique features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Diagrams&lt;/li&gt;
&lt;li&gt;Insert documents into one another&lt;/li&gt;
&lt;li&gt;LaTeX equation typesetting and numbering&lt;/li&gt;
&lt;li&gt;Table of contents&lt;/li&gt;
&lt;li&gt;Reference images and embedded images&lt;/li&gt;
&lt;li&gt;Document title and subtitle formatting&lt;/li&gt;
&lt;li&gt;Schedules and calendars&lt;/li&gt;
&lt;li&gt;Section numbering and references&lt;/li&gt;
&lt;li&gt;Figure, listing, and table numbering and references&lt;/li&gt;
&lt;li&gt;Smart quotes&lt;/li&gt;
&lt;li&gt;Embedded video&lt;/li&gt;
&lt;li&gt;CSS stylesheets&lt;/li&gt;
&lt;li&gt;Page breaks&lt;/li&gt;
&lt;li&gt;En dash, em dash, ×, minus, and degrees&lt;/li&gt;
&lt;li&gt;Attributes on links&lt;/li&gt;
&lt;li&gt;Unindexed sections&lt;/li&gt;
&lt;li&gt;Works in any browser by adding one line to the bottom of a text document&lt;/li&gt;
&lt;li&gt;Fallback to ASCII in a browser if you have neither the local file nor Internet access&lt;/li&gt;
&lt;li&gt;Optionally process server-side with &lt;code&gt;node.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Optionally batch process to PDF with headless browser flags&lt;/li&gt;
&lt;li&gt;HTML export to static content using &lt;code&gt;?export&lt;/code&gt; in the URL or &lt;q&gt;&lt;a href=&quot;https://github.com/romainguy/markdeep-rasterizer&quot;&gt;Rasterizer&lt;/a&gt;&lt;/q&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Maruku + github + Admonition + CommonMark Markdown features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Tables&lt;/li&gt;
&lt;li&gt;Paragraph formatting&lt;/li&gt;
&lt;li&gt;Automatic e-mail address and URL linking&lt;/li&gt;
&lt;li&gt;Nested, numbered and bulleted lists&lt;/li&gt;
&lt;li&gt;Fenced code blocks&lt;/li&gt;
&lt;li&gt;Links and reference links&lt;/li&gt;
&lt;li&gt;Task lists&lt;/li&gt;
&lt;li&gt;Bold, italic, code, strikethrough&lt;/li&gt;
&lt;li&gt;Hyperlinks&lt;/li&gt;
&lt;li&gt;Attributes on images&lt;/li&gt;
&lt;li&gt;Blockquotes&lt;/li&gt;
&lt;li&gt;Citations&lt;/li&gt;
&lt;li&gt;Footnotes and endnotes&lt;/li&gt;
&lt;li&gt;Definition lists&lt;/li&gt;
&lt;li&gt;Images&lt;/li&gt;
&lt;li&gt;Doesn't italicize math with * or words containing underscores&lt;/li&gt;
&lt;li&gt;Unicode&lt;/li&gt;
&lt;li&gt;Admonitions (callout notes)&lt;/li&gt;
&lt;li&gt;HTML passthrough&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;To create a Markdeep document, just open any text editor and start writing. Paste the following at the bottom of your document as a single line. Then, save it as plain text with a filename with extension &lt;code&gt;.md.html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;!-- Markdeep: --&amp;gt;&amp;lt;style class=&quot;fallback&quot;&amp;gt;body{visibility:hidden;white-space:pre;font-family:monospace}&amp;lt;/style&amp;gt;&amp;lt;script src=&quot;markdeep.min.js&quot; charset=&quot;utf-8&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&quot;https://casual-effects.com/markdeep/latest/markdeep.min.js&quot; charset=&quot;utf-8&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;window.alreadyProcessedMarkdeep||(document.body.style.visibility=&quot;visible&quot;)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you wish to use Unicode characters in your source document, you must put the following line at the &lt;em&gt;top&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can drag your document into a web browser or double click on it to see it with formatting. You can also read the document in a browser when you don't have an Internet connection. If you want to avoid losing formatting when offline, just keep &lt;a href=&quot;https://casual-effects.com/markdeep/markdeep.min.js&quot; download=&quot;markdeep.min.js&quot;&gt;markdeep.min.js&lt;/a&gt; in the same folder.&lt;/p&gt;
&lt;p&gt;View the &lt;a href=&quot;https://casual-effects.com/markdeep/features.md.html?noformat&quot;&gt;plain source&lt;/a&gt; of the &lt;a href=&quot;https://casual-effects.com/markdeep/features.md.html&quot;&gt;feature demo&lt;/a&gt; to learn the formatting styles that you can use. Markdeep extends Markdown, and to quote John Gruber:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;The overriding design goal for Markdown's formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To inspect the original text source for a Markdeep document in a browser, just add &lt;code&gt;?noformat&lt;/code&gt; to the end of its URL.&lt;/p&gt;

&lt;h2&gt;Markdown Modes for Popular Editors&lt;/h2&gt;
&lt;p&gt;For Markdeep + Markdown Atom support, press Ctrl+Alt+P to open the Command Palette. Type &quot;open your config&quot; and then click on the result. This will edit your &lt;code&gt;config.cson&lt;/code&gt; file. Add the following entry:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&quot;*&quot;:
    core:
        customFileTypes:
            &quot;source.gfm&quot;: [&quot;md.html&quot;, &quot;md&quot;]
      
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Markdeep + Markdown Emacs installation, save &lt;a href=&quot;http://jblevins.org/projects/markdown-mode/markdown-mode.el&quot; download=&quot;markdown-mode.el&quot;&gt;&lt;code&gt;markdown-mode.el&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;~/emacs.d/&lt;/code&gt; and add the following lines to your &lt;code&gt;~/.emacs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
;; Uncomment the following line on OS X
;; (add-to-list 'load-path (expand-file-name &quot;~/.emacs.d&quot;))

(autoload 'markdown-mode &quot;markdown-mode&quot; &quot;Major mode for editing Markdown&quot; t)
(add-to-list 'auto-mode-alist '(&quot;\\.md.html\\'&quot; . markdown-mode)
(add-to-list 'auto-mode-alist '(&quot;\\.md\\'&quot; . markdown-mode))
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Diagram Tips&lt;/h2&gt;
&lt;p&gt;There are a lot of techniques that can make drawing diagrams in plain text easier. I just use Visual Studio or Emacs in overwrite mode, and do everything by hand. I find that much easier than installing or learning a new tool. Here are some basic editor tricks:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In most editors, pressing the insert key will enter overwrite mode, where you can type without inserting. If you're on a Macbook in Bootcamp, press &lt;code&gt;fn + return&lt;/code&gt; for insert. Or, in Emacs, use &lt;code&gt;M-x overwrite-mode&lt;/code&gt; to toggle overwriting.&lt;/li&gt;
&lt;li&gt;In Visual Studio, hold down Alt while selecting to make a selection rectangle. This allows you to insert, type, and delete across multiple lines.&lt;/li&gt;
&lt;li&gt;In Emacs, you can define a macro on the fly with &lt;code&gt;C-x (&lt;/code&gt;, some key strokes, and then &lt;code&gt;C-x )&lt;/code&gt;. Press &lt;code&gt;C-x e&lt;/code&gt; to play back the macro, and keep repeating &lt;code&gt;e&lt;/code&gt; to keep executing it. I use this to eliminate the manual work of repetitive actions, for example, adding a space on the left of an object and deleting one on its right to shift the object right.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Others prefer more sophisticated options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Overwrite-mode, Artist-mode, or Picture-mode in Emacs. These are minor modes that you can toggle on top of your major (language) mode.&lt;/li&gt;
&lt;li&gt;Vim &lt;a href=&quot;http://www.vim.org/scripts/script.php?script_id=40&quot;&gt;DrawIt!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://asciiflow.com&quot;&gt;ASCIIFlow Infinity&lt;/a&gt; is a free web tool for drawing ASCII diagrams.&lt;/li&gt;
&lt;li&gt;Org-mode is a major mode in Emacs for...everything. Markdeep diagrams are largely compatibile with its ditaa diagram syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://search.cpan.org/dist/App-Asciio/lib/App/Asciio.pm&quot;&gt;Asciio&lt;/a&gt; is a standalone tool.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jave.de/&quot;&gt;JavE&lt;/a&gt; is a standalone diagram tool, but its syntax isn't entirely compatible with Markdeep.&lt;/li&gt;
&lt;li&gt;The Unix tool groff has an interpreter for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Pic_language&quot;&gt;Pic&lt;/a&gt; language, which can be used to generate diagrams from graphs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://search.cpan.org/~tels/Graph-Easy/bin/graph-easy&quot;&gt;graph-easy&lt;/a&gt; can convert Dot and other graph languages to ASCII.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://monodraw.helftone.com/&quot;&gt;Monodraw&lt;/a&gt; is an OS X &lt;em&gt;Unicode&lt;/em&gt; art editor that can produce Markdeep diagrams, but you should avoid using non-ISO 8859-1 (Latin 1) characters, since they won't produce lines.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.figlet.org/&quot;&gt;FIGlet&lt;/a&gt; will convert text to ASCII art banners. Some of its fonts are Markdeep compatible.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;What about the &quot;ASCII drawing characters,&quot; the DOS code page 437 and 850 characters? They're not widely supported in most modern monospace fonts (and thus editors), which are keyed to Unicode. Although Unicode has the same box drawing characters, they're now at different code points and not well supported by text-only tools (alas! I grew up with text-mode graphics and miss them). &lt;/p&gt;

&lt;p&gt;Markdeep is used extensively within the technology industry and academia. Manuals, theses, and even whole books have been written in it. Here are some public examples by myself and my colleagues:&lt;/p&gt;


&lt;p&gt;&lt;em&gt;The following features are experimental and may change at any time. See the &lt;a href=&quot;https://casual-effects.com/markdeep/#history&quot;&gt;release history&lt;/a&gt; for change information between versions.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;URL Arguments&lt;/h2&gt;
&lt;p&gt;You can add the following arguments to any Markdeep document URL to alter how it is displayed. For example, &lt;code&gt;http://foo.bar/index.md.html?export&lt;/code&gt; shows the HTML output.&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code&gt;noformat&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Attempt to display the original source of the document. Due to web browser limitations, in some cases this will not be 100% accurate to the actual file source.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;export&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Make the displayed body HTML source code produced by Markdeep. This is useful for exporting a Markdeep document to HTML if you need to paste it into some context, such as an ePub book or Blog site, that does not allow scripts.&lt;/dd&gt;
&lt;/dl&gt;&lt;h2&gt;Options&lt;/h2&gt;
&lt;p&gt;Markdeep looks in the &lt;code&gt;window.markdeepOptions&lt;/code&gt; object to determine its behavior. The legal options are:&lt;/p&gt;
&lt;dl&gt;&lt;dt&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A String that can be:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;'markdeep'&lt;/code&gt; - the default: process the document as Markdeep&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'script'&lt;/code&gt; - do not modify the document&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'html'&lt;/code&gt; - process the document as HTML with embedded Markdeep nodes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'doxygen'&lt;/code&gt; - process special tags in Doxygen documentation&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;An Object describing the natural language to use for keywords such as Section and Figure. (If your language is already supported by Markdeep, it is much easier to set this via a &lt;code&gt;&amp;lt;meta lang=&quot;...&quot;&amp;gt;&lt;/code&gt; tag in the document.) Look at the value of the global variable &lt;code&gt;FRENCH&lt;/code&gt; in the source code to see the structure of this Object.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;tocStyle&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A String specifying the layout style for the table of contents. Values are:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;'auto'&lt;/code&gt; - Adjust based on the length of the document. (Default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'none'&lt;/code&gt; - Do not show a table of contents&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'short'&lt;/code&gt; - Show a short table of level-1 headers on a line across the top of the document&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'medium'&lt;/code&gt; - Float a small-font full table of contents to the right of the abstract&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'long'&lt;/code&gt; - Insert a full table of contents in normal font size as the first section after the abstract&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;scrollThreshold&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A Number specifying the distance in pixels that the body can be scrolled before the &lt;code&gt;scrolled&lt;/code&gt; class should be added to the &lt;code&gt;body&lt;/code&gt; element. This is useful for creating CSS styles for web page headers that present differently when the document is first shown versus scrolled down to the contents. The default is 80.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;definitionStyle&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A String specifying the layout style for definition lists. Values are:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;'auto'&lt;/code&gt; - Adjust based on the longest definition in each list. (Default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'short'&lt;/code&gt; - Always format as a table, where definitions are in a column on the left.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'long'&lt;/code&gt; - Always format using a hanging indent, where the definitions are under the terms.&lt;/li&gt;
&lt;/ul&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;hideEmptyWeekends&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A Boolean specifying whether the calendar views from schedule lists should remove weekend days if there are no events on them. The default is &lt;code&gt;true&lt;/code&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;detectMath&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A Boolean that defaults to &lt;code&gt;true&lt;/code&gt;. If true, when LaTeX math surrounded by &lt;code&gt;$...$&lt;/code&gt;, &lt;code&gt;\(...\)&lt;/code&gt;, or &lt;code&gt;\begin{...}...\end{...}&lt;/code&gt; is encountered, the MathJax processor is automatically loaded from their CDN. Set to &lt;code&gt;false&lt;/code&gt; if you don't use math notation, host MathJax locally and include it using a script tag yourself, or use an alternative math processor.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;showLabels&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A Boolean that defaults to &lt;code&gt;false&lt;/code&gt;. Display all labels for Figures, Listings, and Tables, as well as URLs for images with captions, the document itself, and links. This is useful when printing proofs of book chapters.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;sortScheduleLists&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A Boolean that defaults to &lt;code&gt;true&lt;/code&gt;. Sort schedules in order of increasing date, regardless of the order in which events appear in the source document.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;captionAbove&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A table mapping &lt;code&gt;diagram&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;listing&lt;/code&gt;, and &lt;code&gt;table&lt;/code&gt; to Booleans. Each defaults to &lt;code&gt;false&lt;/code&gt;, meaning that captions appear below (after) the objects. Set values to true to move the captions above (before) the objects. Example: &lt;code&gt;markdeepOptions.captionAbove.listing = true&lt;/code&gt;. In the Markdeep source document, captions must always appear &lt;em&gt;after&lt;/em&gt; the object. This option only affects where they appear when the document is viewed.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;onLoad&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Function invoked after Markdeep is done processing the document and the DOM is ready.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;linkAPIDefinitions&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Boolean that defaults to &lt;code&gt;false&lt;/code&gt;. If true, inline code referencing a `variable` or `function()` is linked to a definition list that also uses inline code formatting for that `variable` or `function(args...)`. There can be no space between a function name and the opening paren.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;Tables&lt;/h2&gt;
&lt;p&gt;You can use a &lt;a href=&quot;http://www.tablesgenerator.com/markdown_tables&quot;&gt;markdown table generator&lt;/a&gt; to produce and edit the source for a table in Markdeep, since Markdeep is a superset of CommonMark markdown.&lt;/p&gt;

&lt;h2&gt;Markdeep to PDF, EPUB, and HTML&lt;/h2&gt;
&lt;p&gt;You can of course print Markdeep documents to PDF from your browser manually. Markdeep reformats with some sensitivity to page breaks and printing-specific layout when you do so. To automate the process of generating PDF files from Markdeep, I use Chrome in headless mode. For example:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7.5&quot;&gt;&lt;code readability=&quot;5&quot;&gt;# OS X:&lt;br/&gt;/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --headless --print-to-pdf=output.pdf input.md.html&lt;p&gt;# Windows:&lt;br/&gt;C:\Program\ Files\Google\Chrome\Application\chrome.exe --headless --print-to-pdf=output.pdf input.md.html&lt;/p&gt;&lt;p&gt;# Linux:&lt;br/&gt;google-chrome --headless --print-to-pdf=output.pdf input.md.html&lt;/p&gt;&lt;/code&gt;&lt;/div&gt;
&lt;p&gt;This will print some error messages but should also create the PDF correctly. The filename can be a raw OS-level filename, a &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; protocol URL, or a &lt;code&gt;file&lt;/code&gt; protocol URL. You may need to host the &lt;code&gt;markdeep.min.js&lt;/code&gt; script in the same directory as your content for local files, depending on your browser and system configuration.&lt;/p&gt;
&lt;p&gt;I previously used the wkhtmltopdf program for PDF generation this purpose, but its recent versions do not work very well on OS X.&lt;/p&gt;
&lt;p&gt;To force sections to begin new pages when printed or in a PDF, add the following to your Markdeep document:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&amp;lt;style&amp;gt;.md h1, .md .nonumberh1 {page-break-before:always}&amp;lt;/style&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Andrew Glassner wrote a detailed guide to converting &lt;a href=&quot;https://imaginary-institute.com/resources/MarkdeepToInDesign/MD-ID-notes.md.html&quot;&gt;Markdeep to InDesign&lt;/a&gt;, a process which he used for producing his recent machine learning book. InDesign gives you an export path to Kindle and EPUB as well as PDF and other book formats.&lt;/p&gt;
&lt;p&gt;Noah Doersing made a &lt;a href=&quot;https://casual-effects.com/markdeep/Noah%20Doersing&quot;&gt;neat package&lt;/a&gt; for generating books (including theses) using Markdeep.&lt;/p&gt;
&lt;p&gt;Under OS X, you can run &lt;code&gt;join.py&lt;/code&gt; to concatenate multiple Markdeep PDF chapters for a thesis or book with the single-line command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&quot;/System/Library/Automator/Combine PDF Pages.action/Contents/Resources/join.py&quot; -o merged-file.pdf file1.pdf file2.pdf ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;?export&lt;/code&gt; option produces raw HTML export in a browser, which you can then manually copy or save. For automated HTML export, see &lt;a href=&quot;http://momentsingraphics.de/?p=97&quot;&gt;this guide&lt;/a&gt; that uses Firefox and another JavaScript file.&lt;/p&gt;
&lt;p&gt;For automated HTML export, see also the node.js solution &lt;q&gt;&lt;a href=&quot;https://github.com/romainguy/markdeep-rasterizer&quot;&gt;markdeep-rasterizer&lt;/a&gt;&lt;/q&gt; by Romain Guy.&lt;/p&gt;

&lt;h2&gt;Markdeep in HTML Documents&lt;/h2&gt;
&lt;p&gt;By default, Markdeep passes HTML commands through to the browser. This is for HTML in a primarily Markdeep document. If you have a document that is instead primarily HTML and you want to use Markdeep within it, then load the script with the following code at the end of the document inside of the &lt;code&gt;body&lt;/code&gt; tag:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;window.markdeepOptions = {mode: 'html'};&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;script src=&quot;markdeep.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will process &lt;code&gt;&amp;lt;markdeep&amp;gt;&lt;/code&gt; tags as Markdeep (which may include embedded diagrams enclosed in asterisks), &lt;code&gt;&amp;lt;diagram&amp;gt;&lt;/code&gt; tags as Markdeep diagrams (which do not need enclosing asterisks), and leave any other content in the document unmodified as HTML.&lt;/p&gt;
&lt;p&gt;You can also use &lt;code&gt;&amp;lt;pre class=&quot;markdeep&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;pre class=&quot;diagram&quot;&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;h2&gt;Markdeep with Doxygen&lt;/h2&gt;
&lt;h3&gt;One-Time Configuration&lt;/h3&gt;
&lt;p&gt;Add the following to &lt;code&gt;Doxyfile&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;HTML_FOOTER = footer.html&lt;br/&gt;EXAMPLE_PATH = markdeep-dir&lt;br/&gt;ALIASES=&quot;copy{1}=\htmlonly &amp;lt;script&amp;gt;document.write('&amp;lt;div style=\'display:none;visibility:hidden;\'&amp;gt;');&amp;lt;/script&amp;gt; \endhtmlonly \image html \1 \n \htmlonly &amp;lt;script&amp;gt;document.write('&amp;lt;/div&amp;gt;');&amp;lt;/script&amp;gt; \endhtmlonly &quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where &lt;code&gt;markdeep-dir&lt;/code&gt; is the location of your optional Markdeep overview documentation files relative to the &lt;code&gt;Doxyfile&lt;/code&gt;. &lt;code&gt;footer.html&lt;/code&gt; is your custom footer, which must include the following lines:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;window.markdeepOptions = {mode: 'doxygen'};&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;script src=&quot;https://casual-effects.com/markdeep/latest/markdeep.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&quot;markdeep.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Within API documentation, you can use &lt;code&gt;&amp;lt;pre class=&quot;markdeep&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;pre class=&quot;diagram&quot;&amp;gt;&lt;/code&gt; tags to add Markdeep content. Regular markdown will continue to be processed by Doxygen outside of those tags as well.&lt;/p&gt;
&lt;h3&gt;Adding Documentation&lt;/h3&gt;
&lt;p&gt;To insert pages of full Markdeep documents, without any Doxygen or comment syntax, use the &lt;code&gt;\htmlinclude&lt;/code&gt; command. To make Doxygen copy images referenced from your Markdeep documents to your documentation output directory, use the &lt;code&gt;\copy&lt;/code&gt; command in any Doxygen file.&lt;/p&gt;
&lt;p&gt;For example, to set your documentation main page to be Markdeep embedded within the Doxygen docs and copy &lt;code&gt;architecture.png&lt;/code&gt;, make a &lt;code&gt;mainpage.dox&lt;/code&gt; that contains:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/** \mainpage&lt;br/&gt;\copy{architecture.png}&lt;br/&gt;\htmlinclude mainpage.md.html */&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Javascript API&lt;/h2&gt;
&lt;p&gt;You can prevent Markdeep from autoformatting a document so that you can use it as a Javascript library by loading it as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;window.markdeepOptions = {mode: 'script'};&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;script src=&quot;https://casual-effects.com/markdeep/latest/markdeep.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&quot;markdeep.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This allows you to then manually invoke diagram processing or full Markdeep processing from within your own Javascript programs. Markdeep exports the following members on &lt;code&gt;window.markdeep&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;function format(src, elementMode)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;Converts a String or DOM Element containing Markdeep content into a String of HTML that is returned. The result does not include the Markdeep header (stylesheet and math library script tags) or footer (signature line). The input is not modified.&lt;/p&gt;
&lt;p&gt;Optional argument &lt;code&gt;elementMode&lt;/code&gt; defaults to true, which surpresses page titles and a table of contents. Set &lt;code&gt;elementMode = false&lt;/code&gt; if processing a whole document at once. Section captions are unaffected by this argument.&lt;/p&gt;
&lt;br/&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;function formatDiagram(str, alignment)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Converts a Markdeep diagram (without the surrounding asterisks) to a String containing SVG HTML that is returned.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alignment&lt;/code&gt; is an optional String value for the &lt;code&gt;float&lt;/code&gt; attribute of the SVG node. It may be &lt;code&gt;'left'&lt;/code&gt;, &lt;code&gt;'right'&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;br/&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;function stylesheet()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Returns the Markdeep default stylesheet used for short documents. Markdeep adds extra spacing around the title when formatting a large document.&lt;br/&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;Markdeep is open source, so you can directly download and modify the source: &lt;a href=&quot;https://casual-effects.com/markdeep/latest/markdeep.js&quot;&gt;markdeep.js&lt;/a&gt;. Implementation suggestions and patches are welcome at &lt;a href=&quot;mailto:morgan@casual-effects.com&quot;&gt;morgan@casual-effects.com&lt;/a&gt;. I'm particularly interested in suggestions for ways to significantly reduce the (minified) script size further.&lt;/p&gt;
&lt;p&gt;This was a small hobby project, so I don't provide technical support and can't add every feature requested. However, so far I've been able to fix all reported bugs within a few days and often add features if they are straightforward and well-specified. Fortunately, if I'm unable to add the change that you want, you can just make those changes yourself.&lt;/p&gt;


&lt;p&gt;I created Markdeep because I was no longer willing to choose between design documents that looked good and those that worked well with programming tools. I liked what Mark&lt;em&gt;&lt;strong&gt;down&lt;/strong&gt;&lt;/em&gt; did on web servers, so I used that as a starting point and added more styling features and a way to directly view the documents client side in a browser.&lt;/p&gt;
&lt;p&gt;HTML is &quot;mark&lt;em&gt;&lt;strong&gt;up&lt;/strong&gt;&lt;/em&gt;&quot; that extends plain text with formatting. Unfortunately, the formatting tags often make original document source hard to read and write. This is slow and annoying, especially for those of us who use programming tools for document editing or want formatting in documentation files.&lt;/p&gt;
&lt;p&gt;John Gruber invented &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; to address HTML's editing problems. The name &quot;mark&lt;strong&gt;&lt;em&gt;down&lt;/em&gt;&lt;/strong&gt;&quot; conveys styling in the opposite direction of the &quot;mark&lt;strong&gt;&lt;em&gt;up&lt;/em&gt;&lt;/strong&gt;&quot; tag syntax. Markdown beautifies text without explicit tags, based on common practices from ASCII e-mail and plain-text documents.&lt;/p&gt;
&lt;p&gt;&quot;Mark&lt;em&gt;&lt;strong&gt;deep&lt;/strong&gt;&lt;/em&gt;&quot; is farther &quot;down&quot; from &quot;mark&lt;em&gt;&lt;strong&gt;down&lt;/strong&gt;&lt;/em&gt;&quot; on the autostyling and beautification path. Markdeep combines an easy-to-use and browser-friendly packaging with new unique features such as diagrams. The code includes some of the best previous Javascript document formatting libraries and links to &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt; for equation typesetting.&lt;/p&gt;
&lt;p&gt;Markdeep was created by Morgan McGuire. It extends the design and implementation work of:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;John Gruber's original &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; concept and specification&lt;/li&gt;
&lt;li&gt;Ben Hollis' &lt;a href=&quot;http://maruku.rubyforge.org/maruku.html&quot;&gt;Maruku&lt;/a&gt; (aka &quot;Github&quot;) Markdown dialect specification&lt;/li&gt;
&lt;li&gt;Michel Fortin's &lt;a href=&quot;https://michelf.ca/projects/php-markdown/extra/&quot;&gt;Extra&lt;/a&gt; Markdown dialect specification&lt;/li&gt;
&lt;li&gt;Ivan Sagalaev's &lt;a href=&quot;https://highlightjs.org/&quot;&gt;highlight.js&lt;/a&gt; for syntax coloring&lt;/li&gt;
&lt;li&gt;Contributors to the above open source projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Markdeep is open source. You may use, extend, and redistribute Markdeep without charge under the terms of the &lt;a href=&quot;https://opensource.org/licenses/BSD-2-Clause&quot;&gt;BSD license&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
      Copyright 2015-2019, Morgan McGuire
      All rights reserved.

      Redistribution and use in source and binary forms, with or without modification, 
      are permitted provided that the following conditions are met:

      1. Redistributions of source code must retain the above copyright notice, this
      list of conditions and the following disclaimer.

      2. Redistributions in binary form must reproduce the above copyright notice, this
      list of conditions and the following disclaimer in the documentation and/or other
      materials provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND 
      ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
      WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
      IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
      LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
      OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
      THE POSSIBILITY OF SUCH DAMAGE.
    
&lt;/pre&gt;
&lt;p&gt;Markdeep includes highlight.js, so you are also bound by its BSD license:&lt;/p&gt;
&lt;pre&gt;
      Copyright (c) 2006, Ivan Sagalaev
      All rights reserved.

      Redistribution and use in source and binary forms, with or without modification, are 
      permitted provided that the following conditions are met:
      
      * Redistributions of source code must retain the above copyright notice, this list of
      conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list 
      of conditions and the following disclaimer in the documentation and/or other materials
      provided with the distribution.
      * Neither the name of highlight.js nor the names of its contributors may be used to 
      endorse or promote products derived from this software without specific prior written 
      permission.
      
      THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR 
      IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
      MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
      THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
      EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
      SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
      HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    
&lt;/pre&gt;


&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/CasualEffects&quot;&gt;@CasualEffects&lt;/a&gt; on Twitter for notification of new incremental features and releases.&lt;/p&gt;
&lt;p&gt;Old releases are archived as&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;code&gt;https://casual-effects.com/markdeep/&lt;em&gt;VERSION&lt;/em&gt;/markdeep.min.js&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can modify the Markdeep line at the bottom of a document to hardcode to a specific version instead of the default version of &quot;&lt;code&gt;latest&lt;/code&gt;&quot;.&lt;/p&gt;
&lt;p&gt;You can report bugs to &lt;a href=&quot;mailto:morgan@casual-effects.com&quot;&gt;morgan@casual-effects.com&lt;/a&gt; by sending a Markdeep document and what you think is wrong about the way that it appears.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;2020-02-TBD Version 1.09
&lt;ol&gt;&lt;li&gt;Improved interaction between Unicode box drawing characters and diagram patterns.&lt;/li&gt;
&lt;li&gt;Section context menu now includes visit and copy raw URL options.&lt;/li&gt;
&lt;li&gt;Section context menu now correctly includes the URL protocol.&lt;/li&gt;
&lt;li&gt;Optimized processing of long documents that do not use &lt;code&gt;insert...here&lt;/code&gt; features.&lt;/li&gt;
&lt;li&gt;Added support for &lt;code&gt;insert...here&lt;/code&gt; in html mode.&lt;/li&gt;
&lt;li&gt;Footnoted words may now appear immediately before a colon beginning a lixt.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;2020-01-22 Version 1.08
&lt;ol&gt;&lt;li&gt;Improved mobile layout in portrait mode.&lt;/li&gt;
&lt;li&gt;Added corporate API and whitepaper templates.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;2019-11-29 Version 1.07
&lt;ol&gt;&lt;li&gt;Improved printing quality.&lt;/li&gt;
&lt;li&gt;Added support for escaped backticks &lt;code&gt;\`&lt;/code&gt; to prevent inline code processing.&lt;/li&gt;
&lt;li&gt;Fixed floating images breaking paragraphs when placed at the middle or right (was always broken).&lt;/li&gt;
&lt;li&gt;Fixed inline images with no captions floating right (broken in 1.06).&lt;/li&gt;
&lt;li&gt;Right-click on a section header in the browser to copy link code for that section to the clipboard.&lt;/li&gt;
&lt;li&gt;Added the &lt;a href=&quot;https://casual-effects.com/markdeep/newsmag.md.html&quot;&gt;Newsmag&lt;/a&gt; template.&lt;/li&gt;
&lt;li&gt;Added &quot;chapter&quot; as a synonym for &quot;section&quot; for auto-linking purposes. This will likely change in the future to work with multi-file documents that store one chapter in each file.&lt;/li&gt;
&lt;li&gt;Fixed all caption types to be centered blocks by default as originally intended. Left-aligned behavior applied to some captions in previous versions can be restored with &lt;code&gt;&amp;lt;style&amp;gt;.md .imagecaption,.md .tablecaption,.md .listingcaption{width:100%}&amp;lt;/style&amp;gt;&lt;/code&gt; at the bottom of the document.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;class=pixel&lt;/code&gt; support for pixel-art images.&lt;/li&gt;
&lt;li&gt;Fixed multiple citations on a single line.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2019-09-14 Version 1.06
&lt;ol&gt;&lt;li&gt;Added meta tag for improved mobile browser viewing.&lt;/li&gt;
&lt;li&gt;Allowed comma-separated citations inside of &lt;code&gt;[]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Upgraded to Mathjax 2.7.6.&lt;/li&gt;
&lt;li&gt;Added pyxlscript syntax highlighting for quadplay.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;.md svg.diagram .opendot&lt;/code&gt; to be solid white again.&lt;/li&gt;
&lt;li&gt;Restricted image captions to at most five lines to eliminate some ambiguous parsing situations.&lt;/li&gt;
&lt;li&gt;Optimized processing of documents with a large number of images and links.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2019-07-07 Version 1.05
&lt;ol&gt;&lt;li&gt;&lt;code&gt;linkAPIDefinitions&lt;/code&gt; option for creating Doxygen-link internal links when writing code documentation.&lt;/li&gt;
&lt;li&gt;Added support for multiple dimensions e.g., &lt;code&gt;2 x 4 x 6&lt;/code&gt; → 2 × 4 × 6.&lt;/li&gt;
&lt;li&gt;Footnote references that are not at the start of a line may now be immediately followed with a colon.&lt;/li&gt;
&lt;li&gt;Moved table of contents to the left of the journal template for better scroll-bar placement.&lt;/li&gt;
&lt;li&gt;Added resume and API examples.&lt;/li&gt;
&lt;li&gt;Fixed multiple footnotes on the same line.&lt;/li&gt;
&lt;li&gt;Fixed HTML comments with no spaces.&lt;/li&gt;
&lt;li&gt;Added support for image grids with unfilled final rows.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2019-04-29 Version 1.04
&lt;ol&gt;&lt;li&gt;Allow syntax highlighting to force a language even if the syntax appears illegal.&lt;/li&gt;
&lt;li&gt;Added syntax highlighting in code blocks for YAML and nanoscript.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;definitionStyle&lt;/code&gt; for controlling definition list layout.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;markdeepOptions.scrollThreshold&lt;/code&gt; and &lt;code&gt;.md body.scrolled&lt;/code&gt; for CSS to detect scrolling.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;.tocTop&lt;/code&gt; hidden link in the table of contents for CSS to expose for websites&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;website.md.html&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;slate.md.html&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;journal.md.html&lt;/code&gt; template&lt;/li&gt;
&lt;li&gt;Changed the default template to code blocks not wrapping, but forced the printed version to wrap so that nothing would be lost when converting to PDF or physical media.&lt;/li&gt;
&lt;li&gt;Fixed a bug in the unicode points for gray characters. Now using U+2588 Full Block as the darkest.&lt;/li&gt;
&lt;li&gt;Added Spanish localization by Marcelo Arroyo.&lt;/li&gt;
&lt;li&gt;Added four new dot styles to diagrams using unicode circles: &lt;code&gt;◌--○ ◍--●&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Updated Swedish localization.&lt;/li&gt;
&lt;li&gt;Added SQL and PyxScript to code highlighting.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2018-12-29 Version 1.03
&lt;ol&gt;&lt;li&gt;Added highlighting support for Go, Scheme, and Kotlin.&lt;/li&gt;
&lt;li&gt;Made inline &lt;code&gt;code&lt;/code&gt; not break within words.&lt;/li&gt;
&lt;li&gt;Added fully-qualified links to sections.&lt;/li&gt;
&lt;li&gt;Made table of contents use fully-qualified mangled names instead of numbers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export&lt;/code&gt; mode now preserves newlines.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;\thetai&lt;/code&gt;, &lt;code&gt;\thetao&lt;/code&gt;, &lt;code&gt;\d{x}&lt;/code&gt; Latex macros.&lt;/li&gt;
&lt;li&gt;Improve printing scale and margins.&lt;/li&gt;
&lt;li&gt;Equations can now be referenced with the same syntax used for tables, diagrams, listings, and figures.&lt;/li&gt;
&lt;li&gt;Automatically substitute replacements for Unicode characters in &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; that don't render correctly in browser tabs.&lt;/li&gt;
&lt;li&gt;Fixed localization of month and day names.&lt;/li&gt;
&lt;li&gt;Documented &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Process anchor targets in the URL regardless of document load and layout delays.&lt;/li&gt;
&lt;li&gt;Fixed a lockup bug in documents with obscure unicode characters.&lt;/li&gt;
&lt;li&gt;Stripped HTML escapes from header anchor names in links for more readable intra-document targets.&lt;/li&gt;
&lt;li&gt;Fixed bug with multiple reference images in the same document.&lt;/li&gt;
&lt;li&gt;Allowed captions on reference images.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2018-09-03 Version 1.02
&lt;ol&gt;&lt;li&gt;Documented how to add Atom support.&lt;/li&gt;
&lt;li&gt;Added .webm video support.&lt;/li&gt;
&lt;li&gt;Improved Swedish localization.&lt;/li&gt;
&lt;li&gt;Fixed mixed task/bullet/number lists.&lt;/li&gt;
&lt;li&gt;Permitted ATX-style headers with &lt;code&gt;#&lt;/code&gt; in them.&lt;/li&gt;
&lt;li&gt;Fixed trailing blank line in diagrams.&lt;/li&gt;
&lt;li&gt;Added support for audio files using video link syntax.&lt;/li&gt;
&lt;li&gt;Added optional line numbers on code listings.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2018-07-04 Version 1.01
&lt;ol&gt;&lt;li&gt;Fixed alignment of diagrams with no right border of &lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;\pagebreak&lt;/code&gt; requiring other characters on the same line&lt;/li&gt;
&lt;li&gt;Added Czech localization by Jan Toušek&lt;/li&gt;
&lt;li&gt;Added support for localized &quot;section&quot; appearing before or after a section title&lt;/li&gt;
&lt;li&gt;Made reference link parsing more robust, allowing newlines within the text&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;[x]&lt;/code&gt; github style task lists&lt;/li&gt;
&lt;li&gt;Fixed multiple &lt;code&gt;(insert ... here)&lt;/code&gt; statements in a document&lt;/li&gt;
&lt;li&gt;Made the &lt;code&gt;apidoc.md.html&lt;/code&gt; sample not flash the raw source on load&lt;/li&gt;
&lt;li&gt;Stripped links from section titles in the table of contents&lt;/li&gt;
&lt;li&gt;Added support for reference images&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2018-04-28 Version 1.00: Feature Complete
&lt;ol&gt;&lt;li&gt;Fixed use of &lt;code&gt;(include here)&lt;/code&gt; with implicit email links.&lt;/li&gt;
&lt;li&gt;Added Portuguese localization by Tiago Antão&lt;/li&gt;
&lt;li&gt;Added Italian localization by Leonardo Taglialegne&lt;/li&gt;
&lt;li&gt;Fixed references not working for localized &lt;code&gt;figure&lt;/code&gt; variants&lt;/li&gt;
&lt;li&gt;Added support for Gravizo SVG format graphs&lt;/li&gt;
&lt;li&gt;Removed browser header/footer when printing to PDF&lt;/li&gt;
&lt;li&gt;Support for IE11&lt;/li&gt;
&lt;li&gt;Added Lithuanian localization by Warmist&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-12-31 Version 0.23: Code
&lt;ol&gt;&lt;li&gt;Tweaked the &lt;code&gt;apidoc.css&lt;/code&gt; style.&lt;/li&gt;
&lt;li&gt;Fixed top-level header formatting broken in the previous release.&lt;/li&gt;
&lt;li&gt;Code blocks now use four-space tabs (instead of eight spaces).&lt;/li&gt;
&lt;li&gt;Added syntax coloring for Go, Rust, R, Lua, TypeScript, and Swift code blocks.&lt;/li&gt;
&lt;li&gt;Added support for back-to-back code blocks with no text between them.&lt;/li&gt;
&lt;li&gt;Improved robustness of schedule list detection and removed warning messages from speculative parser.&lt;/li&gt;
&lt;li&gt;Localized smart quotation marks to the same region as other keywords, following &lt;a href=&quot;https://en.wikipedia.org/wiki/Quotation_mark#Summary_table&quot;&gt;this spec&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Fixed email address detection for 2-letter domains with a patch by Michael Smirnov.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-11-25 Version 0.22: Unification
&lt;ol&gt;&lt;li&gt;Added support for long &lt;code&gt;&amp;lt;--&lt;/code&gt; and &lt;code&gt;--&amp;gt;&lt;/code&gt; arrows in body text.&lt;/li&gt;
&lt;li&gt;Added support for ordered lists that begin with numbers other than 1.&lt;/li&gt;
&lt;li&gt;Markdeep now strips HTML comments that are not in code blocks at the beginning of processing.&lt;/li&gt;
&lt;li&gt;Added Japanese localization by Takashi Masuyama.&lt;/li&gt;
&lt;li&gt;Added optional CSS classes to fenced code blocks.&lt;/li&gt;
&lt;li&gt;Added multiple unioned code blocks for use in highlighting and multi-language examples.&lt;/li&gt;
&lt;li&gt;Fixed CSS to not leak outside Markdeep blocks when in html embedding mode.&lt;/li&gt;
&lt;li&gt;Added support for LaTeX when in doxygen and html embedding modes.&lt;/li&gt;
&lt;li&gt;Added admonitions (callout notes for the reader).&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;apidoc.css&lt;/code&gt; stylesheet and corresponding template by Aras Pranckevičius.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-10-03 Version 0.21: Robustness
&lt;ol&gt;&lt;li&gt;Upgraded to &lt;a href=&quot;https://highlightjs.org/&quot;&gt;highlight.js&lt;/a&gt; 9.12.0, included shell session highlighting.&lt;/li&gt;
&lt;li&gt;Fixed excess whitespace due to &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags being generated near section headers.&lt;/li&gt;
&lt;li&gt;Capitalized &quot;Contents&quot; in English.&lt;/li&gt;
&lt;li&gt;Made title and list pattern detection more robust.&lt;/li&gt;
&lt;li&gt;Improved parsing of image grids when near other individual images.&lt;/li&gt;
&lt;li&gt;Made all images hyperlink to their full-resolution versions.&lt;/li&gt;
&lt;li&gt;Improved wide character support for diagrams contributed by Torsten Grust.&lt;/li&gt;
&lt;li&gt;Changed implicit URL parsing to consider a trailing period as punctuation instead of part of the URL. Use explicit URL syntax of &lt;code&gt;&amp;lt;http://...&amp;gt;&lt;/code&gt; to force it to be part of the URL.&lt;/li&gt;
&lt;li&gt;Added an explicit CSS class for &lt;code&gt;tocNumber&lt;/code&gt; to support hiding them.&lt;/li&gt;
&lt;li&gt;Added support for nested blockquotes.&lt;/li&gt;
&lt;li&gt;Fixed indented lists immediately after a header.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-06-30 Version 0.20: Customization
&lt;ol&gt;&lt;li&gt;Updated Mathjax for files included via &lt;code&gt;(insert)&lt;/code&gt; to use cloudflare.&lt;/li&gt;
&lt;li&gt;Fixed events from other JavaScript libraries interfering with Markdeep.&lt;/li&gt;
&lt;li&gt;Updated &lt;code&gt;wkhtmltopdf&lt;/code&gt; instructions to work around &lt;a href=&quot;https://github.com/wkhtmltopdf/wkhtmltopdf/issues/3241&quot;&gt;bugs&lt;/a&gt; in their 0.12.4 version.&lt;/li&gt;
&lt;li&gt;Avoided generating empty &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags to work around a longstanding &lt;code&gt;wkhtmltopdf&lt;/code&gt; &lt;a href=&quot;https://github.com/wkhtmltopdf/wkhtmltopdf/issues/3486&quot;&gt;bug&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Improved colors for tables in the dark template.&lt;/li&gt;
&lt;li&gt;Added Swedish localization by Nils Nilsson.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;captionAbove&lt;/code&gt; option for figures, listings, and tables.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-05-27 Version 0.19: Layout
&lt;ol&gt;&lt;li&gt;Adjusted the generation of paragraph tags around lists to better support HTML post-processing.&lt;/li&gt;
&lt;li&gt;Fixed recursive &lt;code&gt;(insert X here)&lt;/code&gt; statements triggering multiple tables of contents.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;showURLs&lt;/code&gt; to &lt;code&gt;showLabels&lt;/code&gt; and made it display both labels and URLs.&lt;/li&gt;
&lt;li&gt;Added localization for the Contents text in the table of contents.&lt;/li&gt;
&lt;li&gt;Switched to cloudflare CDN for Mathjax.&lt;/li&gt;
&lt;li&gt;Fixed table layout in the presence of an empty first or last column cell.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;\un&lt;/code&gt; Latex macro for units in math.&lt;/li&gt;
&lt;li&gt;Added slide template (thanks to Torsten Grust).&lt;/li&gt;
&lt;li&gt;Allowed leading space before tables with outside borders.&lt;/li&gt;
&lt;li&gt;Added support for single-column tables.&lt;/li&gt;
&lt;li&gt;Avoided page breaks after headers.&lt;/li&gt;
&lt;li&gt;Improved rendering of high-index Unicode characters in diagrams.&lt;/li&gt;
&lt;li&gt;Fixed font-weight of unnumbered H2 sections.&lt;/li&gt;
&lt;li&gt;Removed stroke borders from grayscale Unicode blocks in diagrams.&lt;/li&gt;
&lt;li&gt;Support for &lt;code&gt;\pagebreak&lt;/code&gt;, &lt;code&gt;\newpage&lt;/code&gt;, and page breaks with &lt;code&gt;++++++++&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Made the &lt;code&gt;dark.css&lt;/code&gt; style sheet print with a white background.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-03-31 Version 0.18: Lists and links
&lt;ol&gt;&lt;li&gt;Improved detection of the end of lists followed by indented content&lt;/li&gt;
&lt;li&gt;Improved handling of multiple lists within a single schedule list day&lt;/li&gt;
&lt;li&gt;Removed console debug output that was accidentally enabled in version 0.17&lt;/li&gt;
&lt;li&gt;Defaulted to including the &lt;code&gt;markdeep.min.js&lt;/code&gt; script with a trailing &lt;code&gt;?&lt;/code&gt;, to force updates under new aggressive browser caching&lt;/li&gt;
&lt;li&gt;Support for subfigures in references, e.g., &lt;code&gt;Figure [dinosaur](a)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Support for quoted URLs (needed for URLs containing unescaped parentheses)&lt;/li&gt;
&lt;li&gt;Allowed fenced code blocks to be indented&lt;/li&gt;
&lt;li&gt;Added support for both single and double arrows&lt;/li&gt;
&lt;li&gt;Fixed incorrect floating on diagrams that lack a right border&lt;/li&gt;
&lt;li&gt;Fixed citations at the end of figure captions&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2017-02-12 Version 0.17: Style
&lt;ol&gt;&lt;li&gt;Diagrams that are not floating may now omit the right-edge markers&lt;/li&gt;
&lt;li&gt;Workarounds for Wordpress compatibility&lt;/li&gt;
&lt;li&gt;Workaround for Firefox-specific bug with canvas in iframe affecting include statements&lt;/li&gt;
&lt;li&gt;Allowed listing captions to be up to four lines long&lt;/li&gt;
&lt;li&gt;Improved robustness of underscores and italics within words&lt;/li&gt;
&lt;li&gt;Added Polish translation by Dariusz Kuśnierek&lt;/li&gt;
&lt;li&gt;Added Latex and Dark style sheets.&lt;/li&gt;
&lt;li&gt;Documented paragraph numbering&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-12-20 Version 0.16: Printing support
&lt;ol&gt;&lt;li&gt;Removed hyperlinking of svn and perforce URLs (they are still typset as URLs)&lt;/li&gt;
&lt;li&gt;Improved Latex single-$ parsing&lt;/li&gt;
&lt;li&gt;Fixed lists after unnumbered sections needing too much whitespace&lt;/li&gt;
&lt;li&gt;Made horizontal rule parsing more permissive&lt;/li&gt;
&lt;li&gt;Made layout avoid page breaks in tables, listings, and images when printed&lt;/li&gt;
&lt;li&gt;Experimental `insert` support&lt;/li&gt;
&lt;li&gt;Added version number to Markdeep footer&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-10-28 Version 0.15: Proof support
&lt;ol&gt;&lt;li&gt;Changed windows code font to Consolas because Lucida Console's capital 'V' character is confusingly small.&lt;/li&gt;
&lt;li&gt;Now only only floating images have constrained caption widths&lt;/li&gt;
&lt;li&gt;Captions are always justified within the centered block&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;showURLs&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Added German and Hungarian localization contributed by Berczi Sándor&lt;/li&gt;
&lt;li&gt;&quot;Contents&quot;/&quot;Table of Contents&quot; header is now localized&lt;/li&gt;
&lt;li&gt;Added console warnings for broken reference links&lt;/li&gt;
&lt;li&gt;Added console warnings for unused reference links&lt;/li&gt;
&lt;li&gt;Added console warnings for unreferenced figures, tables, etc.&lt;/li&gt;
&lt;li&gt;Added console warnings for broken links to figures, tables, etc.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-09-10 Version 0.14: Robustness
&lt;ol&gt;&lt;li&gt;Switched double minus signs to parse as em dash instead of en dash, since they visually resemble em dash in the text.&lt;/li&gt;
&lt;li&gt;Corrected parsing of lists with spaces between the elements.&lt;/li&gt;
&lt;li&gt;Grids of images are recognized and preserved.&lt;/li&gt;
&lt;li&gt;Made table of contents work for documents with incorrect header nesting&lt;/li&gt;
&lt;li&gt;Fixed an obscure browser-lockup bug resulting from parsing protected substrings as numbers for later markdown&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;protect&lt;/code&gt; accidentally generating sequences that look like dimensions.&lt;/li&gt;
&lt;li&gt;Fixed links and images within footnotes and bibliography entries.`&lt;/li&gt;
&lt;li&gt;Increased character count for &quot;short&quot; definition lists to 160 characters.&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-08-01 Version 0.13: Book support
&lt;ol&gt;&lt;li&gt;Added support for &lt;code&gt;youtu.be&lt;/code&gt; URL shortened videos&lt;/li&gt;
&lt;li&gt;Documented &lt;code&gt;lang&lt;/code&gt; advanced option&lt;/li&gt;
&lt;li&gt;Exposed &lt;code&gt;tocStyle&lt;/code&gt; advanced option&lt;/li&gt;
&lt;li&gt;Added support for multiple entries per date in schedule lists&lt;/li&gt;
&lt;li&gt;Added support for auto-hiding weekends in schedule lists&lt;/li&gt;
&lt;li&gt;Switched all date computations to UTC to avoid daylight time problems&lt;/li&gt;
&lt;li&gt;Added parenthesized entries for schedule lists&lt;/li&gt;
&lt;li&gt;Added support for arbitrary attributes on regular links&lt;/li&gt;
&lt;li&gt;Terse formatting for definition lists with short definitions&lt;/li&gt;
&lt;li&gt;Fixed fancy quotes in non-unicode documents&lt;/li&gt;
&lt;li&gt;Reduced file size slightly&lt;/li&gt;
&lt;li&gt;Improved syntax auto-highlighting in code blocks&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-06-28 Version 0.12: Localization
&lt;ol&gt;&lt;li&gt;Prevented double underscores in variable names inside of diagrams, e.g., &lt;code&gt;__FILE__&lt;/code&gt;, from being parsed as lines&lt;/li&gt;
&lt;li&gt;Prevented decoration characters from being stripped from diagrams when on false-diagonal lines composed entirely of decorations&lt;/li&gt;
&lt;li&gt;Matched fixed-width fonts between diagrams and code blocks, and code block font sizes across platforms&lt;/li&gt;
&lt;li&gt;Added localization support via &lt;code&gt;markdeepOptions.lang&lt;/code&gt; and &lt;code&gt;&amp;lt;meta lang=&quot;...&quot; ...&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Increased robustness of section links&lt;/li&gt;
&lt;li&gt;Added unnumbered sections using &lt;code&gt;(#)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-05-14 Version 0.11: Integration
&lt;ol&gt;&lt;li&gt;Added &lt;code&gt;?export&lt;/code&gt; option to extract raw HTML&lt;/li&gt;
&lt;li&gt;Switched to &lt;code&gt;font-rendering: antialiased;&lt;/code&gt; for lighter fonts&lt;/li&gt;
&lt;li&gt;Added support for numeric exponents outside of math mode&lt;/li&gt;
&lt;li&gt;Made spaces in figure/listing/table references unbreakable&lt;/li&gt;
&lt;li&gt;Fixed processing of &lt;code&gt;max-width&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; on images&lt;/li&gt;
&lt;li&gt;Added default max-width of 100% on images (can be overriden per image)&lt;/li&gt;
&lt;li&gt;Extended minus-sign beautification to negative numbers immediately following an open parenthesis&lt;/li&gt;
&lt;li&gt;Tweaked code syntax highlighting&lt;/li&gt;
&lt;li&gt;Updated to use highlight.js 0.9.3&lt;/li&gt;
&lt;li&gt;Fixed smart quotes after numbers&lt;/li&gt;
&lt;li&gt;Made fancy quotes fully CSS-stylable&lt;/li&gt;
&lt;li&gt;Made diagrams CSS-stylable&lt;/li&gt;
&lt;li&gt;Protected &lt;code&gt;style&lt;/code&gt; tags&lt;/li&gt;
&lt;li&gt;Protected table of contents link names&lt;/li&gt;
&lt;li&gt;Fixed long table of contents link to first section&lt;/li&gt;
&lt;li&gt;Added gravizo support&lt;/li&gt;
&lt;li&gt;Added figure captions&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-03-22 Version 0.10: Calendars and Images
&lt;ol&gt;&lt;li&gt;Fixed alignment in table cells&lt;/li&gt;
&lt;li&gt;Added support for links with no text&lt;/li&gt;
&lt;li&gt;Added starter.md.html to web page&lt;/li&gt;
&lt;li&gt;Switched default raw URL font to Georgia for more weight and better slashes&lt;/li&gt;
&lt;li&gt;Table of contents now becomes its own section if it is longer than the abstract&lt;/li&gt;
&lt;li&gt;Added support for Latex equation, eqnarray, and equation* environments&lt;/li&gt;
&lt;li&gt;Fixed current-day highlighting on calendars&lt;/li&gt;
&lt;li&gt;Fixed multiple single-$ Latex expressions on a single line&lt;/li&gt;
&lt;li&gt;Allowed definition list terms to begin with non-word characters&lt;/li&gt;
&lt;li&gt;Added support for daylight saving time independent of country&lt;/li&gt;
&lt;li&gt;Improved robustness of parsing links within image captions&lt;/li&gt;
&lt;li&gt;Added support for floating, captioned images&lt;/li&gt;
&lt;li&gt;Fixed centering of multiple images in separate blocks&lt;/li&gt;
&lt;li&gt;Allowed definition lists to have a single space between the colon and definition&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-02-02 Version 0.09: References and Internal Links
&lt;ol&gt;&lt;li&gt;Added support for schedule lists&lt;/li&gt;
&lt;li&gt;10x performance increase over version 0.08&lt;/li&gt;
&lt;li&gt;Added IE11 support&lt;/li&gt;
&lt;li&gt;Added support for calendars&lt;/li&gt;
&lt;li&gt;Added support for HTML attributes on images&lt;/li&gt;
&lt;li&gt;Added support for video&lt;/li&gt;
&lt;li&gt;Added CSS classes for different list bullets&lt;/li&gt;
&lt;li&gt;Added support for Youtube and Vimeo video&lt;/li&gt;
&lt;li&gt;Fixed multiple centered images in a group&lt;/li&gt;
&lt;li&gt;Fixed multiple colons in schedule event titles&lt;/li&gt;
&lt;li&gt;Added fancy quotes&lt;/li&gt;
&lt;li&gt;Highlighted current day on calendars&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2016-01-18 Version 0.08: References and Internal Links
&lt;ol&gt;&lt;li&gt;Prevented HTML tags in the title from appearing in the browser tab&lt;/li&gt;
&lt;li&gt;Fixed single-character bold and italic text hanging across lines&lt;/li&gt;
&lt;li&gt;Fixed indented bold and italic text crossing lines&lt;/li&gt;
&lt;li&gt;Added reference-style links&lt;/li&gt;
&lt;li&gt;Added footnotes/endnotes&lt;/li&gt;
&lt;li&gt;Added citations&lt;/li&gt;
&lt;li&gt;Allowed code blocks within other formatting&lt;/li&gt;
&lt;li&gt;Code blocks can now contain diagram syntax without it becoming a diagram&lt;/li&gt;
&lt;li&gt;Optimized performance of documents with many blocks&lt;/li&gt;
&lt;li&gt;Updated Markdeep line hides the document until formatting succeeds or loading markdeep.js times out&lt;/li&gt;
&lt;li&gt;Added smart quotes for double quotation marks&lt;/li&gt;
&lt;li&gt;Fixed strict mode for Firefox&lt;/li&gt;
&lt;li&gt;Protected raw &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; blocks from processing&lt;/li&gt;
&lt;li&gt;Added automatic section links&lt;/li&gt;
&lt;li&gt;Added table and listing captions&lt;/li&gt;
&lt;li&gt;Added figure, table, and listing numbering and references&lt;/li&gt;
&lt;li&gt;Fixed single-letter italic words in lists&lt;/li&gt;
&lt;li&gt;Allowed lists to omit the leading blank line if the previous line ends in a colon or comma&lt;/li&gt;
&lt;li&gt;Allowed inline code to wrap around a line&lt;/li&gt;
&lt;li&gt;Stylized &lt;code&gt;~~~~&lt;/code&gt; code blocks appropriately for listings, while leaving &lt;code&gt;````&lt;/code&gt; blocks unadorned&lt;/li&gt;
&lt;li&gt;Fixed URLs with underscores and tildes&lt;/li&gt;
&lt;li&gt;Added robust processing of lists with inconsistent indenting&lt;/li&gt;
&lt;li&gt;Added support for lists within definition lists&lt;/li&gt;
&lt;li&gt;Fixed definition lists with multiple &lt;code&gt;:&lt;/code&gt;-indented lines&lt;/li&gt;
&lt;li&gt;Added support for multiple paragraphs in definition lists&lt;/li&gt;
&lt;li&gt;Added support for multiple paragraphs in regular lists&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-12-31 Version 0.07: Polish
&lt;ol&gt;&lt;li&gt;Fixed white dot decorations next to lines in diagrams&lt;/li&gt;
&lt;li&gt;Fixed floating images (broken in 0.06)&lt;/li&gt;
&lt;li&gt;Fixed diagonal up-left arrows not reaching boxes&lt;/li&gt;
&lt;li&gt;Added support for captionless images&lt;/li&gt;
&lt;li&gt;Added captions below images&lt;/li&gt;
&lt;li&gt;Added support for centered images&lt;/li&gt;
&lt;li&gt;Fixed processing of tables with short delimiters&lt;/li&gt;
&lt;li&gt;Fixed diagonals appearing inside curves with vertices in diagrams&lt;/li&gt;
&lt;li&gt;Allowed points vertically and horizontally adjacent to lines and points in diagrams&lt;/li&gt;
&lt;li&gt;Improved unicode line and box character appearance in diagrams&lt;/li&gt;
&lt;li&gt;Allowed leading space and shorter lines for Setext-style headers&lt;/li&gt;
&lt;li&gt;Added Unicode block character support for diagrams&lt;/li&gt;
&lt;li&gt;Enlarged Unicode hexagons to form tighter grids&lt;/li&gt;
&lt;li&gt;Text is now selectable in diagrams&lt;/li&gt;
&lt;li&gt;Added tiny grid examples to features.md.html&lt;/li&gt;
&lt;li&gt;Added dot grid examples to features.md.html&lt;/li&gt;
&lt;li&gt;Added Unicode examples to features.md.html&lt;/li&gt;
&lt;li&gt;Added beautification of a number followed by &quot;degrees&quot;&lt;/li&gt;
&lt;li&gt;Single linebreaks now allowed in italics, bold, and strikethrough&lt;/li&gt;
&lt;li&gt;Hid the document until formatting is complete, once it is known that the script is available&lt;/li&gt;
&lt;li&gt;Increased spacing between section numbers and titles&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-11-30 Version 0.06: Bug Fixes
&lt;ol&gt;&lt;li&gt;Improved arrowheads at points&lt;/li&gt;
&lt;li&gt;Improved arrowheads at boxes&lt;/li&gt;
&lt;li&gt;Improved processing of words with 'o' in boxes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;script&lt;/code&gt; tag workaround for C++ template/Java generic syntax in code examples with capitalized classes&lt;/li&gt;
&lt;li&gt;Fixed blocks beginning at the top of the document&lt;/li&gt;
&lt;li&gt;Allow LaTeX expressions at the end of a sentence&lt;/li&gt;
&lt;li&gt;Relaxed whitespace rules for LaTeX expressions&lt;/li&gt;
&lt;li&gt;Fixed URLs in subtitles&lt;/li&gt;
&lt;li&gt;Centered diagrams by default&lt;/li&gt;
&lt;li&gt;Switched to https by default for Markdeep and Mathjax&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-11-10 Version 0.05: Beta
&lt;ol&gt;&lt;li&gt;Added named anchors to all sections&lt;/li&gt;
&lt;li&gt;Fixed $$ in code blocks&lt;/li&gt;
&lt;li&gt;Fixed header on the first line of a document&lt;/li&gt;
&lt;li&gt;Added table of contents generation&lt;/li&gt;
&lt;li&gt;Adjusted link styling&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;markdeepOptions.detectMath&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;==&amp;gt;&lt;/code&gt; arrows in html mode&lt;/li&gt;
&lt;li&gt;Released implementation source code&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-11-03 Version 0.04: Optimization
&lt;ol&gt;&lt;li&gt;Reduced minified script size to 56k (v0.03 was 88k)&lt;/li&gt;
&lt;li&gt;Added notes about Unicode source&lt;/li&gt;
&lt;li&gt;En dash (--), em dash (---), and minus sign&lt;/li&gt;
&lt;li&gt;Transform &lt;code&gt;x&lt;/code&gt; into × in cases such as &quot;1920×1080&quot;&lt;/li&gt;
&lt;li&gt;Fixed e-mail addresses in subtitles&lt;/li&gt;
&lt;li&gt;Fixed arrows in the middle of lines not appearing&lt;/li&gt;
&lt;li&gt;Removed borders around diagrams in the default stylesheet&lt;/li&gt;
&lt;li&gt;Made tables centered in the default stylesheet&lt;/li&gt;
&lt;li&gt;Added support for left floating diagrams&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-10-21 Version 0.03: Embedding Support
&lt;ol&gt;&lt;li&gt;Added public Javascript API&lt;/li&gt;
&lt;li&gt;Added support for embedding isolated Markdeep diagrams and content tags in HTML&lt;/li&gt;
&lt;li&gt;Wrapped Markdeep styles in a &lt;code&gt;md&lt;/code&gt; class&lt;/li&gt;
&lt;li&gt;Moved Markdeep stylesheet to the top of &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; to make it easier to override&lt;/li&gt;
&lt;li&gt;Improved handling of underscore lines and parentheses in diagrams&lt;/li&gt;
&lt;li&gt;Added support for short verticals in diagrams, e.g., &lt;code&gt;_.- -._&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added support for hyperlinking of URLs containing &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added CSS class support for &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tags to allow reinterpretation of &lt;code&gt;*em*&lt;/code&gt; vs. &lt;code&gt;_em_&lt;/code&gt; syntax.&lt;/li&gt;
&lt;li&gt;Fixed single quotes and dollar signs in fenced code blocks&lt;/li&gt;
&lt;li&gt;Adjusted default style sheet spacing for long and short documents&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-10-18 Version 0.02: Conformance
&lt;ol&gt;&lt;li&gt;Reduced minified script size by 1k&lt;/li&gt;
&lt;li&gt;Fixed subheading numbering&lt;/li&gt;
&lt;li&gt;Fixed diagram decorated points at T junctions&lt;/li&gt;
&lt;li&gt;Added support for * and + as list bullets&lt;/li&gt;
&lt;li&gt;Explicitly protected script and style blocks (CommonMark conformance)&lt;/li&gt;
&lt;li&gt;No longer allow spaces between flanking bold and italic delimiter runs and enclosed words (CommonMark conformance)&lt;/li&gt;
&lt;li&gt;Switched to &amp;lt;em&amp;gt; and &amp;lt;strong&amp;gt; tags from explicit italic and bold ones&lt;/li&gt;
&lt;li&gt;Added support for ATX ## headers ## up to h6 (CommonMark conformance)&lt;/li&gt;
&lt;li&gt;Allowed lists to begin immediately after headers&lt;/li&gt;
&lt;li&gt;Remapped arrows in text from &lt;code&gt;==&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;==&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fixed a lock-up bug in highlight.js by upgrading to the latest version...increasing size by 2k (now 85k)&lt;/li&gt;
&lt;li&gt;Added support for acute &lt;code&gt;__\&lt;/code&gt; corners in diagrams&lt;/li&gt;
&lt;/ol&gt;&lt;br/&gt;&lt;/li&gt;
&lt;li&gt;2015-10-15 Version 0.01: Initial release&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://casual-effects.com/markdeep/tentacles.png&quot;/&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 17 Feb 2020 15:11:24 +0000</pubDate>
<dc:creator>thunderbong</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://casual-effects.com/markdeep/</dc:identifier>
</item>
<item>
<title>Vue.js: The Documentary (Trailer) [video]</title>
<link>https://www.youtube.com/watch?v=2EmYw-O-WLI</link>
<guid isPermaLink="true" >https://www.youtube.com/watch?v=2EmYw-O-WLI</guid>
<description>&lt;p id=&quot;eow-description&quot; class=&quot;&quot;&gt;by honeypot.io | What began as a side project of a Google developer&lt;br/&gt;now shares the JS leaderboard with &lt;a href=&quot;https://www.youtube.com/results?search_query=%23Reactjs&quot; class=&quot;yt-uix-sessionlink&quot; data-sessionlink=&quot;itct=CDsQ3NcEIhMIm8HPrfPZ5wIVrkBMCB1aEAk9&quot; data-url=&quot;/results?search_query=%23Reactjs&quot;&gt;#Reactjs&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/results?search_query=%23Angularjs&quot; class=&quot;yt-uix-sessionlink&quot; data-sessionlink=&quot;itct=CDoQ3NcEIhMIm8HPrfPZ5wIVrkBMCB1aEAk9&quot; data-url=&quot;/results?search_query=%23Angularjs&quot;&gt;#Angularjs&lt;/a&gt;...&lt;br/&gt;Evan You tells the story of how he fought against the odds to bring &lt;a href=&quot;https://www.youtube.com/results?search_query=%23Vuejs&quot; class=&quot;yt-uix-sessionlink&quot; data-sessionlink=&quot;itct=CDkQ3NcEIhMIm8HPrfPZ5wIVrkBMCB1aEAk9&quot; data-url=&quot;/results?search_query=%23Vuejs&quot;&gt;#Vuejs&lt;/a&gt; to life.&lt;/p&gt;&lt;p&gt;Coming to a screen near you on Feb 24th!&lt;/p&gt;&lt;p&gt;Honeypot is a developer-focused job platform, on a mission to get every developer a great job. We believe developers should have all the information they need to choose a job they love: whether that’s based on a cutting-edge tech stack, an inspiring team or just good old-fashioned salary. In our world, that means no more spam and empty promises from headhunters, no more sending the same application to multiple companies - just one profile and the choice to receive honest offers related to your job preferences direct from companies.&lt;/p&gt;&lt;p&gt;To learn more about Honeypot: &lt;a href=&quot;https://www.youtube.com/redirect?q=https%3A%2F%2Fwww.honeypot.io&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; class=&quot;yt-uix-sessionlink&quot; data-target-new-window=&quot;True&quot; data-sessionlink=&quot;itct=CC8Q6TgYACITCJvBz63z2ecCFa5ATAgdWhAJPUiysfmdvpjmpNgB&quot; data-url=&quot;/redirect?q=https%3A%2F%2Fwww.honeypot.io&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://www.honeypot.io&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Follow us:&lt;br/&gt;Twitter: &lt;a href=&quot;https://www.youtube.com/redirect?q=https%3A%2F%2Ftwitter.com%2Fhoneypotio&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; class=&quot;yt-uix-sessionlink&quot; data-target-new-window=&quot;True&quot; data-sessionlink=&quot;itct=CC8Q6TgYACITCJvBz63z2ecCFa5ATAgdWhAJPUiysfmdvpjmpNgB&quot; data-url=&quot;/redirect?q=https%3A%2F%2Ftwitter.com%2Fhoneypotio&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://twitter.com/honeypotio&lt;/a&gt;&lt;br/&gt;Facebook: &lt;a href=&quot;https://www.youtube.com/redirect?q=https%3A%2F%2Fwww.facebook.com%2FHoneypotio%2F&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; class=&quot;yt-uix-sessionlink&quot; data-target-new-window=&quot;True&quot; data-sessionlink=&quot;itct=CC8Q6TgYACITCJvBz63z2ecCFa5ATAgdWhAJPUiysfmdvpjmpNgB&quot; data-url=&quot;/redirect?q=https%3A%2F%2Fwww.facebook.com%2FHoneypotio%2F&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://www.facebook.com/Honeypotio/&lt;/a&gt;&lt;br/&gt;Linkedin: &lt;a href=&quot;https://www.youtube.com/redirect?q=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fhone&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; class=&quot;yt-uix-sessionlink&quot; data-target-new-window=&quot;True&quot; data-sessionlink=&quot;itct=CC8Q6TgYACITCJvBz63z2ecCFa5ATAgdWhAJPUiysfmdvpjmpNgB&quot; data-url=&quot;/redirect?q=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fhone&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://www.linkedin.com/company/hone&lt;/a&gt;...&lt;br/&gt;Instagram: &lt;a href=&quot;https://www.youtube.com/redirect?q=https%3A%2F%2Fwww.instagram.com%2Fhoneypot.io%2F&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; class=&quot;yt-uix-sessionlink&quot; data-target-new-window=&quot;True&quot; data-sessionlink=&quot;itct=CC8Q6TgYACITCJvBz63z2ecCFa5ATAgdWhAJPUiysfmdvpjmpNgB&quot; data-url=&quot;/redirect?q=https%3A%2F%2Fwww.instagram.com%2Fhoneypot.io%2F&amp;amp;redir_token=JWeSt3RfqZ5k3iJ_M2XgJTWHfu58MTU4MjA3NDA4MEAxNTgxOTg3Njgw&amp;amp;event=video_description&amp;amp;v=2EmYw-O-WLI&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;https://www.instagram.com/honeypot.io/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 14:31:51 +0000</pubDate>
<dc:creator>nailer</dc:creator>
<og:url>https://www.youtube.com/watch?v=2EmYw-O-WLI</og:url>
<og:title>Vue.js: The Documentary (TRAILER)</og:title>
<og:image>https://i.ytimg.com/vi/2EmYw-O-WLI/maxresdefault.jpg</og:image>
<og:description>by honeypot.io | What began as a side project of a Google developer now shares the JS leaderboard with #Reactjs and #Angularjs... Evan You tells the story of...</og:description>
<og:type>video.other</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.youtube.com/watch?v=2EmYw-O-WLI</dc:identifier>
</item>
<item>
<title>Let’s Build a Compiler (1995)</title>
<link>https://compilers.iecc.com/crenshaw/</link>
<guid isPermaLink="true" >https://compilers.iecc.com/crenshaw/</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;Let's Build a Compiler&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; id=&quot;readabilityBody&quot; readability=&quot;17.948640483384&quot;&gt;

&lt;p&gt;This fifteen-part series, written from 1988 to 1995, is a non-technical introduction to compiler construction. You can read the parts on-line or download them in a ZIP file.&lt;/p&gt;
&lt;h2&gt;Read the tutorial on-line&lt;/h2&gt;
&lt;h2&gt;Download the tutorial&lt;/h2&gt;
&lt;p&gt;It's available in two formats, plain text, and with printer control characters so it will print reasonably on an Epson printer.&lt;/p&gt;
&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://compilers.iecc.com/&quot;&gt;&lt;img src=&quot;https://compilers.iecc.com/icons/back.gif&quot; /&gt;&lt;/a&gt; Return to the &lt;a href=&quot;https://compilers.iecc.com/&quot;&gt;I.E.C.C. Home Page.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This page © 1997-2008 I.E.C.C.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 17 Feb 2020 09:36:13 +0000</pubDate>
<dc:creator>undreren</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://compilers.iecc.com/crenshaw/</dc:identifier>
</item>
<item>
<title>How These Things Work – A book about CS from first principles (2016)</title>
<link>http://reasonablypolymorphic.com/book/preface</link>
<guid isPermaLink="true" >http://reasonablypolymorphic.com/book/preface</guid>
<description>&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;h3 id=&quot;part-1-diagrams&quot;&gt;Part 1 – Diagrams&lt;/h3&gt;
&lt;h3 id=&quot;part-2-symbolic-computations&quot;&gt;Part 2 – Symbolic Computations&lt;/h3&gt;
&lt;h3 id=&quot;part-3&quot;&gt;Part 3&lt;/h3&gt;
&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;/h2&gt;
&lt;p&gt;The last decade of my life has been marked by acquiring knowledge around computers – how they work, and, more interestingly, why they work. Ostensibly this pursuit is known as &lt;em&gt;computer science&lt;/em&gt;, but my most profound realization over the previous ten years is that computer science has as much to do with computers as it does with snowmen. That is to say, not much.&lt;/p&gt;
&lt;p&gt;A few years ago, I asked my engineer friend about how much of civilization he could rebuild singlehandedly, should he survive some hypothetical apocalyptic event. “All of it,” he replied. “Not all at once, but I know enough to be able to puzzle together the pieces I don’t know right this second.”&lt;/p&gt;
&lt;p&gt;That sentiment strongly resounded with me, and I’ve been thinking about it ever since. I share my friend’s optimism, that given enough large pieces of the puzzle, it’s possible to work backwards and figure out what shapes must have filled the gaps. It’s likely not an overnight endeavor, but it’s doable.&lt;/p&gt;
&lt;p&gt;And so that’s what this book strives to be: my contribution to any hypothetical survivors of the hypothetical apocalypse. A gentle, yet comprehensive introduction to &lt;em&gt;how these things work&lt;/em&gt;. It won’t answer every question you might have, but the motivated reader will learn enough to be able to answer the remaining questions themselves.&lt;/p&gt;
&lt;p&gt;“But what of the rest of us,” you might be wondering. “Does this book hold any value for those of us without the delusions of grandeur to think we can rebuild civilization?” Perhaps I am biased, but I think it does, yes.&lt;/p&gt;
&lt;p&gt;While computer science has very little to do with snowmen, it has everything to do with &lt;em&gt;patterns&lt;/em&gt;. The study of computer science, like mathematics, is one of overwhelming self-referentiality. The patterns that seemed so difficult and novel yesterday are today’s run-of-the-mill building blocks. Like a snowball rolling down a mountain, the student of computer science cannot help but gain momentum as these concepts begin converge in one huge avalanche.&lt;/p&gt;
&lt;p&gt;This process of using tools you built yesterday to help build bigger tools today is called &lt;em&gt;abstraction&lt;/em&gt;, and it is the most powerful force I know of in the universe. Abstraction is the process of standing on the shoulders of giants, and using them to reach new heights. In my opinion, abstraction is the only reason humanity has managed to crawl its way out of the savannas and into something exceptionally worthwhile.&lt;/p&gt;
&lt;p&gt;Computer science is how I learned to do abstraction, and it is my most enrichingly- and economically- valuable skill. This is the final reason I offer to you why these things might be worth learning: it is strongly likely that you will make more money with them than without. As we will later see, abstraction is &lt;em&gt;literally impossible to automate&lt;/em&gt; in the general case. This makes it a compelling skill to have in a world rapidly driving towards automating away most jobs. The debate whether or not that’s a good thing is left to minds smarter than my own, but you have to admit that it’s nice to have options.&lt;/p&gt;
&lt;p&gt;The attentive reader will notice a theme throughout this book. Like a fractal, we will same patterns reoccurring in deeper and deeper shades of abstraction, and as we learn more, our tools will begin to work on many different levels simultaneously. There are two marvelous experiences here – the amazement that such things can keep happening – and, in the later chapters, the eventual understanding behind &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reasonablypolymorphic.com/images/httw/fractal.png&quot; title=&quot;A fractal.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, I’d like to dedicate this book to my mum, whose thirst for knowledge has always inspired me, and to my father, who gave me this mindset in the first place.&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 08:38:16 +0000</pubDate>
<dc:creator>falava</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://reasonablypolymorphic.com/book/preface</dc:identifier>
</item>
<item>
<title>Google/Trax – Understand and explore advanced deep learning</title>
<link>https://github.com/google/trax</link>
<guid isPermaLink="true" >https://github.com/google/trax</guid>
<description>&lt;h2&gt;Trax — your path to advanced deep learning&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/bddfc5e8ae531f274dd98ab357d4a5d5f0683cd4/68747470733a2f2f696d616765732e706578656c732e636f6d2f70686f746f732f3436313737322f706578656c732d70686f746f2d3436313737322e6a7065673f646c266669743d63726f702663726f703d656e74726f707926773d333226683d3231&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/bddfc5e8ae531f274dd98ab357d4a5d5f0683cd4/68747470733a2f2f696d616765732e706578656c732e636f6d2f70686f746f732f3436313737322f706578656c732d70686f746f2d3436313737322e6a7065673f646c266669743d63726f702663726f703d656e74726f707926773d333226683d3231&quot; alt=&quot;train tracks&quot; data-canonical-src=&quot;https://images.pexels.com/photos/461772/pexels-photo-461772.jpeg?dl&amp;amp;fit=crop&amp;amp;crop=entropy&amp;amp;w=32&amp;amp;h=21&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/py/trax&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c3ddd29ad9780045cf67e6db455d947a7335c483/68747470733a2f2f62616467652e667572792e696f2f70792f747261782e737667&quot; alt=&quot;PyPI version&quot; data-canonical-src=&quot;https://badge.fury.io/py/trax.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/google/trax/issues&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/80b7490db8d31f8f8ed019832a5c80e2e81fb73d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f676f6f676c652f747261782e737667&quot; alt=&quot;GitHub Issues&quot; data-canonical-src=&quot;https://img.shields.io/github/issues/google/trax.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/google/trax/blob/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/8f697c48adc5026cc6d83dd45e42b9b93ee1803c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e737667&quot; alt=&quot;Contributions welcome&quot; data-canonical-src=&quot;https://img.shields.io/badge/contributions-welcome-brightgreen.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/dc5c93f4ddfa92aaed4ace74e89dbc075f7810c8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d627269676874677265656e2e737667&quot; alt=&quot;License&quot; data-canonical-src=&quot;https://img.shields.io/badge/License-Apache%202.0-brightgreen.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/trax-ml/community&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/fed5b5512498193ce4bba599fd94cd12b9f56491/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6e776a732f6e772e6a732e737667&quot; alt=&quot;Gitter&quot; data-canonical-src=&quot;https://img.shields.io/gitter/room/nwjs/nw.js.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/google/trax&quot;&gt;Trax&lt;/a&gt; helps you understand and explore advanced deep learning. We &lt;a href=&quot;https://github.com/google/trax#structure&quot;&gt;focus&lt;/a&gt; on making Trax code clear while pushing advanced models like &lt;a href=&quot;https://github.com/google/trax/tree/master/trax/models/reformer&quot;&gt;Reformer&lt;/a&gt; to their limits. Trax is actively used and maintained in the &lt;a href=&quot;https://research.google.com/teams/brain/&quot; rel=&quot;nofollow&quot;&gt;Google Brain team&lt;/a&gt;. Give it a try, &lt;a href=&quot;https://gitter.im/trax-ml/community&quot; rel=&quot;nofollow&quot;&gt;talk to us&lt;/a&gt; or &lt;a href=&quot;https://github.com/google/trax/issues&quot;&gt;open an issue&lt;/a&gt; if needed.&lt;/p&gt;
&lt;h3&gt;Use Trax&lt;/h3&gt;
&lt;p&gt;You can use Trax either as a library from your own python scripts and notebooks or as a binary from the shell, which can be more convenient for training large models. Trax includes a number of deep learning models (ResNet, Transformer, RNNs, ...) and has bindings to a large number of deep learning datasets, including &lt;a href=&quot;https://github.com/tensorflow/tensor2tensor&quot;&gt;Tensor2Tensor&lt;/a&gt; and &lt;a href=&quot;https://www.tensorflow.org/datasets/catalog/overview&quot; rel=&quot;nofollow&quot;&gt;TensorFlow datasets&lt;/a&gt;. It runs without any changes on CPUs, GPUs and TPUs.&lt;/p&gt;
&lt;p&gt;To see how to use Trax as a library, take a look at this &lt;a href=&quot;https://colab.research.google.com/github/google/trax/blob/master/trax/intro.ipynb&quot; rel=&quot;nofollow&quot;&gt;quick start colab&lt;/a&gt; which explains how to create data in python, connect it to a Transformer model in Trax, train it and run inference. You can select a CPU or GPU runtime, or even get a free 8-core TPU as runtime. With TPUs in colab you need to set extra flags as demonstrated in these &lt;a href=&quot;https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/text_generation.ipynb&quot; rel=&quot;nofollow&quot;&gt;training&lt;/a&gt; and &lt;a href=&quot;https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/image_generation.ipynb&quot; rel=&quot;nofollow&quot;&gt;inference&lt;/a&gt; colabs.&lt;/p&gt;
&lt;p&gt;To use Trax as a binary and not forget all the parameters (model type, learning rate, other hyper-paramters and training settings), we recommend &lt;a href=&quot;https://github.com/google/gin-config&quot;&gt;gin-config&lt;/a&gt;. Take a look at &lt;a href=&quot;https://github.com/google/trax/blob/master/trax/configs/mlp_mnist.gin&quot;&gt;an example gin config&lt;/a&gt; for training a simple MLP on MNIST and run it as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python -m trax.trainer --config_file=$PWD/trax/configs/mlp_mnist.gin
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As a more advanced example, you can train a &lt;a href=&quot;https://github.com/google/trax/tree/master/trax/models/reformer&quot;&gt;Reformer&lt;/a&gt; on &lt;a href=&quot;https://arxiv.org/abs/1707.08819&quot; rel=&quot;nofollow&quot;&gt;Imagenet64&lt;/a&gt; to generate images &lt;a href=&quot;https://colab.research.google.com/github/google/trax/blob/master/trax/models/reformer/image_generation.ipynb&quot; rel=&quot;nofollow&quot;&gt;like this&lt;/a&gt; with the following command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;python -m trax.trainer --config_file=$PWD/trax/configs/reformer_imagenet64.gin
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Structure&lt;/h3&gt;
&lt;p&gt;Trax code is structured in a way that allows you to understand deep learning from scratch. We start with basic maths and go through layers, models, supervised and reinforcement learning. We get to advanced deep learning results, including recent papers such as &lt;a href=&quot;https://arxiv.org/abs/2001.04451&quot; rel=&quot;nofollow&quot;&gt;Reformer - The Efficient Transformer&lt;/a&gt;, selected for oral presentation at &lt;a href=&quot;https://iclr.cc/Conferences/2020/&quot; rel=&quot;nofollow&quot;&gt;ICLR 2020&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main steps needed to understand deep learning correspond to sub-directories in Trax code:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/math&quot;&gt;math/&lt;/a&gt; — basic math operations and ways to accelerate them on GPUs and TPUs (through &lt;a href=&quot;https://github.com/google/jax&quot;&gt;JAX&lt;/a&gt; and &lt;a href=&quot;https://www.tensorflow.org/&quot; rel=&quot;nofollow&quot;&gt;TensorFlow&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/layers&quot;&gt;layers/&lt;/a&gt; are the basic building blocks of neural networks and here you'll find how they are build and all the needed ones&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/models&quot;&gt;models/&lt;/a&gt; contains all basic models (MLP, ResNet, Transformer, ...) and a number of new research models&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/optimizers&quot;&gt;optimizers/&lt;/a&gt; is a directory with optimizers needed for deep learning&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/supervised&quot;&gt;supervised/&lt;/a&gt; contains the utilities needed to run supervised learning and the Trainer class&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/trax/tree/master/trax/rl&quot;&gt;rl/&lt;/a&gt; contains our work on reinforcement learning&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Development&lt;/h3&gt;
&lt;p&gt;To get the most recent update on Trax development, &lt;a href=&quot;https://gitter.im/trax-ml/community&quot; rel=&quot;nofollow&quot;&gt;chat with us&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most common supervised learning models in Trax are running and should have clear code — if this is not the case, please &lt;a href=&quot;https://github.com/google/trax/issues&quot;&gt;open an issue&lt;/a&gt; or, even better, send along a pull request (see &lt;a href=&quot;https://github.com/google/trax/blob/master/CONTRIBUTING.md&quot;&gt;our contribution doc&lt;/a&gt;). In Trax we value documentation, examples and colabs so if you find any problems with those, please report it and contribute a solution.&lt;/p&gt;
&lt;p&gt;We are still improving a few smaller parts of &lt;a href=&quot;https://github.com/google/trax/tree/master/trax/layers&quot;&gt;layers&lt;/a&gt;, planning to update the &lt;a href=&quot;https://github.com/google/trax/tree/master/trax/supervised&quot;&gt;supervised&lt;/a&gt; API and heavily working on the &lt;a href=&quot;https://github.com/google/trax/tree/master/trax/rl&quot;&gt;rl&lt;/a&gt; part, so expect these parts to change over the next few months. We are also working hard to improve our documentation and examples and we welcome help with that.&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 02:59:35 +0000</pubDate>
<dc:creator>Bella-Xiang</dc:creator>
<og:image>https://repository-images.githubusercontent.com/213020264/f10faf00-0180-11ea-8327-8b2756b15777</og:image>
<og:type>object</og:type>
<og:title>google/trax</og:title>
<og:url>https://github.com/google/trax</og:url>
<og:description>Trax — your path to advanced deep learning. Contribute to google/trax development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/google/trax</dc:identifier>
</item>
<item>
<title>Ask HN: What automation tools have you used to replace mundane activities?</title>
<link>https://news.ycombinator.com/item?id=22345150</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=22345150</guid>
<description>&lt;td colspan=&quot;2&quot;/&gt;&lt;td readability=&quot;26&quot;&gt;For my travel site side hustle (beatthatflight.com.au/), I find and publish cheap flights for Australians. Sounds simple, but even if say, someone gave me the flights each day, there's posting the, sometimes to deals sites, as well as then editing it and posting it on my site, and out to social media, and then to specific mailing lists on mailchimp, depending on the source city of the deal, or type of post.
&lt;p&gt;A LOT of that becomes tedious. Mailchimp can auto post to FB/twitter/instagram etc, but even converting the blog post into mailchimp emails gets tiring, as you need to choose a feature photo, the specific mailing list etc.&lt;/p&gt;
&lt;p&gt;I'm a selenium guy, so have built some scripts to minimise some of it, but the rush each time of finding a deal still pains me when I think of the tedium ahead of publishing it.&lt;/p&gt;
&lt;p&gt;Ideally, my goal would be to submit [to][from][when] to a script and the whole process would be automatic. I can see that selenium &lt;em&gt;could&lt;/em&gt; do it, but my goodness, it'd be slow and potentially flaky all via the web UI for those sites.&lt;/p&gt;
&lt;p&gt;I'd love suggestions, examples of automation you've done, and tools used?&lt;/p&gt;
&lt;/td&gt;
</description>
<pubDate>Mon, 17 Feb 2020 02:35:21 +0000</pubDate>
<dc:creator>beatthatflight</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=22345150</dc:identifier>
</item>
<item>
<title>Google ditches its free WiFi service in South Africa, three months after launch</title>
<link>https://www.businessinsider.co.za/google-backs-out-free-wifi-google-station-partnership-with-think-wifi-in-south-africa-2020-2</link>
<guid isPermaLink="true" >https://www.businessinsider.co.za/google-backs-out-free-wifi-google-station-partnership-with-think-wifi-in-south-africa-2020-2</guid>
<description>&lt;div contenteditable=&quot;false&quot; data-embed24=&quot;Images&quot; data-pos=&quot;middle&quot; id=&quot;ecce0259&quot;&gt;
&lt;div class=&quot;slide&quot;&gt;&lt;img alt=&quot;Google Station&quot; data-smallsrc=&quot;https://cdn.24.co.za/files/Cms/General/d/9487/f83369325fe943059187960dc1301415.png&quot; src=&quot;https://cdn.24.co.za/files/Cms/General/d/9487/f497dade84304dae8913792105a27d81.png&quot; title=&quot;Google Station&quot;/&gt;&lt;p&gt;Google Station&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Search engine giant Google has abandoned its free Wifi service in South Africa. &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The free Wifi service is online in 125 locations across Langa, Khayelitsha, Gugulethu, Delft, Elsies River, and Philippi, in Cape Town.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It will wind down the service this year and hand over operations to its partner Think WiFi.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.businessinsider.co.za/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Visit Business Insider SA's homepage for more stories&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Search engine giant Google will not continue with its free Wifi offering “&lt;a href=&quot;https://station.google.com/&quot; target=&quot;_blank&quot;&gt;Google Station&lt;/a&gt;” - a mere 3 months after its launch. &lt;/p&gt;
&lt;p&gt;The free Wifi service went online in &lt;a href=&quot;https://www.itweb.co.za/content/DZQ58MVJmjaMzXy2&quot; target=&quot;_blank&quot;&gt;125 locations&lt;/a&gt; across Langa, Khayelitsha, Gugulethu, Delft, Elsies River, and Philippi, in Cape Town in November last year, reported &lt;a href=&quot;https://www.itweb.co.za/content/DZQ58MVJmjaMzXy2&quot; target=&quot;_blank&quot;&gt;ITWeb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It forms part of Googles’ grand global initiative to offer fast, free, open access internet to people affected by &lt;a href=&quot;https://www.forbes.com/sites/tobyshapshak/2019/11/07/free-wi-fi-service-google-station-launched-in-cape-town/#2c0abd073b21&quot; target=&quot;_blank&quot;&gt;high unemployment&lt;/a&gt; and crime rates in countries like &lt;a href=&quot;https://station.google.com/&quot; target=&quot;_blank&quot;&gt;Mexico, India and the Philippines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; “In line with Google’s mission, we started Google Station in India in 2016 to help connect people online. We’re humbled that our work has been able to help millions of people experience the power of the internet for the first time,” said a spokesperson.&lt;/p&gt;

&lt;p&gt;But Google won't continue its service in South Africa - and will hand over operations to its partner &lt;a href=&quot;https://thinkwifi.co.za/&quot; target=&quot;_blank&quot;&gt;Think WiFi&lt;/a&gt; through 2020.&lt;/p&gt;

&lt;p&gt;“We are transferring our Station operations in South Africa to Think WiFi who will now carry out the project independently,” a spokesperson told Business Insider SA.&lt;/p&gt;
&lt;p&gt;While Google didn't given an exact reason for its decision, it said that it had to re-evaluate its plans due to &quot;recomplex and varying technical requirements across countries and partners&quot;.&lt;/p&gt;
&lt;p&gt;“We'll work with Think Wifi on a plan to transition the service to them, and continue to support them until the end of 2020. We remain committed to looking for ways to make the internet more accessible to users around the world.”&lt;/p&gt;
&lt;p&gt;Think WiFi said it would &lt;a href=&quot;https://techcentral.co.za/google-is-quitting-its-free-wi-fi-business-three-months-after-sa-launch/95919/&quot; target=&quot;_blank&quot;&gt;continue the service&lt;/a&gt; in “exactly the same way users have become accustomed to”, in a statement to &lt;a href=&quot;https://techcentral.co.za/google-is-quitting-its-free-wi-fi-business-three-months-after-sa-launch/95919/&quot; target=&quot;_blank&quot;&gt;TechCentral.&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;Receive a daily update on your cellphone with all our latest news: &lt;a href=&quot;https://www.businessinsider.co.za/whatsapp-newsletter/&quot; target=&quot;_blank&quot;&gt;click here.&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Also from Business Insider South Africa:&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 17 Feb 2020 01:27:45 +0000</pubDate>
<dc:creator>infodocket</dc:creator>
<og:image>http://cdn.24.co.za/files/Cms/General/d/9487/f497dade84304dae8913792105a27d81.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.businessinsider.co.za/google-backs-out-free-wifi-google-station-partnership-with-think-wifi-in-south-africa-2020-2</dc:identifier>
</item>
</channel>
</rss>