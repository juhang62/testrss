<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>A brutally honest landing page</title>
<link>https://fibery.io/anxiety</link>
<guid isPermaLink="true" >https://fibery.io/anxiety</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;title&gt;Fibery — yet another collaborative tool.&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/png&quot; href=&quot;favicon.png&quot;/&gt;&lt;link href=&quot;https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700&amp;amp;display=swap&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/fonts.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/css/styles.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/css/animations.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/css/media.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#ffffff&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;/&gt;&lt;meta property=&quot;og:locale&quot; content=&quot;en_US&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;website&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Fibery&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Yet another collaboration tool&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://fibery.io/&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://fibery.io/fb-fibery-photo.png&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;page-wrap yellow canvas-bg fun-edition&quot; id=&quot;readabilityBody&quot; readability=&quot;53.409298085688&quot;&gt;
&lt;section class=&quot;main-promo&quot; readability=&quot;4.0333333333333&quot;&gt;
&lt;p&gt;I don’t get it,&lt;br/&gt;explain&lt;br/&gt;differently&lt;/p&gt;
&lt;article class=&quot;main-content&quot; readability=&quot;23.958762886598&quot;&gt;
&lt;p class=&quot;sub-head&quot;&gt;Claims to be all-in-one, is mediocre at everything.&lt;/p&gt;


&lt;/article&gt;&lt;/section&gt;&lt;section class=&quot;about-product scroll-element&quot; readability=&quot;-20&quot;&gt;&lt;p class=&quot;about-product-content&quot;&gt;There are dozens of collaborative productivity tools on the market.&lt;br/&gt;Not that we are significantly better.&lt;/p&gt;
&lt;h2 class=&quot;about-product-head&quot;&gt;We just can't help building another one.&lt;/h2&gt;
&lt;p class=&quot;about-product-content&quot;&gt;We have miserably spent 3 years of our lives and are still ashamed of the result.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;about-feature build scroll-element animation scroll-section&quot; id=&quot;build&quot;&gt;&lt;p&gt;Try.&lt;/p&gt;
&lt;article class=&quot;about-feature-content&quot;&gt;&lt;div class=&quot;about-feature-columns&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;column text&quot; readability=&quot;33&quot;&gt;&lt;span class=&quot;upper-head&quot;&gt;Brace yourself, it won't be a smooth ride.&lt;/span&gt;
&lt;h3 class=&quot;headline&quot;&gt;Create&lt;br/&gt;custom apps,&lt;br/&gt;&lt;span class=&quot;underline&quot;&gt;breathe deeply&lt;/span&gt;.&lt;/h3&gt;
&lt;p class=&quot;sub-head&quot;&gt;Maybe, Fibery will be really good 2 years from now.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;timer-slider-wrap&quot;&gt;
&lt;div class=&quot;slider-tabs-head&quot; readability=&quot;10&quot;&gt;
&lt;div class=&quot;slider-head-item current&quot; id=&quot;create-1&quot; data-duration=&quot;6&quot; data-next=&quot;create-2&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Learning Curve&lt;/p&gt;
&lt;p&gt;Unfamiliar terms, new abstractions and an &quot;original&quot; API.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case1-pic1.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;create-2&quot; data-next=&quot;create-3&quot; data-duration=&quot;6&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Missing Features&lt;/p&gt;
&lt;p&gt;Automations, forms and external sharing, among other things.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case1-pic2-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;create-3&quot; data-next=&quot;create-1&quot; data-duration=&quot;6&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Mobile Last&lt;/p&gt;
&lt;p&gt;No Android or iOS apps, never tested on a touch screen.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case1-pic3-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/article&gt;&lt;/section&gt;&lt;section class=&quot;about-feature use scroll-element animation scroll-section&quot; id=&quot;use&quot;&gt;&lt;p&gt;Suffer.&lt;/p&gt;
&lt;article class=&quot;about-feature-content&quot;&gt;&lt;div class=&quot;about-feature-columns&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;column text&quot; readability=&quot;33&quot;&gt;&lt;span class=&quot;upper-head&quot;&gt;Somehow you've managed to set this up.&lt;/span&gt;
&lt;h3 class=&quot;headline&quot;&gt;It only &lt;span class=&quot;underline&quot;&gt;gets worse&lt;/span&gt;&lt;br/&gt;from here&lt;/h3&gt;
&lt;p class=&quot;sub-head&quot;&gt;It's not just the creator who suffers, but everyone else too.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;timer-slider-wrap&quot;&gt;
&lt;div class=&quot;slider-tabs-head&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;slider-head-item current&quot; id=&quot;use-1&quot; data-next=&quot;use-2&quot; data-duration=&quot;16&quot; data-video=&quot;video-organize-work&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Intolerable Quality&lt;/p&gt;
&lt;p&gt;No QA engineer, poor test coverage and 150+ open bugs.&lt;/p&gt;


&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;use-2&quot; data-next=&quot;use-3&quot; data-duration=&quot;6&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Unpolished Interface&lt;/p&gt;
&lt;p&gt;We cut corners to beat the deadline, sorry.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case2-pic2-fun.gif&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;use-3&quot; data-next=&quot;use-1&quot; data-duration=&quot;6&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Unknown Uptime&lt;/p&gt;
&lt;p&gt;Production cluster is a few days old, let's pray for the best.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case2-pic3-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-body&quot;&gt;

&lt;div class=&quot;body-content&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case2-pic2-fun.gif&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;body-content&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case2-pic3-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/article&gt;&lt;/section&gt;&lt;section class=&quot;about-feature grow scroll-element animation scroll-section&quot; id=&quot;grow&quot;&gt;&lt;p&gt;Quit.&lt;/p&gt;
&lt;article class=&quot;about-feature-content&quot;&gt;&lt;div class=&quot;about-feature-columns&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;column text&quot; readability=&quot;32&quot;&gt;&lt;span class=&quot;upper-head&quot;&gt;Why risk your reputation with unproven software?&lt;/span&gt;
&lt;h3 class=&quot;headline&quot;&gt;Go&lt;br/&gt;with the tool&lt;br/&gt;that &lt;span class=&quot;underline&quot;&gt;works&lt;/span&gt;!&lt;/h3&gt;
&lt;p class=&quot;sub-head&quot;&gt;Nobody ever got fired for buying Atlassian.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;timer-slider-wrap&quot;&gt;
&lt;div class=&quot;slider-tabs-head&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;slider-head-item current&quot; id=&quot;grow-1&quot; data-next=&quot;grow-2&quot; data-duration=&quot;6&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Notion&lt;/p&gt;
&lt;p&gt;Pick for a better wiki, more flexible structure and desktop apps.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case3-pic1-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;grow-2&quot; data-next=&quot;grow-3&quot; data-duration=&quot;6&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Airtable&lt;/p&gt;
&lt;p&gt;Go for fast tables, diverse templates and an intuitive API.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case3-pic2-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;slider-head-item&quot; id=&quot;grow-3&quot; data-next=&quot;grow-1&quot; data-duration=&quot;6&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Coda&lt;/p&gt;
&lt;p&gt;Choose because of powerful formulas and automations.&lt;/p&gt;

&lt;div class=&quot;item-content-pic hidden&quot;&gt;&lt;img src=&quot;https://images.fibery.io/website/0.1.0-ci.0337.eb665bf/img/case3-pic3-fun.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/article&gt;&lt;/section&gt;&lt;section class=&quot;try-product scroll-element&quot;&gt;&lt;article class=&quot;try-wrap&quot;&gt;&lt;h2 class=&quot;try-headline&quot;&gt;But we have 🏠 mortgages...&lt;/h2&gt;

&lt;div class=&quot;customers-quotes&quot;&gt;
&lt;h3 class=&quot;quotes-head&quot;&gt;Made for detractors.&lt;/h3&gt;
&lt;div class=&quot;quotes-body&quot; readability=&quot;35&quot;&gt;
&lt;div class=&quot;quote-item&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;text&quot;&gt;Fibery requires too much attention to get started. It's also more expensive than our current tools, so we will stick with what we have.&lt;/p&gt;
&lt;span class=&quot;author&quot;&gt;Alex&lt;/span&gt; &lt;span class=&quot;company&quot;&gt;Technical Product Manager&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;quote-item&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;text&quot;&gt;We've got back to Jira, because it proved too hard for devs to get used to Fibery. Jira is also more stable and functional.&lt;/p&gt;
&lt;span class=&quot;author&quot;&gt;Anton&lt;/span&gt; &lt;span class=&quot;company&quot;&gt;Founder&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;quote-item&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;text&quot;&gt;Any darn fool can make something complex. It takes a genius to make something simple.&lt;/p&gt;
&lt;span class=&quot;author&quot;&gt;Pete&lt;/span&gt; &lt;span class=&quot;company&quot;&gt;Singer and political activist&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/article&gt;&lt;/section&gt;&lt;section class=&quot;photos-line scroll-element&quot;&gt;&lt;p&gt;
&lt;h3 class=&quot;photos-head&quot;&gt;Inspired by investors.&lt;/h3&gt;
&lt;/p&gt;

&lt;/section&gt;&lt;/body&gt;</description>
<pubDate>Tue, 26 Nov 2019 23:09:46 +0000</pubDate>
<dc:creator>pookeh</dc:creator>
<og:type>website</og:type>
<og:title>Fibery</og:title>
<og:description>Yet another collaboration tool</og:description>
<og:url>https://fibery.io/</og:url>
<og:image>https://fibery.io/fb-fibery-photo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fibery.io/anxiety</dc:identifier>
</item>
<item>
<title>Dark Mode by Default – 95% of People Prefer Dark over Light Mode</title>
<link>https://getpolarized.io/2019/11/25/Dark-Mode-Should-Be-The-Default-With-95-Percent-Preferring-it-Over-Light-Mode.html</link>
<guid isPermaLink="true" >https://getpolarized.io/2019/11/25/Dark-Mode-Should-Be-The-Default-With-95-Percent-Preferring-it-Over-Light-Mode.html</guid>
<description>&lt;p&gt;&lt;img class=&quot;img-fluid border border-dark rounded&quot; src=&quot;https://i.imgur.com/KSK0R75.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;One thing that’s kept coming up when talking to Polar users is that we should implement dark mode.&lt;/p&gt;
&lt;p&gt;It’s quickly become one of our top requested features. I think it’s about #3 right now in our new feature roadmap.&lt;/p&gt;
&lt;p&gt;The problem is that it’s a lot of work to build two skins (light and dark) so I had a thought: what if we only had one theme and what if it was dark mode?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.discordapp.com/light-theme-redeemed-c541b7ab13e9&quot;&gt;Turns out Discord looked into the same thing:&lt;/a&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;As of this writing, the percentage of Discord users on light theme is in the single digits — and not even the higher ones.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;… so single digits. I’d call this about 95%.&lt;/p&gt;
&lt;p&gt;Now this might not be clean data as Discord defaults to dark. Users would have to specifically pick the light theme after installing.&lt;/p&gt;
&lt;p&gt;Further, their light mode wasn’t really ideal for a long time (which they admit) so this might have pushed users to dark mode.&lt;/p&gt;
&lt;p&gt;IntelliJ actually DOES require the user to pick from light/dark during onboarding and I would LOVE to see their data since they have a large user base.&lt;/p&gt;
&lt;h2 id=&quot;polling-polar-users&quot;&gt;Polling Polar Users&lt;/h2&gt;
&lt;p&gt;We’ve built into Polar a feature where we can poll our users and we asked them the same question.&lt;/p&gt;
&lt;p&gt;It’s currently sitting around 92% of people preferring dark mode.&lt;/p&gt;
&lt;p&gt;We asked the same question on Twitter and we’re polling around 82% right now (though with fewer users reporting).&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;7.3461538461538&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;If you could only use one theme for polar, light them or dark theme (granted it's not implemented yet), which one would you go with?&lt;/p&gt;
— POLAR - Personal knowledge repository (@getpolarized) &lt;a href=&quot;https://twitter.com/getpolarized/status/1197388523545845760?ref_src=twsrc%5Etfw&quot;&gt;November 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;readability&quot;&gt;Readability&lt;/h2&gt;
&lt;p&gt;The main goal of Polar is to provide an amazing reading experience for our users. Not just in tools but it should extend into the UX and usability.&lt;/p&gt;
&lt;p&gt;This, obviously, includes being able to read text.&lt;/p&gt;
&lt;p&gt;What’s the point of all the other Polar features like tagging, annotation, spaced repetition, etc, if it burns your eyes out of their sockets?&lt;/p&gt;
&lt;h2 id=&quot;why-just-one-theme&quot;&gt;Why Just One Theme?&lt;/h2&gt;
&lt;p&gt;It takes a lot of testing comparing the skins to make sure there is hasn’t been a regression.&lt;/p&gt;
&lt;p&gt;And what’s worse, you can’t really run integration testing on theme colors as a lot of this is just aesthetic.&lt;/p&gt;
&lt;p&gt;The one theme idea, right now is mostly just a thought experiment.&lt;/p&gt;
&lt;p&gt;I’m not planning on ditching light mode. At least until I can confirm that no one is actually using it. However, if we can get to a point where it’s easily maintained maybe we would support both.&lt;/p&gt;
&lt;h2 id=&quot;pain-and-sleep-issues&quot;&gt;Pain and Sleep Issues&lt;/h2&gt;
&lt;p&gt;I think part of the issue here is that light mode can actually cause pain and sleep issues for some people. Having your retina’s burned out just before bed isn’t the best feeling and reading text for long term is definitely easier in dark mode.&lt;/p&gt;
&lt;h2 id=&quot;new-apps-as-dark-by-default&quot;&gt;New Apps as Dark by Default&lt;/h2&gt;
&lt;p&gt;This brings up a BIG issue though. If you’re build a new app it should probably be dark by default.&lt;/p&gt;
&lt;p&gt;In retrospect we should have gone dark to begin with but I can’t go back in time and change that now.&lt;/p&gt;
&lt;p&gt;However, if I were building a new app from the ground up, I would make it dark-mode by default.&lt;/p&gt;
&lt;p&gt;… so we’re going to eventually have a dark mode. We have a working prototype but just need a bit more time.&lt;/p&gt;

&lt;div class=&quot;related-posts&quot;&gt;
&lt;p&gt;
&lt;h4&gt;Related Posts&lt;/h4&gt;
&lt;/p&gt;
&lt;div class=&quot;post-list&quot;&gt;
&lt;div class=&quot;container&quot;&gt;
&lt;div class=&quot;row&quot;&gt;
&lt;div class=&quot;col-lg-4&quot;&gt;
&lt;div class=&quot;card m-1&quot; readability=&quot;6.1860465116279&quot;&gt;
&lt;div class=&quot;card-body&quot; readability=&quot;30.046511627907&quot;&gt;
&lt;h5 class=&quot;card-title&quot;&gt;&lt;a href=&quot;https://getpolarized.io/2019/11/20/1-60-Preparing-for-2-0.html&quot;&gt;Polar 1.60 - Preparing for 2.0&lt;/a&gt;&lt;/h5&gt;
&lt;p class=&quot;card-text&quot;&gt;Another big release is out to help prepare us for 2.0. Most of the changes here are small to moderate features and improving stability but there have also been a lot of library updates too which were important. Prompting for...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;col-lg-4&quot;&gt;
&lt;div class=&quot;card m-1&quot; readability=&quot;6.506309148265&quot;&gt;&lt;a href=&quot;https://getpolarized.io/2019/11/11/Building-Polar-Product-Market-Fit-Engine.html&quot;&gt;&lt;img class=&quot;card-img-top&quot; src=&quot;https://getpolarized.io//assets/screenshots/2019-11-document-view.png&quot; alt=&quot;Building Polar's Product Market Fit Engine&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;card-body&quot; readability=&quot;30.362776025237&quot;&gt;
&lt;h5 class=&quot;card-title&quot;&gt;&lt;a href=&quot;https://getpolarized.io/2019/11/11/Building-Polar-Product-Market-Fit-Engine.html&quot;&gt;Building Polar's Product Market Fit Engine&lt;/a&gt;&lt;/h5&gt;
&lt;p class=&quot;card-text&quot;&gt;Building Polar’s Product/Market Fit Engine For the past month or so I’ve been revamping Polar’s product-market-fit engine to help understand our users and to prioritize feature requests. More importantly, it’s helping me build a product for the long-term based on...&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 26 Nov 2019 17:35:08 +0000</pubDate>
<dc:creator>burtonator</dc:creator>
<og:title>Dark Mode by Default - 95% Prefer Dark over Light Mode</og:title>
<og:description>Dark Mode by Default - 95% Prefer Dark over Light Mode. One thing that’s kept coming up when talking to Polar users is that we should implement dark mode. It’s quickly become one of our top requested features. I think it’s about</og:description>
<og:url>http://localhost:4000/2019/11/25/Dark-Mode-Should-Be-The-Default-With-95-Percent-Preferring-it-Over-Light-Mode.html</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://getpolarized.io/2019/11/25/Dark-Mode-Should-Be-The-Default-With-95-Percent-Preferring-it-Over-Light-Mode.html</dc:identifier>
</item>
<item>
<title>Eternal Terminal</title>
<link>https://eternalterminal.dev/</link>
<guid isPermaLink="true" >https://eternalterminal.dev/</guid>
<description>&lt;article class=&quot;post-preview&quot; readability=&quot;28.158333333333&quot;&gt;
&lt;h3 class=&quot;post-title&quot;&gt;&lt;a href=&quot;https://eternalterminal.dev/2018-02-05-version-412-release/&quot;&gt;Version 4.1.2 Released&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;post-meta&quot;&gt;Posted on February 5, 2018&lt;/p&gt;
&lt;p&gt;Version 4.1.2 of Eternal Terminal is released. Version 4 added support for jumphosts and port forwarding. Also in version 4 ET reads your ssh_config and supports host aliasing.&lt;/p&gt;
&lt;p&gt;Tags: release&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;post-preview&quot; readability=&quot;26.792387543253&quot;&gt;
&lt;h3 class=&quot;post-title&quot;&gt;&lt;a href=&quot;https://eternalterminal.dev/2017-05-12-version-302-release/&quot;&gt;Version 3.0.2 Released&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;post-meta&quot;&gt;Posted on May 12, 2017&lt;/p&gt;
&lt;p&gt;Version 3.0.2 of Eternal Terminal is released. Version 3 is a major milestone release and not backwards compatible with version 2.x.x. The major improvement is that ET server now runs as a deamon and can support multiple clients.&lt;/p&gt;
&lt;p&gt;Tags: release&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;post-preview&quot; readability=&quot;20.333333333333&quot;&gt;
&lt;h3 class=&quot;post-title&quot;&gt;&lt;a href=&quot;https://eternalterminal.dev/2017-03-14-version-210-release/&quot;&gt;Version 2.1.0 Released&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;post-meta&quot;&gt;Posted on March 14, 2017&lt;/p&gt;
&lt;div class=&quot;post-entry&quot; readability=&quot;27.914893617021&quot;&gt;Compiles now on debian and other linux systems with older gflags implementations. &lt;a href=&quot;https://eternalterminal.dev/2017-03-14-version-210-release/&quot; class=&quot;post-read-more&quot;&gt;[Read More]&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Tags: release&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;post-preview&quot; readability=&quot;25.771375464684&quot;&gt;
&lt;h3 class=&quot;post-title&quot;&gt;&lt;a href=&quot;https://eternalterminal.dev/2017-02-22-version-202-release/&quot;&gt;Version 2.0.2 Released&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;post-meta&quot;&gt;Posted on February 22, 2017&lt;/p&gt;
&lt;div class=&quot;post-entry&quot; readability=&quot;31.058823529412&quot;&gt;Version 2.0.2 of Eternal Terminal is released. Version 2.0.0 is a complete rewrite of the protocol for security and efficiency reasons. 2.0.2 has minor fixes to the launcher and build system. &lt;a href=&quot;https://eternalterminal.dev/2017-02-22-version-202-release/&quot; class=&quot;post-read-more&quot;&gt;[Read More]&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Tags: release&lt;/p&gt;
&lt;/article&gt;&lt;article class=&quot;post-preview&quot; readability=&quot;29.597269624573&quot;&gt;
&lt;h3 class=&quot;post-title&quot;&gt;&lt;a href=&quot;https://eternalterminal.dev/2017-01-31-version-103-release/&quot;&gt;Version 1.0.3 Released&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;post-meta&quot;&gt;Posted on January 31, 2017&lt;/p&gt;
&lt;p&gt;Version 1.0.3 of Eternal Terminal is released. This fixes a bug where child processes could hold refcounters to TCP sockets that belong to ET. Please report any issues here: https://github.com/MisterTea/EternalTerminal/issues/new&lt;/p&gt;
&lt;p&gt;Tags: release&lt;/p&gt;
&lt;/article&gt;</description>
<pubDate>Tue, 26 Nov 2019 17:08:05 +0000</pubDate>
<dc:creator>ofrzeta</dc:creator>
<og:title>Eternal Terminal</og:title>
<og:description>Remote terminal for the busy and impatient</og:description>
<og:type>website</og:type>
<og:url>https://eternalterminal.dev/</og:url>
<og:image>https://eternalterminal.dev/img/avatar-icon.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://eternalterminal.dev/</dc:identifier>
</item>
<item>
<title>Show HN: Coscreen.co – a radically different remote collaboration tool</title>
<link>http://coscreen.co</link>
<guid isPermaLink="true" >http://coscreen.co</guid>
<description>&lt;p class=&quot;centered-text&quot;&gt;CoScreen™ turns your secondary display into your joint team desktop. Share windows via drag &amp;amp; drop, collaborate remotely via mouse &amp;amp; keyboard, each user gets their own mouse pointer. Now available for macOS and &lt;strong&gt;entirely free&lt;/strong&gt; during the public beta - &lt;a class=&quot;typeform-share link&quot; href=&quot;https://teamcoscreen.typeform.com/to/tWKFDe&quot; data-mode=&quot;drawer_left&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;get it now&lt;/strong&gt;&lt;/a&gt;  and see &lt;a href=&quot;https://support.coscreen.co/portal/kb/articles/release-notes&quot;&gt;&lt;strong&gt;what's new&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;centered-text&quot;&gt;&lt;a href=&quot;https://www.producthunt.com/posts/coscreen?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-coscreen&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=175788&amp;amp;theme=light&quot; alt=&quot;CoScreen - Radically different remote collaboration &amp;amp; screensharing | Product Hunt Embed&quot; width=&quot;250px&quot; height=&quot;54px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p class=&quot;centered-text&quot;&gt;Any window you drag &amp;amp; drop onto your secondary display will be shared instantly with your team and vice versa. Your main display stays private but all team members can control any window shared on CoScreen using mouse and keyboard simultaneously.&lt;/p&gt;

&lt;p class=&quot;centered-text&quot;&gt;&lt;a class=&quot;typeform-share button&quot; href=&quot;https://teamcoscreen.typeform.com/to/tWKFDe&quot; data-mode=&quot;drawer_left&quot; target=&quot;_blank&quot;&gt;SIGN UP&lt;/a&gt; &lt;/p&gt;
&lt;p class=&quot;centered-text&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/getcoscreen&quot;&gt;Follow us on Twitter&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://medium.com/coscreen&quot;&gt;read our blog&lt;/a&gt; if you want to learn more, and &lt;a class=&quot;typeform-share link&quot; href=&quot;https://teamcoscreen.typeform.com/to/tWKFDe&quot; data-mode=&quot;drawer_left&quot; target=&quot;_blank&quot;&gt;join the beta&lt;/a&gt;  to use the best remote collaboration application for the future of work with your entire team for free.&lt;/p&gt;
&lt;p class=&quot;centered-text&quot;&gt;And by the way, &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/getcoscreen&quot;&gt;we're hiring&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 26 Nov 2019 16:12:22 +0000</pubDate>
<dc:creator>coscreen</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.coscreen.co/</dc:identifier>
</item>
<item>
<title>The LEGO Group acquires BrickLink</title>
<link>https://brickset.com/article/47293/the-lego-group-acquires-bricklink</link>
<guid isPermaLink="true" >https://brickset.com/article/47293/the-lego-group-acquires-bricklink</guid>
<description>&lt;header&gt;
&lt;small&gt;Posted by &lt;a href=&quot;https://brickset.com/profile/CapnRex101&quot; rel=&quot;author&quot;&gt;CapnRex101&lt;/a&gt;, &lt;time datetime=&quot;2019-11-26 13:00&quot;&gt;26 Nov 2019 13:00&lt;/time&gt;&lt;/small&gt;&lt;/header&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.brickset.com/news/thumbs/large/tn_LEGO%20BrickLink_png.png&quot; class=&quot;mainimg&quot;/&gt;&lt;footer&gt;

&lt;p&gt;69567 Views&lt;/p&gt;
&lt;/footer&gt;&lt;p&gt;LEGO has today announced its acquisition of &lt;a href=&quot;https://www.bricklink.com/v2/main.page&quot;&gt;BrickLink&lt;/a&gt;. Read the full press release and our interview on this subject with Julia Goldin, Global Chief Marketing Officer at The LEGO Group, here:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;The LEGO Group acquires BrickLink, the world’s largest online LEGO fan community and marketplace to strengthen ties with adult fans.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Acquisition will strengthen the LEGO Group’s engagement with its growing community of adult fans.&lt;/p&gt;
&lt;p&gt;BILLUND, Denmark, November 26, 2019: The LEGO Group today announced it has acquired BrickLink Ltd (&lt;a href=&quot;https://www.bricklink.com/v2/main.page&quot;&gt;www.bricklink.com&lt;/a&gt;), the world’s largest online community of adult LEGO fans from NXMH LLC to strengthen its connection with its important adult fan base.&lt;/p&gt;
&lt;p&gt;The BrickLink platform has more than one million members and comprises an online marketplace of more than 10,000 stores from 70 countries; a digital building software where builders can design and showcase their creations; and a vibrant online community where fans share ideas and builds.&lt;/p&gt;
&lt;p&gt;The platform was founded in 2000 by Dan Jezek as a way to connect like-minded adult LEGO fans from around the world. It was acquired in 2013 by NXMH, which is owned by Korean entrepreneur Jung-Ju “Jay” Kim. BrickLink is headquartered in Irvine, California.&lt;/p&gt;
&lt;p&gt;The LEGO Group CEO, Niels B Christiansen said: “Our adult fans are extremely important to us. They are passionate, committed and endlessly creative. We have worked closely with the community for many years and look forward to deepening our collaboration through BrickLink. We plan to continue to support the active marketplace and evolve BrickLink’s digital studio which allows our talented fans to take their creativity to the next level.”&lt;/p&gt;

&lt;p&gt;Jung-Ju “Jay” Kim, owner of NXMH, said: “It has been a privilege to lead the transformation of BrickLink during the past six years. I am grateful to the community for being so welcoming, supportive and constructive. I am constantly amazed by everyone’s endless creativity and their love for building. I am confident the platform will be in good hands with the LEGO Group. As a fan myself, I can’t wait to see what’s next.”&lt;/p&gt;
&lt;p&gt;The LEGO Group’s Chief Marketing Officer, Julia Goldin, said: “BrickLink provides the LEGO Group with a unique opportunity to connect with adult fans through new channels and exciting experiences. We’ve recently collaborated with BrickLink on a range of crowd-sourced sets to celebrate the 60th anniversary of the brick. We learned a lot and are keen to explore more ways of working together to create value. We look forward to collaborating further with our adult fans, while retaining and nurturing the independent spirit of the digital platform.”&lt;/p&gt;
&lt;p&gt;The acquisition also includes Sohobricks which makes small batches of building elements.&lt;/p&gt;
&lt;p&gt;Financial terms of the acquisition were not disclosed. Closing is expected to occur before the end of 2019.&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;We had an opportunity to speak with Julia Goldin, Global Chief Marketing Officer at The LEGO Group, about this acquisition yesterday.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Brickset: What has prompted LEGO's decision to acquire BrickLink?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.brickset.com/news/thumbs/large/tn_JuliaGoldin_png.png&quot;/&gt;Julia:&lt;/strong&gt; Our love and appreciation for adult fans of LEGO. They have always been very important to us and have contributed so much to helping us build the brand. We feel that we can engage with them in a much deeper way through the ownership of BrickLink. That will enable us to focus our own capabilities and the strength of the LEGO brand to understand better what members of the community want and to improve our service towards them.&lt;/p&gt;
&lt;p&gt;Moreover, the acquisition will create an even stronger connection for LEGO to learn from adult fans and we hope this will become an excellent platform to improve that relationship. BrickLink’s global audience is also important, enabling us to broaden our reach to AFOLs around the world.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Can you provide any specific information about how this will improve the relationship between LEGO and adult fans?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; There are many different possibilities but it is too early to give any certain information at the moment. We already piloted the AFOL designer program last year with fantastic results and we can see that there is ample opportunity to support MOCs, particularly with regard to crowdsourcing and insights concerning how we can develop the LEGO System of Play. I believe those are the main things that will emerge in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do you envisage LEGO making any changes to BrickLink?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; BrickLink has been an extremely successful organisation, inspired by the strong vision from Dan [Jezek] and fuelled by the very committed and passionate people who run the website today. We do not therefore anticipate making any changes. Instead, we hope to support them and maintain some of that independent spirit.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.brickset.com/news/BrickLink%201.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Of course, we will also want to introduce continued improvements and expand the opportunities which are provided to AFOLs through BrickLink. I certainly see some possibilities for development, progress and evolution in those areas, with input from the community.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How might this affect LEGO's existing methods for selling individual parts, such as Bricks and Pieces?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; BrickLink provides an opportunity for us to better understand what needs people have. There are no plans for immediate changes but I think there is potential to evolve and improve that service within LEGO to the AFOL community. At the moment, we have various methods of providing bulk or individual brick purchasing but BrickLink could certainly assist us with continuing development.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Could this acquisition result in any price changes or price setting on BrickLink?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; There are absolutely no plans to change transaction fees or anything like that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Might there be any influence from LEGO in how elements should be valued, potentially affecting the existing competition between BrickLink stores?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; No. We would seek to maintain the marketplace in a way that is competitively robust and we will continue to allow sellers to operate as they are doing already. LEGO will not be interfering with that in any way.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://images.brickset.com/news/BrickLink_20191126.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Can we therefore anticipate that LEGO’s involvement with the BrickLink marketplace will be relatively light?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; Yes, our primary goal with this partnership is to deepen our connection and relationship with adult fans and to service the community more effectively. There is definitely opportunity to enable fans to celebrate their creations more widely, perhaps reaching broader audiences than have been possible previously, for example.&lt;/p&gt;
&lt;p&gt;The recent AFOL Designer Program pilot clearly demonstrated the enormous desire which fans have to design their own models. Providing further opportunities there would be our priority, rather than interfering with the marketplace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finally, how would you reassure fans who might be nervous about LEGO acquiring BrickLink, given its close integration with fans?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Julia:&lt;/strong&gt; My first comment would be to emphasise that our acquisition of BrickLink is driven by desire to support our fans more effectively. There should be no concerns about our interference as we realise the platform already works extremely well for many people. I must also mention that our reason for doing this is because we believe there are opportunities to make improvements and respond directly to what the fans really want from LEGO.&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;What is your response to this interesting news? Let us know in the comments.&lt;/p&gt;


</description>
<pubDate>Tue, 26 Nov 2019 16:03:43 +0000</pubDate>
<dc:creator>ivanech</dc:creator>
<og:type>article</og:type>
<og:image>https://images.brickset.com/news/LEGO%20BrickLink.png</og:image>
<og:title>The LEGO Group acquires BrickLink</og:title>
<og:description>LEGO has today announced its acquisition of BrickLink . Read the full press release and our interview on this subject with Julia Goldin, Global Chief Marketing Officer at The LEGO Group, here:</og:description>
<og:url>https://brickset.com/article/47293/the-lego-group-acquires-bricklink</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://brickset.com/article/47293/the-lego-group-acquires-bricklink</dc:identifier>
</item>
<item>
<title>Vinod Khosla Wins Ruling Threatening Public Beach Access</title>
<link>https://www.bloomberg.com/news/articles/2019-11-26/billionaire-khosla-wins-ruling-threatening-public-beach-access</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-11-26/billionaire-khosla-wins-ruling-threatening-public-beach-access</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-11-26/billionaire-khosla-wins-ruling-threatening-public-beach-access&quot;&gt;https://www.bloomberg.com/news/articles/2019-11-26/billionaire-khosla-wins-ruling-threatening-public-beach-access&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21639200&quot;&gt;https://news.ycombinator.com/item?id=21639200&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 284&lt;/p&gt;
&lt;p&gt;# Comments: 306&lt;/p&gt;
</description>
<pubDate>Tue, 26 Nov 2019 15:40:56 +0000</pubDate>
<dc:creator>chollida1</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=7006efa0-10b1-11ea-8dad-333e90a52fa3&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0xMS0yNi9iaWxsaW9uYWlyZS1raG9zbGEtd2lucy1ydWxpbmctdGhyZWF0ZW5pbmctcHVibGljLWJlYWNoLWFjY2Vzcw==</dc:identifier>
</item>
<item>
<title>Show HN: patchbay.pub – Poor man&amp;#039;s ngrok/IFTTT/serverless</title>
<link>https://patchbay.pub</link>
<guid isPermaLink="true" >https://patchbay.pub</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;title&gt;patchbay - connect anything&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;./apps/simple_chat/chat.css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.16.2/build/styles/atelier-sulphurpool-dark.min.css&quot; type=&quot;text/css&quot;/&gt;&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;298.87785161335&quot;&gt;

&lt;p&gt;patchbay.pub is a free web service you can use to implement things like &lt;a href=&quot;https://patchbay.pub/#static-hosting&quot;&gt;static site hosting&lt;/a&gt;, &lt;a href=&quot;https://patchbay.pub/#file-sharing&quot;&gt;file sharing&lt;/a&gt;, &lt;a href=&quot;https://patchbay.pub/#notifications&quot;&gt;cross-platform notifications&lt;/a&gt;, &lt;a href=&quot;https://patchbay.pub/#webhooks&quot;&gt;webhooks handling&lt;/a&gt;, smart home event routing, IoT reporting, &lt;a href=&quot;https://patchbay.pub/#job-queues&quot;&gt;job queues&lt;/a&gt;, &lt;a href=&quot;https://patchbay.pub/#chat-systems&quot;&gt;chat systems&lt;/a&gt;, bots, etc, all completely serverless and requiring no account creation or authentication. Most implementations need nothing but curl and simple bash snippets.&lt;/p&gt;

&lt;p&gt;I originally wanted an easy way to get a notification on my laptop when a long-running job on my server completed. After a bit of experimenting I decided a small amount of additional features would result in a more generally useful tool. This evolved into the following question:&lt;/p&gt;
&lt;p class=&quot;emphasized&quot;&gt;&quot;What is the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;20%&lt;/a&gt; of &lt;a target=&quot;_blank&quot; href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt; functionality I could implement to have 80% of IFTTT features that I would personally use?&quot;&lt;/p&gt;
&lt;p&gt;patchbay is what I ended up with.&lt;/p&gt;
&lt;p class=&quot;emphasized&quot;&gt;The entire philosophy of patchbay is that all the logic is done on your local machine[s], typically with small shell snippets. The server exists only for you to connect (&quot;&lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Patch_panel&quot;&gt;patch&lt;/a&gt;&quot;) different components together.&lt;/p&gt;

&lt;p&gt;patchbay provides an infinite number of virtual HTTP &quot;channels&quot; anyone can use. Each channel is represented by a URL. Here's an example channel:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;plaintext&quot;&gt;
https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Generally, a channel is chosen by randomly generating a string long enough that no one else will guess it (all channels are publicly accessible; see &lt;a href=&quot;https://patchbay.pub/#security&quot;&gt;Security&lt;/a&gt;), and then sending HTTP requests to it. The channel above was generated by your browser when you loaded this page, and should be fine to use for running the examples. Channels don't have to be explicitly created before use. Channels can operate in one or both of two modes. By default, a channel models a multi-producer, multi-consumer (MPMC) queue, where GET requests add a consumer, and POSTs add a producer. Consumers will block if there aren't any producers, and producers will block if there aren't any consumers. As soon as a producer gets matched with a consumer, anything in the producer's HTTP body is streamed over the channel to the consumer.&lt;/p&gt;
&lt;p&gt;Enough theory; let's try out a trivial example. If you run this GET to create a consumer, it will block:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Until you also run this POST in another terminal to create a producer:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt; -d &quot;Hi there&quot;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can also try reversing the order, and observe that the producer blocks until you run the consumer. If you start 2 producers at the same time, you'll have to run the consumer twice in order to unblock both of them, one after the other.&lt;/p&gt;
&lt;p&gt;If you set the &lt;code&gt;pubsub=true&lt;/code&gt; query parameter, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true -d &quot;Hi there&quot;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;the request uses the channel in a different mode. GETs act similar to before, but POSTs become non-blocking, and will broadcast messages to all blocked pubsub consumers, not just the first one. As the name suggest, this models the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&quot;&gt;PubSub pattern&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, with that brief introduction, here are a few examples of things you can implement with MPMC queues and pubsub messages over HTTP:&lt;/p&gt;
&lt;h2 id=&quot;notifications&quot;&gt;Poor man's desktop notifications&lt;/h2&gt;
&lt;p&gt;Here's how my original goal can be implemented using patchbay.pub. First, on my remote server:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
./longjob.sh; curl -X POST https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And on my Linux laptop with &lt;a target=&quot;_blank&quot; href=&quot;https://wiki.archlinux.org/index.php/Desktop_notifications&quot;&gt;desktop notifications&lt;/a&gt; support:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true; notify-send &quot;Job done&quot;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's it. I'll get a popup on my screen when the job is done. (Note that MacOS has &lt;a target=&quot;_blank&quot; href=&quot;https://apple.stackexchange.com/a/115373&quot;&gt;notification functionality&lt;/a&gt; built-in.) If I want to get real fancy I can re-run the consumer in a loop. I keep the following script running in the background ready to receive notifications from whatever producers I want, displaying the HTTP body from the producer:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
#!/bin/bash

while true
do
    # Run curl in a subshell and pass the results to notify-send
    notify-send $(curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true)

    # Avoid too many requests if server is down or rejecting
    if [ &quot;$?&quot; -ne &quot;0&quot; ]; then
        sleep 1
    fi
done
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It's also possible to use a GET request to create a producer. This is done by using the &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; query parameters, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
curl &quot;https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true&amp;amp;method=post&amp;amp;body=Job%20Done&quot;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is useful if you want to do something like send a signal from a mobile browser, where you only have access to the address bar. I like to create mobile browser shortcuts for triggering different things.&lt;/p&gt;
&lt;h2 id=&quot;notifications&quot;&gt;Poor man's SMS notifications&lt;/h2&gt;
&lt;p&gt;Let's extend the previous example a bit. What if I want to go to lunch, but still get notified when the job on my server is done? The server is already broadcasting a pubsub message, so I don't need to make any changes there. I just need to add a consumer that can notify me on the go. How about using &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/&quot;&gt;Twilio&lt;/a&gt; to send myself a text message? First I followed &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/docs/twilio-cli/quickstart&quot;&gt;the instructions&lt;/a&gt; to get the Twilio CLI installed and logged in on my laptop, then it's just a matter of calling it with the body received by the pubsub consumer:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
twilio api:core:messages:create --from &quot;+15017122661&quot; --to &quot;+15558675310&quot; --body $(curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true)
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now I'll get a desktop notification, &lt;em&gt;and&lt;/em&gt; a text message when the job is done. If you don't want to pay for texts, you can do something similar with any messaging app that offers an API.&lt;/p&gt;
&lt;h2 id=&quot;webhooks&quot;&gt;Poor man's webhooks&lt;/h2&gt;
&lt;p&gt;Receiving a text notification is useful, but what if I want to &lt;em&gt;send&lt;/em&gt; a text to my Twilio number and have it trigger some other event? This is easily done by logging in to the Twilio website and pointing the SMS webhook to &lt;code&gt;https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;?pubsub=true&lt;/code&gt;. Any texts to my number will now trigger a pubsub event on the same channel as before. I can use whatever command line tools I want to process the webhook.&lt;/p&gt;
&lt;h2 id=&quot;chat-systems&quot;&gt;Poor man's IRC&lt;/h2&gt;
&lt;p&gt;How about an ad-hoc chat app? This chat includes everyone currently visiting this page, using the https://patchbay.pub/pubchat channel. It doesn't require any fancy WebRTC or WebSockets; just HTTP. It's implemented using the &lt;a target=&quot;_blank&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events&quot;&gt;server-sent events (SSE) protocol&lt;/a&gt;. Instead of the events being generated on the server, they originate from peer producers and are broadcast to all consumers. If there's no one else around, try opening it in another tab and talking to yourself.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://patchbay.pub/apps/simple_chat/&quot; target=&quot;_blank&quot;&gt;Open chat in tab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/patchbay-pub/patchbay.pub/tree/master/apps/simple_chat&quot;&gt;code&lt;/a&gt; is quite simple, and most of it is just UI stuff. Here's the meat of it:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;javascript&quot;&gt;
// Send a message:

const message = JSON.stringify({
  author: &quot;Default Nickname&quot;,
  text: &quot;Hi there&quot;,
});

fetch('https://patchbay.pub/pubchat?pubsub=true', {
  method: 'POST',
  body: `data: ${message}\n\n`,
});


// Receive messages:

const evtSource = new EventSource(&quot;https://patchbay.pub/pubchat?mime=text%2Fevent-stream&amp;amp;pubsub=true&amp;amp;persist=true&quot;);
evtSource.onmessage = function(event) {
  console.log(event.data);
});
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There are a couple new pieces of the patchbay API shown here. First of all, notice that I'm overriding the Content-Type returned from the server by setting mime=text/event-stream in the GET request. This is necessary to make the browser use the SSE protocol. The server will return whatever you specify. I'm also setting persist=true. This keeps the consumer connection open, rather than requiring it to loop after each message. This is useful for ensuring no messages are missed.&lt;/p&gt;
&lt;p&gt;You can also participate with curl using something like the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
printf 'data: {&quot;author&quot;: &quot;Curly Jefferson&quot;, &quot;text&quot;: &quot;Hi there&quot;}\n\n' | curl https://patchbay.pub/pubchat?pubsub=true --data-binary @-
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note that printf is necessary in order to properly pass the newlines to curl, and I'm using --data-binary to prevent curl from stripping whitespace. Also note that this chat system is very easy for bad actors to interfere with by sending crafted messages. A real solution would probably need something more sophisticated than SSE, including some sort of client-side filtering.&lt;/p&gt;
&lt;h2 id=&quot;job-queues&quot;&gt;Poor man's job queue&lt;/h2&gt;
&lt;p&gt;What if you had a directory with 1000 MP3s you want to transcode without using more than 4 cores on your machine? You could google how to use GNU parallel for the 27th time (assuming it runs on your operating system), or you could run something like this in one terminal:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
#!/bin/bash

# IFS determines what to split on. By default it will split on spaces. Change
# it to newlines
# See https://www.cyberciti.biz/tips/handling-filenames-with-spaces-in-bash.html
ifsbak=$IFS
IFS=$(echo -en &quot;\n\b&quot;)

for filename in *.mp3
do
        curl https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt; -d $filename
done

# Need to restore IFS to its previous value
IFS=$ifsbak
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And this in 4 others:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
#!/bin/bash

while true
do
        filename=$(curl -s https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;)
        if [ &quot;$filename&quot; != &quot;Too Many Requests&quot; ]
        then
                echo $filename
                ffmpeg -i &quot;$filename&quot; &quot;$filename.ogg&quot;
        else
                sleep 1
        fi
done
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The work will be evenly distributed across the consumer workers, without using more than 4 cores at a time.&lt;/p&gt;
&lt;h2 id=&quot;static-hosting&quot;&gt;Poor man's web hosting&lt;/h2&gt;
&lt;p&gt;Time to get funky. This entire web site is being hosted over a patchbay.pub channel. How? This is essentially how I'm hosting the index.html for the page you're reading (note that it uses the root channel, /):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
while true; do curl -X POST https://patchbay.pub/ --data-binary ./index.html; done
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And chat.js:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
while true; do curl -X POST https://patchbay.pub/apps/simple_chat/chat.js --data-binary ./apps/simple_chat/chat.js; done
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's right; I'm advocating bash as your next web server! (that's not something I ever thought I'd write). This works because static site hosting can be modeled as a MPMC queue, where each file you want to host is a producer in a loop, and web browsers create a consumer with each request to a resource. You can also assign multiple producers to each hosted file for poor man's load balancing.&lt;/p&gt;
&lt;p&gt;There's nothing special about channel ids. Any valid URL path will do. In this case the channel ids carry extra semantic information corresponding to a HTTP resource location, but as far as the server is concerned, apps/simple_chat/chat.js is just a bunch of characters forming an id.&lt;/p&gt;
&lt;p&gt;Astute observers will see a problem here: what's preventing any of you from sending POST requests to those channels and competing with my producers to publish your own content in place of this page? For these few endpoints, I added a bit of authentication to ensure I'm the only one who can publish to them. In general I don't expect people to need publicly facing sites on patchbay.pub. I think sites hosted on privately shared channels (a la poor man's &lt;a target=&quot;_blank&quot; href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt;) are much more likely. But feel free to reach out if you want a &quot;vanity channel&quot; for some reason.&lt;/p&gt;
&lt;p&gt;Just because you can't host something on the root channel, doesn't mean you can't host it somewhere else on patchbay.pub. There's a &lt;code&gt;host.sh&lt;/code&gt; script in &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/patchbay-pub/patchbay.pub&quot;&gt;the repo&lt;/a&gt;). You can host your own copy of this site on your own channel by cloning the repo and running this command:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
./host.sh https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then point your browser here (make sure to include the trailing slash; it's required for relative browser imports to work):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt;/
      &lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can now make whatever changes you want to the code, and they will immediately take effect when you refresh the browser. I actually wrote this page, which is a simple static HTML page, using this workflow. Note that you need to refresh twice, in order to flush the curl producers that are still blocked waiting for consumers of the old code.&lt;/p&gt;
&lt;p&gt;I'm working on a more robust &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/patchbay-pub/patchbay-cli&quot;&gt;CLI tool&lt;/a&gt;, which will turn common use cases like hosting a static site with many files into a one liner (rather than having to manually write something like host.sh yourself):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;
patchbay-cli host https://patchbay.pub/&lt;span class=&quot;channel&quot;&gt;aa7cc811-d21c-42ef-92cc-a5566fa38344&lt;/span&gt; ./dir/to/host
      &lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;file-sharing&quot;&gt;Poor man's file sharing&lt;/h2&gt;
&lt;p&gt;No sketchy web service is complete without the ability to share files. Pubsub messages are restricted in size, because each message has to be copied into memory in order to be broadcast. MPMC streams are under no such limitation. If you POST a 10GB file and send your friend a link, it will be efficiently streamed from your machine, through a patchbay.pub server, to your friend's machine. Note that bandwidth is currently quite rate-limited on the free server, so I only recommend this for relatively small files. Otherwise you'll be waiting a while.&lt;/p&gt;

&lt;p&gt;patchbay is designed for simple ad-hoc tasks, with very low friction being a primary goal. Having to juggle auth tokens and logins runs counter to these aims. As such, it probably shouldn't be used for any highly sensitive data. That said, I think it's secure enough for many uses. In general, the longer and more random your channel id is, the less likely anyone else can guess it or stumble upon it. You'll probably want to user longer ids than the one generated for these examples. Maybe a UUID or something. Also note that due to 1) rate limiting and 2) the fact that requests block by default, brute forcing probably isn't a viable attack strategy for channel ids of even moderate length.&lt;/p&gt;

&lt;p&gt;We don't look at anyone's data as it goes through our servers, but you can also use end-to-end encryption if you don't trust us.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;The goal is to keep patchbay free for everyone to use for projects of a reasonable size. However, it's obviously necessary to implement request rate and bandwidth limits. If there's enough interest, I'll probably spin out a product of some sort for high-load use cases. Feel free to reach out at &lt;a href=&quot;mailto:info@patchbay.pub&quot;&gt;info@patchbay.pub&lt;/a&gt; if you have any thoughts.&lt;/li&gt;
&lt;li&gt;Due to the way TCP works, it can be tricky to detect when an HTTP client has disconnected. So if you connect a producer and then cancel it, the server might keep it around for a while before cleaning it up, and a consumer might grab the stale/partial data. The simplest way to handle these situations is to flush it manually by attaching a consumer as soon as you cancel the producer.&lt;/li&gt;
&lt;li&gt;In general, your code needs to assume the connection can fail at any time without having transferred any data. Additionally, even if some or all of a producer body is read from the request, that doesn't guarantee it's been delivered to a consumer. It might just be in an OS buffer. That said, the server should never close a producer connection until a consumer has attached and all data has been read from the producer.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you'd like to stay up to date on future developments, consider subscribing to our newsletter:&lt;/p&gt;

&lt;/body&gt;</description>
<pubDate>Tue, 26 Nov 2019 15:28:23 +0000</pubDate>
<dc:creator>anderspitman</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://patchbay.pub/</dc:identifier>
</item>
<item>
<title>Machine Learning on Encrypted Data Without Decrypting It</title>
<link>https://juliacomputing.com/blog/2019/11/22/encrypted-machine-learning.html?hn</link>
<guid isPermaLink="true" >https://juliacomputing.com/blog/2019/11/22/encrypted-machine-learning.html?hn</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://juliacomputing.com/assets/img/fhe-screenshot.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This post discusses cutting edge cryptographic techniques. It is intended to give a view into research at Julia Computing. Do not use any examples in this blog post for production applications. Always consult a professional cryptographer before using cryptography.&lt;/p&gt;
&lt;p&gt;TL;DR: click &lt;a href=&quot;https://github.com/JuliaComputing/ToyFHE.jl&quot;&gt;here&lt;/a&gt; to go directly to the package that implements the magic and &lt;a href=&quot;https://github.com/JuliaComputing/ToyFHE.jl/blob/master/examples/encrypted_mnist/infer.jl&quot;&gt;here&lt;/a&gt; for the code that we’ll be talking about in this blog post.&lt;/p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Suppose you have just developed a spiffy new machine learning model (using &lt;a href=&quot;https://github.com/FluxML/Flux.jl&quot;&gt;Flux.jl&lt;/a&gt; of course) and now want to start deploying it for your users. How do you go about doing that? Probably the simplest thing would be to just ship your model to your users and let them run it locally on their data. However there are a number of problems with this approach:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;ML models are large and the user’s device may not have enough storage or computation to actually run the model.&lt;/li&gt;
&lt;li&gt;ML models are often updated frequently and you may not want to send the large model across the network that often.&lt;/li&gt;
&lt;li&gt;Developing ML models takes a lot of time and computational resources, which you may want to recover by charging your users for making use of your model.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The solution that usually comes next is expose the model as an API on the cloud. These machine learning-as-a-service offerings have sprung up in mass over the past few years, with &lt;a href=&quot;https://cloud.google.com/products/ai/building-blocks/&quot;&gt;every&lt;/a&gt; &lt;a href=&quot;https://azure.microsoft.com/en-us/overview/ai-platform/&quot;&gt;major&lt;/a&gt; &lt;a href=&quot;https://aws.amazon.com/machine-learning/&quot;&gt;cloud platform&lt;/a&gt; offering such services to the enterprising developer. The dilemma for potential users of such products is obvious: User data is now processed on some remote server that may not necessarily be trustworthy. This has clear ethical and legal ramifications that limit the areas where such solutions can be effective. In regulated industries, such as medicine or finance in particular, sending patient or financial data to third parties for processing is often a no-go. Can we do better?&lt;/p&gt;
&lt;p&gt;As it turns out we can! Recent breakthroughs in cryptography have made it practical to perform computation on data &lt;em&gt;without ever decrypting it&lt;/em&gt;. In our example, the user would send encrypted data (e.g. images) to the cloud API, which would run the machine learning model and then return the encrypted answer. Nowhere was the user data decrypted and in particular the cloud provider does not have access to either the orignal image nor is it able to decrypt the prediction it computed. How is this possible? Let’s find out by building a machine learning service for handwriting recognition of encrypted images (from the MNIST dataset).&lt;/p&gt;
&lt;h2 id=&quot;he-generally&quot;&gt;HE generally&lt;/h2&gt;
&lt;p&gt;The ability to compute on encrypted data is generally referred to as “secure computation” and is a fairly large area of research, with many different cryptographic approaches and techniques for a plethora of different application scenarios. For our example, we will be focusing on a technique known as “homomorphic encryption”. In a homomorphic encryption system, we generally have the following operations available:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pub_key, eval_key, priv_key = keygen()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encrypted = encrypt(pub_key, plaintext)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decrypted = decrypt(priv_key, encrypted)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encrypted′ = eval(eval_key, f, encrypted)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;the first three are fairly straightforward and should be familiar to anyone who has used any sort of asymmetric cryptography before (as you did when you connected to this blog post via TLS). The last operation is where the magic is. It evaluates some function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; on the encryption and returns another encrypted value corresponding to the result of evaluting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; on the encrypted value. It is this property that gives homomorphic computation its name. Evaluation commutes with the encryption operation:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;33&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;f(decrypt(priv_key, encrypted)) == decrypt(priv_key, eval(eval_key, f, encrypted))
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Equivalently it is possible to evaluate arbitrary homomorphisms &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; on the encrypted value).&lt;/p&gt;
&lt;p&gt;Which functions &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; are supported depends on the cryptographic schemes and depending on the supported operations. If only one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; is supported (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f = +&lt;/code&gt;), we call an encryption scheme “partially homomorphic”. If &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; can be any complete set of gates out of which we can build arbitrary circuits, we call the computation “somewhat homomorphic” if the size of the circuit is limited or “fully homomorphic” if the size of the circuit is unlimited. It is often possible to turn “somehwhat” into “fully” homomorphic encryption through a technique known as bootstrapping though that is beyond the scope of the current blog post. Fully homomorphic encryption is a fairly recent discovery, with the first viable (though not practical) scheme published by &lt;a href=&quot;https://www.cs.cmu.edu/~odonnell/hits09/gentry-homomorphic-encryption.pdf&quot;&gt;Craig Gentry in 2009&lt;/a&gt;. There are several more recent (and practical) FHE schemes. More importantly, there are software packages that implement them efficiently. The two most commonly used ones are probably &lt;a href=&quot;https://github.com/microsoft/SEAL&quot;&gt;Microsoft SEAL&lt;/a&gt; and &lt;a href=&quot;https://palisade-crypto.org/&quot;&gt;PALISADE&lt;/a&gt;. In addition, I recently open sourced a &lt;a href=&quot;https://github.com/JuliaComputing/ToyFHE.jl&quot;&gt;pure julia implementation&lt;/a&gt; of these algorithms. For our purposes we will be using the CKKS encryption as implemented in the latter.&lt;/p&gt;
&lt;h2 id=&quot;ckks-high-level&quot;&gt;CKKS High Level&lt;/h2&gt;
&lt;p&gt;CKKS (named after Cheon-Kim-Kim-Song, the authors of the &lt;a href=&quot;https://eprint.iacr.org/2016/421.pdf&quot;&gt;2016 paper&lt;/a&gt; that proposed it) is a homomorphic encryption scheme that allows homomorphic evaluation of the following primitive operations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Elementwise addition of length &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; vectors of complex numbers&lt;/li&gt;
&lt;li&gt;Elementwise multiplication of length &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; complex vectors&lt;/li&gt;
&lt;li&gt;Rotation (in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;circshift&lt;/code&gt; sense) of elements in the vector&lt;/li&gt;
&lt;li&gt;Complex conjugation of vector elements&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt; here depends on the desired security and precision and is generally relatively high. For our example it will be 4096 (higher numbers are more secure, but also more expensive, scaling as roughly &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n log n&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Additionally, computations using CKKS are &lt;em&gt;noisy&lt;/em&gt;. As a result, computational results are only approximate and care must be taken to ensure that results are evaluated with sufficient precision to not affect the correctness of a result.&lt;/p&gt;
&lt;p&gt;That said, these restrictions are not all that unusual to developers of machine learning packages. Special purpose accelerators like GPUs also generally operate on vectors of numbers. Likewise, for many developers floating point numbers can sometimes feel noisy due to effects of algorithms selection, multithreading etc. (I want to emphasize that there is a crucial difference here in that floating point arithmetic is inherently deterministic, even if it sometimes doesn’t appear that way due to complexity of the implementation, while the CKKS primitives really are noisy, but perhaps this allows users to appreciate that noisyness is not as scary as it might at first appear).&lt;/p&gt;
&lt;p&gt;With that in mind, let’s see how we can perform these operations in Julia (&lt;strong&gt;note&lt;/strong&gt;: these are highly insecure parameter choices, the purpose of these operations is to illustrate usage of the library at the REPL)&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;18&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;31&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Let's play with 8 element vectors&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Choose some parameters - we'll talk about it later&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ℛ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NegacyclicRing&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ℤ₁₃₂₉₂₂₇₉₉₇₅₆₈₀₈₁₄₅₇₄₀₂₇₀₁₂₀₇₁₀₄₂₄₈₂₅₇&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x¹⁶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# We'll use CKKS&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSParams&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ℛ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# We need to pick a scaling factor for a numbers - again we'll talk about that later&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tscale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Let's start with a plain Vector of zeros&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tscale&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ℛ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Ok, we're ready to get started, but first we'll need some keys&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pub&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Alright, let's encrypt some things:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;6.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ciphertext&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# And decrypt it again&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.9999999999995506&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7335193113350057e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;1.9999999999989408&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.885780586188048e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;3.000000000000205&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6772825551165524e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;4.000000000000538&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.885780586188048e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;4.999999999998865&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.382500573679615e-17&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;6.000000000000185&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.996003610813204e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;7.000000000001043&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0024593503998215e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;8.000000000000673&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.996003610813204e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Note that we had some noise. Let's go through all the primitive operations we'll need:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;1.9999999999991012&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.467038622670011e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;3.9999999999978817&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.771561172376096e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
   &lt;span class=&quot;mf&quot;&gt;6.00000000000041&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.354565110233105e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;8.000000000001076&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.771561172376096e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
   &lt;span class=&quot;mf&quot;&gt;9.99999999999773&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.676500114735923e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;12.00000000000037&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.992007221626409e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;14.000000000002085&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.004918700799643e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;16.000000000001346&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.992007221626409e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ciphertext&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1208925819614629174706176&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1208925819614629174706176&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.9999999999991012&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.350516767363621e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;3.9999999999957616&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.773159728050814e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;9.000000000001226&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.534464540987068e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;16.000000000004306&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.220446049250313e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;24.99999999998865&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0903753311370056e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;36.00000000000222&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.884981308350689e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;49.000000000014595&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0182491378134327e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;64.00000000001077&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.884981308350689e-15&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That was easy! The eagle eyed reader may have noticed that csq looks a bit different from the previous ciphertext. In particular, it is a “length 3” ciphertext and the scale is much larger. What these are and what they do is a bit too complicated for this point in the blog post, but suffice it to say, we want to get these back down before we do further computation, or we’ll run out of “space” in the ciphertext. Luckily, there is a way to do these for each of the two aspects that grew:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# To get back down to length 2, we need to `keyswitch` (aka&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# relinerarize), which requires an evaluation key. Generating&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# this requires the private key. In a real application we would&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# have generated this up front and sent it along with the encrypted&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# data, but since we have the private key, we can just do it now.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EvalMultKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiplication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq_length2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ciphertext&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1208925819614629174706176&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Getting the scale back down is done using modswitching.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq_smaller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csq_length2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ciphertext&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.099511626783e12&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# And it still decrypts correctly (though note we've lost some precision)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csq_smaller&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.099511626783e12&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;0.9999999999802469&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.005163520332181e-11&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;3.9999999999957723&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0468514951188039e-11&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;8.999999999998249&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7588542623100616e-12&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;16.000000000023014&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0413447889166631e-11&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;24.999999999955193&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.187833723406491e-12&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;36.000000000002345&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.860733715346631e-13&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;49.00000000001647&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.442396043149794e-12&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;63.999999999988695&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0722489563648028e-10&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Additionally, modswitching (short for modulus switching) reduces the size of the ciphertext modulus, so we can’t just keep doing this indefinitely. (In the terminology from above, we’re using a SHE scheme):&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ℛ&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Remember the ring we initially created&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ℤ₁₃₂₉₂₂₇₉₉₇₅₆₈₀₈₁₄₅₇₄₀₂₇₀₁₂₀₇₁₀₄₂₄₈₂₅₇&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x¹⁶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ring&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csq_smaller&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# It shrunk!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ℤ₁₂₀₈₉₂₅₈₂₀₁₄₄₅₉₃₇₇₉₃₃₁₅₅₃&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x¹⁶&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There’s one last operation we’ll need: rotations. Like keyswitching above, this requires an evaluation key (also called a galois key):&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GaloisKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CKKS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;galois&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FixedRational&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1099511627776&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;7.000000000001042&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.68459112632516e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;8.000000000000673&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.551115123125783e-17&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;0.999999999999551&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.308655353580721e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;1.9999999999989408&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7755575615628914e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;3.000000000000205&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.009767921608429e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;4.000000000000538&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.551115123125783e-17&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;4.999999999998865&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.133860996136768e-17&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;6.000000000000185&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6653345369377348e-16&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# And let's compare to doing the same on the plaintext&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Complex&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eltype&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Complex&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indices&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;4.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;6.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;im&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Alright, we’ve covered the basic usage of the HE library. Before we get started thinking about how to perform neural network inference using these primitives, let’s look at and train the neural network we’ll be using.&lt;/p&gt;
&lt;h2 id=&quot;the-machine-learning-model&quot;&gt;The machine learning model&lt;/h2&gt;
&lt;p&gt;If you’re not familiar with machine learning, or the Flux.jl machine learning library, I’d recommend a quick detour to the &lt;a href=&quot;https://fluxml.ai/Flux.jl/stable/&quot;&gt;Flux.jl documentation&lt;/a&gt; or our free &lt;a href=&quot;https://juliaacademy.com/p/introduction-to-machine-learning&quot;&gt;Introduction to Machine Learning course&lt;/a&gt; on JuliaAcademy, since we’ll only be discussing the changes for running the model on encrypted data.&lt;/p&gt;
&lt;p&gt;Our starting point is the convolutional neural network example in the &lt;a href=&quot;https://github.com/FluxML/model-zoo/blob/master/vision/mnist/conv.jl&quot;&gt;Flux model zoo&lt;/a&gt;. We’ll keep the training loop, data preparation, etc. the same and just tweak the model slightly. The model we’ll use is:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;17&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;29&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; reshape_and_vcat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vcat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Chain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# First convolution, operating upon a 28x28 image&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Conv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reshape_and_vcat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.^&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is essentially the same model as the one used in the paper &lt;a href=&quot;https://eprint.iacr.org/2018/1041.pdf&quot;&gt;“Secure Outsourced Matrix Computation and Application to Neural Networks”&lt;/a&gt;, which uses the same cryptographic scheme for the same demo, with two differences: 1) They also encrypt the model, which we neglect here for simplicity and 2) We have bias vectors after every layer (which is what Flux will do by default), which I’m not sure was the case for the model evaluated in the paper. Perhaps because of 2), the test set accuracy of our model is slightly higher (98.6% vs 98.1%), but this may of course also just come down to hyperparameter differences.&lt;/p&gt;
&lt;p&gt;An unusual feature (for those coming from a machine learning background) are the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x.^2&lt;/code&gt; activation functions. More common choices here would be something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tanh&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relu&lt;/code&gt; or something fancier than that. However, while those functions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relu&lt;/code&gt; in particular) are cheap to evaluate on plaintext values, they would be quite expensive to evaluated encryptedly (we’d basically evaluate a polynomial approximation). Luckily &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x.^2&lt;/code&gt; works fine our our purposes.&lt;/p&gt;
&lt;p&gt;The rest of the training loop is basically the same. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;softmax&lt;/code&gt; was removed from the model in favor of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logitcrossentropy&lt;/code&gt; loss function (though of course we could have kept it and just evaluated the softmax after decryption on the client). The full code to train this model is &lt;a href=&quot;https://github.com/JuliaComputing/ToyFHE.jl/blob/master/examples/encrypted_mnist/train.jl&quot;&gt;on GitHub&lt;/a&gt; and completes in a few minutes on any recent GPU.&lt;/p&gt;
&lt;h2 id=&quot;performing-the-operations-efficiently&quot;&gt;Performing the operations efficiently&lt;/h2&gt;
&lt;p&gt;Alright, now that we know what we need to do, let’s take stock of what operations we need to be able to do:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Convolutions&lt;/li&gt;
&lt;li&gt;Elementwise Squaring&lt;/li&gt;
&lt;li&gt;Matrix Multiply&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Squaring is trivial, we already saw that above, so let’s tackle the other two in order. Throughout we’ll be assuming that we’re working with a batch size of 64 (you may note that the model parameters and batch size were strategically chosen to take good advantage of a 4096 element vector which is what we get from realistic parameter choices).&lt;/p&gt;
&lt;h3 id=&quot;convolution&quot;&gt;Convolution&lt;/h3&gt;
&lt;p&gt;Let us recall how convolution works. We take some window (in our case 7x7) of the original input array and for each element in the window multiply by an element of the convolution mask. Then we move the window over some (in our case, the stride is 3, so we move over by 3 elements) and repeat the process (with the same convolution mask). This process is illustrated in the following animation (&lt;a href=&quot;https://github.com/vdumoulin/conv_arithmetic&quot;&gt;source&lt;/a&gt;) for a 3x3 convolution with stride &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(2, 2)&lt;/code&gt; (the blue array is the input, the green array the output):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/vdumoulin/conv_arithmetic/master/gif/no_padding_strides.gif&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Additionally, we have convolutions into 4 different “channels” (all this means is that we repeat the convolution 3 more times with different convolution masks).&lt;/p&gt;
&lt;p&gt;Alright, so now that we know what we’re doing let’s figure out how to do it. We’re in luck in that the convolution is the first thing in our model. As a result, we can do some preprocessing on the client before encrypting the data (without needing the model weights) to save us some work. In particular, we’ll do the following:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Precompute each convolution window (i.e. 7x7 extraction from the original images), giving us 64 7x7 matrices per input image (note for 7x7 windows with stride 2 there are 8x8 convolution windows to evaluate per 28x28 input image)&lt;/li&gt;
&lt;li&gt;Collect the same position in each window into one vector, i.e. we’ll have a 64-element vector for each image or a 64x64 element vector for a batch of 64 (i.e. a total of 49 64x64 matrices)&lt;/li&gt;
&lt;li&gt;Encrypt that&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The convolution then simply becomes scalar multiplication of the whole matrix with the appropriate mask element, and by summing all 49 elements later, we the result of the convolution. An implementation of this strategy (on the plaintext) may look like:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;17.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;30&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; public_preprocess&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Create feature extracted matrix&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ka&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ka&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Reshape into the ciphertext&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ka&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ka&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public_preprocess&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Evaluate the convolution&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conved&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which (modulo a reordering of the dimension) gives the same answer as, but using operations&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Adding the encryption operations, we have:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;14.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public_preprocess&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C_Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iij&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tscale&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintext_space&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ckks_params&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iij&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N÷2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C_Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conved3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conved2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note that a keyswitch isn’t required because the weights are public, so we didn’t expand the length of the ciphertext.&lt;/p&gt;
&lt;h3 id=&quot;matrix-multiply&quot;&gt;Matrix multiply&lt;/h3&gt;
&lt;p&gt;Moving on to matrix multiply, we take advantage of the fact that we can rotate elements in the vector to effect a re-ordering of the multiplication indices. In particular, consider a row-major ordering of matrix elements in the vector. Then, if we shift the vector by a multiple of the row-size, we get the effect of rotating the columns, which is a sufficient primitive for implementing matrix multiply (of square matrices at least). Let’s try it:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;15&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;25&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; matmul_square_reordered&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# We rotate the columns of the LHS and take the diagonal&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;weight_diag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))))&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# We rotate the rows of the RHS&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x_rotated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# We do an elementwise, broadcast multiply&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;weight_diag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_rotated&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; matmul_reorderd&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;matmul_square_reordered&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fc1_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;≈&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matmul_reorderd&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Of course for general matrix multiply, we may want something fancier, but it’ll do for now.&lt;/p&gt;
&lt;h2 id=&quot;making-it-nicer&quot;&gt;Making it nicer&lt;/h2&gt;
&lt;p&gt;At this point, we’ve managed to get everything together and indeed it works. For reference, here it is in all its glory (omitting setup for parameter selection and the like):&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;33.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;62&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EvalMultKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GaloisKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public_preprocess&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;C_Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iij&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CKKSEncoding&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tscale&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintext_space&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ckks_params&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iij&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N÷2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C_Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conved3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conved1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conved2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conved1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; encrypted_matmul&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CipherText&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fq1_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypted_matmul&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fq1_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Csqed1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4095&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cfq1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modswitch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; naive_rectangular_matmul&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vcat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eltype&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypted_matmul&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fq2_weights&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Cresult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;naive_rectangular_matmul&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fq2_weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Csqed2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Cresult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cresult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vcat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4095&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Not very pretty to look at, but hopefully if you have made it this far in the blog post, you should be able to understand each step in the sequence.&lt;/p&gt;
&lt;p&gt;Now, let’s turn our attention to thinking about some abstractions that would make all this easier. We’re now leaving the realm of cryptography and machine learning and arriving at programming language design, so let’s take advantage of fact that Julia allows powerful abstractions and go through the exercise of building some. For example, we could encapsulate the whole convolution extraction process as a custom array type:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;41&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;77&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockArrays&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    ExplodedConvArray{T, Dims, Storage} &amp;lt;: AbstractArray{T, 4}

Represents a an `nxmx1xb` array of images, but rearranged into a
series of convolution windows. Evaluating a convolution compatible
with `Dims` on this array is achievable through a sequence of
scalar multiplications and sums on the underling storage.
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt; ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AbstractArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# sx*sy matrix of b*(dx*dy) matrices of extracted elements&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# where (sx, sy) = kernel_size(Dims)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#       (dx, dy) = output_size(DenseConvDims(...))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;])),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AbstractArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ky&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kernel_size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stridex&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stridey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OffsetArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stridex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stridey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ky&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kax&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j′&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kay&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kax&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kay&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ky&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eltype&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iᵢⱼ&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AbstractArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Dims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConvDims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;blocks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReshapedArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weights&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NNlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;],(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BlockArrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_BlockArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blocks&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BlockArrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlockSizes&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note that here we made use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlockArrays&lt;/code&gt; back to represent a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8x8x4x64&lt;/code&gt; array as 4 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8x8x1x64&lt;/code&gt; arrays as in the original code. Ok, so now we already have a much nicer representation of the first step, at least on unencrypted arrays:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;19&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DenseConvDims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dilation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DenseConvDims&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eltype&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;julia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;×64&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float32&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;How do we bring this into the encrypted world? Well, we need to do two things:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We want to encrypt a struct (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExplodedConvArray&lt;/code&gt;) in such a way that each that we get a ciphertext for each field. Then, operations on this encrypted struct work by looking up what the function would have done on the original struct and simply doing the same homomorphically.&lt;/li&gt;
&lt;li&gt;We want to intercept certain operations to be done differently in the encrypted context.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Luckily, Julia, provides an abstraction that lets us a do both: A compiler plugin-in using the &lt;a href=&quot;https://github.com/jrevels/Cassette.jl&quot;&gt;Cassette.jl&lt;/a&gt; mechanism. How this works and how to use it is a bit of a complicated story, so I will omit it from this blog, post, but briefly, you can define a Context (say &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Encrypted&lt;/code&gt; and then define rules for how operations under this context work). For example, for the second requirement might be written, as:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;16.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;28&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Define Matrix multiplication between an array and an encrypted block array&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(*::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encrypted&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)})(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encrypted&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BlockArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blocks&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Define Matrix multiplication between an array and an encrypted array&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(*::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encrypted&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)})(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encrypted&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ToyFHE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GaloisKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;diag&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;circshift&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The end result of all of this that the user should be able to write the whole thing above with minimal manual work:&lt;/p&gt;
&lt;div class=&quot;language-julia highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ckks_params&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EvalMultKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keygen&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GaloisKey&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;priv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create evaluation context&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Encrypted&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ek&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gk&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Do public preprocessing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExplodedConvArray&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eltype&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cdims&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Run on encrypted data under the encryption context&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Cresult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Decrypt the answer&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kp&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cresult&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Of course, even that may not be optimal. The parameters of the cryptosystem (e.g. the ring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ℛ&lt;/code&gt;, when to modswitch, keyswitch, etc) represent a tradeoff between precision of the answer, security and performance and depend strongly on the code being run. In general, one would want the compiler to analyze the code it’s about to run encrypted, suggest parameters for a given security level and desired precision and then generate the code with minimal manual work by the user.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Achieving the dream of automatically executing arbitrary computations securely is a tall order for any system, but Julia’s metaprogramming capabilities and friendly syntax make it well suited as a development platform. Some attempts at this have already been made by the RAMPARTS collaboration (&lt;a href=&quot;https://eprint.iacr.org/2019/988.pdf&quot;&gt;paper&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=_KLlMg6jKQg&quot;&gt;JuliaCon talk&lt;/a&gt;), which compiles simple Julia code to the PALISADE FHE library. Julia Computing is collaborating with the experts behind RAMPARTS on Verona, the &lt;a href=&quot;https://galois.com/news/15m-iarpa-hector-contract-privacy-preserving-technology/&quot;&gt;recently announced&lt;/a&gt; next generation version of that system. Only in the past year or so has the performance of homomorphic encryption systems reached the point where it is possible to actually evaluate interesting computations at speed approaching practical usability. The floodgates are open. With new advances in algorithms, software and hardware, homomorphic encryption is sure to become a mainstream technology to protect the privacy of millions of users.&lt;/p&gt;
&lt;p&gt;If you would like to understand more deeply how everything works, I have tried to make sure that the &lt;a href=&quot;https://github.com/JuliaComputing/ToyFHE.jl&quot;&gt;ToyFHE repository&lt;/a&gt; is readable. There is also &lt;a href=&quot;https://juliacomputing.github.io/ToyFHE.jl/dev/man/background/&quot;&gt;some documentation&lt;/a&gt; that I’m hoping gives a somewhat approachable introduction to the cryptography involved. Of course much work remains to be done. If you are interested in this kind of work or have interesting applications, do not hesitate to get in touch.&lt;/p&gt;
</description>
<pubDate>Tue, 26 Nov 2019 14:45:39 +0000</pubDate>
<dc:creator>KenoFischer</dc:creator>
<og:url>https://juliacomputing.com/blog/2019/11/22/encrypted-machine-learning.html</og:url>
<og:title>Machine Learning on Encrypted data without Decrypting it</og:title>
<og:type>article</og:type>
<og:description>Let's figure out what digit is shown in an encrypted image without ever decrypting it.</og:description>
<og:image>https://juliacomputing.com/assets/img/fhe-screenshot.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://juliacomputing.com/blog/2019/11/22/encrypted-machine-learning.html?hn</dc:identifier>
</item>
<item>
<title>Psilocybin for major depression granted Breakthrough Therapy by FDA</title>
<link>https://newatlas.com/science/psilocybin-major-depression-mdd-usona-breakthrough-therapy-fda/</link>
<guid isPermaLink="true" >https://newatlas.com/science/psilocybin-major-depression-mdd-usona-breakthrough-therapy-fda/</guid>
<description>&lt;p&gt;The US Food and Drug Administration (FDA) has granted psilocybin therapy a Breakthrough Therapy designation for the second time in a year, this time with a view on accelerating trials testing its efficacy treating major depressive disorder (MDD).&lt;/p&gt;
&lt;p&gt;Back in late 2018, &lt;a class=&quot;Link&quot; href=&quot;https://newatlas.com/psilocybin-magic-mushrooms-depression-fda-breakthrough-therapy/56928/&quot; data-cms-ai=&quot;0&quot;&gt;the FDA granted Breakthrough Therapy status&lt;/a&gt; to the ongoing work from COMPASS Pathways investigating psilocybin, the key &lt;a class=&quot;Link&quot; href=&quot;https://newatlas.com/psychedelic-medicine-psilocybin-magic-mushrooms-medical-research/54808/&quot; data-cms-ai=&quot;0&quot;&gt;psychoactive compound in magic mushrooms&lt;/a&gt;, as a therapy for treatment-resistant depression. &lt;a class=&quot;Link&quot; href=&quot;https://clinicaltrials.gov/ct2/show/NCT03775200&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;A large, multi-center Phase 2 trial&lt;/a&gt; spanning the US, UK and Europe is currently underway testing a variety of dosing strategies.&lt;/p&gt;
&lt;p&gt;This new FDA Breakthrough Therapy approval focuses on a seven-site, &lt;a class=&quot;Link&quot; href=&quot;https://clinicaltrials.gov/ct2/show/NCT03866174&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;Phase 2 trial currently underway&lt;/a&gt; in the United States. Coordinated by a non-profit research organization called the &lt;a class=&quot;Link&quot; href=&quot;https://www.usonainstitute.org/&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;Usona Institute&lt;/a&gt;, the trial is exploring the antidepressant properties of a single psilocybin dose in treating patients with major depressive disorder.&lt;/p&gt;
&lt;p&gt;Last year’s Breakthrough Therapy designation was targeted at the drug’s efficacy for treatment-resistant depression (TRD). That particular clinical classification categorizes patients suffering from MDD who have not responded effectively to at least two different pharmacological antidepressant treatments during a current depressive episode. &lt;a class=&quot;Link&quot; href=&quot;https://bmcpsychiatry.biomedcentral.com/articles/10.1186/s12888-019-2222-4&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;It is estimated&lt;/a&gt; between 10 and 30 percent of MDD patients fall into the category of TRD.&lt;/p&gt;
&lt;p&gt;The new FDA approval focuses on Usona’s research into the broader condition of MDD, characterized by episodes of severe depression that last more than two weeks. Hundreds of millions of people around the world suffer from these kinds of acute major depressive episodes every year.&lt;/p&gt;
&lt;p&gt;“The results from previous studies clearly demonstrate the remarkable potential for psilocybin as a treatment in MDD patients, which Usona is now seeking to confirm in its own clinical trials,” says Usona’s director of clinical and translational research, Charles Raison. “What is truly groundbreaking is FDA’s rightful acknowledgement that MDD, not just the much smaller treatment-resistant depression population, represents an unmet medical need and that the available data suggest that psilocybin may offer a substantial clinical improvement over existing therapies.”&lt;/p&gt;
&lt;p&gt;The FDA’s &lt;a class=&quot;Link&quot; href=&quot;https://www.fda.gov/regulatory-information/food-and-drug-administration-safety-and-innovation-act-fdasia/frequently-asked-questions-breakthrough-therapies&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;Breakthrough Therapy&lt;/a&gt; designation was introduced in 2012 as a way of presenting a faster pathway to approval for drugs that display treatment advantages over current options for serious or life-threatening conditions. As well as offering developmental assistance to whatever organization is sponsoring the research, the designation is considered a positive endorsement towards the veracity and social impact of a prospective treatment. To date, roughly one in three treatments granted a Breakthrough Therapy designation have ultimately moved to market approval.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;Link&quot; href=&quot;https://usonaclinicaltrials.org/major-depressive-disorder-psilocybin-clinical-trial-psil201&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;Usona Phase 2 trial&lt;/a&gt; plans to enrol 80 subjects, randomized to receive either a single active dose of psilocybin or an active placebo containing niacin. The methodology being trialed is similar to other psilocybin therapy studies, with a number of preparatory psychotherapy sessions preceding the active psychedelic dose, and a number of integrative psychotherapy sessions afterwards.&lt;/p&gt;
&lt;p&gt;As the trial is investigating the effects of a single psilocybin dose the research will offer some fascinating insights into the potential broad applications of the psychedelic agent in treating general depressive episodes, as opposed to other work exploring efficacy in more severe cases with multiple doses.&lt;/p&gt;
&lt;p&gt;Usona estimates the current Phase 2 trial should be completed by early 2021, and with the help of this Breakthrough Therapy designation from the FDA, it should be able to swiftly move into larger Phase 3 trials if the results are positive.&lt;/p&gt;
&lt;p&gt;The previously discussed COMPASS trials looking at psilocybin for treatment-resistant depression should be completed sometime in 2020, suggesting the next 12 to 24 months will offer some compelling and solid data into how effective this new psychedelic therapy actually is in treating several different forms of depression.&lt;/p&gt;
&lt;p&gt;“Given that there is so much complexity with psilocybin and that Usona is charting new ground, these interactions will ensure that Usona and the FDA are aligned in approaching the development program with acceptable best practices,” says Raison.&lt;/p&gt;
&lt;p&gt;Source: &lt;a class=&quot;Link&quot; href=&quot;https://www.businesswire.com/news/home/20191122005452/en/FDA-grants-Breakthrough-Therapy-Designation-Usona-Institutes&quot; target=&quot;_blank&quot; data-cms-ai=&quot;0&quot;&gt;Usona Institute&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 26 Nov 2019 14:01:18 +0000</pubDate>
<dc:creator>elorant</dc:creator>
<og:title>Psilocybin for major depression granted Breakthrough Therapy by FDA</og:title>
<og:url>https://newatlas.com/science/psilocybin-major-depression-mdd-usona-breakthrough-therapy-fda/</og:url>
<og:image>https://assets.newatlas.com/dims4/default/21a3376/2147483647/strip/true/crop/2000x1050+0+657/resize/1200x630!/quality/90/?url=https%3A%2F%2Fassets.newatlas.com%2Fec%2Fee%2F87d0ee5c468aad9f5be25f9018f4%2Fdepositphotos-168971314-l-2015.jpg</og:image>
<og:description>The US Food and Drug Administration (FDA) has granted psilocybin therapy a Breakthrough Therapy designation for the second time in a year, this time with a view on accelerating trials testing its efficacy treating major depressive disorder (MDD).</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://newatlas.com/science/psilocybin-major-depression-mdd-usona-breakthrough-therapy-fda/</dc:identifier>
</item>
<item>
<title>HPE Drive fail at 32,768 hours without firmware update</title>
<link>https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-a00092491en_us</link>
<guid isPermaLink="true" >https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-a00092491en_us</guid>
<description>

&lt;div class=&quot;short.title&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;SUPPORT COMMUNICATION - CUSTOMER BULLETIN&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;object_name&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Document ID:&lt;/strong&gt; a00092491en_us&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;doc_content_version&quot;&gt;
&lt;p&gt;&lt;strong&gt;Version:&lt;/strong&gt; 1&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;title&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;Bulletin: HPE SAS Solid State Drives - Critical Firmware Upgrade Required for Certain HPE SAS Solid State Drive Models to Prevent Drive Failure at 32,768 Hours of Operation&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;disclosure.notice&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTICE:&lt;/strong&gt; The information in this document, including products and software versions, is current as of the Release Date. This document is subject to change without notice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content_version_date&quot;&gt;
&lt;p&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; 2019-11-19&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content_update_date&quot;&gt;
&lt;p&gt;&lt;strong&gt;Last Updated:&lt;/strong&gt; 2019-11-22&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;div class=&quot;content.description&quot; readability=&quot;59.277674706246&quot;&gt;
&lt;h2&gt;DESCRIPTION&lt;/h2&gt;
&lt;div class=&quot;para&quot;&gt;
&lt;table width=&quot;550&quot; cellspacing=&quot;1&quot; cellpadding=&quot;4&quot; border=&quot;0&quot;&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: This HPD8 firmware is considered a critical fix and is required to address the issue detailed below. HPE strongly recommends immediate application of this critical fix. Neglecting to update to SSD Firmware Version HPD8 will result in drive failure and data loss at 32,768 hours of operation and require restoration of data from backup in non-fault tolerance, such as RAID 0 and in fault tolerance RAID mode if more drives fail than what is supported by the fault tolerance RAID mode logical drive. By disregarding this notification and not performing the recommended resolution, the customer accepts the risk of incurring future related errors.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;HPE was notified by a Solid State Drive (SSD) manufacturer of a firmware defect affecting certain SAS SSD models (reference the table below) used in a number of HPE server and storage products (i.e., HPE ProLiant, Synergy, Apollo, JBOD D3xxx, D6xxx, D8xxx, MSA, StoreVirtual 4335 and StoreVirtual 3200 are affected).&lt;/p&gt;
&lt;p&gt;The issue affects SSDs with an HPE firmware version prior to HPD8 that results in SSD failure at 32,768 hours of operation (i.e., 3 years, 270 days 8 hours). After the SSD failure occurs, neither the SSD nor the data can be recovered. In addition, SSDs which were put into service at the same time will likely fail nearly simultaneously.&lt;/p&gt;
&lt;p&gt;To determine total Power-on Hours via Smart Storage Administrator, refer to the link below:&lt;/p&gt;
&lt;p&gt;&lt;a xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; href=&quot;https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-a00092478en_us&quot;&gt;Smart Storage Administrator (SSA) - Quick Guide to Determine SSD Uptime&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more details, please refer to the drive firmware Release Notes for the version with this fix listed in the Resolution section.&lt;/p&gt;


&lt;/div&gt;
&lt;div class=&quot;scope&quot; readability=&quot;15&quot;&gt;
&lt;h2&gt;SCOPE&lt;/h2&gt;
&lt;p&gt;Any of the following HPE SAS SSD models running a drive firmware version prior to HPD8:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: For SSDs with a firmware fix the week of December 9, 2019, note that due to the nature of the SSD failure not occurring until attaining 32,768 hours of operation, these drives are NOT susceptible to failure during this extended period of time.&lt;/p&gt;
&lt;div class=&quot;para&quot;&gt;
&lt;table width=&quot;550&quot; cellspacing=&quot;1&quot; cellpadding=&quot;4&quot; border=&quot;0&quot;&gt;&lt;tbody readability=&quot;20&quot;&gt;&lt;tr&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;HPE Model Number&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;HPE SKU&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;HPE SKU DESCRIPTION&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;HPE Spare Part SKU&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;HPE Firmware Fix Date&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO0480JFDGT&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;816562-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 480GB 12Gb SAS 2.5 RI PLP SC SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;817047-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO0960JFDGU&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;816568-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 960GB 12Gb SAS 2.5 RI PLP SC SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;817049-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO1920JFDGV&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;816572-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 1.92TB 12Gb SAS 2.5 RI PLP SC SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;817051-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO3840JFDHA&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;816576-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 3.84TB 12Gb SAS 2.5 RI PLP SC SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;817053-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;MO0400JFFCF&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822555-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 400GB 12Gb SAS 2.5 MU PLP SC SSD S2&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822784-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;MO0800JFFCH&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822559-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 800GB 12Gb SAS 2.5 MU PLP SC SSD S2&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822786-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;MO1600JFFCK&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822563-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 1.6TB 12Gb SAS 2.5 MU PLP SC SSD S2&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822788-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;MO3200JFFCL&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822567-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HP 3.2TB 12Gb SAS 2.5 MU PLP SC SSD S2&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;822790-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;11/22/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO000480JWDAR&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875311-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 480GB SAS SFF RI SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875681-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO000960JWDAT&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875313-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 960GB SAS SFF RI SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875682-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO001920JWDAU&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875326-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE1.92TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875684-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO003840JWDAV&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875330-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 3.84TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;875686-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO007680JWCNK&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;870144-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 7.68TB SAS 12G RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;870460-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO015300JWCNL&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;870148-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 15.3TB SAS 12G RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;870462-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VK000960JWSSQ&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P06584-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 960GB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P08608-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VK001920JWSSR&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P06586-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 1.92TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P08609-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VK003840JWSST&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P06588-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 3.84TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P08610-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VK003840JWSST&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P11329-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 3.84TB SAS RI LFF SCC DS SPL SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P11360-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VK007680JWSSU&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P06590-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 7.68TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P08611-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;VO015300JWSSV&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P06592-B21&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;HPE 15.3TB SAS RI SFF SC DS SSD&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;P08612-001&lt;/p&gt;
&lt;/td&gt;
&lt;td rowspan=&quot;1&quot; colspan=&quot;1&quot;&gt;
&lt;p&gt;Week of 12/9/2019&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;resolution&quot; readability=&quot;53.650993698497&quot;&gt;
&lt;h2&gt;RESOLUTION&lt;/h2&gt;
&lt;p&gt;Immediately upgrade the drive firmware to version HPD8, which HPE has released to prevent the issue described above.&lt;/p&gt;
&lt;p&gt;Note: A server reboot is not required if SSDs are attached to a Smart Array Controller.&lt;/p&gt;
&lt;p&gt;Obtain HPD8 from one of the following links depending on Operating System and HPE SAS SSD model installed:&lt;/p&gt;
&lt;p&gt;HPD8 firmware for VO0480JFDGT, VO0960JFDGU, VO1920JFDGV and VO3840JFDHA drives:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_27ab6329130849cb924fa3ef01&quot;&gt;Online Flash Component for VMware ESXi - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_d191cd4d099c491da5e6783be2&quot;&gt;Online Flash Component for Windows - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_5ac2fc05fd6b44058a7c11e67c&quot;&gt;Online Flash Component for Linux - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HPD8 firmware for MO0400JFFCF, MO0800JFFCH, MO1600JFFCK and MO3200JFFCL drives:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_6089c15599b647aca0c049ce24&quot;&gt;Online Flash Component for VMware - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX-c3ef73c05b084156ac0d872892&quot;&gt;Online Flash Component for Windows - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_9dbe533b1868403192610aaaf5&quot;&gt;Online Flash Component for Linux - HPD8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Release Notes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Issue Fixed&lt;/p&gt;
&lt;div class=&quot;para&quot;&gt;
&lt;ul class=&quot;list&quot;&gt;&lt;li&gt;The issue affects SSDs with an HPE firmware version prior to HPD8 that results in SSD failure at 32,768 hours of operation (i.e., 3 years, 270 days 8 hours), neither the SSD nor the data can be recovered, after the SSD failure occurs.&lt;/li&gt;
&lt;li&gt;In addition, SSDs which were put into service at the same time will likely fail nearly simultaneously.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;For more information on the installation instructions, refer to the following link:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://support.hpe.com/hpsc/swd/public/detail?swItemId=MTX_6089c15599b647aca0c049ce24#tab2&quot;&gt;HPD8 Installation Instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If SSA is not available to determine total Power-on Hours, call Support and reference the advisory a00092485. Click on the following URL to locate the HPE Customer Support phone number in your country:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://h20195.www2.hpe.com/v2/Getdocument.aspx?docname=A00039121ENW&quot;&gt;Technical Support Phone Numbers&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;RECEIVE PROACTIVE UPDATES&lt;/em&gt;&lt;/strong&gt; : Receive support alerts (such as Customer Advisories), as well as updates on drivers, software, firmware, and customer replaceable components, proactively via e-mail through HPE Subscriber's Choice. Sign up for Subscriber's Choice at the following URL: &lt;a href=&quot;https://h41360.www4.hpe.com/alerts-signup.php&quot;&gt;Proactive Updates Subscription Form.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NAVIGATION TIP&lt;/em&gt;&lt;/strong&gt; : For hints on navigating HPE.com to locate the latest drivers, patches, and other support software downloads for HPE systems and Options, refer to the &lt;a href=&quot;https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-c01364745&quot;&gt;Navigation Tips document&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;SEARCH TIP&lt;/em&gt;&lt;/strong&gt; : For hints on locating similar documents on HPE.com, refer to the &lt;a href=&quot;https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-c00638154&quot;&gt;Search Tips Document&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;div class=&quot;product_group_names&quot; readability=&quot;56&quot;&gt;
&lt;p&gt;&lt;strong&gt;Hardware Platforms Affected:&lt;/strong&gt; HPE Synergy 480 Gen9 Compute Module, HPE Synergy 660 Gen9 Compute Module, HPE 400GB 12G SAS Mixed Use-3 SFF 2.5-in SC 3yr Wty MO0400JFFCF Solid State Drive, HPE 800GB 12G SAS Mixed Use-3 SFF 2.5-in SC 3yr Wty MO0800JFFCH Solid State Drive, HPE 1.6TB 12G SAS Mixed Use-3 SFF 2.5-in SC 3yr Wty MO1600JFFCK Solid State Drive, HPE 3.2TB 12G SAS Mixed Use-3 SFF 2.5-in SC 3yr Wty MO3200JFFCL Solid State Drive, HPE 480GB 12G SAS Read Intensive-3 SFF 2.5-in SC 3yr Wty VO0480JFDGT Solid State Drive, HPE 960GB 12G SAS Read Intensive-3 SFF 2.5-in SC 3yr Wty VO0960JFDGU Solid State Drive, HPE 3.84TB 12G SAS Read Intensive-3 SFF 2.5-in SC 3yr Wty VO3840JFDHA Solid State Drive, HPE Synergy 620 Gen9 Compute Module, HPE Synergy 680 Gen9 Compute Module, HPE ProLiant XL270d Gen9 Server, HPE D6020 Disk Enclosure, HPE StoreVirtual 3000 Storage, HPE D8000 Disk Enclosures, HPE ProLiant SL230s Gen8 Server, HPE ProLiant BL460c Gen8 Server Blade, HPE ProLiant BL465c Gen8 Server Blade, HPE ProLiant DL160 Gen8 Server, HPE ProLiant BL420c Gen8 Server Blade, HPE ProLiant DL320e Gen8 Server, HPE ProLiant WS460c Gen8 Graphics Server Blade, HPE ProLiant BL660c Gen8 Server Blade, HPE ProLiant DL560 Gen8 Server, HPE D6000 Disk Enclosure, HPE StoreEasy 1000 Storage, HPE D2220sb Storage Blade, HPE ProLiant SL210t Gen8 Server, HPE StoreVirtual 4335 Hybrid Storage, HPE ProLiant DL580 Gen8 Server, HPE D3000 Disk Enclosures, HPE ProLiant DL160 Gen9 Server, HPE ProLiant DL180 Gen9 Server, HPE ProLiant DL360 Gen9 Server, HPE ProLiant BL460c Gen9 Server Blade, HPE ProLiant DL380 Gen9 Server, HPE ProLiant ML350 Gen9 Server, HPE ProLiant XL230a Gen9 Server, HPE ProLiant DL388 Gen9 Server, HPE ProLiant DL120 Gen9 Server, HPE ProLiant WS460c Gen9 Graphics Server Blade, HPE ProLiant DL580 Gen9 Server, HPE ProLiant BL660c Gen9 Server Blade, HPE ProLiant DL560 Gen9 Server, HPE Apollo 4200 Gen9 Server, HPE Apollo 4500 System, HPE ProLiant XL450 Gen9 Server&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;operating_system_group_names&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Operating Systems Affected:&lt;/strong&gt; Not Applicable&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;software_group_names&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Software Affected:&lt;/strong&gt; Not Applicable&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ia_identifier&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Support Communication Cross Reference ID:&lt;/strong&gt; SIK5130&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;copyright.notice&quot; readability=&quot;16&quot;&gt;
&lt;p&gt;©Copyright 2019 Hewlett Packard Enterprise Development LP&lt;/p&gt;
&lt;p&gt;Hewlett Packard Enterprise Development shall not be liable for technical or editorial errors or omissions contained herein. The information provided is provided &quot;as is&quot; without warranty of any kind. To the extent permitted by law, neither HPE nor its affiliates, subcontractors or suppliers will be liable for incidental, special or consequential damages including downtime cost; lost profits; damages relating to the procurement of substitute products or services; or damages for loss of data, or software restoration. The information in this document is subject to change without notice. Hewlett Packard Enterprise Development and the names of Hewlett Packard Enterprise Development products referenced herein are trademarks of Hewlett Packard Enterprise Development in the United States and other countries. Other product and company names mentioned herein may be trademarks of their respective owners.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 26 Nov 2019 12:00:01 +0000</pubDate>
<dc:creator>abarringer</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://support.hpe.com/hpsc/doc/public/display?docId=emr_na-a00092491en_us</dc:identifier>
</item>
</channel>
</rss>