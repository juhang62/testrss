<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>io_uring and eBPF Will Revolutionize Programming in Linux</title>
<link>https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/</link>
<guid isPermaLink="true" >https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/</guid>
<description>&lt;p&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-22896&quot; src=&quot;https://www.scylladb.com/wp-content/uploads/800x400-blog-How-io_uring-and-eBPF-Will.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;400&quot; srcset=&quot;https://www.scylladb.com/wp-content/uploads/800x400-blog-How-io_uring-and-eBPF-Will.png 800w, https://www.scylladb.com/wp-content/uploads/800x400-blog-How-io_uring-and-eBPF-Will-300x150.png 300w, https://www.scylladb.com/wp-content/uploads/800x400-blog-How-io_uring-and-eBPF-Will-768x384.png 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Things will never be the same again after the dust settles. And yes, I’m talking about Linux.&lt;/p&gt;
&lt;p&gt;As I write this, most of the world is in lockdown due to COVID-19. It’s hard to say how things will look when this is over (it will be over, right?), but one thing is for sure: the world is no longer the same. It’s a weird feeling: it’s as if we ended 2019 in one planet and started 2020 in another.&lt;/p&gt;
&lt;p&gt;While we all worry about jobs, the economy and our healthcare systems, one other thing that has changed dramatically may have escaped your attention: the Linux kernel.&lt;/p&gt;
&lt;p&gt;That’s because every now and then something shows up that replaces evolution with revolution. The black swan. Joyful things like the introduction of the automobile, which forever changed the landscape of cities around the world. Sometimes it’s less joyful things, like 9/11 or our current nemesis, COVID-19.&lt;/p&gt;
&lt;p&gt;I’ll put what happened to Linux in the joyful bucket. But it’s a sure revolution, one that most people haven’t noticed yet. That’s because of two new, exciting interfaces: eBPF (or BPF for short) and io_uring, the latter added to Linux in 2019 and still in very active development. Those interfaces may look evolutionary, but they are revolutionary in the sense that they will — we bet — completely change the way applications work with and think about the Linux Kernel.&lt;/p&gt;
&lt;p&gt;In this article, we will explore what makes these interfaces special and so powerfully transformational, and dig deeper into our experience at ScyllaDB with io_uring.&lt;/p&gt;
&lt;h2&gt;How Did Linux I/O System Calls Evolve?&lt;/h2&gt;
&lt;p&gt;In the old days of the Linux you grew to know and love, the kernel offered the following system calls to deal with file descriptors, be they storage files or sockets:&lt;/p&gt;

&lt;p&gt;Those system calls are what we call blocking system calls. When your code calls them it will sleep and be taken out of the processor until the operation is completed. Maybe the data is in a file that resides in the Linux page cache, in which case it will actually return immediately, or maybe it needs to be fetched over the network in a TCP connection or read from an HDD.&lt;/p&gt;
&lt;p&gt;Every modern programmer knows what is wrong with this: As devices continue to get faster and programs more complex, blocking becomes undesirable for all but the simplest things. New system calls, like &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; and their more modern counterpart, &lt;code&gt;epoll()&lt;/code&gt; came into play: once called, they will return a list of file descriptors that are ready. In other words, reading from or writing to them wouldn’t block. The application can now be sure that blocking will not occur.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-22876&quot; src=&quot;https://www.scylladb.com/wp-content/uploads/epoll.png&quot; alt=&quot;&quot; width=&quot;512&quot; height=&quot;417&quot; srcset=&quot;https://www.scylladb.com/wp-content/uploads/epoll.png 512w, https://www.scylladb.com/wp-content/uploads/epoll-300x244.png 300w&quot; sizes=&quot;(max-width: 512px) 100vw, 512px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It’s beyond our scope to explain why, but this readiness mechanism really works only for network sockets and pipes — to the point that &lt;code&gt;epoll()&lt;/code&gt; doesn’t even accept storage files. For storage I/O, classically the blocking problem has been solved with &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_pool&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;em&gt;thread pools&lt;/em&gt;&lt;/a&gt;: the main thread of execution dispatches the actual I/O to helper threads that will block and carry the operation on the main thread’s behalf.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter wp-image-22878&quot; src=&quot;https://www.scylladb.com/wp-content/uploads/thread-pools.png&quot; alt=&quot;&quot; width=&quot;512&quot; height=&quot;553&quot; srcset=&quot;https://www.scylladb.com/wp-content/uploads/thread-pools.png 833w, https://www.scylladb.com/wp-content/uploads/thread-pools-278x300.png 278w, https://www.scylladb.com/wp-content/uploads/thread-pools-768x829.png 768w&quot; sizes=&quot;(max-width: 512px) 100vw, 512px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As time passed, Linux grew even more flexible and powerful: it turns out database software &lt;a href=&quot;https://www.scylladb.com/2018/07/26/how-scylla-data-cache-works/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;may not want to use the Linux page cache&lt;/a&gt;. It then became possible to open a file and specify that we want direct access to the device. Direct access, commonly referred to as Direct I/O, or the &lt;code&gt;O_DIRECT&lt;/code&gt; flag, required the application to manage its own caches — which databases may want to do anyway, but also allow for zero-copy I/O as the application buffers can be sent to and populate from the storage device directly.&lt;/p&gt;
&lt;p&gt;As storage devices got faster, context switches to helper threads became even less desirable. Some devices in the market today, like the &lt;a href=&quot;https://pcper.com/2018/12/intels-optane-dc-persistent-memory-dimms-push-latency-closer-to-dram/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Intel Optane&lt;/a&gt; series have latencies in the single-digit microsecond range — the same order of magnitude of a context switch. Think of it this way: every context switch is a missed opportunity to dispatch I/O.&lt;/p&gt;
&lt;p&gt;With Linux 2.6, the kernel gained an &lt;em&gt;Asynchronous I/O&lt;/em&gt; (&lt;em&gt;linux-aio&lt;/em&gt; for short) interface. Asynchronous I/O in Linux is simple at the surface: you can submit I/O with the io_submit system call, and at a later time you can call io_getevents and receive back events that are ready. Recently, &lt;a href=&quot;https://lwn.net/Articles/742978/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Linux even gained the ability&lt;/a&gt; to add &lt;code&gt;epoll()&lt;/code&gt; to the mix: now you could not only submit storage I/O work, but also submit your intention to know whether a socket (or pipe) is readable or writable.&lt;/p&gt;
&lt;p&gt;Linux-aio was a potential game-changer. It allows programmers to make their code fully asynchronous. But due to the way it evolved, it fell short of these expectations. To try and understand why, let’s hear from Mr. Torvalds himself in his usual upbeat mood, in response to someone trying to extend the interface &lt;a href=&quot;https://lwn.net/Articles/671657/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;to support opening files asynchronously&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;&lt;p&gt;&lt;em&gt;So I think this is ridiculously ugly.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;AIO is a horrible ad-hoc design, with the main excuse being “other, less gifted people, made that design, and we are implementing it for compatibility because database people — who seldom have any shred of taste — actually use it”.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;— Linus Torvalds (on lwn.net)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, as database people ourselves, we’d like to take this opportunity to apologize to Linus for our lack of taste. But also expand on why he is right. Linux AIO is indeed rigged with problems and limitations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Linux-aio only works for &lt;code&gt;O_DIRECT&lt;/code&gt; files, rendering it virtually useless for normal, non-database applications.&lt;/li&gt;
&lt;li&gt;The interface is not designed to be extensible. Although it is possible — we did extend it — every new addition is complex.&lt;/li&gt;
&lt;li&gt;Although the interface is technically non-blocking, &lt;a href=&quot;https://lwn.net/Articles/724198/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;there are many reasons that can lead it to blocking&lt;/a&gt;, often in ways that are impossible to predict.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We can clearly see the evolutionary aspect of this: interfaces grew organically, with new interfaces being added to operate in conjunction with the new ones. The problem of blocking sockets was dealt with with an interface to test for readiness. Storage I/O gained an asynchronous interface tailored-fit to work with the kind of applications that really needed it at the moment and nothing else. That was the nature of things. Until… &lt;code&gt;io_uring&lt;/code&gt; came along.&lt;/p&gt;
&lt;h2&gt;What Is io_uring?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&lt;a href=&quot;https://github.com/axboe/liburing&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;io_uring&lt;/a&gt;&lt;/code&gt; is the brainchild of Jens Axboe, a seasoned kernel developer who has been involved in the Linux I/O stack for a while. &lt;a href=&quot;https://lwn.net/ml/linux-fsdevel/20181221192236.12866-9-axboe@kernel.dk/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Mailing list archaeology&lt;/a&gt; tells us that this work started with a simple motivation: as devices get extremely fast, interrupt-driven work is no longer as efficient as polling for completions — a common theme that underlies the architecture of performance-oriented I/O systems.&lt;/p&gt;
&lt;p&gt;But as the work evolved, it grew into a radically different interface, conceived from the ground up to allow fully asynchronous operation. It’s a basic theory of operation is close to linux-aio: there is an interface to push work into the kernel, and another interface to retrieve completed work.&lt;/p&gt;
&lt;p&gt;But there are some crucial differences:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;By design, the interfaces are designed to be truly asynchronous. With the right set of flags, it will never initiate any work in the system call context itself and will just queue work. This guarantees that the application will never block.&lt;/li&gt;
&lt;li&gt;It works with any kind of I/O: it doesn’t matter if they are cached files, direct-access files, or even blocking sockets. That is right: because of its async-by-design nature, there is no need for poll+read/write to deal with sockets. One submits a blocking read, and once it is ready it will show up in the completion ring.&lt;/li&gt;
&lt;li&gt;It is flexible and extensible: new opcodes are being added at a rate that leads us to believe that indeed soon it will grow to re-implement every single Linux system call.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The &lt;code&gt;io_uring&lt;/code&gt; interface works through two main data structures: the submission queue entry (sqe) and the completion queue entry (cqe). Instances of those structures live in a shared memory single-producer-single-consumer ring buffer between the kernel and the application.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter wp-image-22879 size-full&quot; src=&quot;https://www.scylladb.com/wp-content/uploads/io_uring.png&quot; alt=&quot;&quot; width=&quot;468&quot; height=&quot;361&quot; srcset=&quot;https://www.scylladb.com/wp-content/uploads/io_uring.png 468w, https://www.scylladb.com/wp-content/uploads/io_uring-300x231.png 300w&quot; sizes=&quot;(max-width: 468px) 100vw, 468px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The application asynchronously adds sqes to the queue (potentially many) and then tells the kernel that there is work to do. The kernel does its thing, and when work is ready it posts the results in the cqe ring. This also has the added advantage that system calls are now batched. Remember &lt;a href=&quot;https://www.scylladb.com/2018/01/07/cost-of-avoiding-a-meltdown/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Meltdown&lt;/a&gt;? At the time I wrote about how little it affected our Scylla NoSQL database, since we would batch our I/O system calls through &lt;code&gt;aio&lt;/code&gt;. Except now we can batch much more than just the storage I/O system calls, and this power is also available to any application.&lt;/p&gt;
&lt;p&gt;The application, whenever it wants to check whether work is ready or not, just looks at the cqe ring buffer and consumes entries if they are ready. There is no need to go to the kernel to consume those entries.&lt;/p&gt;
&lt;p&gt;Here are some of the operations that &lt;code&gt;io_uring&lt;/code&gt; supports: &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;send&lt;/code&gt;, &lt;code&gt;recv&lt;/code&gt;, &lt;code&gt;accept&lt;/code&gt;, &lt;code&gt;openat&lt;/code&gt;, &lt;code&gt;stat&lt;/code&gt;, and even way more specialized ones like &lt;code&gt;fallocate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is not an evolutionary step. Although &lt;code&gt;io_uring&lt;/code&gt; is slightly similar to &lt;code&gt;aio&lt;/code&gt;, its extensibility and architecture are disruptive: it brings the power of asynchronous operations to anyone, instead of confining it to specialized database applications.&lt;/p&gt;
&lt;p&gt;Our CTO, Avi Kivity, &lt;a href=&quot;https://www.scylladb.com/2020/03/26/avi-kivity-at-core-c-2019/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;made the case for async&lt;/a&gt; at the Core C++ 2019 event. The bottom line is this; in modern multicore, multi-CPU devices, the CPU itself is now basically a network, the intercommunication between all the CPUs is another network, and calls to disk I/O are effectively another. There are good reasons why network programming is done asynchronously, and you should consider that for your own application development too.&lt;/p&gt;
&lt;p&gt;It fundamentally changes the way Linux applications are to be designed: Instead of a flow of code that issues syscalls when needed, that have to think about whether or not a file is ready, they naturally become an event-loop that constantly add things to a shared buffer, deals with the previous entries that completed, rinse, repeat.&lt;/p&gt;
&lt;p&gt;So, what does that look like? The code block below is an example on how to dispatch an entire array of reads to multiple file descriptors at once down the &lt;code&gt;io_uring&lt;/code&gt; interface:&lt;/p&gt;

&lt;p&gt;At a later time, in an event-loop manner, we can check which reads are ready and process them. The best part of it is that due to its shared-memory interface, no system calls are needed to consume those events. The user just has to be careful to tell the &lt;code&gt;io_uring&lt;/code&gt; interface that the events were consumed.&lt;/p&gt;

&lt;p&gt;This simplified example works for reads only, but it is easy to see how we can batch all kinds of operations together through this unified interface. A queue pattern also goes very well with it: you can just queue operations at one end, dispatch, and consume what’s ready at the other end.&lt;/p&gt;
&lt;h3&gt;Advanced Features&lt;/h3&gt;
&lt;p&gt;Aside from the consistency and extensibility of the interface, &lt;code&gt;io_uring&lt;/code&gt; offers a plethora of advanced features for specialized use cases. Here are some of them:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;File registration&lt;/strong&gt;: every time an operation is issued for a file descriptor, the kernel has to spend cycles mapping the file descriptor to its internal representation. For repeated operations over the same file, &lt;code&gt;io_uring&lt;/code&gt; allows you to pre-register those files and save on the lookup.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Buffer registration&lt;/strong&gt;: analogous to file registration, the kernel has to map and unmap memory areas for Direct I/O. &lt;code&gt;io_uring&lt;/code&gt; allows those areas to be pre-registered if the buffers can be reused.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Poll ring&lt;/strong&gt;: for very fast devices, the cost of processing interrupts is substantial. &lt;code&gt;io_uring&lt;/code&gt; allows the user to turn off those interrupts and consume all available events through polling.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linked operations&lt;/strong&gt;: allows the user to send two operations that are dependent on each other. They are dispatched at the same time, but the second operation only starts when the first one returns.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And as with other areas of the interface, new features are also being added quickly.&lt;/p&gt;
&lt;h3&gt;Performance&lt;/h3&gt;
&lt;p&gt;As we said, the &lt;code&gt;io_uring&lt;/code&gt; interface is largely driven by the needs of modern hardware. So we would expect some performance gains. Are they here?&lt;/p&gt;
&lt;p&gt;For users of &lt;code&gt;linux-aio&lt;/code&gt;, like ScyllaDB, the gains are expected to be few, focused in some particular workloads and come mostly from the advanced features like buffer and file registration and the poll ring. This is because &lt;code&gt;io_uring&lt;/code&gt; and &lt;code&gt;linux-aio&lt;/code&gt; are not that different as we hope to have made clear in this article: &lt;code&gt;io_uring&lt;/code&gt; is first and foremost bringing all the nice features of &lt;code&gt;linux-aio&lt;/code&gt; to the masses.&lt;/p&gt;
&lt;p&gt;We have used the well-known &lt;code&gt;fio&lt;/code&gt; utility to evaluate 4 different interfaces: synchronous reads, &lt;code&gt;posix-aio&lt;/code&gt; (which is implemented as a thread pool), &lt;code&gt;linux-aio&lt;/code&gt; and &lt;code&gt;io_uring&lt;/code&gt;. In the first test, we want all reads to hit the storage, and not use the operating system page cache at all. We then ran the tests with the Direct I/O flags, which should be the bread and butter for &lt;code&gt;linux-aio&lt;/code&gt;. The test is conducted on NVMe storage that should be able to read at 3.5M IOPS. We used 8 CPUs to run 72 &lt;code&gt;fio&lt;/code&gt; jobs, each issuing random reads across four files with an &lt;code&gt;iodepth&lt;/code&gt; of 8. This makes sure that the CPUs run at saturation for all backends and will be the limiting factor in the benchmark. This allows us to see the behavior of each interface at saturation. Note that with enough CPUs all interfaces would be able to at some point achieve the full disk bandwidth. Such a test wouldn’t tell us much.&lt;/p&gt;
&lt;table width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;backend&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;IOPS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;context switches&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;IOPS ±% vs &lt;code&gt;io_uring&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;814,000&lt;/td&gt;
&lt;td&gt;27,625,004&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-42.6%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;posix-aio&lt;/code&gt; (thread pool)&lt;/td&gt;
&lt;td&gt;433,000&lt;/td&gt;
&lt;td&gt;64,112,335&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-69.4%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;linux-aio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1,322,000&lt;/td&gt;
&lt;td&gt;10,114,149&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-6.7%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;io_uring&lt;/code&gt; (basic)&lt;/td&gt;
&lt;td&gt;1,417,000&lt;/td&gt;
&lt;td&gt;11,309,574&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;io_uring&lt;/code&gt; (enhanced)&lt;/td&gt;
&lt;td&gt;1,486,000&lt;/td&gt;
&lt;td&gt;11,483,468&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;4.9%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;Table 1: performance comparison of 1kB random reads at 100% CPU utilization using Direct I/O, where data is never cached: synchronous reads, &lt;/em&gt;&lt;code&gt;posix-aio&lt;/code&gt;&lt;em&gt; (uses a thread pool), &lt;/em&gt;&lt;code&gt;linux-aio&lt;/code&gt;&lt;em&gt;, and the basic &lt;/em&gt;&lt;code&gt;io_uring&lt;/code&gt;&lt;em&gt; as well as &lt;/em&gt;&lt;code&gt;io_uring&lt;/code&gt;&lt;em&gt; using its advanced features.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can see that as we expect, &lt;code&gt;io_uring&lt;/code&gt; is a bit faster than &lt;code&gt;linux-aio&lt;/code&gt;, but nothing revolutionary. Using advanced features like buffer and file registration (io_uring enhanced) gives us an extra boost, which is nice, but nothing that justifies changing your entire application, unless you are a database trying to squeeze out every operation the hardware can give. Both &lt;code&gt;io_uring&lt;/code&gt; and &lt;code&gt;linux-aio&lt;/code&gt; are around twice as fast as the synchronous read interface, which in turn is twice as fast as the thread pool approach employed by &lt;code&gt;posix-aio&lt;/code&gt;, which is surprisingly at first.&lt;/p&gt;
&lt;p&gt;The reason why &lt;code&gt;posix-aio&lt;/code&gt; is the slowest is easy to understand if we look at the context switches column at Table 1: every event in which the system call would block, implies one additional context switch. And in this test, all reads will block. The situation is just worse for &lt;code&gt;posix-aio&lt;/code&gt;. Now not only there is the context switch between the kernel and the application for blocking, the various threads in the application have to go in and out the CPU.&lt;/p&gt;
&lt;p&gt;But the real power of &lt;code&gt;io_uring&lt;/code&gt; can be understood when we look at the other side of the scale. In a second test, we preloaded all the memory with the data in the files and proceeded to issue the same random reads. Everything is equal to the previous test, except we now use buffered I/O and expect the synchronous interface to never block — all results are coming from the operating system page cache, and none from storage.&lt;/p&gt;
&lt;table width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Backend&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;IOPS&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;context switches&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;IOPS ±% vs &lt;code&gt;io_uring&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4,906,000&lt;/td&gt;
&lt;td&gt; 105,797&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-2.3%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;posix-aio&lt;/code&gt; (thread pool)&lt;/td&gt;
&lt;td&gt;1,070,000&lt;/td&gt;
&lt;td&gt;114,791,187&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-78.7%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;linux-aio&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4,127,000&lt;/td&gt;
&lt;td&gt;105,052&lt;/td&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;-17.9%&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;io_uring&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5,024,000&lt;/td&gt;
&lt;td&gt;106,683&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;Table 2: comparison between the various backends. Test issues 1kB random reads using buffered I/O files with preloaded files and a hot cache. The test is run at 100% CPU.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We don’t expect a lot of difference between synchronous reads and &lt;code&gt;io_uring&lt;/code&gt; interface in this case because no reads will block. And that’s indeed what we see. Note, however, that in real life applications that do more than just read all the time there will be a difference, since &lt;code&gt;io_uring&lt;/code&gt; supports batching many operations in the same system call.&lt;/p&gt;
&lt;p&gt;The other two interfaces, however, suffer a big penalty: the large number of context switches in the &lt;code&gt;posix-aio&lt;/code&gt; interface due to its thread pool completely destroys the benchmark performance at saturation. &lt;code&gt;Linux-aio&lt;/code&gt;, which is not designed for buffered I/O, at all, actually becomes a synchronous interface when used with buffered I/O files. So now we pay the price of the asynchronous interface — having to split the operation in a dispatch and consume phase, without realizing any of the benefits.&lt;/p&gt;
&lt;p&gt;Real applications will be somewhere in the middle: some blocking, some non-blocking operations. Except now there is no longer the need to worry about what will happen. The &lt;code&gt;io_uring&lt;/code&gt; interface performs well in any circumstance. It doesn’t impose a penalty when the operations would not block, is fully asynchronous when the operations would block, and does not rely on threads and expensive context switches to achieve its asynchronous behavior. And what’s even better: although our example focused on random reads, &lt;code&gt;io_uring&lt;/code&gt; will work for a large list of opcodes. It can open and close files, set timers, transfer data to and from network sockets. All using the same interface.&lt;/p&gt;
&lt;h2&gt;ScyllaDB and io_uring&lt;/h2&gt;
&lt;p&gt;Because Scylla scales up to 100% of server capacity before scaling out, it relies exclusively on Direct I/O and we have been using &lt;code&gt;linux-aio&lt;/code&gt; since the start.&lt;/p&gt;
&lt;p&gt;In our journey towards &lt;code&gt;io_uring&lt;/code&gt;, we have initially seen results as high as 50% better in some workloads. At closer inspection, that made clear that this is because our implementation of &lt;code&gt;linux-aio&lt;/code&gt; was not as good as it could be. This, in my view, highlights one usually underappreciated aspect of performance: how easy it is to achieve it. As we fixed our &lt;code&gt;linux-aio&lt;/code&gt; implementation according to the deficiencies &lt;code&gt;io_uring&lt;/code&gt; shed light into, the performance difference all but disappeared. But that took effort, to fix an interface we have been using for many years. For &lt;code&gt;io_uring&lt;/code&gt;, achieving that was trivial.&lt;/p&gt;
&lt;p&gt;However, aside from that, &lt;code&gt;io_uring&lt;/code&gt; can be used for much more than just file I/O (as already mentioned many times throughout this article). And it comes with specialized high performance interfaces like buffer registration, file registration, and a poll interface with no interrupts.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;io_uring&lt;/code&gt;’s advanced features are used, we do see a performance difference: we observed a 5% speedup when reading 512-byte payloads from a single CPU in an Intel Optane device, which is consistent with the &lt;code&gt;fio&lt;/code&gt; results in Tables 1 and 2. While that doesn’t sound like a lot, that’s very valuable for databases trying to make the most out of the hardware.&lt;/p&gt;
&lt;table width=&quot;100%&quot;&gt;&lt;tbody readability=&quot;6.5&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td readability=&quot;6&quot;&gt;
&lt;pre&gt;&lt;code&gt;linux-aio:&amp;#13;
&amp;#13;
  Throughput         :      330 MB/s&amp;#13;
  Lat average        :     1549 usec&amp;#13;
  Lat quantile=  0.5 :     1547 usec&amp;#13;
  Lat quantile= 0.95 :     1694 usec&amp;#13;
  Lat quantile= 0.99 :     1703 usec&amp;#13;
  Lat quantile=0.999 :     1950 usec&amp;#13;
  Lat max            :     2177 usec&lt;/code&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;td readability=&quot;8&quot;&gt;
&lt;pre&gt;&lt;code&gt;io_uring, with buffer and file registration and poll:&amp;#13;
  Throughput         :      346 MB/s&amp;#13;
  Lat average        :     1470 usec&amp;#13;
  Lat quantile= 0.5  :     1468 usec&amp;#13;
  Lat quantile= 0.95 :     1558 usec&amp;#13;
  Lat quantile= 0.99 :     1613 usec&amp;#13;
  Lat quantile=0.999 :     1674 usec&amp;#13;
  Lat max            :     1829 usec&lt;/code&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td colspan=&quot;2&quot;&gt;Reading 512-byte buffers from an Intel Optane device from a single CPU. Parallelism of 1000 in-flight requests. There is very little difference between &lt;code&gt;linux-aio&lt;/code&gt; and &lt;code&gt;io_uring&lt;/code&gt; for the basic interface. But when advanced features are used, a 5% difference is seen.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The &lt;code&gt;io_uring&lt;/code&gt; interface is advancing rapidly. For many of its features to come, it plans to rely on another earth-shattering new addition to the Linux Kernel: eBPF.&lt;/p&gt;
&lt;h2&gt;What Is eBPF?&lt;/h2&gt;
&lt;p&gt;eBPF stands for extended Berkeley Packet Filter. Remember &lt;a href=&quot;https://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;iptables&lt;/a&gt;? As the name implies, the original BPF allows the user to specify rules that will be applied to network packets as they flow through the network. This has been part of Linux for years.&lt;/p&gt;
&lt;p&gt;But when BPF got extended, &lt;strong&gt;&lt;em&gt;it allowed users to add code that is executed by the kernel in a safe manner in various points of its execution, not only in the network code.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I will suggest the reader to pause here and read this sentence again, to fully capture its implications: You can execute arbitrary code in the Linux kernel now. To do essentially whatever you want.&lt;/p&gt;
&lt;p&gt;eBPF programs have types, which determine what they will attach to. In other words, which events will trigger their execution. The old-style packet filtering use case is still there. It’s a program of the &lt;code&gt;BPF_PROG_TYPE_SOCKET_FILTER&lt;/code&gt; type.&lt;/p&gt;
&lt;p&gt;But over the past decade or so, Linux has been accumulating an enormous infrastructure for performance analysis, that adds tracepoints and probe points almost everywhere in the kernel. You can attach a tracepoint, for example, to a syscall — any syscall — entry or return points. And through the &lt;code&gt;BPF_PROG_TYPE_KPROBE&lt;/code&gt; and &lt;code&gt;BPF_PROG_TYPE_TRACEPOINT&lt;/code&gt; types, you can attach bpf programs essentially anywhere.&lt;/p&gt;
&lt;p&gt;The most obvious use case for this is performance analysis and monitoring. A lot of those tools are being maintained through the &lt;a href=&quot;https://github.com/iovisor/bcc&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;bcc project&lt;/a&gt;. It’s not like it wasn’t possible to attach code into those tracepoints before: Tools like &lt;code&gt;systemtap&lt;/code&gt; allowed the user to do just that. But previously all that such probes could do was pass on information to the application in raw form which would then constantly switch to and from the kernel, making it unusably slow.&lt;/p&gt;
&lt;p&gt;Because eBPF probes run in kernel space, they can do complex analysis, collect large swathes of information, and then only return to the application with summaries and final conclusions. Pandora’s box has been opened.&lt;/p&gt;
&lt;p&gt;Here are some examples of what those tools can do:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Trace how much time an application spends sleeping, and what led to those sleeps. (&lt;code&gt;wakeuptime&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Find all programs in the system that reached a particular place in the code (&lt;code&gt;trace&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Analyze network TCP throughput aggregated by subnet (&lt;code&gt;tcpsubnet&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Measure how much time the kernel spent processing softirqs (&lt;code&gt;softirqs&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Capture information about all short-lived files, where they come from, and for how long they were opened (&lt;code&gt;filelife&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The entire bcc collection is a gold mine and I strongly recommend the reader to take a look. But the savvy reader had already noticed by now that the main point is not that there are new tools. Rather, the point is that these tools are built upon an extensible framework that allows them to be &lt;em&gt;highly specialized&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We could always measure network bandwidth in Linux. But now we can split it per subnet, because that’s just a program that was written and injected into the kernel. Which means if you ever need to insert specifics of your own network and scenario, now you can too.&lt;/p&gt;
&lt;p&gt;Having a framework to execute code in the kernel goes beyond just performance analysis and debugging. We can’t know for sure how the marriage between io_uring and bpf will look like, but here are some interesting things that can happen:&lt;/p&gt;
&lt;p&gt;io_uring supports linking operations, but there is no way to generically pass the result of one system call to the next. With a simple bpf program, the application can tell the kernel how the result of &lt;code&gt;open&lt;/code&gt; is to be passed to &lt;code&gt;read&lt;/code&gt; — including the error handling, which then allocates its own buffers and keeps reading until the entire file is consumed and finally closed: we can checksum, compress, or search an entire file with a &lt;em&gt;single system call&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Where Is All This Going?&lt;/h2&gt;
&lt;p&gt;These two new features, io_uring and eBPF, will revolutionize programming in Linux. Now you can design apps that can truly take advantage of these large multicore multiprocessor systems like the &lt;a href=&quot;https://www.scylladb.com/2019/05/28/aws-new-i3en-meganode/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Amazon i3en “meganode” systems&lt;/a&gt;, or take advantage of µsecond-scale storage I/O latencies of &lt;a href=&quot;https://www.scylladb.com/2017/09/27/intel-optane-scylla-providing-speed-memory-database-persistency/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Intel Optane persistent memory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You’re also going to be able to run arbitrary code in the kernel, which is hugely empowering for tooling and debugging. For those who have only done synchronous or POSIX aio thread pooling, there’s now a lot of new capabilities to take advantage of. These are exciting developments — even for those of you who are not database developers like us.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally &lt;a href=&quot;https://thenewstack.io/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/&quot;&gt;published&lt;/a&gt; in The New Stack.&lt;/em&gt;&lt;/p&gt;
                </description>
<pubDate>Thu, 26 Nov 2020 18:08:16 +0000</pubDate>
<dc:creator>harporoeder</dc:creator>
<og:type>article</og:type>
<og:title>How io_uring and eBPF Will Revolutionize Programming in Linux</og:title>
<og:description>ScyllaDB's Glauber Costa explains how two new APIs, io_uring and eBPF, are changing the fundamental nature of Linux programming.</og:description>
<og:url>https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/</og:url>
<og:image>https://www.scylladb.com/wp-content/uploads/1200x628-fb-How-io_uring-and-eBPF-Will.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/</dc:identifier>
</item>
<item>
<title>Modern storage is plenty fast, but the APIs are bad</title>
<link>https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a</link>
<guid isPermaLink="true" >https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a</guid>
<description>&lt;div&gt;

&lt;div class=&quot;fl&quot;&gt;
&lt;div class=&quot;n fm fn fo fp&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://glaubercosta-11125.medium.com/?source=post_page-----6a68319fbc1a--------------------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Glauber Costa&quot; class=&quot;s fq fr fs&quot; src=&quot;https://miro.medium.com/fit/c/96/96/0*_vxmqP0UCaArfAxZ&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;5c24&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;I have spent almost the entire last decade in a fairly specialized product company, building high performance I/O systems. I had the opportunity to see storage technology evolve rapidly and decisively. Talking about storage and its developments felt like preaching to the choir.&lt;/p&gt;
&lt;p id=&quot;3e2c&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;This year, I have switched jobs. Being at a larger company with engineers from multiple backgrounds I was taken by surprise by the fact that although every one of my peers is certainly extremely bright, most of them carried misconceptions about how to best exploit the performance of modern storage technology leading to suboptimal designs, even if they were aware of the increasing improvements in storage technology.&lt;/p&gt;
&lt;p id=&quot;7d4f&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;As I reflected about the causes of this disconnect I realized that a large part of the reason for the persistence of such misconceptions is that if they were to spend the time to validate their assumptions with benchmarks, the data would show that their assumptions are, or at least appear to be, true.&lt;/p&gt;
&lt;p id=&quot;a61d&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Common examples of such misconceptions include:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;5a4f&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;“Well, it is fine to copy memory here and perform this expensive computation because it saves us one I/O operation, which is even more expensive”.&lt;/li&gt;
&lt;li id=&quot;732a&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;“I am designing a system that needs to be fast. Therefore it needs to be in memory”.&lt;/li&gt;
&lt;li id=&quot;2807&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;“If we split this into multiple files it will be slow because it will generate random I/O patterns. We need to optimize this for sequential access and read from a single file”&lt;/li&gt;
&lt;li id=&quot;b15f&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;“Direct I/O is very slow. It only works for very specialized applications. If you don’t have your own cache you are doomed”.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;5c7f&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;&lt;a href=&quot;https://www.samsung.com/semiconductor/global.semi.static/Ultra-Low_Latency_with_Samsung_Z-NAND_SSD-0.pdf&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;Yet if you skim through specs of modern NVMe devices&lt;/a&gt; you see commodity devices with latencies in the microseconds range and several GB/s of throughput supporting several hundred thousands random IOPS. So where’s the disconnect?&lt;/p&gt;
&lt;p id=&quot;42bc&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;In this article I will demonstrate that while hardware changed dramatically over the past decade, software APIs have not, or at least not enough. Riddled with memory copies, memory allocations, overly optimistic read ahead caching and all sorts of expensive operations, legacy APIs prevent us from making the most of our modern devices.&lt;/p&gt;
&lt;p id=&quot;0eb7&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;In the process of writing this piece I had the immense pleasure of getting early access to one of the next generation Optane devices, from Intel. While they are not common place in the market yet, they certainly represent the crowning of a trend towards faster and faster devices. The numbers you will see throughout this article were obtained using this device.&lt;/p&gt;
&lt;p id=&quot;be36&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;In the interest of time I will focus this article on reads. Writes have their own unique set of issues — as well as opportunities for improvements that I intend to cover in a later article.&lt;/p&gt;

&lt;p id=&quot;c4d7&quot; class=&quot;hm hn en ho b hp jp hr hs ht jq hv hw hx jr hz ia ib js id ie if jt ih ii ij dh fk&quot;&gt;There are three main problems with traditional file-based APIs:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;236a&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;&lt;strong class=&quot;ho ju&quot;&gt;They perform a lot of expensive operations because “I/O is expensive”.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;e2e1&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;When legacy APIs need to read data that is not cached in memory they generate a page fault. Then after the data is ready, an interrupt. Lastly, for a traditional system-call based read you have an extra copy to the user buffer, and for mmap-based operations you will have to update the virtual memory mappings.&lt;/p&gt;
&lt;p id=&quot;185f&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;None of these operations: page fault, interrupts, copies or virtual memory mapping update are cheap. But years ago they were still ~100 times cheaper than the cost of the I/O itself, making this approach acceptable. This is no longer the case as device latency approaches single-digit microseconds. Those operations are now in the same order of magnitude of the I/O operation itself.&lt;/p&gt;
&lt;p id=&quot;0258&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;A quick back-of-the-napkin calculation shows that in the worst case, less than half of the total busy cost is the cost of communication with the device per se. That’s not counting all the waste, which brings us to the second problem:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;6f96&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;&lt;strong class=&quot;ho ju&quot;&gt;Read amplification.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;d546&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Although there are some details I will brush over (like memory used by file descriptors, the various metadata caches in Linux), if modern NVMe support many concurrent operations, there is no reason to believe that reading from many files is more expensive than reading from one. However &lt;em class=&quot;jv&quot;&gt;the aggregate amount of data read&lt;/em&gt; certainly matters.&lt;/p&gt;
&lt;p id=&quot;3b94&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;The operating system reads data in &lt;em class=&quot;jv&quot;&gt;page granularity&lt;/em&gt;, meaning it can only read at a minimum 4kB at a time. That means if you need to read read 1kB split in two files, 512 bytes each, you are effectively reading 8kB to serve 1kB, wasting 87% of the data read. In practice, the OS will also perform read ahead, with a default setting of 128kB, in anticipation of saving you cycles later when you do need the remaining data. But if you never do, as is often the case for random I/O, then you just read 256kB to serve 1kB and wasted 99% of it.&lt;/p&gt;
&lt;p id=&quot;d17a&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;If you feel tempted to validate my claim that reading from multiple files shouldn’t be fundamentally slower than reading from a single file, you may end up proving yourself right, but only because read amplification increased by a lot the amount of data effectively read.&lt;/p&gt;
&lt;p id=&quot;dd08&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Since the issue is the OS page cache, what happens if you just open a file with Direct I/O, all else being equal? Unfortunately that likely won’t get faster either. But that’s because of our third and last issue:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;0b78&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;&lt;strong class=&quot;ho ju&quot;&gt;Traditional APIs don’t exploit parallelism&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;f150&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;A file is seen as a sequential stream of bytes, and whether data is in-memory or not is transparent to the reader. Traditional APIs will wait until you touch data that is not resident to issue an I/O operation. The I/O operation may be larger than what the user requested due to read-ahead, but is still just one.&lt;/p&gt;
&lt;p id=&quot;f8b1&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;However as fast as modern devices are, they are still slower than the CPU. While the device is waiting for the I/O operation to come back, the CPU is not doing anything.&lt;/p&gt;

Lack of parallelism in traditional APIs result in the CPUs being idle while they wait for I/O to return.
&lt;p id=&quot;c7c4&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Using multiple files is a step in the right direction, as it allows more effectively parallelism: while one reader is waiting, another can hopefully proceed. But if you are not careful you just end up amplifying one of the previous problems:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;edc4&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;Multiple files mean multiple read-ahead buffers, increasing the waste factor for random I/O.&lt;/li&gt;
&lt;li id=&quot;5f9e&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;In thread-poll based APIs multiple files mean multiple threads, amplifying the amount of work done per I/O operation.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;5030&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Not to mention that in many situations that’s not what you want: you may not have that many files to begin with.&lt;/p&gt;

&lt;p id=&quot;1347&quot; class=&quot;hm hn en ho b hp jp hr hs ht jq hv hw hx jr hz ia ib js id ie if jt ih ii ij dh fk&quot;&gt;I have written extensively in the past about &lt;a href=&quot;https://www.scylladb.com/2020/05/05/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;how revolutionary io_uring is&lt;/a&gt;. But being a fairly low level interface it is really just one piece of the API puzzle. Here’s why:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;43e0&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;I/O dispatched through io_uring will still suffer from most of the problems listed previously if it uses buffered files.&lt;/li&gt;
&lt;li id=&quot;9488&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;Direct I/O is full of caveats, and io_uring being a raw interface doesn’t even try (nor should it) to hide these problems: For example, memory must be properly aligned, as well as the positions where you are reading from.&lt;/li&gt;
&lt;li id=&quot;36c3&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;It is also very low level and raw. For it to be useful you need to accumulate I/O and dispatch in batches. This calls for a policy of when to do it, and some form of event-loop, meaning it works better with a framework that already provides the machinery for that.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;f7f8&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;To tackle the API issue I have designed G&lt;a href=&quot;https://www.datadoghq.com/blog/engineering/introducing-glommio/&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;lommio&lt;/a&gt; (formerly known as Scipio), a Direct I/O-oriented thread-per-core Rust library. Glommio builds upon io_uring and supports many of its advanced features like registered buffers and poll-based (no interrupts) completions to make Direct I/O shine. For the sake of familiarity Glommio does support buffered files backed by the Linux page cache in a way that resembles the standard Rust APIs (which we will use in this comparison), but it is oriented towards bringing Direct I/O to the limelight.&lt;/p&gt;
&lt;p id=&quot;1854&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;There are two classes of file in Glommio: &lt;a href=&quot;https://docs.rs/glommio/0.2.0-alpha/glommio/io/struct.DmaFile.html&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;Random access files&lt;/a&gt;, and &lt;a href=&quot;https://docs.rs/glommio/0.2.0-alpha/glommio/io/struct.DmaStreamReader.html&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;Streams&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;932a&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Random access files take a position as an argument, meaning there is no need to maintain a seek cursor. But more importantly: they don’t take a buffer as a parameter. Instead, they use io_uring’s pre-registered buffer area to allocate a buffer and return to the user. That means no memory mapping, no copying to the user buffer — there is only a copy from the device to the glommio buffer and the user get a reference counted pointer to that. And because we know this is random I/O, there is no need to read more data than what was requested.&lt;/p&gt;

&lt;p id=&quot;bbe4&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Streams, on the other hand, assume that you will eventually run through the entire file so they can afford to use a larger block size and a read-ahead factor.&lt;/p&gt;
&lt;p id=&quot;3b70&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Streams are designed to be mostly familiar to Rust’s default &lt;a href=&quot;https://docs.rs/futures-lite/1.11.2/futures_lite/io/trait.AsyncReadExt.html&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;AsyncRead&lt;/a&gt;, so it implements the AsyncRead trait and will still read data to a user buffer. All the benefits of Direct I/O-based scans are still there, but there is a copy between our internal read ahead buffers and the user buffer. That’s a tax on the convenience of using the standard API.&lt;/p&gt;
&lt;p id=&quot;43e1&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;If you need the extra performance, glommio provides an &lt;a href=&quot;https://docs.rs/glommio/0.2.0-alpha/glommio/io/struct.DmaStreamReader.html#method.get_buffer_aligned&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;API into the stream&lt;/a&gt; that also exposes the raw buffers too, saving the extra copy.&lt;/p&gt;


&lt;p id=&quot;9d98&quot; class=&quot;hm hn en ho b hp jp hr hs ht jq hv hw hx jr hz ia ib js id ie if jt ih ii ij dh fk&quot;&gt;To demonstrate these APIs glommio has an &lt;a href=&quot;https://github.com/DataDog/glommio/blob/master/examples/storage.rs&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;example program&lt;/a&gt; that issues I/O with various settings using all those APIs (buffered, Direct I/O, random, sequential) and evaluates their performance.&lt;/p&gt;
&lt;p id=&quot;d481&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;We start with a file that is around 2.5x the size of memory and start simple by reading it sequentially as a normal buffered file:&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;335c&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Buffered I/O: Scanned 53GB in 56s, 945.14 MB/s&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;18c6&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;That is certainly not bad considering that this file doesn’t fit in memory, but here the merits are all on Intel Optane’s out-of-this world performance and the io_uring backend. It still has an effective parallelism of one whenever I/O is dispatched and although the OS page size is 4kB, read-ahead allow us to effectively increase the I/O size.&lt;/p&gt;
&lt;p id=&quot;9ce5&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;And in fact, should we try to emulate similar parameters using the Direct I/O API (4kB buffers, parallelism of one), the results would be disappointing, “confirming” our suspicion that Direct I/O is indeed, much slower.&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;25db&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O: Scanned 53GB in 115s, 463.23 MB/s&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;15d9&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;But as we discussed, glommio’s Direct I/O file streams can take an explicit read-ahead parameter. If active glommio will issue I/O requests in advance of the position being currently read, to exploit the device’s parallelism.&lt;/p&gt;
&lt;p id=&quot;0b41&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Glommio’s read-ahead works differently than OS-level read ahead: our goal is to exploit parallelism and not just increase I/O sizes. Instead of consuming the entire read-ahead buffer and only then sending a request for a new batch, glommio dispatches a new request as soon as the contents of a buffer is fully consumed and will always try to keep a fixed number of buffers in-flight, as shown in the image below.&lt;/p&gt;

As we exhaust one buffer, another is already being fetched. This has the effect of increasing parallelism and keeping it high.
&lt;p id=&quot;94be&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;As initially anticipated, once we exploit parallelism correctly by setting a read-ahead factor Direct I/O is not only on pair with buffered I/O but in fact much faster.&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;45e1&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O, read ahead: Scanned 53GB in 22s, 2.35 GB/s&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;ac53&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;This version is still using Rust’s &lt;a href=&quot;https://docs.rs/futures-lite/1.11.2/futures_lite/io/trait.AsyncReadExt.html&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;AsyncReadExt&lt;/a&gt; interfaces, which forces an extra copy from the glommio buffers to the user buffers.&lt;/p&gt;
&lt;p id=&quot;ebff&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Using the &lt;a href=&quot;https://docs.rs/glommio/0.2.0-alpha/glommio/io/struct.DmaStreamReader.html#method.get_buffer_aligned&quot; class=&quot;cm is&quot; rel=&quot;noopener&quot;&gt;get_buffer_aligned&lt;/a&gt; API gives you raw access to the buffer which avoids that last memory copy. If we use that now in our read test we gain a respectable 4% performance improvement&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;e7c2&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O, glommio API: Scanned 53GB in 21s, 2.45 GB/s&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;89ca&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;The last step is to increase the buffer size. As this is a sequential scan there is no need for us to be constrained by 4kB buffer sizes, except for the sake of comparison with the OS page cache version.&lt;/p&gt;
&lt;p id=&quot;e330&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;At this point, let’s summarize all the things that are going on behind the scenes with glommio and io_uring in the next test:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;b812&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij ik il im fk&quot;&gt;each I/O request is 512kB in size,&lt;/li&gt;
&lt;li id=&quot;70a9&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;many (5) of them are kept in flight for parallelism,&lt;/li&gt;
&lt;li id=&quot;2808&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;memory is pre-allocated and pre-registered&lt;/li&gt;
&lt;li id=&quot;4e0c&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;no extra copy is performed to a user-buffer&lt;/li&gt;
&lt;li id=&quot;11de&quot; class=&quot;hm hn en ho b hp in hr hs ht io hv hw hx ip hz ia ib iq id ie if ir ih ii ij ik il im fk&quot;&gt;io_uring is set up for poll mode, meaning there are no memory copies, no interrupts, no context switches.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;7f9e&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;The results?&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;6e71&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O, glommio API, large buffer: Scanned 53GB in 7s, 7.29 GB/s&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;f283&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;This is more than 7x better than the standard buffered approach. And better yet, the memory utilization was never higher than whatever we set as the read-ahead factor times the buffer size. In this example, 2.5MB.&lt;/p&gt;

&lt;p id=&quot;ed99&quot; class=&quot;hm hn en ho b hp jp hr hs ht jq hv hw hx jr hz ia ib js id ie if jt ih ii ij dh fk&quot;&gt;Scans are notoriously pernicious for the OS page cache. How do we fare with random I/O ? To test that we will read as much as we can in 20s, first restricting ourselves to the first 10% of the memory available (1.65GB)&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;68ff&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Buffered I/O: size span of 1.65 GB, for 20s, 693870 IOPS&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;5262&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;For Direct I/O:&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;fe34&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O: size span of 1.65 GB, for 20s, 551547 IOPS&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;4a32&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Direct I/O is 20% slower than buffered reads. While reading entirely from memory is still faster — which shouldn’t surprise anybody, that’s a far cry from the disaster one would expect. In fact, if we keep in mind that the buffered version is keeping 1.65GB of resident memory to achieve this whereas Direct I/O is only using 80kB (20 x 4kB buffers) this may even be &lt;em class=&quot;jv&quot;&gt;preferable&lt;/em&gt; for a particular class of applications that may be better off employing that memory somewhere else.&lt;/p&gt;
&lt;p id=&quot;c300&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;As any performance engineer would tell you, a good read benchmark needs to read data enough to hit the media. After all, “storage is slow”. So if we now read from the entire file, our buffered performance drops dramatically by 65%&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;e25e&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Buffered I/O: size span of 53.69 GB, for 20s, 237858 IOPS&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;7b0c&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;While Direct I/O, as expected, has the same performance and the same memory utilization irrespectively of the amount of data read.&lt;/p&gt;
&lt;pre class=&quot;jx jy jz ka kb ki kj bv&quot;&gt;
&lt;span id=&quot;957a&quot; class=&quot;fk kk iu en kl b km kn ko s kp&quot;&gt;Direct I/O: size span of 53.69 GB, for 20s, 547479 IOPS&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;2afa&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;If the larger scans are our comparison point, then Direct I/O is 2.3x faster, not slower, than buffered files.&lt;/p&gt;

&lt;p id=&quot;4892&quot; class=&quot;hm hn en ho b hp jp hr hs ht jq hv hw hx jr hz ia ib js id ie if jt ih ii ij dh fk&quot;&gt;Modern NVMe devices change the nature of how to best perform I/O in stateful applications. This trend has been going on for a while but has been so far masked by the fact that the APIs, especially the higher level ones, haven’t evolved to match what has been happening in the device — and more recently Linux Kernel layers. With the right set of APIs, Direct I/O is the new black.&lt;/p&gt;
&lt;p id=&quot;9d3a&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Newer devices like the newest generation of the Intel Optane just seal the deal. There is no scenario in which standard buffered I/O is undisputedly better than Direct I/O.&lt;/p&gt;
&lt;p id=&quot;db3c&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;For scans the performance of well-tailored Direct I/O-based APIs is simply far superior. And while Buffered I/O standard APIs performed 20% faster for random reads that fully fit in memory, that comes at the cost of 200x more memory utilization making the trade offs not a clear cut.&lt;/p&gt;
&lt;p id=&quot;3bd5&quot; class=&quot;hm hn en ho b hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie if ig ih ii ij dh fk&quot;&gt;Applications that do need the extra performance will still want to cache some of those results, and providing an easy way to integrate specialized caches for usage with Direct I/O is in the works for glommio.&lt;/p&gt;
</description>
<pubDate>Thu, 26 Nov 2020 15:40:35 +0000</pubDate>
<dc:creator>harporoeder</dc:creator>
<og:type>article</og:type>
<og:title>Modern storage is plenty fast. It is the APIs that are bad.</og:title>
<og:description>I have spent almost the entire last decade in a fairly specialized product company, building high performance I/O systems. I had the…</og:description>
<og:url>https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a</og:url>
<og:image>https://miro.medium.com/max/1200/1*v74E8E9ick4-rpiYZ2uFKA.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a?gi=c26b826f0766</dc:identifier>
</item>
<item>
<title>PHP 8</title>
<link>https://www.php.net/archive/2020.php#2020-11-26-3</link>
<guid isPermaLink="true" >https://www.php.net/archive/2020.php#2020-11-26-3</guid>
<description>&lt;div readability=&quot;37.368670886076&quot;&gt;
&lt;p&gt;&lt;strong&gt;PHP.RUHR 2020 – Web Development &amp;amp; Digital Commerce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Don't miss the seventh episode of one of the most outstanding PHP and web development conferences in Europe from &lt;strong&gt;Nov 4 to 6, 2020&lt;/strong&gt; in the stunning atmosphere of Germany's largest football stadium in &lt;strong&gt;Dortmund&lt;/strong&gt;, which is world famous for its legendary &quot;yellow wall&quot;.&lt;/p&gt;
&lt;p&gt;Nov 4 - Workshop Day&lt;br/&gt;Nov 5 - Conference day 1 + networking evening&lt;br/&gt;Nov 6 - Conference Day 2&lt;/p&gt;
&lt;p&gt;Our &lt;strong&gt;call for papers&lt;/strong&gt; is open until July 2020: &lt;a href=&quot;https://cfp.php.ruhr/&quot; target=&quot;_blank&quot;&gt;https://cfp.php.ruhr/&lt;/a&gt;&lt;br/&gt;Conference tickets will be available soon.&lt;/p&gt;
&lt;p&gt;This year's conference will be a very special one, because for the first time we will have a hybrid concept, which means that there will be visitors on site and there will be video streaming. Anyway, all participants will be able to get in touch with the speakers and with each other. Furthermore, there will be additional digital booths for sponsors.&lt;/p&gt;
&lt;p&gt;The conference is part of the Dortmund Digital Week #diwodo20 from Nov 2 to 6, 2020, which in 2019 attracted more than 6,500 visitors in total. For a whole week, there will be lots of talks and workshops on the latest trends and technologies in the field of digitization.&lt;/p&gt;
&lt;p&gt;Join us and visit Dortmund - the city and the surrounding Ruhr area are also known for their numerous tourist attractions.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 26 Nov 2020 15:14:45 +0000</pubDate>
<dc:creator>pow-tac</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.php.net/archive/2020.php</dc:identifier>
</item>
<item>
<title>For the first time in Europe, registrations for EVs overtook diesel</title>
<link>https://www.jato.com/in-september-2020-for-the-first-time-in-european-history-registrations-for-electrified-vehicles-overtook-diesel/?TrucksFoT&amp;utm_source=Benedict%27s+Newsletter&amp;utm_campaign=4ae5655276-Benedict%27s+newsletter+free&amp;utm_medium=email&amp;utm_term=0_4999ca107f-4ae5655276-70706881</link>
<guid isPermaLink="true" >https://www.jato.com/in-september-2020-for-the-first-time-in-european-history-registrations-for-electrified-vehicles-overtook-diesel/?TrucksFoT&amp;utm_source=Benedict%27s+Newsletter&amp;utm_campaign=4ae5655276-Benedict%27s+newsletter+free&amp;utm_medium=email&amp;utm_term=0_4999ca107f-4ae5655276-70706881</guid>
<description>&lt;ul&gt;&lt;li&gt;Volume of BEVs, PHEVs and HEVs made up one in four of the new cars registered in Europe in September&lt;/li&gt;
&lt;li&gt;Volkswagen Group was the biggest winner of the month, partly because of its new EVs&lt;/li&gt;
&lt;li&gt;The Volkswagen ID.3 has had an impressive start&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;2020 has been a turbulent year for the car market globally, and particularly in Europe. Although car registrations dropped by 29% during the first nine months of the year – to 8.54 million units –there are clear signs that Europe is all set for an electric revolution. In fact, according to JATO’s figures for September 2020, this revolution has already started.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jato.com/wp-content/uploads/2020/10/24.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-2002234&quot; src=&quot;https://www.jato.com/wp-content/uploads/2020/10/24-1024x518.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;518&quot; srcset=&quot;https://www.jato.com/wp-content/uploads/2020/10/24-1024x518.jpg 1024w, https://www.jato.com/wp-content/uploads/2020/10/24-300x152.jpg 300w, https://www.jato.com/wp-content/uploads/2020/10/24-768x388.jpg 768w, https://www.jato.com/wp-content/uploads/2020/10/24.jpg 1533w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JATO Dynamic’s data for 27 markets in Europe shows that the total number of electrified cars registered in September (encompassing pure electric, plug-in hybrids, full hybrids and mild hybrids) was higher than the number of registrations for diesel cars. For the first time in the modern era, alternative-fuelled-vehicles outsold one of the two internal combustion engine (ICE) types. This marks significant change – for just five years ago, diesel cars were a dominant player in Europe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EV growth makes history&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Whilst overall the market posted a timid growth of a mere 1.2% in September, to almost 1.3 million passenger cars, the mix by fuel type signals big differences in growth rates. Demand for gasoline and diesel cars shows double-digit drops compared to September 2019 while the volume of EVs increased by 139% to 327,800 units – a record in terms of both volume and market share. This is the first time that EVs have broken the 300,000 units monthly mark, and only the second time that they have counted for more than 20% of registrations.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jato.com/wp-content/uploads/2020/10/2.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-2002258&quot; src=&quot;https://www.jato.com/wp-content/uploads/2020/10/2-1024x573.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;573&quot; srcset=&quot;https://www.jato.com/wp-content/uploads/2020/10/2-1024x573.jpg 1024w, https://www.jato.com/wp-content/uploads/2020/10/2-300x168.jpg 300w, https://www.jato.com/wp-content/uploads/2020/10/2-768x430.jpg 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The fall of the diesel car&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At the same time, the diesel market share posted a record low, of only 24.8% in September. Exactly a decade ago, diesel cars comprised 50% of registrations, while the market share for EVs was below 1%.&lt;/p&gt;
&lt;p&gt;Felipe Munoz, Global Analyst at JATO Dynamics commented: “The shift from ICEs to EVs is finally taking place. Although this is largely down to government policies and incentives, consumers are also now ready to adopt these new technologies.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jato.com/wp-content/uploads/2020/10/3.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-2002282&quot; src=&quot;https://www.jato.com/wp-content/uploads/2020/10/3-1024x292.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;292&quot; srcset=&quot;https://www.jato.com/wp-content/uploads/2020/10/3-1024x292.jpg 1024w, https://www.jato.com/wp-content/uploads/2020/10/3-300x86.jpg 300w, https://www.jato.com/wp-content/uploads/2020/10/3-768x219.jpg 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This changing landscape is favoring some OEMs more than others. For example, the Volkswagen Group has successfully managed to overcome the diesel-gate scandal of 2015, to become a new protagonist in this chapter of vehicle electrification. Last month, the German car maker registered 40,300 electrified vehicles in Europe, becoming the second largest EV seller behind only Toyota – and its continued dominance from within the hybrid segment. “Like with its SUVs, Volkswagen Group arrived late to the EV boom, but its competitive products are catching up quickly, and it is now becoming a leader” Munoz said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The market landscape of hybrid vehicles&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Last month, hybrids and mild hybrids represented 53% of total EV registrations, with their volume growing by 124%. Toyota and Lexus dominated, as usual, with 32% market share – but further growth was driven by Ford, Suzuki, Fiat and BMW. In addition to the strong results of numerous Toyota models, volume was also boosted by the popular Ford Puma (69% of its volume corresponded to the mild-hybrid versions), the Fiat 500 and the Fiat Panda (whose hybrid version counted for 59% and 41% respectively).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jato.com/wp-content/uploads/2020/10/4.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-2002306&quot; src=&quot;https://www.jato.com/wp-content/uploads/2020/10/4-1024x952.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;952&quot; srcset=&quot;https://www.jato.com/wp-content/uploads/2020/10/4-1024x952.jpg 1024w, https://www.jato.com/wp-content/uploads/2020/10/4-300x279.jpg 300w, https://www.jato.com/wp-content/uploads/2020/10/4-768x714.jpg 768w, https://www.jato.com/wp-content/uploads/2020/10/4.jpg 1325w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Volkswagen is the leader of the BEV market&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pure electric car demand was led by Tesla, although its volume fell by 5%, while its closes rivals such as Volkswagen and Renault saw increases of 352% and 211% respectively. If we look across all car makers, then &lt;a href=&quot;https://fiatgroupworld.com/2020/10/29/the-volkswagen-id-3-is-already-europes-third-bestselling-ev/&quot;&gt;Volkswagen Group&lt;/a&gt; is now Europe’s top-selling BEV maker, ahead of Tesla. In September, Mercedes-Benz was the leader in the plug-in hybrid segment with 22% market share, followed by Volvo and BMW.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jato.com/wp-content/uploads/2020/10/5.jpg&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-2002330&quot; src=&quot;https://www.jato.com/wp-content/uploads/2020/10/5-1024x336.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;336&quot; srcset=&quot;https://www.jato.com/wp-content/uploads/2020/10/5-1024x336.jpg 1024w, https://www.jato.com/wp-content/uploads/2020/10/5-300x99.jpg 300w, https://www.jato.com/wp-content/uploads/2020/10/5-768x252.jpg 768w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Nov 2020 13:27:11 +0000</pubDate>
<dc:creator>Osiris30</dc:creator>
<og:type>article</og:type>
<og:title>In September 2020, for the first time in European history, registrations for electrified vehicles overtook diesel - JATO</og:title>
<og:description>Total number of electrified cars registered in September was higher than the number of registrations for diesel cars in Europe</og:description>
<og:url>https://www.jato.com/in-september-2020-for-the-first-time-in-european-history-registrations-for-electrified-vehicles-overtook-diesel/</og:url>
<og:image>https://www.jato.com/wp-content/uploads/2020/10/diesel_stop.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.jato.com/in-september-2020-for-the-first-time-in-european-history-registrations-for-electrified-vehicles-overtook-diesel/?TrucksFoT</dc:identifier>
</item>
<item>
<title>FrontPage: The Good, The Bad, and The Ugly</title>
<link>https://invisibleup.com/articles/33/</link>
<guid isPermaLink="true" >https://invisibleup.com/articles/33/</guid>
<description>&lt;img src=&quot;https://invisibleup.com/articles/33/thumb.png&quot; alt=&quot;FrontPage: The Good, The Bad, and The Ugly thumbnail&quot;/&gt;&lt;p class=&quot;notice&quot;&gt;PLEASE don't use FrontPage for modern web development! It's filled with security vulnerabilities and obsolete standards. The goal of this is not to convince you otherwise. The newest version came out almost two decades ago!&lt;/p&gt;
&lt;p&gt;Microsoft FrontPage. The mere mention of that name is making most (if not all) of you seasoned web devs groan. &quot;FrontPage was utter rubbish from dark ages of GeoCities&quot; you say. &quot;Everything it touched was ruined with horrific output and proprietary nonsense!&quot; And yes, it was.&lt;/p&gt;
&lt;p&gt;But... FrontPage as a concept. As a dream of what could have been, and a window into what &lt;em&gt;was&lt;/em&gt;. Letting the typical home user at the time create websites, express creativity, and conquer the world by storm, all without being forced to learn HTML or CSS or JavaScript... In that regard, FrontPage couldn't be beat.&lt;/p&gt;
&lt;p&gt;Let's talk about why Microsoft FrontPage was for a brief period of time the ultimate content creation tool of the Internet, and why it later fell from grace.&lt;/p&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;Before we can talk about goodness and ugliness, we need to talk about carphones and business meetings. Because this was 1994, when the Internet was still really new. At that point in time most internet chatter occured on Usenet groups (think something like Reddit) or BBS systems (think something like &lt;a href=&quot;https://invisibleup.com/articles/5/&quot;&gt;old AOL&lt;/a&gt;; example pictured below). If you needed buisness stuff, like stocks or the such, you had to log onto the BBS of whoever had what you needed. This was kind of a pain.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;A picture of a BBS (tilde.town) as of today&quot; src=&quot;https://invisibleup.com/articles/33/BBS.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Enter Randy Forgaard and Charles H. Ferguson. Ferguson, renowned computer industry consultant, contacted MIT graduate Forgaard (over carphone, in case you were wondering) to discuss starting a new, internet-based company.&lt;/p&gt;
&lt;p&gt;His idea was that many corporations such as the Dow Jones, Bloomberg, Apple, etc. were sinking millions into building their own, completely incompatible dial-in Internet services. Therefore, they should create a standardized, completely open server/client combo to replace all the independent efforts. This hopefully would reduce the cost of development for those corporations, and provide a market for growth by making buisnesses &lt;em&gt;want&lt;/em&gt; to have an Interent presence.&lt;/p&gt;
&lt;p&gt;The two decided to found their own company, Vermeer Technologies, Inc. A month later, still in the planning stages, they caught wind of the brand new World Wide Web out of CERN. It was decentralized, open, and even more robust than they were planning. It was just about perfect. The only issue was that it was rather a pain to make websites if you were just some lowly advertising manager or whoever. The web needed an authoring tool for websites.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage 1.0a, taken from WinWorldPC.com&quot; src=&quot;https://invisibleup.com/articles/33/FP-1.0.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So, somehow, they managed to hire many professional coders for no salary whatsoever to work on FrontPage. (Early start-up culture, perhaps?) Evidently it worked, as FrontPage was released (only!) a week behind schedule on October of 1995. By then the World Wide Web was exploding, with a 20% increase in sites &lt;em&gt;per month&lt;/em&gt;. FrontPage also managed to explode, receiving many awards and positive reviews. In fact, it was so good that Microsoft ended up buying them out. According to them, not only did it feel like a native Office application, it was perfect for their ongoing plan to become more internet centric.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage 97, taken from WinWorldPC.com&quot; src=&quot;https://invisibleup.com/articles/33/FP-97.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;FrontPage over the years got integrated into the Office suite and made a flagship product for Microsoft productivity products. By Office 2000, FrontPage had more Office integration than you should shake a stick at; nailing down the Office user interface and allowing imports and exports across the whole suite. There's... other stuff as well, but let's stay positive for now.&lt;/p&gt;
&lt;p&gt;I'll be covering FrontPage 2002, as that's the version I own, and the one I have the most experience with.&lt;/p&gt;
&lt;h2&gt;The Good&lt;/h2&gt;
&lt;p&gt;The interface... is (in my opinion) one of the best interfaces for any program ever. No hyperbole. I think only the other Microsoft applications of the era like PowerPoint and Visio can top it. I can &lt;em&gt;see&lt;/em&gt; why it won awards.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage's start screen with no webs open&quot; src=&quot;https://invisibleup.com/articles/33/FP-Start.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Like any other Microsoft Office XP program, there's the sidebar on the right with common tasks. What you'll probably want to do is, of course, make a new site.&lt;/p&gt;
&lt;p&gt;FrontPage's equivalent to &quot;projects&quot; are called &quot;Webs&quot;. These Webs contain the files (all your HTML, CSS, images, etc.) and preferences (such as which web server to sync up with or what compatibility settings to use) for that website.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage's template selector&quot; src=&quot;https://invisibleup.com/articles/33/FP-NewWeb.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Start by selecting a new &quot;Empty Web&quot;. Up pops a bunch of templates, including the &quot;Empty Web&quot; template. A bit odd, but sure.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;The &amp;quot;Personal Homepage&amp;quot; template in action&quot; src=&quot;https://invisibleup.com/articles/33/FP-Template.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you &lt;em&gt;were&lt;/em&gt; to choose a template, it would give you a pre-populated fill-in-the-blanks site ready for your words and pictures. It takes some of the layout work and design originality out of it, but that &lt;em&gt;is&lt;/em&gt; the purpose of a template after all. (Although, as a word of advice, &lt;em&gt;don't use these.&lt;/em&gt; They're rather awfully designed from a web standards point of view. You can see it barely fitting in my window there. Imagine that on a smartphone.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://invisibleup.com/articles/33/FP-BlankWeb.png&quot; alt=&quot;FrontPage open to a new blank web. Folder list and Views bar are visible.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Anyways, once you open your blank web, you get... nothing! (That's what you asked for, isn't it?) No worries. Really, if you think about it, it would be rather silly to start making a page off the bat. You see, FrontPage takes a &lt;em&gt;project oriented&lt;/em&gt; approach to things. While you easily &lt;em&gt;could&lt;/em&gt; just sit down and start banging stuff out, that's really not the way FrontPage wants you to go.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage Navigation editor with some pages created and linked up.&quot; src=&quot;https://invisibleup.com/articles/33/FP-NavView.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here's probably my favorite FrontPage feature: the Navigation editor. Here you create blank pages and link them together in a logical hierarchy. This closely resembles the process you'd usually take on paper when designing a website.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Navigation bar settings dialog&quot; src=&quot;https://invisibleup.com/articles/33/FP-Navbar.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;With this hierarchy, you can automatically create a navigation bar in all your pages that are properly linked. If you decide to make a new top-level page, for instance, every page on your site will be updated to feature that page. (To replicate that feature on this site, I had to use some pretty tricky template scripting with my custom Flask server. I'd vastly prefer something like this.)&lt;/p&gt;
&lt;p&gt;This feature is also nice because it forces you to &lt;em&gt;think about your site&lt;/em&gt;. You can't just sit down like it's Microsoft Word and bang out some pages. You need a coherent plan. Before you can even start, you need to sit down with your client/team/self and ask &quot;What do you want on your website?&quot; To most people it's obvious that you need a website. Everybody has a website. What's significantly less obvious is &lt;em&gt;what&lt;/em&gt; needs to be on the website. And FrontPage's web editor allows you to play around with hierarchies and layouts before commiting to anything.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;PowerPoint Slide Sorter mode&amp;quot;&quot; src=&quot;https://invisibleup.com/articles/33/PPT-SlideSorter.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;One thing that's intersting is that Word, PowerPoint and Access all (vaguely) follow a similar model. Word has the Outline editor, PowerPoint has the Slide Sorter mode (pictured above, showing an interactive game I made when I was 11), and Access, being a typical database program, requires you to declare your tables before you can work on them.&lt;/p&gt;
&lt;p&gt;What's even more interesting is that, with the exception of Access (which not many people used, mostly due to its cost and relative rarity), you were never &lt;em&gt;required&lt;/em&gt; to have a plan before starting. Most people I've seen use Word just do straight typing, or perhaps work off another document with an outline. But the option was there! One could do their outline &lt;em&gt;in their document&lt;/em&gt; and flesh out around that. Likewise with PowerPoint, as well.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Highlighted template include code&quot; src=&quot;https://invisibleup.com/articles/33/FP-TemplateInclude.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Another common task in web design is defining a &quot;template&quot; page where you fill all your content into. For example, every page on this site you're reading on now has the same header and footer, and every article has the same sort of thumbnail image at the top. That was all scripted using template features.&lt;/p&gt;
&lt;p&gt;FrontPage, being an Office product, supports templates. The implementation admittedly is &lt;em&gt;super&lt;/em&gt; janky, but it's there. You can include pages within other pages just fine, it's just a little tricky to set up. (FYI, Word, Excel, and PowerPoint do templates too. It's one of their lesser-known features, IMHO.)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Report view window&quot; src=&quot;https://invisibleup.com/articles/33/FP-Reports.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Another really neat feature: reports. Like a compiler in an IDE, FrontPage produces warnings, errors, and statistics for your site. At a glance I can view all broken links, orphaned pages, oversized images, etc. This is a &lt;em&gt;fantastic&lt;/em&gt; feature, something that modern web dev software just &lt;em&gt;doesn't&lt;/em&gt; have.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Hyperlinks view window&quot; src=&quot;https://invisibleup.com/articles/33/FP-Links.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In the same vein as the Reports, you can see at a glance what links to what. It's a lot like the call chart in a software development IDE. I can see quickly every site linked from any page (shown here is &lt;a href=&quot;https://invisibleup.com/articles/24/&quot;&gt;the Sonic R color fix article&lt;/a&gt;) and any subpages.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Tasks view, showing a task labeled &amp;quot;Write FrontPage article&amp;quot;&quot; src=&quot;https://invisibleup.com/articles/33/FP-Tasks.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Last feature, although this isn't nearly as useful in the year 2020. In the tasks view, you can put up a list of tasks that needs to be accomplished. Already that seems rather nice for keeping track of what you need to do. It's a lot like GitHub or GitLab's issue tracker, in a sense.&lt;/p&gt;
&lt;p&gt;However, if you connect to a server with FrontPage Web Extensions (I'll get to that...), you can share this task list with other people. You can (again, like an issue tracker) put up a task to be done by someone else and work on a task that somebody else put up. It's a &lt;em&gt;very&lt;/em&gt; nice feature for web development, but nowadays this is normally handled by source control providers like GitHub or GitLab.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;FrontPage editing the Sonic R color mod article&quot; src=&quot;https://invisibleup.com/articles/33/FP-Editor.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;And, of course, there's the webpage editor. This works almost exactly like Microsoft Word, with some web-flavored spice. You type words and they appear in the page. You make those words blue, they're blue. &lt;em&gt;That said&lt;/em&gt;, when you edit elements like that, it inserts an HTML 3.2 style &lt;code&gt;&amp;lt;FONT&amp;gt;&lt;/code&gt; tag instead of trying to match it to a CSS rule. There's ways around this, but you have to be very diligent in doing so. This is mostly just due to FrontPage being a product of its time, though.&lt;/p&gt;
&lt;p&gt;FrontPage is a program about planning, executing, and reviewing. Take the Navigation editor. You plan out the content of your site. You sketch up the layout. Then you reflect on if your layout matches your requirements. Or the Reports. Create content, check reports. Or the Tasks. Plan out what you need to do, do that, and then check if the task is complete. That, right there, is what makes FrontPage stand out and shine.&lt;/p&gt;
&lt;h3&gt;An Aside: Standards-Compliant Web Dev with FrontPage&lt;/h3&gt;
&lt;p&gt;Also, for the record, it &lt;em&gt;is&lt;/em&gt; possible to create clean, somewhat modern code with FrontPage. (And by that, I mean &quot;use CSS&quot; and &quot;don't require IE&quot;, not anything involving HTML5 or CSS3.) There's two things you need to do.&lt;/p&gt;
&lt;p&gt;The first thing you need to do is to set FrontPage's feature set to something more reasonable for the modern age. To do that, open any page and go to Tools → Page Options → Compatibility. Then make the form look like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Settings to fix FrontPage's IE reliance on Internet Explorer&quot; src=&quot;https://invisibleup.com/articles/33/FixFP.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Doing this removes Internet Explorer-specific code, obsolete web technologies and reliance on the FrontPage Server Extensions (which nobody runs anymore). Keep in mind this does disable a lot of features of FrontPage, but frankly that's probably for the better.&lt;/p&gt;
&lt;p&gt;The second thing you need to do is a bit more complicated. Pretty much, instead of using the formatting options in the toolbar, you need to create a stylesheet. Doing this allows for more cross-device compatibility and easier site-wide changes in the future.&lt;/p&gt;
&lt;p&gt;To create a stylesheet, go to File → New. Open the Page Templates and go to the Style Sheets tab. Select &quot;Normal Style Sheet.&quot; and press OK.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Stylesheet template dialog&quot; src=&quot;https://invisibleup.com/articles/33/FP-StyleTemplates.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You should now have a blank document with all the formatting options disabled. Go to Format → Style, and under &quot;List:&quot; select &quot;User-defined Styles&quot;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;List of page styles&quot; src=&quot;https://invisibleup.com/articles/33/FP-StyleList.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;From here, press &quot;New&quot;. When asked for a name, type the name of the element or the name of the class you wish to apply the style to. (It's a standard CSS selector, so all those rules apply.) From there, use the menu in the bottom-left to modify the style. Repeat until all styles are made.&lt;/p&gt;
&lt;p&gt;To use the style sheet in a page, go to that page and go to Format → Style Sheet Links. Click &quot;Add&quot;, select the style sheet, and press &quot;OK&quot;. Your page should be styled! (However, the built in &quot;Preview&quot; mode won't show them for some reason.)&lt;/p&gt;
&lt;p&gt;To give an element a class, select a chunk of text and look in the toolbar for the first dropdown menu. (It should say &quot;Paragraph&quot;, &quot;Header 1&quot; or the like.) Select the class you wish for your selection to have. Your selection should now have the style of that class.&lt;/p&gt;
&lt;p&gt;I will absolutely admit this is needlessly confusing, especially considering that CSS was supported by Microsoft as early as 1996's Internet Explorer 3, but at this point the &lt;code&gt;&amp;lt;COLOR&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;FONT&amp;gt;&lt;/code&gt; tags had yet to be deprecated.&lt;/p&gt;
&lt;h2&gt;The Bad&lt;/h2&gt;
&lt;p&gt;Remember how I said that Microsoft bought out Vermeer because it was &quot;perfect for their ongoing plan to become more internet centric&quot;? Let's talk more history.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;List of WebBots (now called Web Components) in Frontpage 2002&quot; src=&quot;https://invisibleup.com/articles/33/WebBots.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;When Vermeer FrontPage was released, it supported these &quot;plugins&quot; called WebBots. The idea behind WebBots was simple: you dragged them onto the page and you instantly got dynamic content such as a search page, registration, table of contents, etc. These &quot;WebBots&quot; were saved in the HTML produced by FrontPage as comments. On a &quot;standard&quot; web server, these Bots would do nothing. However, if you ran it on Vermeer's (and later Microsoft's) Personal Web Server, the WebBots came to life. In keeping with the open nature of the WWW, Vermeer released FrontPage Sever Extentions for all the popular web servers at the time, such as NCSA, CERN, and Apache.&lt;/p&gt;
&lt;p&gt;Before I go further, let's talk about Internet Explorer and Microsoft. To put it lightly, Microsoft was determined to win over the Internet. Back around ~1996, Internet Explorer 3 was out. It was doing &lt;em&gt;okay&lt;/em&gt;, with about 20% marketshare, but it was still losing massively to Netscape Navigator. So, in order to push adoption numbers, Microsoft included the Windows Desktop Update with Internet Explorer 4.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Windows Desktop Update before/after&quot; src=&quot;https://invisibleup.com/articles/33/DesktopUpdate.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;What this update did was, more or less, replace a good chunk of the Windows interface and API with Internet Explorer guts. While it was advertised as &quot;The internet the way &lt;em&gt;you&lt;/em&gt; want!&quot; and &quot;Brand new features for Windows Explorer!&quot;, it also served as a front to push IE adoption.&lt;/p&gt;
&lt;p&gt;Even if you disabled the Desktop Update, some programs still required that IE4 be on the system. Why? One of the things IE4 did was provided a convenient API to add an embedded webpage to any Windows application. It also provided features such as HTML Help and more common controls for your programs. The logic behind this was to provide a unified API and consistent featureset for adding Internet features to any Windows application.&lt;/p&gt;
&lt;p&gt;Unfortunately, they did this in such a way that using non-IE browsers (primarily Netscape Navigator) felt alien. Why use the weird, external program when you can use the one that looks and acts &lt;em&gt;just like&lt;/em&gt; Windows Explorer and Windows Help and the rest of the OS. Plus, a lot of new computer owners haven't even &lt;em&gt;heard of&lt;/em&gt; Netscape, and there really was no reason for them to investigate. (The strange thing is, &lt;a href=&quot;http://www.gargaro.com/test.html&quot;&gt;in usability testing&lt;/a&gt; people found Netscape to be &lt;em&gt;better&lt;/em&gt; than IE!)&lt;/p&gt;
&lt;p&gt;In addition, to hasten Netscape's death, Internet Explorer added some unique features. The most well-known of these are ActiveX controls, added in IE3. ActiveX controls were programs put on a web server and downloaded by the web browser for rich dynamic content. Problem was, ActiveX controls only worked on Internet Explorer, and were typically programmed for Windows 9x. This locked out a good chunk of the internet to Internet Explorer running on Microsoft Windows. There was also VML (vector graphics), various CSS attributes, VBScript (hate JavaScript? How about Visual Basic?), etc. All of this eventually cumulated in &lt;a href=&quot;https://en.wikipedia.org/wiki/United_States_v._Microsoft_Corp.&quot;&gt;a 2001 anti-trust lawsuit against Microsoft&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What's my point here? Microsoft FrontPage extensively used these Microsoft technologies. You could, if you wanted, make all the scripts run on VBScript, and therefore exclusively Internet Explorer. You could draw vector graphics via AutoShapes, and it'd only be vectorized in Internet Explorer. (Although, to be fair, SVG [the only other alternative] wasn't finalized until 2001.) It could embed webpages generated by Microsoft Office, which only rendered properly in Internet Explorer. It could include video, which only worked with Windows Media Player.&lt;/p&gt;
&lt;p&gt;Of course, you had to go out of your way to do all these things. The problem was, however, there was often no Netscape alternative for many of these features, leaving the program's features crippled if you want compatibility. But wait, there's more!&lt;/p&gt;
&lt;p&gt;Most of the WebBots required the FrontPage extentions. While the UNIX server versions still &lt;em&gt;existed&lt;/em&gt; and were still updated, they weren't very good. &lt;a href=&quot;http://insecure.org/sploits/frontpage.server_side_apache_extensions.html&quot;&gt;The Apache version had gaping security holes&lt;/a&gt;, for one. Evidently Microsoft was trying as hard as it could to shove these under the carpet, as in the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc767983.aspx&quot;&gt;FrontPage Server Extensions 2002 Installation documentation&lt;/a&gt;, which barely acknowledged UNIX. (In fact, to get the Server Extensions today, you have to go to &lt;a href=&quot;http://www.rtr.com/fpse/Win2008R2/index.htm&quot;&gt;some weird 3rd party website&lt;/a&gt; (endorsed by &lt;a href=&quot;https://www.iis.net/learn/publish/frontpage-server-extensions/installing-the-frontpage-server-extensions-on-iis&quot;&gt;an official Microsoft website!&lt;/a&gt;) and purchase it. For money. Why.)&lt;/p&gt;
&lt;p&gt;Plus, on top of that, there were some features that REQUIRED Microsoft's IIS web server. The biggest one of these was database integration. Database-connected pages were served with ASP, a proprietary Microsoft technology. And, if you were dealing with any sort of user interaction of dynamic content, databases were not optional. Plus, on top of that, the only non-Microsoft database it supported was Oracle's. Plus, on top of &lt;em&gt;that&lt;/em&gt;, there was a one-click option within FrontPage to create a database connection to any Microsoft Excel workbook or Access database. Plus, on top of &lt;em&gt;THAT&lt;/em&gt;, some of the collaboration features only worked if a Microsoft SharePoint server was installed.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Overview of Microsoft's plan for computer domination. It's the paragraph above in visual form plus some.&quot; src=&quot;https://invisibleup.com/articles/33/MsWorldDomination.svg&quot;/&gt; Pictured: Microsoft's roadmap to world domination.&lt;/p&gt;
&lt;p&gt;FrontPage, although a fantastic product, was little more than a pawn in Microsoft's toolbox. And all this worked. Immensely. Best Buy of all places had a FrontPage site in 2000, along with &lt;a href=&quot;https://web.archive.org/web/20001018091233/http://microsoft.com/frontpage/gallery.htm&quot;&gt;many, many others&lt;/a&gt;. Heck, they even managed to get &lt;a href=&quot;https://web.archive.org/web/20001018043143/http://officeupdate.microsoft.com/services/yahoo/yahoocohome.htm&quot;&gt;GeoCities&lt;/a&gt;, &lt;a href=&quot;https://web.archive.org/web/20001018043143/http://officeupdate.microsoft.com/services/Angelfire/Angelfirecohome.htm&quot;&gt;AngelFire&lt;/a&gt;, Tripod, and Talk City to run the Frontpage Server Extentions. FrontPage was taking the Internet by storm. And by 2002, Internet Explorer reached 96% market share (compared to 1997, which was more around 18%).&lt;/p&gt;
&lt;p&gt;And you know what the best part about all this is? Because Microsoft technolgies were so prominent while companies were creating Internet sites and corporate Intranets (especially around the Y2K fiasco), they're stuck. Stuck for a very, very long while. For years is was common for internal corporate sites to require some form of Internet Explorer due to being based on Microsoft server technology. &lt;a href=&quot;https://redd.it/4bc4ri&quot;&gt;Japan's government &lt;em&gt;switched to&lt;/em&gt; ActiveX-based technology in 2016&lt;/a&gt; for some reason. And as far as consumers go, we're still stuck trying to transition away from Windows programs, Office documents, and program development with Visual Studio. They were just so &lt;em&gt;prevalent&lt;/em&gt; at the time when everyone was getting their first PC.&lt;/p&gt;
&lt;p&gt;The only reason you probably aren't viewing this on Internet Explorer is because of one piece of software: Mozilla Firefox. It was the first popular web browser since Netscape to provide things IE didn't have, such as tabbed browsing and a download manager. (There was Opera, too, but you had to pay money for that.) Evidently, &lt;a href=&quot;http://www-archive.mozilla.org/press/mozilla-2005-10-19.html&quot;&gt;people really wanted Firefox.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rise of Firefox made the use of Microsoft servers for public internet use simply not worth the several hundered dollar license cost, leading to the increased adoption of free Linux-based server software. Having served it's purpose of pushing the increasingly useless IIS, Windows NT Server and MS SQL Server trio, along with it's HTML output becoming increasingly dated (this is speculation; Microsoft hasn't given an official reason), &lt;a href=&quot;https://web.archive.org/web/20061116063501/http://www.microsoft.com/office/frontpage/prodinfo/futureoffp.mspx&quot;&gt;FrontPage was discontinued in 2006&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The Ugly&lt;/h2&gt;
&lt;p&gt;Despite being discontinued for that last 13 years, producing awful HTML by today's standards, and totally being a front for Microsoft's domination of the computer industry, &lt;strong&gt;FrontPage is still the one of the best programs for the inexperienced user to produce webpages&lt;/strong&gt;. Yes, seriously. FrontPage is &lt;em&gt;absolutely not&lt;/em&gt; a program you should be using to produce websites in the year 2020. But, strangely enough, no other program had the easy user interface linked to great power that FrontPage had. All other offerings either require you to know a thing or two about HTML, or simply haven't been updated in years.&lt;/p&gt;
&lt;h3&gt;Microsoft Expression Web&lt;/h3&gt;
&lt;p&gt;The recommended alternative Microsoft gave to replace FrontPage is it's own Expression Web. I tried it out (it's free, mostly because it's been discontinued since 2012) and... and it's literally just FrontPage drowned in an oppressive coat of Visual Studio-inspired paint.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot of MS Expression Web&quot; src=&quot;https://invisibleup.com/articles/33/MSExpr.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There's pretty much 4 key differences here between FrontPage and Expression Web.&lt;/p&gt;
&lt;p&gt;#1: CSS. You can't avoid it. No more &lt;code&gt;&amp;lt;FONT&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;COLOR&amp;gt;&lt;/code&gt; tags for you. Instead every time you change the font or whatever it makes a new CSS class for you. I don't &lt;em&gt;love&lt;/em&gt; that, and I would have preferred inline styles, but whatever.&lt;/p&gt;
&lt;p&gt;#2: They're pushing ASP.NET. Hard. Remember WebBots? They're gone. You know what you get instead? ...Pretty much nothing! No hit counters or navigation bars for you. What you &lt;em&gt;do&lt;/em&gt; get are things like CustomValidators and DataLists that I honestly don't know how to use. Also, as the cherry on top, ASP.NET support on Linux servers was &lt;em&gt;very&lt;/em&gt; hack until the recent development of .NET Core. One could say this goes back to that whole &quot;world domination&quot; thing, but this is a frankly puzzling product.&lt;/p&gt;
&lt;p&gt;#3: They got rid of half the web management features. I mean, Webs still &lt;em&gt;exist&lt;/em&gt;. You can still generate reports and view hyperlinks and publish to servers and all that. But there's two key features missing: the navigation editor and the collaboration features. I get the collab might be hard with the removed requirement for FrontPage Server Extensions, but it was &lt;em&gt;useful&lt;/em&gt;, to say the least. Also, they got rid of the navigation editor, and therefore the navigation bars in the pages. This leaves you in that weird stone age of making links manually and hoping they don't break or get outdated.&lt;/p&gt;
&lt;p&gt;Lastly #4: The user interface is not very good. At all. Compared to FrontPage, the layout of the UI here seems absolutely illogical. You have junk on both sides plus the bottom that you probably don't care about. (Folder View and CSS Properties can easily be folded into other panes, for one.) The CSS Manager, compared to FrontPage's Format → Style menu, makes little sense. Automatic styling is easy; just hit the format buttons and you'er done. Actually giving a tag a particular style is unreasonably difficult, requiring you to manually set the class in the Tag Editor. Also, like FrontPage, making a site-wide stylesheet is harder than it has any right to be. The Site Manager is a bit weird too, as the giant sidebar from FrontPage 2000+ has been replaced with tiny tabs at the bottom. And, for no logical reason, it shares all the same sidebars as the page editor despite being a completely seperate thing.&lt;/p&gt;
&lt;p&gt;Overall, my quick review is this: It's certainly easier to get a hold of than FrontPage and it produces much better HTML. Unfortunately the user interface seems to have been hit by a bus of Visual Basic enthusiasts, losing some key features on the way and gaining some weird ASP.NET server things nobody would ever use. It's confusing, designed for two audiences at once (pro backend web-dev and complete novice) and honestly the interface alone makes FrontPage better. Also really, besides more reliance on CSS and ASP.NET, this doesn't add a whole lot of new features compared to FrontPage. If anything it just removes features.&lt;/p&gt;
&lt;h3&gt;Dreamweaver&lt;/h3&gt;
&lt;p&gt;Of course, there are non-MS alternatives. There is also Adobe's (formerly Macromedia's) Dreamweaver. Dreamweaver, unlike Microsoft's offerings, is still being actively developed. You can buy it for $20/month from Adobe. (Assuming, of course, you want nothing else from them.)&lt;/p&gt;
&lt;p&gt;I'll be looking at the 2016 version of Dreamweaver here, as that's the version I used when recording myself using it in....2016. (This article has been on the backburner for a &lt;em&gt;while&lt;/em&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot of Dreamweaver editing a example site.&quot; src=&quot;https://invisibleup.com/articles/33/DW-Inviz.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Dreamweaver is an interesting little thing. Certainly, compared to FrontPage, I'd use Dreamweaver any day. It actually produces websites that makes sense in the current year. It allows you to create media queries for mobile responsiveness and generally produces cleaner code. If you know HTML and CSS and like taking shortcuts, Dreamweaver is perfectly and totally okay. But, unfortunately, the interface is &lt;em&gt;still&lt;/em&gt; lacking compared to FrontPage for the inexperienced user. (Yes, I'm still serious.)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Dreamweaver showing an example website&quot; src=&quot;https://invisibleup.com/articles/33/Dreamweaver.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Here's an example. I want to make a paragraph and make it highlighted yellow. Seems easy, right? Well... Making the paragraph is easy enough. There's an &quot;insert&quot; pane at the top right. Click that, click paragraph, drag where you want it to go, done. Plus, you can rearrange things with the DOM editor. Going well so far, right?&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;View of the obscure dropdown that switches between Live and Design mode&quot; src=&quot;https://invisibleup.com/articles/33/DW-LiveSel.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you actually start typing, you'll notice the interface is &lt;em&gt;really&lt;/em&gt; laggy. Like, you type something, and it shows up 5 seconds later. Turns out by default Dreamweaver shows your site in &quot;Live&quot; mode, which I guess rerenders the entire page every time you edit it or something. What you have to do is switch it to &quot;Design&quot; mode, which is almost identical but has different features and runs on a different rendering engine. I guess &quot;Live&quot; is an interactive version of the &quot;Preview&quot; mode from FrontPage.&lt;/p&gt;
&lt;p&gt;So, let's actually color that paragraph. If you look around, there's a stunning lack of color options. The closest thing is the CSS Designer, which is just begging for you to add a source. So, let's say you know what a CSS is and decide to do that. All that happens is that the Sources panel now has a name, which you cannot interact with. Also, a STYLE tag appears in the DOM. This does not help you. At all.&lt;/p&gt;
&lt;p&gt;So you experiment some more. Let's right click on that paragraph. Assuming you changed it to Design mode instead of Live mode (a very easy thing not to do), you get two seemingly relevant menu options, Font and Style. Alright, we're getting places! ...Except &quot;Font&quot; just changes fonts (makes sense) and &quot;Style&quot; lets you pick between Bold, Underline, and Italics. Great. We've gone nowhere. There's also a menu called &quot;CSS Styles&quot;. The only usable option is &quot;attach a stylesheet&quot;. Doing so does nothing.&lt;/p&gt;
&lt;p&gt;Alright. Whatever. I needed a custom font anyways. Right click, select a font, and...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Suddenly I can make a new CSS Selector! Whatever that is!&quot; src=&quot;https://invisibleup.com/articles/33/DW-CssSelector.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So, okay. I guess I can do CSS now? Uh, sure. Let's say I want to make only this certain &quot;p&quot; tag yellow. Maybe I'll check that CSS Designer thing again. There's a little bar labeled &quot;Properties&quot;. Let's click on that. All of a sudden, I get... a single field where I'm supposed to type in the name of the CSS attribute and it's value. Pretend I don't know any CSS attributes. Pretend I barely know what CSS is. Not very useful. ...But it is.&lt;/p&gt;
&lt;p&gt;To &quot;fix&quot; the CSS Designer, you have to &lt;em&gt;uncheck&lt;/em&gt; the tiny checkbox labeled &quot;Show Set&quot; on the Properties sub-panel titlebar. &lt;em&gt;Then&lt;/em&gt; can you edit the styles and make the background yellow. Can I just say that was ridiculously convoluted? Because it was.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;The style editor dialog that you can only access via the hidden Beginner mode&quot; src=&quot;https://invisibleup.com/articles/33/DW-StyleEditor.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Oh. And to set multiple things to the same style, you need to select the element you want to change the class of, right click on the DOM breadcrumb at the bottom, and select a class in the &quot;Set Class&quot; submenu. Frankly I'm not even sure how I figured that out. Also, if you stumble through the &quot;Window&quot; menu, you can set the Workspace Layout to &quot;Beginner&quot;. This places a little bar at the bottom with a bunch of simple formatting stuff and a nice Rule Editor. &lt;em&gt;That would have been kind of nice as the default, don't you think?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So styling is incredibly difficult. Fine. Let's tone it down a bit. Let's say I want to link to &lt;a href=&quot;https://invisibleup.com&quot;&gt;my website&lt;/a&gt;. Seems easy enough. Right click, &quot;Make Link&quot;, and...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Suddenly a file selection dialog!&quot; src=&quot;https://invisibleup.com/articles/33/DW-FileSelector.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Well, alright. Let's just type the address into the filename box. I remember having to do this with stuff like PowerPoint back in the day. So, we type in the address, hit OK, and...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;It links to a temporary document on my computer!&quot; src=&quot;https://invisibleup.com/articles/33/DW-IGiveUp.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I'm done. Dreamweaver is utterly broken from an end-user standpoint. Dreamweaver is only an usable project if you already know HTML and CSS to the point where you don't need Dreamweaver.&lt;/p&gt;
&lt;h3&gt;Adobe Muse&lt;/h3&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot of Adobe Muse from Adobe's website&quot; src=&quot;https://invisibleup.com/articles/33/muse.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;One more program. Adobe Muse. For various reasons I can't get my hands on a trial copy, so instead I'd recommend you &lt;a href=&quot;https://youtu.be/8eDuupJ9Uus&quot;&gt;check out this walkthrough/tutorial video&lt;/a&gt;. You'll notice it's pretty much exactly what I'm looking for. It's got a Web hierarchy editor. It's got &quot;Widgets&quot; for navigation bars and the like. It does collaboration via the Creative Cloud. It uses CSS and thrives on templates and pre-planning. What's wrong?&lt;/p&gt;
&lt;p&gt;The answer: &lt;em&gt;Vendor lock-in&lt;/em&gt;. You see, like Dreamweaver, you needed to shell out $20/mo to use Muse. If you don't, you can't use Muse. Seems simple. Let's just say you forget to pay for Muse for a month. Let's also say you &lt;em&gt;need&lt;/em&gt; to update your website, &lt;em&gt;today&lt;/em&gt;. If you somehow lost your FrontPage install, you can still &lt;em&gt;edit&lt;/em&gt; the website with something like Notepad, push it to your server and the FrontPage Server Extensions should kick in and take care of the WebBots. (And if they don't, it won't be the end of the world as FrontPage caches the contents of WebBots in case of situations like this.) With Muse, well...&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;DIVs. DIVs everywhere&quot; src=&quot;https://invisibleup.com/articles/33/Muse-Output.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;That's a snippet from the official Adobe Muse website, circa 2016. You &lt;em&gt;cannot&lt;/em&gt; edit this without Muse. It is incomprehensible what you're looking at here as it's just random DIV elements with Muse-specific attributes and classes shoved in. If you, say, wanted to add a new section to the page using a text editor, you're SOL. This mess of tags also makes a lot of things like device-specific stylesheets or handicap accesibility impossible. (Need proof? Try printing the Muse website. From my experience, it was a completely white sheet.)&lt;/p&gt;
&lt;p&gt;Unsurprisingly in retrospect, &lt;a href=&quot;https://helpx.adobe.com/muse/kb/adobe-muse-end-of-service.html&quot;&gt;Adobe Muse has been discontinued&lt;/a&gt;. Thankfully, it's still possible to use the Muse software even if it's discontinued. Unfortunately, doing so requires the &quot;Creative Cloud All Apps Subscription&quot;, which is very expensive. Even worse, if you ever wanted to switch &lt;em&gt;from&lt;/em&gt; Muse to another product, you'd have to completly rebuild your website as there's, again, no way to edit a Muse site without Muse and no way to export Muse layout and style information to usable CSS. (The funny thing is, I wrote most of this section &lt;em&gt;before&lt;/em&gt; this happened, and I had a big warning that this was &lt;em&gt;going&lt;/em&gt; to happen.)&lt;/p&gt;
&lt;h3&gt;Wix, Weebly, Squarespace, etc.&lt;/h3&gt;
&lt;p&gt;On that note, there's also a new trend with Software-as-a-Service web builder sites such as Weebly, Wix, and Squarespace. These claim to let the average layperson develop their own webpage. The problem with these is like Muse but on steroids. Not only must you &lt;em&gt;only&lt;/em&gt; edit your site through their web app, they &lt;em&gt;own&lt;/em&gt; your site. I mean, you still own the copyright for your words and pictures and stuff, but the existence of your site on the Internet is totally dependent on the service provider.&lt;/p&gt;
&lt;p&gt;Hypothetically, say one of them went bankrupt and was unable to host websites. Your site is &lt;strong&gt;gone&lt;/strong&gt;. Period. They might have a backup, but there's no way you'd easily be able to migrate it to anything else. It's in a completely different and totally closed format! In addition, you're at the whim of Weebly/Wix/whoever as far as features go, sometimes needing to pay money to &quot;unlock&quot; more. (For instance, with WiX you need to pay at least $10/mo. if you want to remove ads, and $17/mo. just to have an online store.) At least with FrontPage you had the ability to create your own WebBots if you needed more functionality. (Granted most people probably would have paid for them, but at least it's not a montly fee.)&lt;/p&gt;
&lt;p&gt;If you don't think any of these are problems, I'd like to introduce to to GeoCities. It used to be a simple web host with a couple megabytes of storage. Then Yahoo bought it. It gained some &quot;cool&quot;, Geocities-only features such as it's Website Builder and guestbooks and some fancy PHP schenanigans you could add yourself. Then, in 2009, GeoCities faced a very sudden and very &lt;em&gt;terminal&lt;/em&gt; fate. Wix, Weebly, Squarespace and the rest will eventually die. Geocities was king of the 90's, and now look at it. Please, don't put all your eggs into one basket.&lt;/p&gt;
&lt;p&gt;If you look out for them, you'll find a dozen more website editors. These are either heavily locked down like Muse, Weebly, Wix, etc. or glorified text editors capable of not much more than syntax highlighting and having a couple of shortcut buttons for common HTML tags.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Alright. So what if the secretary can't produce the company webpage? Who cares? Just hire a web design firm who knows what they're doing, right? Here's the thing: I do agree that you should probably get a web design firm that knows what they're doing if you're dealing with, say, financial transactions, personal information, massive amounts of data, or really complicated server stuff. But that's no reason to exclude the other 95% of people.&lt;/p&gt;
&lt;p&gt;The Internet is a really cool thing, in my personal opinion. And it's full of &lt;em&gt;tons&lt;/em&gt; of creative folks. Want proof? See Tumblr, YouTube, Twitter, Soundcloud, &lt;a href=&quot;https://invisibleup.com/links/&quot;&gt;my links page&lt;/a&gt;, etc. But locking up the Internet to some predefined painted corners is a bad thing. &lt;a href=&quot;https://invisibleup.com/articles/31/&quot;&gt;I've discussed this in great detail in one of my previous articles.&lt;/a&gt; But what if you want to do something different? Take this website. Sure, it &lt;em&gt;could&lt;/em&gt; be a WordPress blog and it &lt;em&gt;would&lt;/em&gt; be just fine.&lt;/p&gt;
&lt;p&gt;But say, perhaps, I want to start a range of interactive programming tutorials on this site. Say I'm teaching you how to &lt;a href=&quot;https://invisibleup.com/articles/18/&quot;&gt;make a Game Boy game&lt;/a&gt;, and I want to have a code-along section. On the side there would be text explaining how a bit of code works, and in a little textbox &lt;em&gt;you&lt;/em&gt; could experiment with that! And you can't continue until you've mastered the concept. (For an example of this sort of thing, see the excellent &lt;a href=&quot;https://thebookofshaders.com/&quot;&gt;Book of Shaders website&lt;/a&gt;.) If I wanted to do that on my hypothetical WordPress site, I'd be out of luck. What I need and what WordPress provides are two entirely different things.&lt;/p&gt;
&lt;p&gt;Or say there's a musician who wants to make a website. (For no particular reason, let's say &lt;a href=&quot;https://youtu.be/mbFD7qYx3VI&quot;&gt;Dennis DeYoung circa 1983&lt;/a&gt;, rocking that pink suit.) He doesn't want &lt;em&gt;just&lt;/em&gt; a cookie-cutter Bandcamp page. Maybe he's feeling experimental. Who said he can't have a video of a live performance next to a blurb of the inspiration for the song and a link to iTunes? Or some &lt;a href=&quot;https://musiclab.chromeexperiments.com/&quot;&gt;unique interactive experience&lt;/a&gt; meant to drum up interest? Bandcamp. That's who.&lt;/p&gt;
&lt;p&gt;Or say a gardner from Alabama wakes up tomorrow with a very sudden urge to run a marathon. Several hundred marathons. After doing that and not dying, he wants to cash in on his publicity. So he makes this cool website with this map that tracks everywhere he's ran, how far, how fast, etc. And then he could have tips on endurance running and cool spots around America in a newsletter or a blog or something. (Not that &lt;a href=&quot;https://www.imdb.com/title/tt0109830/&quot;&gt;this &lt;em&gt;particular&lt;/em&gt; gardner from Alabama&lt;/a&gt; would bother, but maybe his fans would.)&lt;/p&gt;
&lt;p&gt;Okay, enough absurd hypotheticals. Point is, the Internet is the land of innovation. Throwing the 95% of the population who doesn't know web design and &lt;em&gt;never will&lt;/em&gt; blocks out a lot of creative uses for the internet. Right now, poor old Dennis DeYoung doesn't really &lt;em&gt;have&lt;/em&gt; a place to showcase his music short of getting a Wix/Weebly/whatever page or hiring a web designer. Forrest Gump right now is stuck with Tumblr at best, which has had it's fair share of issues lately.&lt;/p&gt;
&lt;p&gt;You look at something like &lt;a href=&quot;https://neocities.org&quot;&gt;Neocities&lt;/a&gt; and you see endless, totally freeform creativity. You got &lt;a href=&quot;https://mlpfim.neocities.org/&quot;&gt;My Little Pony episode trackers&lt;/a&gt;, &lt;a href=&quot;https://exo.pet&quot;&gt;a bombastic Y2K homage site&lt;/a&gt;, &lt;a href=&quot;https://mrdoob.neocities.org/&quot;&gt;a guy who likes experimenting with cool JavaScript stuff&lt;/a&gt;, &lt;a href=&quot;https://town.neocities.org&quot;&gt;very experimental and artsy sites&lt;/a&gt;, etc. The thing is, all of those people knew HTML and CSS to some degree. Imagine the people out there that want to make stuff like this but &lt;em&gt;only&lt;/em&gt; know art or music or the such.&lt;/p&gt;
&lt;p&gt;What I'm saying is that we need to a simple way for any person to create anything and put it on the Internet. It is not enough to be stuck between the extremes of &quot;no control&quot; and &quot;hideously expensive and time consuming&quot;. And, as silly as this sounds, Microsoft/Vermeer FrontPage was &lt;em&gt;almost&lt;/em&gt; that thing. It let multiple people work on a single site with planning utilities and WYSIWYG editing. Problem is, it's stuck in the 90's. FrontPage never produced &quot;good&quot; websites; it just produced something on par with an old GeoCities fansite. (Also it's owned by Microsoft and totally dead, which doesn't help matters.)&lt;/p&gt;
&lt;p&gt;We need a new FrontPage. A FrontPage that uses HTML5 and CSS3 and modern JavaScript and cool PHP stuff. A FrontPage that follows modern design principles like semantic HTML and powerful CSS styling. A FrontPage that is totally open, totally not a pawn in world domination schemes, totally not locked down to one greedy vendor, and totally not abandoned. A FrontPage that outputs usable, sensical, and simple HTML and CSS. A FrontPage that integrates with version control software like Git and planning programs like KPlan and communications programs like email or IRC to allow planned, meaningful collaboration. A FrontPage that lets people write and share useful and versatile WebBots like people do WordPress plugins today. (Probably using JavaScript instead of custom server-side plugins, though.)&lt;/p&gt;
&lt;p&gt;In summary, &lt;strong&gt;we need a FrontPage that lets the incredibly talented common folk retake the internet with creativity and originality.&lt;/strong&gt; Because as nice as Facebook and Twitter are, let's face it, we all kind of miss the old days of lovably terrible hand-crafted sites.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
</description>
<pubDate>Thu, 26 Nov 2020 10:53:28 +0000</pubDate>
<dc:creator>pmlnr</dc:creator>
<og:title>FrontPage: The Good, The Bad, and The Ugly</og:title>
<og:type>website</og:type>
<og:description>Microsoft FrontPage has its thorns, but don't discount the fact that those thorns are attached to a rose.</og:description>
<og:image>https://invisibleup.com/articles/33/thumb.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://invisibleup.com/articles/33/</dc:identifier>
</item>
<item>
<title>Your Move, iPad</title>
<link>https://beckyhansmeyer.com/2020/11/25/your-move-ipad/</link>
<guid isPermaLink="true" >https://beckyhansmeyer.com/2020/11/25/your-move-ipad/</guid>
<description>&lt;p&gt;Hear that? It’s the sound of Mac fans. No, not your shiny new M1 Mac’s fans—chances are, you’ll never hear those—but rather, the sound of &lt;em&gt;excitement&lt;/em&gt; rippling through the Mac community. This is something big. Really big. Now, I’m only 33, but someday when I go full fuddy-duddy I will speak of this: the great Intel/Apple Silicon transition. The beginning of a new era at Apple.&lt;/p&gt;
&lt;p&gt;All that sounds dramatic, of course, but it’s interesting to trace all of the different paths that led us to this point. The A-Series chips, the introduction of Metal, rapid machine learning gains, the gradually degrading repairability scores as components became more integrated, the Secure Enclave, a new super fast emulation layer, new unified memory architecture, and 5nm process… years and years of work have now come to fruition with the first Apple Silicon chips for Mac. And our minds are blown.&lt;/p&gt;
&lt;p&gt;Suddenly, we’re handed a thin, entry-level fanless laptop that performs better than almost every other Mac computer out there, and a low-end MacBook Pro and Mac Mini that make current Mac Pro owners sweat and clutch their wheels. So many questions abound. What new hardware designs will these gains make possible? What on earth does Apple have in store for its high-end Macs? Will anyone else even be able to compete? It’s an exciting time to be a Mac lover, but, surprise: this post isn’t really about the Mac. It’s about the iPad.&lt;/p&gt;
&lt;p&gt;There’s no question that Apple has struggled to craft a cohesive, compelling narrative for the iPad. For a long time, there seemed to be a distinct lack of product vision. Everyone likes to speculate over what role Steve Jobs ultimately intended the iPad to have in people’s lives, but not only is that pointless, it’s also irrelevant. We don’t need Steve to tell us what the iPad is good for. We know what it’s good for, and we can easily imagine what it &lt;em&gt;could&lt;/em&gt; be good for, if only Apple would set it free.&lt;/p&gt;
&lt;p&gt;Just as Apple left us with great expectations for its Pro Mac line-up, the latest iPad Air also raises the bar in new and interesting ways. The Air served as sort of an appetizer for the new M1 chips, while also receiving a generous trickle-down of features from the iPad Pro, including USB-C and support for the latest keyboard and Pencil accessories. There have been rumors of new mini-LED displays for the next-gen iPad Pros, but it’s going to take a lot more than new display tech to set the Pros apart.&lt;/p&gt;
&lt;p&gt;Francisco Tolmasky (&lt;a href=&quot;https://twitter.com/tolmasky/status/1330033394349125642?s=20&quot;&gt;@tolmasky&lt;/a&gt;) recently tweeted:&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot;&gt;
&lt;p&gt;“A sad but inescapable conclusion from the impressive launch of the M1 is just how much Apple squandered the potential of the iPad. The iPad has had amazing performance for awhile, so why is the M1 a game changer? Because it’s finally in a machine we can actually &lt;em&gt;do things on&lt;/em&gt;.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Francisco is right: Power and performance aren’t the bottleneck for iPad, and haven’t been for some time. So if raw power isn’t enough, and new display tech isn’t enough, where does the iPad go from here? Will it be abandoned once more, lagging behind the Mac in terms of innovation, or will Apple continue to debut its latest tech in this form factor? Is it headed toward functional parity with the Mac or will it always be hamstrung by Apple’s strict App Store policies and seemingly inconsistent investment in iPadOS?&lt;/p&gt;
&lt;p&gt;It’s clear that Apple &lt;em&gt;wants&lt;/em&gt; the iPad Pro to be a device that a wide variety of professionals can use to get work done. And since so many people use web apps for their work, the introduction of “desktop” Safari for iPad was an important step toward that goal. The Magic Keyboard and trackpad was another step.&lt;/p&gt;
&lt;p&gt;Here are ten more steps I believe Apple could and should take to help nudge the iPad into this exciting next era of computing.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Give the iPad Pro another port. Two USB 4.0 ports would be lovely.&lt;/li&gt;
&lt;li&gt;Adopt a landscape-first mindset. Rotate the Apple logo on the back and move the iPad’s front-facing camera on the side beneath the Apple Pencil charger to better reflect how most people actually use their iPad Pros.&lt;/li&gt;
&lt;li&gt;Introduce Gatekeeper and app notarization for iOS. The process of side-loading apps should &lt;em&gt;not&lt;/em&gt; be as simple as downloading them from the App Store. Bury it in Settings, make it slightly convoluted, whatever: just have an officially-sanctioned way of doing it.&lt;/li&gt;
&lt;li&gt;Ruthlessly purge the App Store Guidelines of anything that prevents the iPad from serving as a development machine. Every kind of development from web to games should be possible on an iPad. And speaking of games—emulators should be allowed, too.&lt;/li&gt;
&lt;li&gt;Release a suite of professional first-party apps at premium prices. If someone can edit 4K videos in Final Cut on their M1 MacBook Air, they should be able to edit 4K videos in Final Cut on their iPad Pro. I refuse to believe that these pro apps can’t be re-imagined and optimized for a touch experience. If Apple leads the way in developing premium software for iPad, others will follow.&lt;/li&gt;
&lt;li&gt;Make it possible to write, release, and install plug-ins (if appropriate) for the aforementioned first party apps.&lt;/li&gt;
&lt;li&gt;Bring App Library to the iPad and allow widgets to be positioned anywhere on the Home Screen. This isn’t groundbreaking, it just annoys the heck out of me.&lt;/li&gt;
&lt;li&gt;Release a new keyboard + trackpad case accessory that allows the iPad to be used in tablet mode without removing it from the case.&lt;/li&gt;
&lt;li&gt;Introduce Time Machine backups for iPadOS.&lt;/li&gt;
&lt;li&gt;5G, ofc.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In the end, fostering a vibrant community of iPad app developers can only stand to benefit the Mac (and vice-versa).&lt;/p&gt;
&lt;p&gt;It’s simple: people love their iPads. They love them so much they wish they could do even more with them. The new M1 Macs should give iPad fans reason to be excited; now that we’ve seen hints of what future Macs can be, it’s time for the iPad to reassert itself—to remind us once again who it’s for, and what makes it special.&lt;/p&gt;
&lt;p&gt;In other words: Your move, iPad.&lt;/p&gt;
</description>
<pubDate>Thu, 26 Nov 2020 08:28:49 +0000</pubDate>
<dc:creator>rcarmo</dc:creator>
<og:type>article</og:type>
<og:title>Your Move, iPad</og:title>
<og:url>https://beckyhansmeyer.com/2020/11/25/your-move-ipad/</og:url>
<og:description>Hear that? It’s the sound of Mac fans. No, not your shiny new M1 Mac’s fans—chances are, you’ll never hear those—but rather, the sound of excitement rippling through the Mac commu…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://beckyhansmeyer.com/2020/11/25/your-move-ipad/</dc:identifier>
</item>
<item>
<title>Magic mushrooms are changing the lives of terminal cancer patients</title>
<link>https://thetyee.ca/News/2020/11/25/Magic-Mushrooms-Changing-Lives-Terminal-Cancer-Patients/</link>
<guid isPermaLink="true" >https://thetyee.ca/News/2020/11/25/Magic-Mushrooms-Changing-Lives-Terminal-Cancer-Patients/</guid>
<description>&lt;aside class=&quot;aside&quot; id=&quot;placehold&quot;/&gt;&lt;p&gt;Thomas Hartle speaks with a pronounced cheeriness that’s initially hard to reconcile with his words. “I'm honestly trying to do my very best to die with cancer,” he says. “Not &lt;em&gt;from&lt;/em&gt; cancer.”&lt;/p&gt;
&lt;aside class=&quot;aside hide-on-narrow-vp&quot; data-dev-object-descrip=&quot;01-molecules/blocks/aside&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;&lt;div class=&quot;presents-box text-block-container&quot; data-dev-object-descrip=&quot;01-molecules/blocks/presents-box&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;&lt;a href=&quot;https://thetyee.ca/News/2020/11/25/Magic-Mushrooms-Changing-Lives-Terminal-Cancer-Patients/#series-listview-link&quot; class=&quot;series-badge badge--aside-placement badge--aside-placement--presents&quot;&gt;&lt;img src=&quot;https://thetyee.ca/design-article.thetyee.ca/ui/img/badge-presents.svg&quot;/&gt;&lt;/a&gt;
&lt;h5&gt;Announcements, Events &amp;amp; more from Tyee and select partners&lt;/h5&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;That hasn’t been easy since Hartle was first diagnosed in 2016. Surgeries and chemotherapy did keep his stage four colon cancer at bay, but the tumours returned last summer. It’s now inoperable. The spikes of abdominal pain led to a new problem — “High anxiety levels in terms of panic attacks on a daily basis.”&lt;/p&gt;
&lt;p&gt;Hartle is just 52, and unwilling to let fear claim the time he has left with his wife and two children. Being a self-described “professional nerd” and an IT professional, Hartle says he’s drawn to research. He found a Johns Hopkins &lt;a href=&quot;https://journals.sagepub.com/doi/full/10.1177/0269881116675513&quot;&gt;study&lt;/a&gt; that reported 80 per cent of cancer patients involved achieved significant clinical decreases in depression and anxiety using psilocybin, the psychoactive compound in magic mushrooms.&lt;/p&gt;
&lt;p&gt;Although psilocybin has been illegal in the U.S. since 1968 and banned in Canada since 1974, Hartle discovered that Therapsil, a non-profit based in Victoria, B.C., was working to make the illegal psychedelic available to palliative care patients using Section 56 of Canada’s Controlled Drugs and Substances Act. It allows the federal health minister to grant exemptions from drug laws if “necessary for a medical or scientific purpose or is otherwise in the public interest.”&lt;/p&gt;
&lt;aside class=&quot;ad-box ad-box--bigbox&quot; data-dev-object-descrip=&quot;01-molecules/blocks/ad-box&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;
&lt;/aside&gt;&lt;p&gt;That’s how Insite, North America’s first supervised drug injection site, opened in Vancouver in 2003. In 2017 Health Canada began granting Section 56 exemptions to the Santo Daime church to import and use ayahuasca as a sacrament. Ayahuasca is a herbal tea with naturally occurring — and illegal — dimethyltryptamine, or DMT, similar to psilocybin.&lt;/p&gt;
&lt;aside class=&quot;aside&quot; data-dev-object-descrip=&quot;01-molecules/blocks/aside&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;&lt;section class=&quot;messaging-block messaging-block--ask&quot; data-dev-object-descrip=&quot;01-molecules/blocks/messaging-block--ask&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;http://support.thetyee.ca&quot; target=&quot;_blank&quot;&gt;The Tyee is supported by readers like you&lt;/a&gt;&lt;/h3&gt;
&lt;a href=&quot;http://support.thetyee.ca&quot; target=&quot;_blank&quot;&gt;&lt;span&gt; Join us and grow independent media in Canada&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/aside&gt;&lt;p&gt;So Hartle joined a queue of applicants, shepherded by Therapsil, asking the government for permission to use psilocybin for palliative care patients.&lt;/p&gt;
&lt;p&gt;Last August, after months of lobbying, federal Health Minister Patty Hajdu granted exemptions for Hartle and three others on compassionate grounds.&lt;/p&gt;
&lt;p&gt;A week later Hartle lay in a bed in a spare room at his home in Saskatoon. He donned a sleeping mask and headphones. He took seven grams of dried powdered magic mushrooms. Asking him to describe the next six or seven hours, is a bit like asking someone to describe a colour that doesn’t exist.&lt;/p&gt;
&lt;p&gt;“So the music that I was listening to created very immersive three-dimensional spaces,” he recounts. &quot;I was not in those spaces I was experiencing though. I was those spaces.”&lt;/p&gt;
&lt;p&gt;Three months later, Hartle is still profoundly changed.&lt;/p&gt;
&lt;p&gt;“All the busy, useless sort of thoughts that you get with anxiety have become very quiet for me,” Hartle says. “It’s so much easier for me to remain in the present moment and that's greatly improved the quality of my life. So now if I get a pain or something like that, it's discomfort and I don't enjoy it. But I don't immediately go to you know, ‘Am I gonna die this afternoon?’”&lt;/p&gt;
&lt;p&gt;Hartle can describe his psilocybin experience at some length and detail. And even though I have had several sessions of psychedelic psychotherapy myself, the best I can do is listen and nod. It takes a therapist with experience in the power of psychedelics to help the patient plan their intentions for the trip, and to draw meaning from the result. Hartle’s Section 56 exemption was undoubtedly successful in part because he had a trained psychotherapist supporting him.&lt;/p&gt;
&lt;p&gt;Therapsil’s founder, clinical psychologist Bruce Tobin, flew to be at Hartle’s Saskatoon bedside for that first dose.&lt;/p&gt;
&lt;p&gt;“We’re very much a believer in the idea that when a traveller wants to go through an unknown mountain range, they would choose a guide who's been there before who can help them,” Tobin says.&lt;/p&gt;
&lt;p&gt;Tobin, based in Victoria, has been practising for four decades. He grew up in the hippie age and had his own experiences with psychedelics before they became illegal.&lt;/p&gt;
&lt;p&gt;“I had the good fortune of knowing one or two people who had received professional treatment with a psychedelic in a hospital near Vancouver,” Tobin says, adding that while traditional drugs like antidepressants have their place, they don’t always work.&lt;/p&gt;
&lt;p&gt;“There are a number of major mental health issues including anxiety, depression, PTSD and addiction.” Tobin says. “There's a whole range of patients for which we have no really effective treatments.”&lt;/p&gt;
&lt;aside class=&quot;ad-box ad-box--bigbox&quot; data-dev-object-descrip=&quot;01-molecules/blocks/ad-box&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;
&lt;/aside&gt;&lt;p&gt;There’s a reason for that, according to Dr. Sean O’Sullivan, an Ontario physician and Therapsil’s medical director.&lt;/p&gt;
&lt;p&gt;“I'm also old enough to have practised medicine when psychedelics were legal entities,” O’Sullivan says. He says he witnessed their value for patients with depression and alcoholism firsthand in medical school in Dublin.&lt;/p&gt;
&lt;p&gt;“Most of the drugs that are used in psychotherapy are symptomatic treatments,” O’Sullivan says. “In other words, they are suppressive medications. They suppress symptoms and they suppress neural pathways that give rise to these.”&lt;/p&gt;
&lt;p&gt;Psychedelics like psilocybin are the exact opposite.&lt;/p&gt;
&lt;p&gt;“Psychedelics open the doorways of the unconscious and allow previously repressed material to emerge into consciousness. The psychedelic session is a raging river sometimes and you don't want to try and stop the river or get in the way of the flow. You want to let it go through.”&lt;/p&gt;
&lt;img data=&quot;1&quot; src=&quot;https://thetyee.ca/News/2020/11/24/PsilocybinHand.jpg&quot; width=&quot;582&quot; height=&quot;776&quot; class=&quot;responsive-img&quot; alt=&quot;582px version of PsilocybinHand.jpg&quot;/&gt; The therapy approach uses psilocybin mushrooms, which have hallucinogenic properties. &lt;span class=&quot;caption__media--credit&quot;&gt;Photo by Curt Petrovich.&lt;/span&gt;
&lt;p&gt;O’Sullivan says therapists untrained or unfamiliar with the emotional river which psychedelics can produce are liable to be unhelpful.&lt;/p&gt;
&lt;p&gt;“So, when people cry or weep or express rage or joy or bliss in a psychedelic session,” O’Sullivan says, “the volume is really turned up. So, if someone looks like they're really, really, really, really suffering, a compassionate therapist might want to intervene and offer comfort and support and say, ‘there, there. It's going to be all right.’”&lt;/p&gt;
&lt;p&gt;O’Sullivan says what’s required however, is to help the patient to go deeper into the river, not scramble for the bank.&lt;/p&gt;
&lt;p&gt;“So keeping your hands off patients and encouraging them, helping them through difficult passages and then letting them go back inside… that is the job of a psychedelic therapist.”&lt;/p&gt;
&lt;p&gt;And it’s a difficult job, requiring upwards of 30 hours for just one session, because of the advance preparation, the time the patient spends in the experience and the extensive reintegration that occurs afterward.&lt;/p&gt;
&lt;p&gt;Right now, there are only three doctors and therapists working with Therapsil who are comfortable doing psilocybin sessions. That was barely workable in August when just four patients were given the legal right to use magic mushrooms as part of their treatment. But the number of exemptions grew to 12 by mid-November. There are 50 more applications in the hopper. Another 50 could arrive next month.&lt;/p&gt;
&lt;p&gt;Therapsil plans to begin training therapists next year but it wants each of them to undergo their own psychedelic experience, so they know firsthand what their patients go through. To that end it has asked Health Canada to grant 19 otherwise healthy doctors the same exemption as the dying patients.&lt;/p&gt;
&lt;p&gt;It’s a move that is controversial, and could help explain why Health Canada still hasn’t made a decision on the applications more than five months after receiving them. The pandemic response may also have sidelined them. Health Canada hasn’t publicly explained.&lt;/p&gt;
&lt;p&gt;In response to a number questions about the process and the time it’s taking to decide, Health Canada responded to The Tyee with a general statement that the department is “taking into account all relevant considerations, including evidence of potential benefits and risks or harms to the health and safety of Canadians,” and that “assessments are done as quickly as possible.”&lt;/p&gt;
&lt;p&gt;One question likely being asked inside the department is why psychedelic therapists are any different than psychiatrists, who prescribe powerful antidepressants without having taken them.&lt;/p&gt;
&lt;p&gt;O’Sullivan says a more apt comparison is to consider traditional psychotherapy. You wouldn’t seek treatment from someone who’d never experienced it as part of their training.&lt;/p&gt;
&lt;p&gt;“If you as a therapist have not had any exposure to those realms of the human unconscious,” O’Sullivan says, “then you are apt to do what most people would do in these circumstances. You would either trivialize them or you will pathologize them, rather than looking at them as rich sources of information about the person's unconscious.”&lt;/p&gt;
&lt;p&gt;Christian, a 43-year-old cancer patient on Vancouver Island who didn’t want his last name used, puts it more simply.&lt;/p&gt;
&lt;p&gt;“It's like any profession. If you take your car to a mechanic, you want them to have driven before.”&lt;/p&gt;
&lt;p&gt;Two years ago, Christian’s workaholic life as a consultant helping startups with accounting and procurement in China hit a wall. His mother had died of breast cancer, he and his wife had been evicted from their apartment, and he was diagnosed with stage four rectum and liver cancer. Palliative care counselling offered through BC Cancer helped some. But by last August, pain had confined the six-foot-four formerly active go-getter to his bed for more than 20 hours a day.&lt;/p&gt;
&lt;p&gt;“Just to get out of bed now to go to the commode two feet away is like a half-hour endeavour,” he says.&lt;/p&gt;
&lt;img data=&quot;1&quot; src=&quot;https://thetyee.ca/News/2020/11/24/ChristianHospitalBed.jpg&quot; width=&quot;851&quot; height=&quot;507&quot; class=&quot;responsive-img&quot; alt=&quot;851px version of ChristianHospitalBed.jpg&quot;/&gt; Christian sought therapy to deal with anxiety and fear. ‘I'm afraid of dying too quick. Not being able to provide for my wife.’ &lt;span class=&quot;caption__media--credit&quot;&gt;Photo from Christian.&lt;/span&gt;
&lt;p&gt;And cancer had allowed his fears to gain a foothold.&lt;/p&gt;
&lt;p&gt;“I'm afraid of dying too quick. Not being able to provide for my wife,” he says. “It's difficult for me to think of what if I go in one month... what happens to her then?&quot;&lt;/p&gt;
&lt;p&gt;Christian says he is a believer in alternative therapies. After reading about the Section 56 exemptions last August, and with the encouragement of a counsellor, he emailed Therapsil.&lt;/p&gt;
&lt;p&gt;Two months later he received his own legal permission to use psilocybin. He thinks he was lucky because Therapsil’s founder and main therapist Tobin lives just five minutes away.&lt;/p&gt;
&lt;p&gt;“Realistically they can only help people in Kelowna, Toronto or here in Victoria,” Christian says, referring to where Therapsil’s trained therapists are currently based. “If I was in Nanaimo or Campbell River I might probably have died before any of this ever happened.”&lt;/p&gt;
&lt;p&gt;Therapsil’s CEO Spencer Hawkswell says they’ve already had to deal with that situation.&lt;/p&gt;
&lt;p&gt;“Over Labour Day, we had a woman who was dying reach out to us, and she had probably less than a week to live,” Hawkswell says. Even though Therapsil says Health Canada is now approving exemptions for patients in about 10 business days, it’s not fast enough. The woman died.&lt;/p&gt;
&lt;p&gt;And Hawkswell suggests that without more properly trained therapists, that may be a common outcome.&lt;/p&gt;
&lt;p&gt;“You know the rate at which we will be able to treat patients is probably one a week.”&lt;/p&gt;
&lt;p&gt;Therapsil says it already has a fairly conservative treatment criteria that rejects people with pre-existing mental health conditions involving schizophrenia or psychosis. People on several antidepressants can also be disqualified if they can’t be weened off them because those drugs severely blunt any psychedelic effect. Even with those restrictions Therapsil estimates about 2,800 new terminal cancer patients a year could qualify for the treatment.&lt;/p&gt;
&lt;p&gt;Yet rather than pause the process or become more restrictive, Therapsil opened up its criteria, at least temporarily, by helping to secure the first exemption for a patient who is not terminally ill.&lt;/p&gt;
&lt;img data=&quot;1&quot; src=&quot;https://thetyee.ca/News/2020/11/24/BruceTobinMonaStreleaffRedCouch.jpg&quot; width=&quot;1000&quot; height=&quot;562&quot; class=&quot;responsive-img&quot; alt=&quot;BruceTobinMonaStreleaffRedCouch.jpg&quot;/&gt; Therapsil’s founder, clinical psychologist Bruce Tobin, and Mona Streleaff, the first non-terminal patient to receive psilocybin therapy. &lt;span class=&quot;caption__media--credit&quot;&gt;Photo from Therapsil.&lt;/span&gt;
&lt;p&gt;In early November Mona Streleaff of Victora underwent a session to help her deal with debilitating depression and PTSD that has its roots in her childhood growing up in Finland. “My mother was bipolar. My father was an alcoholic and he used drugs. So, there was a lot of anguish in my household. I don't need to go into detail, but there was a lot of anguish.”&lt;/p&gt;
&lt;p&gt;In 2002 Streleaff had bilateral breast cancer, which eventually went into remission, but it left her traumatized.&lt;/p&gt;
&lt;p&gt;“I was 48-years-old at the time”, she says. “I had six grandchildren and it was very tough to be facing death.”&lt;/p&gt;
&lt;p&gt;A couple of years ago her daughter died in a car crash.&lt;/p&gt;
&lt;p&gt;“The depression… got very, very terrible after I lost my child,” she says. “I started drinking like there was no tomorrow. I think I was actually trying to commit suicide.”&lt;/p&gt;
&lt;p&gt;Streleaff says years of pills, talk therapy and treatment centres didn’t help.&lt;/p&gt;
&lt;p&gt;It just so happened that Therapsil’s founder is also her therapist. Tobin conducted Streleaff’s psychedelic therapy in her home.&lt;/p&gt;
&lt;p&gt;“It's not something like what the kids would think about you know, ‘let's have some psychedelics and go and get high and have some fun,’” Streleaff says.&lt;/p&gt;
&lt;p&gt;“This is therapy. It's difficult. It’s hard work. There’s a lot of emotion that is extremely hard to face. There's sorrow. There's grief. There is anger. But there is also empathy, compassion and forgiveness.”&lt;/p&gt;
&lt;p&gt;A week after her four-hour trip fuelled by psilocybin tea, Streleaff says she’s anxiety-free.&lt;/p&gt;
&lt;p&gt;“I've been calm. I'm more alive than I've been for a while.”&lt;/p&gt;
&lt;p&gt;Not everyone is guaranteed the same breakthrough. A few days after Christian’s session he thinks it wasn’t as profound as he’d hoped.&lt;/p&gt;
&lt;p&gt;“I was like in and out of different realms,” he recalls, “I would open my eyes and then see people around and ask for my wife and ask where she was or I would look at her and not necessarily see her there.”&lt;/p&gt;
&lt;p&gt;But Christian suggests his obsessive-compulsive personality may have fought against the raging river O’Sullivan talks about, rather than letting it carry him.&lt;/p&gt;
&lt;p&gt;Even so, Christian says he’s noticed changes. Cancer has kept him bedbound most of the day and to cope with anxiety he would be on his smart phone incessantly. “This morning for example,” he says, “the home care worker who comes and cleans me every day mentioned it was the first time she'd seen me reach for my phone in over an hour.”&lt;/p&gt;
&lt;p&gt;Christian says the persistent anxiety he felt prior to the experience has abated. It’s an experience he might try again, as his government exemption, delivered via email, is good for one year.&lt;/p&gt;
&lt;p&gt;Advocates of psychedelic therapy argue the exemption process is not a solution. While it does free the holder from fear of arrest or prosecution for possessing and using psilocybin, Health Canada’s wording is quite clear that it doesn’t apply to selling and procuring.&lt;/p&gt;
&lt;p&gt;Canada’s compassionate nod to the dying is less progressive when held beside legislation in several U.S. states to decriminalize magic mushrooms. In Oregon, voters overwhelmingly backed a ballot initiative this month to create &lt;a href=&quot;https://www.oregonlive.com/politics/2020/11/oregon-legalizes-magic-mushrooms-5-things-to-know.html&quot;&gt;a state-licensed psilocybin therapy program&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tobin says Health Canada’s approach so far has been to ask applicants where they intend to get their mushrooms.&lt;/p&gt;
&lt;p&gt;“One applicant said, ‘I'm growing my own right now.’ He got his approval. Another patient said, ‘I plan to get them from a trusted friend and that's all I'd like to say about it.’ She got her exemption.&quot;&lt;/p&gt;
&lt;p&gt;“People who take mushrooms on a Friday evening with six beers… they don't give a tinker's toss about the law,” O’Sullivan says. “They're not concerned about it, but they are not the people who are coming to us.”&lt;/p&gt;
&lt;p&gt;O’Sullivan says the people looking to Therapsil just want help.&lt;/p&gt;
&lt;p&gt;“We've got a 45-year-old woman with cancer that’s spread to her bones. A 53-year-old woman with cancer in her bones and her brain. We have young people with soft tissue malignancies. They're not interested in breaking the law and I really think that our government recognizes this.”&lt;/p&gt;
&lt;p&gt;Right now, it isn’t the law that’s holding back psilocybin psychotherapy. It’s money.&lt;/p&gt;
&lt;p&gt;There aren’t enough therapists. Training will take funding. Therapsil plans to launch a GoFundMe campaign to raise $500,000 to underwrite its plans. CEO Spencer Hawkswell says an anonymous donor has offered to match up to $250,000.&lt;/p&gt;
&lt;p&gt;If successful, he says they’ll expand their intake of patients to include more non-palliative cases like Mona Streleaff. Tobin says that won’t change the non-profit he founded as a humanitarian patient advocacy organization.&lt;/p&gt;
&lt;aside class=&quot;aside&quot; data-dev-object-descrip=&quot;01-molecules/blocks/aside&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;&lt;div class=&quot;related-story accent-color--border&quot; data-dev-object-descrip=&quot;01-molecules/blocks/related-story&quot; data-dev-status=&quot;IN-PROGRESS&quot;&gt;
&lt;div class=&quot;story-item&quot;&gt;&lt;img src=&quot;https://thetyee.ca/News/2020/10/19/KetamineInjectionAssistedTherapyDepressionPTSDTreatmentBottle_square_thumb.jpg&quot; class=&quot;responsive-img&quot; alt=&quot;image atom&quot;/&gt;&lt;div class=&quot;story-item__description&quot;&gt;
&lt;h5&gt;Lifeline for People with PTSD and Depression Is Restored after Tyee Report&lt;/h5&gt;
&lt;a href=&quot;https://thetyee.ca/News/2020/10/23/PTSD-Lifeline-Restored-After-Tyee-Report/&quot; class=&quot;read-more link-wrap--contained-link&quot;&gt;read more &lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;“We will never offer stock. We will never have investors. We have a small paid staff that earns a reasonable living wage but beyond that Therapsil will never see profits and I myself as founder am committed to never receiving a penny from any of this.”&lt;/p&gt;
&lt;p&gt;Compared to the hundreds of millions of dollars raised for cancer research in Canada each year, Therapsil’s financial goal seems microscopic.&lt;/p&gt;
&lt;p&gt;But unlike cancer agencies, Therapsil can’t hold out the idea of finding a cure. At least not in the traditional sense. There is no potential that psilocybin psychotherapy will trigger miraculous remission by repairing the psyche. O’Sullivan say it just doesn’t work that way.&lt;/p&gt;
&lt;p&gt;“I had a child who died of cancer when she was seven years of age,” he reveals. “She was a bright little angel of light to the world. She had no psychological issues that made her get cancer. So no… it's not an attempt to prevent death. It's an attempt to help people die well.” &lt;img src=&quot;https://thetyee.ca/ui/img/ico_fishie.png&quot; width=&quot;12&quot; height=&quot;16&quot; alt=&quot; [Tyee] &quot; class=&quot;icoft&quot;/&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 26 Nov 2020 07:53:16 +0000</pubDate>
<dc:creator>mrzool</dc:creator>
<og:title>How Magic Mushrooms Are Changing the Lives of Terminal Cancer Patients | The Tyee</og:title>
<og:description>The federal government has taken first steps to allow psilocybin-assisted therapy. A Victoria non-profit says much more can be done.</og:description>
<og:type>article</og:type>
<og:url>https://thetyee.ca/News/2020/11/25/Magic-Mushrooms-Changing-Lives-Terminal-Cancer-Patients/</og:url>
<og:image>https://thetyee.ca/News/2020/11/24/ThomasHartleDogPainting.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://thetyee.ca/News/2020/11/25/Magic-Mushrooms-Changing-Lives-Terminal-Cancer-Patients/</dc:identifier>
</item>
<item>
<title>An ex-Googler’s guide to dev tools</title>
<link>https://about.sourcegraph.com/blog/ex-googler-guide-dev-tools/</link>
<guid isPermaLink="true" >https://about.sourcegraph.com/blog/ex-googler-guide-dev-tools/</guid>
<description>&lt;p&gt;Many years ago, I did a brief stint at Google. A lot has changed since then, but even that brief exposure to Google's internal developer tools left a lasting impression on me. In many ways, the dev tools inside Google are the most advanced in the world. Google has been a pioneer not only in scaling their own software systems but in figuring out how to build software effectively at scale. They've dealt with issues related to codebase volume, code discoverability, organizational knowledge sharing, and multi-service deployment at a level of sophistication that most other companies have not yet reached. (For reference, see &lt;a href=&quot;https://www.amazon.com/Software-Engineering-Google-Lessons-Programming/dp/1492082791&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Software Engineering at Google&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;In other ways, however, Google's internal tools are awfully limited. In particular, nearly all of them are tightly coupled with Google's unique internal ecosystem. Unfortunately, that means you can't take them with you when you leave.&lt;/p&gt;
&lt;p&gt;The Google diaspora has seeded so many other organizations with amazing talented people who bring lessons learned from working inside one of the world's leading technology organizations. But adapting to programming outside of Google can be tough, especially when you've come to rely on tools you no longer have at your disposal.&lt;/p&gt;
&lt;p&gt;Over the years, I've learned from my own experience and the experience of lots of others who have left Google. Many of Sourcegraph's early customers began with an ex-Googler missing code search after leaving Google. I worked closely with these people to understand the gap they were trying to fill, so that we could build Sourcegraph to meet their needs. Over time, patterns emerged in terms of how ex-Googlers sought to introduce new dev tools into their organizations, inspired by their experience with dev tools at Google. Some were successful and others were not.&lt;/p&gt;
&lt;p&gt;I thought it would be helpful to write a guide to dev tools outside of Google for the ex-Googler, written with an eye toward pragmatism and practicality. No doubt many ex-Googlers wish they could simply clone the dev tools ecosystem inside of Google to their new company, but you can't boil the ocean. Here is my take on where you should start and a general path I think ex-Googlers can take to find the tools that will make them—and their new teams—as productive as possible&lt;/p&gt;
&lt;h2 id=&quot;The-software-development-lifecycle&quot;&gt;The software development lifecycle&lt;/h2&gt;
&lt;p&gt;If you recently left Google to join another company, you probably have this overall sense of frustration that you're not as productive as you used to be. You feel you need to change &lt;em&gt;something&lt;/em&gt;, but what is it? As a first step, you should think about what you do day to day and identify where the pain is coming from.&lt;/p&gt;
&lt;p&gt;Both inside Google and out, the software development lifecycle looks something like this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You think of a feature you want to build or a bug you need to fix.&lt;/li&gt;
&lt;li&gt;You read a bunch of code, design docs, and ask colleagues questions. You're building an understanding of the problem and how the solution will roughly fit into the existing system.&lt;/li&gt;
&lt;li&gt;You start writing code. You aim first for something &lt;em&gt;just&lt;/em&gt; working. Maybe you go back and look up docs or read some more code several times while you're doing this.&lt;/li&gt;
&lt;li&gt;You have it working, but you're not ready to ship. You've broken some tests, which you now fix, you add some more tests, you refactor the code to make it cleaner and easier for the next person to understand. You push it up to a branch. You wait for CI to run and maybe you implement a couple of additional fixes and small improvements.&lt;/li&gt;
&lt;li&gt;You submit the patch for review. Your teammates leave some comments. You make the changes. Maybe there are a few rounds of back-and-forth before the reviewer(s) approve the change.&lt;/li&gt;
&lt;li&gt;You merge the patch and it gets deployed.&lt;/li&gt;
&lt;li&gt;Monitoring systems that are in place will determine if there are any production issues. If it's your patch that caused an outage, you're on the hook for fixing it.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;At every stage in this process, there is typically a tool that anchors the developer experience. Tools shape your work cycle and have an immense impact on your productivity.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Software development stage&lt;/th&gt;
&lt;th&gt;Inside Google&lt;/th&gt;
&lt;th&gt;Outside Google&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;10.087248322148&quot;&gt;&lt;tr&gt;&lt;td&gt;Identify feature or bug&lt;/td&gt;
&lt;td&gt;Issue Tracker&lt;/td&gt;
&lt;td&gt;GitHub issues, Jira&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3.0952380952381&quot;&gt;&lt;td&gt;Read code&lt;/td&gt;
&lt;td&gt;Code search&lt;/td&gt;
&lt;td&gt;Your editor, &lt;a href=&quot;https://oracle.github.io/opengrok/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;OpenGrok&lt;/a&gt;, &lt;a href=&quot;https://github.com/hound-search/hound&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Hound&lt;/a&gt;, &lt;a href=&quot;https://about.sourcegraph.com&quot;&gt;Sourcegraph&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;8&quot;&gt;&lt;td&gt;Write code&lt;/td&gt;
&lt;td&gt;Critique, IntelliJ, Emacs, Vim, VS Code&lt;/td&gt;
&lt;td&gt;Everything except Critique&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2.7826086956522&quot;&gt;&lt;td&gt;Test code&lt;/td&gt;
&lt;td&gt;Blaze&lt;/td&gt;
&lt;td&gt;A bit of the Wild West, but &lt;a href=&quot;https://bazel.build/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Bazel&lt;/a&gt; is gaining traction&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2.421875&quot;&gt;&lt;td&gt;Review code&lt;/td&gt;
&lt;td&gt;Critique&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://github.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt; PRs, &lt;a href=&quot;https://www.gerritcodereview.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Gerrit&lt;/a&gt;, &lt;a href=&quot;https://www.phacility.com/phabricator/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Phabricator&lt;/a&gt;, &lt;a href=&quot;https://reviewable.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Reviewable&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Deployment&lt;/td&gt;
&lt;td&gt;Borg&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://kubernetes.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Kubernetes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3.1058823529412&quot;&gt;&lt;td&gt;Monitoring&lt;/td&gt;
&lt;td&gt;Borgmon, Dapper, Viceroy&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://prometheus.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Prometheus&lt;/a&gt;, &lt;a href=&quot;https://grafana.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Grafana&lt;/a&gt;, &lt;a href=&quot;https://lightstep.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Lightstep&lt;/a&gt;, &lt;a href=&quot;https://www.honeycomb.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Honeycomb&lt;/a&gt;, &lt;a href=&quot;https://sentry.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Sentry&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;To improve your productivity, you need to find better tools. There's a useful GitHub repository that identifies nearly every single tool inside Google and its closest comparables outside of Google: &lt;a href=&quot;https://github.com/jhuangtw/xg2xg&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://github.com/jhuangtw/xg2xg&lt;/a&gt;. This list is comprehensive, but a bit overwhelming. So where do you start?&lt;/p&gt;

&lt;p&gt;In your first month, don't try to change anything. Just listen and learn the ropes.&lt;/p&gt;
&lt;p&gt;As a new member of the team, you likely don't have the influence or authority to change &lt;em&gt;all&lt;/em&gt; the tools your team uses. Moreover, you also lack knowledge—knowledge of how and why your new team behaves the way it does and why it uses its current set of tools. Simply copy-pasting whatever worked for Google is not necessarily going to work for your new team. So learn what &lt;em&gt;is&lt;/em&gt; working for your new team along with what isn't.&lt;/p&gt;
&lt;h2 id=&quot;Low-hanging-fruit&quot;&gt;Low-hanging fruit&lt;/h2&gt;
&lt;p&gt;I believe that code search is usually a great tool to start with. Yes, I am the cofounder of a code search company, so of course I would say that, but here are my reasons—if these don't resonate with you, then I recommend skipping to the next section!&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's one of the tools ex-Googlers usually miss the most from their everyday lives.&lt;/li&gt;
&lt;li&gt;You can try different code search engines on your own and validate that one is good before sharing it with others. This means you don't need to obtain approval from gatekeepers or expend precious social capital convincing others to try a tool you haven't started using yourself.&lt;/li&gt;
&lt;li&gt;It won't require forcing others to change existing habits, because your new team doesn't yet have a code search tool. If they do, then it's either bad and they don't use it much, or it's good and you already have good code search, so skip this section!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If your new company has more than a few teams in the organization, you're likely dealing with more code that you can reasonably grok as an individual person. And even if you're working in a much smaller company, chances are you're pulling in a ton of open-source code through your dependencies. This is all code that you will need to dive into at some point, when building a new feature or tracing the source of some critical bug.&lt;/p&gt;
&lt;p&gt;Given the scale of code that nearly every developer has to deal with these days, it's no wonder that the lack of code search can quickly slow your development velocity to a crawl.&lt;/p&gt;
&lt;p&gt;When evaluating code search engines, there are a few things to consider:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Query language: Regular expressions are table stakes. You want to ensure the code search query language is both expressive and easy to use. Literal searches should be intuitive, and more advanced pattern matching should be available.&lt;/li&gt;
&lt;li&gt;Scale: Ensure the code search engine scales to the size of your codebase. If your codebase is more than a few gigabytes, a key thing to look for is whether the code search engine uses a trigram index &lt;a href=&quot;https://swtch.com/~rsc/regexp/regexp4.html&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://swtch.com/~rsc/regexp/regexp4.html&lt;/a&gt;, because this is how you get regular expression matching working at the scale of a large codebase.&lt;/li&gt;
&lt;li&gt;Code browsing: As a user of Google Code Search, you know that search is only half the story. Once you click through to a result, you want to be able to click around to jump to definitions and find references as easily as if you had checked out the code and set up the dev environment in your IDE. * Without great code browsing, you'll be context-switching between your editor and code search engine frequently.&lt;/li&gt;
&lt;li&gt;Permissions: If your company enforces codebase permissions, you should consider whether your code search engine respects those.&lt;/li&gt;
&lt;li&gt;Overall cost: Consider both the price of the code search engine and the maintenance overhead of keeping the tool online.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here are the common code search engines we've seen in use:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://oracle.github.io/opengrok/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;OpenGrok&lt;/a&gt;: a fairly old but persistent code search engine now maintained by Oracle&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hound-search/hound&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Hound&lt;/a&gt;: a code search engine created and open-sourced by engineers at Etsy&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://livegrep.com/search/linux&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Livegrep&lt;/a&gt;: a code search engine created by Nelson Elhage at Stripe&lt;/li&gt;
&lt;li&gt;And of course, &lt;a href=&quot;https://about.sourcegraph.com/get-started&quot;&gt;Sourcegraph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;Get-good-monitoring&quot;&gt;Get good monitoring&lt;/h2&gt;
&lt;p&gt;Another good early area to target is monitoring. Every engineer at some point has to deal with a production issue. Production is a very different place than development—you can't just set a breakpoint or add a printf and see the effect in seconds. Making updates to production is expensive along multiple dimensions: compute resources, developer time, and worst of all, pain to your users and customers.&lt;/p&gt;
&lt;p&gt;Deployment has changed a lot in the past 5-10 years. Microservices, Kubernetes, moving to the Cloud—these are big shifts in how companies deploy software. Many companies have adopted these new paradigms and technologies, but they have not yet updated their monitoring infrastructure to make debugging in these new production environments easy.&lt;/p&gt;
&lt;p&gt;Fortunately, there have been some great new open-source tools and companies in recent years that have vastly improved the state of monitoring and observability in the world outside of Google.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://prometheus.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Prometheus&lt;/a&gt; is a time-series metrics tracker and visualizer that's similar to Borgmon. It lets you instrument your application to track metrics like CPU utilization, error rate, and p90 latency that change over time.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://grafana.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Grafana&lt;/a&gt; is a dashboarding tool similar to Viceroy. A common situation is to connect Grafana with Prometheus, so you can construct a single-page view of a bunch of key metrics that indicate overall application health.&lt;/li&gt;
&lt;li&gt;Google pioneered distributed tracing, an essential tool for increasingly common multi-service architectures, with Dapper. One of the creators of Dapper, Ben Sigelman, went on to start &lt;a href=&quot;https://lightstep.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Lightstep&lt;/a&gt;. Distributed tracing is now a feature of many monitoring systems, including paid offerings like &lt;a href=&quot;https://www.honeycomb.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Honeycomb&lt;/a&gt; and &lt;a href=&quot;https://sentry.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Sentry&lt;/a&gt; and open-source projects like &lt;a href=&quot;https://www.jaegertracing.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Jaeger&lt;/a&gt;, built by Uber engineers.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Monitoring is a bit trickier to introduce than code search, since it has to be integrated into the production environment. This often involves changing the deployment environment, which probably means persuading the team that controls the deployment environment. It may also entail adding instrumentation code, which involves submitting patches to the various teams that own the code being instrumented. However, it is still easy in the sense that introducing a new tool doesn't require anyone to change existing habits. People are free to use the new tool or not, which eliminates a strong source of objections when you're trying to get the tool first deployed.&lt;/p&gt;
&lt;h2 id=&quot;After-youre-in-good-standing-code-review&quot;&gt;After you're in good standing: code review&lt;/h2&gt;
&lt;p&gt;Introducing code search and monitoring doesn't require asking anyone on the team to change existing workflows. Changing the code review tool, however, does.&lt;/p&gt;
&lt;p&gt;Chances are that if you'd been at Google for awhile, the way that code review is done outside of Google has struck you as a little weird. GitHub Pull Requests is the most common code review tool, but ex-Googlers usually have a few complaints about it:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It is not straightforward and sometimes not possible to view changes made since the last round of reviews. The easy path only lets you review the entire outstanding diff.&lt;/li&gt;
&lt;li&gt;There is no support for stacked CRs.&lt;/li&gt;
&lt;li&gt;The entire diff across all files in the changeset is displayed as one giant page, and it's hard to keep track of what hunks you've reviewed.&lt;/li&gt;
&lt;li&gt;GitHub PRs are very unopinionated about how reviews should be done. Without adding additional third-party integrations, the review process can seem loosey-goosey, and even with third-party integrations, it still may lack the ability to enforce finer grained review and sign-off policies.&lt;/li&gt;
&lt;li&gt;There is limited fuzzy jump-to-def or find-references for certain languages, but it is nowhere near the level that Critique supports inside of Google.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The closest thing to Critique you can get outside of Google is Gerrit. Gerrit began life as a fork of Rietveld, which itself was an open-source fork of Google's original code review tool, Mondrian. It should therefore feel very familiar, as it descends from a line of tools that were created to support the exact way that Google does code review.&lt;/p&gt;
&lt;p&gt;Phabricator is another code review tool that ex-Googlers often prefer to GitHub Pull Requests. Phabricator began life as Facebook's internal code review tool and was subsequently open-sourced and released to the outside world. There's also a company behind it, &lt;a href=&quot;https://phacility.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Phacility&lt;/a&gt;, that offers hosted instances and support, in case you don't want to be on the hook for maintaining your own instance.&lt;/p&gt;
&lt;p&gt;Another tool worth looking into is &lt;a href=&quot;https://reviewable.io&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Reviewable&lt;/a&gt;, created by ex-Googler Piotr Kaminski. Unlike Gerrit or Phabricator, it is cloud-only, but may offer the code review experience that's closest to what is done inside Google today.&lt;/p&gt;
&lt;p&gt;When selling the benefits of Gerrit, Phabricator, or Reviewable to the rest of your team, it's important to identify the existing pains the team is feeling with their existing code review tool. Here are how some common pain points are addressed by switching from a GitHub-Pull-Request-like tool to a Gerrit-like tool:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Gerrit facilitates a more structured review process, with explicit sign-offs, which can be good if you've grown the team and want to enforce stricter review policies across the organization.&lt;/li&gt;
&lt;li&gt;Gerrit makes reviewing larger diffs easier, because you can go file by file, view changes since the last round of review, and stack CRs. This enables faster, more thorough reviews.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Gerrit, Phabricator, and Reviewable let you closely approximate the general review flow that you had inside of Google, but one thing that neither provides is code intelligence. If you're missing code intelligence in your current code review tool or find the GitHub PR code intelligence lacking, try the &lt;a href=&quot;https://docs.sourcegraph.com/integration/browser_extension&quot;&gt;Sourcegraph browser extension&lt;/a&gt;. This connects to a Sourcegraph instance to provide tooltips, jump-to-def, and cross references during code review. It works with GitHub PRs, GitLab MRs, Phabricator, and Bitbucket Server. Support for Gerrit is on the way.&lt;/p&gt;
&lt;h2 id=&quot;When-youre-ready-to-slay-the-dragon&quot;&gt;When you're ready to slay the dragon&lt;/h2&gt;
&lt;p&gt;The most intractable part of the software development life cycle is often CI and the build system. This is because understanding the build often involves understanding every piece of the overall codebase in a fairly nuanced way. Speeding up the build is something that various people try to do over time, and so the build code accrues a growing set of hacks and optimizations until the point is reached where the number of people who actually understand enough about what is going on to make a change with zero negative consequences is very small.&lt;/p&gt;
&lt;p&gt;In short, the build system is often a big giant hairball, and one that you should be wary of trying to disentangle before you pick off the lower hanging developer productivity fruit. It may be tempting to tackle this earlier, because Blaze was worlds better than what you're using now and Google has even helpfully open-sourced a derivative of Blaze called Bazel. But Bazel is not Blaze—for one, it lacks a massive distributed build cluster that comes free alongside it—and the world outside of Google is not Google.&lt;/p&gt;
&lt;p&gt;Bazel is not a silver bullet. When Bazel was first released, many open-source projects in the Go community switched to using it in favor of the standard Go build tool. However, within a year, many of these switched back due to complexity of use, unfamiliarity in the rest of the Go community, and the fact that builds seemed to actually be slower with Bazel. Since then, there have been major improvements to Bazel's support for Go, but you need to rigorously evaluate what improvements you'll see if you switch over to it.&lt;/p&gt;
&lt;p&gt;In order to do this rigorous evaluation, you'll want to have plenty of other great dev tools already in place. In particular, you'll want to have great code search, so you can actually dive into the build scripts in various parts of the codebase and understand their ins and outs. You'll also want to have a great code review tool in place, because changing the build system is going to be a complex change that requires approval from many different engineering teams.&lt;/p&gt;
&lt;p&gt;Once you're ready to slay the dragon, you should understand there are a number of build tools in addition to Bazel that are designed to enable scalable builds in large codebases. These include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://buck.build/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Buck&lt;/a&gt;, from Facebook&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gradle.org/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Gradle&lt;/a&gt;, popular in the Java world&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pantsbuild.org/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Pants&lt;/a&gt;, created by an ex-Googler originally for Twitter and Foursquare&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://please.build/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Please&lt;/a&gt;, a newish build tool created by ex-Googlers, heavily inspired by Blaze&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There's also &lt;a href=&quot;https://yourbase.io/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;YourBase&lt;/a&gt;, which is not a build tool, but a CI service started by ex-Googler Yves Junqueira to bring super-fast and scalable builds to the world outside of Google, independent of what underlying build tool is used.&lt;/p&gt;
&lt;h2 id=&quot;What-its-all-about&quot;&gt;What it's all about&lt;/h2&gt;
&lt;p&gt;Google prioritizes developer experience and developer tools in a way unlike most other companies. Googlers and ex-Googlers have the benefit of firsthand experience of using first-class dev tools that add a huge amount of leverage to their natural talents and abilities.&lt;/p&gt;
&lt;p&gt;One of your competitive advantages after leaving Google will be to apply these experiences to bring great new dev tools into your new organization to boost your own productivity and the productivity of your teammates. By using these tools to spread effective best practices for developing software at scale, you can bring one of Google's key competitive advantages—the effectiveness of its engineering organization—to your new company.&lt;/p&gt;
&lt;p&gt;Building software at scale is hard. As everyone who has read &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Mythical_Man-Month&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;The Mythical Man Month&lt;/em&gt;&lt;/a&gt; knows, you can't get better software just by hiring more engineers. You need better tools. Just as software is a multiplier for the productivity of end users, dev tools are a multiplier for the productivity of the people who build the software. So if you truly believe in your new company's mission, make it one of your priorities to use your special knowledge as an ex-Googler and bring them the best developer tools available.&lt;/p&gt;

&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Try out Sourcegraph.&lt;/strong&gt; Get started searching your code by &lt;a href=&quot;https://about.sourcegraph.com/get-started/&quot;&gt;self-hosting Sourcegraph&lt;/a&gt; – free up to 10 users. Or try &lt;a href=&quot;https://sourcegraph.com/search&quot;&gt;Sourcegraph Cloud&lt;/a&gt; to easily search public, open source code.&lt;/p&gt;
&lt;p&gt;Please feel free to ask us questions either via posting on Twitter&lt;a href=&quot;https://twitter.com/srcgraph&quot;&gt;@srcgraph&lt;/a&gt; or sending an email to &lt;a href=&quot;https://about.sourcegraph.com/cdn-cgi/l/email-protection#533b3a13203c26213036342132233b7d303c3e&quot;&gt;&lt;span class=&quot;__cf_email__&quot; data-cfemail=&quot;eb8382ab98849e99888e8c998a9b83c5888486&quot;&gt;[email protected]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 26 Nov 2020 05:59:28 +0000</pubDate>
<dc:creator>azhenley</dc:creator>
<og:type>website</og:type>
<og:title>An ex-Googler's guide to dev tools</og:title>
<og:image>https://about.sourcegraph.com/sourcegraph-mark.png</og:image>
<og:description>After leaving Google, many engineers miss the developer tools. Here's one ex-Googler's guide to navigating the dev tools landscape outside of Google, finding the ones that fill the gaps you're feeling, and introducing these to your new team.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://about.sourcegraph.com/blog/ex-googler-guide-dev-tools/</dc:identifier>
</item>
<item>
<title>Java is better than C++ for high speed trading systems</title>
<link>https://news.efinancialcareers.com/uk-en/3004875/low-latency-java-trading-systems</link>
<guid isPermaLink="true" >https://news.efinancialcareers.com/uk-en/3004875/low-latency-java-trading-systems</guid>
<description>&lt;p&gt;The accepted wisdom has it that if you're building a high speed trading system you probably want to use &lt;a href=&quot;https://news.efinancialcareers.com/uk-en/3001368/c-or-java&quot; target=&quot;_blank&quot;&gt;C++ instead of Java:&lt;/a&gt; it's closer to the metal and is therefore faster (lower latency). However, some leading figures in the industry beg to disagree. &lt;/p&gt;
&lt;p&gt;Peter Lawrey, CEO of Chronicle Software, knows a thing or two about low latency programming. A former trading performance engineer at Barclays and developer/researcher at hedge fund &lt;a href=&quot;https://news.efinancialcareers.com/uk-en/331992/what-is-it-like-to-work-for-millennium-management&quot; target=&quot;_blank&quot;&gt;Millennium Management &lt;/a&gt;(among other things), Lawrey founded Chronicle to work on high speed trading systems in 2013. The company counts ten &lt;a href=&quot;https://news.efinancialcareers.com/uk-en/256351/tier-1-tier-2-tier-3-investment-bank&quot; target=&quot;_blank&quot;&gt;tier one investment banks &lt;/a&gt;and multiple large hedge funds among its clients.&lt;/p&gt;

&lt;p&gt;Historically, Chronicle offered consulting services to clients looking to build low latency trading systems. More recently, however, it's pivoted to offering consultancy &lt;em&gt;and&lt;/em&gt; what it describes as a &quot;generic customizable [trading] infrastructure&quot; package for clients to iterate upon. This package is coded in Java.&lt;/p&gt;
&lt;p&gt;&quot;If you have an unlimited amount of time and resources, the best solution for speed will be coded in FPGA,&quot; says Lawrey, referring to the language that directly codes field-programmable gate arrays. &quot;If you still have a lot of time and resources and you want to create multiple exchange adaptors, you'll choose C++. - But if you want to engage with 20+ exchanges, to go to market quickly, and implement continuous performance tuning, you'll choose Java.&quot;&lt;/p&gt;
&lt;p&gt;The problem with C++ is its fallibility, says Lawrey: &quot;If you're not a really good C++ developer, you can shoot yourself in the foot and bring an entire project down.&quot; By way of example, Lawrey points to a system he encountered in an investment bank. It was coded in C++ and should have been fast, but Lawrey says the banks' team of developers instead spent most of their time looking at crash reports and trying to second guess where the C++  was going wrong. Because of this, he says the elements of the system that ran on Java were considerably faster. &quot;They were adding metrics in Java to see what the C++ system was going to do,&quot; he says. &quot;It was one of the most backward things I've seen in my career.&quot;  &lt;/p&gt;
&lt;p&gt;This doesn't mean, however, that all Java code is fast. Chronicle's system is built in what Lawrey describes as &quot;C-like Java&quot; and it's this that he encourages people to code low latency systems in. &lt;/p&gt;
&lt;p&gt;&quot;The way that we code is more like C++ than Java,&quot; says Lawrey. &quot;Essentially, we use a contrived form of Java that avoids all the Java constructs that make things go slow. We only use the constructs that are fast and efficient, and we avoid all the garbage.&quot; By simplifying Java and switching to very low level code, Lawrey says it can be possible to speed things up substantially. Sometimes it's simply a question of better diagnostics: &quot;Through simply changing the configuration of the code, we've been able to reduce latency at the 99.9th percentile by a factor of 25.&quot; &lt;/p&gt;
&lt;p&gt;The only problem with low latency Java is that most experience Java programmers struggle with the new paradigm.  &quot;A lot of people who program in Java are used to working in an environment where latency isn't a criteria,&quot; says Lawrey. &quot;They may have 15-20 years' experience, but they have no understanding of low level code and of thinking only in terms of the most essential things that need to be happening.&quot; &lt;/p&gt;
&lt;p&gt;Chronicle coaches clients' own developers in this form of low level Java. It also employs ten specialist Java developers of its own  and will be looking to expand further as it rolls out its platform globally. Lawrey says this emphasis on C-like Java can make it difficult to recruit. &quot;We began by hiring people from trading floors, but have more recently hired Masters and PhD students,&quot; he says.&lt;/p&gt;
&lt;p&gt;Even so, many of the candidates who approach Chronicle aren't suited to the work. &quot;Most Java developers are web developers and are used to modelling things they can see,&quot; says Lawrey. &quot;But in a trading system, you care about latencies you can't see, and they're not even your typical latencies - even one millisecond can be significant. The work is very theoretical and abstract and it's difficult to have a visual intuition of what's going on.&quot; &lt;/p&gt;
&lt;p&gt;Photo by &lt;a href=&quot;https://unsplash.com/@korpa?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Jr Korpa&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/speed?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Have a confidential story, tip, or comment you’d like to share? Contact: &lt;a href=&quot;mailto:sbutcher@efinancialcareers.com&quot;&gt;sbutcher@efinancialcareers.com&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; in the first instance. Whatsapp/Signal/Telegram also available. Bear with us if you leave a comment at the bottom of this article: all our comments are moderated by human beings. Sometimes these humans might be asleep, or away from their desks, so it may take a while for your comment to appear. Eventually it will – unless it’s offensive or libelous (in which case it won’t.)&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Nov 2020 05:53:56 +0000</pubDate>
<dc:creator>pjmlp</dc:creator>
<og:type>article</og:type>
<og:title>Why Java is better than C++ for high speed trading systems</og:title>
<og:description>You need to relearn Java to make it happen.</og:description>
<og:url>https://news.efinancialcareers.com/uk-en/3004875/low-latency-java-trading-systems</og:url>
<og:image>https://news.efinancialcareers.com/binaries/content/gallery/efinancial-careers/articles/2020/11/speed-9.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.efinancialcareers.com/uk-en/3004875/low-latency-java-trading-systems</dc:identifier>
</item>
<item>
<title>I spent eleven years working on this Line Rider track</title>
<link>https://delu.medium.com/i-spent-11-years-working-on-this-line-rider-track-96742fc0b709</link>
<guid isPermaLink="true" >https://delu.medium.com/i-spent-11-years-working-on-this-line-rider-track-96742fc0b709</guid>
<description>&lt;p id=&quot;6f8f&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;I was stuck on scening the chaos/warped space section. Every other section had clear rules, e.g. I could only use certain elements, whereas this section is supposed to have no rules. So I had to employ a different mindset to move forward: “Don’t think too much about it”. I didn’t think too much and doodled away and a beautiful mess came out.&lt;/p&gt;
&lt;h2 id=&quot;00d6&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Automation vs Manual Work&lt;/h2&gt;

&lt;a href=&quot;https://xkcd.com/1319/&quot; class=&quot;dg hp&quot; rel=&quot;noopener nofollow&quot;&gt;Automation&lt;/a&gt;, xkcd 2014
&lt;p id=&quot;7fb8&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;Programmers like me frequently have this dilemma: Should I manually do this tedious thing, or create automation to do it for me? In my case, I’m building tools that could be useful for everyone, so I do have incentive to automate as much as I can. But I had a quickly approaching deadline. I determined that it would be faster to manually draw ribbons than to figure out how to extend the curve tool to create them for me.&lt;/p&gt;
&lt;p id=&quot;55ab&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;Then, after I finished drawing the ribbons, I found out it took less time than expected to extend the curve tool to make ribbons. I’m not sure what lesson I learned here. Maybe I tend to err on the side of pessimism as a reaction from being too optimistic in the past? Predicting the required amount of work is a generally hard problem in software engineering.&lt;/p&gt;
&lt;h2 id=&quot;ecd3&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;&lt;strong class=&quot;bv&quot;&gt;Getting Attached vs Redoing it&lt;/strong&gt;&lt;/h2&gt;
&lt;p id=&quot;758d&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;There are times we get too attached to what we made and are unwilling to iterate upon it. There are times we keep redoing something without making progress. There are times we accidentally lose progress, but after redoing it, we realize we did it better the second time around. If you accidentally lose progress, reassure yourself you’ll do it better the second time.&lt;/p&gt;
&lt;h2 id=&quot;8229&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Working Outside Your Comfort Zone&lt;/h2&gt;

&lt;p id=&quot;3888&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;When you work outside your comfort zone, you become a lot more aware of your creative process. I’m not an illustrator or story teller, but I forced myself to work in those mediums and became hyperaware of the nature of those mediums and my own processes. This is how I’m bringing you all these lessons I’ve learned. This experience will help me with my future ambitions.&lt;/p&gt;
&lt;h2 id=&quot;7869&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Critical Feedback&lt;/h2&gt;
&lt;p id=&quot;3d0f&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;When we get engrossed in a project, it’s very easy to zoom in on details and lose sight of the bigger picture and we tend to get desensitized to other details. If you’re looking to achieve a specific effect with your project, or just want to understand how others perceive it in general, the best thing you can do is to ask for critical feedback from other people who work in the same or similar medium. Their perspective is uncolored by how much you’ve already stared at your project, and their different experiences, backgrounds, and tastes can bring you really valuable insight that you may not have been able to see otherwise.&lt;/p&gt;
&lt;p id=&quot;6655&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;I already planned out most of &lt;em class=&quot;hv&quot;&gt;Omniverse II&lt;/em&gt;, but right when I was finishing up the project, I knew I should verify if what I planned actually had the effect I wanted. So I solicited feedback from Rabid Squirrel, and they gave me really helpful suggestions like tweaking the camera work and adding the “danger spikes”.&lt;/p&gt;

&lt;p id=&quot;6a1f&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;Note: As I wrote this out, I realized these may be more suitable as standalone pieces with potential for way more depth. Consider these rough drafts.&lt;/p&gt;
&lt;h2 id=&quot;eb94&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Storytelling&lt;/h2&gt;
&lt;p id=&quot;ca27&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;The biggest lesson is how to tell a story. From that follows world building, lore, set creation (spatial structure), pacing, and generally being critical of everything with respect to fitting into the narrative. You may have a lot of cool ideas, but if you want to tell a coherent story, you need to make it cohesive and you’ll probably have to throw away the irrelevant parts, even if they are cool.&lt;/p&gt;
&lt;p id=&quot;f771&quot; class=&quot;gv gw fd gx b gy hq gz ha hb hr hc hd he hs hf hg hh ht hi hj hk hu hl hm ho db fz&quot;&gt;Unique to Line Rider is structural cohesion, how the track is spatially arranged. Consider the structure of the world you build and how Bosh’s traversal drives the narrative. Is Bosh entering a new area? Is he returning to a previous area? Did he fall and need to get back up?&lt;/p&gt;
&lt;h2 id=&quot;0cc0&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Olympic Puppetry as Narrative&lt;/h2&gt;
&lt;p id=&quot;d7f7&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;I wanted to demonstrate how we can use movement techniques as a means towards something greater rather than for its own sake. And the clearest way to do that is to reclaim such a feat of olympic puppetry as a compelling story, retrofitting a narrative in its place where the movement seems to emerge from how Bosh interacts with the environment he is in.&lt;/p&gt;
&lt;h2 id=&quot;9508&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Recycling/Revisiting as Narrative&lt;/h2&gt;
&lt;p id=&quot;fd19&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;Recycling was another one of those movement techniques done for the sake of overcoming the challenge. But it can be used for narrative purposes, like being stuck in a loop or traveling through a past part of the track in the opposite direction to “turn back”. I think there’s more narrative depth that could be done with revisiting, much more than in &lt;em class=&quot;hv&quot;&gt;Omniverse II&lt;/em&gt;, perhaps in a track featuring a more intricate story.&lt;/p&gt;
&lt;h2 id=&quot;ea3f&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Embrace the Void: Negative Space&lt;/h2&gt;
&lt;p id=&quot;b9d4&quot; class=&quot;gv gw fd gx b gy ji gz ha hb jj hc hd he jk hf hg hh jl hi hj hk jm hl hm ho db fz&quot;&gt;In a composition, negative space is the absence of content, contrasting with the content that’s there. While negative space is already commonly used in Line Rider tracks, I think it’s still worth discussing. Negative space in Line Rider can be in the form of the white void (absence of lines) or as airtime (absence of movement). There are obvious uses like dramatic moments in the music, but we should also consider more subtle “less is more” cases, like bringing attention to an object by removing details around the object.&lt;/p&gt;
&lt;h2 id=&quot;b0f5&quot; class=&quot;ik il fd as im in io ip iq ir is it iu iv iw ix iy iz ja jb jc jd je jf jg jh fz&quot;&gt;Embrace the Void: Fade Out&lt;/h2&gt;
</description>
<pubDate>Thu, 26 Nov 2020 03:11:21 +0000</pubDate>
<dc:creator>todsacerdoti</dc:creator>
<og:type>article</og:type>
<og:title>I Spent 11 Years Working on This Line Rider Track</og:title>
<og:description>I remember when I first discovered Line Rider, that Flash game from 2006 with the simple premise of drawing a track for a sledder to ride…</og:description>
<og:url>https://delu.medium.com/i-spent-11-years-working-on-this-line-rider-track-96742fc0b709</og:url>
<og:image>https://miro.medium.com/max/1200/1*lvColj0wMdy2BXvp5BH6-A.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://delu.medium.com/i-spent-11-years-working-on-this-line-rider-track-96742fc0b709</dc:identifier>
</item>
</channel>
</rss>