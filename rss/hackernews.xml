<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>COI – Chat Over IMAP</title>
<link>https://www.coi-dev.org/</link>
<guid isPermaLink="true" >https://www.coi-dev.org/</guid>
<description>&lt;h2 class=&quot;text-center&quot;&gt;&lt;strong&gt;Why Others do not Solve this Problem?&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;text-center&quot;&gt;Maybe you are thinking “&lt;strong&gt;I thought this is why we have Signal, Telegram and the other privacy-centric apps?&lt;/strong&gt;” – they might very well be better than some of the more popular networks, but in the end, they control the network and other providers are locked out. Basically, you are exchanging one silo with another. &lt;/p&gt;
&lt;p class=&quot;text-center&quot;&gt;“&lt;strong&gt;What about &lt;a href=&quot;https://xmpp.org/&quot; target=&quot;_blank&quot;&gt;XMPP&lt;/a&gt; and &lt;a href=&quot;https://matrix.org/blog/home/&quot; target=&quot;_blank&quot;&gt;Matrix.org&lt;/a&gt;?&lt;/strong&gt;” – glad you asked! We love XMPP and Matrix.org, because they provide a great solution, but this only solves the problem in theory though. With XMPP and Matrix.org -based services you would still need to convince everyone to join your new network. Easy in theory, very complex in practice! &lt;/p&gt;
&lt;p class=&quot;text-center&quot;&gt;“&lt;strong&gt;What about RCS?&lt;/strong&gt;“ – Most notably, RCS requires a device to have a phone number (MSISDN). As communication is quickly migrating towards pure IP based solutions, MSISDNs become a relics of the past. Most new innovative devices come without MSISDNs, e.g. voice enabled devices such as smart speakers, VR and AR devices, portable game consoles, etc. With this dependency on MSISDNs, RCS’ future is uncertain. Additionally, operators already have wasted millions with RCS, so they are hesitant when being asked to spend further millions on this technology. Last but not least, Apple does not support RCS out of the box at the moment, as they successfully operate a proprietary messaging service.&lt;/p&gt;
</description>
<pubDate>Thu, 21 Feb 2019 11:28:03 +0000</pubDate>
<dc:creator>smartmic</dc:creator>
<og:title>COI - Chat Over IMAP</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.coi-dev.org/</dc:identifier>
</item>
<item>
<title>Introduction to Algotrading (2011) [pdf]</title>
<link>http://isomorphisms.sdf.org/maxdama.pdf</link>
<guid isPermaLink="true" >http://isomorphisms.sdf.org/maxdama.pdf</guid>
<description>&lt;a href=&quot;http://isomorphisms.sdf.org/maxdama.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Thu, 21 Feb 2019 06:43:29 +0000</pubDate>
<dc:creator>steventhedev</dc:creator>
<og:title>COI - Chat Over IMAP</og:title>
<dc:language>en</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>http://isomorphisms.sdf.org/maxdama.pdf</dc:identifier>
</item>
<item>
<title>My Notes on How to Start a Startup by YC</title>
<link>https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/edit</link>
<guid isPermaLink="true" >https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/edit</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/edit&quot;&gt;https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/edit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19214512&quot;&gt;https://news.ycombinator.com/item?id=19214512&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 266&lt;/p&gt;
&lt;p&gt;# Comments: 46&lt;/p&gt;
</description>
<pubDate>Thu, 21 Feb 2019 04:20:13 +0000</pubDate>
<dc:creator>charleswzx</dc:creator>
<og:title>Summary: How to Start a Startup (YC)</og:title>
<og:type>article</og:type>
<og:url>https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/preview?_escaped_fragment_&amp;usp=embed_facebook</og:url>
<og:image>https://lh3.googleusercontent.com/3wMuzvN-rEs6STegpFDMI8qpAWima751cHG2iAKzt4xIdSo3630LfUgQP0rxk-bPtKXnHw=w1200-h630-p</og:image>
<og:description>Chapter 1: Foundation (Sam Altman) Why Should You Start a Startup? Reality isn’t so glamorous Stressful Always on call Hunched over tables Founder depression  Mark and friends @ FB You’ll be the boss? Everyone else is your boss CEOs report to everyone If you want power and authority, join the a...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.google.com/document/d/1wkJ6Ruh2IiR-caT-PS3n5Yt5VKcmIsVhuQwjgqK7030/preview?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Simdjson – Parsing Gigabytes of JSON per Second</title>
<link>https://github.com/lemire/simdjson</link>
<guid isPermaLink="true" >https://github.com/lemire/simdjson</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;h2&gt;A C++ library to see how fast we can parse JSON with complete validation.&lt;/h2&gt;
&lt;p&gt;JSON documents are everywhere on the Internet. Servers spend a lot of time parsing these documents. We want to accelerate the parsing of JSON per se using commonly available SIMD instructions as much as possible while doing full validation (including character encoding).&lt;/p&gt;
&lt;h2&gt;Some performance results&lt;/h2&gt;
&lt;p&gt;We can use a quarter or fewer instructions than a state-of-the-art parser like RapidJSON, and half as many as sajson. To our knowledge, simdjson is the first fully-validating JSON parser to run at gigabytes per second on commodity processors.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/lemire/simdjson/blob/master/doc/gbps.png&quot;&gt;&lt;img src=&quot;https://github.com/lemire/simdjson/raw/master/doc/gbps.png&quot; width=&quot;90%&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On a Skylake processor, the parsing speeds (in GB/s) of various processors on the twitter.json file are as follows.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;parser&lt;/th&gt;
&lt;th&gt;GB/s&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;simdjson&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RapidJSON encoding-validation&lt;/td&gt;
&lt;td&gt;0.51&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RapidJSON encoding-validation, insitu&lt;/td&gt;
&lt;td&gt;0.71&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sajson (insitu, dynamic)&lt;/td&gt;
&lt;td&gt;0.70&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;sajson (insitu, static)&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;dropbox&lt;/td&gt;
&lt;td&gt;0.14&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fastjson&lt;/td&gt;
&lt;td&gt;0.26&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;gason&lt;/td&gt;
&lt;td&gt;0.85&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ultrajson&lt;/td&gt;
&lt;td&gt;0.42&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;jsmn&lt;/td&gt;
&lt;td&gt;0.28&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;cJSON&lt;/td&gt;
&lt;td&gt;0.34&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;We support platforms like Linux or macOS, as well as Windows through Visual Studio 2017 or later.&lt;/li&gt;
&lt;li&gt;A processor with AVX2 (i.e., Intel processors starting with the Haswell microarchitecture released 2013, and processors from AMD starting with the Ryzen)&lt;/li&gt;
&lt;li&gt;A recent C++ compiler (e.g., GNU GCC or LLVM CLANG or Visual Studio 2017), we assume C++17. GNU GCC 7 or better or LLVM's clang 6 or better.&lt;/li&gt;
&lt;li&gt;Some benchmark scripts assume bash and other common utilities, but they are optional.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;This code is made available under the Apache License 2.0.&lt;/p&gt;
&lt;p&gt;Under Windows, we build some tools using the windows/dirent_portable.h file (which is outside our library code): it under the liberal (business-friendly) MIT license.&lt;/p&gt;
&lt;h2&gt;Code example&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;simdjson/jsonparser.h&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

/...

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;char&lt;/span&gt; * filename = ... &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; use whatever means you want to get a string of you JSON document&lt;/span&gt;
std::string_view p = get_corpus(filename);
ParsedJson pj;
pj.allocateCapacity(p.size()); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; allocate memory for parsing up to p.size() bytes&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;bool&lt;/span&gt; is_ok = json_parse(p, pj); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; do the parsing, return false on error&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; parsing is done!&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; You can safely delete the string content&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;free&lt;/span&gt;((&lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt;*)p.data());
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; the ParsedJson document can be used here&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; js can be reused with other json_parse calls.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to use a simpler API if you do not mind having the overhead of memory allocation with each new JSON document:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;simdjson/jsonparser.h&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

/...

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;char&lt;/span&gt; * filename = ... &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;&lt;/span&gt;
std::string_view p = get_corpus(filename);
ParsedJson pj = build_parsed_json(p); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; do the parsing&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; you no longer need p at this point, can do aligned_free((void*)p.data())&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt;( ! pj.isValid() ) {
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; something went wrong&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Usage: easy single-header version&lt;/h2&gt;
&lt;p&gt;See the &quot;singleheader&quot; repository for a single header version. See the included file &quot;amalgamation_demo.cpp&quot; for usage. This requires no specific build system: just copy the files in your project in your include path. You can then include them quite simply:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;&lt;/span&gt;iostream&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;simdjson.h&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
#&lt;span class=&quot;pl-k&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;simdjson.cpp&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;pl-k&quot;&gt;char&lt;/span&gt; *argv[]) {
  &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;char&lt;/span&gt; * filename = argv[&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;]; 
  std::string_view p = &lt;span class=&quot;pl-c1&quot;&gt;get_corpus&lt;/span&gt;(filename);
  ParsedJson pj = &lt;span class=&quot;pl-c1&quot;&gt;build_parsed_json&lt;/span&gt;(p); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; do the parsing&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt;( ! pj.&lt;span class=&quot;pl-c1&quot;&gt;isValid&lt;/span&gt;() ) {
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;not valid&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;valid&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
  }
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; EXIT_SUCCESS;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: In some settings, it might be desirable to precompile &lt;code&gt;simdjson.cpp&lt;/code&gt; instead of including it.&lt;/p&gt;
&lt;h2&gt;Usage (old-school Makefile on platforms like Linux or macOS)&lt;/h2&gt;
&lt;p&gt;Requirements: recent clang or gcc, and make. We recommend at least GNU GCC/G++ 7 or LLVM clang 6. A system like Linux or macOS is expected.&lt;/p&gt;
&lt;p&gt;To test:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make
make test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To run benchmarks:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make parse
./parse jsonexamples/twitter.json
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Under Linux, the &lt;code&gt;parse&lt;/code&gt; command gives a detailed analysis of the performance counters.&lt;/p&gt;
&lt;p&gt;To run comparative benchmarks (with other parsers):&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make benchmark
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Usage (CMake on platforms like Linux or macOS)&lt;/h2&gt;
&lt;p&gt;Requirements: We require a recent version of cmake. On macOS, the easiest way to install cmake might be to use &lt;a href=&quot;https://brew.sh&quot; rel=&quot;nofollow&quot;&gt;brew&lt;/a&gt; and then type&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew install cmake
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;There is an &lt;a href=&quot;https://linuxbrew.sh&quot; rel=&quot;nofollow&quot;&gt;equivalent brew on Linux which works the same way as well&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You need a recent compiler like clang or gcc. We recommend at least GNU GCC/G++ 7 or LLVM clang 6. For example, you can install a recent compiler with brew:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew install gcc@8
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Optional: You need to tell cmake which compiler you wish to use by setting the CC and CXX variables. Under bash, you can do so with commands such as &lt;code&gt;export CC=gcc-7&lt;/code&gt; and &lt;code&gt;export CXX=g++-7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Building: While in the project repository, do the following:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mkdir build
cd build
cmake ..
make
make test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;CMake will build a library. By default, it builds a shared library (e.g., libsimdjson.so on Linux).&lt;/p&gt;
&lt;p&gt;You can build a static library:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mkdir buildstatic
cd buildstatic
cmake -DSIMDJSON_BUILD_STATIC=ON ..
make 
make test
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In some cases, you may want to specify your compiler, especially if the default compiler on your system is too old. You may proceed as follows:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;brew install gcc@8
mkdir build
cd build
export CXX=g++-8 CC=gcc-8
cmake ..
make
make test
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Usage (CMake on Windows using Visual Studio)&lt;/h2&gt;
&lt;p&gt;We are assuming that you have a common Windows PC with at least Visual Studio 2017, and an x64 processor with AVX2 support (2013 Haswell or later).&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Grab the simdjson code from GitHub, e.g., by cloning it using &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a href=&quot;https://cmake.org/download/&quot; rel=&quot;nofollow&quot;&gt;CMake&lt;/a&gt;. When you install it, make sure to ask that &lt;code&gt;cmake&lt;/code&gt; be made available from the command line. Please choose a recent version of cmake.&lt;/li&gt;
&lt;li&gt;Create a subdirectory within simdjson, such as &lt;code&gt;VisualStudio&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using a shell, go to this newly created directory.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cmake -DCMAKE_GENERATOR_PLATFORM=x64 ..&lt;/code&gt; in the shell while in the &lt;code&gt;VisualStudio&lt;/code&gt; repository. (Alternatively, if you want to build a DLL, you may use the command line &lt;code&gt;cmake -DCMAKE_GENERATOR_PLATFORM=x64 -DSIMDJSON_BUILD_STATIC=OFF ..&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;This last command created a Visual Studio solution file in the newly created directory (e.g., &lt;code&gt;simdjson.sln&lt;/code&gt;). Open this file in Visual Studio. You should now be able to build the project and run the tests. For example, in the &lt;code&gt;Solution Explorer&lt;/code&gt; window (available from the &lt;code&gt;View&lt;/code&gt; menu), right-click &lt;code&gt;ALL_BUILD&lt;/code&gt; and select &lt;code&gt;Build&lt;/code&gt;. To test the code, still in the &lt;code&gt;Solution Explorer&lt;/code&gt; window, select &lt;code&gt;RUN_TESTS&lt;/code&gt; and select &lt;code&gt;Build&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Tools&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;json2json mydoc.json&lt;/code&gt; parses the document, constructs a model and then dumps back the result to standard output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json2json -d mydoc.json&lt;/code&gt; parses the document, constructs a model and then dumps model (as a tape) to standard output. The tape format is described in the accompanying file &lt;code&gt;tape.md&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minify mydoc.json&lt;/code&gt; minifies the JSON document, outputting the result to standard output. Minifying means to remove the unneeded white space charaters.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Scope&lt;/h2&gt;
&lt;p&gt;We provide a fast parser. It fully validates the input according to the various specifications. The parser builds a useful immutable (read-only) DOM (document-object model) which can be later accessed.&lt;/p&gt;
&lt;p&gt;To simplify the engineering, we make some assumptions.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We support UTF-8 (and thus ASCII), nothing else (no Latin, no UTF-16). We do not believe that this is a genuine limitation in the sense that we do not think that there is any serious application that needs to process JSON data without an ASCII or UTF-8 encoding.&lt;/li&gt;
&lt;li&gt;We store strings as NULL terminated C strings. Thus we implicitly assume that you do not include a NULL character within your string, which is allowed technically speaking if you escape it (\u0000).&lt;/li&gt;
&lt;li&gt;We assume AVX2 support which is available in all recent mainstream x86 processors produced by AMD and Intel. No support for non-x86 processors is included though it can be done. We plan to support ARM processors (help is invited).&lt;/li&gt;
&lt;li&gt;In cases of failure, we just report a failure without any indication as to the nature of the problem. (This can be easily improved without affecting performance.)&lt;/li&gt;
&lt;li&gt;As allowed by the specification, we allow repeated keys within an object (other parsers like sajson do the same).&lt;/li&gt;
&lt;li&gt;Performance is optimized for JSON documents spanning at least a few kilobytes up to many megabytes: the performance issues with having to parse many tiny JSON documents or one truly enormous JSON document are different.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;We do not aim to provide a general-purpose JSON library.&lt;/em&gt; A library like RapidJSON offers much more than just parsing, it helps you generate JSON and offers various other convenient functions. We merely parse the document.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;The input string is unmodified. (Parsers like sajson and RapidJSON use the input string as a buffer.)&lt;/li&gt;
&lt;li&gt;We parse integers and floating-point numbers as separate types which allows us to support large 64-bit integers in [-9223372036854775808,9223372036854775808), like a Java &lt;code&gt;long&lt;/code&gt; or a C/C++ &lt;code&gt;long long&lt;/code&gt;. Among the parsers that differentiate between integers and floating-point numbers, not all support 64-bit integers. (For example, sajson rejects JSON files with integers larger than or equal to 2147483648. RapidJSON will parse a file containing an overly long integer like 18446744073709551616 as a floating-point number.) When we cannot represent exactly an integer as a signed 64-bit value, we reject the JSON document.&lt;/li&gt;
&lt;li&gt;We do full UTF-8 validation as part of the parsing. (Parsers like fastjson, gason and dropbox json11 do not do UTF-8 validation.)&lt;/li&gt;
&lt;li&gt;We fully validate the numbers. (Parsers like gason and ultranjson will accept &lt;code&gt;[0e+]&lt;/code&gt; as valid JSON.)&lt;/li&gt;
&lt;li&gt;We validate string content for unescaped characters. (Parsers like fastjson and ultrajson accept unescaped line breaks and tabs in strings.)&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Architecture&lt;/h2&gt;
&lt;p&gt;The parser works in three stages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Stage 1. (Find marks) Identifies quickly structure elements, strings, and so forth. We validate UTF-8 encoding at that stage.&lt;/li&gt;
&lt;li&gt;Stage 2. (Structure building) Involves constructing a &quot;tree&quot; of sort (materialized as a tape) to navigate through the data. Strings and numbers are parsed at this stage.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Navigating the parsed document&lt;/h2&gt;
&lt;p&gt;Here is a code sample to dump back the parsed JSON to a string:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
    ParsedJson::iterator &lt;span class=&quot;pl-en&quot;&gt;pjh&lt;/span&gt;(pj);
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (!pjh.isOk()) {
      std::cerr &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt; Could not iterate parsed result. &lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &amp;lt;&amp;lt; std::endl;
      &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; EXIT_FAILURE;
    }
    &lt;span class=&quot;pl-en&quot;&gt;compute_dump&lt;/span&gt;(pj);
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; where compute_dump is :&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;compute_dump&lt;/span&gt;(ParsedJson::iterator &amp;amp;pjh) {
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;is_object&lt;/span&gt;()) {
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;{&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;down&lt;/span&gt;()) {
      pjh.&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(std::cout); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; must be a string&lt;/span&gt;
      std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
      pjh.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;();
      &lt;span class=&quot;pl-c1&quot;&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;()) {
        std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
        pjh.&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(std::cout);
        std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
        pjh.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;();
        &lt;span class=&quot;pl-c1&quot;&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      }
      pjh.&lt;span class=&quot;pl-c1&quot;&gt;up&lt;/span&gt;();
    }
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;}&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;is_array&lt;/span&gt;()) {
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;[&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;down&lt;/span&gt;()) {
      &lt;span class=&quot;pl-c1&quot;&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; (pjh.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;()) {
        std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;,&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
        &lt;span class=&quot;pl-c1&quot;&gt;compute_dump&lt;/span&gt;(pjh); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; let us recurse&lt;/span&gt;
      }
      pjh.&lt;span class=&quot;pl-c1&quot;&gt;up&lt;/span&gt;();
    }
    std::cout &amp;lt;&amp;lt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;]&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
  } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; {
    pjh.&lt;span class=&quot;pl-c1&quot;&gt;print&lt;/span&gt;(std::cout); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; just print the lone value&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following function will find all user.id integers:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;simdjson_traverse&lt;/span&gt;(std::vector&amp;lt;&lt;span class=&quot;pl-c1&quot;&gt;int64_t&lt;/span&gt;&amp;gt; &amp;amp;answer, ParsedJson::iterator &amp;amp;i) {
  &lt;span class=&quot;pl-k&quot;&gt;switch&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;get_type&lt;/span&gt;()) {
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;down&lt;/span&gt;()) {
      &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;bool&lt;/span&gt; founduser = &lt;span class=&quot;pl-c1&quot;&gt;equals&lt;/span&gt;(i.&lt;span class=&quot;pl-c1&quot;&gt;get_string&lt;/span&gt;(), &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        i.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;(); &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; move to value&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;is_object&lt;/span&gt;()) {
          &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (founduser &amp;amp;&amp;amp; i.&lt;span class=&quot;pl-c1&quot;&gt;move_to_key&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;id&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)) {
            &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;is_integer&lt;/span&gt;()) {
              answer.&lt;span class=&quot;pl-c1&quot;&gt;push_back&lt;/span&gt;(i.&lt;span class=&quot;pl-c1&quot;&gt;get_integer&lt;/span&gt;());
            }
            i.&lt;span class=&quot;pl-c1&quot;&gt;up&lt;/span&gt;();
          }
          &lt;span class=&quot;pl-c1&quot;&gt;simdjson_traverse&lt;/span&gt;(answer, i);
        } &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;is_array&lt;/span&gt;()) {
          &lt;span class=&quot;pl-c1&quot;&gt;simdjson_traverse&lt;/span&gt;(answer, i);
        }
      } &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;());
      i.&lt;span class=&quot;pl-c1&quot;&gt;up&lt;/span&gt;();
    }
    &lt;span class=&quot;pl-k&quot;&gt;break&lt;/span&gt;;
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;[&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;down&lt;/span&gt;()) {
      &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; {
        &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;is_object_or_array&lt;/span&gt;()) {
          &lt;span class=&quot;pl-c1&quot;&gt;simdjson_traverse&lt;/span&gt;(answer, i);
        }
      } &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; (i.&lt;span class=&quot;pl-c1&quot;&gt;next&lt;/span&gt;());
      i.&lt;span class=&quot;pl-c1&quot;&gt;up&lt;/span&gt;();
    }
    &lt;span class=&quot;pl-k&quot;&gt;break&lt;/span&gt;;
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;l&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;d&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;n&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;t&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;f&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;:
  &lt;span class=&quot;pl-k&quot;&gt;default&lt;/span&gt;:
    &lt;span class=&quot;pl-k&quot;&gt;break&lt;/span&gt;;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;In-depth comparisons&lt;/h2&gt;
&lt;p&gt;If you want to see how a wide range of parsers validate a given JSON file:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make allparserscheckfile
./allparserscheckfile myfile.json
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For performance comparisons:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make parsingcompetition
./parsingcompetition myfile.json
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For broader comparisons:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;make allparsingcompetition
./allparsingcompetition myfile.json
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Various References&lt;/h2&gt;
&lt;p&gt;Inspiring links:&lt;/p&gt;
&lt;p&gt;Validating UTF-8 takes no more than 0.7 cycles per byte:&lt;/p&gt;
&lt;h2&gt;Remarks on JSON parsing&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;The JSON spec defines what a JSON parser is:&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;A JSON parser transforms a JSON text into another representation. A JSON parser MUST accept all texts that conform to the JSON grammar. A JSON parser MAY accept non-JSON forms or extensions. An implementation may set limits on the size of texts that it accepts. An implementation may set limits on the maximum depth of nesting. An implementation may set limits on the range and precision of numbers. An implementation may set limits on the length and character contents of strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;JSON is not JavaScript:&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;All JSON is Javascript but NOT all Javascript is JSON. So {property:1} is invalid because property does not have double quotes around it. {'property':1} is also invalid, because it's single quoted while the only thing that can placate the JSON specification is double quoting. JSON is even fussy enough that {&quot;property&quot;:.1} is invalid too, because you should have of course written {&quot;property&quot;:0.1}. Also, don't even think about having comments or semicolons, you guessed it: they're invalid. (credit:&lt;a href=&quot;https://github.com/elzr/vim-json&quot;&gt;https://github.com/elzr/vim-json&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;The structural characters are:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;begin-array     =  [ left square bracket
begin-object    =  { left curly bracket
end-array       =  ] right square bracket
end-object      =  } right curly bracket
name-separator  = : colon
value-separator = , comma
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Pseudo-structural elements&lt;/h3&gt;
&lt;p&gt;A character is pseudo-structural if and only if:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Not enclosed in quotes, AND&lt;/li&gt;
&lt;li&gt;Is a non-whitespace character, AND&lt;/li&gt;
&lt;li&gt;It's preceding chararacter is either: (a) a structural character, OR (b) whitespace.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This helps as we redefine some new characters as pseudo-structural such as the characters 1, 1, G, n in the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{ &quot;foo&quot; : 1.5, &quot;bar&quot; : 1.5 GEOFF_IS_A_DUMMY bla bla , &quot;baz&quot;, null }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Academic References&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;T.Mühlbauer, W.Rödiger, R.Seilbeck, A.Reiser, A.Kemper, and T.Neumann. Instant loading for main memory databases. PVLDB, 6(14):1702–1713, 2013. (SIMD-based CSV parsing)&lt;/li&gt;
&lt;li&gt;Mytkowicz, Todd, Madanlal Musuvathi, and Wolfram Schulte. &quot;Data-parallel finite-state machines.&quot; ACM SIGARCH Computer Architecture News. Vol. 42. No. 1. ACM, 2014.&lt;/li&gt;
&lt;li&gt;Lu, Yifan, et al. &quot;Tree structured data processing on GPUs.&quot; Cloud Computing, Data Science &amp;amp; Engineering-Confluence, 2017 7th International Conference on. IEEE, 2017.&lt;/li&gt;
&lt;li&gt;Sidhu, Reetinder. &quot;High throughput, tree automata based XML processing using FPGAs.&quot; Field-Programmable Technology (FPT), 2013 International Conference on. IEEE, 2013.&lt;/li&gt;
&lt;li&gt;Dai, Zefu, Nick Ni, and Jianwen Zhu. &quot;A 1 cycle-per-byte XML parsing accelerator.&quot; Proceedings of the 18th annual ACM/SIGDA international symposium on Field programmable gate arrays. ACM, 2010.&lt;/li&gt;
&lt;li&gt;Lin, Dan, et al. &quot;Parabix: Boosting the efficiency of text processing on commodity processors.&quot; High Performance Computer Architecture (HPCA), 2012 IEEE 18th International Symposium on. IEEE, 2012. &lt;a href=&quot;http://parabix.costar.sfu.ca/export/1783/docs/HPCA2012/final_ieee/final.pdf&quot; rel=&quot;nofollow&quot;&gt;http://parabix.costar.sfu.ca/export/1783/docs/HPCA2012/final_ieee/final.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deshmukh, V. M., and G. R. Bamnote. &quot;An empirical evaluation of optimization parameters in XML parsing for performance enhancement.&quot; Computer, Communication and Control (IC4), 2015 International Conference on. IEEE, 2015.&lt;/li&gt;
&lt;li&gt;Moussalli, Roger, et al. &quot;Efficient XML Path Filtering Using GPUs.&quot; ADMS@ VLDB. 2011.&lt;/li&gt;
&lt;li&gt;Jianliang, Ma, et al. &quot;Parallel speculative dom-based XML parser.&quot; High Performance Computing and Communication &amp;amp; 2012 IEEE 9th International Conference on Embedded Software and Systems (HPCC-ICESS), 2012 IEEE 14th International Conference on. IEEE, 2012.&lt;/li&gt;
&lt;li&gt;Li, Y., Katsipoulakis, N.R., Chandramouli, B., Goldstein, J. and Kossmann, D., 2017. Mison: a fast JSON parser for data analytics. Proceedings of the VLDB Endowment, 10(10), pp.1118-1129. &lt;a href=&quot;http://www.vldb.org/pvldb/vol10/p1118-li.pdf&quot; rel=&quot;nofollow&quot;&gt;http://www.vldb.org/pvldb/vol10/p1118-li.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., et al. &quot;Parallel scanning with bitstream addition: An xml case study.&quot; European Conference on Parallel Processing. Springer, Berlin, Heidelberg, 2011.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., Kenneth S. Herdy, and Dan Lin. &quot;High performance XML parsing using parallel bit stream technology.&quot; Proceedings of the 2008 conference of the center for advanced studies on collaborative research: meeting of minds. ACM, 2008.&lt;/li&gt;
&lt;li&gt;Shah, Bhavik, et al. &quot;A data parallel algorithm for XML DOM parsing.&quot; International XML Database Symposium. Springer, Berlin, Heidelberg, 2009.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., and Dan Lin. &quot;Architectural support for SWAR text processing with parallel bit streams: the inductive doubling principle.&quot; ACM Sigplan Notices. Vol. 44. No. 3. ACM, 2009.&lt;/li&gt;
&lt;li&gt;Amagasa, Toshiyuki, Mana Seino, and Hiroyuki Kitagawa. &quot;Energy-Efficient XML Stream Processing through Element-Skipping Parsing.&quot; Database and Expert Systems Applications (DEXA), 2013 24th International Workshop on. IEEE, 2013.&lt;/li&gt;
&lt;li&gt;Medforth, Nigel Woodland. &quot;icXML: Accelerating Xerces-C 3.1. 1 using the Parabix Framework.&quot; (2013).&lt;/li&gt;
&lt;li&gt;Zhang, Qiang Scott. Embedding Parallel Bit Stream Technology Into Expat. Diss. Simon Fraser University, 2010.&lt;/li&gt;
&lt;li&gt;Cameron, Robert D., et al. &quot;Fast Regular Expression Matching with Bit-parallel Data Streams.&quot;&lt;/li&gt;
&lt;li&gt;Lin, Dan. Bits filter: a high-performance multiple string pattern matching algorithm for malware detection. Diss. School of Computing Science-Simon Fraser University, 2010.&lt;/li&gt;
&lt;li&gt;Yang, Shiyang. Validation of XML Document Based on Parallel Bit Stream Technology. Diss. Applied Sciences: School of Computing Science, 2013.&lt;/li&gt;
&lt;li&gt;N. Nakasato, &quot;Implementation of a parallel tree method on a GPU&quot;, Journal of Computational Science, vol. 3, no. 3, pp. 132-141, 2012.&lt;/li&gt;
&lt;/ul&gt;&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 21 Feb 2019 03:53:23 +0000</pubDate>
<dc:creator>cmsimike</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/391987?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>lemire/simdjson</og:title>
<og:url>https://github.com/lemire/simdjson</og:url>
<og:description>Parsing gigabytes of JSON per second . Contribute to lemire/simdjson development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/lemire/simdjson</dc:identifier>
</item>
<item>
<title>Falsehoods Programmers Believe About Phone Numbers (2016)</title>
<link>https://github.com/googlei18n/libphonenumber/blob/master/FALSEHOODS.md</link>
<guid isPermaLink="true" >https://github.com/googlei18n/libphonenumber/blob/master/FALSEHOODS.md</guid>
<description>
&lt;p&gt;... and tips on how to use libphonenumber.&lt;/p&gt;
&lt;p&gt;Given how ubiquitous phone numbers are and how long they've been around, it's surprising how many false assumptions programmers continue to make about them.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;An individual has a phone number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some people do not own phones, or do not wish to provide you with their telephone number when asked. Do not require a user to provide a phone number unless it is essential, and whenever possible try and provide a fallback to accommodate these users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;An individual has only one phone number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Obviously, this isn't necessarily true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A phone number uniquely identifies an individual&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It wasn't even that long ago that mobile phones didn't exist, and it was common for an entire household to share one fixed-line telephone number. In some parts of the world, this is still true, and relatives (or even friends) share a single phone number. Many phone services (especially for businesses) allow multiple inbound calls to or outbound calls from the same phone number.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers cannot be re-used&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Old phone numbers are recycled and get reassigned to other people.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers that are valid today will always be valid. Phone numbers of a certain type today (e.g., mobile) will never be reassigned to another type.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A phone number which connects today may be disconnected tomorrow. A number which is free to call today may cost money to call tomorrow. The phone company may decide to expand the range of available phone numbers by inserting a digit into an existing number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Don’t store properties for a phone number such as validity or type. Check this information again from the library when you need it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Each country calling code corresponds to exactly one country&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The USA, Canada, and several Caribbean islands share the country calling code +1. Russia and Kazakhstan share +7. These are not the only examples!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Each country has only one country calling code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As of this present moment (in Mar. 2016), phones in the disputed territory and partially recognised state of Kosovo may be reached by dialing the country calling code for Serbia (+381), Slovenia (+386), or Monaco (+377), depending on where and when one obtained the number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Use a phone widget to encourage users to enter their phone number in an international format such that it can be unambiguously understood.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A phone number is dialable from anywhere&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some numbers can only be dialed within the country. Some can only be dialled from within a subset of countries, such as the +800 &lt;a href=&quot;https://en.wikipedia.org/wiki/Toll-free_telephone_number#Universal_International_Freephone_Service&quot; rel=&quot;nofollow&quot;&gt;Universal International Freephone Numbers&lt;/a&gt;. Some may be dialable only if the caller is a subscriber to a particular telecom company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;You can send a text message to any phone number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A lot of people still only have a fixed-line telephone, which typically cannot send or receive text messages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Whenever possible, try and accommodate these users by calling them with a voice message or voice prompts. Alternatively, if your service requires sending text messages, verify that the number can receive text messages after the user provides it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Only mobile phones can receive text messages&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some service providers support sending and receiving text messages to fixed-line numbers. There are also online services like Skype that can send and receive text messages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;There are only two ways to dial a phone number: domestically and from overseas&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some numbers may need different prefixes depending on: the carrier you are using; what device you are dialling from/to; whether you are inside or outside a particular geographical region.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In Brazil, to dial numbers internally but across a certain geographical boundary, a carrier code must be explicitly dialed to say which carrier you will use to pay for the call.&lt;/li&gt;
&lt;li&gt;In Nepal, the leading zero in national format is omitted depending on whether the originating phone is mobile or fixed-line.&lt;/li&gt;
&lt;li&gt;In New Zealand, you need to dial the area-code (e.g. 03) even if the number is within the same area-code region as you are, unless it is &quot;close&quot; (something approximating city/district boundaries), in which case it shouldn’t be dialled.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Use formatForMobileDialling to get the number a user should actually dial on their mobile phone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;To make a number dialable, you only need to change the prefix&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In Argentina, to dial a mobile number domestically, the digits &quot;15&quot; need to be inserted &lt;em&gt;after&lt;/em&gt; the area code but &lt;em&gt;before&lt;/em&gt; the local number, and the &quot;9&quot; after the country code (54) needs to be removed. This transforms +54 9 2982 123456 into 02982 15 123456.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No prefix of a valid phone number can be a valid phone number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In some countries, it's possible to connect to a different endpoint by dialing more digits after a number. So &quot;12345678&quot; may not reach the same person as dialing &quot;123456&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;An invalid number will not reach an endpoint&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In some countries, or on some phones, extra digits are thrown away. Hence, 1-800-MICROSOFT is an invalid number - but it still connects to Microsoft, since any later digits are ignored. Numbers such as &quot;911&quot; can be reached by dialling &quot;911 123&quot; in some countries: but not in others.&lt;/p&gt;
&lt;p&gt;In other countries, invalid numbers may be &quot;fixed&quot; by a carrier, e.g., adding a mobile token if they know it is a mobile number, such that it connects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;All valid phone numbers follow the ITU specifications&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ITU-T specifies that a phone number cannot be longer than fifteen digits, with one to three digits reserved for the country calling code, but valid numbers in Germany have been assigned that are longer than this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;All valid phone numbers belong to a country&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are many &quot;country calling codes&quot; issued to non-geographical entities, such as satellite services, and the &quot;800&quot; code for &lt;a href=&quot;https://en.wikipedia.org/wiki/Toll-free_telephone_number#Universal_International_Freephone_Service&quot; rel=&quot;nofollow&quot;&gt;Universal International Freephone Numbers&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers contain only digits&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In Israel, certain advertising numbers start with a &lt;code&gt;*&lt;/code&gt;. In New Zealand, non-urgent traffic incidents can be reported by calling &lt;code&gt;*555&lt;/code&gt; from a mobile phone. Alpha characters may also be used in phone numbers, such as in &lt;code&gt;1-800-Flowers&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers are always written in ASCII&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In Egypt, it is common for phone numbers to be written in native digits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers have only one prefix (area code or national destination code) at a given time&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the mid-90s in Iceland, phone numbers changed from 5 and 6 digits to 7 digits. The old system had regional prefixes, but the new one doesn't. During the transition period, phone numbers could be reached by the old area code or the new 7 digit number (a different prefix). For example, a Reykjavik phone number could be dialed with &lt;code&gt;nnnnn&lt;/code&gt; and &lt;code&gt;55nnnnn&lt;/code&gt; inside the region, and &lt;code&gt;91-nnnnn&lt;/code&gt; and &lt;code&gt;55nnnnn&lt;/code&gt; from outside.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; During transition periods, make sure that both forms of a number are supported for look-up by phone number. If sending messages/dialling affected numbers, both the new and old prefix may need to be tried. Depending on the type of transition, you may need to contact affected customers and ask them to update their number.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A leading zero in numbers formatted for domestic usage can always be discarded when dialing from abroad&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In some countries, people write the national prefix in brackets (typically &lt;code&gt;(0)&lt;/code&gt;) after the country calling code to indicate that it should be discarded when dialing internationally. In Italy, since 1988, the prefix was &quot;fixed&quot; to the phone numbers, so that &lt;code&gt;(01) 2345&lt;/code&gt; became &lt;code&gt;012345&lt;/code&gt; and should be dialed (internationally) as &lt;code&gt;+39012345&lt;/code&gt; (including the leading zero).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Use the library to parse and format numbers to handle this correctly for every country.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The country or area code of a phone number indicates the user's location, place of residence, time-zone, or preferred language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are many reasons for someone to have a phone number issued in a state or region other than where they reside or hold citizenship.&lt;/p&gt;
&lt;p&gt;These include, but are not limited to:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;Moving within a country&lt;/em&gt;: In countries with phone number portability, you may retain your number when moving, even in some cases if it is a fixed-line number and even if it has an area code (see &lt;em&gt;&lt;a href=&quot;https://xkcd.com/1129/&quot; rel=&quot;nofollow&quot;&gt;xkcd&lt;/a&gt;&lt;/em&gt; for a US example.)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Moving to another country&lt;/em&gt;: Some people keep their mobile phones when they move to another country.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Geopolitical turmoil&lt;/em&gt;: Sometimes countries change their borders, cease to exist, or come into existence.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Business, family, and friends&lt;/em&gt;: A business may have many customers in a neighbouring country, or a person may have many family and friends there.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wanting cheaper rates&lt;/em&gt;: VoIP is often cheaper than regular calls. People traveling around Europe may get a SIM card from one country and have a roaming plan.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that geographical area codes are assigned in some countries to mobile phones.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Programmers should not disallow users from signing up with a phone number merely because it belongs to another country. Care should be taken when calling methods such as &lt;code&gt;isValidNumberForRegion&lt;/code&gt; that this is what's actually intended. If you have a phone input widget, make sure you allow numbers to be entered in international format (i.e., allow the &lt;code&gt;+&lt;/code&gt; sign) so people can sign up with an international contact number.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The plus sign in front of phone numbers in international format is optional, or can always be replaced by &lt;code&gt;00&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The plus sign is part of the &lt;a href=&quot;https://en.wikipedia.org/wiki/E.164&quot; rel=&quot;nofollow&quot;&gt;E.164 format&lt;/a&gt; for international telephone numbers. It can be replaced with the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_international_call_prefixes&quot; rel=&quot;nofollow&quot;&gt;international call prefix&lt;/a&gt; when dialing internationally. Note that while &lt;code&gt;00&lt;/code&gt; is a common international call prefix, this actually varies by country.&lt;/p&gt;
&lt;p&gt;In North America, which has a country calling code of &lt;code&gt;+1&lt;/code&gt;, it is a common error to drop the &lt;code&gt;+&lt;/code&gt; in front of the number and write it like &lt;code&gt;1-555-123-4567&lt;/code&gt;. This is technically incorrect. To call this number from Japan, where the international call prefix is &lt;code&gt;010&lt;/code&gt;, one may dial either &lt;code&gt;+1 555 123 4567&lt;/code&gt; or &lt;code&gt;010 1 555 123 4567&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Users will only store phone numbers in your product's phone number fields&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some users use their contact lists to store things like birthdays or other information. Unless a piece of user-supplied data has actually been verified to be a phone number, it should be stored as-is as entered by the user.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbers are numbers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Never try to store phone numbers as an int or any other kind of numeric data type. You can't do arithmetic on them, and while 007, 07 and 7 are the same number they are not necessarily the same phone number - in some countries a leading 0 is significant and forms part of the number itself (see &lt;em&gt;A leading zero in numbers formatted for domestic usage can always be discarded when dialing from abroad&lt;/em&gt;). Moreover, a phone number may contain other diallable characters (see &lt;em&gt;Phone numbers contain only digits&lt;/em&gt;) or an extension portion, dialled after waiting for a tone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Use the library to parse and format numbers to handle this correctly for every country.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Phone numbering plans published by governments or telecoms represent reality&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;National numbering plans, such as those administered by the &lt;a href=&quot;http://www.itu.int/oth/T0202.aspx?parent=T0202&quot; rel=&quot;nofollow&quot;&gt;ITU&lt;/a&gt;, represent the intentions of the government or telecom. These may be published before, during, or after the actual implementation of numbering plan changes in the real world. The actual date on which a phone number range becomes active may not always adhere to official announcements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
<pubDate>Thu, 21 Feb 2019 02:31:10 +0000</pubDate>
<dc:creator>striking</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/5503833?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>googlei18n/libphonenumber</og:title>
<og:url>https://github.com/googlei18n/libphonenumber</og:url>
<og:description>Google's common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. - googlei18n/libphonenumber</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/googlei18n/libphonenumber/blob/master/FALSEHOODS.md</dc:identifier>
</item>
<item>
<title>UBS Is Fined $4.2B in French Tax-Evasion Case</title>
<link>https://www.wsj.com/articles/ubs-is-fined-4-2-billion-in-french-tax-evasion-case-11550668920</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/ubs-is-fined-4-2-billion-in-french-tax-evasion-case-11550668920</guid>
<description>&lt;p&gt;French judges ordered UBS Group AG on Wednesday to pay a record €3.7 billion ($4.2 billion) fine for helping wealthy clients in France evade taxes, as Switzerland’s largest bank struggles to turn the page on legal entanglements stemming from its core wealth-management business.&lt;/p&gt; &lt;p&gt;Judges in Paris found the Zurich-based bank guilty of illegally recruiting clients in France and helping them to launder money that wasn’t declared to French fiscal authorities. In handing down the largest-ever fine in France, the judges described the...
  &lt;/p&gt;</description>
<pubDate>Wed, 20 Feb 2019 23:41:55 +0000</pubDate>
<dc:creator>bryanwbh</dc:creator>
<og:title>UBS Is Fined $4.2 Billion in French Tax-Evasion Case</og:title>
<og:description>French judges ordered UBS to pay a record $4.2 billion fine for helping wealthy people evade taxes, closing a chapter in the long-running case against the Swiss bank.</og:description>
<og:url>https://www.wsj.com/articles/ubs-is-fined-4-2-billion-in-french-tax-evasion-case-11550668920</og:url>
<og:image>https://images.wsj.net/im-55013/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/ubs-is-fined-4-2-billion-in-french-tax-evasion-case-11550668920</dc:identifier>
</item>
<item>
<title>OnionShare 2 adds anonymous dropboxes</title>
<link>https://micahflee.com/2019/02/onionshare-2/</link>
<guid isPermaLink="true" >https://micahflee.com/2019/02/onionshare-2/</guid>
<description>&lt;p class=&quot;feature-image&quot;&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/onionshare.png&quot;/&gt;&lt;/p&gt;

&lt;p class=&quot;meta&quot;&gt;Posted February 18, 2019 in &lt;a class=&quot;tag&quot; href=&quot;https://micahflee.com/tags/onionshare&quot;&gt;onionshare&lt;/a&gt; &lt;a class=&quot;tag&quot; href=&quot;https://micahflee.com/tags/security&quot;&gt;security&lt;/a&gt; &lt;a class=&quot;tag&quot; href=&quot;https://micahflee.com/tags/tor&quot;&gt;tor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After nearly a year of work from a &lt;a href=&quot;https://github.com/micahflee/onionshare/wiki/Developing-OnionShare&quot;&gt;growing community&lt;/a&gt; of developers, designers, and translators, I'm excited that OnionShare 2 is finally ready. You can download it from &lt;a href=&quot;https://onionshare.org/&quot;&gt;onionshare.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;OnionShare is an open source tool for securely and anonymously sending and receiving files using Tor onion services. It works by starting a web server directly on your computer and making it accessible as an unguessable Tor web address that others can load in &lt;a href=&quot;https://www.torproject.org/&quot;&gt;Tor Browser&lt;/a&gt; to download files from you, or upload files to you. It doesn't require setting up a separate server, using a third party file-sharing service, or even logging into an account.&lt;/p&gt;
&lt;p&gt;Unlike services like email, Google Drive, DropBox, WeTransfer, or nearly any other way people typically send files to each other, when you use OnionShare you don't give any companies access to the files that you're sharing. So long as you share the unguessable web address in a secure way (like pasting it in an encrypted messaging app), &lt;em&gt;no one&lt;/em&gt; but you and the person you're sharing with can access your files.&lt;/p&gt;
&lt;p&gt;Here's a tour of some of the new parts of OnionShare 2.&lt;/p&gt;
&lt;h3 id=&quot;sharing-files-with-onionshare&quot;&gt;Sharing files with OnionShare&lt;/h3&gt;
&lt;p&gt;Here's what OnionShare 2 looks like. When you first open it, it connects to the Tor network.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/connecting-to-tor.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Once you're connected, you're in the &quot;Share Files&quot; tab (I'll talk more about the new &quot;Receive Files&quot; tab below).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/share-mode1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To securely and anonymously share files with someone, just drag and drop the files into the OnionShare window. Alternatively, you can click the &quot;Add Files&quot; and &quot;Add Folder&quot; buttons to browse your filesystem.&lt;/p&gt;
&lt;h3 id=&quot;the-macos-sandbox&quot;&gt;The macOS sandbox&lt;/h3&gt;
&lt;p&gt;In Windows and Linux there's just a single &quot;Add&quot; button that lets you select both files and folders. The reason for two separate buttons in the macOS version is a bit complicated, but boils down to a cool new security feature: The macOS sandbox is turned on in OnionShare 2, which means that even if someone manages to exploit a vulnerability in OnionShare to try to hack your computer, they still won't be able to access your data or run programs on your computer without first escaping the sandbox.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/share-mode2.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I've dragged all of the files that make up the OnionShare source code into the window. Now, to make them accessible to someone else, I just click &quot;Start sharing&quot;.&lt;/p&gt;
&lt;h3 id=&quot;next-generation-onion-services&quot;&gt;Next generation onion services&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/share-mode3.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;After clicking the button, I wait a few seconds, and then OnionShare gives me an unguessable Tor address to share. This is also new in OnionShare 2: By default, it uses &lt;a href=&quot;https://blog.torproject.org/tors-fall-harvest-next-generation-onion-services&quot;&gt;next generation Tor onion services&lt;/a&gt;, also known as &lt;code&gt;v3&lt;/code&gt; onion addresses. These are onion addresses that look like &lt;code&gt;lldan5gahapx5k7iafb3s4ikijc4ni7gx5iywdflkba5y2ezyg6sjgyd.onion&lt;/code&gt;, as opposed to the old &lt;code&gt;v2&lt;/code&gt; kind, that look like &lt;code&gt;elx57ue5uyfplgva.onion&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v3&lt;/code&gt; onions are much more secure than &lt;code&gt;v2&lt;/code&gt; onions for a variety of reasons, but they can be a bit unwieldy and hard to type (for example, if you're using OnionShare to move files between two computers that are both in front of you). You can still use &lt;code&gt;v2&lt;/code&gt; onion addresses if you want by going into Settings and choosing &quot;Use legacy addresses&quot;.&lt;/p&gt;
&lt;p&gt;Also, you might notice that the OnionShare address is using HTTP and not HTTPS, but this is actually perfectly fine. HTTPS adds a layer of encryption between a web browser and a web server, but Tor onion services are already end-to-end encrypted, so HTTPS is not necessary (it's also not feasible without browser warnings: Let's Encrypt doesn't sign HTTPS certificates for &lt;code&gt;.onion&lt;/code&gt; sites). Unlike loading normal websites in Tor Browser, when you load onion websites, there is no Tor exit node that could spy on the traffic -- all of the traffic stays within the Tor network.&lt;/p&gt;
&lt;p&gt;Now, I need to send this web address to my friend who I'm sharing files with. The easiest way to do this securely is to use an encrypted messaging app like Signal Desktop, Wire, Keybase, or iMessage -- or, if you're oldschool, Jabber/OTR. If the files you're sharing aren't especially sensitive, you can also share this web address in a way that is easily spied on but might be more convenient, like in a Facebook, Twitter, Google Hangouts, Slack, or Discord message, or in an email.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/torbrowser-share1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;My friend then opens Tor Browser and loads the OnionShare address I sent her. She sees a website with a list of the files I'm sharing, and a &quot;Download Files&quot; button.&lt;/p&gt;
&lt;p&gt;The key thing to understand about how OnionShare works is that this website is hosted &lt;em&gt;directly on my laptop&lt;/em&gt;, not on a server in a data center somewhere. If I suspend my laptop, that link won't work anymore. If I close OnionShare before the files have been downloaded, then that Tor web address simply disappears from the internet. Because of this, OnionShare always takes place in real-time -- you and the person you're sharing files with need to both be online &lt;em&gt;at the same time&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;onionshare-doesn-t-zip-if-you-share-just-one-file&quot;&gt;OnionShare doesn't zip if you share just one file&lt;/h3&gt;
&lt;p&gt;My friend then downloads the files, which are automatically zipped up. In this case, the zip file is called &lt;code&gt;onionshare_snwga4.zip&lt;/code&gt; (the last part of the filename is random), and when she unzips it, she can see a copy of the OnionShare source code I sent. A new feature in OnionShare 2 is that if you share just a single file, it no longer zips it up (but still compresses it with gzip, built into the HTTP protocol).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/share-mode4.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Back on my computer, OnionShare automatically stopped sharing the moment the files finished sending -- and when this happened, the OnionShare address completely disappeared from the internet, never to exist again.&lt;/p&gt;
&lt;h3 id=&quot;onionshare-addresses-are-ephemeral-by-default&quot;&gt;OnionShare addresses are ephemeral by default&lt;/h3&gt;
&lt;p&gt;OnionShare addresses are &lt;em&gt;ephemeral&lt;/em&gt;, and intended for one-time use. (For example, if someone sends you an OnionShare address in a Twitter DM, and a few minutes later you load it and download the files, that address won't exist anymore in the future. If anyone ever gains access to your Twitter DM history, that OnionShare address will no longer work.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/torbrowser-share2.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As you can see, after my friend finished downloading the files I sent her, that OnionShare address ceased to exist.&lt;/p&gt;
&lt;p&gt;This is the default behavior of OnionShare, but you might want to use OnionShare to send files to a group of people, not just one person, in which case you don't want it to be ephemeral. In this case, you can uncheck &quot;Stop sharing after files have been sent&quot; in the Settings, and then multiple people can download your files, and you'll continue sharing until you manually click &quot;Stop sharing&quot; or close OnionShare.&lt;/p&gt;
&lt;h3 id=&quot;receiving-files-with-onionshare&quot;&gt;Receiving files with OnionShare&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/receive-mode1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;All of this is, more or less, how OnionShare has always worked. But the &quot;Receive Files&quot; tab is brand new to OnionShare 2. And it's still just the beginning -- we have plans for adding more tabs to OnionShare in the future, such as a &lt;a href=&quot;https://github.com/micahflee/onionshare/issues/791&quot;&gt;static website sharing&lt;/a&gt; tab.&lt;/p&gt;
&lt;p&gt;When you use OnionShare to receive files, you turn your computer into an anonymous dropbox -- I like to think of it is a super lightweight version of &lt;a href=&quot;https://securedrop.org/&quot;&gt;SecureDrop&lt;/a&gt; that anyone can run on their own laptop, for free, without needing to set up any infrastructure or do any systems administration. (However, it's not as robust, or secure, as SecureDrop, which enforces isolated environments in a way that OnionShare can't.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/receive-mode2.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A few seconds after I clicked &quot;Start Receive Mode&quot;, OnionShare gave me an unguessable Tor address, which I share with my friend the same way I did with the share mode address. But this time, instead of me sending files to her, &lt;em&gt;she can send files to me&lt;/em&gt;, and all she needs is Tor Browser -- she doesn't need OnionShare herself.&lt;/p&gt;
&lt;p&gt;If I publish this OnionShare address, &lt;em&gt;anyone can send files to me&lt;/em&gt;, without me having any way to know who they are (because they'll be using Tor), and in a way that is end-to-end encrypted, so eavesdroppers spying on either of our networks can't access the files, or even realize that we're using OnionShare. To network eavesdroppers, all they'll be able to tell is that we're both using Tor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/torbrowser-receive1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;My friend simply clicks Browse, finds the files she wants to send, and clicks &quot;Send Files&quot;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/receive-mode3.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Over in OnionShare on my computer, I can see the status of all of the files that I'm receiving. Because OnionShare uses Tor onion services, I don't actually have any way of knowing &lt;em&gt;who&lt;/em&gt; is sending files to me -- if I want to make it so only very specific people can send me files, I need to securely share the OnionShare address to only those people. My computer will continue to act as an anonymous dropbox until I click &quot;Stop Receive Mode&quot;, or close OnionShare. And, just like with share mode, if I suspend my laptop, the OnionShare address stops working.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/receive-mode-finder.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The files that I receive get saved to &lt;code&gt;~/OnionShare&lt;/code&gt;, and they're automatically organized by date and time.&lt;/p&gt;
&lt;h3 id=&quot;only-open-things-from-people-you-trust-or-if-you-know-what-you-are-doing&quot;&gt;Only open things from people you trust, or if you know what you are doing&lt;/h3&gt;
&lt;p&gt;Now that you know how the &quot;Receive Files&quot; tab works, &lt;em&gt;be very careful with it&lt;/em&gt;, and make sure to take the prominent warning to heart:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;Some files can potentially take control of your computer if you open them. Only open things from people you trust, or if you know what you are doing.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All of the warnings about not opening email attachments apply just as much here. In this example, I received &lt;code&gt;gimp-2.10.8-x86_64-2.dmg&lt;/code&gt;, which is an installer for the open source image editing software GIMP. But, it could easily be a modified version of that installer that has malware hidden inside. And if someone sends you &lt;code&gt;.docx&lt;/code&gt; or &lt;code&gt;.pdf&lt;/code&gt; files, they could contain malware that could try to hack you through a vulnerability in Microsoft Word or Adobe Reader. How to safely open files you receive is &lt;em&gt;outside of the scope of OnionShare&lt;/em&gt;. Use this feature with caution.&lt;/p&gt;
&lt;h3 id=&quot;public-onionshare-addresses&quot;&gt;Public OnionShare addresses&lt;/h3&gt;
&lt;p&gt;OnionShare 2 has a new feature: Public mode. But before explaining what it does, first I'll explain how OnionShare addresses work without it.&lt;/p&gt;
&lt;p&gt;By default, OnionShare addresses look &lt;code&gt;http://[tor-address].onion/[slug]&lt;/code&gt;, where the slug is two random words out of a list of words 7,776 words (technically, this is a 2-word &lt;a href=&quot;https://theintercept.com/2015/03/26/passphrases-can-memorize-attackers-cant-guess/&quot;&gt;diceware passphrase&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The idea is that if an attacker could figure out the &lt;code&gt;tor-address&lt;/code&gt; part of the address, they still can't download the files you're sharing, or upload files to your computer, without first knowing the slug. The slug is, essentially, a password. (This is less important when using &lt;code&gt;v3&lt;/code&gt; onion services. The old &lt;code&gt;v2&lt;/code&gt; onion services have a known issue where, if the onion connection happens to get facilitated by a malicious Tor node, that node could learn the &lt;code&gt;tor-address&lt;/code&gt; part. This is one of the reasons that &lt;code&gt;v3&lt;/code&gt; onions are more secure.)&lt;/p&gt;
&lt;p&gt;But the slug is only two words, so what stops the attacker from guessing it, by guessing every possible 2-word slug? The wordlist that OnionShare uses is public, after all.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/slug-guess.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;OnionShare counts how many 404 errors (file not found web requests), and on the 20th 404 error, it assumes that someone it trying to guess the slug and automatically stops the server.&lt;/p&gt;
&lt;p&gt;This gives the attacker 20 chances to guess the two words correctly. Because the words are chosen from a list of 7,776 words, that means there are 7,776^2, or over 60 million, possible slugs. Which basically means that if an attacker tries to guess the slug, they have a 0.00003% chance of getting it right within their only 20 chances, and a 99.99996% chance of failing, and forcing OnionShare to stop sharing.&lt;/p&gt;
&lt;p&gt;This works great, but what if you &lt;em&gt;want&lt;/em&gt; anyone to be able to load your OnionShare address?&lt;/p&gt;
&lt;p&gt;For example, let's say you want to anonymously publish some files. You disable the &quot;Stop sharing after files have been sent&quot; setting, drag the files into OnionShare, start sharing, and tweet the OnionShare address. It turns out that anyone on the internet that sees the tweet can force your server to stop just by making 20 404 errors. (This situation actually happened, by the way, and their server kept shutting down because people kept making 404 errors.)&lt;/p&gt;
&lt;p&gt;This is the use case that public mode was built for. If you want to publicly share an OnionShare address, just go to Settings and check the box next to &quot;Public mode&quot;. When you start sharing, the OnionShare address will look like &lt;code&gt;http://[tor-address].onion/&lt;/code&gt;, without the slug, and the server will remain up no matter how many 404 errors it gets.&lt;/p&gt;
&lt;h3 id=&quot;running-an-anonymous-dropbox&quot;&gt;Running an anonymous dropbox&lt;/h3&gt;
&lt;p&gt;You've seen receive mode, which is great for allowing people to privately send you files. But if you want to allow &lt;em&gt;anyone&lt;/em&gt; to privately send you files, there are a few settings you'll want to consider using.&lt;/p&gt;
&lt;p&gt;First, you'll definitely want to enable public mode.&lt;/p&gt;
&lt;p&gt;Second, you'll also want to go into Settings and enable &quot;Use a persistent address&quot;. With this setting, when you stop an OnionShare server and then start it again, you'll get this exact same onion address as you had last time. This gives you the flexibility to, for example, reboot your computer and start OnionShare again, without having to switch OnionShare addresses.&lt;/p&gt;
&lt;p&gt;And finally, you may want to run your anonymous dropbox on a headless Linux server, rather than your normal daily workstation. OnionShare comes with two binaries, &lt;code&gt;onionshare&lt;/code&gt; (the command line version) and &lt;code&gt;onionshare-gui&lt;/code&gt; (the graphical version). Both of them share the same configuration file -- in Linux, this is in &lt;code&gt;~/.config/onionshare/onionshare.json&lt;/code&gt;. So, using the graphical version of OnionShare, choose all of the settings that you'd like, and then copy &lt;code&gt;onionshare.json&lt;/code&gt; to your server, and run OnionShare like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ onionshare --receive
OnionShare 2.0 | https://onionshare.org/
Connecting to the Tor network: 100% - Done
Setting up onion service on port 17612.
 * Running on http://127.0.0.1:17612/ (Press CTRL+C to quit)

Files sent to you appear in this folder: /home/user/OnionShare

Warning: Receive mode lets people upload files to your computer. Some files can potentially take control of your computer if you open them. Only open things from people you trust, or if you know what you are doing.

Give this address to the sender:
http://v2oxpolhvyd3kh44drt6gtz57v7wwun2twddcw3xhim2kgu2vvcewvqd.onion

Press Ctrl+C to stop the server
127.0.0.1 - - [18/Feb/2019 10:48:04] &quot;GET / HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:06] &quot;GET /static/css/style.css HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:07] &quot;GET /static/js/receive-noscript.js HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:07] &quot;GET /static/js/receive.js HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:07] &quot;GET /static/js/jquery-3.3.1.min.js HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:07] &quot;GET /static/img/logo.png HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:08] &quot;GET /static/img/logo_large.png HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:10] &quot;GET /static/img/favicon.ico HTTP/1.1&quot; 200 -
Feb 18, 10:48AM: Upload of total size 102.1 KiB is starting
=&amp;gt; 101.9 KiB       2016_tax_return.pdf
Received: /home/user/OnionShare/2019-02-18/10.48.18/2016_tax_return.pdf
127.0.0.1 - - [18/Feb/2019 10:48:20] &quot;POST /upload-ajax HTTP/1.1&quot; 200 -
127.0.0.1 - - [18/Feb/2019 10:48:21] &quot;GET /static/img/ajax.gif HTTP/1.1&quot; 200 -
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;onionshare-in-your-language&quot;&gt;OnionShare in your language&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://micahflee.com/2019/02/onionshare-2/onionshare-persian.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Finally, one of the things I'm most excited about OnionShare 2 is that it has now been translated into twelve new languages, making OnionShare accessible to a considerable swath of humanity. Some of the major languages that OnionShare 2 is translated in include Spanish (400 million native speakers), Portuguese (215 million), Russian (170 million), and Japanese (130 million). (These numbers &lt;a href=&quot;https://www.babbel.com/en/magazine/the-10-most-spoken-languages-in-the-world&quot;&gt;come from&lt;/a&gt; Babbel magazine.)&lt;/p&gt;
&lt;p&gt;The new languages include: Bengali (বাংলা), Catalan (Català), Danish (Dansk), French (Français), Greek (Ελληνικά), Italian (Italiano), Japanese (日本語), Persian (فارسی), Brazilian Portuguese (Português Brasil), Russian (Русский), Spanish (Español), and Swedish (Svenska), and more languages will be included in the future. If you're a native speaker of a non-English language and are interested in contributing to OnionShare, you can find &lt;a href=&quot;https://github.com/micahflee/onionshare/wiki/Translating&quot;&gt;instructions&lt;/a&gt; for helping on the wiki.&lt;/p&gt;
&lt;p&gt;I hope you like OnionShare 2!&lt;/p&gt;

</description>
<pubDate>Wed, 20 Feb 2019 23:02:05 +0000</pubDate>
<dc:creator>soheilpro</dc:creator>
<og:url>https://micahflee.com/2019/02/onionshare-2</og:url>
<og:title>OnionShare 2 adds anonymous dropboxes, supports new Tor addresses, and is translated into a dozen new languages</og:title>
<og:image>https://micahflee.com/2019/02/onionshare-2/onionshare.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://micahflee.com/2019/02/onionshare-2/</dc:identifier>
</item>
<item>
<title>A List of Hacker News&amp;#039;s Undocumented Features and Behaviors</title>
<link>https://github.com/minimaxir/hacker-news-undocumented/blob/master/README.md</link>
<guid isPermaLink="true" >https://github.com/minimaxir/hacker-news-undocumented/blob/master/README.md</guid>
<description>
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com&quot; rel=&quot;nofollow&quot;&gt;Hacker News&lt;/a&gt;, a simple link aggregator owned and operated by Silicon Valley startup incubator &lt;a href=&quot;http://www.ycombinator.com&quot; rel=&quot;nofollow&quot;&gt;Y Combinator&lt;/a&gt;, has had many &lt;a href=&quot;https://news.ycombinator.com/item?id=16409768&quot; rel=&quot;nofollow&quot;&gt;positive effects&lt;/a&gt; on SV startups and engineers as a whole. On Hacker News, users receive Karma whenever another user upvotes a submission or comment they made, which incentives positive contributions to the community.&lt;/p&gt;
&lt;p&gt;However, in maintaining its simplicity, many new features and behaviors added over the years on Hacker News are not fully documented other than the &lt;a href=&quot;https://news.ycombinator.com/item?id=12073675&quot; rel=&quot;nofollow&quot;&gt;occasional&lt;/a&gt; comments from staff. This list details some of the hidden norms about Hacker News not otherwise covered in the &lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot; rel=&quot;nofollow&quot;&gt;Guidelines&lt;/a&gt; and the &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot; rel=&quot;nofollow&quot;&gt;FAQ&lt;/a&gt;, along with a few bonus features outside of typical HN usage. If there is anything missing/incorrect from this list, feel free to file a GitHub issue/PR.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This list has no affiliation with Hacker News, Y Combinator, or any YC-backed company.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Undocumented Features&lt;/h2&gt;
&lt;h3&gt;Moderators&lt;/h3&gt;
&lt;p&gt;Hacker News currently has two full time moderators: Dan Gackle (&lt;a href=&quot;https://news.ycombinator.com/user?id=dang&quot; rel=&quot;nofollow&quot;&gt;dang&lt;/a&gt;) and Scott Bell (&lt;a href=&quot;https://news.ycombinator.com/user?id=sctb&quot; rel=&quot;nofollow&quot;&gt;sctb&lt;/a&gt;). Their &lt;a href=&quot;https://news.ycombinator.com/threads?id=dang&quot; rel=&quot;nofollow&quot;&gt;comment&lt;/a&gt; &lt;a href=&quot;https://news.ycombinator.com/threads?id=sctb&quot; rel=&quot;nofollow&quot;&gt;replies&lt;/a&gt; provide a pseudo-log of Hacker News moderation.&lt;/p&gt;
&lt;p&gt;Both are very responsive when contacted at &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;hn@ycombinator.com&lt;/a&gt;, and is the best option for resolving any issues on Hacker News.&lt;/p&gt;
&lt;h3&gt;Downvoting Comments&lt;/h3&gt;
&lt;p&gt;All comments start with a score of 1 point (but in order to prevent bandwagoning, the comment score is not visible to users other than the author). After users reach &lt;strong&gt;501 Karma&lt;/strong&gt;, they gain the ability to downvote another comment. Downvoted comments (i.e. with a score &amp;lt; 1) reduce their placement on the comment thread and will appear desaturated to other users deemphasize them. There is no upper limit on the score of a comment, but the minimum score is -4 points. You cannot downvote comments which are direct replies to your own comment, and you cannot downvote &lt;strong&gt;24 hours&lt;/strong&gt; after the original comment was made.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/minimaxir/hacker-news-undocumented/blob/master/images/hn_downvotes.png&quot;&gt;&lt;img src=&quot;https://github.com/minimaxir/hacker-news-undocumented/raw/master/images/hn_downvotes.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Complaining about being downvoted is discouraged and usually results in even more downvotes.&lt;/p&gt;
&lt;p&gt;If the comment desaturation makes Hacker News difficult to read, you can click on the comment's timestamp to go to its page where the comment will no longer be faded, or you can install the CSS extension &lt;a href=&quot;https://news.ycombinator.com/item?id=16426569&quot; rel=&quot;nofollow&quot;&gt;discussed here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Flagging/Vouching&lt;/h3&gt;
&lt;p&gt;If a user has &lt;strong&gt;31 Karma&lt;/strong&gt;, they can flag submissions. Although submissions cannot be downvoted, flags act as a &quot;super&quot; downvote and enough flags will strongly reduce the rank of the submission, or kill it entirely (flagging is supposed to be used for submissions which break the site guidelines, but that isn't always the case in practice). A submission that's flagged to death will have a &lt;code&gt;[flagged]&lt;/code&gt; tag. Comments behave similarly.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;[dead]&lt;/code&gt; submission (that does not also show &lt;code&gt;[flagged]&lt;/code&gt;) is killed by a moderator or by the software. They will only be shown to users who have &lt;code&gt;showdead&lt;/code&gt; enabled in their profile. A submission can simultaneously be &lt;code&gt;[flagged]&lt;/code&gt; and &lt;code&gt;[dead]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If a user has &lt;strong&gt;31 Karma&lt;/strong&gt;, they can also &lt;a href=&quot;https://blog.ycombinator.com/two-hn-announcements/&quot; rel=&quot;nofollow&quot;&gt;vouch&lt;/a&gt; for a &lt;code&gt;[dead]&lt;/code&gt; submission/comment. A vouched submission/comment has its rank restored (and potentially improved as the vouch can counteract the effects of flags), but it can be &lt;code&gt;[dead]&lt;/code&gt; again at which point it can't be re-vouched.&lt;/p&gt;
&lt;h3&gt;Setting Top Color&lt;/h3&gt;
&lt;p&gt;If a user has &lt;strong&gt;251 Karma&lt;/strong&gt;, they can set the color of the top bar in their profile settings. The default is #ff6600. Here's the &lt;a href=&quot;https://news.ycombinator.com/topcolors&quot; rel=&quot;nofollow&quot;&gt;complete set&lt;/a&gt; of colors users have set.&lt;/p&gt;
&lt;h3&gt;Anti-Voting Manipulation&lt;/h3&gt;
&lt;p&gt;The FAQ states &quot;users should vote for a story because they personally find it intellectually interesting, not because someone has content to promote.&quot; Indeed, Hacker News &lt;a href=&quot;https://news.ycombinator.com/item?id=7972941&quot; rel=&quot;nofollow&quot;&gt;utilizes&lt;/a&gt; a voting ring detector which will prevent caught submissions from hitting the front page. Due to sites like &lt;a href=&quot;https://www.producthunt.com&quot; rel=&quot;nofollow&quot;&gt;Product Hunt&lt;/a&gt; normalizing the asking for upvotes or other engagement via social media, the implicit asking of upvotes is also done for Hacker News, usually due to &lt;a href=&quot;https://twitter.com/minimaxir/status/958397508996055040&quot; rel=&quot;nofollow&quot;&gt;ignorance&lt;/a&gt; of the Hacker News rule against it. There are very few good reasons to draw attention to a Hacker News submission immediately after it has been submitted.&lt;/p&gt;
&lt;p&gt;One popular &quot;trick&quot; for obfuscating voting manipulation on Hacker News is to link to the Hacker News's &lt;code&gt;/newest&lt;/code&gt; page of new submissions (instead of a direct link which would otherwise make voting manipulation obvious), and asking friends to upvote the submission from that page. This trick doesn't actually work.&lt;/p&gt;
&lt;h3&gt;Flame-War Detector&lt;/h3&gt;
&lt;p&gt;The FAQ notes that submission rank is impacted by &quot;&lt;a href=&quot;https://news.ycombinator.com/item?id=16020089&quot; rel=&quot;nofollow&quot;&gt;software which downweights overheated discussions&lt;/a&gt;.&quot; A good rule of thumb for this effect is when the number of comments on a submission exceeds its score. Moderators can overrule the downranking for appropriate, not-actually-a-flame-war discussions.&lt;/p&gt;
&lt;h3&gt;Second-Chance Pool&lt;/h3&gt;
&lt;p&gt;Moderators will sometimes &lt;a href=&quot;https://news.ycombinator.com/item?id=11662380&quot; rel=&quot;nofollow&quot;&gt;rescue a post&lt;/a&gt; which didn't receive a lot of upvotes and reset the submission time on the post. (This is also one of the reasons why the FAQ discourages deleting submissions).&lt;/p&gt;
&lt;p&gt;Relatedly, moderators can also &lt;a href=&quot;https://news.ycombinator.com/item?id=10308900&quot; rel=&quot;nofollow&quot;&gt;invite users&lt;/a&gt; via email to resubmit a post which didn't get much traction.&lt;/p&gt;
&lt;h3&gt;Edit/Delete Time Limits&lt;/h3&gt;
&lt;p&gt;After a post or comment is made, it can be edited by the author &lt;strong&gt;within 2 hours&lt;/strong&gt;. A post/comment can be deleted by the author within those two hours, &lt;strong&gt;but only if it has no replies&lt;/strong&gt;, in order to prevent discussion from being lost. In that case, the post/comment &lt;strong&gt;cannot be deleted&lt;/strong&gt; (This can result in a fake &lt;code&gt;[deleted]&lt;/code&gt; edit if a person wants to remove their comment in the limit but can't).&lt;/p&gt;
&lt;p&gt;If you need something deleted but you can't, you'll have to message &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;hn@ycombinator.com&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Comment Collapsing&lt;/h3&gt;
&lt;p&gt;Comments can be collapsed by clicking the &lt;code&gt;[+]&lt;/code&gt; icon to improve readability.&lt;code&gt;[flagged]&lt;/code&gt; comments are sometimes collapsed by default, and moderators can set a comment to automatically be collapsed if necessary (e.g. meta-discussion).&lt;/p&gt;
&lt;p&gt;When a comment thread is collapsed, the &lt;code&gt;[+x]&lt;/code&gt; number on the right indicates the total number of hidden children comments.&lt;/p&gt;
&lt;h3&gt;Shadowbanning&lt;/h3&gt;
&lt;p&gt;Both users and domains can be shadowbanned, where all posts/comments by that user / submissions to that domain will be instantly &lt;code&gt;[dead]&lt;/code&gt; and cannot receive votes/comments (but can still be vouched). For accounts with a substantial history on Hacker News, moderators &lt;a href=&quot;https://news.ycombinator.com/item?id=16441707&quot; rel=&quot;nofollow&quot;&gt;will give warnings&lt;/a&gt; before a ban.&lt;/p&gt;
&lt;p&gt;A good way to tell if a user/domain is banned is to either have another user with &lt;code&gt;showdead&lt;/code&gt; enabled check for a series of &lt;code&gt;[dead]&lt;/code&gt; content from that source, or view those submissions in Private Browsing/Incognito mode to see if they appear.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/minimaxir/hacker-news-undocumented/blob/master/images/shadowban.png&quot;&gt;&lt;img src=&quot;https://github.com/minimaxir/hacker-news-undocumented/raw/master/images/shadowban.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Users/domains are usually shadowbanned for breaking HN rules/spam. If you feel you are unfairly shadowbanned, contact &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;hn@ycombinator.com&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Green Usernames&lt;/h3&gt;
&lt;p&gt;Accounts which are less than &lt;strong&gt;2 weeks&lt;/strong&gt; old will appear with a green username.&lt;/p&gt;
&lt;h2&gt;Behaviors&lt;/h2&gt;
&lt;h3&gt;Implicit Downranking of Politics&lt;/h3&gt;
&lt;p&gt;The Guidelines state that &lt;em&gt;most&lt;/em&gt; political discussion is &lt;em&gt;probably&lt;/em&gt; off-topic. However, the line between technology and politics is blurred, especially as of recently. Most tech related submissions with a hint of political partisanship will quickly be flagged to death by users (or die a slow death due to the inevitable flame war).&lt;/p&gt;
&lt;h3&gt;Implicit Downranking of Topics Around Diversity and Inclusion&lt;/h3&gt;
&lt;p&gt;Likewise, topics around diversity and inclusion in tech have gained lots of visibility over the past few years. However, despite these discussions not being off-topic, they tend to be flagged to death by users regardless. Unfortunately. (Moderators occasionally unkill such threads if they see it in time, although it rarely sticks).&lt;/p&gt;
&lt;h3&gt;Paywalls&lt;/h3&gt;
&lt;p&gt;Many news websites have started implementing a paywall for their content, which has caused conflict with Hacker News's &quot;original source&quot; rule. The &lt;code&gt;web&lt;/code&gt; button next to submissions (that does a DuckDuckGo search for the given title) was partially intended to serve as a paywall workaround; however, recent changes to the paywall implementations have closed that loophole.&lt;/p&gt;
&lt;p&gt;As a result, submissions which link to paywalled sites tend to get many comments complaining about paywalls, &lt;a href=&quot;https://news.ycombinator.com/item?id=10178989&quot; rel=&quot;nofollow&quot;&gt;which are off-topic&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Perceived Favoritism Toward YC Companies&lt;/h3&gt;
&lt;p&gt;YC Companies get two notable benefits on Hacker News; they can post jobs ads to the front page (which start off at Rank #6, cannot be voted/commented on, and have a fixed decay rate), and the ability to do a &lt;a href=&quot;https://hn.algolia.com/?query=Launch%20HN&amp;amp;sort=byPopularity&amp;amp;prefix=false&amp;amp;page=0&amp;amp;dateRange=all&amp;amp;type=story&quot; rel=&quot;nofollow&quot;&gt;Launch HN&lt;/a&gt; when their startup launches out of a YC batch.&lt;/p&gt;
&lt;p&gt;Currently, there is no evidence that non-job submissions about a YC startup receive preferential treatment on the front page, or kill submissions critical of a YC startup. In fact, the moderators have stated that they explicitly &lt;a href=&quot;https://news.ycombinator.com/item?id=8258752&quot; rel=&quot;nofollow&quot;&gt;avoid killing controversial YC posts&lt;/a&gt; when possible.&lt;/p&gt;
&lt;p&gt;Additionally, founders of YC companies see each other's usernames &lt;a href=&quot;https://techcrunch.com/2013/05/18/the-evolution-of-hacker-news/&quot; rel=&quot;nofollow&quot;&gt;show up in orange,&lt;/a&gt; which — although not an explicit benefit — does allow fellow YC founders to immediately identify one another in discussions.&lt;/p&gt;
&lt;h3&gt;Downranking of Tutorials&lt;/h3&gt;
&lt;p&gt;HN submissions which are tutorials are &lt;a href=&quot;https://news.ycombinator.com/item?id=16485753&quot; rel=&quot;nofollow&quot;&gt;downranked by moderators&lt;/a&gt;, as they gratify intellectual curiosity less.&lt;/p&gt;
&lt;h2&gt;Bonus Features&lt;/h2&gt;
&lt;h3&gt;Hacker News Classic&lt;/h3&gt;
&lt;p&gt;Hacker News allows people to use the &lt;a href=&quot;https://news.ycombinator.com/classic&quot; rel=&quot;nofollow&quot;&gt;old front page ranking algorithm&lt;/a&gt;, which only &lt;a href=&quot;https://news.ycombinator.com/item?id=16442776&quot; rel=&quot;nofollow&quot;&gt;counts votes&lt;/a&gt; from early users.&lt;/p&gt;
&lt;h3&gt;Hacker News Wayback&lt;/h3&gt;
&lt;p&gt;Hacker News allows users to see what the front page looks like &lt;a href=&quot;https://news.ycombinator.com/front?day=2012-03-24&quot; rel=&quot;nofollow&quot;&gt;at any point in time&lt;/a&gt;. You can also do a wayback view for any user at their registration date by clicking their registration date in their profile.&lt;/p&gt;
&lt;h3&gt;Hacker News on BigQuery&lt;/h3&gt;
&lt;p&gt;If you want to gather large amount of Hacker News data for data analysis/machine learning, you should use the &lt;a href=&quot;https://cloud.google.com/bigquery/public-data/hacker-news&quot; rel=&quot;nofollow&quot;&gt;Hacker News dataset on BigQuery&lt;/a&gt;, which is updated daily and is much more pragmatic to use than manually scraping data from the Hacker News API.&lt;/p&gt;
&lt;h3&gt;Hacker News Lists&lt;/h3&gt;
&lt;p&gt;Hacker News maintains a &lt;a href=&quot;https://news.ycombinator.com/lists&quot; rel=&quot;nofollow&quot;&gt;list of useful links&lt;/a&gt; that allow for primitive filtering by certain types of content. These currently include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/leaders&quot; rel=&quot;nofollow&quot;&gt;/leaders&lt;/a&gt; — View a list of users with the most karma&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/front&quot; rel=&quot;nofollow&quot;&gt;/front&lt;/a&gt; — Filter front page submissions for a given day (e.g. 2016-06-20), ordered by time spent there&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/best&quot; rel=&quot;nofollow&quot;&gt;/best&lt;/a&gt; — View the highest-voted recent links&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/active&quot; rel=&quot;nofollow&quot;&gt;/active&lt;/a&gt; — View the links with the most active current discussions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/bestcomments&quot; rel=&quot;nofollow&quot;&gt;/bestcomments&lt;/a&gt; — List the highest-voted recent comments&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/noobstories&quot; rel=&quot;nofollow&quot;&gt;/noobstories&lt;/a&gt; — Show submissions from new accounts&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/noobcomments&quot; rel=&quot;nofollow&quot;&gt;/noobcomments&lt;/a&gt; — List comments from new accounts&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The list on HN is currently missing these additional links:&lt;/p&gt;
&lt;h3&gt;Hacker News Search&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://hn.algolia.com/&quot; rel=&quot;nofollow&quot;&gt;HN Search&lt;/a&gt; provides real-time full-text search for Hacker News. The web app is &lt;a href=&quot;https://github.com/algolia/hn-search&quot;&gt;open source&lt;/a&gt; and powered by Algolia Search.&lt;/p&gt;
&lt;h3&gt;Filter Out Posts Below X Points&lt;/h3&gt;
&lt;p&gt;Want to catch-up on the best submissions over the last few days? Filter out all posts below a certain threshold with the &lt;code&gt;over?points=100&lt;/code&gt; URL parameter. Examples:&lt;/p&gt;
&lt;h2&gt;To-Do&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Add more images/citations&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Maintainer&lt;/h2&gt;
&lt;p&gt;Max Woolf (&lt;a href=&quot;http://minimaxir.com&quot; rel=&quot;nofollow&quot;&gt;@minimaxir&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/user?id=minimaxir&quot; rel=&quot;nofollow&quot;&gt;minimaxir&lt;/a&gt; on Hacker News since 2012)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Max has no affiliation with Hacker News, Y Combinator, or any YC-backed company.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 20 Feb 2019 22:42:01 +0000</pubDate>
<dc:creator>adanhawth</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/2179708?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>minimaxir/hacker-news-undocumented</og:title>
<og:url>https://github.com/minimaxir/hacker-news-undocumented</og:url>
<og:description>Some of the hidden norms about Hacker News not otherwise covered in the Guidelines and the FAQ. - minimaxir/hacker-news-undocumented</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/minimaxir/hacker-news-undocumented/blob/master/README.md</dc:identifier>
</item>
<item>
<title>Nestle, Disney Pull YouTube Ads, Joining Furor Over Child Videos</title>
<link>https://www.bloomberg.com/news/articles/2019-02-20/disney-pulls-youtube-ads-amid-concerns-over-child-video-voyeurs</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-02-20/disney-pulls-youtube-ads-amid-concerns-over-child-video-voyeurs</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-02-20/disney-pulls-youtube-ads-amid-concerns-over-child-video-voyeurs&quot;&gt;https://www.bloomberg.com/news/articles/2019-02-20/disney-pulls-youtube-ads-amid-concerns-over-child-video-voyeurs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19211996&quot;&gt;https://news.ycombinator.com/item?id=19211996&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 243&lt;/p&gt;
&lt;p&gt;# Comments: 282&lt;/p&gt;
</description>
<pubDate>Wed, 20 Feb 2019 21:09:13 +0000</pubDate>
<dc:creator>nopriorarrests</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=f75da250-35f1-11e9-a909-d51a6021429d&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wMi0yMC9kaXNuZXktcHVsbHMteW91dHViZS1hZHMtYW1pZC1jb25jZXJucy1vdmVyLWNoaWxkLXZpZGVvLXZveWV1cnM=</dc:identifier>
</item>
<item>
<title>Cancer death rates are falling, five-year survival rates rising</title>
<link>https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising</link>
<guid isPermaLink="true" >https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising</guid>
<description>&lt;div class=&quot;blog-info&quot; readability=&quot;33.882978723404&quot;&gt;Our World in Data presents the empirical evidence on global development in entries dedicated to specific topics.
&lt;p&gt;This blog post draws on data and research discussed in our entry on &lt;a href=&quot;https://ourworldindata.org/entries/cancer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Cancer&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;February 4th is &lt;a href=&quot;https://www.worldcancerday.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;World Cancer Day&lt;/a&gt;. Last year we answered the question: &quot;&lt;a href=&quot;https://ourworldindata.org/how-many-people-in-the-world-die-from-cancer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How many people die from cancer?&lt;/a&gt;&quot;. This World Cancer Day we look at how cancer death rates are changing over time.&lt;/p&gt;
&lt;p&gt;Global &lt;a href=&quot;https://ourworldindata.org/cancer#global-perspective-on-cancer-deaths&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;cancer deaths are rising&lt;/a&gt;: in 1990 5.7 million died from cancer; by 2016 this had increased to 8.9 million. But it's also true that the world today has more people, and more &lt;em&gt;older&lt;/em&gt; people, who are more likely to die from cancer. To understand what is happening we therefore have to correct for the population increase and ask for the rate – the number of deaths per 100,000 people – and we have to &lt;a href=&quot;https://en.wikipedia.org/wiki/Age_adjustment&quot;&gt;adjust for ageing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When we compare these metrics (shown &lt;strong&gt;&lt;a href=&quot;https://ourworldindata.org/grapher/cancer-deaths-rate-and-age-standardized-rate-index&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;) we see that &lt;strong&gt;age-standardized cancer death rates are &lt;em&gt;falling &lt;/em&gt;globally.&lt;/strong&gt; Death rates which correct for ageing show a 17 percent decline from 1990 to 2016.&lt;/p&gt;
&lt;h3 id=&quot;five-year-survival-rates-have-increased&quot;&gt;Five-year survival rates have increased&lt;/h3&gt;
&lt;p&gt;Why are cancer death rates falling? One hypothesis is that cancer prevalence is falling (i.e. less people have cancer). Is this true?&lt;/p&gt;
&lt;p&gt;Globally, no. The &lt;a href=&quot;https://ourworldindata.org/cancer#global-perspective-on-cancer-prevalence&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;share of people with cancer&lt;/a&gt; (even when corrected for ageing) has been slowly increasing in recent decades. Global cancer prevalence has risen from 0.54 percent to 0.64 percent since 1990 (&lt;a href=&quot;https://ourworldindata.org/smoking#share-of-cancer-deaths-attributed-to-smoking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;largely due to smoking&lt;/a&gt;). In some countries – &lt;strong&gt;&lt;a href=&quot;https://ourworldindata.org/grapher/share-of-population-with-cancer?tab=chart&amp;amp;country=USA&quot;&gt;the US, for example&lt;/a&gt;&lt;/strong&gt; – the age-corrected prevalence has been fairly constant in recent decades (with the &lt;a href=&quot;https://ourworldindata.org/grapher/cancer-incidence?tab=chart&amp;amp;country=USA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;rate of &lt;em&gt;new&lt;/em&gt; cases actually falling&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If death rates are falling but prevalence is rising or constant, then it must be the case that people with cancer have better or longer survival rates. We see this clearly in the USA when we look at the change in five-year survival rates across cancer types. This is shown in the chart below as the change from 1970-77 to 2007-2013.&lt;/p&gt;
&lt;p&gt;Here we see that on aggregate five-year survival rates for all cancers increased from 50.3 to 67 percent. But we also see significant differences not only in start or end survival rates, but the change over time. Prostate cancer has close to 99 percent five-year survival, but has also seen major progress from a rate of 69 percent in the 1970s. In contrast, pancreas has low five-year survival rates at 8.2 percent, up from 2.5 percent.&lt;/p&gt;
&lt;p&gt;There are two key factors which could contribute to improved five-year survival rates: earlier detection and/or improved treatment. Defining the exact attribution of each is difficult, and varies depending on cancer type. But there have been some studies which have attempted to do so. Scott Alexander published a very good overview of the relative impact of detection versus treatment &lt;strong&gt;&lt;a href=&quot;https://slatestarcodex.com/2018/08/01/cancer-progress-much-more-than-you-wanted-to-know/&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One way to test whether survival rates only increased from early diagnosis is to look at how survival has changed for &lt;em&gt;each stage&lt;/em&gt; of cancer: if detection was the only improvement then we would see no increase in survival rates in later cancer stages. National cancer statistics published by the US government show increases in survival rate within all stages (from very early to late-stage).&lt;a id=&quot;ref-1&quot; class=&quot;ref&quot; href=&quot;https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising#note-1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Other studies focused on specific cancer types show similar results.&lt;a id=&quot;ref-2&quot; class=&quot;ref&quot; href=&quot;https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising#note-2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tumours have gotten smaller in recent decades – the result of earlier detection. Studies have shown that this can account for a significant share of survival improvements: one study attributed early detection as 61 percent and 28 percent of improved survival in localized-stage and regional-stage breast cancer, respectively&lt;a id=&quot;ref-3&quot; class=&quot;ref&quot; href=&quot;https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising#note-3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; But even when correcting for size and early detection, we have seen improvements. &lt;/p&gt;
&lt;p&gt;This suggests better treatment has played a role too.&lt;/p&gt;
&lt;p&gt;In both detection and treatment, we're seeing progress. This is important because of the large toll of cancer: Globally every sixth death is due to cancer – this makes it the &lt;a href=&quot;https://ourworldindata.org/grapher/annual-number-of-deaths-by-cause&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;world's second largest cause of death&lt;/a&gt;. Progress here is important for many. &lt;a href=&quot;https://ourworldindata.org/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01.png&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-17617&quot; src=&quot;https://ourworldindata.org/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-750x550.png&quot; alt=&quot;Five year cancer survival rates usa v2 01&quot; width=&quot;750&quot; height=&quot;550&quot; srcset=&quot;/wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-32x32.png 32w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-50x50.png 50w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-64x64.png 64w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-96x96.png 96w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-128x128.png 128w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-150x110.png 150w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-400x293.png 400w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-750x550.png 750w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01-768x563.png 768w, /wp-content/uploads/2018/03/Five-year-cancer-survival-rates-USA-v2-01.png 13114w&quot; sizes=&quot;(min-width: 800px) 50vw, 100vw&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 20 Feb 2019 19:52:46 +0000</pubDate>
<dc:creator>hecubus</dc:creator>
<og:url>https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising</og:url>
<og:title>Cancer death rates are falling; five-year survival rates are rising</og:title>
<og:description>This blog post draws on data and research discussed in our entry on Cancer.</og:description>
<og:image>https://owid.cloud/wp-content/uploads/2019/02/Five-year-cancer-survival-rates-USA-v2-01-768x563.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://ourworldindata.org/cancer-death-rates-are-falling-five-year-survival-rates-are-rising</dc:identifier>
</item>
</channel>
</rss>