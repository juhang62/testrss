<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Humaaans: Mix-and-match illustrations of people with a design library</title>
<link>https://www.humaaans.com</link>
<guid isPermaLink="true" >https://www.humaaans.com</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.humaaans.com&quot;&gt;https://www.humaaans.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18996959&quot;&gt;https://news.ycombinator.com/item?id=18996959&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 264&lt;/p&gt;
&lt;p&gt;# Comments: 85&lt;/p&gt;
</description>
<pubDate>Fri, 25 Jan 2019 10:39:00 +0000</pubDate>
<dc:creator>plurby</dc:creator>
<og:title>Humaaans: Mix-&amp;-Match illustration library</og:title>
<og:description>Mix-&amp;-match illustrations of people with a design library for InVIsion Studio and Sketch.</og:description>
<og:image>https://uploads-ssl.webflow.com/5bff8886c3964a992e90d465/5c050a75fc73fba30bf816f1_seo-rectangle.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.humaaans.com/</dc:identifier>
</item>
<item>
<title>JMAP: Like IMAP but Not Really</title>
<link>https://unencumberedbyfacts.com/2019/01/24/jmap-its-like-imap-but-not-really/</link>
<guid isPermaLink="true" >https://unencumberedbyfacts.com/2019/01/24/jmap-its-like-imap-but-not-really/</guid>
<description>&lt;p&gt;With the new year upon us, I decided it was time to do something ambitious for my Open Source project. This is where I normally quip about never mentioning my project before, even though I literally always do. A new year means new jokes so I’m moving on, and really you should too. &lt;a href=&quot;https://cypht.org&quot;&gt;Cypht&lt;/a&gt; is not just Open Source webmail, it’s like the [COOL THING OR PERSON] of Open Source webmail. And it’s NEW. Well I have been working on it for 5 years but NEW in a relative sense, since time is relative, and really what is time? Anyway, ambitiousness.&lt;/p&gt;
&lt;p&gt;There has been a “&lt;a href=&quot;https://github.com/jasonmunro/cypht/issues/180&quot;&gt;Support JMAP to replace IMAP/SMTP&lt;/a&gt;” request lingering on our Github for almost a year. It’s in the “&lt;a href=&quot;https://github.com/jasonmunro/cypht/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Aenhancement+&quot;&gt;I’m still interested but effin busy bucket&lt;/a&gt;“. Recently the poster of said issue mentioned the &lt;a href=&quot;https://jmap.io/&quot;&gt;JMAP&lt;/a&gt; specification will soon be finalized and it might be a good time to give it another look. What exactly is JMAP? Let me verbally circle around it a bit more and I promise I will get there.&lt;/p&gt;
&lt;p&gt;I reread the high level bits about JMAP. Then I started digging in, created a new module set, shit-canned that approach because it was stupid, took a different angle, got obsessed, stayed up way too late on weeknights, permanently pinned the docs in browser tabs, filed a couple of Github issues with the Cyrus IMAP project (both of which were mis-configurations on my end), and as of this week – hit the milestone of initial IMAP/JMAP compatibility.&lt;/p&gt;
&lt;p&gt;Again, what the hell is JMAP? As we all know there are two widely adopted protocols for getting your E-mail to your eyeballs: POP3 and IMAP. POP3 was designed to work with systems that are not always online because that really used to be a thing. IMAP is awesome unless you write code for it in which case it will ruin you. Regardless IMAP is the common standard these days. It’s complicated and old and hard. Why can’t there be a modern REST like API that can do everything IMAP does but better? Astute readers may have added this up by now, but just to clarify: JMAP is a modern REST like API that can do everything IMAP does but better.&lt;/p&gt;
&lt;p&gt;The driving force behind JMAP from what I can tell is Bron Gondwana, the CEO of FastMail. As a subscriber to the IMAP protocol mailing list for the last 15+ years (also an actual thing), I recognize Bron from many informative replies to befuddled posters about the IMAP protocol, or the Open Source Cyrus IMAP server he contributes to.&lt;/p&gt;
&lt;p&gt;I would like to take my remaining time and open up the floor to questions, so fire away.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Internet&lt;/strong&gt;: &lt;em&gt;So what is the JMAP API like?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: I’m not going to sugarcoat it, JMAP is complicated. But it is really (really) well designed. JMAP is a REST API so it uses HTTP requests and responses to issue commands and get the results. Almost all requests in JMAP are to the same URL using an HTTP POST to submit a JSON body of “methods”. A method is an action or query you want to perform like “give me the 20 newest messages in this mailbox” or “flag this important message from a Nigerian prince”. Also they have excellent docs. Sometimes you have to jump around to piece together what you are looking for but it’s pretty comprehensive.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Internet&lt;/strong&gt;: &lt;em&gt;How is JMAP better than IMAP?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: My top 5:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;JMAP is sane&lt;/li&gt;
&lt;li&gt;JMAP is not designed around a persistent network socket, so it’s perfect for webmail clients that connect, do stuff, then disconnect (which is exactly NOT how IMAP is supposed to be used)&lt;/li&gt;
&lt;li&gt;JMAP finally brings pagination support into the picture. This alone is a huge performance boost&lt;/li&gt;
&lt;li&gt;JMAP allows you to chain methods together with back-references to earlier methods. This allows you to combine queries and actions into a single API request. I have not really used this yet because my initial implementation is mimicking the more inefficient patterns of IMAP, but I think this is the single coolest part of the JMAP API design.&lt;/li&gt;
&lt;li&gt;Uids in JMAP are globally unique. I don’t need to select a mailbox then fetch the content for a uid in that folder – I can just fetch the content for a uid as it’s unique across folders.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Internet&lt;/strong&gt;: &lt;em&gt;Do you think JMAP will really take off?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt;: JMAP is an open, smart, modern, and powerful E-mail protocol, so probably not. Short of the ground breaking (not really) Cypht webmail program, I would say JMAP is the best thing to happen to E-mail in a LONG time. JMAP also supports calendars and todos and contacts and sending outbound E-mail and push notification and state management and deltas and other things I can’t remember. Right now development versions of the Cyrus IMAP server support JMAP, and FastMail is using it in production for some of their users. I hope it takes off because as an E-mail client writer it’s been an absolute pleasure to work with.&lt;/p&gt;
&lt;p&gt;So sorry to say, we are out of time! To conclude I want to thank the Cyrus IMAP developers for prompt and helpful replies to my uninformed questions. JMAP may not be the future of E-mail, but it should be. It’s like IMAP but not really. It’s better.&lt;/p&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-47007080-1812-5c4b322b3c054&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20180319#blog_id=47007080&amp;amp;post_id=1812&amp;amp;origin=jasonmunro.wordpress.com&amp;amp;obj_id=47007080-1812-5c4b322b3c054&quot; data-name=&quot;like-post-frame-47007080-1812-5c4b322b3c054&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;div class=&quot;likes-widget-placeholder post-likes-widget-placeholder&quot;&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Fri, 25 Jan 2019 07:31:39 +0000</pubDate>
<dc:creator>jasonmunro</dc:creator>
<og:type>article</og:type>
<og:title>JMAP: It’s like IMAP But Not Really</og:title>
<og:url>https://unencumberedbyfacts.com/2019/01/24/jmap-its-like-imap-but-not-really/</og:url>
<og:description>With the new year upon us, I decided it was time to do something ambitious for my Open Source project. This is where I normally quip about never mentioning my project before, even though I literall…</og:description>
<og:image>https://s0.wp.com/i/blank.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://unencumberedbyfacts.com/2019/01/24/jmap-its-like-imap-but-not-really/</dc:identifier>
</item>
<item>
<title>Revery – Native, high-performance, cross-platform desktop apps</title>
<link>https://github.com/revery-ui/revery</link>
<guid isPermaLink="true" >https://github.com/revery-ui/revery</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://dev.azure.com/revery-ui/revery/_build/latest?definitionId=2?branchName=master&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1ea61b2583e26e95e6d8da86579b5e1e7c156daa/68747470733a2f2f6465762e617a7572652e636f6d2f7265766572792d75692f7265766572792f5f617069732f6275696c642f7374617475732f7265766572792d75692e7265766572793f6272616e63684e616d653d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://dev.azure.com/revery-ui/revery/_apis/build/status/revery-ui.revery?branchName=master&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/revery&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ca92f6874c0b2b01b1a420eabfaf9d2436af975a/68747470733a2f2f62616467652e667572792e696f2f6a732f7265766572792e737667&quot; alt=&quot;npm version&quot; data-canonical-src=&quot;https://badge.fury.io/js/revery.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Build &lt;strong&gt;native&lt;/strong&gt;, &lt;em&gt;high-performance&lt;/em&gt;, &lt;strong&gt;cross-platform&lt;/strong&gt; desktop apps with &lt;a href=&quot;https://reasonml.github.io/&quot; rel=&quot;nofollow&quot;&gt;reason&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;🚧 &lt;strong&gt;NOTE:&lt;/strong&gt; Revery is a work-in-progress and in active development! 🚧&lt;/p&gt;
&lt;h2&gt;Building &amp;amp; Installing&lt;/h2&gt;
&lt;h3&gt;Install &lt;a href=&quot;https://esy.sh/&quot; rel=&quot;nofollow&quot;&gt;esy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;esy&lt;/code&gt; is like &lt;code&gt;npm&lt;/code&gt; for native code. If you don't have it already, install it by running:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm install -g esy
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Building&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;esy install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esy build&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;For &lt;code&gt;macOS&lt;/code&gt; users&lt;/h4&gt;
&lt;p&gt;If your build takes too much time then you can pre-install some libraries:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;brew install cmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;brew install libpng ragel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;For &lt;code&gt;Linux&lt;/code&gt; users&lt;/h4&gt;
&lt;p&gt;Install the following packages with your package manager of choice:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ragel&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;For &lt;code&gt;Ubuntu&lt;/code&gt; you may need these additional packages&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;libpng-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;libbz2-dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;For &lt;code&gt;Windows&lt;/code&gt; native&lt;/h4&gt;
&lt;p&gt;No additional dependencies needed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;esy&lt;/code&gt; requires building from an Administrator prompt (either &lt;code&gt;cmd.exe&lt;/code&gt; or &lt;code&gt;Powershell&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;For &lt;code&gt;Windows&lt;/code&gt; Subsystem for Linux (&lt;code&gt;WSL&lt;/code&gt;)&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sudo apt install libpng-dev libbz2-dev m4 xorg-dev libglu1-mesa-dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Hardware acceleration is not enabled by default in WSL (instead, WSL will fall-back to a &lt;em&gt;software&lt;/em&gt; renderer). This is problematic for performance - for that reason, we recommend building and running Revery natively on Windows instead of with WSL. For more info see: (&lt;a href=&quot;https://github.com/Microsoft/WSL/issues/637&quot;&gt;https://github.com/Microsoft/WSL/issues/637&lt;/a&gt; and a &lt;a href=&quot;https://superuser.com/questions/1238925/use-accelerated-graphics-on-windows-10-linux-subsystem-with-xming&quot; rel=&quot;nofollow&quot;&gt;potential workaround&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Running&lt;/h3&gt;
&lt;p&gt;After building, you can run the example app by running:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;esy x Examples&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Check out our &lt;a href=&quot;https://github.com/revery-ui/revery/tree/master/examples&quot;&gt;examples&lt;/a&gt; to see how they work!&lt;/p&gt;
&lt;h3&gt;Tests&lt;/h3&gt;
&lt;p&gt;Tests can be run with:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;esy b dune runtest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Motivation&lt;/h2&gt;
&lt;p&gt;Today, &lt;a href=&quot;https://electronjs.org/&quot; rel=&quot;nofollow&quot;&gt;Electron&lt;/a&gt; is one of the most popular tools for building desktop apps - using an HTML, JS, CSS stack. However, it has a heavy footprint in terms of both RAM and CPU - &lt;strong&gt;essentially packing an entire browser into the app.&lt;/strong&gt; Even with that tradeoff, it has a lot of great aspects - it's the quickest way to build a cross-platform app &amp;amp; it provides a great development experience - as can be testified by its usage in popular apps like VSCode, Discord, and Slack.&lt;/p&gt;
&lt;p&gt;Revery is kind of like super-fast, &lt;em&gt;native&lt;/em&gt; Electron - with a bundled React, Redux, and a fast build system - all ready to go!&lt;/p&gt;
&lt;p&gt;Revery is built with &lt;a href=&quot;https://reasonml.github.io&quot; rel=&quot;nofollow&quot;&gt;reasonml&lt;/a&gt;, which is a javascript-like syntax on top of &lt;a href=&quot;https://ocaml.org&quot; rel=&quot;nofollow&quot;&gt;OCaml&lt;/a&gt; This means that the language is accessible to JS developers.&lt;/p&gt;
&lt;p&gt;Your apps are compiled to native code with the Reason / OCaml toolchain - with &lt;strong&gt;instant startup&lt;/strong&gt; and &lt;strong&gt;performance comparable to native C code.&lt;/strong&gt; Revery also features GPU-accelerated rendering. The compiler itself is fast, too!&lt;/p&gt;
&lt;p&gt;Revery is an experiment - can we provide a great developer experience and help teams be productive, without making sacrifices on performance?&lt;/p&gt;
&lt;h3&gt;Design Decisions&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Consistent cross-platform behavior&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A major value prop of Electron is that you can build for all platforms at once. You have great confidence as a developer that your app will look and work the same across different platforms. Revery is the same - aside from platform-specific behavior, if your app looks or behaves differently on another platform, that's a bug! As a consequence, Revery is like &lt;a href=&quot;https://flutter.io&quot; rel=&quot;nofollow&quot;&gt;flutter&lt;/a&gt; in that it &lt;strong&gt;does not use native widgets&lt;/strong&gt;. This means more work for us, but also that we have more predictable functionality cross-platform!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you're looking for something that does leverage native widgets, check out &lt;a href=&quot;https://github.com/briskml/brisk&quot;&gt;briskml&lt;/a&gt;. Another alternative is the &lt;a href=&quot;https://github.com/let-def/cuite&quot;&gt;cuite&lt;/a&gt; OCaml binding for &lt;a href=&quot;https://github.com/let-def/cuite&quot;&gt;Qt&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;High performance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Performance should be at the forefront, and not a compromise - we need to develop and build benchmarks that help ensure top-notch performance and start-up time.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Type-safe, functional code&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We might have some dirty mutable objects for performance - but our high-level API should be purely functional. You should be able to follow the React model of modelling your UI as a &lt;em&gt;pure function&lt;/em&gt; of application state -&amp;gt; UI.&lt;/p&gt;
&lt;h2&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/bryphe/revery-quick-start&quot;&gt;revery-quick-start&lt;/a&gt; to get up and running with your own Revery app!&lt;/p&gt;
&lt;h2&gt;API Example&lt;/h2&gt;
&lt;p&gt;Here's a super simple Revery app, demonstrating the basic API surface:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-reason&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * The 'main' function for our app.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; app &lt;span class=&quot;pl-smi&quot;&gt;=&amp;gt;&lt;/span&gt; {
  &lt;span class=&quot;pl-c&quot;&gt;/* Create a window! */&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;win&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;createWindow(app&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;test&quot;&lt;/span&gt;)&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;/* Set up some styles */&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;textHeaderStyle&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;Style&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;make(
      ~backgroundColor&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;black&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
      ~color&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;white&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
      ~fontFamily&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;Roboto-Regular.ttf&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
      ~fontSize&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
    )&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;/* Set up render function */&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;=&amp;gt;&lt;/span&gt; {
    &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;view&lt;/span&gt;
      style&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;Style&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;make(
        ~position&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;LayoutTypes&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-e&quot;&gt;Absolute&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        ~bottom&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        ~top&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        ~left&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        ~right&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        ~backgroundColor&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;blue&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
      )}&amp;gt;
      &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;view&lt;/span&gt;
        style&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;Style&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;make(
          ~position&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;LayoutTypes&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-e&quot;&gt;Absolute&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~bottom&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~width&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~height&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~backgroundColor&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;red&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        )}
      /&amp;gt;
      &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;image&lt;/span&gt; src&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;logo.png&quot;&lt;/span&gt; style&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;Style&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;make(~width&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt; ~height&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;)} /&amp;gt;
      &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;text&lt;/span&gt; style&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;textHeaderStyle&amp;gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt; &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;text&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;view&lt;/span&gt;
        style&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;{&lt;span class=&quot;pl-c1&quot;&gt;Style&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;make(
          ~width&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~height&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          ~backgroundColor&lt;span class=&quot;pl-smi&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;Colors&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;green&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;pl-c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt;
        )}
      /&amp;gt;
    &amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;view&lt;/span&gt;&amp;gt;&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;
  }&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;/* Start the UI */&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;start(win&lt;span class=&quot;pl-smi&quot;&gt;,&lt;/span&gt; render)&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;
}&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/* Let's get this party started! */&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;.&lt;/span&gt;start(init)&lt;span class=&quot;pl-smi&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Custom Components&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h2&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;It's early days for &lt;code&gt;revery&lt;/code&gt; and we still have a lot of work ahead!&lt;/p&gt;
&lt;p&gt;Some tentative work we need to do, in no particular order:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;UI Infrastructure
&lt;/li&gt;
&lt;li&gt;UI Components
&lt;/li&gt;
&lt;li&gt;Platform support
&lt;/li&gt;
&lt;li&gt;Mobile support
&lt;/li&gt;
&lt;li&gt;Developer Experience
&lt;/li&gt;
&lt;li&gt;Audio Support
&lt;/li&gt;
&lt;li&gt;Example apps
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;Revery is provided under the &lt;a href=&quot;https://github.com/revery-ui/revery/blob/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We'd love your help, and welcome PRs and contributions. Join us on &lt;a href=&quot;https://discord.gg/UvQ2cFn&quot; rel=&quot;nofollow&quot;&gt;Discord&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Some ideas for getting started:&lt;/p&gt;
&lt;h2&gt;Special Thanks&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;revery&lt;/code&gt; would not be possible without a bunch of cool tech:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;revery&lt;/code&gt; was inspired by some &lt;strong&gt;awesome projects:&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 25 Jan 2019 01:47:35 +0000</pubDate>
<dc:creator>stockkid</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/46036328?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>revery-ui/revery</og:title>
<og:url>https://github.com/revery-ui/revery</og:url>
<og:description>:zap: Native, high-performance, cross-platform desktop apps - built with Reason! - revery-ui/revery</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/revery-ui/revery</dc:identifier>
</item>
<item>
<title>What Happens When You Try to Sue Your Boss</title>
<link>https://www.bloomberg.com/features/2019-arbitration-hell/</link>
<guid isPermaLink="true" >https://www.bloomberg.com/features/2019-arbitration-hell/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/features/2019-arbitration-hell/&quot;&gt;https://www.bloomberg.com/features/2019-arbitration-hell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18994376&quot;&gt;https://news.ycombinator.com/item?id=18994376&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 226&lt;/p&gt;
&lt;p&gt;# Comments: 153&lt;/p&gt;
</description>
<pubDate>Fri, 25 Jan 2019 00:15:08 +0000</pubDate>
<dc:creator>electricwater</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=784cdd60-20ba-11e9-9be8-d5db8175af17&amp;url=L2ZlYXR1cmVzLzIwMTktYXJiaXRyYXRpb24taGVsbC8=</dc:identifier>
</item>
<item>
<title>Oracle v. Google and the future of software development</title>
<link>https://www.blog.google/outreach-initiatives/public-policy/our-fight-protect-future-software-development/</link>
<guid isPermaLink="true" >https://www.blog.google/outreach-initiatives/public-policy/our-fight-protect-future-software-development/</guid>
<description>&lt;p&gt;Today &lt;a href=&quot;http://services.google.com/fh/files/blogs/googlepetition.pdf&quot;&gt;we asked&lt;/a&gt; the Supreme Court of the United States to review our long-running copyright dispute with Oracle over the use of software interfaces. The outcome will have a far-reaching impact on innovation across the computer industry.&lt;/p&gt;
&lt;p&gt;Standardized software interfaces have driven innovation in software development. They let computer programs interact with each other and let developers easily build technologies for different platforms. Unless the Supreme Court steps in here, the industry will be hamstrung by court decisions finding that the use of software interfaces in creating new programs is not allowed under copyright law.&lt;/p&gt;
&lt;p&gt;With smartphone apps now common, we sometimes forget how hard it once was for developers to build apps across a wide range of different platforms. Our 2008 release of the open-source Android platform changed the game. It helped developers overcome the challenges of smaller processors, limited memory, and short battery life, while providing innovative features and functionality for smartphone development. The result was a win for everyone: Developers could build new apps, manufacturers could build great new devices, and the resulting competition gave consumers both lower prices and an extraordinary range of choice.&lt;/p&gt;
&lt;p&gt;We built Android following the computer industry’s long-accepted practice of re-using software interfaces, which provide sets of commands that make it easy to implement common functionality—in the same way that computer keyboard short-cuts like pressing “control” and “p” make it easy to print. Android created a transformative new platform, while letting millions of Java programmers use their existing skills to create new applications. And the creators of Java &lt;a href=&quot;http://web.archive.org/web/20101023072550/http://blogs.sun.com/jonathan/entry/congratulations_google&quot;&gt;backed the release of Android&lt;/a&gt;, saying that it had “strapped another set of rockets to the [Java] community’s momentum.”&lt;/p&gt;
&lt;p&gt;But after it acquired Java in 2010, Oracle sued us for using these software interfaces, trying to profit by changing the rules of software development after the fact. Oracle’s lawsuit claims the right to control software interfaces—the building blocks of software development—and as a result, the ability to lock in a community of developers who have invested in learning the free and open Java language.&lt;/p&gt;
&lt;p&gt;A court initially ruled that the software interfaces in this case are not copyrightable, but that decision was overruled. A unanimous jury then held that our use of the interfaces was a legal fair use, but that decision was likewise overruled. Unless the Supreme Court corrects these twin reversals, this case will end developers’ traditional ability to freely use existing software interfaces to build new generations of computer programs for consumers. Just like we all learn to use computer keyboard shortcuts, developers have learned to use the many standard interfaces associated with different programming languages. Letting these reversals stand would effectively lock developers into the platform of a single copyright holder—akin to saying that keyboard shortcuts can work with only one type of computer.&lt;/p&gt;
&lt;p&gt;The U.S. Constitution authorized copyrights to “promote the progress of science and useful arts,” not to impede creativity or promote lock-in of software platforms. Leading voices from &lt;a href=&quot;http://services.google.com/fh/files/blogs/amicushewletpackard.pdf&quot;&gt;business&lt;/a&gt;, &lt;a href=&quot;http://services.google.com/fh/files/blogs/amicusbrcomputerscientists.pdf&quot;&gt;technology&lt;/a&gt;, &lt;a href=&quot;http://services.google.com/fh/files/blogs/amicusipprofs.pdf&quot;&gt;academia&lt;/a&gt;, and the &lt;a href=&quot;http://services.google.com/fh/files/blogs/amicusfrontierfound.pdf&quot;&gt;nonprofit&lt;/a&gt; sector agree and have spoken out about the potentially devastating impacts of this case.&lt;/p&gt;
&lt;p&gt;We support software developers’ ability to develop the applications we all have come to use every day, and we hope that the Supreme Court will give this case the serious and careful consideration it deserves.  &lt;/p&gt;
</description>
<pubDate>Thu, 24 Jan 2019 23:03:19 +0000</pubDate>
<dc:creator>nkurz</dc:creator>
<og:type>article</og:type>
<og:title>Oracle v. Google and the future of software development</og:title>
<og:description>An update on Oracle v. Google, our long-running copyright dispute over the use of software interfaces.</og:description>
<og:image>https://www.blog.google/static/blogv2/images/google-200x200.7714256da16f.png</og:image>
<og:url>https://www.blog.google/outreach-initiatives/public-policy/our-fight-protect-future-software-development/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.blog.google/outreach-initiatives/public-policy/our-fight-protect-future-software-development/</dc:identifier>
</item>
<item>
<title>Practical Linux Hardening Guide</title>
<link>https://github.com/trimstray/the-practical-linux-hardening-guide</link>
<guid isPermaLink="true" >https://github.com/trimstray/the-practical-linux-hardening-guide</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;h2 align=&quot;center&quot;&gt;&lt;code&gt;The Practical Linux Hardening Guide&lt;/code&gt;&lt;/h2&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/trimstray/the-practical-linux-hardening-guide/blob/master/doc/img/main_preview.jpg&quot;&gt;&lt;img src=&quot;https://github.com/trimstray/the-practical-linux-hardening-guide/raw/master/doc/img/main_preview.jpg&quot; alt=&quot;Master&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&quot;&lt;em&gt;Did you know all your doors were locked?&lt;/em&gt;&quot; - Riddick (The Chronicles of Riddick)&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/trimstray/the-practical-linux-hardening-guide/tree/master&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/588410b32491be114a084c302282529d4759412a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4272616e63682d6d61737465722d677265656e2e7376673f6c6f6e6743616368653d74727565&quot; alt=&quot;Branch&quot; data-canonical-src=&quot;https://img.shields.io/badge/Branch-master-green.svg?longCache=true&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.gnu.org/licenses/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2a0dc0f70793a1424e5b66a9a95e574cae05f58c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d474e552d626c75652e7376673f6c6f6e6743616368653d74727565&quot; alt=&quot;License&quot; data-canonical-src=&quot;https://img.shields.io/badge/License-GNU-blue.svg?longCache=true&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;All suggestions and pull requests are welcome!&lt;/p&gt;
&lt;p&gt;💥 Work in progress, just a moment... First, I update a &lt;a href=&quot;https://github.com/trimstray/the-practical-linux-hardening-guide#table-of-content&quot;&gt;Table Of Content&lt;/a&gt; and chapters.&lt;/p&gt;
&lt;p&gt;If you want to support another repository containing &lt;strong&gt;hardening&lt;/strong&gt; recipes, please see: &lt;a href=&quot;https://github.com/trimstray/linux-hardening-checklist&quot;&gt;linux-hardening-checklist&lt;/a&gt; - it's a simple checklist with the most important hardening rules.&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Table Of Content&lt;/h2&gt;
&lt;h2&gt;Pre install tasks&lt;/h2&gt;
&lt;h3&gt;Physical system security&lt;/h3&gt;
&lt;h4&gt;ℹ️ Introduction&lt;/h4&gt;
&lt;p&gt;The primary goal of many possible attacks is to stop them where possible, and failing that slow them down so that hopefully someone will notice the attacker tearing apart a system in someone's office.&lt;/p&gt;
&lt;h4&gt;✴️ Secure rooms&lt;/h4&gt;
&lt;p&gt;For secure rooms make sure that the walls go beyond the false ceiling, and below the raised floor, large vents should also be covered with bars if possible.&lt;/p&gt;
&lt;h4&gt;✴️ Monitoring&lt;/h4&gt;
&lt;p&gt;Monitoring the room with CCTV or wired cameras. It's great way to provide security for your server room or data center. As well as providing video footage of events which may occur - door open events, motion detection or any other sensor event, they also act as a visual deterrent to would be criminals.&lt;/p&gt;
&lt;p&gt;Solution for remotely monitoring the temperature ensue proactively notify you when the temperature goes above or below pre-defined thresholds, potentially allowing you to take corrective measures before encountering costly downtime.&lt;/p&gt;
&lt;h4&gt;✴️ Air conditioning&lt;/h4&gt;
&lt;p&gt;Computer equipment generates heat, and is sensitive to heat, humidity, and dust, but also the need for very high resilience and failover requirements. Maintaining a stable temperature and humidity within tight tolerances is critical to IT system reliability.&lt;/p&gt;
&lt;p&gt;Air conditioning designs for most computer or server rooms will vary depending on various design considerations, but they are generally one of two types: &quot;up-flow&quot; and &quot;down-flow&quot; configurations.&lt;/p&gt;
&lt;h4&gt;✴️ Fire protection&lt;/h4&gt;
&lt;p&gt;The fire protection system's main goal should be to detect and alert of fire in the early stages, then bring fire under control without disrupting the flow of business and without threatening the personnel in the facility. Server room fire suppression technology has been around for as long as there have been server rooms.&lt;/p&gt;
&lt;p&gt;There are a series of things you need in a fire suppression system:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;an emergency power off function&lt;/li&gt;
&lt;li&gt;gas-based suppression system&lt;/li&gt;
&lt;li&gt;water detection sensors in/on the floor&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;✴️ Locked racks&lt;/h4&gt;
&lt;p&gt;All systems should be securely fastened to something with a cable system, or locked in an equipment cage if possible. Case locks should be used when possible to slow attackers down.&lt;/p&gt;
&lt;h4&gt;✴️ Console security&lt;/h4&gt;
&lt;p&gt;With physical access to most machines you can simply reboot the system and ask it nicely to launch into single user mode, or tell it to use &lt;code&gt;/bin/sh&lt;/code&gt; for init.&lt;/p&gt;
&lt;h4&gt;✴️ BIOS protection&lt;/h4&gt;
&lt;p&gt;In the program itself to edit the BIOS settings:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;only boot from specific drive&lt;/li&gt;
&lt;li&gt;disable the unused controllers&lt;/li&gt;
&lt;li&gt;disable the booting from external media devices (USB/CD/DVD)&lt;/li&gt;
&lt;li&gt;enable BIOS password&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You need to protect the BIOS of the host with a password so the end-user won’t be able to change and override the security settings in the BIOS.&lt;/p&gt;
&lt;p&gt;Main reasons for password protecting the BIOS:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;preventing changes to BIOS settings&lt;/li&gt;
&lt;li&gt;preventing system booting&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Because the methods for setting a BIOS password vary between computer manufacturers, consult the computer's manual for specific instructions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For this reason, it is good practice to lock the computer case if possible. However, consult the manual for the computer or motherboard before attempting to disconnect the CMOS battery.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;☑️ Summary checklist&lt;/h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Physically secure machine (also outside of a server room)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Monitoring server rooms with CCTV or wired cameras&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Remotely monitoring the temperature&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Efficient air conditioning solution&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Efficient fire protection system&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Locked cage (server case)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Physical access to server console&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Password on the BIOS&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Disable external media devices&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Periodic physical inspections&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Hard disk encryption&lt;/h3&gt;
&lt;h4&gt;ℹ️ Introduction&lt;/h4&gt;
&lt;p&gt;Disk encryption is focused on securing physical access, while relying on other parts of the system to provide things like network security and user-based access control.&lt;/p&gt;
&lt;p&gt;Most of the Linux distributions will allow you to encrypt your disks before installation.&lt;/p&gt;
&lt;p&gt;If you use an alternative installation method (e.g. from &lt;code&gt;debootstrap&lt;/code&gt;) you can create an &lt;a href=&quot;https://github.com/trimstray/the-practical-linux-hardening-guide#disk-partitions&quot;&gt;encrypted disk manually&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before this you should to answer the following questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What part of filesystem do you want to encrypt?
&lt;ul&gt;&lt;li&gt;only user data&lt;/li&gt;
&lt;li&gt;user data and system data&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;How should &lt;code&gt;swap&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt; and other be taken care of?
&lt;ul&gt;&lt;li&gt;disable or mount as ramdisk&lt;/li&gt;
&lt;li&gt;encrypt (separately of as part of full)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;How should encrypted parts of the disk be unlocked?
&lt;ul&gt;&lt;li&gt;passphrase&lt;/li&gt;
&lt;li&gt;key file&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;When should encrypted parts of the disk be unlocked?
&lt;ul&gt;&lt;li&gt;before boot process&lt;/li&gt;
&lt;li&gt;during boot process&lt;/li&gt;
&lt;li&gt;mixed above or manually&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;✴️ Encrypt root filesystem&lt;/h4&gt;
&lt;p&gt;Unlocked during boot, using passphrases or USB stick with keyfiles.&lt;/p&gt;
&lt;h4&gt;✴️ Encrypt /boot partition&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;encrypting the whole disk without &lt;code&gt;/boot&lt;/code&gt; partition but keeping it on a flash drive you carry at all times&lt;/li&gt;
&lt;li&gt;using a checksum value of the boot sector&lt;/li&gt;
&lt;li&gt;boot partition to detect it and change you passphrase&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This may not completely get rid of the attack vector described in this post as there is still part of the bootloader that isn't encrypted, but at least the grub stage2 and the kernel/ramdisk are encrypted and should make it much harder to attack.&lt;/p&gt;
&lt;p&gt;In addition, the &lt;code&gt;/boot&lt;/code&gt; partition may be a weak point if you use encryption methods for the rest of the disk.&lt;/p&gt;
&lt;p&gt;Historically it has been necessary to leave &lt;code&gt;/boot&lt;/code&gt; unencrypted because bootloaders didn't support decrypting block devices. However, there are some dangers to leaving the bootloader and ramdisks unencrypted.&lt;/p&gt;
&lt;p&gt;Before this you should to answer the following questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Where your &lt;code&gt;/boot&lt;/code&gt; partition is stored?
&lt;ul&gt;&lt;li&gt;the same place where stored &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;separately partition&lt;/li&gt;
&lt;li&gt;external flash drive&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The following recipe should be made after installing the system (however, these steps are included in this section to avoid mixing issues).&lt;/p&gt;
&lt;h6&gt;Create copy of your /boot&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mkdir /mnt/boot
mount --bind / /mnt/boot
rsync -aAXv /boot/ /mnt/boot/
umount /mnt/boot
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Removed old /boot partition&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
umount /boot
sed -i -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/\/boot/d&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /etc/fstab
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Regenerate grub configuration&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Debian like distributions&lt;/span&gt;
grub-mkconfig &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /boot/grub/grub.cfg

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; RedHat like distributions&lt;/span&gt;
grub2-mkconfig &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /boot/grub2/grub.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Enable &lt;code&gt;GRUB_ENABLE_CRYPTODISK&lt;/code&gt; param&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; GRUB_ENABLE_CRYPTODISK=y &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/default/grub
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Reinstall grub&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Debian like distributions&lt;/span&gt;
grub-install /dev/sda

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; RedHat like distributions&lt;/span&gt;
grub2-install /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;More details can be found here (Bootloader configuration (grub) section):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;✴️ Swap partition&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;swap area is not required to survive a reboot, therefore a new random encryption key can be chosen each time the swap area is activated&lt;/li&gt;
&lt;li&gt;get the key from &lt;code&gt;/dev/urandom&lt;/code&gt; because &lt;code&gt;/dev/random&lt;/code&gt; maybe stalling your boot sequence&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;☑️ Summary checklist&lt;/h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Encrypting the whole disk&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Usage passphrase or key file to disk unlocked&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Choosing a strong passphrase&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Encrypting the &lt;code&gt;/boot&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Securing swap partition with &lt;code&gt;/dev/urandom&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;code&gt;swap&lt;/code&gt; or &lt;code&gt;tmp&lt;/code&gt; using an automatically generated per-session throwaway key&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Post install tasks&lt;/h2&gt;
&lt;h3&gt;Bootloader configuration (grub)&lt;/h3&gt;
&lt;h4&gt;ℹ️ Introduction&lt;/h4&gt;
&lt;p&gt;Protection for the boot loader can prevent unauthorized users who have physical access to systems, e.g. attaining root privileges through single user mode.&lt;/p&gt;
&lt;p&gt;Basically when you want to prohibit unauthorized reconfiguring of your system, otherwise anybody could load anything on it.&lt;/p&gt;
&lt;h4&gt;✴️ Protect bootloader with password&lt;/h4&gt;
&lt;p&gt;You can set password for the bootloader for prevents users from entering single user mode, changing settings at boot time, access to the bootloader console, reset the root password, if there is no password for GRUB-menu or access to non-secure operating systems.&lt;/p&gt;
&lt;h6&gt;Generate password hash&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Debian like distributions&lt;/span&gt;
grub-mkpasswd-pbkdf2

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; RedHat like distributions&lt;/span&gt;
grub2-mkpasswd-pbkdf2
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Updated grub configuration&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /etc/grub.d/01_hash &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;set superusers=&quot;user&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;password_pbkdf2 user&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;grub.pbkdf2.sha512.&amp;lt;hash&amp;gt; # rest of your password hash&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And regenerate grub configuration:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Debian like distributions&lt;/span&gt;
grub-mkconfig &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /boot/grub/grub.cfg

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; RedHat like distributions&lt;/span&gt;
grub2-mkconfig &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /boot/grub2/grub.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;✴️ Protect bootloader config files&lt;/h4&gt;
&lt;p&gt;Set the owner and group of &lt;code&gt;/etc/grub.conf&lt;/code&gt; to the root user:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
chown root:root /etc/grub.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
chown -R root:root /etc/grub.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set permission on the &lt;code&gt;/etc/grub.conf&lt;/code&gt; or &lt;code&gt;/etc/grub.d&lt;/code&gt; file to read and write for root only:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
chmod og-rwx /etc/grub.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
chmod -R og-rwx /etc/grub.d
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;☑️ Summary checklist&lt;/h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Set password for the bootloader&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Disk partitions&lt;/h3&gt;
&lt;h4&gt;ℹ️ Introduction&lt;/h4&gt;
&lt;p&gt;Critical file systems should be separated into different partitions in ways that make your system a better and more secure.&lt;/p&gt;
&lt;h4&gt;✴️ Separate disk partitions&lt;/h4&gt;
&lt;p&gt;Make sure the following filesystems are mounted on separate partitions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/boot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/tmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Additionally, depending on the purpose of the server, you should consider separating the following partitions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/usr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/www&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You should also consider separating these partitions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/var/tmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/log/audit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;✴️ Mount options: nodev, nosuid and noexec&lt;/h4&gt;
&lt;p&gt;For more security-focused situations is as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;nodev&lt;/code&gt; - specifies that the filesystem cannot contain special devices: This is a security precaution. You don't want a user world-accessible filesystem like this to have the potential for the creation of character devices or access to random device hardware&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nosuid&lt;/code&gt; - specifies that the filesystem cannot contain set userid files. Preventing setuid binaries on a world-writable filesystem makes sense because there's a risk of root escalation or other awfulness there&lt;/li&gt;
&lt;li&gt;&lt;code&gt;noexec&lt;/code&gt; - this param might be useful for a partition that contains no binaries, like &lt;strong&gt;/var&lt;/strong&gt;, or contains binaries you do not want to execute on your system (from partitions with &lt;code&gt;noexec&lt;/code&gt;), or that cannot even be executed on your system&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;✴️ Secure /boot directory&lt;/h4&gt;
&lt;p&gt;The boot directory contains important files related to the Linux kernel, so you need to make sure that this directory is locked down to read-only permissions.&lt;/p&gt;
&lt;p&gt;Add &lt;strong&gt;ro&lt;/strong&gt; option and &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt; and &lt;code&gt;noexec&lt;/code&gt; to &lt;code&gt;/etc/fstab&lt;/code&gt; for &lt;strong&gt;/boot&lt;/strong&gt; entry:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
LABEL=/boot  /boot  ext2  defaults,ro,nodev,nosuid,noexec  1 2
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;When updating the kernel you will have to move the flag to &lt;code&gt;rw&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mount -o remount,defaults,rw /boot
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h4&gt;✴️ Secure /tmp and /var/tmp&lt;/h4&gt;
&lt;p&gt;On Linux systems, the &lt;strong&gt;/tmp&lt;/strong&gt; and &lt;strong&gt;/var/tmp&lt;/strong&gt; locations are world-writable.&lt;/p&gt;
&lt;p&gt;Several daemons/applications use the &lt;strong&gt;/tmp&lt;/strong&gt; or &lt;strong&gt;/var/tmp&lt;/strong&gt; directories to temporarily store data, log information, or to share information between their sub-components. However, due to the shared nature of these directories, several attacks are possible, including:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leaks of confidential data via secrets in file names&lt;/li&gt;
&lt;li&gt;Race-condition attacks (TOCTOU) on the integrity of processes and data&lt;/li&gt;
&lt;li&gt;Denial-of-Service (DoS) attacks based on race conditions and pre-allocating file/directory names&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As a rule of thumb, malicious applications usually write to &lt;strong&gt;/tmp&lt;/strong&gt; and then attempt to run whatever was written. A way to prevent this is to mount &lt;strong&gt;/tmp&lt;/strong&gt; on a separate partition with the options &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt; and &lt;code&gt;noexec&lt;/code&gt; enabled.&lt;/p&gt;
&lt;p&gt;This will deny binary execution from &lt;strong&gt;/tmp&lt;/strong&gt;, disable any binary to be suid root, and disable any block devices from being created.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The first possible scenario is create symlink&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mv /var/tmp /var/tmp.old
ln -s /tmp /var/tmp
cp -prf /var/tmp.old/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; /tmp &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -fr /var/tmp.old
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and set properly mount params:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
UUID=&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;...&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;  /tmp  ext4  defaults,nodev,nosuid,noexec  1 2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The second scenario is a bind mount&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The storage location &lt;strong&gt;/var/tmp&lt;/strong&gt; should be bind mounted to &lt;strong&gt;/tmp&lt;/strong&gt;, as having multiple locations for temporary storage is not required:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
/tmp  /var/tmp  none  rw,nodev,nosuid,noexec,bind  0 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The third scenario is setting up polyinstantiated directories&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create new directories:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mkdir --mode 000 /tmp-inst
mkdir --mode 000 /var/tmp/tmp-inst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/security/namespace.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
 /tmp      /tmp-inst/          level  root,adm
 /var/tmp  /var/tmp/tmp-inst/  level  root,adm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set correct &lt;strong&gt;SELinux&lt;/strong&gt; context:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
setsebool polyinstantiation_enabled=1
chcon --reference=/tmp /tmp-inst
chcon --reference=/var/tmp/ /var/tmp/tmp-inst
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And set &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt; and &lt;code&gt;noexec&lt;/code&gt; mount options in &lt;code&gt;/etc/fstab&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Alternative for &lt;strong&gt;polyinstantiated directories&lt;/strong&gt; is &lt;strong&gt;PrivateTmp&lt;/strong&gt; feature available from &lt;strong&gt;systemd&lt;/strong&gt;. For more information please see: &lt;a href=&quot;https://access.redhat.com/blogs/766093/posts/1976243&quot; rel=&quot;nofollow&quot;&gt;New Red Hat Enterprise Linux 7 Security Feature: PrivateTmp&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;✴️ Secure /dev/shm&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;/dev/shm&lt;/code&gt; is a temporary file storage filesystem, i.e. &lt;strong&gt;tmpfs&lt;/strong&gt;, that uses RAM for the backing store. One of the major security issue with the &lt;code&gt;/dev/shm&lt;/code&gt; is anyone can upload and execute files inside the &lt;code&gt;/dev/shm&lt;/code&gt; similar to the &lt;code&gt;/tmp&lt;/code&gt; partition. Further the size should be limited to avoid an attacker filling up this mountpoint to the point where applications could be affected. (normally it allows 20% or more of RAM to be used). The sticky bit should be set like for any world writeable directory.&lt;/p&gt;
&lt;p&gt;For applies to shared memory &lt;code&gt;/dev/shm&lt;/code&gt; mount params:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tmpfs  /dev/shm  tmpfs  rw,nodev,nosuid,noexec,size=1024M,mode=1777 0 0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also create a group named 'shm' and put application users for SHM-using applications in there. Then the access can be completely be restricted as such:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tmpfs  /dev/shm  tmpfs  rw,nodev,nosuid,noexec,size=1024M,mode=1770,uid=root,gid=shm 0 0
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;✴️ Secure /proc filesystem&lt;/h4&gt;
&lt;p&gt;The proc pseudo-filesystem &lt;code&gt;/proc&lt;/code&gt; should be mounted with &lt;code&gt;hidepid&lt;/code&gt;. When setting &lt;code&gt;hidepid&lt;/code&gt; to &lt;strong&gt;2&lt;/strong&gt;, directories entries in &lt;code&gt;/proc&lt;/code&gt; will hidden.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
proc  /proc  proc  defaults,hidepid=2  0 0
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of the services/programs operate incorrectly when the &lt;code&gt;hidepid&lt;/code&gt; parameter is set, e.g. Nagios checks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;✴️ Swap partition&lt;/h4&gt;
&lt;h4&gt;✴️ Disk quotas&lt;/h4&gt;
&lt;h4&gt;☑️ Summary checklist&lt;/h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;False&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate base partition scheme: &lt;code&gt;/boot&lt;/code&gt;, &lt;code&gt;/tmp&lt;/code&gt;, &lt;code&gt;/var&lt;/code&gt;, &lt;code&gt;/var/log&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate &lt;code&gt;/usr&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate &lt;code&gt;/home&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate &lt;code&gt;/var/www&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate &lt;code&gt;/var/tmp&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Separate &lt;code&gt;/var/audit&lt;/code&gt; partition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Secure &lt;code&gt;/boot&lt;/code&gt; directory with &lt;code&gt;ro&lt;/code&gt;, &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt; options&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Secure &lt;code&gt;/tmp&lt;/code&gt; and &lt;code&gt;/var/tmp&lt;/code&gt; directory with &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt; options&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Create symlink for &lt;code&gt;/var/tmp&lt;/code&gt; in &lt;code&gt;/tmp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Setting up bind-mount &lt;code&gt;/var/tmp&lt;/code&gt; to &lt;code&gt;/tmp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Setting up polyinstantiated directories for &lt;code&gt;/tmp&lt;/code&gt; and &lt;code&gt;/var/tmp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Secure &lt;code&gt;/dev/shm&lt;/code&gt; directory with &lt;code&gt;nodev&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt; options&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Secure &lt;code&gt;/proc&lt;/code&gt; filesystem with &lt;code&gt;hidepid=2&lt;/code&gt; option&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;🔲&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 24 Jan 2019 21:02:48 +0000</pubDate>
<dc:creator>covertress</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/31127917?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>trimstray/the-practical-linux-hardening-guide</og:title>
<og:url>https://github.com/trimstray/the-practical-linux-hardening-guide</og:url>
<og:description>:zap: This guide details the planning and the tools involved in creating a secure Linux production systems - work in progress. - trimstray/the-practical-linux-hardening-guide</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/trimstray/the-practical-linux-hardening-guide</dc:identifier>
</item>
<item>
<title>How to Be Successful</title>
<link>http://blog.samaltman.com/how-to-be-successful</link>
<guid isPermaLink="true" >http://blog.samaltman.com/how-to-be-successful</guid>
<description>&lt;p&gt;I’ve observed thousands of founders and thought a lot about what it takes to make a huge amount of money or to create something important. Usually, people start off wanting the former and end up wanting the latter.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Here are 13 thoughts about how to achieve such outlier success. Everything here is easier to do once you’ve already reached a baseline degree of success (through privilege or effort) and want to put in the work to turn that into outlier success. [1] But much of it applies to anyone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Compound yourself&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Compounding is magic. Look for it everywhere. Exponential curves are the key to wealth generation.&lt;/p&gt;
&lt;p&gt;A medium-sized business that grows 50% in value every year becomes huge in a very short amount of time. Few businesses in the world have true network effects and extreme scalability. But with technology, more and more will.  It’s worth a lot of effort to find them and create them.&lt;/p&gt;
&lt;p&gt;You also want to be an exponential curve yourself—you should aim for your life to follow an ever-increasing up-and-to-the-right trajectory. It’s important to move towards a career that has a compounding effect—most careers progress fairly linearly.&lt;/p&gt;
&lt;p&gt;You don't want to be in a career where people who have been doing it for two years can be as effective as people who have been doing it for twenty—your rate of learning should always be high. As your career progresses, each unit of work you do should generate more and more results. There are many ways to get this leverage, such as capital, technology, brand, network effects, and managing people.&lt;/p&gt;
&lt;p&gt;It’s useful to focus on adding another zero to whatever you define as your success metric—money, status, impact on the world, or whatever. I am willing to take as much time as needed between projects to find my next thing. But I always want it to be a project that, if successful, will make the rest of my career look like a footnote.&lt;/p&gt;
&lt;p&gt;Most people get bogged down in linear opportunities. Be willing to let small opportunities go to focus on potential step changes.&lt;/p&gt;
&lt;p&gt;I think the biggest competitive advantage in business—either for a company or for an individual’s career—is long-term thinking with a broad view of how different systems in the world are going to come together. One of the notable aspects of compound growth is that the furthest out years are the most important. In a world where almost no one takes a truly long-term view, the market richly rewards those who do.&lt;/p&gt;
&lt;p&gt;Trust the exponential, be patient, and be pleasantly surprised.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Have almost too much self-belief&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Self-belief is immensely powerful. The most successful people I know believe in themselves almost to the point of delusion.&lt;/p&gt;
&lt;p&gt;Cultivate this early. As you get more data points that your judgment is good and you can consistently deliver results, trust yourself more.&lt;/p&gt;
&lt;p&gt;If you don’t believe in yourself, it’s hard to let yourself have contrarian ideas about the future. But this is where most value gets created.&lt;/p&gt;
&lt;p&gt;I remember when Elon Musk took me on a tour of the SpaceX factory many years ago. He talked in detail about manufacturing every part of the rocket, but the thing that sticks in memory was the look of absolute certainty on his face when he talked about sending large rockets to Mars. I left thinking “huh, so that’s the benchmark for what conviction looks like.”&lt;/p&gt;
&lt;p&gt;Managing your own morale—and your team’s morale—is one of the greatest challenges of most endeavors. It’s almost impossible without a lot of self-belief. And unfortunately, the more ambitious you are, the more the world will try to tear you down.  &lt;/p&gt;
&lt;p&gt;Most highly successful people have been really right about the future at least once at a time when people thought they were wrong. If not, they would have faced much more competition.&lt;/p&gt;
&lt;p&gt;Self-belief must be balanced with self-awareness. I used to hate criticism of any sort and actively avoided it. Now I try to always listen to it with the assumption that it’s true, and then decide if I want to act on it or not. Truth-seeking is hard and often painful, but it is what separates self-belief from self-delusion.&lt;/p&gt;
&lt;p&gt;This balance also helps you avoid coming across as entitled and out of touch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Learn to think independently&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Entrepreneurship is very difficult to teach because original thinking is very difficult to teach. School is not set up to teach this—in fact, it generally rewards the opposite. So you have to cultivate it on your own.&lt;/p&gt;
&lt;p&gt;Thinking from first principles and trying to generate new ideas is fun, and finding people to exchange them with is a great way to get better at this. The next step is to find easy, fast ways to test these ideas in the real world.&lt;/p&gt;
&lt;p&gt;“I will fail many times, and I will be really right once” is the entrepreneurs’ way. You have to give yourself a lot of chances to get lucky.&lt;/p&gt;
&lt;p&gt;One of the most powerful lessons to learn is that you can figure out what to do in situations that seem to have no solution. The more times you do this, the more you will believe it. Grit comes from learning you can get back up after you get knocked down.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Get good at “sales”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Self-belief alone is not sufficient—you also have to be able to convince other people of what you believe.&lt;/p&gt;
&lt;p&gt;All great careers, to some degree, become sales jobs. You have to evangelize your plans to customers, prospective employees, the press, investors, etc. This requires an inspiring vision, strong communication skills, some degree of charisma, and evidence of execution ability.&lt;/p&gt;
&lt;p&gt;Getting good at communication—particularly written communication—is an investment worth making. My best advice for communicating clearly is to first make sure your thinking is clear and then use plain, concise language.&lt;/p&gt;
&lt;p&gt;The best way to be good at sales is to genuinely believe in what you’re selling. Selling what you truly believe in feels great, and trying to sell snake oil feels awful.&lt;/p&gt;
&lt;p&gt;Getting good at sales is like improving at any other skill—anyone can get better at it with deliberate practice. But for some reason, perhaps because it feels distasteful, many people treat it as something unlearnable.&lt;/p&gt;
&lt;p&gt;My other big sales tip is to show up in person whenever it’s important. When I was first starting out, I was always willing to get on a plane. It was frequently unnecessary, but three times it led to career-making turning points for me that otherwise would have gone the other way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Make it easy to take risks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most people overestimate risk and underestimate reward. Taking risks is important because it’s impossible to be right all the time—you have to try many things and adapt quickly as you learn more.&lt;/p&gt;
&lt;p&gt;It’s often easier to take risks early in your career; you don’t have much to lose, and you potentially have a lot to gain. Once you’ve gotten yourself to a point where you have your basic obligations covered you should try to make it easy to take risks. Look for small bets you can make where you lose 1x if you’re wrong but make 100x if it works. Then make a bigger bet in that direction.&lt;/p&gt;
&lt;p&gt;Don’t save up for too long, though. At YC, we’ve often noticed a problem with founders that have spent a lot of time working at Google or Facebook. When people get used to a comfortable life, a predictable job, and a reputation of succeeding at whatever they do, it gets very hard to leave that behind (and people have an incredible ability to always match their lifestyle to next year’s salary). Even if they do leave, the temptation to return is great. It’s easy—and human nature—to prioritize short-term gain and convenience over long-term fulfillment.  &lt;/p&gt;
&lt;p&gt;But when you aren’t on the treadmill, you can follow your hunches and spend time on things that might turn out to be really interesting. Keeping your life cheap and flexible for as long as you can is a powerful way to do this, but obviously comes with tradeoffs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Focus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Focus is a force multiplier on work.&lt;/p&gt;
&lt;p&gt;Almost everyone I’ve ever met would be well-served by spending more time thinking about what to focus on. It is much more important to work on the right thing than it is to work many hours. Most people waste most of their time on stuff that doesn’t matter.&lt;/p&gt;
&lt;p&gt;Once you have figured out what to do, be unstoppable about getting your small handful of priorities accomplished quickly. I have yet to meet a slow-moving person who is very successful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. Work hard&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can get to about the 90th percentile in your field by working either smart or hard, which is still a great accomplishment. But getting to the 99th percentile requires both—you will be competing with other very talented people who will have great ideas and be willing to work a lot.&lt;/p&gt;
&lt;p&gt;Extreme people get extreme results. Working a lot comes with huge life trade-offs, and it’s perfectly rational to decide not to do it. But it has a lot of advantages. As in most cases, momentum compounds, and success begets success.&lt;/p&gt;
&lt;p&gt;And it’s often really fun. One of the great joys in life is finding your purpose, excelling at it, and discovering that your impact matters to something larger than yourself. A YC founder recently expressed great surprise about how much happier and more fulfilled he was after leaving his job at a big company and working towards his maximum possible impact. Working hard at that should be celebrated.  &lt;/p&gt;
&lt;p&gt;It’s not entirely clear to me why working hard has become a Bad Thing in certain parts of the US, but this is certainly not the case in other parts of the world—the amount of energy and drive exhibited by entrepreneurs outside of the US is quickly becoming the new benchmark.&lt;/p&gt;
&lt;p&gt;You have to figure out how to work hard without burning out. People find their own strategies for this, but one that almost always works is to find work you like doing with people you enjoy spending a lot of time with.&lt;/p&gt;
&lt;p&gt;I think people who pretend you can be super successful professionally without working most of the time (for some period of your life) are doing a disservice. In fact, work stamina seems to be one of the biggest predictors of long-term success.&lt;/p&gt;
&lt;p&gt;One more thought about working hard: do it at the beginning of your career. Hard work compounds like interest, and the earlier you do it, the more time you have for the benefits to pay off. It’s also easier to work hard when you have fewer other responsibilities, which is frequently but not always the case when you’re young.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. Be bold&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I believe that it’s easier to do a hard startup than an easy startup. People want to be part of something exciting and feel that their work matters.&lt;/p&gt;
&lt;p&gt;If you are making progress on an important problem, you will have a constant tailwind of people wanting to help you. Let yourself grow more ambitious, and don’t be afraid to work on what you really want to work on.&lt;/p&gt;
&lt;p&gt;If everyone else is starting meme companies, and you want to start a gene-editing company, then do that and don’t second guess it.&lt;/p&gt;
&lt;p&gt;Follow your curiosity. Things that seem exciting to you will often seem exciting to other people too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9. Be willful&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A big secret is that you can bend the world to your will a surprising percentage of the time—most people don’t even try, and just accept that things are the way that they are.&lt;/p&gt;
&lt;p&gt;People have an enormous capacity to make things happen. A combination of self-doubt, giving up too early, and not pushing hard enough prevents most people from ever reaching anywhere near their potential.&lt;/p&gt;
&lt;p&gt;Ask for what you want. You usually won’t get it, and often the rejection will be painful. But when this works, it works surprisingly well.&lt;/p&gt;
&lt;p&gt;Almost always, the people who say “I am going to keep going until this works, and no matter what the challenges are I’m going to figure them out”, and mean it, go on to succeed. They are persistent long enough to give themselves a chance for luck to go their way.&lt;/p&gt;
&lt;p&gt;Airbnb is my benchmark for this. There are so many stories they tell that I wouldn’t recommend trying to reproduce (keeping maxed-out credit cards in those nine-slot three-ring binder pages kids use for baseball cards, eating dollar store cereal for every meal, battle after battle with powerful entrenched interest, and on and on) but they managed to survive long enough for luck to go their way.&lt;/p&gt;
&lt;p&gt;To be willful, you have to be optimistic—hopefully this is a personality trait that can be improved with practice. I have never met a very successful pessimistic person.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10. Be hard to compete with&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most people understand that companies are more valuable if they are difficult to compete with. This is important, and obviously true.&lt;/p&gt;
&lt;p&gt;But this holds true for you as an individual as well. If what you do can be done by someone else, it eventually will be, and for less money.&lt;/p&gt;
&lt;p&gt;The best way to become difficult to compete with is to build up leverage. For example, you can do it with personal relationships, by building a strong personal brand, or by getting good at the intersection of multiple different fields. There are many other strategies, but you have to figure out some way to do it.&lt;/p&gt;
&lt;p&gt;Most people do whatever most people they hang out with do. This mimetic behavior is usually a mistake—if you’re doing the same thing everyone else is doing, you will not be hard to compete with.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11. Build a network&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Great work requires teams. Developing a network of talented people to work with—sometimes closely, sometimes loosely—is an essential part of a great career. The size of the network of really talented people you know often becomes the limiter for what you can accomplish.&lt;/p&gt;
&lt;p&gt;An effective way to build a network is to help people as much as you can. Doing this, over a long period of time, is what lead to most of my best career opportunities and three of my four best investments. I’m continually surprised how often something good happens to me because of something I did to help a founder ten years ago.&lt;/p&gt;
&lt;p&gt;One of the best ways to build a network is to develop a reputation for really taking care of the people who work with you. Be overly generous with sharing the upside; it will come back to you 10x. Also, learn how to evaluate what people are great at, and put them in those roles. (This is the most important thing I have learned about management, and I haven’t read much about it.) You want to have a reputation for pushing people hard enough that they accomplish more than they thought they could, but not so hard they burn out.&lt;/p&gt;
&lt;p&gt;Everyone is better at some things than others. Define yourself by your strengths, not your weaknesses. Acknowledge your weaknesses and figure out how to work around them, but don’t let them stop you from doing what you want to do. “I can’t do X because I’m not good at Y” is something I hear from entrepreneurs surprisingly often, and almost always reflects a lack of creativity. The best way to make up for your weaknesses is to hire complementary team members instead of just hiring people who are good at the same things you are.&lt;/p&gt;
&lt;p&gt;A particularly valuable part of building a network is to get good at discovering undiscovered talent. Quickly spotting intelligence, drive, and creativity gets much easier with practice. The easiest way to learn is just to meet a lot of people, and keep track of who goes on to impress you and who doesn’t. Remember that you are mostly looking for rate of improvement, and don’t overvalue experience or current accomplishment.&lt;/p&gt;
&lt;p&gt;I try to always ask myself when I meet someone new “is this person a force of nature?” It’s a pretty good heuristic for finding people who are likely to accomplish great things.&lt;/p&gt;
&lt;p&gt;A special case of developing a network is finding someone eminent to take a bet on you, ideally early in your career. The best way to do this, no surprise, is to go out of your way to be helpful. (And remember that you have to pay this forward at some point later!)&lt;/p&gt;
&lt;p&gt;Finally, remember to spend your time with positive people who support your ambitions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12. You get rich by owning things&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The biggest economic misunderstanding of my childhood was that people got rich from high salaries. Though there are some exceptions—entertainers for example —almost no one in the history of the Forbes list has gotten there with a salary.&lt;/p&gt;
&lt;p&gt;You get truly rich by owning things that increase rapidly in value.&lt;/p&gt;
&lt;p&gt;This can be a piece of a business, real estate, natural resource, intellectual property, or other similar things. But somehow or other, you need to own equity in something, instead of just selling your time. Time only scales linearly.&lt;/p&gt;
&lt;p&gt;The best way to make things that increase rapidly in value is by making things people want at scale.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13. Be internally driven&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most people are primarily externally driven; they do what they do because they want to impress other people. This is bad for many reasons, but here are two important ones.&lt;/p&gt;
&lt;p&gt;First, you will work on consensus ideas and on consensus career tracks.  You will care a lot—much more than you realize—if other people think you’re doing the right thing. This will probably prevent you from doing truly interesting work, and even if you do, someone else would have done it anyway.&lt;/p&gt;
&lt;p&gt;Second, you will usually get risk calculations wrong. You’ll be very focused on keeping up with other people and not falling behind in competitive games, even in the short term.&lt;/p&gt;
&lt;p&gt;Smart people seem to be especially at risk of such externally-driven behavior. Being aware of it helps, but only a little—you will likely have to work super-hard to not fall in the mimetic trap.&lt;/p&gt;
&lt;p&gt;The most successful people I know are primarily internally driven; they do what they do to impress themselves and because they feel compelled to make something happen in the world. After you’ve made enough money to buy whatever you want and gotten enough social status that it stops being fun to get more, this is the only force I know of that will continue to drive you to higher levels of performance.&lt;/p&gt;
&lt;p&gt;This is why the question of a person’s motivation is so important. It’s the first thing I try to understand about someone. The right motivations are hard to define a set of rules for, but you know it when you see it.&lt;/p&gt;
&lt;p&gt;Jessica Livingston and Paul Graham are my benchmarks for this. YC was widely mocked for the first few years, and almost no one thought it would be a big success when they first started. But they thought it would be great for the world if it worked, and they love helping people, and they were convinced their new model was better than the existing model.&lt;/p&gt;
&lt;p&gt;Eventually, you will define your success by performing excellent work in areas that are important to you. The sooner you can start off in that direction, the further you will be able to go. It is hard to be wildly successful at anything you aren’t obsessed with.&lt;/p&gt;
&lt;br/&gt;[1] A comment response I wrote on HN:

&lt;div readability=&quot;31&quot;&gt;The biggest reason I'm excited about basic income is the amount of human potential it will unleash by freeing more people to take risks.
&lt;p&gt;Until then, if you aren't born lucky, you have to claw your way up for awhile before you can take big swings. If you are born in extreme poverty, then this is super difficult :(&lt;/p&gt;
&lt;p&gt;It is obviously an incredible shame and waste that opportunity is so unevenly distributed. But I've witnessed enough people be born with the deck stacked badly against them and go on to incredible success to know it's possible.&lt;/p&gt;
I am deeply aware of the fact that I personally would not be where I am if I weren't born incredibly lucky.
&lt;div readability=&quot;25&quot;&gt;&lt;p&gt;Thanks to Brian Armstrong, Greg Brockman, Dalton Caldwell, Diane von Furstenberg, Maddie Hall, Drew Houston, Vinod Khosla, Jessica Livingston, Jon Levy, Luke Miles (6 drafts!), Michael Moritz, Ali Rowghani, Michael Seibel, Peter Thiel, Tracy Young and Shivon Zillis for reviewing drafts of this, and thanks especially to Lachy Groom for help writing it.&lt;/p&gt;
&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 24 Jan 2019 21:01:13 +0000</pubDate>
<dc:creator>sama</dc:creator>
<og:title>How To Be Successful</og:title>
<og:type>article</og:type>
<og:url>http://blog.samaltman.com/how-to-be-successful</og:url>
<og:description>I’ve observed thousands of founders and thought a lot about what it takes to make a huge amount of money or to create something important. Usually, people start off wanting the former and end up...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>http://blog.samaltman.com/how-to-be-successful</dc:identifier>
</item>
<item>
<title>AlphaStar: Mastering the Real-Time Strategy Game StarCraft II</title>
<link>https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/</link>
<guid isPermaLink="true" >https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/</guid>
<description>&lt;h4&gt;AlphaStar and other complex problems&lt;/h4&gt;
&lt;p&gt;While StarCraft is just a game, albeit a complex one, we think that the techniques behind AlphaStar could be useful in solving other problems. For example, its neural network architecture is capable of modelling very long sequences of likely actions - with games often lasting up to an hour with tens of thousands of moves - based on imperfect information. Each frame of StarCraft is used as one step of input, with the neural network predicting the expected sequence of actions for the rest of the game after every frame. The fundamental problem of making complex predictions over very long sequences of data appears in many real world challenges, such as weather prediction, climate modelling, language understanding and more. We’re very excited about the potential to make significant advances in these domains using learnings and developments from the AlphaStar project.&lt;/p&gt;
&lt;p&gt;We also think some of our training methods may prove useful in the study of safe and robust AI. One of the great challenges in AI is the number of ways in which systems could go wrong, and StarCraft pros have previously found it easy to beat AI systems by finding inventive ways to provoke these mistakes. AlphaStar’s innovative league-based training process finds the approaches that are most reliable and least likely to go wrong. We’re excited by the potential for this kind of approach to help improve the safety and robustness of AI systems in general, particularly in safety-critical domains like energy, where it’s essential to address complex edge cases.&lt;/p&gt;
&lt;p&gt;Achieving the highest levels of StarCraft play represents a major breakthrough in one of the most complex video games ever created. We believe that these advances, alongside other recent progress in projects such as &lt;a href=&quot;https://deepmind.com/blog/alphazero-shedding-new-light-grand-games-chess-shogi-and-go/&quot;&gt;AlphaZero&lt;/a&gt; and &lt;a href=&quot;https://deepmind.com/blog/alphafold/&quot;&gt;AlphaFold&lt;/a&gt;, represent a step forward in our mission to create intelligent systems that will one day help us unlock novel solutions to some of the world’s most important and fundamental scientific problems.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;We are thankful for the support and immense skill of Team Liquid’s TLO and MaNa. We are also grateful for the continued support of Blizzard and the StarCraft community for making this work possible.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;AlphaStar Team:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Oriol Vinyals, Igor Babuschkin, Junyoung Chung, Michael Mathieu, Max Jaderberg, Wojtek Czarnecki, Andrew Dudzik, Aja Huang, Petko Georgiev, Richard Powell, Timo Ewalds, Dan Horgan, Manuel Kroiss, Ivo Danihelka, John Agapiou, Junhyuk Oh, Valentin Dalibard, David Choi, Laurent Sifre, Yury Sulsky, Sasha Vezhnevets, James Molloy, Trevor Cai, David Budden, Tom Paine, Caglar Gulcehre, Ziyu Wang, Tobias Pfaff, Toby Pohlen, Dani Yogatama, Julia Cohen, Katrina McKinney, Oliver Smith, Tom Schaul, Timothy Lillicrap, Chris Apps, Koray Kavukcuoglu, Demis Hassabis, David Silver&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;With thanks to:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ali Razavi, Daniel Toyama, David Balduzzi, Doug Fritz, Eser Aygün, Florian Strub, Guillaume Alain, Haoran Tang, Jaume Sanchez, &lt;/em&gt;&lt;em&gt;Jonathan Fildes, Julian Schrittwieser, Justin Novosad, Karen Simonyan, Karol Kurach, Philippe Hamel, Ricardo Barreira, Scott Reed, Sergey Bartunov, Shibl Mourad, Steve Gaffney, Thomas Hubert, Yuhuai Wu, the &lt;a href=&quot;https://deepmind.com/blog/deepmind-and-blizzard-open-starcraft-ii-ai-research-environment/&quot;&gt;team that created PySC2&lt;/a&gt; and the whole DeepMind Team, with special thanks to the research platform team, comms and events teams.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 24 Jan 2019 20:40:10 +0000</pubDate>
<dc:creator>zawerf</dc:creator>
<og:title>AlphaStar: Mastering the Real-Time Strategy Game StarCraft II | DeepMind</og:title>
<og:url>https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/</og:url>
<og:description>StarCraft, considered to be one of the most challenging Real-Time Strategy games and one of the longest-played esports of all time, has emerged by consensus as a “grand challenge” for AI research. Here, we introduce our StarCraft II program AlphaStar, the first Artificial Intelligence to defeat a top professional player.</og:description>
<og:image>https://storage.googleapis.com/deepmind-live-cms/images/SCII-Blog-Thumb-190123-r02.width-600.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/</dc:identifier>
</item>
<item>
<title>Office 365 is now on Mac App Store</title>
<link>https://www.apple.com/newsroom/2019/01/the-mac-app-store-welcomes-office-365/</link>
<guid isPermaLink="true" >https://www.apple.com/newsroom/2019/01/the-mac-app-store-welcomes-office-365/</guid>
<description>&lt;div class=&quot;pagebody-copy&quot; readability=&quot;41.716417910448&quot;&gt;Today, Office 365 is available for the first time on the Mac App Store, making it easier than ever for Mac users to download Word, Outlook, Excel, PowerPoint, OneNote and the whole suite of Microsoft’s popular apps. Users can also purchase a subscription for &lt;a href=&quot;https://itunes.apple.com/app-bundle/id1450038993?mt=12&quot; target=&quot;_blank&quot;&gt;Office 365&lt;/a&gt; from within the apps, so they can get up and running instantly.&lt;/div&gt;
&lt;p&gt;Office 365 for Mac has been designed specifically to support features that are unique to the Mac experience — features like Dark Mode and Continuity Camera in macOS, as well as the MacBook Pro Touch Bar and the Mac’s industry-leading Trackpad.&lt;/p&gt;
&lt;p&gt;“We are excited to welcome Microsoft Office 365 to the all new Mac App Store in macOS Mojave,” said Phil Schiller, Apple’s senior vice president of Worldwide Marketing. “Apple and Microsoft have worked together to bring great Office productivity to Mac users from the very beginning. Now, with Office 365 on the Mac App Store, it's easier than ever to get the latest and best version of Office 365 for Mac, iPad and iPhone.”&lt;/p&gt;
</description>
<pubDate>Thu, 24 Jan 2019 19:33:57 +0000</pubDate>
<dc:creator>markwhiting</dc:creator>
<og:type>article</og:type>
<og:title>The Mac App Store welcomes Office 365</og:title>
<og:description>Office 365 is now available for download from the Mac App Store.</og:description>
<og:url>https://www.apple.com/newsroom/2019/01/the-mac-app-store-welcomes-office-365/</og:url>
<og:image>https://www.apple.com/newsroom/images/product/apps/standard/Office-365-now-available-on-mac-app-store-01242019_LP_hero.jpg.og.jpg?201901250030</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.apple.com/newsroom/2019/01/the-mac-app-store-welcomes-office-365/</dc:identifier>
</item>
<item>
<title>Right to Repair is already hurling into action in 2019</title>
<link>https://ifixit.org/blog/13003/right-to-repair-2019</link>
<guid isPermaLink="true" >https://ifixit.org/blog/13003/right-to-repair-2019</guid>
<description>&lt;div class=&quot;copy clearfix&quot; readability=&quot;63.930384336476&quot;&gt;
&lt;p&gt;&lt;span&gt;Just three weeks into the new year, Right to Repair laws are being proposed across the country. These laws would restore our ability to fix the things we own by making parts, manuals, and diagnostic software available to consumers and independent repair shops. The fight is being waged coast-to-coast, with small mom-and-pop shops up against some of the most&lt;/span&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/a3yadk/apple-sued-an-independent-iphone-repair-shop-owner-and-lost&quot;&gt;&lt;span&gt;profitable corporations&lt;/span&gt;&lt;/a&gt; &lt;span&gt;in the history of the world.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Over the last few years, the rag-tag Right to Repair coalition has scored a number of victories: legalizing&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/6550/senate-takes-major-step-to-legalize-cell-phone-unlocking/&quot;&gt;&lt;span&gt;cell phone unlocking&lt;/span&gt;&lt;/a&gt; &lt;span&gt;in Congress, getting the FTC to rule “&lt;/span&gt;&lt;a href=&quot;https://ifixit.org/blog/10016/warranty-void-if-removed-stickers/&quot;&gt;&lt;span&gt;warranty void if removed&lt;/span&gt;&lt;/a&gt;&lt;span&gt;” stickers null and void, and convincing the US Copyright office to grant a number of&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/11951/1201-copyright-final-rule/&quot;&gt;&lt;span&gt;repair exemptions&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to federal copyright law. And in 2018 alone, Right to Repair made groundbreaking headway on the state level: 19 states introduced Right to Repair legislation—a big uptick from 12 repair-friendly states in 2017.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here’s a list of the 2019 battlegrounds so far:&lt;/span&gt; &lt;a href=&quot;https://www.capitol.hawaii.gov/measure_indiv.aspx?billtype=SB&amp;amp;billnumber=425&amp;amp;year=2019&quot;&gt;&lt;span&gt;Hawaii&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://iga.in.gov/legislative/2019/bills/house/1413&quot;&gt;&lt;span&gt;Indiana&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://malegislature.gov/Bills/191/SD1818&quot;&gt;&lt;span&gt;Massachusetts&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.revisor.mn.gov/bills/bill.php?b=Senate&amp;amp;f=SF0064&amp;amp;ssn=0&amp;amp;y=2019&quot;&gt;&lt;span&gt;Minnesota&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://laws.leg.mt.gov/legprd/LAW0210w$BSIV.ActionQuery?P_BILL_DFT_NO5=LC0512&amp;amp;Z_ACTION=Find&amp;amp;P_SESS=20191&quot;&gt;&lt;span&gt;Montana&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.leg.state.nv.us/App/NELIS/REL/80th2019/HomeBdr/GetBdrsForNavSubPanel?startNumber=1&amp;amp;endNumber=9999&amp;amp;docTypeId=2&amp;amp;orderByNumber=True&quot;&gt;&lt;span&gt;Nevada&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.gencourt.state.nh.us/lsr_search/LSR_Results.aspx&quot;&gt;&lt;span&gt;New Hampshire&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.njleg.state.nj.us/bills/BillView.asp?BillNumber=S1638&quot;&gt;&lt;span&gt;New Jersey&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.nysenate.gov/legislation/bills/2019/s710&quot;&gt;&lt;span&gt;New York&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://www.legis.nd.gov/assembly/66-2019/bill-index/bi1305.html&quot;&gt;&lt;span&gt;North Dakota&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://olis.leg.state.or.us/liz/2019R1/Measures/Overview/HB2688&quot;&gt;&lt;span&gt;Oregon&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://lis.virginia.gov/cgi-bin/legp604.exe?191+sum+HB1754&quot;&gt;&lt;span&gt;Virginia&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://app.leg.wa.gov/billsummary?BillNumber=1342&amp;amp;Year=2019&amp;amp;initiative=&quot;&gt;&lt;span&gt;Washington&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;http://www.wvlegislature.gov/Bill_Status/Bills_history.cfm?input=2115&amp;amp;year=2019&amp;amp;sessiontype=RS&amp;amp;btype=bill&quot;&gt;&lt;span&gt;West Virginia&lt;/span&gt;&lt;/a&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;Several more states are &lt;a href=&quot;https://app.multistate.us/widgets/3b7540ff030b2146c4c6fc33&quot;&gt;in the works&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pressure is mounting not just domestically but across the world as consumers are demanding more repairable products. The&lt;/span&gt; &lt;a href=&quot;https://www.bbc.com/news/science-environment-46797396&quot;&gt;&lt;span&gt;BBC recently reported&lt;/span&gt;&lt;/a&gt; &lt;span&gt;that the European Commission voted in favor of a series of proposals mandating that refrigerators, TVs, and other large home appliances be designed for non-destructive disassembly, making them easier to repair instead of replace.&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;wp-caption alignnone&quot; readability=&quot;8&quot;&gt;&lt;img class=&quot;size-medium&quot; src=&quot;https://d3nevzfk7ii3be.cloudfront.net/igi/KIQNNeKGnrIvkuVE.huge&quot; width=&quot;1600&quot; height=&quot;1069&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Right to Repair activists gathered outside the European Commission during their ecodesign votes in December.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Despite massive worldwide support,&lt;/span&gt; &lt;a href=&quot;https://motherboard.vice.com/en_us/article/nz85y7/apple-is-lobbying-against-your-right-to-repair-iphones-new-york-state-records-confirm&quot;&gt;&lt;span&gt;Apple&lt;/span&gt;&lt;/a&gt;&lt;span&gt;,&lt;/span&gt; &lt;a href=&quot;https://ifixit.org/blog/7152/john-deere-ownership/&quot;&gt;&lt;span&gt;John Deere&lt;/span&gt;&lt;/a&gt;&lt;span&gt;, and other major manufacturers continue to oppose Right to Repair legislation. They argue that publishing repair information threatens their intellectual property, and that providing consumers with ability to maintain their own products will be too dangerous. But Brian Engelhard, a repair shop owner in Portland, Oregon, countered this argument during a&lt;/span&gt; &lt;span&gt;Washington state&lt;/span&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=M5wVCwUvlMo&quot;&gt;&lt;span&gt;Technology Committee hearing&lt;/span&gt;&lt;/a&gt; &lt;span&gt;last year: “If Apple can hire an 18-year-old kid to fix your battery, an independent store can find qualified people to do it also.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We couldn’t agree more—and last year, we showed people over ten million people around the world how to replace their iPhone batteries themselves. Right to Repair legislation would allow millions more to maintain the devices they already own, giving consumers more options about where and how to repair their products.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Tell your legislators that you want Right to Repair legislation passed in 2019. Find the representative for your state at &lt;a href=&quot;https://repair.org/stand-up&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Repair.org&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;ul class=&quot;next-prev-post-nav&quot;&gt;&lt;li&gt;&lt;small&gt;Previous Post&lt;/small&gt; &lt;a href=&quot;https://ifixit.org/blog/12903/flexgate/&quot; rel=&quot;prev&quot;&gt;The design flaw behind MacBook Pro’s “stage light” effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;author-container&quot;&gt;
&lt;div class=&quot;author-content&quot; readability=&quot;26.420454545455&quot;&gt;
&lt;div class=&quot;author-image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://secure.gravatar.com/avatar/34e41d5311d1b5a98bc9e59c919d5e4d?s=100&amp;amp;d=blank&amp;amp;r=pg&quot; srcset=&quot;https://secure.gravatar.com/avatar/34e41d5311d1b5a98bc9e59c919d5e4d?s=200&amp;amp;d=blank&amp;amp;r=pg 2x&quot; class=&quot;avatar avatar-100 photo&quot; height=&quot;100&quot; width=&quot;100&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;author-body&quot; readability=&quot;27.272727272727&quot;&gt;
&lt;h3 class=&quot;author-name&quot;&gt;&lt;a href=&quot;https://ifixit.org/blog/author/kaykay/&quot; title=&quot;Posts by Kay Kay Clapp&quot; rel=&quot;author&quot;&gt;Kay Kay Clapp&lt;/a&gt;&lt;/h3&gt;
&lt;p class=&quot;author-bio&quot;&gt;Director of Communications at iFixit. Sometimes I tweet here: @kaykayclapp&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

</description>
<pubDate>Thu, 24 Jan 2019 19:02:11 +0000</pubDate>
<dc:creator>ahyattdev</dc:creator>
<og:title>Right to Repair is already hurtling into action in 2019</og:title>
<og:description></og:description>
<og:url>https://ifixit.org/blog/13003/right-to-repair-2019/</og:url>
<og:image>https://d3nevzfk7ii3be.cloudfront.net/igi/KIQNNeKGnrIvkuVE.huge</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ifixit.org/blog/13003/right-to-repair-2019/</dc:identifier>
</item>
</channel>
</rss>