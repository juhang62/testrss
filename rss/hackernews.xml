<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Atlassian tells employees they can work from home forever</title>
<link>https://www.cnbc.com/2020/08/07/atlassian-tells-employees-they-can-work-from-home-indefinitely.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2020/08/07/atlassian-tells-employees-they-can-work-from-home-indefinitely.html</guid>
<description>&lt;div class=&quot;InlineImage-imageEmbed hasBkg&quot; id=&quot;ArticleBody-InlineImage-106653432&quot; data-test=&quot;InlineImage&quot;&gt;
&lt;div class=&quot;InlineImage-wrapper&quot; readability=&quot;7&quot;&gt;

&lt;div readability=&quot;9&quot;&gt;
&lt;p&gt;Atlassian co-founders and co-CEOs Mike Cannon-Brookes, left, and Scott Farquhar.&lt;/p&gt;
&lt;p&gt;Atlassian&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;group&quot; readability=&quot;32.124343257443&quot;&gt;
&lt;p&gt;Software company &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=TEAM&quot;&gt;Atlassian&lt;/a&gt; isn't getting rid of its offices. It's just telling employees they don't have to return to them.&lt;/p&gt;
&lt;p&gt;It's a bold choice, even among technology companies that can operate virtually as the coronavirus pandemic rolls on. &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=FB&quot;&gt;Facebook&lt;/a&gt; and &lt;a href=&quot;https://www.cnbc.com/quotes/?symbol=GOOGL&quot;&gt;Google&lt;/a&gt; have been less drastic. &lt;a href=&quot;https://www.cnbc.com/2020/08/06/facebook-will-allow-employees-to-work-remotely-until-july-2021.html&quot;&gt;Both told workers&lt;/a&gt; they would be able to keep working from home through the summer of 2021. &lt;/p&gt;

&lt;p&gt;Besides freeing up current employees, the new approach could help with hiring outside major areas where the company would ordinarily have to pay generously while competing with other major companies.&lt;/p&gt;
&lt;p&gt;&quot;We will seek out amazing, diverse talent unbounded by the physical footprint of our offices,&quot; the company said in an internal blog post published on Wednesday. &quot;We will continue to compete for talent in the global hubs, and we will be able to create opportunities for those in places we would have previously not been able to reach.&quot;&lt;/p&gt;
&lt;p&gt;Atlassian's products help software developers and others keep track of code, projects, issues and other work. One of Atlassian's competitors, privately held GitLab, &lt;a href=&quot;https://www.cnbc.com/2020/07/18/gitlab-worked-remotely-with-over-1000-employees-before-coronavirus.html&quot;&gt;has never had an office&lt;/a&gt; despite having grown past 1,000 people.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;group&quot; readability=&quot;33.107419712071&quot;&gt;
&lt;p&gt;Atlassian won't be closing its offices, though. &lt;/p&gt;
&lt;p&gt;All of its locations, including its headquarters in Sydney, Australia, as well as locations in San Francisco, Amsterdam, India, Japan, the Philippines and Turkey, will remain open, and the company expects to adjust them so they can be used efficiently. Employees will be welcome to return to the offices should they want to use them.&lt;/p&gt;

&lt;p&gt;Some details of Atlassian's plan have yet to be finalized. The company hasn't decided how compensation might change for employees who relocate to other regions, nor has it figured out the right number of people to work in each time zone to ensure a sufficient amount of overlap, the person said.&lt;/p&gt;
&lt;p&gt;Atlassian will measure outcomes, rather than the number of hours each person spends working, according to the blog post.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WATCH:&lt;/strong&gt; &lt;a href=&quot;https://www.cnbc.com/video/2020/08/03/atlassian-co-ceo-talks-q4-earnings-results-growing-customer-base.html&quot;&gt;Atlassian co-CEO talks Q4 earnings results, says it was the 'highest-ever quarter' for new adds&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;


</description>
<pubDate>Fri, 07 Aug 2020 19:20:39 +0000</pubDate>
<dc:creator>el_duderino</dc:creator>
<og:type>article</og:type>
<og:title>Atlassian tells employees they can work from home forever</og:title>
<og:description>Atlassian is going further than Facebook and Google in giving its employees flexibility. The shift away from offices could also help with hiring.</og:description>
<og:url>https://www.cnbc.com/2020/08/07/atlassian-tells-employees-they-can-work-from-home-indefinitely.html</og:url>
<og:image>https://image.cnbcfm.com/api/v1/image/106653432-1596775745422-Handout_atlassian_founders.jpg?v=1596775880</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2020/08/07/atlassian-tells-employees-they-can-work-from-home-indefinitely.html</dc:identifier>
</item>
<item>
<title>Government’s PACER Fees Are Too High, Federal Circuit Says</title>
<link>https://news.bloomberglaw.com/white-collar-and-criminal-law/federal-circuit-affirms-limits-on-how-government-uses-pacer-fees</link>
<guid isPermaLink="true" >https://news.bloomberglaw.com/white-collar-and-criminal-law/federal-circuit-affirms-limits-on-how-government-uses-pacer-fees</guid>
<description>&lt;p&gt;The U.S. government charges too much for access to an electronic database of federal court records, the Federal Circuit ruled in a decision curbing a revenue stream the court system uses to help fund other programs.&lt;/p&gt;
&lt;p&gt;The U.S. Court of Appeals for the Federal Circuit affirmed a lower court’s decision that the government was not authorized under federal law to spend $192 million in Public Access to Court Records system fees on court technology projects.&lt;/p&gt;
&lt;p&gt;The lower court “got it just right” when it limited the government’s use of PACER revenues to the costs of operating the system, the court said in a precedential &lt;a href=&quot;https://www.bloomberglaw.com/public/document/NVLSPvUSDocketNo1901081FedCirOct162018CourtDocket/1?doc_id=X24QQ92596R872OKH5GAGI4TJ2I&quot;&gt;opinion&lt;/a&gt; Thursday.&lt;/p&gt;
&lt;p&gt;“We agree with plaintiffs and amici that the First Amendment stakes here are high,” the court said. But it said it doesn’t foresee the lower court’s interpretation “as resulting in a level of user fees that will significantly impede public access to courts.”&lt;/p&gt;
&lt;p&gt;The ruling is a win for public access to court information, as PACER fees will go down if the ruling withstands a possible government appeal. But access still won’t be free, despite calls for the government to stop charging for it. The Federal Circuit said it was up to Congress to decide whether to require free access.&lt;/p&gt;
&lt;p&gt;Challengers said PACER fees were too high, while the government said the middle ground reached by the lower court made the fees too low.&lt;/p&gt;
&lt;p&gt;Fees for downloading a copy of a filing run 10 cents per page, up to $3 per document. The Administrative Office of the U.S. Courts collected more than $145 million in fees in 2014 alone, according to the complaint in the case. Under a 2020 change to the fee waiver rules, about 75% of users pay nothing each quarter.&lt;/p&gt;
&lt;p&gt;The Justice Department didn’t immediately respond to a request for comment on whether it would appeal the decision.&lt;/p&gt;
&lt;p&gt;Some say further restrictions are necessary.&lt;/p&gt;
&lt;p&gt;“I’m concerned that the federal courts will keep saying it costs $100 million annually to run an electronic case filing and document management website, which is laughable on its face,” Gabe Roth, executive director of watchdog Fix the Court, said in an email.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Middle Ground&lt;/h2&gt;
&lt;p&gt;Three nonprofits representing a certified class of 1.4 million users argued that fees the Administrative Office of the U.S. Courts charges for the PACER system violate federal law because they’re higher than the marginal cost of providing documents. The government argued it’s authorized to charge fees that exceed the cost of operating PACER and use the money for other court access projects.&lt;/p&gt;
&lt;p&gt;The Federal Circuit rejected both parties’ readings of the statute authorizing PACER fees. “Plaintiffs overread the statutory text while the government underreads it,” the court said.&lt;/p&gt;
&lt;p&gt;The plaintiffs selectively combined phrases of the law, the court said, calling it an “odd way to read a statute.” But the government’s arguments “stray too far in the other direction,” it said.&lt;/p&gt;
&lt;p&gt;The Federal Circuit adopted the two limitations imposed by the lower court: PACER fees may only be used to cover expenses incurred in providing electronic access to members of the public, and to store information in a federal court docketing system.&lt;/p&gt;
&lt;p&gt;That means the government must reimburse revenues it spent on other projects, including increasing access to state court documents, providing federal case information to local law enforcement, and improving courtroom technology, the court said.&lt;/p&gt;
&lt;p&gt;“The necessarily implied remedy” for violating the fee-authorizing statute “through over-charging is that the government must return the excess fees collected,” the court said.&lt;/p&gt;
&lt;p&gt;The lower court didn’t sufficiently scrutinize whether the government may spend PACER funds on maintaining the federal electronic case filing system, the Federal Circuit said, ordering the lower court to consider the question on remand.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Ready for Restrictions&lt;/h2&gt;
&lt;p&gt;The Administrative Office declined to comment on the decision. As of Jan. 1, the judiciary raised the user fee waiver from $15 to $30 per quarter.&lt;/p&gt;
&lt;p&gt;In its February &lt;a href=&quot;https://nam02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.uscourts.gov%2Fsites%2Fdefault%2Ffiles%2Fappendix_2_electronic_public_access_program_0.pdf&amp;amp;data=02%7C01%7Cpcooper%40bloombergindustry.com%7C3e0ab48d13394c95865408d83a2f64b0%7C97be21fdc6014b169920f5accc69da65%7C0%7C0%7C637323322508310664&amp;amp;sdata=EyajTQo5wH8bnDySv81SCdbndv%2B0VB8gKpgcjCxTeLk%3D&amp;amp;reserved=0&quot; title=&quot;Original URL: https://www.uscourts.gov/sites/default/files/appendix_2_electronic_public_access_program_0.pdf. Click or tap if you trust this link.&quot;&gt;budget request&lt;/a&gt; to Congress, the judiciary said it anticipated PACER revenue would be about $142 million in fiscal years 2020 and 2021.&lt;/p&gt;
&lt;p&gt;The judiciary said in its request that it accounted for restrictions on how PACER revenue could be spent while the appeal was pending. It said it has covered the expenses for the last few years with appropriations.&lt;/p&gt;
&lt;p&gt;But the constraints will create new challenges if the judiciary doesn’t receive enough funds from Congress in coming years, the judiciary said in its request. If Congress doesn’t provide the appropriations requested, there could be cuts to salaries and expenses in areas like probation and pretrial services offices, or clerks offices, within the bankruptcy, district, and circuit courts, it said.&lt;/p&gt;&lt;p&gt;Although PACER funds have been used for past modernization projects like putting cameras in courtrooms, the decision is likely to have little effect on technology efforts going forward, said Thomas I. Vanaskie, a former U.S. district and appellate judge who chaired the Judicial Conference’s Information Technology Committee.&lt;/p&gt;
&lt;p&gt;Judge Todd M. Hughes wrote the opinion, joined by Judges Alan D. Lourie and Raymond C. Clevenger III.&lt;/p&gt;
&lt;p&gt;Deepak Gupta of Gupta Wessler PLLC in Washington argued for NVLSP. Justice Department attorney Alisa Beth Klein argued for the government.&lt;/p&gt;
&lt;p&gt;Tyler Mills, a team leader in Bloomberg Law’s Litigation Content group, serves on an advisory panel that provides advice and feedback to the Administrative Office of the U.S. Courts on electronic public access services provided by the federal judiciary, including PACER. Bloomberg Law’s Litigation Content group is separate from the news division.&lt;/p&gt;
&lt;p&gt;The case is &lt;a href=&quot;https://www.bloomberglaw.com/public/document/NVLSPvUSDocketNo1901081FedCirOct162018CourtDocket/1?doc_id=X24QQ92596R872OKH5GAGI4TJ2I&quot;&gt;Nat’l Veterans Legal Servs. Program v. United States&lt;/a&gt;, Fed. Cir., No. 19-1081, 8/6/20.&lt;/p&gt;
</description>
<pubDate>Fri, 07 Aug 2020 18:44:25 +0000</pubDate>
<dc:creator>elliekelly</dc:creator>
<og:title>Government’s PACER Fees Are Too High, Federal Circuit Says (2)</og:title>
<og:type>article</og:type>
<og:description>The U.S. government charges too much for access to an electronic database of federal court records, the Federal Circuit ruled in a decision curbing a revenue stream the court system uses to help fund other programs.</og:description>
<og:url>https://news.bloomberglaw.com/ip-law/federal-circuit-affirms-limits-on-how-government-uses-pacer-fees</og:url>
<og:image>https://db0ip7zd23b50.cloudfront.net/dims4/default/d926189/2147483647/crop/4986x1916%2B11%2B951/resize/960x369%3E/quality/90/?url=http%3A%2F%2Fbloomberg-bna-brightspot.s3.amazonaws.com%2Fce%2F29%2F7597102445c7b290280702aafcb7%2F329088590.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.bloomberglaw.com/white-collar-and-criminal-law/federal-circuit-affirms-limits-on-how-government-uses-pacer-fees</dc:identifier>
</item>
<item>
<title>Apple says game streaming services violate App Store policies</title>
<link>https://www.businessinsider.com/apple-explains-why-xbox-game-pass-is-not-on-iphone-2020-8</link>
<guid isPermaLink="true" >https://www.businessinsider.com/apple-explains-why-xbox-game-pass-is-not-on-iphone-2020-8</guid>
<description>&lt;div id=&quot;piano-inline-content-wrapper&quot; data-piano-inline-content-wrapper=&quot;&quot; readability=&quot;126.45343571569&quot;&gt;
&lt;ul class=&quot;summary-list&quot;&gt;&lt;li&gt;&lt;strong&gt;This September, Microsoft's Xbox-based game streaming service is scheduled to launch.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The service enables users to play dozens of Xbox games via the cloud, on smartphones and tablets. Any progress made on those games will be reflected on the Xbox when you pick it up there.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Better yet: The service is paired with a large library of games that are streamable, similar to how services like Netflix have large libraries of TV shows and movies to watch.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;But when it launches, the service won't be available on Apple's iPhone and iPad — and that's due to Apple's App Store policies.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&quot;Our customers enjoy great apps and games from millions of developers, and gaming services can absolutely launch on the App Store as long as they follow the same set of guidelines applicable to all developers including submitting games individually for review and appearing in charts and search,&quot; an Apple spokesperson told Business Insider. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.businessinsider.com/&quot; data-analytics-module=&quot;summary_bullets&quot;&gt;Visit Business Insider's homepage for more stories.&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This September, Microsoft plans to launch a major coup in the video game business: The world's first game streaming service with a built-in library, Netflix-style.&lt;/p&gt;
&lt;p&gt;For $15 a month, you'll be able to stream over 100 games to smartphones and tablets — but it won't be available on Apple's ubiquitous iPhone and iPad.&lt;/p&gt;
&lt;p&gt;The reason, an Apple spokesperson said on Thursday, is because Apple isn't able to review each game that's available through Game Pass.&lt;/p&gt;
&lt;p&gt;&quot;The App Store was created to be a safe and trusted place for customers to discover and download apps, and a great business opportunity for all developers,&quot; an Apple spokesperson told Business Insider. &quot;Before they go on our store, all apps are reviewed against the same set of guidelines that are intended to protect customers and provide a fair and level playing field to developers.&quot;&lt;/p&gt;


&lt;p&gt;Because Microsoft isn't submitting each game on its streaming service to Apple's review process, the app that enables access to those games is being blocked from publishing.&lt;/p&gt;
&lt;p&gt;&quot;Our customers enjoy great apps and games from millions of developers, and gaming services can absolutely launch on the App Store as long as they follow the same set of guidelines applicable to all developers, including submitting games individually for review, and appearing in charts and search,&quot; Apple said in a statement to Business Insider. &quot;In addition to the App Store, developers can choose to reach all iPhone and iPad users over the web through Safari and other browsers on the App Store.&quot;&lt;/p&gt;
&lt;p&gt;A similar service offered by Google, named Google Stadia, has also run into roadblocks with Apple's App Store guidelines. It's available on Android phones and tablets, but not Apple devices.&lt;/p&gt;
&lt;p&gt;Given that Apple allows services like Netflix and Spotify without reviewing every piece of content, why not allow a similar service for gaming? The difference boils down to the medium, according to Apple: Games are interactive, unlike music and film, and there are consumer expectations baked into the App Store related to gaming.&lt;/p&gt;


&lt;p&gt;No in-app payment through Apple's built-in services, for instance, and no App Store rating, among a variety of other things.&lt;/p&gt;
&lt;div class=&quot;lazy-holder lazy-holder&quot;&gt;&lt;img class=&quot;lazy-image&quot; src=&quot;data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%201%201'%3E%3C/svg%3E&quot; data-content-type=&quot;image/png&quot; data-srcs=&quot;{&amp;quot;https://i.insider.com/5dcdc9863afd375431491e3f&amp;quot;:{&amp;quot;contentType&amp;quot;:&amp;quot;image/png&amp;quot;,&amp;quot;aspectRatioW&amp;quot;:2,&amp;quot;aspectRatioH&amp;quot;:1}}&quot; alt=&quot;Project xCloud&quot;/&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://i.insider.com/5dcdc9863afd375431491e3f?width=600&amp;amp;format=jpeg&amp;amp;auto=webp&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;span class=&quot;image-source-only&quot;&gt;&lt;span class=&quot;image-source headline-regular&quot; data-e2e-name=&quot;image-source&quot;&gt;Microsoft&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;Microsoft's popular subscription service, Xbox Game Pass, started with the ability to download games from a large library directly to your console and PC.&lt;/p&gt;
&lt;p&gt;This September, Microsoft is combining Xbox Game Pass with its &quot;Project xCloud&quot; streaming service — &lt;a href=&quot;https://www.businessinsider.com/microsoft-ceo-satya-nadella-xbox-netflix-for-games-2019-1&quot; data-analytics-module=&quot;body_link&quot;&gt;a combination years in the making&lt;/a&gt;. Instead of just being able to download games from the Game Pass library to your console and PC, they will also be streamable to smartphones and tablets.&lt;/p&gt;
&lt;p&gt;With Xbox Game Pass &quot;Ultimate&quot; this September, Microsoft says over 100 games can be streamed directly to your smartphone or tablet for $15 per month. You can then resume those games on an Xbox console right where you left off.&lt;/p&gt;


&lt;p&gt;Moreover, every major Xbox game published by Microsoft, from &quot;Halo&quot; to &quot;Gears of War&quot; to &quot;Forza Motorsport,&quot; gets published to the service at launch, alongside a smattering of third-party games like &quot;The Witcher 3: Wild Hunt&quot; and &quot;Grand Theft Auto 5.&quot; It's the persistent library, paired with the ability to stream those games to whatever device you've got, that makes Game Pass so similar to something like Netflix. &lt;/p&gt;
&lt;p&gt;It's the next evolution of an already successful service: &lt;a href=&quot;https://www.businessinsider.com/xbox-game-streaming-service-project-xcloud-launches-this-september-2020-7&quot; data-analytics-module=&quot;body_link&quot; data-analytics-post-depth=&quot;40&quot;&gt;Xbox Game Pass has over 10 million paying subscribers right now&lt;/a&gt;. And it's a critical next step in Microsoft's plan to &lt;a href=&quot;https://www.businessinsider.com/playstation-xbox-console-wars-end-microsoft-sony-2020-1&quot; data-analytics-module=&quot;body_link&quot;&gt;end direct competition between Xbox and PlayStation for good&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But without support for Apple phones and tablets, Microsoft's ambitious plan faces a major roadblock. A statement from the company pledged to continue working toward a solution.&lt;/p&gt;
&lt;p&gt;&quot;It's our ambition to scale cloud gaming through Xbox Game Pass available on all devices,&quot; the statement said, &quot;but we have nothing further to share at this time regarding iOS.&quot;&lt;/p&gt;


&lt;p&gt;&lt;em&gt;&lt;strong&gt;Got a tip?&lt;/strong&gt; Contact Business Insider senior correspondent Ben Gilbert via email (&lt;a href=&quot;mailto:bgilbert@businessinsider.com&quot; data-analytics-module=&quot;body_link&quot; data-analytics-post-depth=&quot;100&quot;&gt;bgilbert@businessinsider.com&lt;/a&gt;),&lt;/em&gt;&lt;em&gt; or Twitter DM (&lt;a href=&quot;https://twitter.com/RealBenGilbert&quot; data-analytics-module=&quot;body_link&quot; data-analytics-post-depth=&quot;100&quot;&gt;@realbengilbert&lt;/a&gt;). We can keep sources anonymous. Use a non-work device to reach out. PR pitches by email only, please.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;div readability=&quot;12.575163398693&quot;&gt;
&lt;p class=&quot;body-italic&quot;&gt;&lt;a href=&quot;https://www.businessinsider.com/intelligence/brand-investment-esports?IR=T&amp;amp;itm_source=businessinsider&amp;amp;itm_medium=ctgr_bii&amp;amp;itm_term=ctgr_leadgen&amp;amp;itm_content=videogames&amp;amp;itm_campaign=brand-investment-esports&quot;&gt;&lt;img src=&quot;https://i.insider.com/5e39b2c85bc79c6327197ec9&quot; alt=&quot;Exclusive FREE Report: Brand Investment in eSports by Insider Intelligence&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;body-italic&quot;&gt;&lt;a href=&quot;https://www.businessinsider.com/intelligence/bi-intelligence-daily?IR=T&amp;amp;itm_source=businessinsider&amp;amp;itm_medium=ctgr_bii&amp;amp;itm_term=ctgr_subscription&amp;amp;itm_content=apple&amp;amp;itm_campaign=bi-intelligence-daily&quot;&gt;&lt;img src=&quot;https://static.businessinsider.com/image/5dc428a57eece546b8629657&quot; alt=&quot;Signup Today: Free Daily Newsletter from Business Insider Intelligence&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;body-italic&quot;&gt;&lt;a href=&quot;https://www.businessinsider.com/intelligence/30-big-tech-predictions-for-2020?IR=T&amp;amp;itm_source=businessinsider&amp;amp;itm_medium=ctgr_bii&amp;amp;itm_term=ctgr_leadgen&amp;amp;itm_content=google&amp;amp;itm_campaign=30-big-tech-predictions-for-2020&quot;&gt;&lt;img src=&quot;https://static.businessinsider.com/image/5e3895ed5bc79c3adb162707&quot; alt=&quot;Exclusive FREE Report: 30 Big Tech Predictions for 2020 by Insider Intelligence&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; Get the latest Google stock price &lt;a href=&quot;http://markets.businessinsider.com/stock/GOOG-Quote&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;body-italic&quot;&gt;Disclosure: Mathias Döpfner, CEO of Business Insider's parent company, Axel Springer, is a Netflix board member. &lt;a href=&quot;https://www.businessinsider.com/intelligence/30-big-tech-predictions-for-2020?IR=T&amp;amp;itm_source=businessinsider&amp;amp;itm_medium=ctgr_bii&amp;amp;itm_term=ctgr_leadgen&amp;amp;itm_content=netflix&amp;amp;itm_campaign=30-big-tech-predictions-for-2020&quot;&gt;&lt;img src=&quot;https://static.businessinsider.com/image/5e3895ed5bc79c3adb162707&quot; alt=&quot;Exclusive FREE Report: 30 Big Tech Predictions for 2020 by Insider Intelligence&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 07 Aug 2020 17:25:01 +0000</pubDate>
<dc:creator>oblio</dc:creator>
<og:title>When Microsoft's ambitious 'Netflix of gaming' service launches in September, it won't arrive on Apple devices – here's why</og:title>
<og:description>This September, Microsoft plans to launch Xbox Game Pass Ultimate with Netflix-style game streaming. But it won't be on iPhone or iPad.</og:description>
<og:type>article</og:type>
<og:url>https://www.businessinsider.com/apple-explains-why-xbox-game-pass-is-not-on-iphone-2020-8</og:url>
<og:image>https://i.insider.com/5eeb908f3f7370143d519b99?width=1200&amp;format=jpeg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.businessinsider.com/apple-explains-why-xbox-game-pass-is-not-on-iphone-2020-8</dc:identifier>
</item>
<item>
<title>Microsoft Fast Design</title>
<link>https://www.fast.design/docs/introduction</link>
<guid isPermaLink="true" >https://www.fast.design/docs/introduction</guid>
<description>&lt;p&gt;Welcome to the FAST documentation! We're glad you're here. We can't wait to show you around.&lt;/p&gt;
&lt;h2&gt;What is FAST?&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#what-is-fast&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;FAST is a collection of JavaScript packages centered around web standards, designed to help you efficiently tackle some of the most common challenges in website and application design and development.&lt;/p&gt;
&lt;p&gt;Have you ever needed a reusable set of UI components that you could drop into your app and have an amazing experience? &lt;em&gt;&lt;strong&gt;That's FAST.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Have you ever needed to create your own components, and share them across your company, including across groups that use different, incompatible front-end frameworks? &lt;em&gt;&lt;strong&gt;That's FAST.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Have you ever needed to implement a branded experience or a design language like Microsoft's Fluent UI or Google's Material Design? &lt;em&gt;&lt;strong&gt;That's FAST.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Have you ever wanted to improve your app's startup time, render speed, or memory consumption? &lt;em&gt;&lt;strong&gt;That's FAST.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Have you ever wanted to adopt more web standards and build your site or app on a native web foundation that's immune to the shifting sands of the modern JavaScript front-end landscape? &lt;em&gt;&lt;strong&gt;That's FAST.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let's take a look at what each of FAST's core packages gives us today.&lt;/p&gt;
&lt;h3&gt;fast-element&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#fast-element&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; alt=&quot;License: MIT&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-element&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-element.svg&quot; alt=&quot;npm version&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fast-element&lt;/code&gt; library is a lightweight means to easily building performant, memory-efficient, standards-compliant Web Components. FAST Elements work in every major browser and can be used in combination with any front-end framework or even without a framework. To get up and running with &lt;code&gt;fast-element&lt;/code&gt; see &lt;a href=&quot;https://www.fast.design/docs/fast-element/getting-started&quot;&gt;the Getting Started guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;fast-foundation&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#fast-foundation&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; alt=&quot;License: MIT&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-foundation&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-foundation.svg&quot; alt=&quot;npm version&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fast-foundation&lt;/code&gt; package is a library of Web Component classes, templates, and other utilities intended to be composed into registered Web Components by design systems (e.g. Fluent Design, Material Design, etc.). The exports of this package can generally be thought of as un-styled base components that implement semantic and accessible markup and behavior.&lt;/p&gt;
&lt;p&gt;This package does not export Web Components registered as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;custom elements&lt;/a&gt; - it exports parts and pieces intended to be &lt;em&gt;composed&lt;/em&gt; into Web Components, allowing you to implement your own design language by simply applying CSS styles and behaviors without having to write all the JavaScript that's involved in building production-quality component implementations.&lt;/p&gt;
&lt;h3&gt;fast-components&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#fast-components&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; alt=&quot;License: MIT&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-components&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-components.svg&quot; alt=&quot;npm version&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fast-components&lt;/code&gt; is a library of Web Components that &lt;em&gt;composes&lt;/em&gt; the exports of &lt;code&gt;fast-foundation&lt;/code&gt; with stylesheets aligning to the FAST design language. This composition step registers a custom element. See the &lt;a href=&quot;https://www.fast.design/docs/components/getting-started&quot;&gt;quick start&lt;/a&gt; to get started using the components.&lt;/p&gt;
&lt;h3&gt;fast-components-msft&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#fast-components-msft&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg&quot; alt=&quot;License: MIT&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-components-msft&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://badge.fury.io/js/%40microsoft%2Ffast-components-msft.svg&quot; alt=&quot;npm version&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fast-components-msft&lt;/code&gt; is a library of Web Components that &lt;em&gt;composes&lt;/em&gt; &lt;code&gt;fast-foundation&lt;/code&gt;. &lt;code&gt;fast-components-msft&lt;/code&gt; uses the same custom element names as &lt;code&gt;fast-components&lt;/code&gt;, but makes use of different stylesheets that support Microsoft's Fluent design language.&lt;/p&gt;
&lt;h3&gt;Component Explorer&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#component-explorer&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Launch our &lt;a href=&quot;https://explore.fast.design&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Component Explorer&lt;/a&gt; to experience our &lt;a href=&quot;https://www.npmjs.com/package/@microsoft/fast-components&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;FAST Components&lt;/a&gt; and development tools.&lt;/p&gt;
&lt;h2&gt;Getting started&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#getting-started&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you're looking to get started using our components right away, take a look at &lt;a href=&quot;https://www.fast.design/docs/components/getting-started&quot;&gt;the components quick start&lt;/a&gt;. You'll also want to check out &lt;a href=&quot;https://www.fast.design/docs/integrations/introduction&quot;&gt;our integrations&lt;/a&gt; if you're looking to add the components into a Webpack build or incorporate them with another front-end framework. For those interested in implementing their own design system or customizing the styles of the components, after you &lt;a href=&quot;https://www.fast.design/docs/components/getting-started&quot;&gt;have a look at the components&lt;/a&gt;, you'll want to read through &lt;a href=&quot;https://www.fast.design/docs/design/introduction&quot;&gt;our styling docs&lt;/a&gt;. Finally, if your goal is to build your own components or apps with &lt;code&gt;fast-element&lt;/code&gt;, you can learn all about that in our &lt;a href=&quot;https://www.fast.design/docs/fast-element/getting-started&quot;&gt;guide to building web components with FASTElement&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Joining the community&lt;a aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot; class=&quot;hash-link&quot; href=&quot;https://www.fast.design/docs/introduction/#joining-the-community&quot; title=&quot;Direct link to heading&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Looking to get answers to questions or engage with us in realtime? Our community is most active &lt;a href=&quot;https://discord.gg/FcSNfg4&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;on Discord&lt;/a&gt;. Submit requests and issues on &lt;a href=&quot;https://github.com/Microsoft/fast/issues/new/choose&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;GitHub&lt;/a&gt;, or join us by contributing on &lt;a href=&quot;https://github.com/Microsoft/fast/labels/community:good-first-issue&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;some good first issues via GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We look forward to building an amazing open source community with you!&lt;/p&gt;
</description>
<pubDate>Fri, 07 Aug 2020 15:55:14 +0000</pubDate>
<dc:creator>no_wizard</dc:creator>
<og:title>Introduction | FAST</og:title>
<og:description>Welcome to the FAST documentation! We're glad you're here. We can't wait to show you around.</og:description>
<og:url>https://www.fast.design/docs/introduction</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.fast.design/docs/introduction/</dc:identifier>
</item>
<item>
<title>To head off regulators, Google makes certain words taboo</title>
<link>https://themarkup.org/google-the-giant/2020/08/07/google-documents-show-taboo-words-antitrust</link>
<guid isPermaLink="true" >https://themarkup.org/google-the-giant/2020/08/07/google-documents-show-taboo-words-antitrust</guid>
<description>&lt;p&gt;As Google faces at least four major antitrust investigations on two continents, internal documents obtained by The Markup show its parent company, Alphabet, has been preparing for this moment for years, telling employees across the massive enterprise that certain language is off limits in all written communications, no matter how casual.&lt;/p&gt;
&lt;p&gt;The taboo words include “market,” “barriers to entry,” and “network effects,” which is when products such as social networks become more valuable as more people use them.&lt;/p&gt;
&lt;p&gt;“Words matter. Especially in antitrust law,” reads one document titled “&lt;a href=&quot;https://www.documentcloud.org/documents/7016657-Five-Rules-of-Thumb-for-Written-Communications.html&quot;&gt;Five Rules of Thumb for Written Communications&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;“Alphabet gets sued a lot, and we have our fair share of regulatory investigations,” reads another. “Assume every document will become public.”&lt;/p&gt;
&lt;p&gt;The internal documents appear to be part of a self-guided training session for a wide range of the company’s more than 100,000 employees, from engineers to salespeople. One document, titled “Global Competition Policy,” says it applies not only to interns and employees but also to temps, vendors, and contractors.&lt;/p&gt;
&lt;p&gt;The documents explain the basics of antitrust law and caution against loose talk that could have implications for government regulators or private lawsuits.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Words matter. Especially in antitrust law.&lt;/p&gt;
&lt;cite&gt;Alphabet internal training document&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;In one of the documents, which appear to be written by the legal team, employees are advised to choose their words carefully and use only third-party data when referencing Google’s “position in search” in sales pitches. They are further cautioned never to print or hand out their slides.&lt;/p&gt;
&lt;p&gt;“We use the term ‘User Preference for Google Search’ and never the term market share,” &lt;a href=&quot;https://www.documentcloud.org/documents/7016656-External-Communications.html&quot;&gt;that document&lt;/a&gt; says.&lt;/p&gt;
&lt;p&gt;Google Search is the company’s most profitable product and, as such, a large target for antitrust regulation. It’s &lt;a href=&quot;https://gs.statcounter.com/search-engine-market-share/all/united-states-of-america&quot;&gt;estimated&lt;/a&gt; that nine in 10 web searches in the U.S. are completed on Google.&lt;/p&gt;
&lt;p&gt;To take action against a company, antitrust regulators must establish that it has a dominant share in a market. The more broadly a market is defined, the easier it is for the company to argue that it has real competition. In the slides, employees are cautioned that defining a market is hard and best avoided.&lt;/p&gt;
&lt;p&gt;“These are completely standard competition law compliance trainings that most large companies provide to their employees,” Google spokesperson Julie Tarallo McAlister said in an email. “We instruct employees to compete fairly and build great products, rather than focus or opine on competitors. We’ve had these trainings in place for well over a decade.”&lt;/p&gt;

&lt;p&gt;One part of the presentation, subtitled “&lt;a href=&quot;https://www.documentcloud.org/documents/7016658-Communicating-Safely.html&quot;&gt;Communicating Safely&lt;/a&gt;,” advises employees on which terms are “Bad” and “Good.”&lt;/p&gt;
&lt;p&gt;Instead of “market,” employees may say “industry,” “space,” “area,” or simply cite the region, according to the presentation.&lt;/p&gt;
&lt;p&gt;Instead of “network effects,” the presentation suggests “valuable to users.”&lt;/p&gt;
&lt;p&gt;And instead of “barriers to entry,” substitute “challenges.”&lt;/p&gt;
&lt;div class=&quot;image-container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Alphabet internal training document&lt;/p&gt;
&lt;img src=&quot;https://mrkp-static-production.themarkup.org/uploads/2020/08/slides3-720x405.png&quot; alt=&quot;A recreated internal Google slide that details how employee's should communicate safely by using terms like &amp;quot;Acquire target to improve our service&amp;quot; instead of &amp;quot;Acquire target before competition&amp;quot;&quot; class=&quot;&quot;/&gt;&lt;/div&gt;
An excerpt from Alphabet internal training documents. Re-created by The Markup to protect sources.
&lt;p&gt;Alphabet is under investigation by 50 attorneys general and the Department of Justice for potentially abusing its dominance to undermine competition. Its acquisitions, along with those of other major U.S. tech giants, are being reviewed for anticompetitive effects by the Federal Trade Commission. The European Commission &lt;a href=&quot;https://ec.europa.eu/commission/presscorner/detail/en/ip_20_1446&quot;&gt;announced&lt;/a&gt; an “in-depth” investigation of Google’s acquisition of fitness tracker Fitbit and is probing possible antitrust violations regarding Google for Jobs.&lt;/p&gt;
&lt;p&gt;McAlister said Google representatives “continue to engage with ongoing investigations” and pointed to a &lt;a href=&quot;https://blog.google/around-the-globe/google-europe/update-fitbit/&quot;&gt;blog post&lt;/a&gt; where the company said its deal with Fitbit “will increase choice.”&lt;/p&gt;
&lt;p&gt;She also said the company “vigorously” denies claims by Sonos in its patent infringement suit, which alleges that Google first partnered with the company and then copied its technology. Sonos CEO Patrick Spence &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-01-17/sonos-ceo-tells-house-antitrust-panel-google-abused-its-power&quot;&gt;testified&lt;/a&gt; in a hearing before the House Judiciary Committee in January that Google uses its dominance to shut down competition. Google countersued in June, alleging that Sonos infringed on its patents. &lt;/p&gt;

&lt;p&gt;Last week, Alphabet CEO Sundar Pichai faced a grueling 61 questions from lawmakers referencing the company’s dominance in online video, advertising, search, and other areas at a &lt;a href=&quot;https://themarkup.org/2020/07/30/congressional-antitrust-tech-hearing-recap-facebook-amazon-alphabet-google-apple&quot;&gt;hearing&lt;/a&gt; before the House Judiciary antitrust subcommittee.  &lt;/p&gt;
&lt;p&gt;During the hearing, the chair of the subcommittee, Rep. David Cicilline, mentioned an &lt;a href=&quot;https://themarkup.org/google-the-giant/2020/07/28/google-search-results-prioritize-google-products-over-competitors&quot;&gt;investigation&lt;/a&gt; by The Markup that showed Google Search presented its own results and products above competitors’. He held it up as evidence that Google has turned search into a “walled garden.”&lt;/p&gt;
&lt;p&gt;According to a CSPAN transcript of the hearing, Pichai did not say the words “network effects” or “dominant” once and steered clear of defining any particular market. “Google operates in highly competitive and dynamic global markets, in which prices are free or falling, and products are constantly improving,” he said.&lt;/p&gt;

&lt;p&gt;Respected Silicon Valley antitrust lawyers Doug Melamed of Stanford University and Gary Reback of Carr &amp;amp; Ferrell both said it’s not unusual for a giant company such as Alphabet to coach employees to avoid talking about dominance.&lt;/p&gt;
&lt;p&gt;“It’s not just trying to hide the truth, it’s really trying to avoid the use of inflammatory language,” said Melamed, a former acting assistant attorney general in charge of the antitrust division at the U.S. Department of Justice. “The use of the word ‘market’ could be very innocent, but it could be misleading and provocative to an antitrust enforcer. Antitrust enforcers really get exercised when they think someone dominates a market.”&lt;/p&gt;
&lt;p&gt;Alphabet’s emphasis in training documents on avoiding the term “network effects” is a new one, both lawyers said, and goes to one of the main issues in tech antitrust.&lt;/p&gt;
&lt;p&gt;It was one of the concepts the U.S. government and attorneys general from 20 states and the District of Columbia used to prosecute Microsoft for antitrust violations in 1998. They claimed the company broke the law, in part by using its dominance in the PC market to restrict competition by bundling Internet Explorer and other Microsoft products with the Windows operating system. “The barriers that exist to the entry of new competitors or the expansion of smaller existing competitors, including network effects, mean that dominance once achieved cannot readily be reversed,” the DOJ &lt;a href=&quot;https://www.justice.gov/atr/complaint-us-v-microsoft-corp&quot;&gt;wrote in its complaint.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“Once you admit strong network effects,” said Reback, who has represented competitors in antitrust cases against Google, “then it becomes easier for someone like me to say, ‘You’ve gotten this dominant share through exploitation of network effects, it’s clear there are high barriers to entry, we’re going to need to break you up or do something strong to stop you from abusing your position.’ ”&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;We are not out to ‘crush,’ ‘kill,’ ‘hurt,’ ‘block,’ or do anything else that might be perceived as evil or unfair.&lt;/p&gt;
&lt;cite&gt;Alphabet training slide&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Reback represented Netscape early on in the Microsoft case and was the co-author of a &lt;a href=&quot;https://www.nytimes.com/2000/06/12/business/us-pursuit-of-microsoft-rare-synergy-with-company-s-rivals.html&quot;&gt;222-page white paper&lt;/a&gt; about Microsoft that argued that network effects made tech companies gain market share faster than in other industries, and therefore antitrust regulators must be more aggressive.&lt;/p&gt;
&lt;p&gt;Alphabet’s training documents lay out the basic concepts of antitrust law: “Competition laws, aka antitrust laws, are those that govern the conduct of businesses in order to protect fair competition, and, as a result, protect consumers.”&lt;/p&gt;

&lt;p&gt;The slides also remind employees to keep the focus on how whatever they’re talking about benefits the public, which is a strong defense in antitrust matters: “Pro-tip: when drafting slides, always include at least one that shows how your business decisions will benefit consumers, partners, etc.”&lt;/p&gt;
&lt;p&gt;“We are not out to ‘crush,’ ‘kill,’ ‘hurt,’ ‘block,’ or do anything else that might be perceived as evil or unfair,” reads one portion. “Microsoft famously got into trouble when one of their employees threatened to ‘cut off Netscape’s air supply.’ ”&lt;/p&gt;
&lt;p&gt;Employees are given “Five Rules of Thumb for Written Communications,” according to the documents:&lt;/p&gt;
&lt;ul class=&quot;list&quot;&gt;&lt;li class=&quot;list__item&quot;&gt;We’re out to help users, not hurt competitors.&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;Our users should always be free to switch, and we don’t lock anyone in.&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;We’ve got lots of competitors, so don’t assume we control or dominate any market.&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;Don’t try and define a market or estimate our market share.&lt;/li&gt;
&lt;li class=&quot;list__item&quot;&gt;Assume every document you generate, including email, will be seen by regulators.&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;image-container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Alphabet internal training document&lt;/p&gt;
&lt;img src=&quot;https://mrkp-static-production.themarkup.org/uploads/2020/08/slides2-720x405.png&quot; alt=&quot;A recreated internal Google slide that details how employee's should communicate safely by using terms like &amp;quot;Challenges&amp;quot; instead of &amp;quot;Barriers to entry&amp;quot;&quot; class=&quot;&quot;/&gt;&lt;/div&gt;
An excerpt from Alphabet internal training documents. Re-created by The Markup to protect sources.
&lt;p&gt;“If they can get their employees to comply with those guidelines, good for them,” said Melamed, the former DOJ antitrust official, who was one of the prosecutors on the Microsoft case. “But most companies’ documents are still filled with all sorts of stuff like this.”&lt;/p&gt;
&lt;p&gt;European regulators have already used internal emails against Alphabet. In an earlier investigation, they found emails that indicated that its shopping product’s web traffic doubled in 2008, mostly because it was featured in search listings. The European Commission concluded that the company had abused its dominance and in 2017 &lt;a href=&quot;https://ec.europa.eu/commission/presscorner/detail/en/MEMO_17_1785&quot;&gt;fined the company&lt;/a&gt; €2.42 billion, a record at the time. “Those emails were quoted selectively and out of context,” McAlister said.&lt;/p&gt;
&lt;p&gt;Reback, the antitrust lawyer, said there is a limit to how internal communications can be used, especially when they’re written by lower-level employees. In general, anticompetitive intent is not part of the legal argument, he said. Rather, lawyers for the plaintiff or the government must establish an anticompetitive effect.&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;I didn’t mean to imply that we’d be buying them to prevent them from competing with us in any way.…&lt;/p&gt;
&lt;cite&gt;Facebook CEO Mark Zuckerberg&lt;/cite&gt;&lt;/blockquote&gt;
&lt;p&gt;Internal communications from higher-level executives that show apparent anticompetitive intent may have more weight—or at least, generate more publicity. The House Judiciary antitrust subcommittee, which held last week’s hearing, collected text messages in which a Facebook executive suggested that CEO Mark Zuckerberg would go into “destroy mode” if Instagram turned down an acquisition offer.&lt;/p&gt;
&lt;p&gt;The committee also released an email Zuckerberg wrote musing that “there are network effects around social products” and buying companies like Instagram “will give us a year or more to integrate their dynamics before anyone can get close to their scale again.” He sent another email less than an hour later &lt;a href=&quot;https://www.theverge.com/2020/7/29/21345723/facebook-instagram-documents-emails-mark-zuckerberg-kevin-systrom-hearing&quot;&gt;clarifying&lt;/a&gt; that, “I didn’t mean to imply that we’d be buying them to prevent them from competing with us in any way.… I’m mostly excited about what the companies could do together if we worked to build what they’ve invented into more people’s experiences.”&lt;/p&gt;
&lt;p&gt;During its 2012 antitrust investigation into Google, the FTC also collected emails, some of which Alphabet’s legal team would have frowned at.&lt;/p&gt;
&lt;p&gt;In one, Google’s top economist, Hal Varian, celebrated that market research firm Comscore had undervalued Google’s market share.&lt;/p&gt;
&lt;p&gt;“From an antitrust perspective,” Varian wrote, “I’m happy to see them underestimate our share.” The FTC ultimately overrode staff recommendations to take legal action against Google and closed the investigation without filing charges.&lt;/p&gt;
</description>
<pubDate>Fri, 07 Aug 2020 14:42:29 +0000</pubDate>
<dc:creator>caution</dc:creator>
<og:type>article</og:type>
<og:title>To Head Off Regulators, Google Makes Certain Words Taboo – The Markup</og:title>
<og:description>The Markup obtained internal documents that coach new employees to avoid creating “very real legal risks” in using words like “market” and “network effects”</og:description>
<og:image>https://mrkp-static-production.themarkup.org/uploads/2020/08/workplace-sign-2-1200x628.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://themarkup.org/google-the-giant/2020/08/07/google-documents-show-taboo-words-antitrust</dc:identifier>
</item>
<item>
<title>Declining eyesight improved by looking at deep red light</title>
<link>https://www.eurekalert.org/pub_releases/2020-06/ucl-dei062620.php</link>
<guid isPermaLink="true" >https://www.eurekalert.org/pub_releases/2020-06/ucl-dei062620.php</guid>
<description>&lt;div readability=&quot;140.63428436689&quot;&gt; 
&lt;div class=&quot;img-wrapper&quot;&gt;&lt;img src=&quot;https://media.eurekalert.org/multimedia_prod/pub/web/235928_web.jpg&quot; alt=&quot;IMAGE&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;IMAGE: &lt;/strong&gt;This is an example of hand held LED torch used in study. &lt;a href=&quot;https://www.eurekalert.org/multimedia/pub/235928.php&quot;&gt;view &lt;span class=&quot;no-break-text&quot;&gt;more &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;credit&quot;&gt;Credit: UCL&lt;/p&gt;
&lt;p&gt;Staring at a deep red light for three minutes a day can significantly improve declining eyesight, finds a new UCL-led study, the first of its kind in humans.&lt;/p&gt;
&lt;p&gt;Scientists believe the discovery, published in the &lt;em&gt;Journals of Gerontology&lt;/em&gt;, could signal the dawn of new affordable home-based eye therapies, helping the millions of people globally with naturally declining vision.&lt;/p&gt;
&lt;p&gt;In the UK there are currently around 12 million people aged over 65: in 50 years this will increase to around 20 million and all will have some degree of visual decline because of retinal ageing.&lt;/p&gt;
&lt;p&gt;Lead author, Professor Glen Jeffery (UCL Institute of Ophthalmology) said: &quot;As you age your visual system declines significantly, particularly once over 40.&lt;/p&gt;
&lt;p&gt;&quot;Your retinal sensitivity and your colour vision are both gradually undermined, and with an ageing population, this is an increasingly important issue.&lt;/p&gt;
&lt;p&gt;&quot;To try to stem or reverse this decline, we sought to reboot the retina's ageing cells with short bursts of longwave light.&quot;&lt;/p&gt;
&lt;p&gt;In humans around 40 years-old, cells in the eye's retina begin to age, and the pace of this ageing is caused, in part, when the cell's mitochondria, whose role is to produce energy (known as ATP) and boost cell function, also start to decline.&lt;/p&gt;
&lt;p&gt;Mitochondrial density is greatest in the retina's photoreceptor cells, which have high energy demands. As a result, the retina ages faster than other organs, with a 70% ATP reduction over life, causing a significant decline in photoreceptor function as they lack the energy to perform their normal role.&lt;/p&gt;
&lt;p&gt;Researchers built on their previous findings in mice, bumblebees and fruit flies, which all found significant improvements in the function of the retina's photoreceptors when their eyes were exposed to 670 nanometre (long wavelength) deep red light.&lt;/p&gt;
&lt;p&gt;&quot;Mitochondria have specific light absorbance characteristics influencing their performance: longer wavelengths spanning 650 to 1000nm are absorbed and improve mitochondrial performance to increase energy production,&quot; said Professor Jeffery.&lt;/p&gt;
&lt;p&gt;The retina's photoreceptor population is formed of cones, which mediate colour vision and rods, which provide peripheral vision and adapt vision in low/dim light.&lt;/p&gt;
&lt;p&gt;For the study, 24 people (12 male, 12 female), aged between 28 and 72, who had no ocular disease, were recruited. All participants' eyes were tested for the sensitivity of their rods and cones at the start of the study. Rod sensitivity was measured in dark adapted eyes (with pupils dilated) by asking participants to detect dim light signals in the dark, and cone function was tested by subjects identifying coloured letters that had very low contrast and appeared increasingly blurred, a process called colour contrast.&lt;/p&gt;
&lt;p&gt;All participants were then given a small LED torch to take home and were asked to look into* its deep red 670nm light beam for three minutes a day for two weeks. They were then re-tested for their rod and cone sensitivity&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Results&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Researchers found the 670nm light had no impact in younger individuals, but in those around 40 years and over, significant improvements were obtained.&lt;/p&gt;
&lt;p&gt;Cone colour contrast sensitivity (the ability to detect colours) improved by up to 20% in some people aged around 40 and over. Improvements were more significant in the blue part of the colour spectrum that is more vulnerable in ageing.&lt;/p&gt;
&lt;p&gt;Rod sensitivity (the ability to see in low light) also improved significantly in those aged around 40 and over, though less than colour contrast.&lt;/p&gt;
&lt;p&gt;Professor Jeffery said: &quot;Our study shows that it is possible to significantly improve vision that has declined in aged individuals using simple brief exposures to light wavelengths that recharge the energy system that has declined in the retina cells, rather like re-charging a battery.&lt;/p&gt;
&lt;p&gt;&quot;The technology is simple and very safe, using a deep red light of a specific wavelength, that is absorbed by mitochondria in the retina that supply energy for cellular function.&lt;/p&gt;
&lt;p&gt;&quot;Our devices cost about £12 to make, so the technology is highly accessible to members of the public.&quot;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;###&lt;/p&gt;
&lt;p&gt;This research was funded by the Biotechnology and Biological Sciences Research Council.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;34&quot;&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; AAAS and EurekAlert! are not responsible for the accuracy of news releases posted to EurekAlert! by contributing institutions or for the use of any information through the EurekAlert system.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 07 Aug 2020 10:58:02 +0000</pubDate>
<dc:creator>omarchowdhury</dc:creator>
<og:title>Declining eyesight improved by looking at deep red light</og:title>
<og:description>Staring at a deep red light for three minutes a day can significantly improve declining eyesight, finds a new UCL-led study, the first of its kind in humans.</og:description>
<og:url>https://www.eurekalert.org/pub_releases/2020-06/ucl-dei062620.php</og:url>
<og:image>https://www.eurekalert.org/multimedia/pub/web/235928_web.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.eurekalert.org/pub_releases/2020-06/ucl-dei062620.php</dc:identifier>
</item>
<item>
<title>Mac keyboard shortcuts</title>
<link>https://support.apple.com/en-us/HT201236</link>
<guid isPermaLink="true" >https://support.apple.com/en-us/HT201236</guid>
<description>&lt;div&gt;
&lt;div&gt;
&lt;p&gt;To use a keyboard shortcut, press and hold one or more modifier keys and then press the last key of the shortcut. For example, to use Command-C (copy), press and hold the Command key, then the C key, then release both keys. Mac menus and keyboards often use &lt;a href=&quot;https://support.apple.com/guide/mac-help/what-are-those-symbols-shown-in-menus-cpmh0011&quot;&gt;symbols for certain keys&lt;/a&gt;, including modifier keys:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;grid3col&quot;&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;Command (or Cmd) ⌘&lt;/li&gt;
&lt;li&gt;Shift ⇧&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;grid3col&quot;&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;Option (or Alt) ⌥&lt;/li&gt;
&lt;li&gt;Control (or Ctrl) ⌃&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;grid3col&quot;&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;Caps Lock ⇪&lt;/li&gt;
&lt;li&gt;Fn&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;br/&gt;&lt;span class=&quot;note&quot;&gt;On keyboards made for Windows PCs, use the Alt key instead of Option, and the Windows logo key instead of Command.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Some keys on some Apple keyboards have special symbols and functions, such as for display brightness &lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/il/keyboard-icon-increase-display-brightness.png&quot; width=&quot;18&quot;/&gt;, keyboard brightness &lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/il/keyboard-icon-increase-keyboard-brightness.png&quot; width=&quot;23&quot;/&gt;, Mission Control, and more. If these functions aren't available on your keyboard, you might be able to reproduce some of them by &lt;a href=&quot;https://support.apple.com/guide/mac-help/create-keyboard-shortcuts-for-apps-mchlp2271&quot;&gt;creating your own keyboard shortcuts&lt;/a&gt;. To use these keys as F1, F2, F3, or other standard function keys, combine them with the Fn key.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;copy&quot;&gt;Cut, copy, paste, and other common shortcuts&lt;/h2&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Command-X&lt;/strong&gt;: Cut the selected item and copy it to the Clipboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-C&lt;/strong&gt;: Copy the selected item to the Clipboard. This also works for files in the Finder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-V&lt;/strong&gt;: Paste the contents of the Clipboard into the current document or app. This also works for files in the Finder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Z&lt;/strong&gt;: Undo the previous command. You can then press Shift-Command-Z to Redo, reversing the undo command. In some apps, you can undo and redo multiple commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-A&lt;/strong&gt;: Select All items.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-F&lt;/strong&gt;: Find items in a document or open a Find window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-G&lt;/strong&gt;: Find Again: Find the next occurrence of the item previously found. To find the previous occurrence, press Shift-Command-G.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-H&lt;/strong&gt;: Hide the windows of the front app. To view the front app but hide all other apps, press Option-Command-H.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-M&lt;/strong&gt;: Minimize the front window to the Dock. To minimize all windows of the front app, press Option-Command-M.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-O:&lt;/strong&gt; Open the selected item, or open a dialog to select a file to open.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-P&lt;/strong&gt;: Print the current document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-S&lt;/strong&gt;: Save the current document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-T&lt;/strong&gt;: Open a new tab.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-W&lt;/strong&gt;: Close the front window. To close all windows of the app, press Option-Command-W.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-Esc&lt;/strong&gt;: &lt;a href=&quot;https://support.apple.com/HT201276&quot;&gt;Force quit&lt;/a&gt; an app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Space bar&lt;/strong&gt;: Show or hide the &lt;a href=&quot;https://support.apple.com/kb/HT201744&quot;&gt;Spotlight&lt;/a&gt; search field. To perform a Spotlight search from a Finder window, press Command–Option–Space bar. (If you &lt;a href=&quot;https://support.apple.com/guide/mac-help/type-in-another-language-with-input-sources-mchlp1406&quot;&gt;use multiple input sources&lt;/a&gt; to type in different languages, these shortcuts change input sources instead of showing Spotlight. Learn how to &lt;a href=&quot;https://support.apple.com/guide/mac-help/change-a-conflicting-keyboard-shortcut-mh35591&quot;&gt;change a conflicting keyboard shortcut&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control–Command–Space bar&lt;/strong&gt;: Show the Character Viewer, from which you can choose &lt;a href=&quot;https://support.apple.com/kb/HT201586&quot;&gt;emoji and other symbols&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-Command-F&lt;/strong&gt;: Use the app in full screen, if supported by the app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Space bar&lt;/strong&gt;: Use &lt;a href=&quot;https://support.apple.com/guide/mac-help/quick-look-files-and-folders-mh14119&quot;&gt;Quick Look&lt;/a&gt; to preview the selected item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Tab&lt;/strong&gt;: Switch to the next most recently used app among your open apps. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-5&lt;/strong&gt;: In &lt;a href=&quot;https://support.apple.com/kb/HT201260&quot;&gt;macOS Mojave or later&lt;/a&gt;, take a screenshot or make a screen recording. Or use Shift-Command-3 or Shift-Command-4 for screenshots. &lt;a href=&quot;https://support.apple.com/kb/HT201361&quot;&gt;Learn more about screenshots&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-N:&lt;/strong&gt; Create a new folder in the Finder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Comma (,)&lt;/strong&gt;: Open preferences for the front app.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;sleep&quot;&gt;Sleep, log out, and shut down shortcuts&lt;/h2&gt;
&lt;div&gt;
&lt;p&gt;You might need to press and hold some of these shortcuts for slightly longer than other shortcuts. This helps you to avoid using them unintentionally.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;note&quot;&gt;* Does not apply to the &lt;a href=&quot;https://support.apple.com/kb/HT207054&quot;&gt;Touch ID sensor&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;finder&quot;&gt;Finder and system shortcuts&lt;/h2&gt;
&lt;div&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Command-D&lt;/strong&gt;: Duplicate the selected files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-E&lt;/strong&gt;: Eject the selected disk or volume.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-F&lt;/strong&gt;: Start a Spotlight search in the Finder window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-I&lt;/strong&gt;: Show the Get Info window for a selected file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-R&lt;/strong&gt;: (1) When an alias is selected the Finder: show the original file for the selected alias. (2) In some apps, such as Calendar or Safari, refresh or reload the page. (3) In &lt;a href=&quot;https://support.apple.com/kb/HT201541&quot;&gt;Software Update preferences&lt;/a&gt;, check for software updates again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-C&lt;/strong&gt;: Open the Computer window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-D&lt;/strong&gt;: Open the desktop folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-F&lt;/strong&gt;: Open the Recents window, showing all of the files you viewed or changed recently.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-G&lt;/strong&gt;: Open a Go to Folder window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-H&lt;/strong&gt;: Open the Home folder of the current macOS user account.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-I&lt;/strong&gt;: Open iCloud Drive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-K&lt;/strong&gt;: Open the Network window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-L&lt;/strong&gt;: Open the Downloads folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-N:&lt;/strong&gt; Create a new folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-O&lt;/strong&gt;: Open the Documents folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-P&lt;/strong&gt;: Show or hide the Preview pane in Finder windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-R&lt;/strong&gt;: Open the AirDrop window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-T&lt;/strong&gt;: Show or hide the tab bar in Finder windows. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-Shift-Command-T&lt;/strong&gt;: Add selected Finder item to the Dock (OS X Mavericks or later)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-U&lt;/strong&gt;: Open the Utilities folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-D&lt;/strong&gt;: Show or hide the Dock. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-Command-T&lt;/strong&gt;: Add the selected item to the sidebar (OS X Mavericks or later).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-P&lt;/strong&gt;: Hide or show the path bar in Finder windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-S&lt;/strong&gt;: Hide or show the Sidebar in Finder windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Slash (/)&lt;/strong&gt;: Hide or show the status bar in Finder windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-J&lt;/strong&gt;: Show View Options.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-K&lt;/strong&gt;: Open the Connect to Server window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-Command-A&lt;/strong&gt;: Make an alias of the selected item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-N&lt;/strong&gt;: Open a new Finder window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-N&lt;/strong&gt;: Create a new Smart Folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-T&lt;/strong&gt;: Show or hide the tab bar when a single tab is open in the current Finder window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-T&lt;/strong&gt;: Show or hide the toolbar when a single tab is open in the current Finder window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-V&lt;/strong&gt;: Move: Move the files in the Clipboard from their original location to the current location.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Y&lt;/strong&gt;: Use Quick Look to preview the selected files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-Y&lt;/strong&gt;: View a Quick Look slideshow of the selected files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-1&lt;/strong&gt;: View the items in the Finder window as icons.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-2&lt;/strong&gt;: View the items in a Finder window as a list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-3&lt;/strong&gt;: View the items in a Finder window in columns. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-4&lt;/strong&gt;: View the items in a Finder window in a gallery.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Left Bracket ([)&lt;/strong&gt;: Go to the previous folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Right Bracket (])&lt;/strong&gt;: Go to the next folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Up Arrow&lt;/strong&gt;: Open the folder that contains the current folder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Control–Up Arrow&lt;/strong&gt;: Open the folder that contains the current folder in a new window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Down Arrow&lt;/strong&gt;: Open the selected item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Right Arrow&lt;/strong&gt;: Open the selected folder. This works only when in list view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Left Arrow&lt;/strong&gt;: Close the selected folder. This works only when in list view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Delete&lt;/strong&gt;: Move the selected item to the Trash.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-Delete&lt;/strong&gt;: Empty the Trash.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Shift-Command-Delete&lt;/strong&gt;: Empty the Trash without confirmation dialog.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Brightness Up&lt;/strong&gt;: Turn &lt;a href=&quot;https://support.apple.com/kb/HT204592&quot;&gt;target display mode&lt;/a&gt; on or off.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Brightness Down&lt;/strong&gt;: Turn &lt;a href=&quot;https://support.apple.com/kb/HT202351#mirroring&quot;&gt;video mirroring&lt;/a&gt; on or off when your Mac is connected to more than one display.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Brightness Up&lt;/strong&gt;: Open Displays preferences. This works with either Brightness key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control–Brightness Up&lt;/strong&gt; or &lt;strong&gt;Control–Brightness Down&lt;/strong&gt;: Change the brightness of your external display, if supported by your display.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Brightness Up&lt;/strong&gt; or &lt;strong&gt;Option–Shift–Brightness Down&lt;/strong&gt;: Adjust the display brightness in smaller steps. Add the Control key to this shortcut to make the adjustment on your external display, if supported by your display.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Mission Control&lt;/strong&gt;: Open Mission Control preferences.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Mission Control&lt;/strong&gt;: Show the desktop. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control–Down Arrow&lt;/strong&gt;: Show all windows of the front app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Volume Up&lt;/strong&gt;: Open Sound preferences. This works with any of the volume keys.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Volume Up&lt;/strong&gt; or &lt;strong&gt;Option–Shift–Volume Down&lt;/strong&gt;: Adjust the sound volume in smaller steps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Keyboard Brightness Up&lt;/strong&gt;: Open Keyboard preferences. This works with either Keyboard Brightness key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Keyboard Brightness Up&lt;/strong&gt; or &lt;strong&gt;Option–Shift–Keyboard Brightness Down&lt;/strong&gt;: Adjust the keyboard brightness in smaller steps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option key while double-clicking&lt;/strong&gt;: Open the item in a separate window, then close the original window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command key while double-clicking&lt;/strong&gt;: Open a folder in a separate tab or window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command key while dragging to another volume&lt;/strong&gt;: Move the dragged item to the other volume, instead of copying it. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option key while dragging&lt;/strong&gt;: Copy the dragged item. The pointer changes while you drag the item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command while dragging&lt;/strong&gt;: Make an alias of the dragged item. The pointer changes while you drag the item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-click a disclosure triangle&lt;/strong&gt;: Open all folders within the selected folder. This works only when in list view.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-click a window title&lt;/strong&gt;: See the folders that contain the current folder.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://support.apple.com/guide/mac-help/select-items-mchlp1378&quot;&gt;Learn how to use Command or Shift to select multiple items in the Finder&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Click the Go menu in the Finder menu bar to see shortcuts for opening many commonly used folders, such as Applications, Documents, Downloads, Utilities, and iCloud Drive.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;text&quot;&gt;Document shortcuts&lt;/h2&gt;
&lt;div&gt;
&lt;p&gt;The behavior of these shortcuts may vary with the app you're using.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Command-B&lt;/strong&gt;: Boldface the selected text, or turn boldfacing on or off. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-I&lt;/strong&gt;: Italicize the selected text, or turn italics on or off.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-K&lt;/strong&gt;: Add a web link.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-U&lt;/strong&gt;: Underline the selected text, or turn underlining on or off.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-T&lt;/strong&gt;: Show or hide the Fonts window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-D&lt;/strong&gt;: Select the Desktop folder from within an Open dialog or Save dialog.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-Command-D&lt;/strong&gt;: Show or hide the definition of the selected word.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-Colon (:)&lt;/strong&gt;: Display the Spelling and Grammar window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command-Semicolon (;)&lt;/strong&gt;: Find misspelled words in the document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Delete&lt;/strong&gt;: Delete the word to the left of the insertion point.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-H&lt;/strong&gt;: Delete the character to the left of the insertion point. Or use Delete.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-D&lt;/strong&gt;: Delete the character to the right of the insertion point. Or use Fn-Delete.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fn-Delete&lt;/strong&gt;: Forward delete on keyboards that don't have a Forward Delete   key. Or use Control-D.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-K&lt;/strong&gt;: Delete the text between the insertion point and the end of the line or paragraph.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fn–Up Arrow&lt;/strong&gt;: Page Up: Scroll up one page. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fn–Down Arrow&lt;/strong&gt;: Page Down: Scroll down one page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fn–Left Arrow:&lt;/strong&gt; Home: Scroll to the beginning of a document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fn–Right Arrow&lt;/strong&gt;: End: Scroll to the end of a document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Up Arrow&lt;/strong&gt;: Move the insertion point to the beginning of the document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Down Arrow&lt;/strong&gt;: Move the insertion point to the end of the document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Left Arrow&lt;/strong&gt;: Move the insertion point to the beginning of the current line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Right Arrow&lt;/strong&gt;: Move the insertion point to the end of the current line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Left Arrow&lt;/strong&gt;: Move the insertion point to the beginning of the previous word.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Right Arrow&lt;/strong&gt;: Move the insertion point to the end of the next word.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Up Arrow&lt;/strong&gt;: Select the text between the insertion point and the beginning of the document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Down Arrow&lt;/strong&gt;: Select the text between the insertion point and the end of the document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Left Arrow&lt;/strong&gt;: Select the text between the insertion point and the beginning of the current line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Right Arrow&lt;/strong&gt;: Select the text between the insertion point and the end of the current line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Up Arrow&lt;/strong&gt;: Extend text selection to the nearest character at the same horizontal location on the line above.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Down Arrow&lt;/strong&gt;: Extend text selection to the nearest character at the same horizontal location on the line below.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Left Arrow&lt;/strong&gt;: Extend text selection one character to the left.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Right Arrow&lt;/strong&gt;: Extend text selection one character to the right.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Up Arrow&lt;/strong&gt;: Extend text selection to the beginning of the current paragraph, then to the beginning of the following paragraph if pressed again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Down Arrow&lt;/strong&gt;: Extend text selection to the end of the current paragraph, then to the end of the following paragraph if pressed again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Left Arrow&lt;/strong&gt;: Extend text selection to the beginning of the current word, then to the beginning of the following word if pressed again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option–Shift–Right Arrow&lt;/strong&gt;: Extend text selection to the end of the current word, then to the end of the following word if pressed again.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-A&lt;/strong&gt;: Move to the beginning of the line or paragraph.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-E&lt;/strong&gt;: Move to the end of a line or paragraph.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-F&lt;/strong&gt;: Move one character forward.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-B&lt;/strong&gt;: Move one character backward.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-L&lt;/strong&gt;: Center the cursor or selection in the visible area.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-P&lt;/strong&gt;: Move up one line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-N&lt;/strong&gt;: Move down one line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-O&lt;/strong&gt;: Insert a new line after the insertion point.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Control-T&lt;/strong&gt;: Swap the character behind the insertion point with the character in front of the insertion point.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Left Curly Bracket ({)&lt;/strong&gt;: Left align.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Command–Right Curly Bracket (})&lt;/strong&gt;: Right align.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Vertical bar (|)&lt;/strong&gt;: Center align.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-F&lt;/strong&gt;: Go to the search field. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-T&lt;/strong&gt;: Show or hide a toolbar in the app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-C&lt;/strong&gt;: Copy Style: Copy the formatting settings of the selected item to the Clipboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-V&lt;/strong&gt;: Paste Style: Apply the copied style to the selected item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Shift-Command-V&lt;/strong&gt;: Paste and Match Style: Apply the style of the surrounding content to the item pasted within that content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Option-Command-I&lt;/strong&gt;: Show or hide the inspector window.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-P&lt;/strong&gt;:  Page setup: Display a window for selecting document settings.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift-Command-S&lt;/strong&gt;: Display the Save As dialog, or duplicate the current document.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Minus sign (-)&lt;/strong&gt;: Decrease the size of the selected item.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Plus sign (+)&lt;/strong&gt;: Increase the size of the selected item. Command–Equal sign (=) performs the same function.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shift–Command–Question mark (?)&lt;/strong&gt;: Open the Help menu.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;other&quot;&gt;Other shortcuts&lt;/h2&gt;
&lt;div&gt;
&lt;p&gt;For more shortcuts, check the shortcut abbreviations shown in the menus of your apps. Every app can have its own shortcuts, and shortcuts that work in one app might not work in another. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png&quot;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 id=&quot;more&quot;&gt;Learn more&lt;/h2&gt;

&lt;/div&gt;
</description>
<pubDate>Fri, 07 Aug 2020 10:27:02 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:url>https://support.apple.com/en-us/HT201236</og:url>
<og:title>Mac keyboard shortcuts</og:title>
<og:description>By pressing certain key combinations, you can do things that normally need a mouse, trackpad, or other input device.</og:description>
<og:type>article</og:type>
<og:image>https://support.apple.com/library/content/dam/edam/applecare/images/en_US/social/keyboards-social-card.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://support.apple.com/en-us/HT201236</dc:identifier>
</item>
<item>
<title>I&amp;#039;m Open Sourcing the Have I Been Pwned Code Base</title>
<link>https://www.troyhunt.com/im-open-sourcing-the-have-i-been-pwned-code-base/</link>
<guid isPermaLink="true" >https://www.troyhunt.com/im-open-sourcing-the-have-i-been-pwned-code-base/</guid>
<description>&lt;p&gt;Let me just cut straight to it: I'm going to open source the Have I Been Pwned code base. The decision has been a while coming and it took a failed M&amp;amp;A process to get here, but the code will be turned over to the public for the betterment of the project and frankly, for the betterment of everyone who uses it. Let me explain why and how.&lt;/p&gt;&lt;p&gt;I've been giving a great deal of thought to how I want this project to evolve lately, especially in the wake of &lt;a href=&quot;https://www.troyhunt.com/project-svalbard-have-i-been-pwned-and-its-ongoing-independence/&quot;&gt;the M&amp;amp;A process that ended earlier this year&lt;/a&gt; right back where I'd started: with me being solely responsible for everything. The single most important objective of that process was to seek a more sustainable future for HIBP and that desire hasn't changed; the project cannot be solely dependent on me. Yet that's where we are today and if I disappear, HIBP quickly withers and dies.&lt;/p&gt;
&lt;p&gt;As I've given further thought to the future since the M&amp;amp;A process, the significance of community contributions has really hit home. Every single byte of data that's been loaded into the system in recent years has come from someone who freely offered it in order to improve the security landscape for everyone. Many of the services that HIBP runs on are provided free by the likes of Cloudflare. Much of the code that's been written has drawn on community contributions either by virtue of content people have published publicly or support that's been provided to me directly.&lt;/p&gt;
&lt;p&gt;I was reminded of this just yesterday when my friend from Cloudflare, Junade Ali, posted this:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;7.2222222222222&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Now &lt;a href=&quot;https://twitter.com/LastPass?ref_src=twsrc%5Etfw&quot;&gt;@LastPass&lt;/a&gt; has added breached password notifications using the k-Anonymity API design by me and &lt;a href=&quot;https://twitter.com/troyhunt?ref_src=twsrc%5Etfw&quot;&gt;@troyhunt&lt;/a&gt; - joining &lt;a href=&quot;https://twitter.com/1Password?ref_src=twsrc%5Etfw&quot;&gt;@1Password&lt;/a&gt;, Okta PassProtect, Apple, Google, etc. &lt;a href=&quot;https://t.co/fyOKbZWNNF&quot;&gt;https://t.co/fyOKbZWNNF&lt;/a&gt;&lt;/p&gt;
— Junade Ali (@IcyApril) &lt;a href=&quot;https://twitter.com/IcyApril/status/1291012838836899842?ref_src=twsrc%5Etfw&quot;&gt;August 5, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;This tweet isn't entirely accurate; it was all Junade's idea and he designed the k-anonymity implementation for HIBP's Pwned Passwords. For free, because he's a good bloke and Cloudflare supported him. LastPass has now employed that same model and they follow the other notable names Junade mentioned. I'm sure I speak for him as well when I say we couldn't be happier that other companies have taken the model we pioneered and applied it to their own services too because at the end of the day, that's in everyone's best interests.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;The philosophy of&lt;/strong&gt; HIBP has always been to support the community, now I want the community to help support HIBP.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open sourcing the code base is the most obvious way to do this. It takes the nuts and bolts of HIBP and puts them in the hands of people who can help sustain the service regardless of what happens to me. But this isn't just a philosophical decision based on a desire to offload work, it's also common sense for a number of reasons. Let me explain:&lt;/p&gt;
&lt;h3 id=&quot;hibp-has-always-been-open-in-spirit&quot;&gt;HIBP Has Always Been Open in Spirit&lt;/h3&gt;
&lt;p&gt;I've already written extensively about the architecture of the system across many of &lt;a href=&quot;https://www.troyhunt.com/tag/have-i-been-pwned-3f/&quot;&gt;the 128 previous blog posts tagged as Have I Been Pwned&lt;/a&gt;. The very second blog post on that tag was about &lt;a href=&quot;https://www.troyhunt.com/working-with-154-million-records-on/&quot;&gt;how I used Azure Table Storage to make it so fast and so cheap&lt;/a&gt;. As soon as it got popular, &lt;a href=&quot;https://www.troyhunt.com/micro-optimising-web-content-for/&quot;&gt;I wrote about how I optimised it for performance&lt;/a&gt;. When I started using Azure Functions, &lt;a href=&quot;https://www.troyhunt.com/azure-functions-in-practice/&quot;&gt;I wrote about the joy of serverless computing and how I'd implemented it in HIBP&lt;/a&gt;. I levelled that up even further when &lt;a href=&quot;https://www.troyhunt.com/serverless-to-the-max-doing-big-things-for-small-dollars-with-cloudflare-workers-and-azure-functions/&quot;&gt;I wrote about using Cloudflare Workers to further optimise performance and drive down cost&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The point is that it was always the intention to be completely open about the design of HIBP, it's not like there's any proprietary secret sauce I've been trying to protect here.&lt;/p&gt;
&lt;h3 id=&quot;open-source-is-everywhere&quot;&gt;Open Source is Everywhere&lt;/h3&gt;
&lt;p&gt;A heap of really amazing projects are open source these days. Visual Studio Code, for example, is open source. The platform this very blog runs on, Ghost, is open source. Most of the libraries HIBP uses are open source. And I'm not just talking open source in the &quot;source open&quot; kind of way where other people are free to read it, but I'm talking open source in terms of taking contributions as well.&lt;/p&gt;
&lt;p&gt;It actually got me thinking - how many of the products and services I use every day are open source? I asked on Twitter earlier today, and it's, well, extensive:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Chromium&lt;/p&gt;
— Isaac Weaver (@IsaacjWeaver) &lt;a href=&quot;https://twitter.com/IsaacjWeaver/status/1291538259349311488?ref_src=twsrc%5Etfw&quot;&gt;August 7, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Wordpress. Wikipedia.&lt;/p&gt;
— Dave Bolger (@davebolger) &lt;a href=&quot;https://twitter.com/davebolger/status/1291474075920084999?ref_src=twsrc%5Etfw&quot;&gt;August 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;
&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://t.co/ESpnFWhnv9&quot;&gt;https://t.co/ESpnFWhnv9&lt;/a&gt;&lt;/p&gt;
— Dave Conroy (@conroydave) &lt;a href=&quot;https://twitter.com/conroydave/status/1291474015769579527?ref_src=twsrc%5Etfw&quot;&gt;August 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; readability=&quot;4.4736842105263&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What i use everyday&lt;/p&gt;&lt;p&gt;Firefox&lt;br/&gt;Thunderbird/evolution&lt;br/&gt;VirtualBox&lt;/p&gt;
— 🇯🇲 Glenford Williams 🇯🇲 (@glenfordwilliam) &lt;a href=&quot;https://twitter.com/glenfordwilliam/status/1291581530737987588?ref_src=twsrc%5Etfw&quot;&gt;August 7, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Does Android count?&lt;/p&gt;
— Dylan Beattie 🇪🇺 @ 🏡🔑🔽 (@dylanbeattie) &lt;a href=&quot;https://twitter.com/dylanbeattie/status/1291475202011013121?ref_src=twsrc%5Etfw&quot;&gt;August 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot;&gt;
&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;Linux&lt;/p&gt;
— Campbell Gough #FBPE (@Campbellgough) &lt;a href=&quot;https://twitter.com/Campbellgough/status/1291476565793136641?ref_src=twsrc%5Etfw&quot;&gt;August 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; readability=&quot;3.6971830985915&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Application: Drupal - websites: many Universities use Drupal -&amp;gt; eg &lt;a href=&quot;https://t.co/kfgkgiaSZa&quot;&gt;https://t.co/kfgkgiaSZa&lt;/a&gt;&lt;/p&gt;
— Karin Gerritsen (@KarinSemperIT) &lt;a href=&quot;https://twitter.com/KarinSemperIT/status/1291475108981141506?ref_src=twsrc%5Etfw&quot;&gt;August 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;I love also that &lt;a href=&quot;https://resources.whitesourcesoftware.com/blog-whitesource/git-much-the-top-10-companies-contributing-to-open-source&quot;&gt;Microsoft remains one of the largest corporate contributors to open source&lt;/a&gt;, maybe even the largest depending on how you want to define the metric. Open source is in the DNA of everything that HIBP is built on.&lt;/p&gt;
&lt;h3 id=&quot;because-transparency&quot;&gt;Because Transparency&lt;/h3&gt;
&lt;p&gt;Putting the code out there in public goes a long way to addressing concerns people have about the way the service operates. For example, people have often questioned whether I'm logging searches in order to build up a new list of email addresses. No, I'm not, but at present that assertion effectively just boils down to &quot;trust me&quot;. Showing the code - the actual code - and demonstrating that things aren't logged is a very different proposition.&lt;/p&gt;
&lt;p&gt;Transparency of code mirrors the ethos I've applied time and time again to the way I run HIBP. &lt;a href=&quot;https://www.troyhunt.com/heres-how-i-verify-data-breaches/&quot;&gt;I'm transparent about how I verify data&lt;/a&gt;. &lt;a href=&quot;https://www.troyhunt.com/tag/government/&quot;&gt;I'm transparent about government usage of the service&lt;/a&gt;. &lt;a href=&quot;https://www.troyhunt.com/brief-lessons-on-handling-huge-traffic-spikes/&quot;&gt;I'm transparent when I screw up and have system outages&lt;/a&gt;. Being transparent with the code feels like the most natural thing ever!&lt;/p&gt;
&lt;h3 id=&quot;it-s-almost-all-about-the-contributions&quot;&gt;It's (Almost) All About the Contributions&lt;/h3&gt;
&lt;p&gt;Open sourcing the HIBP code base gives me the opportunity to address that original problem I set out to solve with the M&amp;amp;A process: finding other people that can help sustain the project. All that backlog, all those bugs, all the great new ideas people have but I simply can't implement myself can, if the community is willing, finally be contributed back into the project.&lt;/p&gt;
&lt;p&gt;And that's something that I'm adamant about; the goal here isn't just to say &quot;hey, look at the code, it's not logging your searches&quot;, it's fundamentally about making HIBP a more sustainable, more robustly featured community service. Frankly, I can't think of a single good reason why I wouldn't do this. But that said, it's also not as trivial as it sounds so let me talk about the practicalities of the whole thing.&lt;/p&gt;
&lt;h3 id=&quot;practically-there-s-work-to-be-done&quot;&gt;Practically, There's Work to be Done&lt;/h3&gt;
&lt;p&gt;I started writing HIBP on a plane to the Philippines in 2013 and finished up a bunch of it in a hotel room once I landed. In the near 7 years since then, I've chipped away at it in little bits and pieces, frequently from a laptop while travelling, jet lagged and preoccupied. I've taken shortcuts. I've hacked together some pretty messy stuff. I've probably checked in secrets before and when you're the only person touching a project you can get away with all that stuff, but not once you start opening up source.&lt;/p&gt;
&lt;p&gt;HIBP isn't in a state to simply flick the visibility of it in GitHub, but it needs to get to that point. Instead, I need to choose the right parts of the project to open up in the right way at the right time. That exercise alone requires help and for a while now, I've been talking to some of the smartest people I know in this space. People who live and breathe open source, people who understand .NET and Azure inside and out, people who know HIBP well and above all, people I trust to expose my own shortcomings so that they can help me make this thing more sustainable. With their support, the transition from completely closed to completely open will happen incrementally, bit by bit and in a fashion that's both manageable and responsible. Let me be clear: I don't have a timeline for each step along the way yet as HIBP remains something I do in my spare time and I've always got a bunch of other stuff on my plate, but the process has already begun and I'll be sharing more on that as soon as I can.&lt;/p&gt;
&lt;p&gt;I want to get to a point where everything possible is open. I want the infrastructure configuration to be open too and I want the whole thing to be self-sustaining by the community such that I make myself redundant. That's not to say I'm planning an exit (far from it), but it's not good for HIBP that I &lt;em&gt;can't&lt;/em&gt; exit right now and frankly, it's not good for me either.&lt;/p&gt;
&lt;p&gt;The point is that the goals outlined in this blog post will take time to reach and they're not as trivial as they may sound at face value. HIBP remains a pet project run when I have the chance and somewhere within there I need to make the commitment to get it to the point I'm aiming for in this blog post.&lt;/p&gt;
&lt;h3 id=&quot;what-about-the-data&quot;&gt;What About the Data?&lt;/h3&gt;
&lt;p&gt;I need to really clearly break this part of the discussion out because whilst open sourcing the code base is one thing, how the data is handled is quite another. There's no way to sugar coat this so I'll just lay it out bluntly: HIBP only exists due to a whole bunch of criminal activity resulting in data that's ultimately ended up in my possession. Of course, the situation is a bit more nuanced than that with the vast bulk of data in HIBP already being in broad public circulation and passing through many hands. But be that as it may, even the legality of possessing it remains grey and whilst there are many internet armchair experts chiming in with their own opinions on the topic, here's what the legal guidance I've consistently been given boils down to:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;We invite parties to form their own views on the legality of the data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Great, nice lawyer speak there guys. (And seriously, yes, that's what the KPMG lawyers from the M&amp;amp;A process I paid an eye-watering amount to advised.) Yet clearly, many of the world's largest companies do see value in it and conclude that holding the data is acceptable. Big tech companies, for example, pull down precisely the same breaches that go into HIBP and use them to identify credential reuse across their own platforms:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.2539682539683&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Looks like &lt;a href=&quot;https://twitter.com/amazon?ref_src=twsrc%5Etfw&quot;&gt;@amazon&lt;/a&gt; are resetting accounts possible breach or fallback from LinkedIn etc &lt;a href=&quot;https://twitter.com/troyhunt?ref_src=twsrc%5Etfw&quot;&gt;@troyhunt&lt;/a&gt; &lt;a href=&quot;https://t.co/NIP5aOfr7W&quot;&gt;pic.twitter.com/NIP5aOfr7W&lt;/a&gt;&lt;/p&gt;
— Ryan Yates (MVP, MBCS) #mhasl (@ryanyates1990) &lt;a href=&quot;https://twitter.com/ryanyates1990/status/746090532057780228?ref_src=twsrc%5Etfw&quot;&gt;June 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Then there's the privacy side of it all: my own personal data is in those breaches and your data almost certainly is too because there are &lt;em&gt;literally&lt;/em&gt; billions of people that have been impacted by data breaches. Regardless of how broadly that information is circling, I still need to ensure the same privacy controls prevail across the breach data itself even as the code base becomes more transparent. That's non-trivial. Doable, but non-trivial.&lt;/p&gt;
&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;
&lt;p&gt;This is something I've given a lot of thought to for a long time now. The concept of open sourcing HIBP has been floated over and over again and it's taken a failed M&amp;amp;A process to help me realise that this was the best path forward, but now here we are.&lt;/p&gt;
&lt;p&gt;I've used the word &quot;community&quot; a lot throughout this post and I can't understate the importance of the role other people have played in the project's success. Just to really drive that point home, &lt;a href=&quot;https://twitter.com/haveibeenpwned&quot;&gt;look at how many breaches have gone into HIBP in the last two weeks&lt;/a&gt;. At the time of writing, that's 16 breaches encompassing 95,850,490 records and every single one of those has been a community contribution; someone selflessly standing up and trusting me to handle the data in the best interest of others. I focus on that short time frame in particular here because it also demonstrates the constant flood of data and the need to scale myself more efficiently.&lt;/p&gt;
&lt;p&gt;So that's where HIBP is heading. I know this blog post will be met with much enthusiasm because that's what many of you have been telling me to do for a long time. I've listened, now it's time to make it a reality 😊&lt;/p&gt;
&lt;section class=&quot;article-open_tag&quot;&gt;&lt;a class=&quot;tag&quot; href=&quot;https://www.troyhunt.com/tag/have-i-been-pwned-3f/&quot;&gt;Have I Been Pwned&lt;/a&gt;&lt;/section&gt;</description>
<pubDate>Fri, 07 Aug 2020 08:31:46 +0000</pubDate>
<dc:creator>vquemener</dc:creator>
<og:type>article</og:type>
<og:title>I'm Open Sourcing the Have I Been Pwned Code Base</og:title>
<og:description>Let me just cut straight to it: I'm going to open source the Have I Been Pwned code base. The decision has been a while coming and it took a failed M&amp;amp;A process to get here, but the code will be turned over to the public for the</og:description>
<og:url>https://www.troyhunt.com/im-open-sourcing-the-have-i-been-pwned-code-base/</og:url>
<og:image>https://www.troyhunt.com/content/images/2020/08/HIBP-Banner.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.troyhunt.com/im-open-sourcing-the-have-i-been-pwned-code-base/</dc:identifier>
</item>
<item>
<title>Crush: A command line shell that is also a powerful modern programming language</title>
<link>https://github.com/liljencrantz/crush</link>
<guid isPermaLink="true" >https://github.com/liljencrantz/crush</guid>
<description>&lt;p&gt;Crush is an attempt to make a traditional command line shell that is also a modern programming language. It has the features one would expect from a modern programming language like a type system, closures and lexical scoping, but with a syntax geared toward both batch and interactive shell usage.&lt;/p&gt;
&lt;h2&gt;What features of a traditional shell does Crush retain?&lt;/h2&gt;
&lt;p&gt;The basic structure of the Crush language resembles a regular shell like bash.&lt;/p&gt;
&lt;p&gt;How to invoke commands, pass arguments and set up pipelines are unchanged, as is the central concept of a current working directory. This means that trivial invocations, like &lt;code&gt;ls&lt;/code&gt; or &lt;code&gt;find .. | count&lt;/code&gt; look the same, but under the hood they are quite different, and nearly everything beyond that is different.&lt;/p&gt;
&lt;h2&gt;What does Crush do so differently, then?&lt;/h2&gt;
&lt;h3&gt;Scratching the surface&lt;/h3&gt;
&lt;p&gt;Let's start with two trivial commands; listing files in the current directory, and checking how many files are in the current directory:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; ls
user         size modified                  type      file
liljencrantz 2279 2020-03-07 13:00:33 +0100 file      ideas
liljencrantz 4096 2019-11-22 21:56:30 +0100 directory target
...

crush&amp;gt; ls | count
14
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This all looks familiar. But appearances are deceiving. The &lt;code&gt;ls&lt;/code&gt; command being called is a Crush builtin, and the output is not sent over a unix pipe but over a Rush channel. It is not understood by the command as a series of bytes, but as a table of rows, and Crush provides you with SQL-like commands to sort, filter, aggregate and group rows of data.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; ls | sort ^size
user         size  modified                  type      file
liljencrantz    31 2019-10-03 13:43:12 +0200 file      .gitignore
liljencrantz    75 2020-03-07 17:09:15 +0100 file      build.rs
liljencrantz   491 2020-03-07 23:50:08 +0100 file      Cargo.toml
liljencrantz   711 2019-10-03 14:19:46 +0200 file      crush.iml
...

crush&amp;gt; ls | where {type == &quot;directory&quot;}
user         size modified                  type      file
liljencrantz 4096 2019-11-22 21:56:30 +0100 directory target
liljencrantz 4096 2020-02-22 11:50:12 +0100 directory tests
liljencrantz 4096 2020-03-16 14:11:39 +0100 directory .idea
liljencrantz 4096 2020-02-15 00:12:18 +0100 directory example_data
liljencrantz 4096 2020-03-14 17:34:39 +0100 directory src
liljencrantz 4096 2020-03-14 19:44:54 +0100 directory .git
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Because Crush output is a stream of rows with columns, actions like sorting by an arbitrary column or filtering data based on arbitrary logical expressions operating on these columns is easy, and because the components used to do this are generic and reusable, you can trivially do the same to data from any source, such as json files, http requests, etc.&lt;/p&gt;
&lt;h3&gt;Reading and writing files&lt;/h3&gt;
&lt;p&gt;In traditional shells, I/O is done as binary streams. Because Crush streams are typed, I/O happens differently. Crush has command pairs used for serializing and deserializing various file formats. Use e.g. &lt;code&gt;json:from&lt;/code&gt; and &lt;code&gt;json:to&lt;/code&gt; to deserialize and serialize json data, respectively. These commands all work like you'd expect:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Namespace&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td&gt;&lt;code&gt;bin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Binary stream, i.e. no encoding at all.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Comma separated values.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON file format.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;lines&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Lines of text files.&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;code&gt;pup&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The native file format of Crush.&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td&gt;&lt;code&gt;split&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Split text file on custom separators.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;toml&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TOML file format.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;words&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Word split text files.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Dump the output of the ls command to the file listing.json in json format&lt;/span&gt;
crush&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; ls &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; json:to ./listing.json

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Read the file Cargo.toml as a toml file, and extract the dependencies-field&lt;/span&gt;
crush&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; (toml:from Cargo.toml):dependencies

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Fetch a web page and write it to a file&lt;/span&gt;
(http &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://isitchristmas.com/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;):body &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; bin:to ./isitchristmas.html
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't supply an input file to any of the deserializer commands, the command will read from the input, which must be a binary or binary stream, e.g. &lt;code&gt;(http &quot;https://jsonplaceholder.typicode.com/posts/1&quot;):body | json:from&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you don't supply an output file to one of the serializer commands, the command will serialize the output to a binary stream as the pipeline output:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
crush&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; list:of 1 2 3 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; json:to
[1,2,3]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One of the Crush serializers, Pup, is a native file format for Crush. The Pup-format is protobuf-based, and it's schema is available &lt;a href=&quot;https://github.com/liljencrantz/crush/blob/master/src/crush.proto&quot;&gt;here&lt;/a&gt;. The advantage of Pup is that all crush types, including classes and closures, can be losslessly serialized into this format. But because Pup is Crush-specific, it's useless for data sharing to other languages.&lt;/p&gt;
&lt;h3&gt;Operators for comparison, logical operations and arithmetical operations&lt;/h3&gt;
&lt;p&gt;Crush allows you to perform mathematical calculations on integer and floating point numbers directly in the shell, mostly using the same mathematical operators used in almost any other programming language.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; 5+6
11
crush&amp;gt; 1+2*3
7
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The only exception is that the &lt;code&gt;/&lt;/code&gt; operator is used for constructing files and paths (more on that later), so division is done using the &lt;code&gt;//&lt;/code&gt; operator.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; 4.2//3
1.4000000000000001
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Comparisons between values are done using &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;, just like in most languages. All comparisons between values of different types are false.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; 4 &amp;gt; 5
false
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; operators are used to combine logical expressions:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; false or true
true
crush&amp;gt; if some_file:exists and (some_file:stat):is_file {echo &quot;yay&quot;}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Crush also has operators related to patterns and matching. &lt;code&gt;=~&lt;/code&gt; and &lt;code&gt;!~&lt;/code&gt; are used to check if a pattern matches an input:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# The % character is the wildcard operator in globs
crush&amp;gt; %.txt =~ foo.txt
true
# This is how you construct and match a regular expression
crush&amp;gt; re&quot;ab+c&quot; =~ &quot;abbbbbc&quot;
true
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Regexps also support replacement using the &lt;code&gt;~&lt;/code&gt; (replace once) and &lt;code&gt;~~&lt;/code&gt; (replace all) operators, which are trinary operators:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; re&quot;a+&quot; ~ &quot;baalaa&quot; &quot;a&quot;
balaa
crush&amp;gt; re&quot;a+&quot; ~~ &quot;baalaa&quot; &quot;a&quot;
bala
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Type system&lt;/h3&gt;
&lt;p&gt;As already mentioned, many Crush commands operate on streams of tabular data. The individual cells in this table stream can be any of a variety of types, including strings, integers, floating point numbers, lists, binary data or another table stream.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; ps | head 5
pid ppid status   user cpu  name
  1    0 Sleeping root 4.73 /sbin/init
  2    0 Sleeping root    0 [kthreadd]
  3    2 Idle     root    0 [rcu_gp]
  4    2 Idle     root    0 [rcu_par_gp]
  6    2 Idle     root    0 [kworker/0:0H-kblockd]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Some commands of course output a single value, such as pwd, which outputs the current working directory as a single element of the &lt;code&gt;file&lt;/code&gt; type.&lt;/p&gt;
&lt;h3&gt;Variables of any type&lt;/h3&gt;
&lt;p&gt;Variables must be declared (using the &lt;code&gt;:=&lt;/code&gt; operator) before use.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; some_number := 4      # The := operator declares a new variable
crush&amp;gt; some_number * 5
20
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Once declared, a variable can be reassigned to using the &lt;code&gt;=&lt;/code&gt; operator.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; some_number = 6
crush&amp;gt; some_number * 5
30
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Like in any sane programming language, variables can be of any type supported by the type system. There is no implicit type conversion. Do note that some mathematical operators are defined between types, so multiplying an integer with a floating point number results in a floating point number, for example.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; some_text := &quot;5&quot;
crush&amp;gt; some_text * some_number
Error: Can not process arguments of specified type
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Named and unnamed arguments&lt;/h3&gt;
&lt;p&gt;Crush supports named and unnamed arguments. It is often possible to use one, the other or a combination of both. The following three invocations are equivalent.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;http uri=&quot;http://example.com&quot; method=&quot;get&quot;
http &quot;http://example.com&quot; &quot;get&quot;
http &quot;http://example.com&quot; method=&quot;get&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It is quite common to want to pass boolean arguments to commands, which is why Crush has a special shorthand syntax for it. Passing in &lt;code&gt;--foo&lt;/code&gt; is equivalent to passing in &lt;code&gt;foo=true&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Subshells&lt;/h3&gt;
&lt;p&gt;Sometimes you want to use the output of one command as an &lt;em&gt;argument&lt;/em&gt; to another command, just like a subshell in e.g. bash. This is different from using the output as the &lt;em&gt;input&lt;/em&gt;, and is done using &lt;code&gt;()&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; echo (pwd)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Closures&lt;/h3&gt;
&lt;p&gt;In Crush, braces (&lt;code&gt;{}&lt;/code&gt;) are used to create a closure. Assigning a closure to a variable is how you create a function.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; print_greeting := {echo &quot;Hello&quot;}
crush&amp;gt; print_greeting
Hello
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Any named arguments passed when calling a closure and added to the local scope of the invocation:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; print_a := {echo a}
crush&amp;gt; print_a a=&quot;Greetings&quot;
Greetings
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For added type safety, you can declare what parameters a closure expects at the start of a closure.&lt;/p&gt;
&lt;p&gt;The following closure requires the caller to supply the argument &lt;code&gt;a&lt;/code&gt;, and allows the caller to specify the argument &lt;code&gt;b&lt;/code&gt;, which must by of type integer. If the caller does not specify it, it falls back to a default value of 7.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; print_things := {|a b: integer = 7|}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Additionally, the &lt;code&gt;@&lt;/code&gt; operator can be used to create a list of all unnamed arguments, and the &lt;code&gt;@@&lt;/code&gt; operator can be used to create a list of all named arguments not mentioned elsewhere in the parameter list.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; print_everything := {|@unnamed @@named| echo &quot;Named&quot; named &quot;Unnamed&quot; unnamed}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;@@&lt;/code&gt; operators are also used during command invocation to perform the mirrored operation. The following code creates an &lt;code&gt;lss&lt;/code&gt; function that calls the &lt;code&gt;ls&lt;/code&gt; command and passes on any arguments to it, and pipes the output through the &lt;code&gt;select&lt;/code&gt; command to only show one column from the output.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;lss := {|@args @@kwargs| ls @args @@kwargs | select %file}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Types&lt;/h3&gt;
&lt;p&gt;Crush comes with a variety of types:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;lists of any type,&lt;/li&gt;
&lt;li&gt;dicts of any pair of types type, (Some types can not be used as keys!)&lt;/li&gt;
&lt;li&gt;strings,&lt;/li&gt;
&lt;li&gt;regular expressions,&lt;/li&gt;
&lt;li&gt;globs,&lt;/li&gt;
&lt;li&gt;files,&lt;/li&gt;
&lt;li&gt;booleans,&lt;/li&gt;
&lt;li&gt;integer numbers,&lt;/li&gt;
&lt;li&gt;floating point numbers,&lt;/li&gt;
&lt;li&gt;structs, which contain any number of named fields of any type,&lt;/li&gt;
&lt;li&gt;tables, which are essentially lists where each element is the same type of struct,&lt;/li&gt;
&lt;li&gt;table streams, which are like tables but can only be traversed once,&lt;/li&gt;
&lt;li&gt;binary data,&lt;/li&gt;
&lt;li&gt;binary streams, which are like binary data but can only be traversed once,&lt;/li&gt;
&lt;li&gt;types, and&lt;/li&gt;
&lt;li&gt;commands, which are either closures or built in commands.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Crush allows you to create your own types using the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; commands.&lt;/p&gt;
&lt;h3&gt;Exploring the shell&lt;/h3&gt;
&lt;p&gt;When playing around with Crush, the &lt;code&gt;help&lt;/code&gt; and &lt;code&gt;dir&lt;/code&gt;commands are useful. The former displays a help messages, the latter lists the content of a value.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; help
sort column:field

    Sort input based on column

    Example:

    ps | sort ^cpu
crush&amp;gt; dir list
[type, truncate, remove, clone, of, __call_type__, __setitem__, pop, push, empty, len, peek, new, clear]
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;The content of your current working directory lives in your namespace&lt;/h3&gt;
&lt;p&gt;All the files in the current working directory are part of the local namespace. This means that e.g. &lt;code&gt;.&lt;/code&gt; is a file object that points to the current working directory. The &lt;code&gt;/&lt;/code&gt; operator is used in Crush to join two file directory element together.&lt;/p&gt;
&lt;p&gt;This means that for the most part, using files in Crush is extremely simple and convenient.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; cd .. # This does what you'd think
crush&amp;gt; cd /  # As does this
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The right hand side of the / operator is a label, not a value, so &lt;code&gt;./foo&lt;/code&gt; refers to a file named foo in the current working directory, and is unrelated to the contents of any variable named &lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Namespaces, members and methods&lt;/h3&gt;
&lt;p&gt;Members are accessed using the &lt;code&gt;:&lt;/code&gt; operator. Most other languages tend to use &lt;code&gt;.&lt;/code&gt;, but that is a very common character in file names, so Crush needed to find something else.&lt;/p&gt;
&lt;p&gt;Most types have several useful methods. Files have &lt;code&gt;exists&lt;/code&gt; and &lt;code&gt;stat&lt;/code&gt;, which do what you'd expect.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; .:exists
true
crush&amp;gt; .:stat
{is_directory: true, is_file: false, is_symlink: false, inode: 50856186, nlink: 8, mode: 16877, len: 4096}
crush&amp;gt; (.:stat):is_file
false
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Semi-lazy stream evaluation:&lt;/h3&gt;
&lt;p&gt;If you assign the output of the find command to a variable like so:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; all_the_files := (find /)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;What will really be stored in the &lt;code&gt;all_the_files&lt;/code&gt; variable is simply a stream. A small number of lines of output will be eagerly evaluated, before the thread executing the find command will start blocking. If the stream is consumed, for example by writing&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; all_the_files
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;then all hell will break loose on your screen as tens of thousands of lines are printed to your screen.&lt;/p&gt;
&lt;p&gt;Another option would be to pipe the output via the head command&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; all_the_files | head 1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Which will consume one line of output from the stream. This command can be re-executed until the stream is empty.&lt;/p&gt;
&lt;h3&gt;More SQL-like data stream operations&lt;/h3&gt;
&lt;p&gt;Crush features many commands to operate om arbitrary streams of data using a SQL-like syntax. These commands use field-specifiers like &lt;code&gt;^foo&lt;/code&gt; to specify columns in the data stream that they operate on:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ps | where {user == &quot;root&quot;} | group ^status | aggr proc_per_status={count}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;(Note that the &lt;code&gt;aggr&lt;/code&gt; command is currently broken.)&lt;/p&gt;
&lt;p&gt;Unlike in SQL, these commands all operate on input streams, meaning they can be combined in any order, and the input source can be file/http resources in a variety of formats or output of commands like &lt;code&gt;ps&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Globs&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;*&lt;/code&gt; operator is used for multiplication, so Crush uses &lt;code&gt;%&lt;/code&gt; as the wildcard operator instead. &lt;code&gt;?&lt;/code&gt; is still used for single character wildcards.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; ls %.txt
user         size  modified                  type file
liljencrantz 21303 2020-03-30 13:40:37 +0200 file /home/liljencrantz/src/crush/README.md
crush&amp;gt; ls ????????
user         size modified                  type file
liljencrantz   75 2020-03-07 17:09:15 +0100 file /home/liljencrantz/src/crush/build.rs
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The operator &lt;code&gt;%%&lt;/code&gt; is used for performing globbing recursively into subdirectories. Another way of looking ath the same syntax is to say that &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; match any character except &lt;code&gt;/&lt;/code&gt;, whereas &lt;code&gt;%%&lt;/code&gt; also matches &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# Count the number of lines of rust code in the crush source code
crush&amp;gt; lines src/%%.rs|count
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Wildcards are not automatically expanded, they are passed in to commands as glob objects, and the command chooses what to match the glob against. If you want to perform glob expansion in a command that doesn't do so itself, use the &lt;code&gt;:files&lt;/code&gt; method of the glob object to do so:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; echo (%%.rs):files
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Regular expressions&lt;/h3&gt;
&lt;p&gt;Regular expressions are constructed like &lt;code&gt;re&quot;REGEXP GOES HERE&quot;&lt;/code&gt;. They support matching and replacement:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; re&quot;ab+c&quot; =~ &quot;abbbbbc&quot;
true
crush&amp;gt; re&quot;a+&quot; ~ &quot;baalaa&quot; &quot;a&quot;
balaa
crush&amp;gt; re&quot;a+&quot; ~~ &quot;baalaa&quot; &quot;a&quot;
bala
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Lists and dicts&lt;/h3&gt;
&lt;p&gt;Crush has built-in lists:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; l := (list:of 1 2 3)
crush&amp;gt; l
[1, 2, 3]
crush&amp;gt; l:peek
3
crush&amp;gt; l:pop
3
crush&amp;gt; l:len
2
crush&amp;gt; l[1]
2
crush&amp;gt; l[1] = 7
crush&amp;gt; l
[1, 7]
crush&amp;gt; help l
type list integer

    A mutable list of items, usually of the same type

    * __call_type__  Return a list type for the specified element type
    * __getitem__    Return a file or subdirectory in the specified base directory
    * __setitem__    Assign a new value to the element at the specified index
    * clear          Remove all elments from the list
    * clone          Create a duplicate of the list
    * empty          True if there are no elements in the list
    * len            The number of elements in the list
    * new            Create a new list with the specified element type
    * of             Create a new list containing the supplied elements
    * peek           Return the last element from the list
    * pop            Remove the last element from the list
    * push           Push an element to the end of the list
    * remove         Remove the element at the specified index
    * truncate       Remove all elements past the specified index
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and dictionaries:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; d := (dict string integer):new
crush&amp;gt; d[&quot;foo&quot;] = 42
crush&amp;gt; d[&quot;foo&quot;]
42
crush&amp;gt; help d
type dict string integer

    A mutable mapping from one set of values to another

    * __call_type__  Returns a dict type with the specifiec key and value types
    * __getitem__    Return the value the specified key is mapped to
    * __setitem__    Create a new mapping or replace an existing one
    * clear          Remove all mappings from this dict
    * clone          Create a new dict with the same st of mappings as this one
    * empty          True if there are no mappings in the dict
    * len            The number of mappings in the dict
    * new            Construct a new dict
    * remove         Remove a mapping from the dict
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Time&lt;/h3&gt;
&lt;p&gt;Crush has two data types for dealing with time: &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; start := time:now
crush&amp;gt; something_that_takes_a_lot_of_time
crush&amp;gt; end := time:now
crush&amp;gt; echo (&quot;We spent {} on the thing&quot;:format end - start)
4:06
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The mathematical operators that make sense are defined for &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt;. Subtracting one &lt;code&gt;time&lt;/code&gt; from another results in a &lt;code&gt;duration&lt;/code&gt;. Adding two &lt;code&gt;duration&lt;/code&gt; results in a &lt;code&gt;duration&lt;/code&gt;. Multiplying or dividing a &lt;code&gt;duration&lt;/code&gt; by a &lt;code&gt;integer&lt;/code&gt; results in a &lt;code&gt;duration&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Materialized data&lt;/h3&gt;
&lt;p&gt;The output of many commands is a table stream, i.e. a streaming data structure consisting of rows with identical structure. Some commands, like &lt;code&gt;cat&lt;/code&gt; instead output a binary stream.&lt;/p&gt;
&lt;p&gt;These streams can not be rewound and can only be consumed once. This is sometimes vital, as it means that one can work on data sets larger than your computers memory, and even infinite data sets.&lt;/p&gt;
&lt;p&gt;But sometimes, streaming data sets are inconvenient, especially if one wants to use the same dataset twice.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; files := ls
crush&amp;gt; files
user         size  modified                  type      file
liljencrantz  1307 2020-03-26 01:08:45 +0100 file      ideas
liljencrantz  4096 2019-11-22 21:56:30 +0100 directory target
liljencrantz  4096 2020-03-27 09:18:25 +0100 directory tests
liljencrantz 95328 2020-03-24 17:20:00 +0100 file      Cargo.lock
liljencrantz  4096 2020-02-15 00:12:18 +0100 directory example_data
liljencrantz    31 2019-10-03 13:43:12 +0200 file      .gitignore
liljencrantz 13355 2020-03-29 03:05:16 +0200 file      README.md
liljencrantz  4096 2020-03-27 11:35:25 +0100 directory src
liljencrantz   479 2020-03-24 17:20:00 +0100 file      Cargo.toml
liljencrantz  4096 2020-03-29 01:29:52 +0100 directory .git
liljencrantz  8382 2020-03-29 00:54:13 +0100 file      todo
liljencrantz    75 2020-03-07 17:09:15 +0100 file      build.rs
liljencrantz   711 2019-10-03 14:19:46 +0200 file      crush.iml
crush&amp;gt; files
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Notice how there is no output the second time &lt;code&gt;files&lt;/code&gt; is displayed, because the table_stream has already been consumed.&lt;/p&gt;
&lt;p&gt;Enter the materialize command, which takes any value and recursively converts all transient components into an equivalent but fully in-memory form.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; materialized_files := (ls|materialize)
crush&amp;gt; materialized_files
user         size  modified                  type      file
liljencrantz  1307 2020-03-26 01:08:45 +0100 file      ideas
liljencrantz  4096 2019-11-22 21:56:30 +0100 directory target
liljencrantz  4096 2020-03-27 09:18:25 +0100 directory tests
liljencrantz 95328 2020-03-24 17:20:00 +0100 file      Cargo.lock
liljencrantz  4096 2020-02-15 00:12:18 +0100 directory example_data
liljencrantz    31 2019-10-03 13:43:12 +0200 file      .gitignore
liljencrantz 14420 2020-03-29 03:06:02 +0200 file      README.md
liljencrantz  4096 2020-03-27 11:35:25 +0100 directory src
liljencrantz   479 2020-03-24 17:20:00 +0100 file      Cargo.toml
liljencrantz  4096 2020-03-29 01:29:52 +0100 directory .git
liljencrantz  8382 2020-03-29 00:54:13 +0100 file      todo
liljencrantz    75 2020-03-07 17:09:15 +0100 file      build.rs
liljencrantz   711 2019-10-03 14:19:46 +0200 file      crush.iml
crush&amp;gt; materialized_files
user         size  modified                  type      file
liljencrantz  1307 2020-03-26 01:08:45 +0100 file      ideas
liljencrantz  4096 2019-11-22 21:56:30 +0100 directory target
liljencrantz  4096 2020-03-27 09:18:25 +0100 directory tests
liljencrantz 95328 2020-03-24 17:20:00 +0100 file      Cargo.lock
liljencrantz  4096 2020-02-15 00:12:18 +0100 directory example_data
liljencrantz    31 2019-10-03 13:43:12 +0200 file      .gitignore
liljencrantz 14420 2020-03-29 03:06:02 +0200 file      README.md
liljencrantz  4096 2020-03-27 11:35:25 +0100 directory src
liljencrantz   479 2020-03-24 17:20:00 +0100 file      Cargo.toml
liljencrantz  4096 2020-03-29 01:29:52 +0100 directory .git
liljencrantz  8382 2020-03-29 00:54:13 +0100 file      todo
liljencrantz    75 2020-03-07 17:09:15 +0100 file      build.rs
liljencrantz   711 2019-10-03 14:19:46 +0200 file      crush.iml
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When the &lt;code&gt;table_stream&lt;/code&gt; is materialized into a &lt;code&gt;table&lt;/code&gt;, it can be displayed multiple times.&lt;/p&gt;
&lt;h3&gt;Flow control&lt;/h3&gt;
&lt;p&gt;Of course Crush has an &lt;code&gt;if&lt;/code&gt; command, as well as &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; and &lt;code&gt;loop&lt;/code&gt; loops, that can be controlled using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; help if
if condition:bool if-clause:command [else-clause:command]

    Conditionally execute a command once.

    If the condition is true, the if-clause is executed. Otherwise, the else-clause
    (if specified) is executed.

    Example:

    if (./some_file:stat):is_file {echo &quot;It's a file!&quot;} {echo &quot;It's not a file!&quot;}


for [name=]iterable:(table_stream|table|dict|list) body:command

    Execute body once for every element in iterable.

    Example:

    for (seq) {
        echo (&quot;Lap {}&quot;:format value)
    }
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Calling external commands&lt;/h3&gt;
&lt;p&gt;Obviously, one needs to sometimes call out to external commands. Currently, the functionality for doing so in Crush is somewhat primitive. If an internal command of a given name does not exist, Crush looks for external commands, and if one is found, it is used. But Crush does not hand over the tty or emulate a tty, so interactive terminal programs do not work, and commands that prettify their output with escape sequences may fail.&lt;/p&gt;
&lt;p&gt;This part of Crush should be considered a proof of concept, but still, most non-interactive commands work as expected:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;crush&amp;gt; whoami
liljencrantz
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Crush features several shortcuts to make working with external commands easier.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Firstly, subcommands like &lt;code&gt;git status&lt;/code&gt; are mapped into method calls like &lt;code&gt;git:status&lt;/code&gt;. That way you do not have to quote the subcommand name, e.g. &lt;code&gt;git &quot;status&quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Secondly, named arguments are transparently translated into options. Single character argument names are turned into options with a single hyphen, and multi-character argument names are turned into GNU style long options with two hyphens, e.g. &lt;code&gt;git:commit m=&quot;hello&quot;&lt;/code&gt; is converted into &lt;code&gt;git commit -m &quot;hello&quot;&lt;/code&gt; and &lt;code&gt;git:commit message=&quot;hello&quot;&lt;/code&gt; is converted into &lt;code&gt;git commit --message &quot;hello&quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Thirdly, named arguments with a value of boolean true are simply turned into options without a value, so for example &lt;code&gt;git:commit --a --append&lt;/code&gt; (or &lt;code&gt;git:commit a=true append=true&lt;/code&gt; for that matter) is converted into &lt;code&gt;git commit -a --append&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Further work is required when it comes to job control, terminal emulation and various other integration points.&lt;/p&gt;
&lt;h3&gt;Executing remote commands&lt;/h3&gt;
&lt;p&gt;To run a closure on a remote host, use the &lt;code&gt;remote:exec&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;remote:exec {uptime} &quot;example.com&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The closure will be serialized, transferred to the remote host using ssh, deserialized, and executed on the remote host (the crush shell must be in the default path on the remote host). Once the command has been executed and the output of the closure is serialized, transferred, deserialized on the local machine and used as the output of the &lt;code&gt;remote:exec&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;To run a closure on multiple remote hosts, use &lt;code&gt;remote:pexec&lt;/code&gt; instead.&lt;/p&gt;
&lt;h3&gt;Creating custom types&lt;/h3&gt;
&lt;p&gt;You can create custom types in Crush, by using the class command:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Point := (class)

Point:__init__ = {
    |x:float y:float|
    this:x = x
    this:y = y
}

Point:len = {
    ||
    math:sqrt this:x*this:x + this:y*this:y
}

Point:__add__ = {
    |other|
    Point:new x=(this:x + other:x) y=(this:y + other:y)        
}

p := (Point:new x=1.0 y=2.0)
p:len
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Crush supports single inheritance (by passing in the parent to the class command). The class command will create a new struct, that contains a method named &lt;code&gt;new&lt;/code&gt;. When called, &lt;code&gt;new&lt;/code&gt; will create a new instance of the class. If the &lt;code&gt;__init__&lt;/code&gt; method is defined, &lt;code&gt;new&lt;/code&gt; will call it, and pass on any parameters to it.&lt;/p&gt;
&lt;p&gt;Add methods by adding them to the class, add member variables by adding them to the instance (&lt;code&gt;this&lt;/code&gt;) in &lt;code&gt;__init__&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Similarity to PowerShell&lt;/h2&gt;
&lt;p&gt;Crush shares the majority of its design goals with PowerShell. I consider PowerShell one of the coolest and most interesting innovations to ever come out of Microsoft. That said, I've found using PowerShell in practice to often feel clunky and annoying, especially for interactive use. I also feel that tying a shell to COM objects is a poor fit.&lt;/p&gt;
&lt;p&gt;I wanted to do something similar but with a more streamlined syntax, and with what I felt was a more suitable type system.&lt;/p&gt;
&lt;h2&gt;Similarity to Nushell&lt;/h2&gt;
&lt;p&gt;On the surface, Crush looks identical to nushell, but less polished. Crush lacks syntax highlighting, tab completion and has a worse screen rendering. But that is because the focus of Crush right now is to create a well defined, powerful and convenient language that supports things like arithmetic operations, closures, loops and flow control while remaining useful for interactive use.&lt;/p&gt;
&lt;h3&gt;Future work&lt;/h3&gt;
&lt;p&gt;There are plenty of langage ideas waiting to be tried out. Pattern matching and error handling are among the most obvious. Also, the error handling in Crush itself is currently very rudimentary.&lt;/p&gt;
&lt;h2&gt;About the codebase&lt;/h2&gt;
&lt;p&gt;I am teaching myself rust by writing Crush. I still have plenty to learn. :-)&lt;/p&gt;
&lt;h2&gt;Building and installing Crush&lt;/h2&gt;
&lt;p&gt;Crush should work on any modern Unix system. Install rust,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;clone this repository,&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;git clone https://github.com/liljencrantz/crush.git
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and run&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;cd crush; cargo build
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;and you should have a working binary to try out.&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
</description>
<pubDate>Fri, 07 Aug 2020 06:35:57 +0000</pubDate>
<dc:creator>robin_reala</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/212675?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>liljencrantz/crush</og:title>
<og:url>https://github.com/liljencrantz/crush</og:url>
<og:description>Crush is an attempt to make a command line shell that is also a powerful modern programming language. - liljencrantz/crush</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/liljencrantz/crush</dc:identifier>
</item>
<item>
<title>Trying to build the ultimate Raspberry Pi computer – Zero Terminal V3</title>
<link>https://n-o-d-e.net/zeroterminal3.html</link>
<guid isPermaLink="true" >https://n-o-d-e.net/zeroterminal3.html</guid>
<description>&lt;p&gt;Here's another iteration on the Zero Terminal projects I've been working on for a few years. For those of you who haven't seen them, I've been trying to design the most usable all in one Pi Zero computer out there.&lt;/p&gt;
&lt;p&gt;This version departs a little from the previous ones, as it is more focused on modularity, and forgoes a keyboard as standard, though it is possible to add one, as I'll show you in a bit. The goal here was to create something very versatile, allowing for all sorts of use cases to unlock the Zero's potential. Anyways, let's take a look at it.&lt;/p&gt;
&lt;p&gt;Your browser does not support the video tag.&lt;/p&gt;
&lt;p class=&quot;description&quot;&gt;- &lt;a href=&quot;https://youtu.be/wiJqUWfR90I&quot; target=&quot;_blank&quot;&gt;Youtube Mirror&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p class=&quot;subtitle&quot;&gt;DESIGN&lt;/p&gt;
&lt;p&gt;The first thing you'll notice is that the device looks a little like a fat smartphone. That's because the entire thing is basically designed around the Waveshare AMOLED 5.5&quot; 1080p touchscreen (https://www.waveshare.com/5.5inch-HDMI-AMOLED.htm).&lt;/p&gt;
&lt;p&gt;This thing was originally designed for the Raspberry Pi's 3 and 4, but I created a bunch of custom adaptors that let you hook up a Pi Zero instead. More on that in a minute.&lt;/p&gt;
&lt;p&gt;Around the outside, you'll see various ports and buttons, including a full size USB 2.0 port, micro SD socket for the operating system, micro USB for charging and a power switch.&lt;/p&gt;
&lt;p&gt;On the side there is a headphone jack, and 3 programmable buttons hooked up to the Zeros GPIO pins. You could set up all sorts of functions for these, like rotating the screen, volume up and down, or launching other custom scripts and applications with a single press.&lt;/p&gt;
&lt;p&gt;On the top end is another button which turns the display off and on, helping stretch out the 1200mAh lipo battery life, and also a grill hiding a little speaker behind it.&lt;/p&gt;
&lt;p&gt;The back of the device is where all the potential lies. This includes 2 40pin sockets which connect to both the GPIO pins, video out, camera connector, 2x USB ports, power indicators and more. The idea is to allow people to create and add custom backpacks to change the functionality, depending on their needs.&lt;/p&gt;
&lt;p class=&quot;subtitle&quot;&gt;INTERNALS&lt;/p&gt;
&lt;p&gt;In order to connect the Zero to the display in the smallest possible space, I created a main PCB, and a few smaller adaptor PCBs.&lt;/p&gt;
&lt;p&gt;The Zero itself is screwed onto the board and soldered directly to it via the GPIO pins. This main board contains a USB hub, power circuit, audio amp, speaker, buttons, headphone jack, and even a vibration motor for custom notifications.&lt;/p&gt;
&lt;p&gt;There's a micro SD card board plugged into the Zero which extends the card socket, and also doubles as a frame for the other ports at the bottom of the device.&lt;/p&gt;
&lt;p&gt;The Waveshare display already has some mounting screws, so securing the main board is easy. There's a little header section to connect the display to the main board, and you simply screw everything together. I included 6 threaded inserts onto this board to make attaching different cases simple too.&lt;/p&gt;
&lt;p&gt;The Zero only has 1 USB port as standard, so I designed a little USB hub circuit on the main board, using the simple FE1.1S chip. This splits the USB port into 4 separate streams, and is good enough for lower consumption stuff like mice and keyboards, as well as the displays touchscreen capability. You'd probably need to hook up external 5v lines for more power hungry peripherals.&lt;/p&gt;
&lt;p&gt;I'm particularly pleased with the HDMI adaptor, which connects the full size HDMI port on the display to the mini HDMI port of the Zero. I was wracking my brains for a long time on how to connect these in the smallest possible way, and it turns out using two thin PCBs sandwiched together allows this, since you can solder to both the HDMI-A plug component which takes a 1.6mm PCB, and the smaller Mini HDMI plug, which only takes up to 1mm boards.&lt;/p&gt;
&lt;p&gt;The power section is something I had trouble with. It's based on the Powerboost 1000c design, and was supposed to fit directly onto the main board, but a couple of the small ICs where too fiddly for me to hand solder and I damaged them before making this video. I would have just included the Powerboost board itself, but unfortunately there's not enough room. Instead I used a cheap generic charge boost board, which is fine for this prototype, but doesn't have all the extra features such as low battery indicators, and a better power switch circuit. That'll be for the next iteration.&lt;/p&gt;
&lt;p&gt;The Zero doesn't come with audio as standard, but thankfully the Waveshare display does have a built in headphone jack for audio through HDMI. So I wondered if I added an audio amp circuit to the pins on the headphone jack, whether I could power a small speaker, and yes it works. Unfortunately, not very well though, but it's good enough for stuff like bleeps and bloops for notification sounds.&lt;/p&gt;
&lt;p&gt;Audio through the headphones sounds great though, and I added my own jack in there so it's accessible from the outside of the case. This particular jack has a mechanical switch which defaults to the speakers, and automatically switches to headphones whenever the 3.5mm plug is inserted.&lt;/p&gt;
&lt;p class=&quot;subtitle&quot;&gt;ADD-ONS&lt;/p&gt;
&lt;p&gt;As I previously mentioned, I think the backpack feature of this is where you really see the potential of the device.&lt;/p&gt;
&lt;p&gt;I can imagine all sorts of different backpacks that could transform the functionality of this. Things like radio transceivers, extra network interfaces, games controllers, TV tuners, solar panels, and simple stands are all easily doable.&lt;/p&gt;
&lt;p&gt;The cool thing is that since it's modular you can swap these on the fly to change the functionality, so say you could change between a keyboard &amp;amp; radio transceiver combo for a packet radio messenger, then replace that with a different operating system on the micro SD card, and add a game controller to turn it into a portable emulator.&lt;/p&gt;
&lt;p&gt;The first prototype backpack I have created is a slide-out keyboard. When you combine that with i3 window manager, you have quite the productive handheld Linux machine. Even though the Zero isn't the most powerful computer, you can still get a lot done through the terminal since it uses up a fraction of the resources that a GUI does.&lt;/p&gt;
&lt;p&gt;The design is based on the great mini (Pi)QWERTY keyboard by Bobricius on Hackaday (hackaday.io/project/158454), and uses a SAMD21 chip to turn it into a USB input device.&lt;/p&gt;
&lt;p&gt;It's made using 3 PCB layers. Firstly, the bottom, which contains the electronic components and keys, then a cover PCB which displays the key labels, then another board that connects all that to the terminal. The slide mechanism is made up of 3D printed supports and tiny screws, and while it does slide, it needs extra work to make it more robust. The bottom layer connects to the top using little spring loaded pins. I've also added a couple of LEDs you can toggle on and off when you're in low light. The final thing is surprisingly thin, at only a few millimetres deep.&lt;/p&gt;
&lt;p&gt;Although I think it looks good, I haven't gotten it working properly yet. I've talked to Bob about the design, and I think it's solid. The problem appears to be with the chip programmer I'm using to get the firmware onto it. It's one of the cheap ones, and seems to be giving me false verification messages. Anyways, you get the idea of how it could make the Zero Terminal a pretty handy little device.&lt;/p&gt;
&lt;p&gt;I also created another custom mini keyboard stand, this time using a salvaged Psion 5MX keyboard, which is still probably one of the best small keyboards ever designed. I used a premade PSION keyboard to USB adaptor that you can find on Tindie, and the thing is open source so you can make you're own too.&lt;/p&gt;
&lt;p&gt;It wouldn't be much of a stretch to go even further to develop a full adaptor case which would turn it into a Palmtop computer, with working hinge, and maybe a bigger secondary battery and USB hub.&lt;/p&gt;
&lt;p class=&quot;subtitle&quot;&gt;NEXT STEPS&lt;/p&gt;
&lt;p&gt;I have registered ZeroTerminal.org, which is currently redirecting to this page. Over the next year, as I update the design, I want to make a website to help build up the platform, showing people exactly how to make these, and showcasing all the backpacks and custom apps other users create.&lt;/p&gt;
&lt;p&gt;In the meantime I want to redo the main PCB, change up some components like the rubbish speaker, redesign the power circuit etc, maybe even experiment with using the Raspberry Pi Compute Module instead. Long term it'd be amazing to design a custom display board, then the entire device could be shrunken further, closer to smartphone size.&lt;/p&gt;
&lt;p&gt;Anyways, I hope you found this interesting. I know I have a lot to learn about all this kind of stuff, so any advice from experts is welcome. Please share this video around if you think others will like it. Thanks and I'll see you in the next video.&lt;/p&gt;
&lt;p&gt;--&lt;br /&gt;&lt;/p&gt;
This project first appeared in NODE Vol 02, our new indepedent 180 page zine, packed with all sorts of open hardware and decentralized software projects. Pick up a hard copy, or download for free from the zine page.
&lt;p&gt;&lt;a href=&quot;https://N-O-D-E.net/zine/&quot; target=&quot;_blank&quot;&gt;https://N-O-D-E.net/zine/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;--&lt;br /&gt;BY NODE&lt;/p&gt;
</description>
<pubDate>Fri, 07 Aug 2020 06:34:23 +0000</pubDate>
<dc:creator>Abishek_Muthian</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://n-o-d-e.net/zeroterminal3.html</dc:identifier>
</item>
</channel>
</rss>