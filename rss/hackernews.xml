<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The Efficiency-Destroying Magic of Tidying Up</title>
<link>https://florentcrivello.com/index.php/2019/09/04/the-efficiency-destroying-magic-of-tidying-up/</link>
<guid isPermaLink="true" >https://florentcrivello.com/index.php/2019/09/04/the-efficiency-destroying-magic-of-tidying-up/</guid>
<description>&lt;p&gt;In his seminal book &lt;em&gt;Seeing Like a State&lt;/em&gt;, James Scott describes what he calls “high modernists:” lovers of orders who mistake complexity for chaos, and rush to rearrange it from the ground up in a more centralized, orderly fashion. Scott argues that high modernists end up optimizing for a system’s &lt;em&gt;legibility&lt;/em&gt; from their perspective, at the expense of its performance from that of the user.&lt;/p&gt;
&lt;p&gt;Indeed, that love of order is above all else about appearances. Streets arranged in grids, people waiting in clean lines, cars running at the same speed… But everything that &lt;em&gt;looks good&lt;/em&gt; doesn’t necessarily &lt;em&gt;work well.&lt;/em&gt; In fact, those two traits are opposed more often than not: efficiency tends to look messy, and good looks tend to be inefficient.&lt;/p&gt;
&lt;img src=&quot;https://florentcrivello.com/wp-content/uploads/2019/09/image4.png&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;862&quot; class=&quot;size-full wp-image-386&quot;/&gt;Efficiency ain’t pretty
&lt;p&gt;This is because complex systems — like laws, cities, or corporate processes — are the products of a thousand factors, each pulling in a different direction. And even if each factor is tidy taken separately, things quickly get messy when they all merge together.&lt;/p&gt;
&lt;p&gt;The chaotic look of structural orderliness shouldn’t be so surprising. Intellectually, we do understand that appearances are misleading — things don’t have to look as they are, nor be as they look. But intuitively, we all remain hopeless slaves of appearances, no matter how often we were misled by them.&lt;/p&gt;
&lt;p&gt;This natural messiness of efficiency is demonstrated by recent advances in industrial design. When a God-level AI takes over in a science fiction book, it often remakes the world in its image: full of straight lines, smooth acceleration rates, and lots of chrome (AIs love that stuff). But as we start using algorithms to design things, we get results that look a lot more chaotic than that, confirming that our intuitive preference for “straight line” designs has nothing to do with performance — it just comes from our limited ability to reason about more complex solutions. Ironically, it’s us humans who think like robots.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The Wendelstein 7-X fusion device looks asymmetrical and messy, like it’s out of a bad sci-fi set. &lt;a href=&quot;https://t.co/Bx1jjsWYwS&quot;&gt;pic.twitter.com/Bx1jjsWYwS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Jo Liss (@jo_liss)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/jo_liss/status/674333643876225024?ref_src=twsrc%5Etfw&quot;&gt;December 8, 2015&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;London’s tube map only uses 45° angles to aid its human readers.&lt;/p&gt;
&lt;p&gt;Now can you see the humanness in mainboard design? &lt;a href=&quot;https://t.co/7giQJjI8iI&quot;&gt;pic.twitter.com/7giQJjI8iI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Jo Liss (@jo_liss)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/jo_liss/status/674407933539676160?ref_src=twsrc%5Etfw&quot;&gt;December 9, 2015&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://florentcrivello.com/wp-content/uploads/2019/09/null.jpeg&quot; width=&quot;624&quot; height=&quot;276&quot; alt=&quot;&quot; title=&quot;&quot;/&gt;An evolved antenna design, Hornby et al 2006. This is orderly — it’s straight antennae that really are messy.&lt;/p&gt;
&lt;p&gt;This is a messiness similar to that you’d find in nature — which makes sense, since both these algorithms and nature are optimizing for efficiency.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;I submit that we should look with suspicion at simple-looking systems. The physical world is like a river in which a thousand streams come rushing — it is &lt;em&gt;supposed&lt;/em&gt; to look messy.&lt;/p&gt;
&lt;p&gt;Again, this insight applies to any complex system. For example, a city can look as messy as an anthill. But really, it’s a beautiful equilibrium that evolved to satisfy a thousand competing constraints: topology, weather, people’s traditions, skills, wealth, preferences… Planners may make their maps look better when they use zoning to separate the city into business, residential, and commercial neighborhoods, but they also destroy a subtle, efficient balance. They forget that the only activity that goes on in any city is that of &lt;em&gt;people living their lives&lt;/em&gt;, which requires all the activities above — preferably in close proximity. Splitting a city into residential, commercial and business zones is like throwing dough, cheese and pepperoni into the different compartments of a bento box and calling it a pizza.&lt;/p&gt;
&lt;img src=&quot;https://florentcrivello.com/wp-content/uploads/2019/09/image2.png&quot; alt=&quot;&quot; width=&quot;1080&quot; height=&quot;957&quot; class=&quot;size-full wp-image-387&quot;/&gt;An urban planner’s dream pizza
&lt;p&gt;Speaking of pizza. One good example of an attempt to avoid the high modernist fallacy is Amazon’s “two pizza teams,” set up to run like small companies and encouraged to use the tools and processes that make sense at their level. The outcome can be messy — new Amazonians who come from more centralized companies often complain about the chaos there. But I, for one, would choose chaotic success over tidy failure any day.&lt;/p&gt;
&lt;p&gt;Interestingly, other managers often pick the latter. They’ll see a dozen teams, each using different project management software, and lament: “what a mess! No one even knows what everybody else is doing!” They’ll then resolve to “put some order in here,” by mandating every team uses a single company-wide tool. But teams had been using different tools for a reason. Maybe they’re in different businesses — for example, hardware and software groups have different needs. Or their members could just have different preferences, which matter too — people are more productive when they use tools they like! It can be okay to sacrifice a company’s productivity so as to increase the coordination between its parts — so long as one makes this compromise with their eyes wide open. Unfortunately, managers all too often look only at the upside of such changes, and ignore their downside.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;“Please clean up your room,” asks the mother. “Fool,” retorts the three-year-old with an eerily deep voice. “Can’t you see the beauty in my glorious chaos?”&lt;/p&gt;
&lt;p&gt;I’m not suggesting all chaos is good. But when you hear someone suggest we put some order into a system, there should at least be a red light flashing in your head. Before you touch anything, you should make sure that mess is not concealing a deep order, by answering the following questions:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;How much information is contained in the system’s current state? What constraints are expressing themselves through it?&lt;/strong&gt; For example, when throwing dice, where they land depends on how you threw them. You do lose this information when you take the dice and put them back into a box — and that’s probably fine. But in the case of a city, its structure is the function of all the factors mentioned above — most importantly, its people’s skills, means and preferences. When you use zoning to impose your arbitrary aesthetic upon people, you block them from shaping their environment so it fits their lives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;How old is the system? How malleable is it? How strong are the forces put on it?&lt;/strong&gt; The older a system, the more malleable or subject to strong forces, the least likely it is to be truly chaotic — and the more careful you should be when messing with it. That’s because its components had the time, ability and stimuli to order themselves into a stable configuration. Crystals are a good example of this. Take some randomly arranged molecules, keep them warm enough so that they remain mobile, and put them under high pressure for long enough, and they’ll spontaneously self-organize into one of the most orderly structures in the Universe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Finally: who is complaining about the chaos?&lt;/strong&gt; If outsiders complain, but people living inside the system seem happy with it, it probably means that the chaos is serving them right, and that it’s just foreign eyes who are unable to perceive its underlying order.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This is a special case of &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Chesterton%27s_fence&quot;&gt;Chesterton’s Fence&lt;/a&gt;, which states you should never take down a fence before knowing why it was put up. Here, I propose Scott’s Law: never put order in a system before you understand the structure underneath its chaos.&lt;/p&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sun, 17 Nov 2019 17:10:31 +0000</pubDate>
<dc:creator>cryptozeus</dc:creator>
<og:type>article</og:type>
<og:title>The Efficiency-Destroying Magic of Tidying Up</og:title>
<og:url>https://florentcrivello.com/index.php/2019/09/04/the-efficiency-destroying-magic-of-tidying-up/</og:url>
<og:description>In his seminal book Seeing Like a State, James Scott describes what he calls “high modernists:” lovers of orders who mistake complexity for chaos, and rush to rearrange it from the ground up in a m…</og:description>
<og:image>https://florentcrivello.com/wp-content/uploads/2019/09/image4.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://florentcrivello.com/index.php/2019/09/04/the-efficiency-destroying-magic-of-tidying-up/</dc:identifier>
</item>
<item>
<title>Writing userspace USB drivers for abandoned devices</title>
<link>https://blog.benjojo.co.uk/post/userspace-usb-drivers</link>
<guid isPermaLink="true" >https://blog.benjojo.co.uk/post/userspace-usb-drivers</guid>
<description>&lt;h3&gt;Nov 17 2019&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/HxOiDPsE83&quot; alt=&quot;A picture of some Epiphan VGA2USB LR&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I recently found some USB devices on eBay (Epiphan VGA2USB LR) that could take VGA as input and present the output as a webcam. Given that I was keen on the idea of not needing to lug out a VGA monitor ever again and there was claimed Linux support I took the risk and bought the whole job lot for about £20 (25 USD).&lt;/p&gt;
&lt;p&gt;When they arrived, I plugged one in under the expectation that it would come up as &lt;a href=&quot;https://en.wikipedia.org/wiki/USB_video_device_class&quot;&gt;USB UVC Devices&lt;/a&gt; but they did not. Was I missing something?&lt;/p&gt;
&lt;p&gt;After looking through the vendors site I discovered there was a custom driver required for them to work. As I normally live the easy life on Linux of never needing to pull in drivers because the distribution kernel I am using has them already, this was a reasonably novel concept.&lt;/p&gt;
&lt;p&gt;Sadly, it seems like driver support for the devices in question ended at Linux 4.9. Meaning none of my systems would run this device anymore (Debian 10 [Linux 4.19] or latest LTS Ubuntu [Linux 5.0])&lt;/p&gt;
&lt;p&gt;But surely this was something I could patch myself right? Surely the package files where actually just a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support&quot;&gt;DKMS package&lt;/a&gt; that built the driver from source code on demand like a lot of the out of tree drivers out there…&lt;/p&gt;
&lt;p&gt;Sadly. This was not the case.&lt;/p&gt;
&lt;p&gt;Inside the package is just a pre-compiled binary called &lt;code&gt;vga2usb.o&lt;/code&gt;. I started doing some basic investigations on how hard it might be to reverse engineer and found some interesting string table entries:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ strings vga2usb.ko | grep 'v2uco' | sort | uniq
v2ucom_autofirmware
v2ucom_autofirmware_ezusb
v2ucom_autofirmware_fpga
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Is this device actually an &lt;a href=&quot;https://en.wikipedia.org/wiki/Field-programmable_gate_array&quot;&gt;FPGA&lt;/a&gt;-on-a-stick? What would the process be to get something like that running even look like?&lt;/p&gt;
&lt;p&gt;Another both amusing and mildly alarming find was the strings for DSA private key parameters. This made me wonder if there was private key material inside this driver and what could be protected with it:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ strings vga2usb.ko | grep 'epiphan' | sort | uniq
epiphan_dsa_G
epiphan_dsa_P
epiphan_dsa_Q
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To observe the driver in its normal operating environment, I made a Debian 9 (the last supported release) VM, and did a &lt;a href=&quot;https://www.linux-kvm.org/page/USB_Host_Device_Assigned_to_Guest&quot;&gt;KVM USB Passthrough&lt;/a&gt; to give it direct access to the device. I then installed the driver and confirmed that it worked.&lt;/p&gt;
&lt;p&gt;After that, I wanted to see what the wire protocol looked like. I was hoping that the device sent raw (or close to raw frames) over the wire as this would make the task of writing a user space version of the driver easier.&lt;/p&gt;
&lt;p&gt;To do this, I loaded the &lt;code&gt;usbmon&lt;/code&gt; module on the VM’s host machine and used Wireshark to take a packet capture of the USB traffic to and from the device during startup and whilst capturing video.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/b4DO78cWI0&quot; alt=&quot;Wireshark IO graph of USB traffic over time&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I found that on device startup there was a large number of small packets to the device before the device could capture data. I assumed that this meant that the device was in fact as described above an FPGA based platform that had no persistent storage. Every time the device was plugged in the devices firmware would have to be “&lt;a href=&quot;https://web.archive.org/web/20191109230917/https://www.xilinx.com/html_docs/xilinx2018_1/SDK_Doc/SDK_concepts/concept_fpgabitstream.html&quot;&gt;bitstreamed&lt;/a&gt;” from the driver itself.&lt;/p&gt;
&lt;p&gt;I confirmed this by opening one of the units up:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/nZzz9nqMWu&quot; alt=&quot;The inside of a Epiphan VGA2USB LR&quot; /&gt;&lt;/p&gt;
&lt;table class=&quot;c11&quot;&gt;&lt;tbody readability=&quot;3&quot;&gt;&lt;tr class=&quot;c13&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;c14&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ISL98002CRZ-170 - Acting as an Analog to Digital Converter for the VGA signals&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;c13&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;c14&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c0&quot;&gt;XC6SLX16 - Xilinx Spartan 6 FPGA&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;c13&quot;&gt;&lt;td class=&quot;c9&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;c14&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c0&quot;&gt;64 MB of DDR3 RAM&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;c13&quot; readability=&quot;3&quot;&gt;&lt;td class=&quot;c12&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;

&lt;/td&gt;
&lt;td class=&quot;c14&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c0&quot;&gt;CY7C68013A - USB Controller / Frontend for the device&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Given that to “boot” this device I needed the bitstream to send to it, I got to work on the pre-compiled binaries to try to extract the bitstream/firmware. After running &lt;code&gt;binwalk -x&lt;/code&gt; and watching it find a few (zlib) compressed objects. I wrote a script that would search them for a known hex sequence and picked 3 bytes from the pcap that I knew were from the bitstreaming process to search for&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ bash scan.sh &quot;03 3f 55&quot;
trying 0.elf
trying 30020
trying 30020.zlib
trying 30020.zlib.decompressed
...
trying 84BB0
trying 84BB0.zlib
trying 84BB0.zlib.decompressed
trying AA240
trying AA240.zlib
trying AA240.zlib.decompressed
000288d0  07 2f 03 3f 55 50 7d 7c  00 00 00 00 00 00 00 00  |./.?UP}|........|
trying C6860
trying C6860.zlib
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;After decompressing the AA240.zlib file. I found that there was not enough data there to be the full bitstream. So I instead went down the route of extracting the firmware out of the USB packet capture.&lt;/p&gt;
&lt;p&gt;I found that while both &lt;a href=&quot;https://linux.die.net/man/1/tshark&quot;&gt;tshark&lt;/a&gt; and &lt;a href=&quot;https://linux.die.net/man/8/tcpdump&quot;&gt;tcpdump&lt;/a&gt; can read USB packets inside pcap files, they both would only dump bits of information in the capture. Since that each program had different parts of the puzzle, I wrote a &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/master/utils/tcpdump-to-arrays/main.go&quot;&gt;small program that would unify the output of both programs&lt;/a&gt; into &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/master/driver/usb-init.go&quot;&gt;go structs so they could be replayed back to the device&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point I noticed that bootstrapping comes in two stages, first the USB controller and then for the FPGA itself.&lt;/p&gt;
&lt;p&gt;For at least a few days I was stuck on an issue where it would appear the whole bitstream would upload. But the device would not start up, despite it seeming like the packet captures between the real driver and userspace one looking identical.&lt;/p&gt;
&lt;p&gt;This was eventually solved by combing through the pcap paying attention to the time it took to respond to each packet and noticing a large difference in one particular packet’s timing:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/HH2MDBUaag&quot; alt=&quot;Timing difference shown between two pcaps in wireshark&quot; /&gt;&lt;/p&gt;
&lt;p&gt;It turned out a manually entered &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/commit/3cbadd1de1a376f057495335276aa0f54d662ab8&quot;&gt;typo&lt;/a&gt; caused an USB control write to go to the wrong area of a device. Serves me right for manually entering a value in…&lt;/p&gt;
&lt;p&gt;Regardless, I now had a green blinking led on the device! A massive achievement!&lt;/p&gt;
Your browser does not support H.264 HTML5 video.
&lt;p&gt;Since it was relatively trivial to replicate the same packets that seemed to start the data streaming, I was able to write up a USB Bulk transfer endpoint and have data being dumped to disk in no time!&lt;/p&gt;
&lt;p&gt;This is where the real challenge started. Because after analysis it appeared that the data was not obviously encoded in any way.&lt;/p&gt;
&lt;p&gt;To start with, I used &lt;a href=&quot;https://perf.wiki.kernel.org/index.php/Main_Page&quot;&gt;perf&lt;/a&gt; to get a general view of what the driver stack traces looked like while it was running:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/E1SquxvWDr&quot; alt=&quot;perf stack trace from inside the driver&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Whilst I made progress with being able to hook functions that had frame data in them, I still didn’t get any closer to figuring out the encoding of the image data itself.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/vCCff3iKXC&quot; alt=&quot;ffmpeg running while showing a kprobe trace running at the same rate&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I did try the &lt;a href=&quot;https://ghidra-sre.org/&quot;&gt;NSA’s Ghidra&lt;/a&gt; to get a better idea of what was going on inside of the real driver:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/1UXf46dMDW&quot; alt=&quot;a sample of some of the decompiled C from ghidra&quot; /&gt;&lt;/p&gt;
&lt;p&gt;While Ghidra is incredible (this was my first time using it compared to IDA Pro) it still wasn’t quite good enough to reasonably help me understand the driver. I needed another path of investigation if I was going to reverse engineer this.&lt;/p&gt;
&lt;p&gt;I decided to provision a Windows 7 VM and check if the Windows driver was doing anything different, I also noticed during that time that there was a SDK for the devices. One of the tools ended up being of particular interest:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PS&amp;gt; ls

    Directory: epiphan_sdk-3.30.3.0007\epiphan\bin

Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---        10/26/2019  10:57 AM     528384 frmgrab.dll
-a---        10/27/2019   5:41 PM    1449548 out.aw
-a---        10/26/2019  10:57 AM     245760 v2u.exe
-a---        10/26/2019  10:57 AM      94208 v2u_avi.exe
-a---        10/26/2019  10:57 AM     102400 v2u_dec.exe
-a---        10/26/2019  10:57 AM     106496 v2u_dshow.exe
-a---        10/26/2019  10:57 AM     176128 v2u_ds_decoder.ax
-a---        10/26/2019  10:57 AM      90112 v2u_edid.exe
-a---        10/26/2019  10:57 AM      73728 v2u_kvm.exe
-a---        10/26/2019  10:57 AM      77824 v2u_libdec.dll

PS&amp;gt; .\v2u_dec.exe
Usage:
      v2u_dec &amp;lt;number of frames&amp;gt; [format] [compression level] &amp;lt;filename&amp;gt;
               - sets compression level [1..5],
               - captures and saves compressed frames to a file
      v2u_dec x [format] &amp;lt;filename&amp;gt;
               - decompresses frames from the file to separate BMP files

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This tool let you fire “one shot” captures, noting that in the source it didn’t apply compression to the frames so that the output can be processed on a faster machine later. This was practically perfect, and I replicated the USB packet sequence to obtain these uncompressed blobs, and looking at the byte counts, it matched with getting around 3 bytes (RGB) per pixel!&lt;/p&gt;
&lt;p&gt;Initial processing of these images (just taking the output and writing it as RGB pixels) resulted in something roughly inspired by the input I was giving to the device over VGA:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/b906ft5sko&quot; alt=&quot;The mess that has some resembalnce to the input&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After some more debugging with a hex editor, I discovered there was some kind of marker every 1028 bytes, it took a slightly embarrassing amount of time to write a watertight filter for that, On the other hand I ended up producing some modern art in the process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/rFq7xsP1mG&quot; alt=&quot;Is it a programming error or modern brand art, who knows&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After realising that the tilt/sheer in the image was caused by me skipping and carrying over a pixel on every line (x=799 != x=800), I finally ended up with an image that was almost spot on apart from the colour:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/TDJA6sSD2r&quot; alt=&quot;A very orange or pink AB test pattern&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Initially I thought this might have been a calibration thing, caused because I took some sample data when the VGA input was stuck on a solid colour, in order to fix this I built a new test image that would try to smoke these issues out, in hindsight I should have used something like a &lt;a href=&quot;https://en.wikipedia.org/wiki/Philips_PM5544&quot;&gt;Philips PM5544 test card&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/gkkoEwa84M&quot; alt=&quot;The test card I made&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After loading this image on to the VGA producing laptop, I ended up with an output of:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/Hheephm37g&quot; alt=&quot;The test card before correction&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At this point I had a flashback to some 3d rendering/shader work I did long ago. This looked a lot like &lt;a href=&quot;https://en.wikipedia.org/wiki/YUV&quot;&gt;YUV colour&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I ended up reading up on YUV and remembered during my reverse engineering of the official kernel driver I’d found if I set a breakpoint on a function called &lt;code&gt;v2ucom_convertI420toBGR24&lt;/code&gt; the system would hang without the ability to resume. So maybe the input was in I420 encoding (of &lt;code&gt;-pix_fmt yuv420p&lt;/code&gt; fame) and the expected output was Blue Green and Red as 8 bit bytes?&lt;/p&gt;
&lt;p&gt;After using Go’s built in &lt;a href=&quot;https://golang.org/pkg/image/color/#YCbCrToRGB&quot;&gt;YCbCrToRGB&lt;/a&gt; the image suddenly looked much closer to the original.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/Wph3BCuLLY&quot; alt=&quot;yay, a perfectly coded test card&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We did it! Despite the “WIP” quality we were able to do 7 FPS. Honestly, for me that was good enough, since my use for these are as an emergency VGA screen rather than anything else.&lt;/p&gt;
&lt;p&gt;So now we know this device well enough to explain how to operate it from a cold boot:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You need to &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/78951fb0131b0dec4c1cec42d31007693f813adf/driver/main.go#L65-L91&quot;&gt;initialise the USB controller&lt;/a&gt;. I assume based on the size of information, this is actually uploading code to the USB controller&lt;/li&gt;
&lt;li&gt;When you’ve done the USB upload, the device will disconnect from the USB bus, and come back a moment later, with only a single USB endpoint.&lt;/li&gt;
&lt;li&gt;You can then start &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/78951fb0131b0dec4c1cec42d31007693f813adf/driver/main.go#L105-L128&quot;&gt;sending the FPGA bitstream&lt;/a&gt;, one 64 byte USB control packet at a time.&lt;/li&gt;
&lt;li&gt;Once you are finished, the LED on the device will start blinking green. At this point you can send what appears to be a &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/78951fb0131b0dec4c1cec42d31007693f813adf/driver/main.go#L145-L166&quot;&gt;parameter sequence&lt;/a&gt; (overscan and other properties)&lt;/li&gt;
&lt;li&gt;You can then &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/blob/a747a9cde3c00b317c58a5d08d41322c6381894c/driver/main.go#L208-L218&quot;&gt;fire a single control packet to get a frame&lt;/a&gt;, the control packet has the resolution embedded in it. If you use a 4:3 request packet on a widescreen input you will often end up with a corrupted input.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;To make use as easy as possible, I ended up rigging up a small web server inside the driver to make it super easy to use in a rush. Thanks to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder&quot;&gt;MediaRecorder API&lt;/a&gt; in browsers, it also allows for an easy way to record the output of the screen to a video file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.benjojo.co.uk/asset/F8IH6iBgxA&quot; alt=&quot;Example liveview page&quot; /&gt;&lt;/p&gt;
&lt;p&gt;As I’m sure a lot of people can relate regarding experimental code; I can’t say I’m proud of the code quality. But it’s likely in the state where it works well enough for me to use.&lt;/p&gt;
&lt;p&gt;You can find the code for this (and pre-built versions for Linux and OSX) on github: &lt;a href=&quot;https://github.com/benjojo/userspace-vga2usb/&quot;&gt;https://github.com/benjojo/userspace-vga2usb/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even if this is never used by anyone else, this was a hell of a roller coaster in USB protocol details, kernel debugging/module reverse engineering, and general video format decoding! If you liked this kind of stuff, you may like &lt;a href=&quot;https://blog.benjojo.co.uk/&quot;&gt;the rest of the blog&lt;/a&gt;. If you want to stay up to date with what I do next you can use my blog’s &lt;a href=&quot;https://blog.benjojo.co.uk/rss.xml&quot;&gt;RSS Feed&lt;/a&gt; or you can follow me on &lt;a href=&quot;https://twitter.com/benjojo12&quot;&gt;twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;
</description>
<pubDate>Sun, 17 Nov 2019 15:16:46 +0000</pubDate>
<dc:creator>signa11</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.benjojo.co.uk/post/userspace-usb-drivers</dc:identifier>
</item>
<item>
<title>The Power of Shower Thoughts</title>
<link>https://alexanderell.is/posts/trust-in-your-unconscious/</link>
<guid isPermaLink="true" >https://alexanderell.is/posts/trust-in-your-unconscious/</guid>
<description>&lt;p&gt;One of the best ways to learn and come up with new ideas is to focus intensely on a problem, then let your mind wander. I’ve enjoyed doing this when problem solving and learning, and recently I’ve been thinking about how weird it is to build trust in your unconscious to do the work for you, especially when it comes to technical work.&lt;/p&gt;&lt;h3 id=&quot;letting-your-mind-focus-and-letting-your-mind-wander&quot;&gt;Letting your mind focus and letting your mind wander&lt;/h3&gt;
&lt;p&gt;The first recommendation I have for anyone taking a meta look at learning is Barbara Oakley’s &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Learning How To Learn&lt;/em&gt;&lt;/a&gt;. I’ve found it to be a tremendous resource for building better study habits and learning skills, and recommending the course in various threads about learning is &lt;a href=&quot;https://hn.algolia.com/?dateRange=all&amp;amp;page=0&amp;amp;prefix=true&amp;amp;query=author%3Aotras%20learning%20how%20to%20learn&amp;amp;sort=byPopularity&amp;amp;type=comment&quot; target=&quot;_blank&quot;&gt;easily the majority of my comments on Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of my biggest takeaways from the course was the balance between actively focusing and letting your mind wander, or the &lt;em&gt;focused&lt;/em&gt; and &lt;em&gt;diffuse&lt;/em&gt; modes of thinking. The focused mode is for filling your mind with information, and the diffuse mode is great at processing that information, forming connections between existing concepts, and developing new ideas.&lt;/p&gt;
&lt;p&gt;In the course, one of the examples of consciously switching between the two modes to develop new ideas is the nap strategy employed by Salvadore Dali, where after a long period of focused work on a project, he would retire for a brief nap while holding a key in one hand above a plate. As he drifted off, his mind would wander, forming new thoughts. As soon as he entered proper sleep, his grip would relax and the key would fall to the plate, making enough noise to wake him and call him back to his work, the new ideas fresh in his head. Thomas Edison would also reportedly do the same with a ball bearing in his hand instead, harnessing the amorphous diffuse mode to come up with new ideas.&lt;/p&gt;
&lt;p&gt;In a recent New Yorker article, &lt;a href=&quot;https://www.newyorker.com/culture/annals-of-inquiry/the-myth-and-magic-of-generating-new-ideas&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;The Myth and Magic of Generating New Ideas&lt;/em&gt;&lt;/a&gt;, Dan Rockmore goes into detail about working as a mathematician and coming up with new insights while jogging or lifting weights after focusing hard on the problem: “it’s just a feeling of being free, of forgetting for a moment that we are bound by gravity and logic and convention, of letting the magic happen.”&lt;/p&gt;
&lt;h3 id=&quot;letting-the-magic-happen-in-practice&quot;&gt;Letting the magic happen in practice&lt;/h3&gt;
&lt;p&gt;I started paying more attention to this balance around the time when I was learning to program, and I’ve been able to use these two modes when learning how to program, learning in an academic environment, and solving problems that come up in my daily work.&lt;/p&gt;
&lt;p&gt;Working in software has graciously given me the opportunity to often have no immediate idea how to solve the problem in front of me. There’s a certain kind of cruel balance to the work; if it was exactly the same problem we were solving before, we’d just copy and paste what we did there. It’s usually not the same problem, so it usually needs a new solution.&lt;/p&gt;
&lt;p&gt;Sometimes after investigating a problem, thinking through the edge cases, and trying an attempt or two, the right solution isn’t immediately there. Sometimes you look at a problem and something comes to you, while other times, you draw a blank (and occasionally this is where the nagging imposter syndrome thoughts sneak out of their grungy caves). My usual next steps involve writing things down, trying some code, searching for similar problems, rubber-ducking, or asking a coworker.&lt;/p&gt;
&lt;p&gt;If none of this works, I’ve found that one of the best ways to move forward with a problem is to get away from the problem. If it’s halfway through the day, going for a walk around the block (importantly, without just going on my phone) or going for a swim will often let me realize something I missed that proves to be the key when I get back to my desk. If it’s close to the end of the day, heading home and letting the problem sit overnight is often enough to unblock me for the next morning. I’ve lost track of how many times I’ve realized a key insight on the train home, only 15 minutes of unfocused day dreaming since I was just looking intently at the code.&lt;/p&gt;
&lt;p&gt;I’ve found that this has also been very helpful for learning new concepts. Focusing on something new in a lecture or problem set and giving it some time to soak while my mind is floating seems to let the ideas settle better than if I was just reviewing my notes.&lt;/p&gt;
&lt;h3 id=&quot;my-own-recipe-for-striking-the-balance&quot;&gt;My own recipe for striking the balance&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Take some time to focus entirely on the problem&lt;/li&gt;
&lt;li&gt;Take some time to &lt;em&gt;not&lt;/em&gt; focus on &lt;em&gt;any&lt;/em&gt; problem&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;This sounds deceivingly simple, but like any advice you read in the “How To” books, the hard part isn’t understanding it’s a good idea. The hard part is actually applying it and seeing if it helps at all.&lt;/p&gt;
&lt;h3 id=&quot;ways-i-ve-been-able-to-let-my-mind-wander&quot;&gt;Ways I’ve been able to let my mind wander&lt;/h3&gt;
&lt;p&gt;There are a few ways in particular that I’ve found to be especially good at shifting my mind towards the diffuse mode.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Going for a walk &lt;strong&gt;without my phone&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Running&lt;/li&gt;
&lt;li&gt;Taking a nap&lt;/li&gt;
&lt;li&gt;Taking a shower&lt;/li&gt;
&lt;li&gt;Swimming&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;things-i-ve-found-don-t-work&quot;&gt;Things I’ve found don’t work&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Going on my phone mindlessly&lt;/li&gt;
&lt;li&gt;Playing video games&lt;/li&gt;
&lt;li&gt;Checking my email&lt;/li&gt;
&lt;li&gt;Refreshing Hacker News, Twitter, Instagram or (insert favorite site)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;It’s very easy to fool myself into thinking I’m harnessing this weird power when really I’m just noodling time away. These usually create some middle stage, with my brain distracted but not fully relaxed enough to sink into diffuse thinking. I’m also convinced that half of the reason shower thoughts are a thing is because it’s one of the only times that it’s especially hard to fill the time with a screen. Archimedes wasn’t on Instagram in the bath.&lt;/p&gt;
&lt;h3 id=&quot;learning-to-live-with-the-magic&quot;&gt;Learning to live with the magic&lt;/h3&gt;
&lt;p&gt;There’s a weird balance here between the highly logical and analytical skills and work involved in programming and the complete unknown that is the unconscious and how new ideas are generated. There’s something unsatisfying about resorting to a black box of neurons and brain matter that tosses different ideas around in the background without you, like a clothes dryer filled of ideas that’s tumbling while you sleep. When it’s done, you might be missing a sock, but somehow these nebulous thoughts came together into a solution.&lt;/p&gt;
&lt;p&gt;This uncertainty is made worse by the fact that you can’t tell &lt;em&gt;how&lt;/em&gt; your mind surfaced the idea. How did you come up with this solution? How do you know you’ll come up with a solution next time? The idea that you can trust yourself to come up with another idea in the future is strange.&lt;/p&gt;
&lt;p&gt;I’m learning to live with the idea that I can’t force it, but I can guide it. I’m more comfortable with the idea now, and more than anything, I’m just glad it works.&lt;/p&gt;
</description>
<pubDate>Sun, 17 Nov 2019 13:51:18 +0000</pubDate>
<dc:creator>otras</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://alexanderell.is/posts/trust-in-your-unconscious/</dc:identifier>
</item>
<item>
<title>Tetrachromats: people who see colors invisible to most of us</title>
<link>https://www.bbc.com/future/article/20140905-the-women-with-super-human-vision</link>
<guid isPermaLink="true" >https://www.bbc.com/future/article/20140905-the-women-with-super-human-vision</guid>
<description>&lt;p&gt;Enhanced sensitivity is not always a blessing, though. “The grocery store is a nightmare,” she says. “It’s like a trash pile of colour coming in at every angle.” That enhanced sensitivity might explain why she finds solace in plain white surfaces. “People find that extraordinary that white is my favourite colour, but it makes sense because it is so peaceful and restful for my eyes. There is still a lot of colour in it, but it’s not hurting me.”&lt;/p&gt;&lt;p&gt;Not all tetrachromats have striking abilities. Jameson has found that Antico’s perception outstrips other tetrochromats who have not trained artistically. “Concetta is the perfect storm for tetrachromacy because she has a huge amount of perceptual learning experience by working with colour on a daily basis.” If that is confirmed with further research, Antico hopes that she might be able to develop a training system to help all tetrachromatic children realise their potential.&lt;/p&gt;&lt;p&gt;Antico’s ultimate ambitions are even greater: to help us all see the world a little differently. Anecdotally, she says that a few of her students have started to notice some of the extra shades for themselves. “It’s as if a curtain is being lifted.” Of course, without the genes, we can never achieve full tetrachromatic vision – but perhaps people like Antico can point out some differences that are just perceptible to our eyes, with training.&lt;/p&gt;&lt;p&gt;This is a particularly poignant issue for Antico. Thanks to the random draw of the genetic lottery, the particular gene variant that gave rise to her amazing vision has meant that her own daughter is colour blind. Perhaps one day, further research could suggest new ways to help everyone – including her daughter – to make the most of their colour vision, however limited. “What if we tetrachromats can show the way to colour for people who are less fortunate than us?” she says. “I want everyone to realise how beautiful the world is.”&lt;/p&gt;&lt;p&gt;&lt;em&gt;Do you see colours differently? If you would like to comment on this article, or anything else you have seen on Future, head over to our &lt;/em&gt;&lt;a href=&quot;https://www.facebook.com/BBCFuture&quot;&gt;&lt;em&gt;Facebook&lt;/em&gt;&lt;/a&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://plus.google.com/u/0/b/107828172298602173375/107828172298602173375/posts&quot;&gt;&lt;em&gt;Google+&lt;/em&gt;&lt;/a&gt;&lt;em&gt; page, or message us on &lt;/em&gt;&lt;a href=&quot;https://twitter.com/BBC_Future&quot;&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;To read more about tetrachromacy research and Concetta Antico, visit: &lt;a href=&quot;http://www.tenthousandthings.info&quot;&gt;www.tenthousandthings.info&lt;/a&gt; and &lt;a href=&quot;http://www.concettaantico.com&quot;&gt;www.concettaantico.com&lt;/a&gt;.&lt;/p&gt;</description>
<pubDate>Sun, 17 Nov 2019 13:48:50 +0000</pubDate>
<dc:creator>jakub_g</dc:creator>
<og:title>The women with superhuman vision</og:title>
<og:type>article</og:type>
<og:url>https://www.bbc.com/future/article/20140905-the-women-with-super-human-vision</og:url>
<og:description>A tiny group of people can see ‘invisible’ colours that no-one else can perceive, discovers David Robson. How do they do it?</og:description>
<og:image>https://ichef.bbci.co.uk/wwfeatures/live/624_351/images/live/p0/26/33/p0263325.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/future/article/20140905-the-women-with-super-human-vision</dc:identifier>
</item>
<item>
<title>ICA asks ICANN to block .Org private equity deal in damning letter – DNW</title>
<link>https://domainnamewire.com/2019/11/15/ica-asks-icann-to-block-org-private-equity-deal-in-damning-letter/</link>
<guid isPermaLink="true" >https://domainnamewire.com/2019/11/15/ica-asks-icann-to-block-org-private-equity-deal-in-damning-letter/</guid>
<description>&lt;p&gt;I think it is extremely important to point out that PIR made many false and 100% inaccurate statements during the public comment process.&lt;br/&gt;One of Jon Nevett’s erroneous statements:&lt;/p&gt;
&lt;p&gt;**********&lt;br/&gt;“we cannot dramatically increase prices for .ORG, as we recognize and understand that both our .ORG end users and our .ORG registrars would turn away from .ORG.”&lt;br/&gt;**********&lt;/p&gt;
&lt;p&gt;This statement by PIR is unequivocally wrong. It is false. Jon is making the point that both .ORG end users and registrars would turn away from .ORG&lt;/p&gt;
&lt;p&gt;—With regards to .ORG end users or “registrants”: Registrants are, for all practical purposes, entrenched in their existing domain names. It is virtually impossible for an organization to switch away from .org to a different domain because they are locked-in to their existing website (search engine rankings, email systems, no way to recall offline media/advertising and printed business cards and all of the lost branding, goodwill, no way to update browser bookmarks, etc.) Furthermore, it is a tedious process to switch, as domain names are hardcoded into websites and databases – require planning and coordination across different departments, sometimes with third-party firms, and likely involve updating thousands or more lines of website code.&lt;/p&gt;
&lt;p&gt;In the few cases where registrants / companies have switched domain names, they are forced to maintain their existing domain name for search engine redirects and to make sure old emails continue to be received and don’t disappear into a black hole. There is no way to port or forward existing email without continuing to maintain the old domain registration (and paying required fees.) Registrants are simply not willing to risk of giving up access to future email correspondence that originate from older emails when users hit the “reply” button. Think of all of those emails you have sent out on the past – to hundreds of contacts – sitting in inboxes. All of those replies will not be delivered – and lost forever. Also, think about the security concerns – say a law firm were to switch domain names and its website – if the firm does not continue to renew its old domain name, it potentially has the risk of the next registrant receiving old sensitive legal emails.&lt;/p&gt;
&lt;p&gt;—With regards to “registrars”: The lock-in effect is enormous. Registrars have existing customers which registered .org domains (most from a very long time ago.) Each of these customers is required to renew domains annually to maintain ownership. If registrars stopped offering .org registration or renewal services – it would cause a major disruption with .org customers. Chaos! Customers would be forced to transfer their domains to another registrar. Many domains would be lost and many customers would be unaware that they have to take special action or they will lose their domain name. This is a frightening customer issue. Can you imagine millions of registrants scrambling to transfer their domains to another registrar? Most registrants have their domains on auto-renew – imagine the frustration when they find out that they lost their domain because it did not auto renew – because the registrar no longer offered .org registration services! Therefore, it is impossible for registrars to stop offering .ORG registration services. IMPOSSIBLE. Registrars are held hostage to registries as they are the sole sourced provider.&lt;/p&gt;
&lt;p&gt;PIR lied. .org has market power – and no alternatives exist. IN fact, every single registrar (other than few no longer in business) that offered .org registration services 5 years ago — continues to offer them today. Registrars are locked in. they can’t switch.&lt;/p&gt;
&lt;p&gt;Domain names are not portable at the registry level – thus, .org is a monopoly (or the soled sourced provider.)&lt;/p&gt;
&lt;p&gt;Furthermore, because of .ORG’s longstanding history as being established with non-profits and organizations and being one of the true legacy TLD’s that launched back in 1985, it has market power and is the ONLY feasible choice for non-profits and organizations. If organizations and charities use a domain extension other than .ORG – they will lack credibility and will lose that trust factor that is built into this extension. Registrars can’t turn away from this revenue source, as there are no practical substitutes. Registrars would permanently lose business from all non-profits and organizations throughout the world. The revenue is unreplaceable. It is not possible to no offer the third most popular domain extension in the world.&lt;/p&gt;
&lt;p&gt;Considering PIR entirely lied – and Jon pushed the false narrative that domain names are interchangeable – this has to be investigated.&lt;/p&gt;
&lt;p&gt;This is bad…..and we have a situation of market failure in the DNS.&lt;/p&gt;

</description>
<pubDate>Sun, 17 Nov 2019 13:13:22 +0000</pubDate>
<dc:creator>pierreneter</dc:creator>
<og:type>article</og:type>
<og:title>ICA asks ICANN to block .Org private equity deal in damning letter - Domain Name Wire | Domain Name News</og:title>
<og:description>Group calls out ICANN’s “terrible blunder”. Internet Commerce Association is asking domain overseer ICANN to block the sale of the .Org registry to Ethos Capital. It sent a damning letter (pdf) to ICANN today that states what many observers are thinking. In part: Surely you can now appreciate the terrible blunder that you have made. …</og:description>
<og:url>https://domainnamewire.com/2019/11/15/ica-asks-icann-to-block-org-private-equity-deal-in-damning-letter/</og:url>
<og:image>https://domainnamewire.com/wp-content/dot-org-1-300x201.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://domainnamewire.com/2019/11/15/ica-asks-icann-to-block-org-private-equity-deal-in-damning-letter/</dc:identifier>
</item>
<item>
<title>Firefox’s Fight for the Future of the Web</title>
<link>https://www.theguardian.com/technology/2019/nov/17/firefox-mozilla-fights-back-against-google-chrome-dominance-privacy-fears</link>
<guid isPermaLink="true" >https://www.theguardian.com/technology/2019/nov/17/firefox-mozilla-fights-back-against-google-chrome-dominance-privacy-fears</guid>
<description>&lt;p&gt;&lt;span class=&quot;drop-cap&quot;&gt;&lt;span class=&quot;drop-cap__inner&quot;&gt;W&lt;/span&gt;&lt;/span&gt;hy do you choose the browser you use? Maybe you think it loads pages more quickly. Maybe it’s made by the same firm as your device and you think it’s more compatible in some way. You prefer the graphics, perhaps, or it just happened to be pre-installed on your machine. Maybe you’re not even aware that there’s a choice.&lt;/p&gt;
&lt;p&gt;In reality, two-thirds of us have been funnelled into using Google’s Chrome, but browser choice also hides a contest about the openness of the web and how data is collected about users. One organisation that has always put such issues to the forefront is &lt;a href=&quot;https://www.theguardian.com/technology/mozilla&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Mozilla&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The not-for-profit foundation, which has as its aim the promotion of “openness, innovation and participation on the internet”, is best known for the &lt;a href=&quot;https://www.theguardian.com/technology/firefox&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Firefox&lt;/a&gt; browser, which it started developing in 2003. But the foundation was set up to shepherd the Mozilla organisation, which was formed in 1998 to oversee the development of a suite of web tools developed from another browser – Netscape Communicator.&lt;/p&gt;
&lt;p&gt;Communicator was Netscape’s fourth browser; the first came out in 1994, making it the first commercial web browser the world had ever seen.&lt;/p&gt;
&lt;p&gt;All of which makes Mozilla the web’s oldest company or at least “the oldest thing on the consumer internet”, as the foundation’s chair, Mitchell Baker, put it when I met her in London recently.&lt;/p&gt;
&lt;p&gt;Mozilla has had its ups and downs over the years: making a hugely popular web browser twice over, before succumbing each time to crushing competition from a well-funded tech behemoth. In the mid-90s, Netscape was killed by Microsoft with its &lt;a href=&quot;https://www.theguardian.com/technology/internet&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Internet&lt;/a&gt; Explorer. Then, in the late 2000s, a resurgent Firefox faced near-fatal competition from Google’s Chrome. Now, hopefully, it is on another upswing.&lt;/p&gt;
&lt;p&gt;“For the last – I don’t know – three or four years, I’d say Mozilla has been remaking the organisation itself,” Baker says. The Firefox browser, which had resisted the dominance of Microsoft’s Internet Explorer, found itself faced with a far hardier opponent in the shape of Google &lt;a href=&quot;https://www.theguardian.com/technology/chrome&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, the rise of the potentially monopolistic web platform also creates a new opportunity – in fact, an urgent new mission. Mozilla is no longer fighting for market share of its browser: it is fighting for the future of the web.&lt;/p&gt;
&lt;p&gt;“In the early days, we thought all companies and social networks cared about us and cared for us,” says Baker, speaking for web users as a whole. “And increasingly it has become clear that, no, you need someone looking out for you.”&lt;/p&gt;
&lt;p&gt;Chrome, the world’s most popular browser, is made by the world’s fourth-most valuable company, Alphabet, the parent company of Google. The world’s second-most popular browser, Safari, is made by the world’s second-most valuable company – Apple. &lt;a href=&quot;https://gs.statcounter.com/&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;In third place is Firefox&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Mitchell Baker, chair of the Mozilla Foundation.&quot; src=&quot;https://i.guim.co.uk/img/media/6761d051fdbec96de31c5811b98e71263e1f681e/0_173_5906_3544/master/5906.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=ebae2897b20c57a5abb7ab247d2fbd8e&quot;/&gt;&lt;/div&gt;

Mitchell Baker, chair of the Mozilla Foundation. Photograph: Horacio Villalobos/Corbis/Getty Images
&lt;p&gt;Baker’s pitch is that only Mozilla is motivated, first and foremost, to make using the web a pleasurable experience. Google’s main priority is to funnel user data into the enormous advertising engine that accounts for most of its revenue. Apple’s motivation is to ensure that customers continue to buy a new iPhone every couple of years and don’t switch to Android.&lt;/p&gt;
&lt;p&gt;“Google wants the web to go through Google,” Aral Balkan, the activist and founder of the internet democracy campaign site &lt;a href=&quot;https://ind.ie/&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;ind.ie&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/aral/status/1191283230894415872&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;tweeted earlier this month&lt;/a&gt;. “It already mostly does: with eyes on 70% to 80% of the web.”&lt;/p&gt;
&lt;p&gt;The company has been accused of using its control of Chrome and of &lt;a href=&quot;https://www.theguardian.com/technology/google&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Google&lt;/a&gt; search to warp the very fabric of the internet.&lt;/p&gt;
&lt;p&gt;Take “accelerated mobile pages”, or AMP. The project saw Google hosting websites on its own servers, warping the web addresses so they all began with “google.com”.&lt;/p&gt;
&lt;p&gt;Why would any independent company allow Google to do that? Because the page loads marginally faster on mobile devices – and in so doing pushes them higher up the Google search results. Today, even the &lt;em&gt;Guardian&lt;/em&gt; and &lt;em&gt;Observer’s&lt;/em&gt; mobile content is served this way.&lt;/p&gt;
&lt;p&gt;Baker’s concern about Google’s control of the web browser is that it leaves no one able to fight Google’s control of the web. It is perfectly possible to build a browser that prevents advertising companies from aggregating user data. But it is unlikely that any browser made by an advertising company would offer such a feature.&lt;/p&gt;
&lt;aside class=&quot;element element-pullquote element--supporting&quot;&gt;&lt;blockquote&gt;
&lt;p class=&quot;pullquote-paragraph&quot;&gt;If you go on Facebook and contribute a post, a like or whatever, you're giving information to Facebook&lt;/p&gt;
&lt;footer&gt;&lt;cite class=&quot;pullquote-cite&quot;&gt;Mitchell Baker, Mozilla&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;/aside&gt;&lt;p&gt;It’s not just Google that benefits. It may treat Facebook as a bitter rival, but both companies have a shared interest in limiting the ability of users to shape how the web works.&lt;/p&gt;
&lt;p&gt;“It’s clear that if you go on Facebook and contribute information in some way – a post, a like or whatever – you’re giving information to Facebook,” Baker says. “What’s not as obvious is that there are a lot of times when you’re on some other site, doing something unrelated and, behind the scenes, Facebook is still gathering information – especially if you’ve signed in with Facebook.”&lt;/p&gt;
&lt;p&gt;So Firefox now runs sites such as Facebook in “containers”, effectively hiving the social network off into its own little sandboxed world, where it can’t see what’s happening on other sites. Baker says: “It reduces Facebook’s ability to follow you around the web and track you when you’re not on Facebook and just living your life.”&lt;/p&gt;
&lt;p&gt;Baker insists solutions such as this are important, saying: “The dystopian future is a risk for all of us. For those of us who remember &lt;em&gt;Nineteen Eighty-Four&lt;/em&gt;, is that one possible future in front of us? For sure.”&lt;/p&gt;
&lt;p&gt;The fight takes place on several fronts and Mozilla is hoping to use its framing as “your pal on the internet” to branch out from being just a browser provider. (An email client, &lt;a href=&quot;https://www.thunderbird.net/en-US/&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Thunderbird&lt;/a&gt;, has survived alongside Firefox, but is demoted to the status of community project.)&lt;/p&gt;
&lt;p&gt;Mozilla has launched &lt;a href=&quot;https://monitor.firefox.com/&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Monitor&lt;/a&gt;, a data-breach reporting service; &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/lockwise/&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Lockwise&lt;/a&gt;, a password manager; and &lt;a href=&quot;https://send.firefox.com/?utm_source=www.mozilla.org&amp;amp;utm_medium=referral&amp;amp;utm_campaign=nav&amp;amp;utm_content=firefox&quot; title=&quot;&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;Send&lt;/a&gt;, a privacy-focused alternative to services such as WeSendit. It’s also beta-testing a VPN (virtual private network) service, which it hopes to market to privacy-conscious users.&lt;/p&gt;
&lt;p&gt;Such a suite is an impressive sales pitch to a certain type of user – one who hopes for a better outcome than the one Baker fears. She says: “One thing that we’ve learned from our past is that it’s hard to imagine a different future until you can somehow see or touch the promise of it. Before Firefox, everyone ‘knew’ what the internet was going to look like. And that was Microsoft.&lt;/p&gt;
&lt;p&gt;“It seems funny today – there’s a generation today who can’t imagine that – but until 2005, it was 100% known that Microsoft was going to control the internet.”&lt;/p&gt;
&lt;p&gt;If only it were so simple this time around. If Mozilla could be the David to Chrome’s Goliath, the company would have an easy pitch. But there is a third player in the mix: &lt;a href=&quot;https://www.theguardian.com/technology/apple&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Apple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the surface, the two companies share goals – and features. Where Firefox has “enhanced tracking protection”, Apple’s Safari browser has “intelligent tracking prevention”. Where Firefox takes a swipe at Google by swearing that by contrast it “protects your privacy in every product”, Apple’s Tim Cook knocks Facebook by saying: “Privacy to us is a human right, a civil liberty.”&lt;/p&gt;
&lt;p&gt;Those similarities make Apple harder for Firefox to square off against. Yet in some ways, it is the more dangerous competitor.&lt;/p&gt;
&lt;p&gt;For all the leverage that Google puts into making Chrome succeed, it leaves space for Firefox. Desktop computers can always download another browser. Android phones may be shipped out with Chrome pre-installed – a fact that has put Google in hot water with EU regulators – but those phones allow users to install Firefox instead. Chrome OS, Google’s operating system, which effectively wraps a thin layer around an always-open browser window, is more locked down, but ultimately just a thin slice of the market.&lt;/p&gt;
&lt;p&gt;Things are different in Apple’s section of the world. Macs remain a fairly open system, although the increasing focus on the Mac app store, which Firefox isn’t on, bodes ill for the browser’s future. And Apple’s iOS (mobile operating system) is an acknowledged disaster for Mozilla. Safari is the default and, while users can install other browsers, they come doubly hindered: they can never be set as the default, meaning any link clicked in other applications will open in Safari; and they must use Safari’s “rendering engine”, a technical limitation that means that even the browsers that Firefox does have on the platform are technically just fancy wrappers for Apple’s own browser, rather than full versions of the service that Mozilla has built over the decades.&lt;/p&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Apple’s boss Tim Cook has made the firm’s privacy features a selling point – which is tough for Mozilla.&quot; src=&quot;https://i.guim.co.uk/img/media/ba6e367f1c5a1ad26ddee73e6a2d18bbc0717631/532_403_3073_1845/master/3073.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=36408bb6c4b8f80e0bca9b06f6874c83&quot;/&gt;&lt;/div&gt;

Apple’s boss Tim Cook has made the firm’s privacy features a selling point – which is tough for Mozilla. Photograph: Jeff Chiu/AP
&lt;p&gt;“Apple’s stance is ‘you should trust us and we’re different and better,’” says Baker. “I believe that’s a serious commitment right now at Apple. And that works – as long as everything that you want and need is OK coming through Apple and you can pay for it all. But the minute there’s something heterogeneous, or there’s something that doesn’t fit with Apple, or there’s something new, then you’re out of luck.&lt;/p&gt;
&lt;p&gt;“Even if you do download a replacement, iOS drops you back into the default. I don’t know why that’s acceptable. Every link you open on a phone is the choice of the phone maker, even if you, as a user, want something else.&lt;/p&gt;
&lt;p&gt;“I don’t see Apple listening at all. We make a huge technical investment in this obscure layer, called the rendering engine, because it turns out that’s where there’s a lot of power. In some systems, you can see the powerful thing right up front. But often the real power of the system is under the hood. And that’s true of how you see content on the web. So we invest a lot in it and Apple simply prohibits it. We just can’t use that technology. So I don’t see that changing.”&lt;/p&gt;
&lt;p&gt;Ultimately, Firefox’s future is as much down to the decisions of a few regulators as it is about anything Mozilla can do. Baker won’t be drawn on regulatory discussions, other than to note that “it would certainly be helpful to be able to offer the product that you think does the most for people”.&lt;/p&gt;
&lt;p&gt;Investigations of abuse of monopoly positions continue on both sides of the Atlantic and the humble web browser is such an important engine of innovation and control that it seems likely that it will get drawn in to the fray.&lt;/p&gt;
&lt;p&gt;But before that, Mozilla as an organisation needs to make its own success. And being the scrappy underdog of Silicon Valley feels like a natural place for the team. The oldest thing on the internet didn’t get there by being unafraid of a few reinventions over the years. What’s another one under the belt?&lt;/p&gt;


</description>
<pubDate>Sun, 17 Nov 2019 10:25:28 +0000</pubDate>
<dc:creator>inception44</dc:creator>
<og:url>http://www.theguardian.com/technology/2019/nov/17/firefox-mozilla-fights-back-against-google-chrome-dominance-privacy-fears</og:url>
<og:description>With Google’s Chrome dominating the market, not-for-profit rival Mozilla is staking a comeback on its dedication to privacy</og:description>
<og:image>https://i.guim.co.uk/img/media/8393a12ba0fa753b63dd818c1da36c2f5080af0c/0_164_3500_2100/master/3500.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdG8tZGVmYXVsdC5wbmc&amp;enable=upscale&amp;s=a6d863302ad4f3065cba8e5486c161c8</og:image>
<og:type>article</og:type>
<og:title>Firefox’s fight for the future of the web</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/technology/2019/nov/17/firefox-mozilla-fights-back-against-google-chrome-dominance-privacy-fears</dc:identifier>
</item>
<item>
<title>Joplin – a note taking and to-do application with synchronization capabilities</title>
<link>https://github.com/laurent22/joplin</link>
<guid isPermaLink="true" >https://github.com/laurent22/joplin</guid>
<description>&lt;div class=&quot;Box-body&quot;&gt;
&lt;article class=&quot;markdown-body entry-content p-5&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=E8JMYD2LQ8MMA&amp;amp;lc=GB&amp;amp;item_name=Joplin+Development&amp;amp;currency_code=EUR&amp;amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/142909c516789466a83357895d7525f17a2fead4/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6261646765732f446f6e6174652d50617950616c2d677265656e2e737667&quot; alt=&quot;Donate&quot; data-canonical-src=&quot;https://joplinapp.org/images/badges/Donate-PayPal-green.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://www.patreon.com/joplin&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/a56312c33e135ff13b3230808afa86762f4c7327/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6261646765732f50617472656f6e2d42616467652e737667&quot; alt=&quot;Become a patron&quot; data-canonical-src=&quot;https://joplinapp.org/images/badges/Patreon-Badge.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in &lt;a href=&quot;https://github.com/laurent22/joplin#markdown&quot;&gt;Markdown format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Notes exported from Evernote via .enex files &lt;a href=&quot;https://github.com/laurent22/joplin#importing&quot;&gt;can be imported&lt;/a&gt; into Joplin, including the formatted content (which is converted to Markdown), resources (images, attachments, etc.) and complete metadata (geolocation, updated time, created time, etc.). Plain Markdown files can also be imported.&lt;/p&gt;
&lt;p&gt;The notes can be &lt;a href=&quot;https://github.com/laurent22/joplin#synchronisation&quot;&gt;synchronised&lt;/a&gt; with various cloud services including &lt;a href=&quot;https://nextcloud.com/&quot; rel=&quot;nofollow&quot;&gt;Nextcloud&lt;/a&gt;, Dropbox, OneDrive, WebDAV or the file system (for example with a network directory). When synchronising the notes, notebooks, tags and other metadata are saved to plain text files which can be easily inspected, backed up and moved around.&lt;/p&gt;
&lt;p&gt;The application is available for Windows, Linux, macOS, Android and iOS (the terminal app also works on FreeBSD). A &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt;, to save web pages and screenshots from your browser, is also available for &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/joplin-web-clipper/&quot; rel=&quot;nofollow&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://chrome.google.com/webstore/detail/joplin-web-clipper/alofnhikmmkdbbbgpnglcpdollgjjfek?hl=en-GB&quot; rel=&quot;nofollow&quot;&gt;Chrome&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/4f4603c9de2d8d9f6051628fbb5d91183046a471/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f416c6c436c69656e74732e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4f4603c9de2d8d9f6051628fbb5d91183046a471/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f416c6c436c69656e74732e6a7067&quot; data-canonical-src=&quot;https://joplinapp.org/images/AllClients.jpg&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Three types of applications are available: for the &lt;strong&gt;desktop&lt;/strong&gt; (Windows, macOS and Linux), for &lt;strong&gt;mobile&lt;/strong&gt; (Android and iOS) and for &lt;strong&gt;terminal&lt;/strong&gt; (Windows, macOS, Linux and FreeBSD). All applications have similar user interfaces and can synchronise with each other.&lt;/p&gt;
&lt;h2&gt;Desktop applications&lt;/h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Download&lt;/th&gt;
&lt;th&gt;Alternative&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Windows (32 and 64-bit)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-Setup-1.0.174.exe&quot;&gt;&lt;img alt=&quot;Get it on Windows&quot; width=&quot;134px&quot; src=&quot;https://camo.githubusercontent.com/feef906ffaebc642bd4cb2468d8d54b7c5b6ce70/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f426164676557696e646f77732e706e67&quot; data-canonical-src=&quot;https://joplinapp.org/images/BadgeWindows.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Or get the &lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.0.174/JoplinPortable.exe&quot;&gt;Portable version&lt;/a&gt;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Portable_application&quot; rel=&quot;nofollow&quot;&gt;portable application&lt;/a&gt; allows installing the software on a portable device such as a USB key. Simply copy the file JoplinPortable.exe in any directory on that USB key ; the application will then create a directory called &quot;JoplinProfile&quot; next to the executable file.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-1.0.174.dmg&quot;&gt;&lt;img alt=&quot;Get it on macOS&quot; width=&quot;134px&quot; src=&quot;https://camo.githubusercontent.com/d271dc0a5772ceeb267ca0babdfac05dcb07ace3/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f42616467654d61634f532e706e67&quot; data-canonical-src=&quot;https://joplinapp.org/images/BadgeMacOS.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;You can also use Homebrew: &lt;code&gt;brew cask install joplin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/releases/download/v1.0.174/Joplin-1.0.174-x86_64.AppImage&quot;&gt;&lt;img alt=&quot;Get it on Linux&quot; width=&quot;134px&quot; src=&quot;https://camo.githubusercontent.com/158ef9ed5a608db45f351eb98d6b0682b7885ff0/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f42616467654c696e75782e706e67&quot; data-canonical-src=&quot;https://joplinapp.org/images/BadgeLinux.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An Arch Linux package &lt;a href=&quot;https://github.com/laurent22/joplin#terminal-application&quot;&gt;is also available&lt;/a&gt;.&lt;p&gt;If it works with your distribution (it has been tested on Ubuntu, Fedora, Gnome and Mint), the recommended way is to use this script as it will handle the desktop icon too:&lt;/p&gt;&lt;p&gt;&lt;code&gt;wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Mobile applications&lt;/h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;Download&lt;/th&gt;
&lt;th&gt;Alt. Download&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=net.cozic.joplin&amp;amp;utm_source=GitHub&amp;amp;utm_campaign=README&amp;amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Get it on Google Play&quot; height=&quot;40px&quot; src=&quot;https://camo.githubusercontent.com/f0115fd53bfc95ea265d0dad17ea50a9f9a8a65a/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f4261646765416e64726f69642e706e67&quot; data-canonical-src=&quot;https://joplinapp.org/images/BadgeAndroid.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;or download the APK file: &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.0.310/joplin-v1.0.310.apk&quot;&gt;64-bit&lt;/a&gt; &lt;a href=&quot;https://github.com/laurent22/joplin-android/releases/download/android-v1.0.310/joplin-v1.0.310-32bit.apk&quot;&gt;32-bit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/joplin/id1315599797&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;Get it on the App Store&quot; height=&quot;40px&quot; src=&quot;https://camo.githubusercontent.com/c8a45b6ee42170158b58a7ae738cf2a66b83c8d2/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f4261646765494f532e706e67&quot; data-canonical-src=&quot;https://joplinapp.org/images/BadgeIOS.png&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Terminal application&lt;/h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operating system&lt;/th&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;brew install joplin&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Linux or Windows (via &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/faq?f=255&amp;amp;MSPPError=-2147217396&quot; rel=&quot;nofollow&quot;&gt;WSL&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Important:&lt;/strong&gt; First, &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot; rel=&quot;nofollow&quot;&gt;install Node 8+&lt;/a&gt;.&lt;p&gt;&lt;code&gt;NPM_CONFIG_PREFIX=~/.joplin-bin npm install -g joplin&lt;/code&gt;&lt;br/&gt;&lt;code&gt;sudo ln -s ~/.joplin-bin/bin/joplin /usr/bin/joplin&lt;/code&gt;&lt;/p&gt;&lt;p&gt;By default, the application binary will be installed under &lt;code&gt;~/.joplin-bin&lt;/code&gt;. You may change this directory if needed. Alternatively, if your npm permissions are setup as described &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions#option-2-change-npms-default-directory-to-another-directory&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; (Option 2) then simply running &lt;code&gt;npm -g install joplin&lt;/code&gt; would work.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Arch Linux&lt;/td&gt;
&lt;td&gt;An Arch Linux package is available &lt;a href=&quot;https://aur.archlinux.org/packages/joplin/&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. To install it, use an AUR wrapper such as yay: &lt;code&gt;yay -S joplin&lt;/code&gt;. Both the CLI tool (type &lt;code&gt;joplin&lt;/code&gt;) and desktop app (type &lt;code&gt;joplin-desktop&lt;/code&gt;) are packaged. You can also install a compiled version with the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Unofficial_user_repositories#chaotic-aur&quot; rel=&quot;nofollow&quot;&gt;chaotic-aur&lt;/a&gt; repository. For support, please go to the &lt;a href=&quot;https://github.com/masterkorp/joplin-pkgbuild&quot;&gt;GitHub repo&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;To start it, type &lt;code&gt;joplin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For usage information, please refer to the full &lt;a href=&quot;https://joplinapp.org/terminal/&quot; rel=&quot;nofollow&quot;&gt;Joplin Terminal Application Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Web Clipper&lt;/h2&gt;
&lt;p&gt;The Web Clipper is a browser extension that allows you to save web pages and screenshots from your browser. For more information on how to install and use it, see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/clipper.md&quot;&gt;Web Clipper Help Page&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Applications&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;About&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Desktop, mobile and terminal applications.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/clipper.md&quot;&gt;Web Clipper&lt;/a&gt; for Firefox and Chrome.&lt;/li&gt;
&lt;li&gt;End To End Encryption (E2EE)&lt;/li&gt;
&lt;li&gt;Note history (revisions)&lt;/li&gt;
&lt;li&gt;Synchronisation with various services, including NextCloud, Dropbox, WebDAV and OneDrive.&lt;/li&gt;
&lt;li&gt;Import Enex files (Evernote export format) and Markdown files.&lt;/li&gt;
&lt;li&gt;Export JEX files (Joplin Export format) and raw files.&lt;/li&gt;
&lt;li&gt;Support notes, to-dos, tags and notebooks.&lt;/li&gt;
&lt;li&gt;Goto Anything feature.&lt;/li&gt;
&lt;li&gt;Sort notes by multiple criteria - title, updated time, etc.&lt;/li&gt;
&lt;li&gt;Support for alarms (notifications) in mobile and desktop applications.&lt;/li&gt;
&lt;li&gt;Offline first, so the entire data is always available on the device even without an internet connection.&lt;/li&gt;
&lt;li&gt;Markdown notes, which are rendered with images and formatting in the desktop and mobile applications. Support for extra features such as math notation and checkboxes.&lt;/li&gt;
&lt;li&gt;File attachment support - images are displayed, and other files are linked and can be opened in the relevant application.&lt;/li&gt;
&lt;li&gt;Search functionality.&lt;/li&gt;
&lt;li&gt;Geo-location support.&lt;/li&gt;
&lt;li&gt;Supports multiple languages&lt;/li&gt;
&lt;li&gt;External editor support - open notes in your favorite external editor with one click in Joplin.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Importing from Evernote&lt;/h2&gt;
&lt;p&gt;Joplin was designed as a replacement for Evernote and so can import complete Evernote notebooks, as well as notes, tags, resources (attached files) and note metadata (such as author, geo-location, etc.) via ENEX files. In terms of data, the only two things that might slightly differ are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Recognition data - Evernote images, in particular scanned (or photographed) documents have &lt;a href=&quot;https://en.wikipedia.org/wiki/Optical_character_recognition&quot; rel=&quot;nofollow&quot;&gt;recognition data&lt;/a&gt; associated with them. It is the text that Evernote has been able to recognise in the document. This data is not preserved when the note are imported into Joplin. However, should it become supported in the search tool or other parts of Joplin, it should be possible to regenerate this recognition data since the actual image would still be available.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Colour, font sizes and faces - Evernote text is stored as HTML and this is converted to Markdown during the import process. For notes that are mostly plain text or with basic formatting (bold, italic, bullet points, links, etc.) this is a lossless conversion, and the note, once rendered back to HTML should be very similar. Tables are also imported and converted to Markdown tables. For very complex notes, some formatting data might be lost - in particular colours, font sizes and font faces will not be imported. The text itself however is always imported in full regardless of formatting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To import Evernote data, first export your Evernote notebooks to ENEX files as described &lt;a href=&quot;https://help.evernote.com/hc/en-us/articles/209005557-How-to-back-up-export-and-restore-import-notes-and-notebooks&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;. Then follow these steps:&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; ENEX and select your file. The notes will be imported into a new separate notebook. If needed they can then be moved to a different notebook, or the notebook can be renamed, etc.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import /path/to/file.enex&lt;/code&gt;. This will import the notes into a new notebook named after the filename.&lt;/p&gt;
&lt;h2&gt;Importing from Markdown files&lt;/h2&gt;
&lt;p&gt;Joplin can import notes from plain Markdown file. You can either import a complete directory of Markdown files or individual files.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, open File &amp;gt; Import &amp;gt; MD and select your Markdown file or directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, in &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/terminal.md#command-line-mode&quot;&gt;command-line mode&lt;/a&gt;, type &lt;code&gt;import --format md /path/to/file.md&lt;/code&gt; or &lt;code&gt;import --format md /path/to/directory/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Importing from other applications&lt;/h2&gt;
&lt;p&gt;In general the way to import notes from any application into Joplin is to convert the notes to ENEX files (Evernote format) and to import these ENEX files into Joplin using the method above. Most note-taking applications support ENEX files so it should be relatively straightforward. For help about specific applications, see below:&lt;/p&gt;

&lt;p&gt;Joplin can export to the JEX format (Joplin Export file), which is a tar file that can contain multiple notes, notebooks, etc. This is a lossless format in that all the notes, but also metadata such as geo-location, updated time, tags, etc. are preserved. This format is convenient for backup purposes and can be re-imported into Joplin. A &quot;raw&quot; format is also available. This is the same as the JEX format except that the data is saved to a directory and each item represented by a single file.&lt;/p&gt;

&lt;p&gt;One of the goals of Joplin was to avoid being tied to any particular company or service, whether it is Evernote, Google or Microsoft. As such the synchronisation is designed without any hard dependency to any particular service. Most of the synchronisation process is done at an abstract level and access to external services, such as Nextcloud or Dropbox, is done via lightweight drivers. It is easy to support new services by creating simple drivers that provide a filesystem-like interface, i.e. the ability to read, write, delete and list items. It is also simple to switch from one service to another or to even sync to multiple services at once. Each note, notebook, tags, as well as the relation between items is transmitted as plain text files during synchronisation, which means the data can also be moved to a different application, can be easily backed up, inspected, etc.&lt;/p&gt;
&lt;p&gt;Currently, synchronisation is possible with Nextcloud, Dropbox (by default), OneDrive or the local filesystem. To setup synchronisation please follow the instructions below. After that, the application will synchronise in the background whenever it is running, or you can click on &quot;Synchronise&quot; to start a synchronisation manually.&lt;/p&gt;
&lt;h2&gt;Nextcloud synchronisation&lt;/h2&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/1c4deb06bfb00bee82ba7e5795653e5db99490ce/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6e657874636c6f75642d6c6f676f2d6261636b67726f756e642e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1c4deb06bfb00bee82ba7e5795653e5db99490ce/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f6e657874636c6f75642d6c6f676f2d6261636b67726f756e642e706e67&quot; width=&quot;100&quot; align=&quot;left&quot; data-canonical-src=&quot;https://joplinapp.org/images/nextcloud-logo-background.png&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://nextcloud.com/&quot; rel=&quot;nofollow&quot;&gt;Nextcloud&lt;/a&gt; is a self-hosted, private cloud solution. It can store documents, images and videos but also calendars, passwords and countless other things and can sync them to your laptop or phone. As you can host your own Nextcloud server, you own both the data on your device and infrastructure used for synchronisation. As such it is a good fit for Joplin. The platform is also well supported and with a strong community, so it is likely to be around for a while - since it's open source anyway, it is not a service that can be closed, it can exist on a server for as long as one chooses.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, go to the config screen and select Nextcloud as the synchronisation target. Then input the WebDAV URL (to get it, click on Settings in the bottom left corner of the page, in Nextcloud), this is normally &lt;code&gt;https://example.com/nextcloud/remote.php/webdav/Joplin&lt;/code&gt; (&lt;strong&gt;make sure to create the &quot;Joplin&quot; directory in Nextcloud&lt;/strong&gt;), and set the username and password. If it does not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues/61#issuecomment-373282608&quot;&gt;see this explanation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, you will need to set the &lt;code&gt;sync.target&lt;/code&gt; config variable and all the &lt;code&gt;sync.5.path&lt;/code&gt;, &lt;code&gt;sync.5.username&lt;/code&gt; and &lt;code&gt;sync.5.password&lt;/code&gt; config variables to, respectively the Nextcloud WebDAV URL, your username and your password. This can be done from the command line mode using:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:config sync.5.path https://example.com/nextcloud/remote.php/webdav/Joplin
:config sync.5.username YOUR_USERNAME
:config sync.5.password YOUR_PASSWORD
:config sync.target 5
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If synchronisation does not work, please consult the logs in the app profile directory - it is often due to a misconfigured URL or password. The log should indicate what the exact issue is.&lt;/p&gt;
&lt;h2&gt;Dropbox synchronisation&lt;/h2&gt;
&lt;p&gt;When syncing with Dropbox, Joplin creates a sub-directory in Dropbox, in &lt;code&gt;/Apps/Joplin&lt;/code&gt; and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;Dropbox&quot; as the synchronisation target in the config screen (it is selected by default). Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application. It is possible to also synchronise outside of the user interface by typing &lt;code&gt;joplin sync&lt;/code&gt; from the terminal. This can be used to setup a cron script to synchronise at regular interval. For example, this would do it every 30 minutes:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;*/30 * * * * /path/to/joplin sync
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;WebDAV synchronisation&lt;/h2&gt;
&lt;p&gt;Select the &quot;WebDAV&quot; synchronisation target and follow the same instructions as for Nextcloud above.&lt;/p&gt;
&lt;p&gt;WebDAV-compatible services that are known to work with Joplin:&lt;/p&gt;
&lt;h2&gt;OneDrive synchronisation&lt;/h2&gt;
&lt;p&gt;When syncing with OneDrive, Joplin creates a sub-directory in OneDrive, in /Apps/Joplin and read/write the notes and notebooks from it. The application does not have access to anything outside this directory.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt; or &lt;strong&gt;mobile application&lt;/strong&gt;, select &quot;OneDrive&quot; as the synchronisation target in the config screen. Then, to initiate the synchronisation process, click on the &quot;Synchronise&quot; button in the sidebar and follow the instructions.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;terminal application&lt;/strong&gt;, to initiate the synchronisation process, type &lt;code&gt;:sync&lt;/code&gt;. You will be asked to follow a link to authorise the application (simply input your Microsoft credentials - you do not need to register with OneDrive).&lt;/p&gt;

&lt;p&gt;Joplin supports end-to-end encryption (E2EE) on all the applications. E2EE is a system where only the owner of the notes, notebooks, tags or resources can read them. It prevents potential eavesdroppers - including telecom providers, internet providers, and even the developers of Joplin from being able to access the data. Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/e2ee.md&quot;&gt;End-To-End Encryption Tutorial&lt;/a&gt; for more information about this feature and how to enable it.&lt;/p&gt;
&lt;p&gt;For a more technical description, mostly relevant for development or to review the method being used, please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/spec.md&quot;&gt;Encryption specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Joplin applications automatically save previous versions of your notes at regular intervals. These versions are synced across devices and can be viewed from the desktop application. To do so, click on the &quot;Information&quot; button on a note, then click on &quot;Previous version of this note&quot;. From this screen you can view the previous versions of the note as well as restore any of them.&lt;/p&gt;
&lt;p&gt;This feature can be disabled from the &quot;Note history&quot; section in the settings, and it is also possible to change for how long the history of a note is saved.&lt;/p&gt;
&lt;p&gt;More information about this feature in the &lt;a href=&quot;https://www.patreon.com/posts/note-history-now-27083082&quot; rel=&quot;nofollow&quot;&gt;announcement post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Joplin notes can be opened and edited using an external editor of your choice. It can be a simple text editor like Notepad++ or Sublime Text or an actual Markdown editor like Typora. In that case, images will also be displayed within the editor. To open the note in an external editor, click on the icon in the toolbar or press Ctrl+E (or Cmd+E). Your default text editor will be used to open the note. If needed, you can also specify the editor directly in the General Options, under &quot;Text editor command&quot;.&lt;/p&gt;

&lt;p&gt;Any kind of file can be attached to a note. In Markdown, links to these files are represented as a simple ID to the attachment. In the note viewer, these files, if they are images, will be displayed or, if they are other files (PDF, text files, etc.) they will be displayed as links. Clicking on this link will open the file in the default application.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, files can be attached either by clicking the &quot;Attach file&quot; icon in the editor or via drag and drop. If you prefer to create a link to a local file instead, hold the ALT key while performing the drag and drop operation. If the OS-clipboard contains an image you can directly paste it in the editor via Ctrl+V.&lt;/p&gt;
&lt;p&gt;Resources that are not attached to any note will be automatically deleted after 10 days (see &lt;a href=&quot;https://github.com/laurent22/joplin/issues/154#issuecomment-356582366&quot;&gt;rationale&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Resources larger than 10 MB are not currently supported on mobile. They will crash the application when synchronising so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/p&gt;
&lt;h2&gt;Downloading attachments&lt;/h2&gt;
&lt;p&gt;The way the attachments are downloaded during synchronisation can be customised in the Configuration screen, under &quot;Attachment download behaviour&quot;. The default option (&quot;Always&quot;) is to download all the attachments, all the time, so that the data is available even when the device is offline. There is also the option to download the attachments manually (option &quot;Manual&quot;), by clicking on it, or automatically (Option &quot;Auto&quot;), in which case the attachments are downloaded only when a note is opened. These options should help saving disk space and network bandwidth, especially on mobile.&lt;/p&gt;

&lt;p&gt;In the desktop and mobile apps, an alarm can be associated with any to-do. It will be triggered at the given time by displaying a notification. How the notification will be displayed depends on the operating system since each has a different way to handle this. Please see below for the requirements for the desktop applications:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &amp;gt;= 8. Make sure the Action Center is enabled on Windows. Task bar balloon for Windows &amp;lt; 8. Growl as fallback. Growl takes precedence over Windows balloons.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &amp;gt;= 10.8 or Growl if earlier.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;notify-osd&lt;/code&gt; or &lt;code&gt;libnotify-bin&lt;/code&gt; installed (Ubuntu should have this by default). Growl otherwise&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/mikaelbr/node-notifier/blob/master/DECISION_FLOW.md&quot;&gt;documentation and flow chart for reporter choice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On mobile, the alarms will be displayed using the built-in notification system.&lt;/p&gt;
&lt;p&gt;If for any reason the notifications do not work, please &lt;a href=&quot;https://github.com/laurent22/joplin/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sub-notebooks allow organising multiple notebooks into a tree of notebooks. For example it can be used to regroup all the notebooks related to work, to family or to a particular project under a parent notebook.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/544fee7231c8a7a168ea423d8e4b7ffa7c11023b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f5375624e6f7465626f6f6b732e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/544fee7231c8a7a168ea423d8e4b7ffa7c11023b/68747470733a2f2f6a6f706c696e6170702e6f72672f696d616765732f5375624e6f7465626f6f6b732e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;https://joplinapp.org/images/SubNotebooks.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In the &lt;strong&gt;desktop application&lt;/strong&gt;, to create a subnotebook, drag and drop it onto another notebook. To move it back to the root, drag and drop it on the &quot;Notebooks&quot; header. Currently only the desktop app can be used to organise the notebooks.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;mobile application&lt;/strong&gt; supports displaying and collapsing/expanding the tree of notebooks, however it does not currently support moving the subnotebooks to different notebooks.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;terminal app&lt;/strong&gt; supports displaying the tree of subnotebooks but it does not support collapsing/expanding them or moving the subnotebooks around.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Joplin uses and renders a Github-flavoured Markdown with a few variations and additions. In particular it adds math formula support, interactive checkboxes and support for note links. Joplin also supports Markdown plugins which allow enabling and disabling various advanced Markdown features. Have a look at the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/markdown.md&quot;&gt;Markdown Guide&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;Rendered markdown can be customized by placing a userstyle file in the profile directory &lt;code&gt;~/.config/joplin-desktop/userstyle.css&lt;/code&gt; (This path might be different on your device - check at the top of the Config screen for the exact path). This file supports standard CSS syntax. Joplin &lt;em&gt;&lt;strong&gt;must&lt;/strong&gt;&lt;/em&gt; be restarted for the new css to be applied, please ensure that Joplin is not closing to the tray, but is actually exiting. Note that this file is used for both displaying the notes and printing the notes. Be aware how the CSS may look printed (for example, printing white text over a black background is usually not wanted).&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;desktop app&lt;/strong&gt;, templates can be used to create new notes or to insert into existing ones by creating a &lt;code&gt;templates&lt;/code&gt; folder in Joplin's config folder and placing Markdown template files into it. For example creating the file &lt;code&gt;hours.md&lt;/code&gt; in the &lt;code&gt;templates&lt;/code&gt; directory with the contents:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-gfm&quot;&gt;
&lt;pre&gt;
Date: {{date}}
Hours:
Details:
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Templates can then be inserted from the menu (File-&amp;gt;Templates).&lt;/p&gt;
&lt;p&gt;The currently supported template variables are:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;{{date}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Today's date formatted based on the settings format&lt;/td&gt;
&lt;td&gt;2019-01-01&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;{{time}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current time formatted based on the settings format&lt;/td&gt;
&lt;td&gt;13:00&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;{{datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current date and time formatted based on the settings format&lt;/td&gt;
&lt;td&gt;01/01/19 1:00 PM&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;{{#custom_datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Current date and/or time formatted based on a supplied string (using &lt;a href=&quot;https://momentjs.com/&quot; rel=&quot;nofollow&quot;&gt;moment.js&lt;/a&gt; formatting)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{{#custom_datetime}}M d{{/custom_datetime}}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Joplin implements the SQLite Full Text Search (FTS4) extension. It means the content of all the notes is indexed in real time and search queries return results very fast. Both &lt;a href=&quot;https://www.sqlite.org/fts3.html#simple_fts_queries&quot; rel=&quot;nofollow&quot;&gt;Simple FTS Queries&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/fts3.html#full_text_index_queries&quot; rel=&quot;nofollow&quot;&gt;Full-Text Index Queries&lt;/a&gt; are supported. See below for the list of supported queries:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Search type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Single word&lt;/td&gt;
&lt;td&gt;Returns all the notes that contain this term.&lt;/td&gt;
&lt;td&gt;For example, searching for &lt;code&gt;cat&lt;/code&gt; will return all the notes that contain this exact word. Note: it will not return the notes that contain the substring - thus, for &quot;cat&quot;, notes that contain &quot;cataclysmic&quot; or &quot;prevaricate&quot; will &lt;strong&gt;not&lt;/strong&gt; be returned.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Multiples words&lt;/td&gt;
&lt;td&gt;Returns all the notes that contain &lt;strong&gt;all&lt;/strong&gt; these words, but not necessarily next to each other.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dog cat&lt;/code&gt; - will return any notes that contain the words &quot;dog&quot; and &quot;cat&quot; anywhere in the note, no necessarily in that order nor next to each other. It will &lt;strong&gt;not&lt;/strong&gt; return results that contain &quot;dog&quot; or &quot;cat&quot; only.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Phrase query&lt;/td&gt;
&lt;td&gt;Add double quotes to return the notes that contain exactly this phrase.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&quot;shopping list&quot;&lt;/code&gt; - will return the notes that contain these &lt;strong&gt;exact terms&lt;/strong&gt; next to each other and in this order. It will &lt;strong&gt;not&lt;/strong&gt; return for example a note that contains &quot;going shopping with my list&quot;.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Prefix&lt;/td&gt;
&lt;td&gt;Add a wildcard to return all the notes that contain a term with a specified prefix.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;swim*&lt;/code&gt; - will return all the notes that contain eg. &quot;swim&quot;, but also &quot;swimming&quot;, &quot;swimsuit&quot;, etc. IMPORTANT: The wildcard &lt;strong&gt;can only be at the end&lt;/strong&gt; - it will be ignored at the beginning of a word (eg. &lt;code&gt;*swim&lt;/code&gt;) and will be treated as a literal asterisk in the middle of a word (eg. &lt;code&gt;ast*rix&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Field restricted&lt;/td&gt;
&lt;td&gt;Add either &lt;code&gt;title:&lt;/code&gt; or &lt;code&gt;body:&lt;/code&gt; before a note to restrict your search to just the title, or just the body.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;title:shopping&lt;/code&gt;, &lt;code&gt;body:egg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Notes are sorted by &quot;relevance&quot;. Currently it means the notes that contain the requested terms the most times are on top. For queries with multiple terms, it also matters how close to each other the terms are. This is a bit experimental so if you notice a search query that returns unexpected results, please report it in the forum, providing as many details as possible to replicate the issue.&lt;/p&gt;

&lt;p&gt;In the desktop application, press Ctrl+G or Cmd+G and type the title of a note to jump directly to it. You can also type &lt;code&gt;#&lt;/code&gt; followed by a tag or &lt;code&gt;@&lt;/code&gt; followed by a notebook title.&lt;/p&gt;

&lt;p&gt;Donations to Joplin support the development of the project. Developing quality applications mostly takes time, but there are also some expenses, such as digital certificates to sign the applications, app store fees, hosting, etc. Most of all, your donation will make it possible to keep up the current development standard.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/readme/donate.md&quot;&gt;donation page&lt;/a&gt; for information on how to support the development of Joplin.&lt;/p&gt;


&lt;p&gt;Please see the guide for information on how to contribute to the development of Joplin: &lt;a href=&quot;https://github.com/laurent22/joplin/blob/master/CONTRIBUTING.md&quot;&gt;https://github.com/laurent22/joplin/blob/master/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Joplin is currently available in the languages below. If you would like to contribute a &lt;strong&gt;new translation&lt;/strong&gt;, it is quite straightforward, please follow these steps:&lt;/p&gt;
&lt;p&gt;This translation will apply to the three applications - desktop, mobile and terminal.&lt;/p&gt;
&lt;p&gt;To &lt;strong&gt;update a translation&lt;/strong&gt;, follow the same steps as above but instead of getting the .pot file, get the .po file for your language from the table below.&lt;/p&gt;
&lt;p&gt;Current translations:&lt;/p&gt;


&lt;ul&gt;&lt;li&gt;Resources larger than 10 MB are not currently supported on mobile. They will crash the application so it is recommended not to attach such resources at the moment. The issue is being looked at.&lt;/li&gt;
&lt;li&gt;Non-alphabetical characters such as Chinese or Arabic might create glitches in the terminal on Windows. This is a limitation of the current Windows console.&lt;/li&gt;
&lt;li&gt;It is only possible to upload files of up to 4MB to OneDrive due to a limitation of &lt;a href=&quot;https://docs.microsoft.com/en-gb/onedrive/developer/rest-api/api/driveitem_put_content&quot; rel=&quot;nofollow&quot;&gt;the API&lt;/a&gt; being currently used. There is currently no plan to support OneDrive &quot;large file&quot; API.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIT License&lt;/p&gt;
&lt;p&gt;Copyright (c) 2016-2019 Laurent Cozic&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 16 Nov 2019 21:56:34 +0000</pubDate>
<dc:creator>adulau</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/1285584?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>laurent22/joplin</og:title>
<og:url>https://github.com/laurent22/joplin</og:url>
<og:description>Joplin - a note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/ - laurent22/joplin</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/laurent22/joplin</dc:identifier>
</item>
<item>
<title>Internet in Iran gradually shuttting down due to protests</title>
<link>https://twitter.com/netblocks/status/1195775905907576832</link>
<guid isPermaLink="true" >https://twitter.com/netblocks/status/1195775905907576832</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/netblocks/status/1195775905907576832&quot;&gt;https://twitter.com/netblocks/status/1195775905907576832&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21554459&quot;&gt;https://news.ycombinator.com/item?id=21554459&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 234&lt;/p&gt;
&lt;p&gt;# Comments: 94&lt;/p&gt;
</description>
<pubDate>Sat, 16 Nov 2019 19:35:16 +0000</pubDate>
<dc:creator>anticensor</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/netblocks/status/1195775905907576832</dc:identifier>
</item>
<item>
<title>You Promised Me Mars Colonies but I Got Facebook</title>
<link>https://www.linkedin.com/pulse/mars-colonies-counting-ads-edward-hsu</link>
<guid isPermaLink="true" >https://www.linkedin.com/pulse/mars-colonies-counting-ads-edward-hsu</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;p&gt;“You promised me Mars colonies, and instead, I got Facebook” said Buzz Aldrin in a MIT Technology Review article in 2012. PayPal co-founder Peter Thiel, added “We wanted flying cars — instead we got 140 characters.” In the article, titled “Why We Can’t Solve Big Problems,” Editor-in-chief Jason Pontin adds that critics of Silicon Valley feel “venture investing has shifted away from funding transformational companies” toward funding ”features, widgets, irrelevances.”&lt;/p&gt;
&lt;p&gt;Pontin feels we haven’t seen “big things” since the PC revolution due to three reasons. First, many of society’s big problems are bound by political policy, and ideology - not technology. Second, many of the remaining big problems are too complex and we haven't made the scientific and engineering progress required to address them. Lastly, economic forces - solving “big things” is expensive, and new innovations are often not cost competitive in the market. Tesla’s success in the automotive market is an exception.   &lt;/p&gt;
&lt;p&gt;But there is good evidence that the constraints of technological progress are about to change. To see why, we need to understand that tech innovations are dependent two types of computational problems.&lt;/p&gt;
&lt;h3&gt;Two Classes of Innovation&lt;/h3&gt;
&lt;p&gt;Today’s world does not look like the future many of us saw as children in movies, because there’s been asymmetrical progress between two types of innovation. The first, connectivity-driven innovations, were less anticipated by futurists decades ago. The second, applied science innovations, were eagerly expected. No one’s said predicting the future was easy. &lt;/p&gt;
&lt;div class=&quot;slate-resizable-image-embed slate-image-embed__resize-full-width&quot;&gt;&lt;img alt=&quot;No alt text provided for this image&quot; data-media-urn=&quot;&quot; data-li-src=&quot;https://media.licdn.com/dms/image/C5612AQFnKrLxtBw8kA/article-inline_image-shrink_1500_2232/0?e=1579737600&amp;amp;v=beta&amp;amp;t=O3eQKxflCyaxzEBusGrf_Hec-S8tDwWXmKIghDcsHn8&quot; src=&quot;https://:0/&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Modern connectivity-driven innovations started with computer networking, leading to e-commerce. By 2010, mobile computing devices, along with cloud and hyperscale infrastructures, made it possible to create seamless digital interactions that were personalized, and in context. Two examples are AirBnB and Uber. While valuable, AirBnB and Uber are essentially just-in-time &amp;amp; personalized brokers of something we’ve been doing for decades - renting houses and riding taxis. Same is true for social media like Facebook and Twitter, whose main product is better targeted advertisements.&lt;/p&gt;
&lt;div class=&quot;slate-resizable-image-embed slate-image-embed__resize-full-width&quot;&gt;&lt;img alt=&quot;No alt text provided for this image&quot; data-media-urn=&quot;&quot; data-li-src=&quot;https://media.licdn.com/dms/image/C5612AQF74toXdAYPzA/article-inline_image-shrink_1000_1488/0?e=1579737600&amp;amp;v=beta&amp;amp;t=mQlnu2NAqDPBU3IazStllT-4ScHZqMoKKlLnS5CbME0&quot; src=&quot;https://:0/&quot;/&gt;&lt;/div&gt;
&lt;p&gt;What happened on the applied science innovation front during this time? Not so much. While we’ve seen improvements on the quality and efficiency of physical products, it hasn’t changed how we live. No one has flown supersonic commercially for nearly twenty years. Electric cars and clean energy are barely starting to make a dent. No flying cars exist beyond early prototypes. It’s understandable why many are disappointed.&lt;/p&gt;
&lt;h3&gt;Uneven Progress&lt;/h3&gt;
&lt;p&gt;There are several reasons why connectivity-driven innovations have seen the spotlight while applied science innovations have been comparatively starved. &lt;/p&gt;
&lt;p&gt;Connectivity-driven innovation has several advantages. First is its faster innovation and monetization cycle. It’s much faster to build a mobile app and try to monetize than to advance scientific breakthroughs, push through regulatory hurdles, manufacture, and develop a product go-to-market. Because of this advantage, it sees more investment from VC’s (who often want returns in 10 years). This leads to more press and media coverage, and greater intake of talent. Lastly, computing requirements for connectivity-driven innovations are readily available utilities in the public cloud, where the 65% of workloads run. Just add software.&lt;/p&gt;
&lt;p&gt;On the other hand, applied science innovations not only require physical manufacturing, but solving problems in the outdated-ly named high performance computing (HPC) discipline. HPC hasn’t changed much in decades; its common operating model is closer to hugging servers than utility computing. Engineers are resigned to “dumb down their model” to complete their designs with limited computing power, or wait for compute time to run simulations. Project costs explode, time to market is delayed, while IT organizations take pride in the high utilization of expensive HPC hardware they bought three years ago. For anyone that’s spent time in enterprise cloud computing, it can seem downright crazy.&lt;/p&gt;
&lt;div class=&quot;slate-resizable-image-embed slate-image-embed__resize-full-width&quot;&gt;&lt;img alt=&quot;No alt text provided for this image&quot; data-media-urn=&quot;&quot; data-li-src=&quot;https://media.licdn.com/dms/image/C5612AQHYY89gqioEzw/article-inline_image-shrink_1500_2232/0?e=1579737600&amp;amp;v=beta&amp;amp;t=Ksx0UlbcSmvb054raTLpU464IvP7Ksn6KTVYXrPKaeY&quot; src=&quot;https://:0/&quot;/&gt;&lt;/div&gt;
&lt;h3&gt;Feeding the Applied Science Innovation Engine&lt;/h3&gt;
&lt;p&gt;But this is about to change - &lt;a href=&quot;https://www.linkedin.com/pulse/advancing-cloud-computings-final-frontier-edward-hsu/&quot; target=&quot;_blank&quot;&gt;HPC workloads are shifting to the cloud&lt;/a&gt;. This means for the computing part of the equation, applied science innovations will soon be on equal footing as its connectivity-driven cousins. Cloud providers are making specialized HPC infrastructures available on demand. Simulation software vendors are shifting their licensing models for utility consumption. And new platforms are bringing it all together as turnkey solutions.&lt;/p&gt;
&lt;p&gt;Today, mainstream enterprises like Nissan are using HPC in the cloud to build better cars with acoustic, airflow, structural, thermal, and crash simulation techniques. We’re also seeing a rapid expansion of VC-funded startups in the &lt;a href=&quot;https://techcrunch.com/2018/05/23/upstarts-emerge-to-chase-teslas-lead-in-electric-vehicles/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;electric car&lt;/a&gt;, &lt;a href=&quot;https://www.wsj.com/articles/aerospace-startups-see-stepped-up-role-at-paris-international-air-show-1497798699&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;aerospace&lt;/a&gt; and &lt;a href=&quot;https://spacenews.com/space-startup-investments-continued-to-rise-in-2018/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;space&lt;/a&gt; industries. For these startups, running simulations in the cloud is the default starting point.&lt;/p&gt;
&lt;p&gt;The agility of cloud computing is finally fueling the applied science innovation engine. So for those who’ve had their fill of social/mobile/local webapps and want clean energy, electric cars, and supersonic jets, there is reason to be optimistic.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;30.145945945946&quot;&gt;
&lt;h3 class=&quot;ugc-post-bar__published_by&quot;&gt;Published By&lt;/h3&gt;
&lt;div data-impression-id=&quot;author_mini-profile_mini-card&quot; class=&quot;mini-card mini-profile mini-card--flat mini-profile--flat&quot;&gt;&lt;span class=&quot;ugc-post-bar__container&quot;&gt;&lt;img class=&quot;mini-card__image mini-profile__image mini-card__image--flat mini-profile__image--flat lazy-load&quot; data-delayed-url=&quot;https://media.licdn.com/dms/image/C5103AQFZxnAe56jHKg/profile-displayphoto-shrink_100_100/0?e=1579737600&amp;amp;v=beta&amp;amp;t=3ICptzZDX0dq483mjf2FMe5reZZZROGTKSl9-t_JjGc&quot; alt=&quot;Edward Hsu&quot;/&gt;&lt;/span&gt;
&lt;section class=&quot;mini-card__content mini-profile__content mini-card__content--flat mini-profile__content--flat&quot;&gt;&lt;h3 class=&quot;mini-card__title mini-profile__title mini-card__title--flat mini-profile__title--flat&quot;&gt;&lt;span class=&quot;ugc-post-bar__container&quot;&gt;&lt;a class=&quot;mini-card__title-link mini-profile__title-link mini-card__title-link--flat mini-profile__title-link--flat&quot; data-tracking-control-name=&quot;author_mini-profile_title&quot; data-tracking-will-navigate=&quot;&quot; href=&quot;https://www.linkedin.com/in/edwardihsu?trk=author_mini-profile_title&quot; aria-label=&quot;View profile for Edward Hsu&quot;&gt;Edward Hsu&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&quot;mini-card__subtitle mini-profile__subtitle mini-card__subtitle--flat mini-profile__subtitle--flat&quot;&gt;&lt;span class=&quot;ugc-post-bar__container&quot;&gt;Vice President of Product at Rescale - Hiring!&lt;/span&gt;&lt;/h4&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;span class=&quot;ugc-post-bar__container&quot;&gt;&lt;a class=&quot;ugc-post-bar__follow-button&quot; data-tracking-will-navigate=&quot;&quot; data-tracking-control-name=&quot;ugc-post-bar__follow-button&quot; href=&quot;https://www.linkedin.com/uas/login?session_redirect=https%3A%2F%2Fwww%2Elinkedin%2Ecom%2Fpulse%2Fmars-colonies-counting-ads-edward-hsu&amp;amp;trk=ugc-post-bar__follow-button&quot;&gt;Follow&lt;/a&gt;&lt;/span&gt;
&lt;p class=&quot;ugc-post-bar__share-text&quot;&gt;In recent weeks I've formed a new perspective of how computing shapes our lives and how it's set to change.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sat, 16 Nov 2019 18:58:26 +0000</pubDate>
<dc:creator>rahimnathwani</dc:creator>
<og:title>You Promised Me Mars Colonies but I Got Facebook</og:title>
<og:description>“You promised me Mars colonies, and instead, I got Facebook” said Buzz Aldrin in a MIT Technology Review article in 2012. PayPal co-founder Peter Thiel, added “We wanted flying cars — instead we got 140 characters.</og:description>
<og:image>https://media.licdn.com/dms/image/C5612AQFa4X_SgiHxsw/article-cover_image-shrink_600_2000/0?e=1579737600&amp;v=beta&amp;t=tP5YXKt76EaBux34Y4JR-jE4xyn9IK74cHPGu4ISwYQ</og:image>
<og:url>https://www.linkedin.com/pulse/mars-colonies-counting-ads-edward-hsu</og:url>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.linkedin.com/pulse/mars-colonies-counting-ads-edward-hsu</dc:identifier>
</item>
<item>
<title>Infectious Executable Stacks</title>
<link>https://nullprogram.com/blog/2019/11/15/</link>
<guid isPermaLink="true" >https://nullprogram.com/blog/2019/11/15/</guid>
<description>&lt;time datetime=&quot;2019-11-15&quot;&gt;November 15, 2019&lt;/time&gt;&lt;p&gt;nullprogram.com/blog/2019/11/15/&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article was discussed &lt;a href=&quot;https://news.ycombinator.com/item?id=21553882&quot;&gt;on Hacker News&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In software development there are many concepts that at first glance seem useful and sound, but, after considering the consequences of their implementation and use, are actually horrifying. Examples include &lt;a href=&quot;https://lwn.net/Articles/683118/&quot;&gt;thread cancellation&lt;/a&gt;, &lt;a href=&quot;https://nullprogram.com/blog/2019/10/27/&quot;&gt;variable length arrays&lt;/a&gt;, and &lt;a href=&quot;https://nullprogram.com/blog/2018/07/20/#strict-aliasing&quot;&gt;memory aliasing&lt;/a&gt;. GCC’s closure extension to C is another, and this little feature compromises the entire GNU toolchain.&lt;/p&gt;
&lt;h3 id=&quot;gnu-c-nested-functions&quot;&gt;GNU C nested functions&lt;/h3&gt;
&lt;p&gt;GCC has its own dialect of C called GNU C. One feature unique to GNU C is &lt;em&gt;nested functions&lt;/em&gt;, which allow C programs to define functions inside other functions:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;intsort1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The nested function above is straightforward and harmless. It’s nothing groundbreaking, and it is trivial for the compiler to implement. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmp&lt;/code&gt; function is really just a static function whose scope is limited to the containing function, no different than a local static variable.&lt;/p&gt;
&lt;p&gt;With one slight variation the nested function turns into a closure. This is where things get interesting:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;intsort2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;_Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;invert&lt;/code&gt; variable from the outer scope is accessed from the inner scope. This has &lt;a href=&quot;https://nullprogram.com/blog/2019/09/25/&quot;&gt;clean, proper closure semantics&lt;/a&gt; and works correctly just as you’d expect. It fits quite well with traditional C semantics. The closure itself is re-entrant and thread-safe. It’s automatically (read: stack) allocated, and so it’s automatically freed when the function returns, including when the stack is unwound via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;longjmp()&lt;/code&gt;. It’s a natural progression to support closures like this via nested functions. The eventual caller, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;qsort&lt;/code&gt;, doesn’t even know it’s calling a closure!&lt;/p&gt;
&lt;p&gt;While this seems so useful and easy, its implementation has serious consequences that, in general, outweigh its benefits. In fact, in order to make this work, the whole GNU toolchain has been specially rigged!&lt;/p&gt;
&lt;p&gt;How does it work? The function pointer, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmp&lt;/code&gt;, passed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;qsort&lt;/code&gt; must somehow be associated with its lexical environment, specifically the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;invert&lt;/code&gt; variable. A static address won’t do. When I &lt;a href=&quot;https://nullprogram.com/blog/2017/01/08/&quot;&gt;implemented closures as a toy library&lt;/a&gt;, I talked about the function address for each closure instance somehow needing to be unique.&lt;/p&gt;
&lt;p&gt;GCC accomplishes this by constructing a trampoline on the stack. That trampoline has access to the local variables stored adjacent to it, also on the stack. GCC also generates a normal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmp&lt;/code&gt; function, like the simple nested function before, that accepts &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;invert&lt;/code&gt; as an additional argument. The trampoline calls this function, passing the local variable as this additional argument.&lt;/p&gt;
&lt;h3 id=&quot;trampoline-illustration&quot;&gt;Trampoline illustration&lt;/h3&gt;
&lt;p&gt;To illustrate this, I’ve manually implemented &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intsort2()&lt;/code&gt; below for x86-64 (&lt;a href=&quot;https://wiki.osdev.org/System_V_ABI&quot;&gt;System V ABI&lt;/a&gt;) without using GCC’s nested function extension:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot; readability=&quot;20.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;36&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;_Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;intsort3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;_Bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// mov  edx, invert&lt;/span&gt;
        &lt;span class=&quot;mh&quot;&gt;0xba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// mov  rax, cmp&lt;/span&gt;
        &lt;span class=&quot;mh&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xb8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// jmp  rax&lt;/span&gt;
        &lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xe0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trampoline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmemb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trampoline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here’s a complete example you can try yourself on nearly any x86-64 unix-like system: &lt;a href=&quot;https://nullprogram.com/download/trampoline.c&quot;&gt;&lt;strong&gt;trampoline.c&lt;/strong&gt;&lt;/a&gt;. It even works with Clang. The two notable systems where stack trampolines won’t work are &lt;a href=&quot;https://marc.info/?l=openbsd-cvs&amp;amp;m=149606868308439&amp;amp;w=2&quot;&gt;OpenBSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/microsoft/WSL/issues/286&quot;&gt;WSL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(Note: The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volatile&lt;/code&gt; is necessary because C compilers rightfully do not see the contents of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buf&lt;/code&gt; as being consumed. Execution of the contents isn’t considered.)&lt;/p&gt;
&lt;p&gt;In case you hadn’t already caught it, there’s a catch. The linker needs to link a binary that asks the loader for an executable stack (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-z execstack&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ cc -std=c99 -Os -Wl,-z,execstack trampoline.c
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That’s because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buf&lt;/code&gt; contains x86 code implementing the trampoline:&lt;/p&gt;
&lt;div class=&quot;language-nasm highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;; assign third argument&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;mov&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;cmp&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;; store cmp address in RAX register&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;jmp&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;rax&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;; jump to cmp&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Note: The absolute jump through a 64-bit register is necessary because the trampoline on the stack and the jump target will be very far apart. Further, these days the program will likely be compiled as a Position Independent Executable (PIE), so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmp&lt;/code&gt; &lt;a href=&quot;https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models&quot;&gt;might itself have an high address&lt;/a&gt; rather than load into the lowest 32 bits of the address space.)&lt;/p&gt;
&lt;p&gt;However, executable stacks were phased out ~15 years ago because it makes buffer overflows so much more dangerous! Attackers can inject and execute whatever code they like, typically &lt;em&gt;shellcode&lt;/em&gt;. That’s why we need this unusual linker option.&lt;/p&gt;
&lt;p&gt;You can see that the stack will be executable using our old friend, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readelf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ readelf -l a.out
...
  GNU_STACK  0x00000000 0x00000000 0x00000000
             0x00000000 0x00000000 RWE   0x10
...
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note the “RWE” at the bottom right, meaning read-write-execute. This is a really bad sign in a real binary. Do any binaries installed on your system right now have an executable stack? &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=944817&quot;&gt;I found one on mine&lt;/a&gt;. (Update: &lt;a href=&quot;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=944971&quot;&gt;A major one was found in the comments by Walter Misar&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;When compiling the original version using a nested function there’s no need for that special linker option. That’s because GCC saw that it would need an executable stack and used this option automatically.&lt;/p&gt;
&lt;p&gt;Or, more specifically, GCC &lt;em&gt;stopped&lt;/em&gt; requesting a non-executable stack in the object file it produced. For the GNU Binutils linker, &lt;strong&gt;the default is an executable stack.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;fail-open-design&quot;&gt;Fail open design&lt;/h3&gt;
&lt;p&gt;Since this is the default, the only way to get a non-executable stack is if &lt;em&gt;every&lt;/em&gt; object file input to the linker explicitly declares that it does not need an executable stack. To request a non-executable stack, an object file &lt;a href=&quot;https://www.airs.com/blog/archives/518&quot;&gt;must contain the (empty) section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.note.GNU-stack&lt;/code&gt;&lt;/a&gt;. If even a single object file fails to do this, then the final program gets an executable stack.&lt;/p&gt;
&lt;p&gt;Not only does one contaminated object file infect the binary, everything dynamically linked with it &lt;em&gt;also&lt;/em&gt; gets an executable stack. Entire processes are infected! This occurs even via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dlopen()&lt;/code&gt;, where the stack is dynamically made executable to accomodate the new shared object.&lt;/p&gt;
&lt;p&gt;I’ve been bit myself. In &lt;a href=&quot;https://nullprogram.com/blog/2016/11/15/&quot;&gt;&lt;em&gt;Baking Data with Serialization&lt;/em&gt;&lt;/a&gt; I did it completely by accident, and I didn’t notice my mistake until three years later. The GNU linker outputs object files without the special note by default even though the object file only contains data.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ echo hello world &amp;gt;hello.txt
$ ld -r -b binary -o hello.o hello.txt
$ readelf -S hello.o | grep GNU-stack
$
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is fixed with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-z noexecstack&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ ld -r -b binary -z noexecstack -o hello.o hello.txt
$ readelf -S hello.o | grep GNU-stack
  [ 2] .note.GNU-stack  PROGBITS  00000000  0000004c
$
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This may happen any time you link object files not produced by GCC, such as output &lt;a href=&quot;https://nullprogram.com/blog/2015/04/19/&quot;&gt;from the NASM assembler&lt;/a&gt; or &lt;a href=&quot;https://nullprogram.com/blog/2016/11/17/&quot;&gt;hand-crafted object files&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nested C closures are super slick, but they’re just not worth the risk of an executable stack, and they’re certainly not worth an entire toolchain being fail open about it.&lt;/p&gt;
&lt;ol class=&quot;references print-only&quot;/&gt;&lt;nav class=&quot;no-print&quot;&gt;
&lt;/nav&gt;
</description>
<pubDate>Sat, 16 Nov 2019 17:47:23 +0000</pubDate>
<dc:creator>pantalaimon</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://nullprogram.com/blog/2019/11/15/</dc:identifier>
</item>
</channel>
</rss>