<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Hacker increased chemical level at Oldsmar&amp;#039;s city water system, sheriff says</title>
<link>https://www.wtsp.com/article/news/local/pinellascounty/pinellas-oldsmar-water-system-computer-intrustion/67-512b2bab-9f94-44d7-841e-5169fdb0a0bd</link>
<guid isPermaLink="true" >https://www.wtsp.com/article/news/local/pinellascounty/pinellas-oldsmar-water-system-computer-intrustion/67-512b2bab-9f94-44d7-841e-5169fdb0a0bd</guid>
<description>&lt;p&gt;Thanks to a vigilant operator and several redundancies, officials say the heightened level of sodium hydroxide never caused a public threat.&lt;/p&gt;&lt;div readability=&quot;64.049856434351&quot;&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;OLDSMAR, Fla. — A hacker gained access to Oldsmar's water treatment plant, bumping the sodium hydroxide in the water to a &quot;dangerous&quot; level, Pinellas County Sheriff Bob Gualtieri said.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;37&quot;&gt;
&lt;p&gt;In a press conference Monday, Gualtieri said his deputies, along with the FBI and U.S. Secret Service, are investigating the breach as it is unclear if it came from within the U.S. or from a foreign actor.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;38&quot;&gt;
&lt;p&gt;The incident first occurred on Feb. 5 at the city's water treatment plant when, around 8 a.m., an operator noticed someone had remotely entered the computer system that he was monitoring. It's a system responsible for controlling the chemicals and other operations of the water treatment plant, Gualtieri said.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;At first, the operator did not think much of the action due to the common use of the remote access software by supervisors to troubleshoot from different locations. That's until it happened again. &lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;38&quot;&gt;
&lt;p&gt;And this time, Gualtieri says, the hacker did more than just remote in. According to the sheriff, the hacker spent up to five minutes in the system and adjusted the amount of sodium hydroxide in the water from 100 parts per million to 11,100.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;“This is obviously a significant and potentially dangerous increase. Sodium hydroxide, also known as lye, is the main ingredient in liquid drain cleaners,&quot; Gualtieri added.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_video&quot;&gt;
&lt;div data-module=&quot;video&quot; class=&quot;video&quot; data-stream=&quot;https://video.tegna-media.com/assets/WTSP/videos/1afb1b1e-80c9-4e3f-9a77-854c7bb7751a/1afb1b1e-80c9-4e3f-9a77-854c7bb7751a.m3u8&quot; data-float=&quot;false&quot; data-thumbnail=&quot;https://media.wtsp.com/assets/WTSP/images/64686931-9317-4865-82e8-20bb4b591f4f/64686931-9317-4865-82e8-20bb4b591f4f_1920x1080.jpg&quot; data-title=&quot;Pinellas leaders explain 'computer intrusion' of city water system&quot; data-description=&quot;Thanks to a vigilant operator and several redundancies, the heightened level of sodium hydroxide never caused a public threat.&quot; data-site=&quot;67&quot; data-id=&quot;1afb1b1e-80c9-4e3f-9a77-854c7bb7751a&quot; data-dfpposition=&quot;&quot; data-mute=&quot;false&quot; data-autoplay=&quot;false&quot; data-link=&quot;https://www.wtsp.com/video/news/crime/pinellas-leaders-explain-computer-intrusion-of-city-water-system/67-1afb1b1e-80c9-4e3f-9a77-854c7bb7751a&quot; data-origin=&quot;upload&quot; data-section=&quot;news&quot; data-subsection=&quot;crime&quot; data-subcategory=&quot;crime&quot; data-topic=&quot;&quot; data-subtopic=&quot;&quot; data-captions=&quot;https://video.tegna-media.com/assets/WTSP/videos/1afb1b1e-80c9-4e3f-9a77-854c7bb7751a/1afb1b1e-80c9-4e3f-9a77-854c7bb7751a_vtt.vtt&quot; data-related-playlist-id=&quot;2mphgcZ1&quot; data-related-media-id=&quot;NJMOeCC3&quot; data-use-trending=&quot;true&quot; data-is-watch-player=&quot;false&quot; data-is-live-now=&quot;false&quot; data-ugc-preroll-disabled=&quot;true&quot; data-duration=&quot;994&quot; data-disable-preroll-at-duration=&quot;0&quot;&gt;
&lt;div class=&quot;video__ratio-enforcer&quot;&gt;
&lt;div class=&quot;video__ratio-enforced&quot;&gt;
&lt;div class=&quot;video__inner&quot;&gt;
&lt;div class=&quot;video__teaser video__teaser_visible_true&quot;&gt;&lt;img class=&quot;video__thumbnail&quot; data-asset-fallback=&quot;default&quot; src=&quot;https://media.wtsp.com/assets/WTSP/images/64686931-9317-4865-82e8-20bb4b591f4f/64686931-9317-4865-82e8-20bb4b591f4f_1920x1080.jpg&quot;/&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;33&quot;&gt;
&lt;p&gt;The operator immediately reduced the levels back to the appropriate amount and “at no time was there a significant adverse effect on the water being treated.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;Even if the operator did not notice the intrusion, the sheriff, Oldsmar Mayor Eric Seidel and City Manager Al Braithwaite all noted several fail-safes and alarm systems are in place to flag issues of this kind.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;Gualtieri reinforced that at no time was the public in danger.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;“The important thing is to put everyone on notice and I think that’s really the purpose of today is to make sure that everyone realizes that these bad actors are out there,&quot; Seidel said.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;The caustic substance could have caused major issues for the city's drinking water supply. &lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;“If you put that amount of that substance in the drinking water it’s not a good thing,&quot; Gualtieri said. It's why he and the other area leaders refer to the person responsible as a &quot;bad actor.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;“This is somebody who is trying, as it appears on the surface, to do something bad,&quot; the sheriff said.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;The remote access program has been disabled while work is done to ensure a breach like this does not happen again, according to Braithwaite.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;While the identity of the accused hacker is not yet known, Gualtieri says his team has been working through the weekend on some leads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;36&quot;&gt;
&lt;p&gt;According to the sheriff, there is no knowledge of any other area systems being unlawfully accessed, but he did ask all area governmental entities to take a critical look at their infrastructure to ensure their security practices are up to par.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;21.510416666667&quot;&gt;
&lt;p&gt;&quot;This should be treated as a matter of national security,&quot; &lt;a href=&quot;https://twitter.com/marcorubio/status/1358909642185859077&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;U.S. Marco Rubio, R-Florida, tweeted.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_embed&quot; readability=&quot;26.602941176471&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;7.9411764705882&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I will be asking the &lt;a href=&quot;https://twitter.com/FBI?ref_src=twsrc%5Etfw&quot;&gt;@FBI&lt;/a&gt; to provide all assistance necessary in investigating an attempt to poison the water supply of a &lt;a href=&quot;https://twitter.com/hashtag/Florida?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Florida&lt;/a&gt; city.&lt;/p&gt;&lt;p&gt;This should be treated as a matter of national security.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://t.co/XhGNLplNpr&quot;&gt;https://t.co/XhGNLplNpr&lt;/a&gt; via &lt;a href=&quot;https://twitter.com/VICE?ref_src=twsrc%5Etfw&quot;&gt;@vice&lt;/a&gt;&lt;/p&gt;
— Marco Rubio (@marcorubio) &lt;a href=&quot;https://twitter.com/marcorubio/status/1358909642185859077?ref_src=twsrc%5Etfw&quot;&gt;February 8, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;32&quot;&gt;
&lt;p&gt;&lt;strong&gt;What other people are reading right now:&lt;/strong&gt;&lt;a href=&quot;http://tinyurl.com/4ox6fgmm&quot;&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;18.149253731343&quot;&gt;
&lt;p&gt;&lt;strong&gt;►Breaking news and weather alerts: &lt;/strong&gt;&lt;a href=&quot;https://tinyurl.com/y5oowckg&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Get the free 10 Tampa Bay app&lt;/strong&gt;&lt;/a&gt;&lt;strong/&gt;&lt;strong/&gt;&lt;strong/&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;article__section article__section_type_text utility__text&quot; readability=&quot;10.202898550725&quot;&gt;
&lt;p&gt;►&lt;strong&gt;Stay In the Know! &lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://tinyurl.com/yypnrq3s&quot;&gt;Sign up now for the Brightside Blend Newsletter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 08 Feb 2021 21:16:53 +0000</pubDate>
<dc:creator>bschne</dc:creator>
<og:url>https://www.wtsp.com/article/news/local/pinellascounty/pinellas-oldsmar-water-system-computer-intrustion/67-512b2bab-9f94-44d7-841e-5169fdb0a0bd</og:url>
<og:title>'This is dangerous stuff': Hacker increased chemical level at Oldsmar's water system, sheriff says</og:title>
<og:description>Thanks to a vigilant operator and several redundancies, officials say the heightened level of sodium hydroxide never caused a public threat.</og:description>
<og:type>article</og:type>
<og:image>https://media.wtsp.com/assets/WTSP/images/69f3cbdf-c368-4596-8187-a104c601feca/69f3cbdf-c368-4596-8187-a104c601feca_1140x641.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wtsp.com/article/news/local/pinellascounty/pinellas-oldsmar-water-system-computer-intrustion/67-512b2bab-9f94-44d7-841e-5169fdb0a0bd</dc:identifier>
</item>
<item>
<title>Show HN: Clerk – all of user management as-a-service, not just authentication</title>
<link>https://clerk.dev/blog/all-of-user-management-not-just-authentication</link>
<guid isPermaLink="true" >https://clerk.dev/blog/all-of-user-management-not-just-authentication</guid>
<description>&lt;p&gt;&lt;br/&gt;While working on side projects, we've always felt that adding &lt;strong&gt;great&lt;/strong&gt; user management was too complex and too cumbersome.&lt;/p&gt;
&lt;p&gt;The task came with a sense of helplessness. We knew what &quot;great&quot; looked like, but it was impractical to build all of that functionality.&lt;br/&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5fd7bfc6e6f1ce2fd6ab58c5/6019dfd34486031760de5797_blog-google.png&quot; loading=&quot;lazy&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
Google user management
&lt;p&gt;We thought authentication-as-a-service vendors might ease our pain, but over and over again, we were disappointed by how much extra work was necessary. We never understood why until one friend quipped, &lt;em&gt;&quot;auth-as-a-service really just solves half of 2-factor auth.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Then it clicked. &lt;strong&gt;We needed all of user management, not &lt;em&gt;just&lt;/em&gt; authentication.&lt;/strong&gt; And we realized if we could solve this problem, countless others could benefit, too.&lt;/p&gt;
&lt;p&gt;Today, we're absolutely thrilled to launch Clerk: &lt;strong&gt;user management as-a-service&lt;/strong&gt;. We're solving the whole problem, from frontend to backend, with beautiful UIs and elegant APIs. Our architecture pulls user management out of the way, so developers can focus on what makes their software truly special.&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5fd7bfc6e6f1ce2fd6ab58c5/6019dff6fd671523538092e1_blog-clerk.png&quot; loading=&quot;lazy&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
Clerk user management
&lt;p&gt;Our launch today includes UI components for Sign Up, Sign In, User Profile, and what we're calling the &quot;User Button.&quot; They can be mounted directly in your application, or you can redirect users to a Clerk-hosted page on &lt;strong&gt;accounts.yourdomain.com&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Best of all, the components will automatically update as our team optimizes their design, develops new features, and adds support for the latest in account security.&lt;/p&gt;
&lt;p&gt;While today marks an exciting milestone for Clerk, this is truly just a &quot;minimum viable product.&quot; The roadmap ahead will bring many features to better support developers and their end users:&lt;/p&gt;
&lt;ul role=&quot;list&quot;&gt;&lt;li&gt;SDKs for additional languages and frameworks&lt;/li&gt;
&lt;li&gt;Additional OpenID Connect and OAuth providers&lt;/li&gt;
&lt;li&gt;Additional 2-step verification factors like TOTP and WebAuthN&lt;/li&gt;
&lt;li&gt;Session management and revocation in the User Profile&lt;/li&gt;
&lt;li&gt;Team management and enterprise authentication like SAML&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Need help with something you don't see listed? &lt;a href=&quot;https://dashboard.clerk.dev/feedback&quot;&gt;Make a request.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 08 Feb 2021 20:25:32 +0000</pubDate>
<dc:creator>colinclerk</dc:creator>
<og:title>Introducing Clerk: All of user management, not just authentication - Clerk</og:title>
<og:description>Today, we're absolutely thrilled to launch Clerk: user management as-a-service. We're solving the whole problem, from frontend to backend, with beautiful UIs and elegant APIs.</og:description>
<og:image>https://uploads-ssl.webflow.com/5fd7bfc6e6f1ce2fd6ab58c5/6019dff6fd671523538092e1_blog-clerk.png</og:image>
<og:type>website</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://clerk.dev/blog/all-of-user-management-not-just-authentication</dc:identifier>
</item>
<item>
<title>New 10 Terapixel Image of the Night Sky Contains 1B Galaxies</title>
<link>https://viewer.legacysurvey.org/#IC%203206</link>
<guid isPermaLink="true" >https://viewer.legacysurvey.org/#IC%203206</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://viewer.legacysurvey.org/#IC%203206&quot;&gt;https://viewer.legacysurvey.org/#IC%203206&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=26067326&quot;&gt;https://news.ycombinator.com/item?id=26067326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 210&lt;/p&gt;
&lt;p&gt;# Comments: 117&lt;/p&gt;
</description>
<pubDate>Mon, 08 Feb 2021 17:17:14 +0000</pubDate>
<dc:creator>soheilpro</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://viewer.legacysurvey.org/</dc:identifier>
</item>
<item>
<title>Reminder: Terraria Dev’s Google Story Is Not Unusual at All</title>
<link>https://codewriteplay.com/2021/02/08/reminder-terraria-devs-google-story-is-not-unusual-at-all/</link>
<guid isPermaLink="true" >https://codewriteplay.com/2021/02/08/reminder-terraria-devs-google-story-is-not-unusual-at-all/</guid>
<description>&lt;style type=&quot;text/css&quot;&gt;&lt;![CDATA[.fb-comments,.fb-comments span,.fb-comments span iframe[style]{min-width:100%!important;width:100%!important}]]&gt;&lt;/style&gt;
&lt;p&gt; &lt;em&gt;Terraria&lt;/em&gt; co-creator Andrew Spinks is the latest high-profile victim of Google’s ban-first, answer-questions-never approach to creators on its platform, but the problem goes back over a decade. &lt;/p&gt;



&lt;span id=&quot;more-3493&quot;/&gt;


                &lt;div class=&quot;aligncenter wpcnt&quot;&gt;
                        &lt;div class=&quot;wpa&quot;&gt;
                                &lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;
                                
                        &lt;/div&gt;
                &lt;/div&gt;


&lt;p&gt;If you’re new, welcome! You might like our companion podcast, &lt;a href=&quot;https://codewriteplay.com/the-gamedev-breakdown-podcast/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;GameDev Breakdown&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;In a recent thread on Twitter, Spinks tagged Google in an explanation of his situation. In short: his accounts have been locked for weeks, and no one will tell him why. &lt;/p&gt;



&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/Google?ref_src=twsrc%5Etfw&quot;&gt;@Google&lt;/a&gt; my account has now been disabled for over 3 weeks. I still have no idea why, and after using every resource I have to get this resolved you have done nothing but given me the runaround.&lt;/p&gt;— Andrew Spinks (@Demilogic) &lt;a href=&quot;https://twitter.com/Demilogic/status/1358661840402845696?ref_src=twsrc%5Etfw&quot;&gt;February 8, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;Like countless internet users, Spinks had loads of money and data under Google’s control in the form of Google Play apps, Google Drive space, YouTube content, and his Gmail account. &lt;/p&gt;



&lt;p&gt;The thread’s replies are packed with users who share similar stories.&lt;/p&gt;



&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The same happened to me a few months ago. Any appeal is met with automatic denials and just &quot;you violated terms of service.&quot; &lt;a href=&quot;https://t.co/W7Ot6c5Wqt&quot;&gt;https://t.co/W7Ot6c5Wqt&lt;/a&gt;&lt;/p&gt;— Cleroth⭐ (@Cleroth) &lt;a href=&quot;https://twitter.com/Cleroth/status/1358744907188498433?ref_src=twsrc%5Etfw&quot;&gt;February 8, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;Spinks’ story is frustrating, but it’s far from new. For nearly as long as Google has offered user accounts, users have shared stories of mysterious ban notices and lockouts with vague—if any—reasoning. Although there is an appeals process in the case of bans, submissions are commonly rejected without revealing any additional significant information. &lt;/p&gt;



&lt;p&gt;In Google’s earliest days, this phenomenon was tied almost exclusively to webmasters and bloggers using the AdSense system (this is where yours truly was personally &lt;a rel=&quot;noreferrer noopener&quot; href=&quot;https://codewriteplay.com/?s=Invalid+activity&quot; target=&quot;_blank&quot;&gt;banned for life&lt;/a&gt; years ago now). As big as Google is, it seems to consistently do more advertising business than it can apparently keep track of, so it seems to rely on a largely automated system of flagging what it deems “suspicious” or “invalid” activity on its ads, routinely banning the responsible accounts. &lt;/p&gt;



&lt;p&gt;But the word “responsible” is interesting in the context of ads accessible to the entire internet. In effect, anyone can go on a clicking spree on anyone’s AdSense ads with a decent chance of getting the responsible account banned indefinitely. This has led to a loss of tons of advertising revenue for creators likely in no way responsible for their removal. This nonsensical system has become so well-known that a cottage industry for &lt;a href=&quot;https://krebsonsecurity.com/2020/02/pay-up-or-well-make-google-ban-your-ads/&quot;&gt;Adsense Extortion&lt;/a&gt; eventually sprung up targeting site owners. The threat: pay us or we’ll get you banned. &lt;/p&gt;


                &lt;div class=&quot;aligncenter wpcnt&quot;&gt;
                        &lt;div class=&quot;wpa&quot;&gt;
                                &lt;span class=&quot;wpa-about&quot;&gt;Advertisements&lt;/span&gt;
                                
                        &lt;/div&gt;
                &lt;/div&gt;


&lt;p&gt;Instead of improving, Google has taken over more of the internet, and the lazy bans have spread. YouTube creators are now at the mercy of the very same system that once only plagued us webmaster nerds. Anyone is capable of the very same “invalid click activity” on the very same ads, and the &lt;a rel=&quot;noreferrer noopener&quot; href=&quot;https://www.polygon.com/2015/1/20/7856497/google-youtube-adsense-kafka&quot; target=&quot;_blank&quot;&gt;results are identical&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;Spinks’ lockout seems more security-related. It’s unlikely he does a lot with AdSense, and ad bans rarely result in a full account lockout. However, this doesn’t explain why Google has left him with no idea what happened for most of a month now. He’s absolutely right in saying Google is a risk to his business. &lt;/p&gt;



&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I will not be involved with a corporation that values their customers and partners so little. Doing business with you is a liability.&lt;/p&gt;— Andrew Spinks (@Demilogic) &lt;a href=&quot;https://twitter.com/Demilogic/status/1358661843192012801?ref_src=twsrc%5Etfw&quot;&gt;February 8, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;While no one is in a position to &lt;em&gt;fully &lt;/em&gt;ruin Google’s day, Spinks was in a better position to give them something to think about than the rest of us. &lt;/p&gt;



&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I absolutely have not done anything to violate your terms of service, so I can take this no other way than you deciding to burn this bridge. Consider it burned. &lt;a href=&quot;https://twitter.com/hashtag/Terraria?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Terraria&lt;/a&gt; for &lt;a href=&quot;https://twitter.com/GoogleStadia?ref_src=twsrc%5Etfw&quot;&gt;@GoogleStadia&lt;/a&gt; is canceled. My company will no longer support any of your platforms moving forward.&lt;/p&gt;— Andrew Spinks (@Demilogic) &lt;a href=&quot;https://twitter.com/Demilogic/status/1358661842147692549?ref_src=twsrc%5Etfw&quot;&gt;February 8, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;Google has been known to reach out in a very limited number of high-profile cases like this to resolve issues, but it’s frankly a bad look at this point whether they do or don’t. I would never call on a dev to make good on a threat to cancel a game, but I hope he’ll continue to advocate for the countless creators who have no leverage with the internet’s premiere provider for synchronized productivity and advertising revenue solutions. &lt;/p&gt;
                
                
                &lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;

                </description>
<pubDate>Mon, 08 Feb 2021 17:08:25 +0000</pubDate>
<dc:creator>teddyh</dc:creator>
<og:type>article</og:type>
<og:title>Reminder: Terraria Dev’s Google Story Is Not Unusual at All</og:title>
<og:url>https://codewriteplay.com/2021/02/08/reminder-terraria-devs-google-story-is-not-unusual-at-all/</og:url>
<og:description>Terraria co-creator Andrew Spinks is the latest high-profile victim of Google’s ban-first, answer-questions-never approach to creators on its platform, but the problem goes back over a decade.</og:description>
<og:image>https://i1.wp.com/codewriteplay.com/wp-content/uploads/2021/02/img_0103-e1612798519211.jpg?fit=700%2C394&amp;ssl=1</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://codewriteplay.com/2021/02/08/reminder-terraria-devs-google-story-is-not-unusual-at-all/</dc:identifier>
</item>
<item>
<title>Rust Foundation: Hello, World</title>
<link>https://foundation.rust-lang.org/posts/2021-02-08-hello-world/</link>
<guid isPermaLink="true" >https://foundation.rust-lang.org/posts/2021-02-08-hello-world/</guid>
<description>&lt;p&gt;Today, on behalf of the Rust Core team, I’m excited to announce the Rust Foundation, a new independent non-profit organization to steward the Rust programming language and ecosystem, with a unique focus on supporting the set of maintainers that govern and develop the project. The Rust Foundation will hold its first board meeting tomorrow, February 9th, at 4pm CT. &lt;a href=&quot;https://foundation.rust-lang.org/board/&quot;&gt;The board of directors is composed of 5 directors from our Founding member companies, AWS, Huawei, Google, Microsoft, and Mozilla, as well as 5 directors from project leadership, 2 representing the Core Team, as well as 3 project areas: Reliability, Quality, and Collaboration.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This marks a huge step in the growth of Rust on several axes; not the least of which, a formal, financial commitment from a set of global industry leading companies, heralding Rust’s arrival as an enterprise production-ready technology. I am personally moved, and motivated, by the sense of responsibility that comes from this commitment. Our founding sponsors’ eager and enthusiastic participation is not only a promise to maintain and sustain Rust as what it is today, but an endorsement of Rust’s values and a dedication to share the responsibility of cultivating the future that Rust aspires to.&lt;/p&gt;
&lt;p&gt;Mozilla, the original home of the Rust project, has transferred all trademark and infrastructure assets, including the &lt;a href=&quot;https://crates.io/&quot;&gt;crates.io package registry&lt;/a&gt;, to the Rust Foundation. We’re filled with gratitude for Mozilla whose thoughtful incubation of the project from its inception as a &lt;a href=&quot;https://research.mozilla.org/rust/&quot;&gt;research project&lt;/a&gt; in 2010, to &lt;a href=&quot;https://blog.rust-lang.org/2015/05/15/Rust-1.0.html&quot;&gt;establishing independent governance with the 1.0 release in 2015&lt;/a&gt;, has led us to this moment, as we set out as a fully independent organization. Without their support, we wouldn’t find ourselves in the position we do today.&lt;/p&gt;
&lt;p&gt;Over the last decade, Rust, the programming language, has been a barrier-breaking technology- deconstructing previously assumed-immovable tradeoffs and binary oppositions. Slogans like “concurrency without data races”, “memory safety without garbage collection”, and ultimately &lt;a href=&quot;https://www.youtube.com/watch?v=lO1z-7cuRYI&quot;&gt;“hack without fear”&lt;/a&gt;, speak to the perspective-challenging character of Rust’s unique marriage of academic research and industry practicality. But to suggest that Rust’s impact is solely technical would be to miss a majority of the story. As a &lt;a href=&quot;https://brson.github.io/fireflowers/&quot;&gt;flurry of blog posts&lt;/a&gt; from &lt;a href=&quot;https://medium.com/@ag_dubs/fire-flowers-and-marios-marketing-rust-996b3fdbe8f3&quot;&gt;community&lt;/a&gt; &lt;a href=&quot;https://graydon2.dreamwidth.org/247406.html&quot;&gt;leaders&lt;/a&gt; discussed in 2016: &lt;a href=&quot;https://steveklabnik.com/writing/rust-is-more-than-safety&quot;&gt;Rust’s product is not a programming language or a compiler&lt;/a&gt;. Rust’s &lt;a href=&quot;https://www.thefeedbackloop.xyz/safety-is-rusts-fireflower/&quot;&gt;product is the experience of being a Rust developer&lt;/a&gt; and it follows that Rust’s website declares its official slogan: “A language empowering everyone to build reliable and efficient software”.&lt;/p&gt;
&lt;p&gt;However, I’ve always taken the opportunity to editorialize this with &lt;a href=&quot;https://github.com/rust-lang/www.rust-lang.org/commit/f59adeb7fa645e282b2359cb7e10e331ac00d9c5&quot;&gt;the original version I penned in 2018&lt;/a&gt; and recently reiterated in &lt;a href=&quot;https://youtu.be/IwPRu5FhfIQ?t=2164&quot;&gt;my portion of the RustConf 2020 keynote&lt;/a&gt;: “A language empowering everyone, but especially folks who thought that systems programming wasn’t for them.” One of the most powerful driving forces of the Rust project is the simultaneous belief in the power of systems programming and the commitment to ensuring that such power is wieldable by &lt;em&gt;everyone&lt;/em&gt;. The accessibility at the heart of Rust’s message of empowerment has motivated every part of the project, from first class package management and developer toolchain, to the culture of excellent error messages and documentation, to international event organizers and translators, to the code of conduct and moderation team.&lt;/p&gt;
&lt;p&gt;But Rust is so much more than a programming language and a community- Rust also represents a new, radical, way to collaborate on open source projects. The decision making power within the Rust project is uniquely delegated and distributed; with the core team holding little more privilege than other more specialized teams. Rust counts &lt;a href=&quot;https://www.rust-lang.org/governance&quot;&gt;more than 100 team members&lt;/a&gt; as leaders in the design and maintenance of the project, &lt;a href=&quot;https://thanks.rust-lang.org/&quot;&gt;shepherding nearly 6000 contributors to the rust-lang/rust repo alone since the project’s first release&lt;/a&gt;. Through &lt;a href=&quot;https://github.com/rust-lang/rfcs&quot;&gt;Rust’s RFC process&lt;/a&gt;, more than 1000 people have made nearly 500 decisions that represent the most &lt;a href=&quot;https://github.com/rust-lang/rfcs#when-you-need-to-follow-this-process&quot;&gt;critical and strategic product and design decisions for the project&lt;/a&gt;. Guiding principles like &lt;a href=&quot;http://aturon.github.io/tech/2018/05/25/listening-part-1/#the-great-int-debate-and-the-no-new-rationale-rule&quot;&gt;“no new rationale”&lt;/a&gt; ensure that these conversations happen fully in the open, giving operational teeth to the fundamental beliefs of the project: that a &lt;a href=&quot;http://smallcultfollowing.com/babysteps/blog/2020/12/30/the-more-things-change/#on-pluralism-and-the-rust-organization&quot;&gt;plurality of voices&lt;/a&gt; is better than one; that &lt;a href=&quot;https://youtu.be/JLstJFvdl4s?t=1808&quot;&gt;collaboration is not zero-sum&lt;/a&gt;; that we are stronger, and smarter, as a group than alone.&lt;/p&gt;
&lt;p&gt;Rust believes that the ability of anyone to participate in the design and development of Rust is a mission critical aspect of building a language and ecosystem that is truly accessible to everyone. And the potential of such a system has bore fruit: It is not a mistake that such a promising technology has emerged from such a progressive conception of collaboration. But such a system comes at a cost; a cost that is too often invisible and thus unaccounted for. For too long, open source as both an industry and a community has done a poor audit of its expenses. Notably, ignoring the price of what I’d controversially argue is the core value proposition of open source software: the freedom to collaborate.&lt;/p&gt;
&lt;p&gt;Starting several decades ago, open source foundations were established to cultivate the use of open source software in commercial organizations large and small. Today, as we announce the Rust Foundation, we build on the incredible success of their mission: We no longer need to evangelize the use of open source software to the largest and most influential players in our industry; we can assume it. Our challenge is a new one, one that emerges from that accomplishment- we need to support and prepare our maintainers and open governance structures to support what promises to be a period of record breaking growth and adoption. The Rust Foundation seeks to center and stabilize the experiences of the amazing people who are responsible for making Rust what it is today, and to generalize and establish a healthier maintainer experience and ecology.&lt;/p&gt;
&lt;p&gt;Today is an incredibly exciting moment for Rust. I wrote my first (still publicly available) lines of Rust nearly 5 years ago and it’s amazing to see how far we have come and the promise of how far we might go. Our founding members represent a 2 year commitment to a more than million dollar yearly budget to develop services, programs, and events that will support the Rust project maintainers in building the best possible Rust, and we’ve only just begun. To learn more about the project, our organization, and becoming a member, please visit &lt;a href=&quot;https://foundation.rust-lang.org&quot;&gt;foundation.rust-lang.org&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 08 Feb 2021 17:02:49 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:type>website</og:type>
<og:url>https://foundation.rust-lang.org/</og:url>
<og:title>Rust Foundation</og:title>
<og:description>The Rust Foundation is an independent non-profit organization to steward the Rust programming language and ecosystem, with a unique focus on supporting the set of maintainers that govern and develop the project.</og:description>
<og:image>https://foundation.rust-lang.org/img/thumbnail.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://foundation.rust-lang.org/posts/2021-02-08-hello-world/</dc:identifier>
</item>
<item>
<title>I followed my dreams to get demoted to software developer</title>
<link>https://stackoverflow.blog/2021/02/08/moving-from-designer-to-developer-stack-overflow/</link>
<guid isPermaLink="true" >https://stackoverflow.blog/2021/02/08/moving-from-designer-to-developer-stack-overflow/</guid>
<description>&lt;p&gt;Almost one year ago, I began my new job as an associate software developer here at Stack Overflow. Before that, I’d been running the Product Design team, first as a manager and then as director of design. It’s admittedly an unconventional career change, but for me personally, it couldn’t have made more sense.&lt;/p&gt;
&lt;p&gt;I’ve always loved figuring things out. The first time I remember feeling the problem-solving glow was in junior high in Algebra I. That giddiness that floods your stomach when you’ve been throwing your brain at something for a while, and then it finally clicks. In my senior year of college, I took an intro to computer science class as an elective with a friend out of curiosity. My friend hated it, but I remember sitting there thinking, there’s that feeling. It clicks.&lt;/p&gt;
&lt;p&gt;Then that sort of simmered. I did a bit of front-end dev work at my first post-undergrad job (we’re talking basic HTML only). When I went back to school for Human-Computer Interaction, I got to do a bit more coding, mostly just &lt;a href=&quot;https://twitter.com/kristinalustig/status/165839257838174208?s=20&quot;&gt;Java&lt;/a&gt;, Arduino stuff, and Adobe Flex [RIP], but never more than that. When I started working as a UX Researcher after grad school, I thought, “Well, this is your career now!”&lt;/p&gt;
&lt;p&gt;I genuinely think that my problem, for years, has been confidence. I was just a UX person, not a coder. Surrounded by only the most freakishly good developers at Facebook (and then at Stack Overflow), I pushed whatever fantasies I had about coding professionally aside.&lt;/p&gt;
&lt;p&gt;Instead, I kept it as a &lt;a href=&quot;https://twitter.com/kristinalustig/status/273582093722873858?s=20&quot;&gt;hobby&lt;/a&gt;. It’s important here that I credit several different entities/people for keeping my interest in coding going:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://ldjam.com&quot;&gt;&lt;strong&gt;Ludum Dare&lt;/strong&gt;&lt;/a&gt; for forcing me to stop getting tangled up in my own head and instead to embrace whatever horrible code flowed from my fingertips.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://solar2d.com/&quot;&gt;&lt;strong&gt;Corona SDK (now Solar2D)&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://love2d.org/&quot;&gt;&lt;strong&gt;Löve2D&lt;/strong&gt;&lt;/a&gt; for being extremely accessible and well-documented tools for game creation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://projecteuler.net/&quot;&gt;&lt;strong&gt;Project Euler&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://adventofcode.com/&quot;&gt;&lt;strong&gt;Advent of Code&lt;/strong&gt;&lt;/a&gt; for giving me super challenging yet achievable coding problems to do.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zachtronics.com/&quot;&gt;&lt;strong&gt;Zachtronics&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;http://tomorrowcorporation.com/games&quot;&gt;&lt;strong&gt;Tomorrow Corporation&lt;/strong&gt;&lt;/a&gt; for creating coding games that helped me understand that the gap between current-me and developer-me wasn’t intelligence, just knowledge and confidence.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Several of my Stack Overflow developer colleagues&lt;/strong&gt; for being the first people to whom I admitted that I wanted to be a developer myself. They’ve all been so encouraging, supportive, and kind, and I can’t imagine starting this career anywhere else.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;During these few years in which I’ve been coding in earnest on the side, I also found myself regularly discouraged and &lt;a href=&quot;https://twitter.com/kristinalustig/status/1028765625018142725&quot;&gt;confused&lt;/a&gt; by the sheer number of possible things that I could learn or do. I can’t count the number of quarter-finished games and barely-started projects I have in my private &lt;a href=&quot;https://github.com/kristinalustig&quot;&gt;GitHub&lt;/a&gt; repos (actually, I can. It’s 15, and those are just the ones that made it there). Without much formal education in this field, I’d frequently get lost down documentation holes and find myself drowning in the 800 ways of &lt;em&gt;maybe&lt;/em&gt; solving the problem that I had. Finally, I came to the conclusion that I needed more structure, and that I wouldn’t be able to get that structure in the hour of useful-brain-time I had after work each day. I started researching bootcamps and doing budget calculations and made plans to leave Stack Overflow.&lt;/p&gt;
&lt;p&gt;I went to my new manager last year to let her know that I was going to have to leave. I told her that I’d wanted to be a developer for a long time and that I’d need to go pursue that dream somewhere else. Her answer? “Well… have you considered pursuing that here?” That put in motion a flurry of frank conversations with my now-manager, evaluations of my skills, and ultimately a plan to take what I’ll call my vaguely useful and large blobs of knowledge and refine them into the building blocks of a career in development. &lt;/p&gt;
&lt;p&gt;The areas where I needed the most work were largely back-end, which makes sense. In the games and projects I’d worked on, I never had to worry about storage, accessing data, or how to scale things properly. My manager put together a series of projects designed to build my knowledge in those areas. We used &lt;a href=&quot;https://flask.palletsprojects.com/en/1.1.x/&quot;&gt;Flask&lt;/a&gt; as the basis for my projects, as the barrier to entry is low and I already felt pretty confident with Python.&lt;/p&gt;
&lt;p&gt;Once I finished those projects, it was time to actually start digging into .NET and Stack Overflow. The leap from making fun little Flask apps to working on the Stack Overflow codebase was … a big one. The hardest part for me has been getting used to working on code that lots of other people had worked on. With my own personal projects, I knew why each line of code was there (or at least, I did at some point), and I knew what everything did. With a codebase that’s so large that I’ll never actually ever read all of it, I had to start exercising a whole new set of skills I didn’t know I’d need.&lt;/p&gt;
&lt;p&gt;So that’s where I am right now: working on projects on the Public Platform team and getting better at understanding enormous, &lt;a href=&quot;https://twitter.com/kristinalustig/status/1291077399946366977?s=20&quot;&gt;complex webs of code&lt;/a&gt;. I won’t lie, I feel incredibly lucky to be in this position. Without a snazzy portfolio, CS degree, or expensive bootcamp under my belt, getting this opportunity with a cold apply would have been nearly impossible. The moral of the story isn’t: “Hey, just work for a really cool and understanding company for three years and then see if they’ll demote you!” That’s not very practical. If you work in tech, however, don’t underestimate how much your job wants to keep you around and don’t be afraid to ask for the things you want. As I used to tell the folks on the design team, “The worst thing that will happen if you ask someone for something is that they’ll say ‘No.’ And maybe laugh at you.” &lt;/p&gt;
&lt;p&gt;Most importantly, I was right: I thought I’d love writing code professionally, and it turns out, I do! Sure, sometimes I submit a pull request for review and am subsequently embarrassed by the oversights I’ve made. And yeah, occasionally (but no more than a few times per day!) I am absolutely &lt;a href=&quot;https://twitter.com/kristinalustig/status/1321851509655687170?s=20&quot;&gt;positive&lt;/a&gt; I’m going to be fired for my obvious incompetence any second now. But I’m so happy I made this decision. If you’re thinking about this kind of career change yourself, then listen: you’re smart enough, brave enough, everything enough to make the career decisions you want to make. Don’t look back in ten years and wish you’d made a change now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Illustrations by &lt;a target=&quot;_blank&quot; href=&quot;https://alexandrafrancis.com/about&quot; rel=&quot;noreferrer noopener&quot;&gt;Alex Francis&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
Tags: &lt;a href=&quot;https://stackoverflow.blog/tag/career-advice/&quot; rel=&quot;tag&quot;&gt;career advice&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.blog/tag/software-development/&quot; rel=&quot;tag&quot;&gt;software development&lt;/a&gt;</description>
<pubDate>Mon, 08 Feb 2021 16:48:47 +0000</pubDate>
<dc:creator>TangerineDream</dc:creator>
<og:type>article</og:type>
<og:title>I followed my dreams to get demoted to software developer - Stack Overflow Blog</og:title>
<og:description>Kristina Lustig, formerly our Director of Design, explains why she took a new role as an associate software developer.</og:description>
<og:url>https://stackoverflow.blog/2021/02/08/moving-from-designer-to-developer-stack-overflow/</og:url>
<og:image>https://149351115.v2.pressablecdn.com/wp-content/uploads/2021/02/Kristina-Lustig-Blog-Post-Header.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stackoverflow.blog/2021/02/08/moving-from-designer-to-developer-stack-overflow/</dc:identifier>
</item>
<item>
<title>Don’t Underestimate the Power of a Walk</title>
<link>https://hbr.org/2021/02/dont-underestimate-the-power-of-a-walk</link>
<guid isPermaLink="true" >https://hbr.org/2021/02/dont-underestimate-the-power-of-a-walk</guid>
<description>&lt;div more-caption=&quot;more&quot; close-caption=&quot;close&quot; readability=&quot;45&quot;&gt;
&lt;p&gt;&lt;span class=&quot;summary-text&quot;&gt;Walking is one of the simplest and most strategic things you can do for yourself. It takes little preparation, minimal effort, no special equipment, and it can contract or expand to fit the exact amount of time you have available. According to the Centers for Disease Control and Prevention, a single bout of moderate-to vigorous activity (including walking) can improve our sleep, thinking, and learning, while reducing symptoms of anxiety. When we go for a walk, we perform better on tests of memory and attention; our brain cells build new connections, staving off the usual withering of brain tissue that comes with age; we can actively change the pace of our thoughts by deliberately walking more briskly or by slowing down; and our attention is left to meander and observe, helping us generate new ideas and to have strokes of insight.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;174.4712962963&quot;&gt;
&lt;div class=&quot;left-rail--container&quot;&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Tweet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Post&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Share&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;pdf-download hide-for-non-subscriber&quot;&gt;
&lt;p&gt;Get PDF&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;buy-copies&quot;&gt;
&lt;p&gt;Buy Copies&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;print-page&quot;&gt;
&lt;p&gt;Print&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;

&lt;p&gt;Several years ago, I was watching a &lt;em&gt;Today Show&lt;/em&gt; segment about helping your children and teens create healthy habits. The subject of the piece was a notable nutritionist, whose kids were reluctant to eat their greens and work up a sweat. The most memorable quote came from one of her pre-teens who said, “Walking makes me sad.”&lt;/p&gt;
&lt;p&gt;I must admit that, if I think about choosing between catching up on watching &lt;em&gt;The Crown&lt;/em&gt; or walking, walking would make me sad, too. In fact, if I had to choose between walking and any of my not-so-guilty pleasures — like baking triple-chocolate brownies or shopping for Japanese pancake molds online (they’ll arrive in two days) — I would choose the latter.&lt;/p&gt;
&lt;p&gt;But, when I think about the simplest and most strategic thing I am able to do for myself that’s Covid-safe, it’s walking. When I weigh what activity I can do almost every day, with little preparation, minimal effort, no special equipment, and that can contract or expand to fit the exact amount of time I have available, it’s walking. When I consider what I can do for myself even when my back pain is flaring up, it’s walking. When I want to do something that’s good for my mind, body, and soul, it’s walking. When I want someone’s company (physically distanced, of course) — or just want to be alone, walking works.&lt;/p&gt;
&lt;p&gt;I walk three miles per day, most days of the week, and I’m not alone in reaping the physiological, mental, and emotional rewards of walking. In his &lt;em&gt;New Yorker&lt;/em&gt; article, “&lt;a href=&quot;https://www.newyorker.com/tech/annals-of-technology/walking-helps-us-think&quot;&gt;Why Walking Helps Us Think&lt;/a&gt;,” journalist Ferris Jabr writes that when we go for a walk, we perform better on tests of &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/pubmed/23509628&quot;&gt;memory&lt;/a&gt; and &lt;a href=&quot;http://www.tandfonline.com/doi/abs/10.1080/01443410.2012.723612?journalCode=cedp20#.U87H-Khk7TI&quot;&gt;attention&lt;/a&gt;; our brain cells build &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/pubmed/20890449&quot;&gt;new connections&lt;/a&gt;, &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3039208/&quot;&gt;staving off the usual withering of brain tissue&lt;/a&gt; that comes with age; we can actively change the pace of our thoughts by deliberately walking more briskly or by slowing down; and our attention is left to meander and observe, helping us generate new ideas and to have strokes of insight. According to the Centers for Disease Control and Prevention, a single bout of moderate-to vigorous activity (including walking) &lt;a href=&quot;https://www.cdc.gov/physicalactivity/walking/index.htm&quot;&gt;can improve our sleep, thinking, and learning&lt;/a&gt;, while reducing symptoms of anxiety.&lt;/p&gt;
&lt;p&gt;And doing it outdoors can compound the dividends. According to Dr. Jo Barton, Senior Lecturer of the School of Sport, Rehabilitation and Exercise Sciences at the University of Essex, &lt;a href=&quot;https://www.bbc.com/worklife/article/20190304-why-walking-makes-you-a-better-worker&quot;&gt;you can improve your self-esteem and your mood with just five minutes of exposure to nature&lt;/a&gt;. Why does it work so quickly? As Barton shares, exposure to nature helps us switch from voluntary attention, which draws on our reserves of focus and energy, to involuntary attention, which requires less focus and energy. This allows us to recover from mental fatigue.&lt;/p&gt;
&lt;p&gt;Charles Darwin, Friedrich Nietzsche, William Wordsworth, and Aristotle were all obsessive walkers, using the rhythm of walking to help them generate ideas. And while any form of exercise has been shown to activate the brain, &lt;a href=&quot;https://hbr.org/2014/02/take-a-walk-sure-but-dont-call-it-a-break&quot;&gt;walking is a proven creativity booster as well&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let me also say this: as simple as walking seems, I know it’s not simple for everyone. Some people have mobility challenges that make walking an ordeal, or even impossible. Others may live in neighborhoods that are unsafe for walking, while others may have experienced trauma that make walking alone or outside feel threatening. Some of us have responsibilities at home that limit our independence, and others may have weather conditions that make exposure uncomfortable or risky. If you fall into one or more of those categories — or a category I have missed — I hope you find something that you use to quiet your anxiety, keep your brain sharp, and maintain physical well-being.&lt;/p&gt;
&lt;p&gt;For those of us who &lt;em&gt;can&lt;/em&gt; walk, we know that we can walk for exercise and for transportation. And here are five additional ways to walk with purpose:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Walk for perspective. &lt;/strong&gt;These are trying times. The global pandemic has robbed so many of us of so much, and yet, most of us can still find perspective in the struggle. On days when I need some perspective, I’ll stroll while looking at the sun, the trees, or the water. Those views remind me to reflect on the expanse of the universe, to appreciate the beauty of nature, and prompt me to consider how much world there still is for me to explore (when it’s safe to do so).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Walk for connection. &lt;/strong&gt;While you &lt;em&gt;can&lt;/em&gt; walk alone, you don’t have to. And these days, walking is one of the safer activities available to us. Before I moved from New York to North Carolina, I had a standing Sunday walk with my neighbor Leslie. And now, despite being almost 600 miles apart, we still have our Sunday morning walks — just over the phone. Invite a friend or family member to join you — in person when it’s doable, safe, and responsible — and over the phone when it isn’t.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Walk for learning. &lt;/strong&gt;As much as I like to clear my mind, I also like to fill it with new and useful information. I might walk while listening to a podcast or an audio book, or even the recording of a webinar I signed up for but wasn’t able to attend. Or I might take some photos with my phone of a tree or an animal I can’t identify (which, as a native Manhattanite, are most trees and animals), and look it up when I get home.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Walk for gratitude. &lt;/strong&gt;As someone who has experienced both chronic and acute back pain, I often walk with a focus on how lucky I feel to be able to walk — and the relief of being pain-free. I will focus on the gift of feeling safe (most of the time) as a woman walking alone. Or that I have a clean, hot shower waiting for me at the end of my walk. Or I might even focus on the gift of being alive right now, when so many have died.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Walk for productivity. &lt;/strong&gt;Sometimes I’ll arrange a coaching call with a client who has also committed to walk and talk. Or I might schedule a networking call with a client who is walking, too. I am also productive when I walk, and sometimes dictate brainstorming ideas, or even a new article, into my phone’s voice recorder. When I come home, I have something I can cross off my to-do list, in addition to that day’s walk.&lt;/p&gt;
&lt;p&gt;And sometimes, I have to let go of my goals and let the walk’s purpose reveal itself to me. This happens most often when I’m walking with my rescue dog Nash, and she wants to follow a squirrel.&lt;/p&gt;
&lt;p&gt;Here’s the bottom line: Walk when you can, where you can. Your body, mind, and soul will thank you for it.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 08 Feb 2021 16:09:10 +0000</pubDate>
<dc:creator>tdmckinlay</dc:creator>
<og:type>article</og:type>
<og:image>https://hbr.org/resources/images/article_assets/2021/02/Feb21_02_227304805.jpg</og:image>
<og:url>https://hbr.org/2021/02/dont-underestimate-the-power-of-a-walk</og:url>
<og:description>Breaking up your day by going outside can boost your mood, brainpower, and creativity.</og:description>
<og:title>Don’t Underestimate the Power of a Walk</og:title>
<dc:format>text/html</dc:format>
<dc:identifier>https://hbr.org/2021/02/dont-underestimate-the-power-of-a-walk</dc:identifier>
</item>
<item>
<title>State of the Common Lisp ecosystem, 2020</title>
<link>https://lisp-journey.gitlab.io/blog/state-of-the-common-lisp-ecosystem-2020/</link>
<guid isPermaLink="true" >https://lisp-journey.gitlab.io/blog/state-of-the-common-lisp-ecosystem-2020/</guid>
<description>&lt;p&gt;This is a description of the Common Lisp ecosystem, as of January, 2021, from the perspective of a user and contributor.&lt;/p&gt;
&lt;p&gt;The purpose of this article is both to give an overview of the ecosystem, and to help drive consolidation in each domain.&lt;/p&gt;
&lt;p&gt;Each application domain has recommendations for consolidating that part of the ecosystem, and pointers for interesting future work.&lt;/p&gt;
&lt;p&gt;This article is derived from Fernando Borretti’s &lt;a href=&quot;https://borretti.me/article/common-lisp-sotu-2015&quot;&gt;State of the Common Lisp ecosystem from 2015&lt;/a&gt;, hence the introduction that sounded familiar. This new one will be an opportunity to look at what was achieved, or what is still lacking.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: This article is not a list of every project or article of interest that came out in the last years. I wrote an overview of 2018 closer to that goal &lt;a href=&quot;https://lisp-journey.gitlab.io/blog/these-years-in-common-lisp-2018/&quot;&gt;here&lt;/a&gt;. More libraries can be discovered on the &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl&quot;&gt;Awesome-cl&lt;/a&gt; list, on GitHub and on &lt;a href=&quot;https://www.cliki.net/&quot;&gt;Cliki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Acknowledgements&lt;/strong&gt; I would like to thank @borodust, @ambrevar and @digikar for their kind feedback.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;command-line&quot;&gt;Command line&lt;/h2&gt;
&lt;p&gt;There used to be several options to ease building and distribution of command line programs, but now &lt;a href=&quot;https://github.com/snmsts/roswell&quot;&gt;Roswell&lt;/a&gt; has gained most momentum, and that’s a good thing. Roswell is an implementation manager, installer and a script runner, and one of its neat features is support for very easily compiling tiny scripts into executables.&lt;/p&gt;
&lt;p&gt;Now, &lt;a href=&quot;https://guix.gnu.org/&quot;&gt;GNU Guix&lt;/a&gt; has gained many CL libraries, and becomes a contender to Roswell. Guix can be used as a package manager on top of your Unix distribution. It brings reproducible builds, rollbacks, the ability to install exact versions of any library (including system dependencies), contained environments and user profiles. It makes it easy too to install the latest version of a CL implementation and libraries and, to a certain extent, to share scripts. See the article &lt;a href=&quot;https://ambrevar.xyz/lisp-repl-shell/index.html&quot;&gt;A Lisp REPL as my main shell&lt;/a&gt; for insights.&lt;/p&gt;
&lt;p&gt;To parse command line arguments, &lt;a href=&quot;https://github.com/mrkkrp/unix-opts&quot;&gt;unix-opts&lt;/a&gt; shows decent activity. As a reminder, the CLI arguments are stored portably in &lt;code&gt;uiop:command-line-arguments&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cl-adams/adams&quot;&gt;Adams&lt;/a&gt; is a new UNIX system administration tool, not unlike Chef or Ansible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;More features to the &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl#scripting&quot;&gt;sripting libraries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/cxxxr/lem/&quot;&gt;Lem editor&lt;/a&gt; has built a great user interface and REPL on top of ncurses, with the cl-charms library. It would be great to re-use its components, so that Lispers could easily build similar rich terminal-based interfaces.&lt;/p&gt;
&lt;h2 id=&quot;databases&quot;&gt;Databases&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fukamachi/mito&quot;&gt;Mito&lt;/a&gt; is an ORM for Common Lisp with migrations, relationships and PostgreSQL support. It is based on cl-dbi (a uniform interface to the various database server-specific libraries such as cl-postgres and cl-mysql) and SxQL (a DSL for building safe, automatically parameterized SQL queries).&lt;/p&gt;
&lt;p&gt;It also has a tutorial in the Cookbook: &lt;a href=&quot;https://lispcookbook.github.io/cl-cookbook/databases.html&quot;&gt;Cookbook/databases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are of course more libraries in that field. Some new ones since 2015 are:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ruricolist/cl-yesql&quot;&gt;cl-yesql&lt;/a&gt; (by the author of Serapeum, Spinneret and other great libraries) is based on Clojure’s Yesql.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kraison/vivace-graph-v3&quot;&gt;vivace-graph&lt;/a&gt; is a &lt;strong&gt;graph database&lt;/strong&gt; and Prolog implementation, taking design and inspiration from CouchDB, neo4j and AllegroGraph.&lt;/p&gt;
&lt;p&gt;Vsevolod Dyomkin, the author of Rutils, the Programming Algorithms book and other libraries, is writing &lt;a href=&quot;https://github.com/vseloved/cl-agraph&quot;&gt;cl-agraph&lt;/a&gt;, a minimal client to Franz Inc’s &lt;a href=&quot;https://allegrograph.com/&quot;&gt;AllegroGraph&lt;/a&gt;. AllegroGraph is a “horizontally distributed, multi-model (document and graph), entity-event &lt;strong&gt;knowledge graph&lt;/strong&gt; technology”. It is proprietary and has a free version with a limit of 5 million triples. Surely one of those Lisp hidden gems we should know more about.&lt;/p&gt;
&lt;p&gt;A general migration tool was lacking. We now have &lt;a href=&quot;https://github.com/dnaeon/cl-migratum&quot;&gt;cl-migratum&lt;/a&gt;, a “system which provides facilities for performing database schema migrations, designed to work with various databases”.&lt;/p&gt;
&lt;p&gt;And of course, &lt;a href=&quot;https://github.com/dimitri/pgloader&quot;&gt;pgloader&lt;/a&gt; is still a Common Lisp success story.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Among the emerging ORMs, Mito is the one actively maintained that Lispers seem to have chosen. Good. CLSQL certainly still works, but we don’t hear about it and it looks outdated. So, Mito it is.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Mito has 11 contributors and is actively watched, but it probably should have another(s) core maintainers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bindings for the new databases coming out.&lt;/p&gt;
&lt;h2 id=&quot;concurrency&quot;&gt;Concurrency&lt;/h2&gt;
&lt;p&gt;In the last year, Manfred Bergmann developed &lt;a href=&quot;https://github.com/mdbergmann/cl-gserver&quot;&gt;cl-gserver&lt;/a&gt;. It is a “message passing” library/framework with &lt;strong&gt;actors&lt;/strong&gt; similar to &lt;strong&gt;Erlang&lt;/strong&gt; or &lt;strong&gt;Akka&lt;/strong&gt;. It is an important achievement.&lt;/p&gt;
&lt;p&gt;Its v1 features:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;actors can use a shared pool of message dispatchers which effectively allows to create millions of actors.&lt;/li&gt;
&lt;li&gt;the possibility to create actor hierarchies. An actor can have child actors. An actor now can also “watch” another actor to get notified about its termination.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Many other libraries exist in this area:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://common-lisp.net/project/bordeaux-threads/&quot;&gt;BordeauxThreads&lt;/a&gt; - Portable, shared-state concurrency
&lt;ul&gt;&lt;li&gt;the “de-facto” concurrency library.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lmj/lparallel&quot;&gt;lparallel&lt;/a&gt; - A library for parallel programming.
&lt;ul&gt;&lt;li&gt;also solid, battle-tested and popular, aka de-facto.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hawkir/calispel&quot;&gt;calispel&lt;/a&gt; - &lt;a href=&quot;https://en.wikipedia.org/wiki/Communicating_sequential_processes&quot;&gt;CSP&lt;/a&gt;-like channels for common lisp. With blocking, optionally buffered channels and a “CSP select” statement. ISC-style.
&lt;ul&gt;&lt;li&gt;“It is complete, flexible and easy to use. I would recommend Calispel over Lparallel and ChanL.” @Ambrevar. &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl/issues/290&quot;&gt;discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zkat/chanl&quot;&gt;ChanL&lt;/a&gt; - Portable, channel-based concurrency.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/orthecreedence/cl-async&quot;&gt;cl-async&lt;/a&gt; - A library for general-purpose, non-blocking programming.
&lt;ul&gt;&lt;li&gt;works atop libuv&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TBRSS/moira&quot;&gt;Moira&lt;/a&gt; - Monitor and restart background threads. In-lisp process supervisor.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/ediethelm/trivial-monitored-thread&quot;&gt;trivial-monitored-thread&lt;/a&gt; - a Common Lisp library offering a way of spawning threads and being informed when one any of them crash and die.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lmj/lfarm&quot;&gt;lfarm&lt;/a&gt; - distributing work across machines (on top of lparallel and usocket).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/taksatou/cl-gearman&quot;&gt;cl-gearman&lt;/a&gt; - a library for the &lt;a href=&quot;http://gearman.org/&quot;&gt;Gearman&lt;/a&gt; distributed job system.
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/brown/swank-crew&quot;&gt;swank-crew&lt;/a&gt; - distributed computation framework implemented using Swank Client.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/takagi/cl-coroutine&quot;&gt;cl-coroutine&lt;/a&gt; - a coroutine library. It uses the CL-CONT continuations library in its implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cosmos72/stmx&quot;&gt;CMTX&lt;/a&gt;: high performance transactional memory for Common Lisp.
&lt;ul&gt;&lt;li&gt;In our opinion, a library not well known and under-appreciated.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(see &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl#parallelism-and-concurrency&quot;&gt;awesome-cl#parallelism-and-concurrency&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bordeaux-Threads is &lt;em&gt;the&lt;/em&gt; “de-facto” library, but there is some choice paralysis between Lparallel, Calispel, Bordeaux-Threads and SBCL’s contribs. Use the libraries in the wild and write about them.&lt;/p&gt;
&lt;h2 id=&quot;file-formats&quot;&gt;File formats&lt;/h2&gt;
&lt;p&gt;There exist Common Lisp libraries for all the major file formats:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;New in 2015, Jonathan is now a good first choice for an easy to use and fast JSON encoder and decoder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is not a predominant JSON library. This leads to choice paralysis.&lt;/p&gt;
&lt;p&gt;They all represent null values differently. We need a library that “does the right thing”. See maybe the massive &lt;a href=&quot;https://github.com/xh4/web-toolkit#json&quot;&gt;web-toolkit&lt;/a&gt; for its JSON handling ?&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;It distinguishes null, false and [] from Lisp’s NIL thus supports identical transformation between JSON values. It provides object constructor and accessor to build and access nesting JSON objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Give the &lt;a href=&quot;https://github.com/sharplispers/xpath&quot;&gt;XPath&lt;/a&gt; library some love and documentation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future Work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Still valid from 2015:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;A YAML parser so that cl-yaml doesn’t depend on the libyaml library would make distribution far simpler.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;gui&quot;&gt;GUI&lt;/h2&gt;
&lt;p&gt;A usual complain in Common Lisp land is the lack of a complete, cross-platform GUI solution. Ltk is a very good library, but Tk is limited. Qtools is great, but is only for Qt4.&lt;/p&gt;
&lt;p&gt;A lot has happened, and is still happening (if you watch the right repositories, you know that a Qt5 wrapper is in the works (ECL already has Qt5 bindings: &lt;a href=&quot;https://gitlab.com/eql/EQL5/&quot;&gt;EQL5&lt;/a&gt;, with an &lt;a href=&quot;https://gitlab.com/eql/EQL5-Android&quot;&gt;Android port&lt;/a&gt;)).&lt;/p&gt;
&lt;p&gt;Matthew Kennedy wrote excellent FFI bindings to the IUP Portable User Interface library: &lt;a href=&quot;https://github.com/lispnik/iup/&quot;&gt;IUP&lt;/a&gt;. IUP is cross-platform (Windows, macOS, GNU/Linux, with new Android, iOS, Cocoa and Web Assembly drivers), has many widgets (but less than Qt), has a small API and is actively developed. IUP was created at the PUC university of Rio de Janeiro.&lt;/p&gt;
&lt;p&gt;Nicolas Hafner started &lt;a href=&quot;https://github.com/Shirakumo/alloy&quot;&gt;Alloy&lt;/a&gt;, a new user interface protocol and toolkit implementation, which he uses in his Kandria game.&lt;/p&gt;
&lt;p&gt;Very recently, David Botton released &lt;a href=&quot;https://github.com/rabbibotton/clog&quot;&gt;CLOG&lt;/a&gt;, “the Common Lisp Omnificent GUI”:&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;CLOG uses web technology to produce graphical user interfaces for applications locally or remotely. CLOG can take the place, or work alongside, most cross-platform GUI frameworks and website frameworks. The CLOG package starts up the connectivity to the browser or other websocket client (often a browser embedded in a native template application.)&lt;/p&gt;
&lt;p&gt;It is complete enough for most uses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are more GUI libraries and frameworks: &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl#Gui&quot;&gt;https://github.com/CodyReichert/awesome-cl#Gui&lt;/a&gt; (and more under the works). In particular, LispWorks’ CAPI is still presented as the best in town by the ones who tried it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since roughly October, 2020, Nicolas Hafner works full time on &lt;a href=&quot;https://kandria.com/&quot;&gt;Kandria&lt;/a&gt;. Supporting his work, through &lt;a href=&quot;https://github.com/sponsors/Shinmera&quot;&gt;GitHub sponsors&lt;/a&gt; or &lt;a href=&quot;https://ko-fi.com/shinmera&quot;&gt;ko-fi&lt;/a&gt; would be 1) a great sign of recognition and 2) useful for the ecosystem, especially for Alloy.&lt;/p&gt;
&lt;p&gt;I wrote an introduction to these frameworks in the Cookbook: &lt;a href=&quot;https://lispcookbook.github.io/cl-cookbook/gui.html&quot;&gt;Cookbook/gui&lt;/a&gt;. More examples or demo projects would be welcome.&lt;/p&gt;
&lt;p&gt;There are two actively maintained diverged forks of the GTK bindings. A reunification effort is required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write a desktop application with IUP/your toolkit of choice for everyday use and make it a Common Lisp flagship.&lt;/p&gt;
&lt;p&gt;Study other approaches to GUI bindings. What about &lt;a href=&quot;http://www.gtk-server.org/&quot;&gt;gtk-server&lt;/a&gt;? &lt;a href=&quot;https://github.com/andy128k/cl-gobject-introspection&quot;&gt;GObject introspection&lt;/a&gt;? An effort started for Qt: &lt;a href=&quot;https://github.com/mrosset/giqt/&quot;&gt;giqt&lt;/a&gt; (in which we recognize @ambrevar from the &lt;a href=&quot;https://github.com/atlas-engineer/nyxt/&quot;&gt;Nyxt browser&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;/h2&gt;
&lt;p&gt;It seems that not much changed since 2015, but libraries are still being developed:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/mmaul/clml&quot;&gt;CLML&lt;/a&gt;, developed at Mathematical Systems Inc., a Japanese company.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/melisgl/mgl&quot;&gt;MGL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;1.4705882352941&quot;&gt;
&lt;p&gt;used by &lt;a href=&quot;http://quotenil.com/&quot;&gt;its author&lt;/a&gt; to win the &lt;a href=&quot;https://www.kaggle.com/c/higgs-boson&quot;&gt;Higgs Boson Machine Learning Challenge&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/melisgl/mgl-mat&quot;&gt;mgl-mat&lt;/a&gt; - a library for working with multi-dimensional arrays which supports efficient interfacing to foreign and CUDA code. BLAS and CUBLAS bindings are available.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Others are less active:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gitlab.common-lisp.net/antik/antik&quot;&gt;Antik&lt;/a&gt; - a foundation for scientific and engineering computation in Common Lisp. It is designed not only to facilitate numerical computations, but to permit the use of numerical computation libraries and the interchange of data and procedures, whether foreign (non-Lisp) or Lisp libraries.
&lt;ul&gt;&lt;li&gt;more than 2000 commits, last update 2 years ago.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;system&quot;&gt;System&lt;/h2&gt;
&lt;p&gt;To quote Fernando:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;UIOP, ASDF’s portable compatibility layer, contains a large set of tools for portably doing everything from querying the hostname to running external programs to manipulating environment variables.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We should not require cl-fad anymore (but we need Osicat, which unlike UIOP is POSIX friendly).&lt;/p&gt;
&lt;p&gt;Built on top of UIOP, Paul M. Rodriguez’s &lt;a href=&quot;https://github.com/ruricolist/cmd&quot;&gt;cmd&lt;/a&gt; brings in short and handy helpers to run and pipe programs.&lt;/p&gt;
&lt;h2 id=&quot;web-development&quot;&gt;Web Development&lt;/h2&gt;
&lt;h3 id=&quot;backend&quot;&gt;Backend&lt;/h3&gt;
&lt;p&gt;Common Lisp’s main web servers are Hunchentoot and Clack. Since 2015, Clack’s documentation state barely improved and is still lacking.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/fukamachi/clack&quot;&gt;Clack&lt;/a&gt; is the equivalent of WSGI/Rack. It has existed since 2009. It is an HTTP server abstraction, that allows the user to write web applications (or, more reasonably, web application frameworks) without depending on a particular server. Some web frameworks are built on top of it, for example &lt;a href=&quot;http://8arrow.org/caveman/&quot;&gt;Caveman2&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote readability=&quot;22.425956738769&quot;&gt;
&lt;p&gt;The importance of using Clack cannot be understated: If you build an application directly on, say, Hunchentoot, you’re tied to Hunchentoot, and if a new, faster server – like &lt;a href=&quot;https://github.com/fukamachi/woo&quot;&gt;Woo&lt;/a&gt; – comes out, you have to rewrite the entire application to use it. If you write a plugin for Clack – like &lt;a href=&quot;https://github.com/eudoxia0/clack-errors&quot;&gt;clack-errors&lt;/a&gt; – it is automatically usable by all applications, regardless of framework, that are built on Clack, reducing useless duplication of code.&lt;/p&gt;
&lt;p&gt;With Clack, switching from Hunchentoot to Woo, and enjoying the incredible speedup, is a simple matter of installing libev and changing a keyword argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This still holds true, but the situation didn’t improve much. In comparison, Hunchentoot is very well documented (and you can read its documentation on a better looking &lt;a href=&quot;https://common-lisp-libraries.readthedocs.io/hunchentoot/&quot;&gt;readthedocs here&lt;/a&gt;), and it is “fast enough”.&lt;/p&gt;
&lt;p&gt;About Hunchentoot: Mariano Montone wrote &lt;a href=&quot;https://github.com/mmontone/easy-routes&quot;&gt;easy-routes&lt;/a&gt;, a little but handy route handling facility on top of Hunchentoot. It brings:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;dispatch by HTTP method,&lt;/li&gt;
&lt;li&gt;arguments extraction from the URL path,&lt;/li&gt;
&lt;li&gt;“decorators” to, for example, quickly add authorization checks,&lt;/li&gt;
&lt;li&gt;integration with the Djula framework to generate URLs from route names.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Several &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl#clack-plugins&quot;&gt;Clack plugins&lt;/a&gt; were written, such as a single-sign on middleware.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write more documentation for Clack. While Lispers know about it, they don’t necessarily adopt it because of the lack of documentation. We can expand this &lt;a href=&quot;https://jasom.github.io/clack-tutorial/posts/getting-started-with-clack/&quot;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Build a batteries-included framework.&lt;/p&gt;
&lt;h3 id=&quot;frontend&quot;&gt;Frontend&lt;/h3&gt;
&lt;p&gt;Many HTML generators and template libraries exist (see the list below). However, some new and good ones appeared lately:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/mmontone/ten&quot;&gt;TEN&lt;/a&gt;, by Djula’s maintainer, brings the completness of Djula with the usability of Eco (by Fernando Borretti), aka: you write Django-like HTML templates but you can interleave any Lisp code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/moderninterpreters/markup&quot;&gt;markup&lt;/a&gt; - a JSX-like templating engine, where HTML tags are Common Lisp code. Comes with an Emacs package.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Other HTML generators and templating engines include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ruricolist/spinneret&quot;&gt;spinneret&lt;/a&gt; - Common Lisp HTML5 generator.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weitz.de/cl-who/&quot;&gt;cl-who&lt;/a&gt; - The venerable HTML generator.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mmontone/djula&quot;&gt;Djula&lt;/a&gt; - A port of Django’s template engine to Common Lisp.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/archimag/cl-closure-template&quot;&gt;cl-closure-template&lt;/a&gt; - Implementation of Google’s Closure templates. [LLGPL][8].&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shinmera.github.io/clip&quot;&gt;clip&lt;/a&gt; - An HTML template processor where the templates are written in HTML.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We have nice other building blocks, such as a nice form handling library (&lt;a href=&quot;https://github.com/mmontone/cl-forms&quot;&gt;cl-forms&lt;/a&gt;) and libraries to create Open-API interfaces. An integrated, opinionated all-in-one solution could be a productivity boom.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Djula is easy to work with. It could do with more built-in filters.&lt;/p&gt;
&lt;p&gt;As in 2015:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;The foundation is finished, now it’s time to write higher-level layers. An extensible administration framework for Clack applications, like Django’s Admin, would be a good example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;
&lt;p&gt;The two “historical” Common Lisp to JavaScript compilers are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/vsedach/Parenscript&quot;&gt;Parenscript&lt;/a&gt;, a DSL that compiles a subset of Common Lisp to idiomatic JavaScript, and&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/davazp/jscl&quot;&gt;JSCL&lt;/a&gt;, a CL-to-JS compiler designed to be self-hosting from day one. JSCL is not complete (yet), it lacks CLOS, format and loop.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Two new are in development:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Help develop one of the existing CL-to-JS implementations. Why not have a look at JSCL’s &lt;a href=&quot;https://github.com/jscl-project/jscl/issues&quot;&gt;issues&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Bring some new macros to ParenScript for new JavaScript idioms, as &lt;a href=&quot;https://github.com/BnMcGn/paren6/&quot;&gt;Paren6&lt;/a&gt;. For example, allow to write &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;isomorphic-web-frameworks&quot;&gt;Isomorphic web frameworks&lt;/h3&gt;
&lt;p&gt;Weblocks is an already old framework that allows to write dynamic web applications without writing JavaScript (it isn’t as dynamic as modern JS frameworks, there is no “double data binding”). Its server-based components use Ajax if available or fallback to plain HTTP and update the DOM. It is a framework in the vein of Smalltalk’s Seaside.&lt;/p&gt;
&lt;p&gt;Weblocks was getting old and unmaintained but Alexander Artemenko greatly updated and refactored it in his &lt;a href=&quot;https://github.com/40ants/weblocks/&quot;&gt;Reblocks&lt;/a&gt; branch. He uses it for the &lt;a href=&quot;https://ultralisp.org/&quot;&gt;Ultralisp&lt;/a&gt; website, and more apps. You can reach users and developers &lt;a href=&quot;https://gitter.im/40ants/weblocks&quot;&gt;on Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recently, a very new web framework appeared: &lt;a href=&quot;https://github.com/interactive-ssr&quot;&gt;ISSR&lt;/a&gt;, for Interactive Server-Side rendering. It links a client to the server with a websocket connection and updates the DOM selectively. It is thus not unlike Phoenix’s LiveView or &lt;a href=&quot;https://github.com/hotwired/turbo&quot;&gt;Hotwire&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See this &lt;a href=&quot;http://cjackson.tk/todo-tutorial&quot;&gt;todo-app tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reviving Weblocks and releasing CLOG and ISSR are great achievements. However, work is only started to create a community of users around them.&lt;/p&gt;

&lt;p&gt;New solutions arose to interoperate with other runtimes.&lt;/p&gt;
&lt;h2 id=&quot;apl&quot;&gt;APL&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/phantomics/april&quot;&gt;April&lt;/a&gt; brings the APL programming language (a subset thereof) to Common Lisp. Replace hundreds of lines of number-crunching code with a single line of APL.&lt;/p&gt;
&lt;h2 id=&quot;c-c-objective-c&quot;&gt;C, C++, Objective C&lt;/h2&gt;
&lt;p&gt;We had &lt;a href=&quot;https://github.com/cffi/cffi&quot;&gt;CFFI&lt;/a&gt; (a portable foreign function interface for CL), &lt;a href=&quot;https://github.com/rpav/c2ffi&quot;&gt;C2FFI&lt;/a&gt; (Clang-based FFI wrapper generator), then &lt;a href=&quot;https://github.com/rpav/cl-autowrap&quot;&gt;cl-autowrap&lt;/a&gt;, a c2ffi-based wrapper generator that makes creating C bindings real quick.&lt;/p&gt;
&lt;p&gt;Pavel Korolev is developing &lt;a href=&quot;https://github.com/borodust/claw&quot;&gt;CLAW&lt;/a&gt;, started as a fork of cl-autowrap, which brings &lt;strong&gt;C++ support&lt;/strong&gt;. For practice he generated bindings to GLM or &lt;a href=&quot;https://github.com/borodust/claw-filament&quot;&gt;to the Filament&lt;/a&gt; rendering engine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It will be a great achievement when CLAW is officially ready to use. This is not yet the case (though the GLM bindings basically do their hello world on Android, which is an achievement per se).&lt;/p&gt;
&lt;h2 id=&quot;clojure&quot;&gt;Clojure&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lsevero/abclj&quot;&gt;ABCLJ&lt;/a&gt; provides a “dead easy Clojure to Common lisp interop”:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;instead of rewriting the whole Clojure langugage on CL I’m embedding ABCL in Clojure. Since both are implemented in Java and Clojure has an awesome java interop is easy to have full access on the ABCL Common Lisp environment. This way we have complete support for both Clojure and Common Lisp.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But why?&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;The reason I wanted to see Clojure and Common Lisp working with each other was to use CL programs/libraries on Clojure, especially Maxima and ACL2. Since ABCL already compiles and runs Maxima it should be possible but we are very far from it 🤷.&lt;/p&gt;
&lt;p&gt;There are others of attempts to shorten the gap between clojure and common lisp like Cloture and clclojure. Once they are complete Clojure will benefit from native binaries and excelent compilers like SBCL, however they are far from complete.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On the topic, see this talk by Alan Dipert: &lt;a href=&quot;https://www.youtube.com/watch?v=44Q9ew9JH_U&quot;&gt;“Common Lisp for the curious Clojurian”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Abstract:&lt;/p&gt;
&lt;hr/&gt;&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;“If I had to be stranded with something other than Clojure, I’d be happiest with a good Common Lisp and its source code.” - Rich Hickey, 2011&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Common Lisp (CL) and Clojure are both dialects of Lisp. Rich Hickey, the creator of Clojure, learned CL and used it professionally before creating Clojure.&lt;/p&gt;
&lt;p&gt;What can Clojure do that CL can’t, and vice versa? Why would anyone use CL today, when both Clojure and ClojureScript exist?&lt;/p&gt;
&lt;p&gt;In this talk, I will try to answer these questions and more, from the perspective of a long-time Clojurian with a growing passion for CL.&lt;/p&gt;
&lt;hr/&gt;&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bendudson/py4cl&quot;&gt;py4cl&lt;/a&gt; is the new lib in town. It allows Common Lisp code to access Python libraries. It is basically the inverse of &lt;a href=&quot;https://github.com/marcoheisig/cl4py&quot;&gt;cl4py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href=&quot;https://github.com/cxxxr/async-process/&quot;&gt;async-process&lt;/a&gt; and, while we’re at it, my &lt;a href=&quot;https://lisp-journey.gitlab.io/pythonvslisp&quot;&gt;comparison of Python VS Common Lisp&lt;/a&gt;, where we look at the differences of workflows and ecosystems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Calling to Python and hooking into its ecosystem is easier than ever.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Improving CL libraries such as &lt;a href=&quot;https://github.com/numcl/numcl&quot;&gt;Numcl&lt;/a&gt; (a Numpy clone) is what’s required to drive Common Lisp forward.&lt;/p&gt;
&lt;h2 id=&quot;net-core&quot;&gt;.Net Core&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Lovesan/bike&quot;&gt;Bike&lt;/a&gt; is a cross-platform .Net Core interface.&lt;/p&gt;

&lt;h2 id=&quot;implementations&quot;&gt;Implementations&lt;/h2&gt;
&lt;p&gt;All implementations saw new releases, except CLisp, whose development however continues.&lt;/p&gt;
&lt;p&gt;Active implementations include: ABCL, CCL, CLASP, ECL, LispWorks, AllegroCL, SBCL. And to a certain extent, GNU CLisp, SICL (which is the newest one) and Corman Lisp (a CL development environment for Windows) (regenerated &lt;a href=&quot;https://github.com/sharplispers/cormanlisp&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;ABCL &lt;a href=&quot;https://abcl-dev.blogspot.com/2020/10/abcl-180.html&quot;&gt;jumped to v1.8.0&lt;/a&gt; to support openjdk15.&lt;/p&gt;
&lt;p&gt;SBCL still ships monthly releases. It turned 20 and keeps improving (RISC-V port, M1 port, block compilation, more compile-time type checking…). We can read a blog on the party held in Vienna &lt;a href=&quot;https://mstmetent.blogspot.com/2020/01/sbcl20-in-vienna-last-month-i-attended.html&quot;&gt;here&lt;/a&gt;. Did you know that Doug Katzman of Google fame contributes to SBCL?&lt;/p&gt;
&lt;p&gt;(edit:)&lt;/p&gt;
&lt;blockquote readability=&quot;23&quot;&gt;
&lt;p&gt;Doug Katzman talked about his work at Google getting SBCL to work with Unix better. For those of you who don’t know, he’s done a lot of work on SBCL over the past couple of years, not only adding a lot of new features to the GC and making it play better with applications which have alien parts to them, but also has done a tremendous amount of cleanup on the internals and has helped SBCL become even more Sanely Bootstrappable. That’s a topic for another time, and I hope Doug or Christophe will have the time to write up about the recent improvements to the process, since it really is quite interesting.&lt;/p&gt;
&lt;p&gt;Anyway, what Doug talked about was his work on making SBCL more amenable to external debugging tools, such as gdb and external profilers. It seems like they interface with aliens a lot from Lisp at Google, so it’s nice to have backtraces from alien tools understand Lisp. It turns out a lot of prerequisite work was needed to make SBCL play nice like this, including implementing a non-moving GC runtime, so that Lisp objects and especially Lisp code (which are normally dynamic space objects and move around just like everything else) can’t evade the aliens and will always have known locations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;editors&quot;&gt;Editors&lt;/h2&gt;
&lt;p&gt;Here too, great progress has been made. While a usual complain of non-Lispers was the lack of editor support besides Emacs (and Vim), we now nearly reach choice paralysis:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://portacle.github.io/&quot;&gt;Portacle&lt;/a&gt; is the easiest way to get started with Emacs. It is portable and multi-platform, ready-to-use in three clicks. It ships Emacs, SBCL, Slime, Quicklisp and git.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/neil-lindquist/SLIMA/&quot;&gt;SLIMA&lt;/a&gt; is the Atom extension. It is nearly as good as Slime for Emacs.&lt;/li&gt;
&lt;li&gt;VSCode has two extensions: &lt;a href=&quot;https://github.com/ailisp/commonlisp-vscode&quot;&gt;commonlisp-vscode&lt;/a&gt;, using the Language Server Protocol, and &lt;a href=&quot;https://github.com/nobody-famous/alive&quot;&gt;Alive&lt;/a&gt;, more recent, using a Lisp backend (Swank) as traditional extensions.&lt;/li&gt;
&lt;li&gt;Sublime Text got a good extension: &lt;a href=&quot;https://github.com/s-clerc/slyblime&quot;&gt;Slyblime&lt;/a&gt; is an implementation of SLY and it uses the same backend (SLYNK). It ships advanced features including a debugger with stack frame inspection.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cxxxr/lem/&quot;&gt;Lem&lt;/a&gt; is an editor written in Common Lisp. It allows to start developing in CL at once, and it supports other languages.&lt;/li&gt;
&lt;li&gt;we have a &lt;a href=&quot;https://github.com/yitzchak/common-lisp-jupyter&quot;&gt;Jupyter kernel&lt;/a&gt; for CL.&lt;/li&gt;
&lt;li&gt;the &lt;a href=&quot;https://github.com/Ragnaroek/dandelion/&quot;&gt;Dandelion Eclipse plugin&lt;/a&gt; was re-discovered. While it isn’t as feature-rich as others (no interactive debugger for example), it has its users. It specifically targets beginners.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Last but not least, if you want to play in your iPhone or iPad, the &lt;a href=&quot;https://codeplayground.app/&quot;&gt;CodePlayground&lt;/a&gt; app got Lisp support via CCL.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joaotavora/sly&quot;&gt;SLY&lt;/a&gt; might need more praise. It has sound features such as SLY stickers and the new &lt;a href=&quot;https://github.com/joaotavora/sly-stepper&quot;&gt;SLY stepper&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;developer-utilities&quot;&gt;Developer utilities&lt;/h2&gt;
&lt;p&gt;Life continues to improve for the developper. We will cite some new tools:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/40ants/cl-flamegraph&quot;&gt;cl-flamegraph&lt;/a&gt; is a wrapper around SBCL’s statistical profiler to generate FlameGraph charts from Common Lisp programs.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TeMPOraL/tracer&quot;&gt;tracer&lt;/a&gt; is a tracing profiler for Common Lisp, with output suitable for display in Chrome’s/Chromium’s Tracing Viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.martin-loetzsch.de/gtfl/&quot;&gt;GTFL&lt;/a&gt; is a graphical terminal for Lisp, meant for Lisp programmers who want to debug or visualize their own algorithms. It is a graphical trace in the browser.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.com/ambrevar/lisp-repl-core-dumper/&quot;&gt;Lisp REPL core dumper&lt;/a&gt; is a portable wrapper to generate Lisp cores on demand to start a REPL blazingly fast. It can preload provided systems to help build a collection of specialized Lisp cores.
&lt;ul&gt;&lt;li&gt;if you are used to working in different environments that require their own set of libraries, this core dumper (optionally along with SLY’s mrepl) can make switching from one another easier and faster.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;package-management&quot;&gt;Package Management&lt;/h2&gt;
&lt;p&gt;Quicklisp is the de-facto package manager. However, we now have:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://ultralisp.org/&quot;&gt;Ultralisp&lt;/a&gt;, a Quicklisp distribution that builds every 5 minutes. We can add our project in two clicks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitlab.common-lisp.net/clpm/clpm&quot;&gt;CLPM&lt;/a&gt;, a new package manager that is compatible with Quicklisp, that allows to pin exact versions of dependencies, that is usable from the command line and that supports HTTPS.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Not forgetting Qlot, to install Quicklisp libraries relative to a directory.&lt;/p&gt;
&lt;p&gt;Last but not least, as said earlier, many CL libraries were packaged for Guix (most notably by &lt;a href=&quot;https://ambrevar.xyz&quot;&gt;Pierre Neidhart&lt;/a&gt; of Nyxt).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Achievement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ultralisp solves the 1-month release schedule of Quicklisp (which is a feature, but not to everyone’s taste) and makes it straightforward and quick to publish a library. CLPM by tackling a different approach solves other Quicklisp limitations. Both are great achievements.&lt;/p&gt;
&lt;p&gt;Ultralisp also has a search box that searches a symbol on all its registered libraries. Very useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Alexander is working on allowing every Ultralisp user to create his own Quicklisp dist in a few clicks.&lt;/p&gt;
&lt;h2 id=&quot;build-system&quot;&gt;Build System&lt;/h2&gt;
&lt;p&gt;Same as 2015, ASDF is the de-facto build system.&lt;/p&gt;
&lt;blockquote readability=&quot;24&quot;&gt;
&lt;p&gt;Every project has an .asd file, called a system definition file, which defines project metadata (author, maintainer, homepage, etc.) and the components.&lt;/p&gt;
&lt;p&gt;This, to me, is one of the major selling points of Common Lisp. With languages like Python, every file imports whatever it needs, and your project becomes a massive graph of interdependent files. In ASDF, you basically list the files in your project in the order in which they are defined. Or, you can specify the dependencies between the files, and let ASDF figure out a linear ordering. The point is that dependencies are explicit, and clearly spelled out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;type-system&quot;&gt;Type system&lt;/h2&gt;
&lt;p&gt;Quoting Fernando:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;There’s not much to say here, except that Common Lisp has a pretty great type system that is not exploited nearly enough.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And to our greatest pleasure, SBCL’s type system continues to improve. For example, SBCL 1.5.9 now gives type warnings when a slot declared type doesn’t match its &lt;code&gt;initform&lt;/code&gt;. It continued to improve on SBCL 2.0 and onwards.&lt;/p&gt;
&lt;p&gt;Moreover, the &lt;a href=&quot;https://github.com/stylewarning/coalton/&quot;&gt;Coalton&lt;/a&gt; library is bringing a dialect of ML on top of CL, in order to write &lt;strong&gt;statically typed programs&lt;/strong&gt; similar in spirit to Standard ML, OCaml, and Haskell.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Help develop Coalton.&lt;/p&gt;
&lt;h2 id=&quot;testing-ci&quot;&gt;Testing, CI&lt;/h2&gt;
&lt;p&gt;Fernando cited &lt;a href=&quot;https://common-lisp.net/project/fiveam/docs/Introduction.html&quot;&gt;FiveAM&lt;/a&gt; and recommended it along with the much newer Prove. Prove has a couple issues and is now deprecated by its author, and its younger brother Rove is not in par yet.&lt;/p&gt;
&lt;p&gt;So, use FiveAM.&lt;/p&gt;
&lt;p&gt;Moreover, Common Lisp has good support for the CI/CD services out there.&lt;/p&gt;
&lt;p&gt;CL Foundation’s Docker images have integrated best practices over the years and are recommended: &lt;a href=&quot;https://common-lisp.net/project/cl-docker-images/&quot;&gt;https://common-lisp.net/project/cl-docker-images/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/neil-lindquist/CI-Utils&quot;&gt;CI-Utils&lt;/a&gt; regroups utilities for various platforms (Travis, Circle, Gitlab, Github, Appveyor, Bitbucket, Azure) and test frameworks.&lt;/p&gt;
&lt;p&gt;We got a comprehensive blog post for GitHub actions: &lt;a href=&quot;http://3bb.cc/blog/2020/09/11/github-ci/&quot;&gt;part1&lt;/a&gt; and &lt;a href=&quot;http://3bb.cc/blog/2020/09/13/github-ci2/&quot;&gt;part2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Travis CI, you can also see &lt;a href=&quot;https://github.com/luismbo/cl-travis&quot;&gt;cl-travis&lt;/a&gt; (for ABCL, Allegro CL, SBCL, CMUCL, CCL and ECL).&lt;/p&gt;
&lt;p&gt;You will find an example for Gitlab CI on the Cookbook.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Rove or &lt;a href=&quot;https://github.com/Shinmera/parachute&quot;&gt;Parachute&lt;/a&gt; would be great alternatives if developed a bit further.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Further work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Integration with the CI services’ advanced features such as Gitlab’s auto DevOps.&lt;/p&gt;

&lt;h2 id=&quot;online-presence&quot;&gt;Online presence&lt;/h2&gt;
&lt;p&gt;Common Lisp is very well documented through its standard, the Common Lisp Hyper Spec and many books. However, we felt it was lacking good on-line material. Good news is, the situation improved tremendously in the last three or four years.&lt;/p&gt;
&lt;h3 id=&quot;new-common-lisp-net-website&quot;&gt;New common-lisp.net website&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://common-lisp.net&quot;&gt;https://common-lisp.net&lt;/a&gt; was written anew. It looked dated. This is now fixed. Well done!&lt;/p&gt;
&lt;h3 id=&quot;cookbook&quot;&gt;Cookbook&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://lispcookbook.github.io/cl-cookbook/&quot;&gt;Common Lisp Cookbook&lt;/a&gt; on GitHub got revived by many new contributors, included myself. It got many new content and a new UI. It is also now available in ePub and PDF, for free or as a “pay what you want” option.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Write content on the Cookbook. Don’t write tutorials on your blog. Everyone can help, even new Lispers (and in fact: &lt;em&gt;mostly&lt;/em&gt; new Lispers can write content best suited to the Cookbook’s target audience).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Future work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Make it look world-class with a real and modern theme.&lt;/p&gt;
&lt;p&gt;Help revive the &lt;a href=&quot;https://github.com/lamberta/minispec&quot;&gt;minispec&lt;/a&gt; ?&lt;/p&gt;
&lt;h3 id=&quot;awesome-cl&quot;&gt;awesome-cl&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/CodyReichert/awesome-cl&quot;&gt;awesome-cl&lt;/a&gt; list saw continuous updates and is now a great solution to have an overview of the ecosystem and choose a library.&lt;/p&gt;
&lt;p&gt;One of its goals is to break choice paralysis by recommending libraries, with its “+1” marks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consolidation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Help furnish and curate it.&lt;/p&gt;
&lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;
&lt;p&gt;A first Common Lisp User survey was run, we can consult its results here &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSfg7UJRKrkI3OjOHWL4xI-murE4LpQjIxsiAhFdPEmtyLX3kg/viewanalytics&quot;&gt;on Google docs&lt;/a&gt; and read comments &lt;a href=&quot;https://www.reddit.com/r/lisp/comments/jwdimb/state_of_common_lisp_survey_2020_raw_results/&quot;&gt;on reddit&lt;/a&gt; as well as feedback on the questions &lt;a href=&quot;https://www.reddit.com/r/Common_Lisp/comments/f8wqkj/state_of_common_lisp_survey_2020/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I agree with /u/defunkydrummer here:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Note that many, many things that people wish to see, are already available, so perhaps we, as a community, are not fully communicating the state of our ecosystem even to our insiders (!)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Several popular libraries have been ported to readthedocs, so the reading experience is more pleasant: &lt;a href=&quot;https://common-lisp-libraries.readthedocs.io/&quot;&gt;https://common-lisp-libraries.readthedocs.io/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Michal “phoe” Herda organized many online Lisp meetings, and we can find the videos on Youtube: &lt;a href=&quot;https://www.youtube.com/c/OnlineLispMeetings/videos&quot;&gt;https://www.youtube.com/c/OnlineLispMeetings/videos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alexander Artemenko started &lt;a href=&quot;https://40ants.com/lisp-project-of-the-day/&quot;&gt;lisp project of the day&lt;/a&gt;, a blog to review a library every day for a month, and he is now at post #219. Lately he reviewed many documentation builders for CL.&lt;/p&gt;
&lt;p&gt;On a sadder note, Quickdocs closed :(&lt;/p&gt;
&lt;h2 id=&quot;new-books&quot;&gt;New books&lt;/h2&gt;
&lt;p&gt;We got 3 new books on Common Lisp in 2020:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://vseloved.github.io/progalgs.html&quot;&gt;Programming Algorithms&lt;/a&gt;, originally published by Vsevolod Dyomkin on his website, then self-published in paperback and then published by Apress.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Apress/common-lisp-condition-system/&quot;&gt;the Common Lisp Condition System&lt;/a&gt;, by Michal “phoe” Herda, was also published by himself and then by Apress.&lt;/li&gt;
&lt;li&gt;The Cookbook that was made available in ePub and PDF :)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And also:&lt;/p&gt;
&lt;h2 id=&quot;companies&quot;&gt;Companies&lt;/h2&gt;
&lt;p&gt;We now have a curated list of companies using CL: &lt;a href=&quot;https://github.com/azzamsa/awesome-lisp-companies&quot;&gt;awesome-cl-companies&lt;/a&gt;. Before that list, the situation was embarassing:&lt;/p&gt;
&lt;blockquote readability=&quot;15&quot;&gt;
&lt;p&gt;Everyone says “Nobody uses Lisp” and Lispers say “Yes they do, there’s ITA, and, um, Autocad, and, uh, oh yeah, Paul Graham wrote Viaweb in Lisp!” Not very helpful for either side. It’s about time there was a better resource.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://pchristensen.com/blog/lisp-companies/&quot;&gt;Peter Christensen in his first list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And see also &lt;a href=&quot;https://lisp-lang.org/success/&quot;&gt;lisp-lang.org’s success stories&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some additions of this year include &lt;a href=&quot;https://graphmetrix.com/&quot;&gt;GraphMetrix&lt;/a&gt; (automation of document extraction and publishing for construction, property and logistics), Doremir Music Research AB (developing &lt;a href=&quot;https://scorecloud.com/&quot;&gt;ScoreCloud&lt;/a&gt;, a music notation software: you sing, it writes the score), &lt;a href=&quot;https://www.keepit.com/&quot;&gt;Keepit&lt;/a&gt; (a cloud-to-cloud backup service provider), &lt;a href=&quot;https://www.mind.ai&quot;&gt;Mind AI&lt;/a&gt; (an artificial intelligence engine and ecosystem), &lt;a href=&quot;http://insurevip.co.uk&quot;&gt;Virtual Insurance Products Ltd&lt;/a&gt; (insurance MGA with a bespoke business to business web platform) or again &lt;a href=&quot;https://mimix.io/&quot;&gt;the Mimix Company&lt;/a&gt; (creators of MSL and Nebula, new tools for working with facts and documents).&lt;/p&gt;
&lt;h2 id=&quot;growth&quot;&gt;Growth&lt;/h2&gt;
&lt;p&gt;We are able to compare the number of downloads of the 100 most popular Quicklisp libraries between 2015 and 2020:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lisp-journey.gitlab.io/sotu-downloads-2020.png&quot; alt=&quot;&quot; title=&quot;Comparing total downloads of Quicklisp libraries shows a 3x increase between 2015 and 2020.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We can observe a 3x growth in five years. Of course, these figures need to be taken with a grain of salt, what they really represent is subject to interpretation. What is the role of Continuous Integration here?&lt;/p&gt;
&lt;p&gt;Check it yourself: &lt;a href=&quot;https://gitlab.com/-/snippets/2070318&quot;&gt;snippet&lt;/a&gt;, &lt;a href=&quot;https://jsfiddle.net/1q3xjyeL/1/&quot;&gt;JSFiddle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many things are happening in the CL universe. Stay tuned!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;The &lt;a href=&quot;https://gitlab.com/lisp-journey/lisp-journey.gitlab.io/-/blob/master/content/blog/state-of-the-common-lisp-ecosystem-2020.md#implementations&quot;&gt;article source&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Mon, 08 Feb 2021 15:10:53 +0000</pubDate>
<dc:creator>lelf</dc:creator>
<og:title>State of the Common Lisp ecosystem, 2020 🎉 - Lisp journey</og:title>
<og:type>article</og:type>
<og:url>/blog/state-of-the-common-lisp-ecosystem-2020/</og:url>
<og:image>/images/default.png</og:image>
<og:description>This is a description of the Common Lisp ecosystem, as of January, 2021, from the perspective of a user and contributor.The purpose of this article is both to give an overview of the ecosystem, and to help drive consolidation in each domain.Each application domain has recommendations for consolidating that part of the ecosystem, and pointers for interesting future work.This article is derived from Fernando Borretti&amp;rsquo;s State of the Common Lisp ecosystem from 2015, hence the introduction that sounded familiar.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://lisp-journey.gitlab.io/blog/state-of-the-common-lisp-ecosystem-2020/</dc:identifier>
</item>
<item>
<title>Tesla buys $1.5B in Bitcoin, may accept it as payment in the future</title>
<link>https://techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</link>
<guid isPermaLink="true" >https://techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Today in &lt;a href=&quot;https://www.sec.gov/ix?doc=/Archives/edgar/data/1318605/000156459021004599/tsla-10k_20201231.htm&quot;&gt;an SEC filing&lt;/a&gt;, Tesla disclosed that it has acquired $1.5 billion in bitcoin, the popular cryptocurrency. Moreover, the company noted that it may also accept bitcoin in the future as a form of payment for its cars, though it did allow that there is some regulatory uncertainty around that effort.&lt;/p&gt;
&lt;p&gt;As the news broke, the price of bitcoin instantly rose by around 7% to more than $40,000 per coin.&lt;/p&gt;
&lt;p&gt;Tesla had &lt;a href=&quot;https://www.reuters.com/article/us-tesla-cryptocurrency-idUSKBN28U0XM&quot;&gt;previously telegraphed&lt;/a&gt; that it had an interest in the cryptocurrency, however to purchase such a large block of the coin is notable.&lt;/p&gt;


&lt;p&gt;In its filing, Tesla writes that earlier this year it “updated [its] investment policy to provide [it] with more flexibility to further diversify and maximize returns on [its] cash that is not required to maintain adequate operating liquidity,” adding that it has the option of putting cash into “certain alternative reserve assets” that include “digital assets, gold bullion, gold exchange-traded funds and other assets as specified in the future.”&lt;/p&gt;
&lt;p&gt;Under that banner, the firm has “invested an aggregate $1.50 billion in bitcoin,” going on to say that the well-known electric car company “may acquire and hold digital assets from time to time or long-term.”&lt;/p&gt;
&lt;p&gt;That’s enough wiggle room for Tesla to do whatever it wants with its cash and the crypto markets.&lt;/p&gt;
&lt;p&gt;But the company wasn’t done, completing its news-drop by adding that the company “expect[s] to begin accepting bitcoin as a form of payment for [its] products in the near future, subject to applicable laws and initially on a limited basis, which [it] may or may not liquidate upon receipt.”&lt;/p&gt;
&lt;p&gt;Tesla CEO Elon Musk has made waves in recent days by &lt;a href=&quot;https://techcrunch.com/2021/02/06/what-are-these-rich-people-doing-pumping-crappy-assets/&quot;&gt;pumping a silly cryptocurrency joke&lt;/a&gt; called Dogecoin; this is something more material. Tesla is selecting bitcoin as the cryptocurrency of its choice, helping to further cement the blockchain as the world’s best known. And that it may accept bitcoin-denominated transactions in the future could help bitcoin retain both value and exchange volume, though we probably repeat ourselves. It’s worth noting that Musk himself has also personally sent bitcoin prices higher in the past using his social presence, including by changing his bio to just the single word, &lt;a href=&quot;https://www.coindesk.com/bitcoin-price-falls-retraces-elon-musk-twitter&quot;&gt;before its price faded back&lt;/a&gt; after he removed it earlier this month.&lt;/p&gt;
&lt;p&gt;The car company then spends three paragraphs saying that its choice is risky. That’s an understatement. Then again, what is Musk if not entertaining?&lt;/p&gt;

</description>
<pubDate>Mon, 08 Feb 2021 13:09:26 +0000</pubDate>
<dc:creator>Cookingboy</dc:creator>
<og:title>Tesla buys $1.5B in bitcoin, may accept the cryptocurrency as payment in the future – TechCrunch</og:title>
<og:description>Today in an SEC filing, Tesla disclosed that it has acquired $1.5 billion in bitcoin, the popular cryptocurrency. Moreover, the company noted that it may also accept bitcoin in the future as a form of payment for its cars, though it did allow that there is some regulatory uncertainty around that ef…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2021/02/tesla-bitcoin.jpg?w=711</og:image>
<og:url>https://social.techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</dc:identifier>
</item>
<item>
<title>Terraria on Stadia cancelled after developer&amp;#039;s Google account gets locked</title>
<link>https://twitter.com/Demilogic/status/1358661840402845696</link>
<guid isPermaLink="true" >https://twitter.com/Demilogic/status/1358661840402845696</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/Demilogic/status/1358661840402845696&quot;&gt;https://twitter.com/Demilogic/status/1358661840402845696&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=26061935&quot;&gt;https://news.ycombinator.com/item?id=26061935&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 1883&lt;/p&gt;
&lt;p&gt;# Comments: 857&lt;/p&gt;
</description>
<pubDate>Mon, 08 Feb 2021 08:10:32 +0000</pubDate>
<dc:creator>benhurmarcel</dc:creator>
<og:title>Tesla buys $1.5B in bitcoin, may accept the cryptocurrency as payment in the future – TechCrunch</og:title>
<og:description>Today in an SEC filing, Tesla disclosed that it has acquired $1.5 billion in bitcoin, the popular cryptocurrency. Moreover, the company noted that it may also accept bitcoin in the future as a form of payment for its cars, though it did allow that there is some regulatory uncertainty around that ef…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2021/02/tesla-bitcoin.jpg?w=711</og:image>
<og:url>https://social.techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2021/02/08/tesla-buys-1-5b-in-bitcoin-may-accept-the-cryptocurrency-as-payment-in-the-future/</dc:identifier>
</item>
</channel>
</rss>