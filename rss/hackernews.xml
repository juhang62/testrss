<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>My dog was killed on a walk with a walker ordered through Wag</title>
<link>https://www.facebook.com/nick.moore.7140/posts/3600186133211</link>
<guid isPermaLink="true" >https://www.facebook.com/nick.moore.7140/posts/3600186133211</guid>
<description>&lt;p&gt;Friends,&lt;br/&gt;First I want to say that Sara and I have spent a lot of time thinking about whether or not we wanted to share what I’m about to share. Ultimately we’ve decided that if what happened to us happened to one of you instead, we would want to know, so that we could make more informed decisions in the future. This post is not intended as retribution. As many of you know, and many of you don’t, on December 10 our precious dog Winnie passed away. Winnie was hit and killed while on a walk with a walker that we ordered through Wag—a dog walking service that allows you to “order” a dog walker similar to the way you order an Uber. We used a Wag walker on days that neither Sara nor I could come home from work to let Winnie out. We made a lot of great relationships through our use of Wag and it allowed our sweet Winnie to be cared for while we maintained busy lifestyles. Every walker fell in love with Winnie. However, since the incident, Wag has been cold, unhelpful, and we believe less than truthful to us.&lt;/p&gt;
&lt;p&gt;On the day Winnie was killed, we ordered a walker like usual. Each walker’s profile shows their name, as well as a small paragraph about that particular walker. The walker that was with Winnie when she was killed had a different name in her bio paragraph than was shown on her profile—which makes me wonder if Wag is monitoring whether or not the people walking your dog are who they say they are. Sara asked the walker what her name was, but the walker did not provide an answer. This was concerning, but she was already with Winnie. When Sara did not receive the confirmation that Winnie’s walk was over (as you typically receive) Sara became even more concerned. Sara texted the walker, but did not receive an answer. When Sara called the walker, the walker answered and assured Sara that Winnie was home safe. Five minutes later Sara received a call from a Wag representative saying that Winnie was not home safe, but had been hit and did not survive.&lt;/p&gt;
&lt;p&gt;The representative told us that Wag was opening an investigation. To this day we do not know a single answer as to who was involved, what happened, where it happened, or why it happened. Wag has not provided us any information, and the walker has not contacted us.&lt;/p&gt;
&lt;p&gt;The representative also told us that Wag would take care of all of the expenses, such as Winnie’s cremation. However, when we submitted our receipts, we received in response a settlement and non-disclosure agreement. If we wanted to be compensated we had to agree not to tell anyone what happened, we could not leave any negative reviews, we could not make posts on social media, we could not hold Wag or the walker responsible, and only then would Wag reimburse us for Winnie’s cremation. When we responded that we would not sign the agreement, we were told that the agreement would remain available in case we changed our minds. The next day, we received an email stating that the agreement was now “null and void.”&lt;/p&gt;
&lt;p&gt;We wanted to share our experience with Wag because we know that if this had happened to someone we knew, we would think twice about using their services, and would probably rely on people we know personally instead. Sara and I will welcoming a new puppy from the same breeder in February—Rory. We will not be using Wag.&lt;/p&gt;
</description>
<pubDate>Fri, 18 Jan 2019 02:29:52 +0000</pubDate>
<dc:creator>griffinmb</dc:creator>
<og:title>Nick Moore</og:title>
<og:description>Friends, First I want to say that Sara and I have spent a lot of time thinking about whether or not we wanted to share what I’m about to share. Ultimately we’ve decided that if what happened to us...</og:description>
<og:image>https://scontent.fphx1-1.fna.fbcdn.net/v/t15.5256-10/49694947_3600187213238_8339153538940665856_n.jpg?_nc_cat=1&amp;_nc_ht=scontent.fphx1-1.fna&amp;oh=94e5ad330a5f0c1e7f27932b46d84d53&amp;oe=5CCE18C1</og:image>
<og:url>https://www.facebook.com/nick.moore.7140/posts/3600186133211</og:url>
<og:type>video</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.facebook.com/nick.moore.7140/posts/3600186133211?_fb_noscript=1</dc:identifier>
</item>
<item>
<title>A Fifth of China’s Homes Are Empty (2018)</title>
<link>https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments&quot;&gt;https://www.bloomberg.com/news/articles/2018-11-08/a-fifth-of-china-s-homes-are-empty-that-s-50-million-apartments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18935888&quot;&gt;https://news.ycombinator.com/item?id=18935888&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 208&lt;/p&gt;
&lt;p&gt;# Comments: 110&lt;/p&gt;
</description>
<pubDate>Fri, 18 Jan 2019 00:09:28 +0000</pubDate>
<dc:creator>paulpauper</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=4098a2a0-1af7-11e9-927f-6f99f165a8b3&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOC0xMS0wOC9hLWZpZnRoLW9mLWNoaW5hLXMtaG9tZXMtYXJlLWVtcHR5LXRoYXQtcy01MC1taWxsaW9uLWFwYXJ0bWVudHM=</dc:identifier>
</item>
<item>
<title>Dbeaver – Multi-platform database tool</title>
<link>https://dbeaver.io/</link>
<guid isPermaLink="true" >https://dbeaver.io/</guid>
<description>&lt;h2 class=&quot;featured-subtitle&quot;&gt;Universal Database Tool&lt;/h2&gt;
&lt;p&gt;Free multi-platform database tool for developers, SQL programmers, database administrators and analysts. Supports all popular databases: MySQL, PostgreSQL, MariaDB, SQLite, Oracle, DB2, SQL Server, Sybase, MS Access, Teradata, Firebird, Derby, etc.&lt;/p&gt;

</description>
<pubDate>Thu, 17 Jan 2019 22:08:35 +0000</pubDate>
<dc:creator>vbv</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dbeaver.io/</dc:identifier>
</item>
<item>
<title>Federal HTTPS domains that&amp;#039;ll expire soon because of US government shutdown</title>
<link>https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;We like to think of ourselves as nerds here at TechCrunch, which is why we’re bringing you this.&lt;/p&gt;
&lt;p&gt;During the government shutdown, security experts &lt;a href=&quot;https://news.netcraft.com/archives/2019/01/16/manufacturing-gov-and-white-house-security-suffer-under-u-s-shutdown.html&quot;&gt;noticed several federal websites&lt;/a&gt; were throwing back browser errors because the TLS certificate, which lights up your browser with “HTTPS” or flashes a padlock, had expired on many domains. And because so many federal workers have been sent home on unpaid leave — or worse, working without pay but trying to fill in for most of their furloughed department — expired certificates aren’t getting renewed. Renewing certificates doesn’t take much time or effort — sometimes just a click of a mouse. But some do cost money, and during a government shutdown, there isn’t any.&lt;/p&gt;
&lt;p&gt;Depending on the security level, most websites will kick back browser errors. Some won’t let you in at all until the expired certificate is renewed.&lt;/p&gt;
&lt;p&gt;We got thinking: How many of the major departments and agencies are at risk? We looked at the &lt;a href=&quot;https://18f.gsa.gov/2014/12/18/a-complete-list-of-gov-domains/&quot;&gt;list of government domains&lt;/a&gt; (not including subdomains) from 18F, the government’s digital services unit, which updated the list just before the shutdown. Then we filtered out all the state domains, leaving just the domains of all federal agencies and the executive branch. We put all of those domains through &lt;a href=&quot;https://github.com/Matty9191/ssl-cert-check&quot;&gt;a bash script&lt;/a&gt; that pulls information from the TLS certificate of each domain and returns its expiry value. Running that for a few hours in another bash script, we returned with a few thousand results.&lt;/p&gt;
&lt;p&gt;In other words, we poked every certificate to see if it had expired — and, if not, when it would stop working.&lt;/p&gt;
&lt;p&gt;Why does it matter? Above all else, it’s an inconvenience. Depending on how long this shutdown lasts, it won’t take long before some of the big federal sites might start throwing errors and locking users out. That could also affect third-party sites and apps that rely on those federal sites for data, such as through a developer API.&lt;/p&gt;
&lt;p&gt;Security, however, is less of a factor, despite &lt;a href=&quot;https://www.cnet.com/news/shutdown-government-sites-with-lapsed-security-certificates-pose-risk/&quot;&gt;claims&lt;/a&gt; to the contrary. &lt;a href=&quot;https://twitter.com/konklone?lang=en&quot;&gt;Eric Mill&lt;/a&gt;, a security expert who &lt;a href=&quot;https://twitter.com/konklone/status/1072562039908913154&quot;&gt;recently left 18F&lt;/a&gt;, the government’s digital agency, said that fears over expired certificates have been overblown.&lt;/p&gt;
&lt;p&gt;“The security risk to users is actually very low, since trusting a recently expired cert doesn’t in and of itself allow traffic to be intercepted,” he said &lt;a href=&quot;https://twitter.com/konklone/status/1084195941815590913?s=21&quot;&gt;in a recent tweet&lt;/a&gt;. Mill &lt;a href=&quot;https://twitter.com/konklone/status/1084196598689812481&quot;&gt;also noted&lt;/a&gt; that there’s little automation across the agencies, leading to certificates expiring and eventual downtime — especially when sites and departments are understaffed, especially given that each federal agency and department is responsible for their own website.&lt;/p&gt;
&lt;p&gt;There’s a silver lining. Any website that’s hosted on &lt;a href=&quot;https://cloud.gov/&quot;&gt;cloud.gov&lt;/a&gt;, &lt;a href=&quot;https://search.gov/&quot;&gt;search.gov&lt;/a&gt; or &lt;a href=&quot;https://federalist.18f.gov/&quot;&gt;federalist.18f.gov&lt;/a&gt; won’t go down as they rely on Let’s Encrypt certificates that automatically renew every three months.&lt;/p&gt;
&lt;p&gt;We’ve compiled the following list of domains that have and will expire during the period of the shutdown, from December 22 onwards — while removing dead links and defunct domains that no longer load. Some domains redirect to other domains that might have a certificate that expires next year, but the first domain will still fail on its expiry date.&lt;/p&gt;
&lt;p&gt;Remember, if you see a domain that’s working past its expiry, check the certificate and it’s likely been renewed. If you see any errors, feel free to &lt;a href=&quot;mailto:zack.whittaker@techcrunch.com?Subject=TC:Government%20Shutdown%20Domains&quot;&gt;drop me an email&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In all, we’ve counted five expired federal domains already, 13 domains will expire by the end of the month and another 58 domains will expire by the end of February.&lt;/p&gt;
&lt;h3&gt;Expired:&lt;/h3&gt;
&lt;h3&gt;Expiring in January:&lt;/h3&gt;
&lt;h3&gt;Federal domains that will expire by mid-February&lt;/h3&gt;
&lt;h3&gt;Federal domains that will expire by the end of February&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;All information was accurate as of January 17. Edited at 3:30pm ET by deleting citizenscience.gov and everykidinapark.gov as these are known to be domains with auto-renewing certificates.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Thu, 17 Jan 2019 19:50:10 +0000</pubDate>
<dc:creator>jmsflknr</dc:creator>
<og:title>These are all the federal HTTPS websites that’ll expire soon because of the US government shutdown</og:title>
<og:description>We like to think of ourselves as nerds here at TechCrunch, which is why we’re bringing you this. During the government shutdown, security experts noticed several federal websites were throwing back browser errors because the TLS certificate, which lights up your browser with “HTTPS” or flashe…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/https-government1.jpg?w=600</og:image>
<og:url>http://social.techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/17/federal-https-domains-expire-government-shutdown/</dc:identifier>
</item>
<item>
<title>Rust 1.32 released</title>
<link>https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</guid>
<description>&lt;p&gt;Jan. 17, 2019 · The Rust Release Team&lt;/p&gt;&lt;div readability=&quot;235.63356164384&quot;&gt;
&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.32.0. Rust is a programming language that is empowering everyone to build reliable and efficient software.&lt;/p&gt;
&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.32.0 is as easy as:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ rustup update stable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you don't have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes for 1.32.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;As a small side note, &lt;code&gt;rustup&lt;/code&gt; has seen some new releases lately! To update &lt;code&gt;rustup&lt;/code&gt; itself, run &lt;code&gt;rustup self update&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What's in 1.32.0 stable&lt;/h2&gt;
&lt;p&gt;Rust 1.32.0 has a few quality of life improvements, switches the default allocator, and makes additional functions &lt;code&gt;const&lt;/code&gt;. Read on for a few highlights, or see the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for additional information.&lt;/p&gt;
&lt;h4&gt;The &lt;code&gt;dbg&lt;/code&gt; macro&lt;/h4&gt;
&lt;p&gt;First up, a quality of life improvement. Are you a &quot;print debugger&quot;? If you are, and you've wanted to print out some value while working on some code, you have to do this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;let x = 5;

println!(&quot;{:?}&quot;, x);

// or maybe even this
println!(&quot;{:#?}&quot;, x);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This isn't the &lt;em&gt;largest&lt;/em&gt; speed bump, but it is a lot of stuff to simply show the value of &lt;code&gt;x&lt;/code&gt;. Additionally, there's no context here. If you have several of these &lt;code&gt;println!&lt;/code&gt;s, it can be hard to tell which is which, unless you add your own context to each invocation, requiring even more work.&lt;/p&gt;
&lt;p&gt;In Rust 1.32.0, &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56395/&quot;&gt;we've added a new macro, &lt;code&gt;dbg!&lt;/code&gt;&lt;/a&gt;, for this purpose:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn main() {
    let x = 5;
    
    dbg!(x);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you run this program, you'll see:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;[src/main.rs:4] x = 5
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You get the file and line number of where this was invoked, as well as the name and value. Additionally, &lt;code&gt;println!&lt;/code&gt; prints to the standard output, so you really should be using &lt;code&gt;eprintln!&lt;/code&gt; to print to standard error. &lt;code&gt;dbg!&lt;/code&gt; does the right thing and goes to &lt;code&gt;stderr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It even works in more complex circumstances. Consider this factorial example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    if n &amp;lt;= 1 {
        n
    } else {
        n * factorial(n - 1)
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If we wanted to debug this, we might write it like this with &lt;code&gt;eprintln!&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    eprintln!(&quot;n: {}&quot;, n);

    if n &amp;lt;= 1 {
        eprintln!(&quot;n &amp;lt;= 1&quot;);

        n
    } else {
        let n = n * factorial(n - 1);

        eprintln!(&quot;n: {}&quot;, n);

        n
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We want to log &lt;code&gt;n&lt;/code&gt; on each iteration, as well as have some kind of context for each of the branches. We see this output for &lt;code&gt;factorial(4)&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;n: 4
n: 3
n: 2
n: 1
n &amp;lt;= 1
n: 2
n: 6
n: 24
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is servicable, but not particularly great. Maybe we could work on how we print out the context to make it more clear, but now we're not debugging our code, we're figuring out how to make our debugging code better.&lt;/p&gt;
&lt;p&gt;Consider this version using &lt;code&gt;dbg!&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;fn factorial(n: u32) -&amp;gt; u32 {
    if dbg!(n &amp;lt;= 1) {
        dbg!(1)
    } else {
        dbg!(n * factorial(n - 1))
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We simply wrap each of the various expressions we want to print with the macro. We get this output instead:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-text&quot;&gt;[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = false
[src/main.rs:3] n &amp;lt;= 1 = true
[src/main.rs:4] 1 = 1
[src/main.rs:5] n * factorial(n - 1) = 2
[src/main.rs:5] n * factorial(n - 1) = 6
[src/main.rs:5] n * factorial(n - 1) = 24
[src/main.rs:11] factorial(4) = 24
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Because the &lt;code&gt;dbg!&lt;/code&gt; macro returns the value of what it's debugging, instead of &lt;code&gt;eprintln!&lt;/code&gt; which returns &lt;code&gt;()&lt;/code&gt;, we need to make &lt;em&gt;no&lt;/em&gt; changes to the structure of our code. Additionally, we have &lt;em&gt;vastly&lt;/em&gt; more useful output.&lt;/p&gt;
&lt;p&gt;That's a lot to say about a little macro, but we hope it improves your debugging experience! We are contining to work on support for &lt;code&gt;gdb&lt;/code&gt; and friends as well, of course.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;jemalloc&lt;/code&gt; is removed by default&lt;/h4&gt;
&lt;p&gt;Long, long ago, Rust had a large, Erlang-like runtime. We chose to use &lt;a href=&quot;http://jemalloc.net/&quot;&gt;jemalloc&lt;/a&gt; instead of the system allocator, because it often improved performance over the default system one. Over time, we shed more and more of this runtime, and eventually almost all of it was removed, but jemalloc was not. We didn't have a way to choose a custom allocator, and so we couldn't really remove it without causing a regression for people who do need jemalloc.&lt;/p&gt;
&lt;p&gt;Also, saying that &lt;code&gt;jemalloc&lt;/code&gt; was always the default is a bit UNIX-centric, as it was only the default on &lt;em&gt;some&lt;/em&gt; platforms. Notably, the MSVC target on Windows has shipped the system allocator for a long time.&lt;/p&gt;
&lt;p&gt;Finally, while jemalloc &lt;em&gt;usually&lt;/em&gt; has great performance, that's not always the case. Additionally, it adds about 300kb to every Rust binary. We've also had a host of &lt;a href=&quot;https://github.com/rust-lang/rust/issues/36963#issuecomment-252029017&quot;&gt;other issues&lt;/a&gt; with jemalloc in the past. It has also felt a little strange that a systems language does not default to the system's allocator.&lt;/p&gt;
&lt;p&gt;For all of these reasons, once &lt;a href=&quot;https://blog.rust-lang.org/2018/08/02/Rust-1.28.html#whats-in-1.28.0-stable&quot;&gt;Rust 1.28 shipped a way to choose a global allocator&lt;/a&gt;, we started making plans to switch the default to the system allocator, and allow you to use &lt;code&gt;jemalloc&lt;/code&gt; via a crate. In Rust 1.32, we've finally finished this work, and by default, you will get the system allocator for your programs.&lt;/p&gt;
&lt;p&gt;If you'd like to continue to use jemalloc, use &lt;a href=&quot;https://crates.io/crates/jemallocator&quot;&gt;the jemallocator crate&lt;/a&gt;. In your &lt;code&gt;Cargo.toml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-toml&quot;&gt;jemallocator = &quot;0.1.8&quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And in your crate root:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;#[global_allocator]
static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That's it! If you don't need jemalloc, it's not forced upon you, and if you do need it, it's a few lines of code away.&lt;/p&gt;
&lt;h4&gt;Final module improvements&lt;/h4&gt;
&lt;p&gt;In the past two releases, we announced several improvements to the module system. We have one last tweak landing in 1.32.0 and the 2018 edition. Nicknamed &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56759#issuecomment-450051210&quot;&gt;&quot;uniform paths&quot;&lt;/a&gt;, it permits previously invalid import path statements to be resolved exactly the same way as non-import paths. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;enum Color { Red, Green, Blue }

use Color::*;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This code did &lt;em&gt;not&lt;/em&gt; previously compile, as &lt;code&gt;use&lt;/code&gt; statements had to start with &lt;code&gt;super&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;crate&lt;/code&gt;. Now that the compiler supports uniform paths, this code will work, and do what you probably expect: import the variants of the &lt;code&gt;Color&lt;/code&gt; enum defined above the &lt;code&gt;use&lt;/code&gt; statement.&lt;/p&gt;
&lt;p&gt;With this change in place, we've completed our efforts at revising the module system. We hope you've been enjoying the simplified system so far!&lt;/p&gt;
&lt;h4&gt;Macro improvements&lt;/h4&gt;
&lt;p&gt;A few improvements to macros have landed in Rust 1.32.0. First, &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56072/&quot;&gt;a new &lt;code&gt;literal&lt;/code&gt; matcher&lt;/a&gt; was added:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;macro_rules! m {
    ($lt:literal) =&amp;gt; {};
}

fn main() {
    m!(&quot;some string literal&quot;);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;literal&lt;/code&gt; matches against literals of any type; string literals, numeric literals, &lt;code&gt;char&lt;/code&gt; literals.&lt;/p&gt;
&lt;p&gt;In the 2018 edition, &lt;code&gt;macro_rules&lt;/code&gt; macros can also use &lt;code&gt;?&lt;/code&gt;, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;macro_rules! bar {
    ($(a)?) =&amp;gt; {}
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; will match zero or one repetitions of the pattern, similar to the already-existing &lt;code&gt;*&lt;/code&gt; for &quot;zero or more&quot; and &lt;code&gt;+&lt;/code&gt; for &quot;one or more.&quot;&lt;/p&gt;
&lt;h3&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;We talked above about the &lt;code&gt;dbg!&lt;/code&gt; macro, which is a big library addition. Beyond that, 19 functions were made &lt;code&gt;const fn&lt;/code&gt;s, and all integral numeric primitives now provide conversion functions to and from byte-arrays with specified endianness. These six functions are named &lt;code&gt;to_&amp;lt;endian&amp;gt;_bytes&lt;/code&gt; and &lt;code&gt;from_&amp;lt;endian&amp;gt;_bytes&lt;/code&gt;, where &lt;code&gt;&amp;lt;endian&amp;gt;&lt;/code&gt; is one of:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ne&lt;/code&gt; - native endianness&lt;/li&gt;
&lt;li&gt;&lt;code&gt;le&lt;/code&gt; - little endian&lt;/li&gt;
&lt;li&gt;&lt;code&gt;be&lt;/code&gt; - big endian&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;Cargo gained &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6218/&quot;&gt;&lt;code&gt;cargo c&lt;/code&gt; as an alias for &lt;code&gt;cargo check&lt;/code&gt;&lt;/a&gt;, and now &lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6242/&quot;&gt;allows usernames in registry URLs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h2&gt;Contributors to 1.32.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.32.0. We couldn't have done it without all of you. &lt;a href=&quot;https://thanks.rust-lang.org/rust/1.32.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 17 Jan 2019 19:47:19 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Announcing Rust 1.32.0 | Rust Blog</og:title>
<og:description>Empowering everyone to build reliable and efficient software.</og:description>
<og:image>http://new-rust-www.herokuapp.com/static/images/rust-social-wide.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2019/01/17/Rust-1.32.0.html</dc:identifier>
</item>
<item>
<title>Google is buying Fossil’s smartwatch tech for $40M</title>
<link>https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</guid>
<description>&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Rumors about a Pixel Watch have abounded for years. Such a device would certainly make sense as Google attempts to prove the viability of its struggling wearable operating system, Wear OS. Seems the company is finally getting serious about the prospect. Today Fossil announced plans to sell its smartwatch IP to the software giant for $40 million.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;Sounds like Google will be getting a nice head start here as well. The deal pertains to “a smartwatch technology currently under development” and involves the transfer of a number of Fossil employees to team Google.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;“Wearables, built for wellness, simplicity, personalization and helpfulness, have the opportunity to improve lives by bringing users the information and insights they need quickly, at a glance,” Wear OS VP Stacey Burr said in a statement. “The addition of Fossil Group’s technology and team to Google demonstrates our commitment to the wearables industry by enabling a diverse portfolio of smartwatches and supporting the ever-evolving needs of the vitality-seeking, on-the-go consumer.”&lt;/span&gt;&lt;/p&gt;
&lt;p id=&quot;speakable-summary&quot;&gt;Like the Pixel before it, a &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/google&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;google&quot;&gt;Google&lt;/a&gt;-created smartwatch could ultimately serve as a proving group for the company’s open operating system. Wearables in general have struggled recently, and Wear OS is certainly not an exception. A &lt;a href=&quot;https://techcrunch.com/2018/08/29/googles-wear-os-is-getting-a-new-look/&quot;&gt;rebrand and redesign&lt;/a&gt; haven’t done much to shake loose the cobwebs. In fact, Fossil has remained a &lt;a href=&quot;https://techcrunch.com/2018/08/08/fossil-announces-new-update-android-wear-watches-with-hr-tracking-gps/&quot;&gt;rare constant&lt;/a&gt;, developing reasonably priced, fitness-focused products sporting the software.&lt;/p&gt;
&lt;p&gt;The smartwatch category continues to be dominated by Apple’s offerings, and top competitors Fitbit and Samsung have opted to go different routes, supporting the Pebble-based Fitbit OS and Tizen, respectively. All of this has left Google struggling to differentiate itself and its partners’ offerings. Fossil’s team certainly has the know how to build solid watch hardware, so this could prove a solid match.&lt;/p&gt;
&lt;p&gt;Fossil is quick to note, of course, that it’s still got a team of 200 working on R&amp;amp;D, and while the company is no doubt losing some quality employees, it’s still committed to wearable tech.&lt;/p&gt;
&lt;p&gt;“Fossil Group has experienced significant success in its wearables business by focusing on product design and development informed by our strong understanding of consumers’ needs and style preferences,” Fossil EVP Greg McKelvey said in a statement. “We’ve built and advanced a technology that has the potential to improve upon our existing platform of smartwatches. Together with Google, our innovation partner, we’ll continue to unlock growth in wearables.”&lt;/p&gt;
&lt;p&gt;From the outside, at least, this looks to be a similar (albeit much smaller scale) deal to the one &lt;a href=&quot;https://techcrunch.com/2018/01/29/google-htc/&quot;&gt;Google struck with HTC&lt;/a&gt; to help bolster its smartphone offerings.&lt;/p&gt;
</description>
<pubDate>Thu, 17 Jan 2019 18:36:09 +0000</pubDate>
<dc:creator>toufiqbarhamov</dc:creator>
<og:title>Google is buying Fossil’s smartwatch tech for $40 million</og:title>
<og:description>Rumors about a Pixel Watch have abounded for years. Such a device would certainly make sense as Google attempts to prove the viability of its struggling wearable operating system, Wear OS. Seems the company is finally getting serious about the prospect. Today Fossil announced plans to sell its smar…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/fossil-watches.png?w=556</og:image>
<og:url>http://social.techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/17/google-is-buying-fossils-smartwatch-tech-for-40-million/</dc:identifier>
</item>
<item>
<title>Count the people around you by monitoring wifi signals</title>
<link>https://github.com/schollz/howmanypeoplearearound</link>
<guid isPermaLink="true" >https://github.com/schollz/howmanypeoplearearound</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;Count the number of people around you 👨‍👨‍👦 by monitoring wifi signals 📡.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;howmanypeoplearearound&lt;/em&gt; calculates the number of people in the vicinity using the approximate number of smartphones as a proxy (since &lt;a href=&quot;https://twitter.com/conradhackett/status/701798230619590656&quot; rel=&quot;nofollow&quot;&gt;~70% of people have smartphones nowadays&lt;/a&gt;). A cellphone is determined to be in proximity to the computer based on sniffing WiFi probe requests. Possible uses of &lt;em&gt;howmanypeoplearearound&lt;/em&gt; include: monitoring foot traffic in your house with Raspberry Pis, seeing if your roommates are home, etc.&lt;/p&gt;
&lt;p&gt;Tested on Linux (Raspbian and Ubuntu) and Mac OS X.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;It may be illegal&lt;/strong&gt; to monitor networks for MAC addresses, especially on networks that &lt;em&gt;you do not own&lt;/em&gt;. Please check your country's laws (for US &lt;a href=&quot;https://www.law.cornell.edu/uscode/text/18/2511&quot; rel=&quot;nofollow&quot;&gt;Section 18 U.S. Code § 2511&lt;/a&gt;) - &lt;a href=&quot;https://github.com/schollz/howmanypeoplearearound/issues/4&quot;&gt;discussion&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;For a video walkthrough on how to install, checkout &lt;a href=&quot;https://youtu.be/dLzouUfJyMM?t=3m2s&quot; rel=&quot;nofollow&quot;&gt;PNPtutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;Python 2.7 or preferably Python 3 must be installed on your machine with the &lt;code&gt;pip&lt;/code&gt; command also available.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;  python -V
  pip -V
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;WiFi adapter that supports monitor mode&lt;/h3&gt;
&lt;p&gt;There are a number of possible USB WiFi adapters that support monitor mode. Here's a list that are popular:&lt;/p&gt;
&lt;p&gt;Namely you want to find a USB adapter with one of the following chipsets: Atheros AR9271, Ralink RT3070, Ralink RT3572, or Ralink RT5572.&lt;/p&gt;
&lt;h3&gt;Mac OS X&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;  brew install wireshark
  brew cask install wireshark-chmodbpf
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Linux &lt;a href=&quot;https://www.wireshark.org/docs/man-pages/tshark.html&quot; rel=&quot;nofollow&quot;&gt;tshark&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;sudo apt-get install tshark
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then update it so it can be run as non-root:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;sudo dpkg-reconfigure wireshark-common     (select YES)
sudo usermod -a -G wireshark ${USER:-root}
newgrp wireshark
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;pip install howmanypeoplearearound
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Run&lt;/h2&gt;
&lt;h3&gt;Quickstart&lt;/h3&gt;
&lt;p&gt;To run, simply type in&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound
Using wlan1 adapter and scanning &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; 60 seconds...
[&lt;span class=&quot;pl-k&quot;&gt;==================================================&lt;/span&gt;] 100%        0s left
There are about 3 people around.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will be prompted for the WiFi adapter to use for scanning. Make sure to use an adapter that supports &quot;monitor&quot; mode.&lt;/p&gt;
&lt;h3&gt;Docker alternative&lt;/h3&gt;
&lt;p&gt;If Docker is installed locally and you want to take &lt;em&gt;howmanypeoplearearound&lt;/em&gt; out for a quick spin, you can try the following:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Copy Dockerfile from this repo in your current working directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker build -t howmanypeoplearearound .&lt;/code&gt; # that . at the end is important&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -it --net=host --name howmanypeoplearearound howmanypeoplearearound&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;NOTE: This Docker alternative is known to work on Ubuntu but &lt;em&gt;not&lt;/em&gt; on Mac OS X. Feedback on other platforms would be appreciated.&lt;/p&gt;
&lt;h3&gt;Options&lt;/h3&gt;
&lt;p&gt;You can modify the scan time, designate the adapter, or modify the output using some command-line options.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound --help

Options:
  -a, --adapter TEXT   adapter to use
  -z, --analyze TEXT   analyze file
  -s, --scantime TEXT  &lt;span class=&quot;pl-k&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; seconds to scan
  -o, --out TEXT       output cellphone data to file
  -v, --verbose        verbose mode
  --number             just print the number
  -j, --jsonprint      print JSON of cellphone data
  -n, --nearby         only quantify signals that are nearby (rssi &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -70)
  --nocorrection       &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; not apply correction
  --loop               loop forever
  --sort               sort cellphone data by distance (rssi)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Print JSON&lt;/h3&gt;
&lt;p&gt;You can generate an JSON-formatted output to see what kind of phones are around:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound -o test.json -a wlan1
[&lt;span class=&quot;pl-k&quot;&gt;==================================================&lt;/span&gt;] 100%         0s left
There are about 4 people around.
$ cat test.json &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; python3 -m json.tool
[
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -86.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;90:e7:c4:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTC Corporation&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  },
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -84.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;80:e6:50:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Apple, Inc.&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  },
  {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;rssi&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: -49.0,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mac&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ac:37:43:xx:xx:xx&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;company&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTC Corporation&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }
]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A higher rssi means closer (one of these phones is mine, and the other two are my roommates' who were upstairs).&lt;/p&gt;
&lt;h3&gt;Run forever&lt;/h3&gt;
&lt;p&gt;You can add &lt;code&gt;--loop&lt;/code&gt; to make this run forever and append new lines an output file, &lt;code&gt;test.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound -o test.json -a wlan1 --loop
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Visualize&lt;/h3&gt;
&lt;p&gt;You can visualize the output from a looped command via a browser using:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ howmanypeoplearearound --analyze test.json 
Wrote index.html
Open browser to http://localhost:8001
Type Ctl+C to &lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then just open up &lt;code&gt;index.html&lt;/code&gt; in a browser and you should see plots. The first plot shows the number of people over time. Here you can see that people start arriving at work place around 8-9am (when work starts!).&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://cloud.githubusercontent.com/assets/6550035/26174159/b478b764-3b0b-11e7-9600-2aa215b789d0.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/6550035/26174159/b478b764-3b0b-11e7-9600-2aa215b789d0.png&quot; alt=&quot;newplot&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The second plot shows the RSSI values for the mac addresses seen. You can double-click on one of them in particular to highlight that trajectory, as I have done here for my phone (you can see when I leave from and when I arrive to work!):&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://cloud.githubusercontent.com/assets/6550035/26174160/b4911ae8-3b0b-11e7-93b2-92c3efaa01aa.png&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/6550035/26174160/b4911ae8-3b0b-11e7-93b2-92c3efaa01aa.png&quot; alt=&quot;newplot 1&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;howmanypeoplearearound&lt;/em&gt; counts up the number of probe requests coming from cellphones in a given amount of time. The probe requests can be &quot;sniffed&quot; from a monitor-mode enabled WiFi adapter using &lt;code&gt;tshark&lt;/code&gt;. An acccurate count does depend on everyone having cellphone and also scanning long enough (1 - 10 minutes) to capture the packet when a phone pings the WiFi network (which happens every 1 to 10 minutes unless the phone is off or WiFi is disabled).&lt;/p&gt;
&lt;p&gt;This is a simplification of another program I wrote, &lt;a href=&quot;https://github.com/schollz/find-lf&quot;&gt;find-lf&lt;/a&gt; which uses a similar idea with a cluster of Raspberry Pis to geolocate positions of cellphones within the vicinity.&lt;/p&gt;

&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 17 Jan 2019 17:01:46 +0000</pubDate>
<dc:creator>captn3m0</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/6550035?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>schollz/howmanypeoplearearound</og:title>
<og:url>https://github.com/schollz/howmanypeoplearearound</og:url>
<og:description>Count the number of people around you :family_man_man_boy: by monitoring wifi signals :satellite: - schollz/howmanypeoplearearound</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/schollz/howmanypeoplearearound</dc:identifier>
</item>
<item>
<title>HeidiSQL – GUI client for MariaDB, MySQL, Microsoft SQL Server and PostgreSQL</title>
<link>https://www.heidisql.com/</link>
<guid isPermaLink="true" >https://www.heidisql.com/</guid>
<description>&lt;div id=&quot;centercol&quot; readability=&quot;10.977718017672&quot;&gt;

&lt;p id=&quot;main-description&quot;&gt;HeidiSQL is free software, and has the aim to be easy to learn. &quot;Heidi&quot; lets you see and edit data and structures from computers running one of the database systems MariaDB, MySQL, Microsoft SQL or PostgreSQL. Invented in 2002 by Ansgar, with a development peak between 2009 and 2013, HeidiSQL belongs to the most popular tools for MariaDB and MySQL worldwide. &lt;a href=&quot;https://www.heidisql.com/#featurelist&quot;&gt;Read further about features&lt;/a&gt; or &lt;a href=&quot;https://www.heidisql.com/screenshots.php&quot;&gt;see some screenshots&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;screenshot-thumb-index&quot;&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=database&quot; title=&quot;main screen&quot;&gt;&lt;img src=&quot;https://www.heidisql.com/images/screenshots/database.png&quot; alt=&quot;HeidiSQL screenshot: main screen&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=connection&quot; title=&quot;session manager&quot;&gt;&lt;img src=&quot;https://www.heidisql.com/images/screenshots/connection.png&quot; alt=&quot;HeidiSQL screenshot: Session manager&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;ul class=&quot;news&quot; readability=&quot;8.1280276816609&quot;&gt;&lt;li class=&quot;news-category-7&quot; readability=&quot;2.8235294117647&quot;&gt;

&lt;p&gt;The latest nightly builds of HeidiSQL have support for themes, and some quite nice themes included. If you'd like to have a dark theme for example, feel free to update to the latest build. After s &lt;span title=&quot;... tarting HeidiSQL, you can select a theme under Tools &amp;amp;gt; Preferences &amp;amp;gt; General. For fitting colors in the SQL editors, there are two new color presets - one for dark themes, and the old default preset for light themes. Enjoy!&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;news-category-7&quot; readability=&quot;1.825327510917&quot;&gt;

&lt;p&gt;Better late than never: Yesterday I configured heidisql.com for the IPv6 address 2a01:488:66:1000:53a9:8f8:0:1, additionally to the existing IPv4 address 83.169.8.248. My Firefox and Edge on Window &lt;span title=&quot;... s 10 have zero problems with that. However, if you encounter any problems, especially while checking for HeidiSQL updates, please report that to HeidiSQL's bug tracker.&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;news-category-7&quot; readability=&quot;1.6653386454183&quot;&gt;

&lt;p&gt;HeidiSQL is now available in Microsoft's App Store: https://www.microsoft.com/store/apps/9NXPRT2T0ZJF This is basically the current v9.5 release, with some functionality enhancements for running on &lt;span title=&quot;... the Universal Windows Platform (UWP). This is for all Windows 10 users, and probably a good replacement for the outdated package on Chocolatey: https://chocolatey.org/packages/HeidiSQL Thanks a lot to Marc from Microsoft for helping me get through the process, and for his patience!&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;news-category-1&quot; readability=&quot;0.9070796460177&quot;&gt;

&lt;p&gt;This is a bugfix release with a few new features and enhancements. Grab it from the download page New features: Expect regular expression in filter text on right panel, not a simple string. Kee &lt;span title=&quot;... p searching case insensitive, as in prior logic. Add text hint to filter box so the user knows he can enter a regular expression here. Closes #45. Add new TAction for clearing query log, and assign it to the rightclick menu item of it. Give this new action the hotkey Ctrl+Q. Closes #25. Add custom s&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;news-category-7&quot; readability=&quot;0.92888888888889&quot;&gt;

&lt;p&gt;Move to GitHub HeidiSQL sources have just moved from Sourceforge to GitHub. Thanks to Per for creating the HeidiSQL project family / organization there. Importing the repository from Sourceforge wa &lt;span title=&quot;... s done via GitHub importer. Unfortunately, the importer did not yet support issue importing from Sourceforge, so we start at zero here. Well, this is probably a chance to make a more clean start than it was when moving from GoogleCode to Sourceforge. The last 3 nightly builds are already pulled from&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;Free for everyone, OpenSource&lt;/li&gt;
&lt;li&gt;Connect to multiple servers in one window&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/help.php#commandline&quot;&gt;Connect to servers via commandline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Connect via SSH tunnel, or pass SSL settings&lt;/li&gt;
&lt;li&gt;Create and edit &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=table_editor&quot;&gt;tables&lt;/a&gt;, &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=view_editor&quot;&gt;views&lt;/a&gt;, &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=stored_routines&quot;&gt;stored routines&lt;/a&gt;, &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=trigger_editor&quot;&gt;triggers&lt;/a&gt; and &lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=event_editor&quot;&gt;scheduled events&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=export_sql&quot;&gt;Generate nice SQL-exports&lt;/a&gt;, compress these afterwards, or put them on the clipboard.&lt;/li&gt;
&lt;li&gt;Export from one server/database directly to another server/database&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=usermanager&quot;&gt;Manage user-privileges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=import_textfile&quot;&gt;Import text-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=export_textfile&quot;&gt;Export table rows as CSV, HTML, XML, SQL, LaTeX, Wiki Markup and PHP Array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=data&quot;&gt;Browse and edit table-data using a comfortable grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bulk edit tables (move to db, change engine, collation etc.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=insert_files&quot;&gt;Batch-insert ascii or binary files into tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=query&quot;&gt;Write queries with customizable syntax-highlighting and code-completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pretty reformat disordered SQL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=host_processlist&quot;&gt;Monitor and kill client-processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=find_text_on_server&quot;&gt;Find specific text in all tables of all databases of one server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.heidisql.com/screenshots.php?which=maintenance&quot;&gt;Optimize and repair tables in a batch manner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Launch a parallel mysql.exe command line window using your current connection settings&lt;/li&gt;
&lt;li&gt;And &lt;a href=&quot;https://www.heidisql.com/screenshots.php&quot;&gt;much more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div id=&quot;rightcol&quot; readability=&quot;10.218579234973&quot;&gt;

&lt;p&gt;HeidiSQL users with enabled statistics feature work on these servers:&lt;/p&gt;



&lt;p&gt;The author: &lt;a href=&quot;https://www.heidisql.com/help.php#credits&quot;&gt;Ansgar Becker&lt;/a&gt;&lt;br /&gt;&lt;img src=&quot;https://www.gravatar.com/avatar/61266a1d3dc66d2abac69df7c07cbbb3?s=256&quot; alt=&quot;Ansgar Becker&quot; /&gt;&lt;br /&gt;&lt;em class=&quot;smalltext&quot;&gt;Summer 2015 in Egmond aan Zee, duinreservaat.&lt;br /&gt;On holiday with my wife and two kids.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br /&gt;</description>
<pubDate>Thu, 17 Jan 2019 16:53:32 +0000</pubDate>
<dc:creator>piotrkubisa</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.heidisql.com/</dc:identifier>
</item>
<item>
<title>Professional programming resources</title>
<link>https://github.com/charlax/professional-programming</link>
<guid isPermaLink="true" >https://github.com/charlax/professional-programming</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#professional-programming&quot;&gt;Professional Programming&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#must-read-books&quot;&gt;Must read books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#must-read-articles&quot;&gt;Must-read articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#other-general-material-and-list-of-resources&quot;&gt;Other general material and list of resources&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#topics&quot;&gt;Topics&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#algorithm-and-data-structures&quot;&gt;Algorithm and data structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#attitude-habits-mindset&quot;&gt;Attitude, habits, mindset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#automation&quot;&gt;Automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#biases&quot;&gt;Biases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#career-growth&quot;&gt;Career growth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#characters-sets&quot;&gt;Characters sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#coding--code-quality&quot;&gt;Coding &amp;amp; code quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#computer-science&quot;&gt;Computer science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#databases&quot;&gt;Databases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#data-science&quot;&gt;Data science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#debugging&quot;&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#design-visual-ux-ui&quot;&gt;Design (visual, UX, UI)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#design-oo-modeling-architecture-patterns-anti-patterns-etc&quot;&gt;Design (OO modeling, architecture, patterns, anti-patterns, etc.)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#dev-environment--tools&quot;&gt;Dev environment &amp;amp; tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#diversity--inclusion&quot;&gt;Diversity &amp;amp; inclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#dotfiles&quot;&gt;Dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#editors--ide&quot;&gt;Editors &amp;amp; IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#engineering-management&quot;&gt;Engineering management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#exercises&quot;&gt;Exercises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#incident-response-alerting-outages-firefighting&quot;&gt;Incident response (alerting, outages, firefighting)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#internet&quot;&gt;Internet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#interviewing&quot;&gt;Interviewing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#learning&quot;&gt;Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#problem-solving&quot;&gt;Problem solving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#project-management&quot;&gt;Project management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#programming-languages&quot;&gt;Programming languages&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#over-engineering&quot;&gt;Over-engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#reading&quot;&gt;Reading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#releasing--deploying&quot;&gt;Releasing &amp;amp; deploying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#shell&quot;&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#system-architecture&quot;&gt;System architecture&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#site-reliability-engineering-sre&quot;&gt;Site Reliability Engineering (SRE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#testing&quot;&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#tools&quot;&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#version-control-git&quot;&gt;Version control (Git)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#work-ethics--worklife-balance&quot;&gt;Work ethics &amp;amp; work/life balance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#web-development&quot;&gt;Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#writing-for-performance&quot;&gt;Writing for performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming#concepts&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Give me six hours to chop down a tree and I will spend the first four sharpening the axe. (Abraham Lincoln)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A collection of full-stack resources for programmers.&lt;/p&gt;
&lt;p&gt;The goal of this page is to make you a more proficient developer. You'll find only resources that I've found truly inspiring, or that have been become timeless classics.&lt;/p&gt;
&lt;h2&gt;Must read books&lt;/h2&gt;
&lt;p&gt;I've found these books incredibly inspiring:&lt;/p&gt;
&lt;p&gt;There are some free books available, including:&lt;/p&gt;
&lt;h2&gt;Must-read articles&lt;/h2&gt;
&lt;h2&gt;Other general material and list of resources&lt;/h2&gt;
&lt;h3&gt;Courses&lt;/h3&gt;
&lt;h2&gt;Topics&lt;/h2&gt;
&lt;h3&gt;Algorithm and data structures&lt;/h3&gt;
&lt;p&gt;Let's be honest: algo can be a pretty dry topic. &lt;a href=&quot;https://www.quora.com/Is-there-a-book-that-teaches-algorithms-data-structures-and-other-computer-science-basics-in-a-fun-way&quot; rel=&quot;nofollow&quot;&gt;This quora question&lt;/a&gt; lists some funnier learning alternative, including:&lt;/p&gt;
&lt;h3&gt;Attitude, habits, mindset&lt;/h3&gt;
&lt;h3&gt;Automation&lt;/h3&gt;
&lt;h3&gt;Biases&lt;/h3&gt;
&lt;p&gt;Biases don't only apply to hiring. For instance, the fundamental attribution bias also applies when criticizing somebody's code written a long time ago, in a totally different context.&lt;/p&gt;
&lt;h3&gt;Career growth&lt;/h3&gt;
&lt;h3&gt;Characters sets&lt;/h3&gt;
&lt;h3&gt;Coding &amp;amp; code quality&lt;/h3&gt;
&lt;h3&gt;Computer science&lt;/h3&gt;
&lt;h3&gt;Databases&lt;/h3&gt;
&lt;h3&gt;Data science&lt;/h3&gt;
&lt;h3&gt;Debugging&lt;/h3&gt;
&lt;h3&gt;Design (visual, UX, UI)&lt;/h3&gt;
&lt;p&gt;I highly recommend reading &lt;a href=&quot;http://www.amazon.com/gp/product/0133966151/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=1944687602&amp;amp;pf_rd_s=lpo-top-stripe-1&amp;amp;pf_rd_t=201&amp;amp;pf_rd_i=0321534042&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;pf_rd_r=1R7MVQP0BCP7GP9VZGYX&quot; rel=&quot;nofollow&quot;&gt;The Non-Designer's Design Book&lt;/a&gt;. This is a pretty short book that will give you some very actionable design advices.&lt;/p&gt;
&lt;h3&gt;Design (OO modeling, architecture, patterns, anti-patterns, etc.)&lt;/h3&gt;
&lt;p&gt;Here's a list of good books:&lt;/p&gt;
&lt;p&gt;Articles:&lt;/p&gt;
&lt;p&gt;I maintain a &lt;a href=&quot;https://github.com/charlax/antipatterns&quot;&gt;list of antipatterns&lt;/a&gt; on another repo. This is a highly recommended read.&lt;/p&gt;
&lt;p&gt;Quotes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&quot;You can use an eraser on the drafting table or a sledge hammer on the construction site.&quot;, Frank Lloyd Wright&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Design: simplicity&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/presentations/Simple-Made-Easy&quot; rel=&quot;nofollow&quot;&gt;Simple Made Easy&lt;/a&gt; 🎞, Rich Hickey. This is an incredibly inspiring talk redefining simplicity, ease and complexity, and showing that solutions that look easy may actually harm your design.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Dev environment &amp;amp; tools&lt;/h3&gt;
&lt;p&gt;Tools&lt;/p&gt;
&lt;h3&gt;Diversity &amp;amp; inclusion&lt;/h3&gt;
&lt;p&gt;Checkout my &lt;a href=&quot;https://github.com/charlax/engineering-management&quot;&gt;list of management resources&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Documentation&lt;/h3&gt;
&lt;h3&gt;Dotfiles&lt;/h3&gt;
&lt;p&gt;Articles&lt;/p&gt;
&lt;h3&gt;Editors &amp;amp; IDE&lt;/h3&gt;
&lt;h3&gt;Engineering management&lt;/h3&gt;
&lt;p&gt;Checkout my &lt;a href=&quot;https://github.com/charlax/engineering-management&quot;&gt;list of management resources&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Exercises&lt;/h3&gt;
&lt;p&gt;The best way to learn is to learn by doing.&lt;/p&gt;
&lt;h3&gt;Incident response (alerting, outages, firefighting)&lt;/h3&gt;
&lt;h3&gt;Internet&lt;/h3&gt;
&lt;h3&gt;Interviewing&lt;/h3&gt;
&lt;p&gt;Note: this is about you as an interviewee, &lt;strong&gt;not&lt;/strong&gt; as an interviewer. To check out my list of resources for interviewers, go to my &lt;a href=&quot;https://github.com/charlax/engineering-management#hiring-interviews&quot;&gt;engineering-management repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Learning&lt;/h3&gt;
&lt;p&gt;Learn how to learn!&lt;/p&gt;
&lt;p&gt;Richard Feynman's Learning Strategy:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Step 1: Continually ask &quot;Why?”&lt;/li&gt;
&lt;li&gt;Step 2: When you learn something, learn it to where you can explain it to a child.&lt;/li&gt;
&lt;li&gt;Step 3: Instead of arbitrarily memorizing things, look for the explanation that makes it obvious.&lt;/li&gt;
&lt;/ol&gt;&lt;h3&gt;Problem solving&lt;/h3&gt;
&lt;h3&gt;Project management&lt;/h3&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/charlax/engineering-management#project-management&quot;&gt;Project management section on my engineering-management list of resources&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Programming languages&lt;/h3&gt;
&lt;p&gt;I would recommend learning:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JavaScript and may be one other interpreted language (Python, Ruby, etc.). Interpreted languages are useful for quick one-off automation scripts, and fastest to write for interviews.&lt;/li&gt;
&lt;li&gt;A compiled language (Java, C, C++...).&lt;/li&gt;
&lt;li&gt;A more recent language to see where the industry is going (as of writing, Go, Swift, Rust, Elixir...).&lt;/li&gt;
&lt;li&gt;A language that has first-class support for functional programming (Haskell, Scala, Clojure...).&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A bit more reading:&lt;/p&gt;
&lt;h4&gt;Python&lt;/h4&gt;
&lt;p&gt;For Python feel free to checkout my &lt;a href=&quot;https://github.com/charlax/python-education&quot;&gt;professional Python education repository&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;JavaScript is such a pervasive language that it's almost required learning.&lt;/p&gt;
&lt;h4&gt;FP vs. OOP&lt;/h4&gt;
&lt;h3&gt;Over-engineering&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over, beginning with a working simple system.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;John Gall, General systemantics, an essay on how systems work, and especially how they fail..., 1975 (this quote is sometime referred as &quot;Galls' law&quot;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;Software engineering is what happens to programming when you add time and other programmers.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rob Pike, &lt;a href=&quot;https://talks.golang.org/2012/splash.article&quot; rel=&quot;nofollow&quot;&gt;Go at Google: Language Design in the Service of Software Engineering&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Reading&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/papers-we-love/papers-we-love&quot;&gt;Papers we love&lt;/a&gt;: papers from the computer science community to read and discuss. Can be a good source of inspiration of solving your design problems.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.acolyer.org/&quot; rel=&quot;nofollow&quot;&gt;The morning paper&lt;/a&gt;: one CS research paper explained every morning.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Releasing &amp;amp; deploying&lt;/h3&gt;
&lt;h3&gt;Security&lt;/h3&gt;
&lt;h3&gt;Shell&lt;/h3&gt;
&lt;h3&gt;System architecture&lt;/h3&gt;
&lt;h4&gt;Scalability&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;I already mentioned the book Scalability rules above, but there's also a &lt;a href=&quot;http://www.slideshare.net/cyrilwang/scalability-rules&quot; rel=&quot;nofollow&quot;&gt;presentation&lt;/a&gt; about it.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Stability&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;I already mentioned the book Release it! above. There's also a &lt;a href=&quot;http://www.slideshare.net/justindorfman/stability-patterns-presentation&quot; rel=&quot;nofollow&quot;&gt;presentation&lt;/a&gt; from the author.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Resiliency&lt;/h4&gt;
&lt;h3&gt;Site Reliability Engineering (SRE)&lt;/h3&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;h3&gt;Tools&lt;/h3&gt;
&lt;h3&gt;Version control (Git)&lt;/h3&gt;
&lt;h3&gt;Work ethics &amp;amp; work/life balance&lt;/h3&gt;
&lt;h3&gt;Web development&lt;/h3&gt;
&lt;h3&gt;Writing for performance&lt;/h3&gt;
&lt;h2&gt;Concepts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/charlax/professional-programming/blob/master/glossary.md&quot;&gt;Glossary&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 17 Jan 2019 14:44:54 +0000</pubDate>
<dc:creator>zerogvt</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/120501?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>charlax/professional-programming</og:title>
<og:url>https://github.com/charlax/professional-programming</og:url>
<og:description>A collection of full-stack resources for programmers. - charlax/professional-programming</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/charlax/professional-programming</dc:identifier>
</item>
<item>
<title>Nothing Can Stop Google. DuckDuckGo Is Trying Anyway</title>
<link>https://medium.com/s/story/nothing-can-stop-google-duckduckgo-is-trying-anyway-718eb7391423</link>
<guid isPermaLink="true" >https://medium.com/s/story/nothing-can-stop-google-duckduckgo-is-trying-anyway-718eb7391423</guid>
<description>&lt;div readability=&quot;36&quot;&gt;
&lt;p name=&quot;06eb&quot; id=&quot;06eb&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf--leading&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;D&lt;/span&gt;uckDuckGo is based just east of nowhere. Not in the Bay Area, or New York, or Weinberg’s hometown of Atlanta, or in Boston, where he and his wife met while attending MIT. Instead, DuckDuckGo headquarters is set along a side street just off the main drag of Paoli, Pennsylvania, in a building that looks like a cross between a Pennsylvania Dutch house and a modest Catholic church, on the second floor above a laser eye surgery center. Stained-glass windows look out onto the street, and a small statue of an angel hangs precariously off the roof. On the second floor, a door leading out to a balcony is framed by a pair of friendly looking cartoon ducks, one of which wears an eye patch. Just before DuckDuckGo’s entrance sits a welcome mat that reads “COME BACK WITH A WARRANT.”&lt;/p&gt;
&lt;p name=&quot;8b18&quot; id=&quot;8b18&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p&quot;&gt;“People don’t generally show up at our doorstep, but I hope that at some point it’ll be useful,” Weinberg tells me, sitting on a couch a few feet from an &lt;em class=&quot;markup--em markup--p-em&quot;&gt;Aqua Teen Hunger Force&lt;/em&gt; mural that takes up a quarter of a wall. At 39, he is energetic, affable, and generally much more at ease with himself than the stereotypical tech CEO. The office around us looks like it was furnished by the set designer of &lt;em class=&quot;markup--em markup--p-em&quot;&gt;Ready Player One&lt;/em&gt;: a &lt;em class=&quot;markup--em markup--p-em&quot;&gt;Hitchhiker’s Guide to the Galaxy&lt;/em&gt; print in the entryway, Japanese-style panels depicting the Teenage Mutant Ninja Turtles in the bathroom, and a vintage-looking &lt;em class=&quot;markup--em markup--p-em&quot;&gt;RoboCop&lt;/em&gt; pinball machine in the break room. There’s even a Lego model of the DeLorean from &lt;em class=&quot;markup--em markup--p-em&quot;&gt;Back to the Future&lt;/em&gt; on his desk. The furniture, Weinberg tells me, is mostly from Ikea. The lamp in the communal area is a hand-me-down from his mom.&lt;/p&gt;
&lt;/div&gt;&lt;div readability=&quot;108.26342525399&quot;&gt;
&lt;p name=&quot;9c2b&quot; id=&quot;9c2b&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Weinberg learned basic programming on an Atari while he was still in elementary school. Before hitting puberty, he’d built an early internet bulletin board. “It didn’t really have a purpose” in the beginning, Weinberg says. The one feature that made his bulletin board unique, he says, was that he hosted anonymous AMA-style question panels with his father, an infectious disease doctor with substantial experience treating AIDS patients. This was during the early 1990s, when the stigma surrounding HIV and AIDS remained so great that doctors were known to deny treatment to those suffering from it. Weinberg says that the free—and private—medical advice made the board a valuable resource for the small number of people who found it. It was an early instance of Weinberg’s interest in facilitating access to information, as well as a cogent example of the power of online privacy: “The ability to access informational resources anonymously actually opens up that access significantly,” he told me over email.&lt;/p&gt;
&lt;p name=&quot;9d42&quot; id=&quot;9d42&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;After graduating from MIT in 2001, Weinberg launched a slew of businesses, none of which are particularly memorable. First there was an educational software program called Learnection. (“Terrible name… the idea was good, but 15 years too early,” he says.) Then he co-founded an early social networking company called Opobox, taking on no employees and writing all the code himself. “Facebook just kind of obliterated it,” Weinberg says, though he was able to sell the network to the parent company of Classmates.com for roughly &lt;a href=&quot;https://www.sec.gov/Archives/edgar/data/1142701/000110465906033409/a06-9620_110q.htm&quot; data-href=&quot;https://www.sec.gov/Archives/edgar/data/1142701/000110465906033409/a06-9620_110q.htm&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;$10 million in cash&lt;/a&gt; in 2006.&lt;/p&gt;
&lt;p name=&quot;f8f3&quot; id=&quot;f8f3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It was around that time when Weinberg began working on what would become DuckDuckGo. Google had yet to achieve total hegemony over the internet search field, and Weinberg felt that he could create a browser plugin that might help eliminate the scourge of spammy search results in other search engines.&lt;/p&gt;
&lt;blockquote name=&quot;52ec&quot; id=&quot;52ec&quot; class=&quot;graf graf--pullquote graf-after--p&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Weinberg bought a billboard in San Francisco that proudly proclaimed, “Google tracks you. We don’t.” The stunt paid off in spades, doubling DuckDuckGo’s daily search traffic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;cec7&quot; id=&quot;cec7&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;To build an algorithm that weeded out bad search results, he first had to do it by hand. “I took a large sample of different pages and hand-marked them as ‘spam’ or ‘not spam.’” The process of scraping the web, Weinberg says, inadvertently earned him a visit from the FBI. “Once they realized I was just crawling the web, they just went away,” he says. He also experimented with creating a proto-Quora service that allowed anyone to pose a question and have it answered by someone else, as well as a free alternative to Meetup.com. Eventually, he combined facets of all three efforts into a full-on search engine.&lt;/p&gt;
&lt;p name=&quot;93f9&quot; id=&quot;93f9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;When Weinberg first launched DuckDuckGo in 2008 — the &lt;a href=&quot;https://duck.co/help/company/name&quot; data-href=&quot;https://duck.co/help/company/name&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;name is a wink to the children’s game&lt;/a&gt; of skipping over the wrong options to get to the right one — he differentiated his search engine by offering instant answers to basic questions (essentially an early open-source version of Google’s Answer Box), spam filtering, and highly customizable search results based on user preferences. “Those [were] things that early adopters kind of appreciated,” he says.&lt;/p&gt;
&lt;p name=&quot;63a4&quot; id=&quot;63a4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At the time, Weinberg says, consumer privacy was not a central concern. In 2009, when he made the decision to stop collecting personal search data, it was more a matter of practicality than a principled decision about civil liberties. Instead of storing troves of data on every user and targeting those users individually, DuckDuckGo would simply sell ads against search keywords. Most of DuckDuckGo’s revenue, he explains, is still generated this way. The system doesn’t capitalize on targeted ads, but, Weinberg says, “I think there’s a choice between squeezing out every ounce of profit and making ethical decisions that aren’t at the expense of society.”&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*OU-b4th16b49_BUikJUKiQ.jpeg&quot; data-width=&quot;6381&quot; data-height=&quot;4259&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*OU-b4th16b49_BUikJUKiQ.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1200/1*OU-b4th16b49_BUikJUKiQ.jpeg&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;53fa&quot; id=&quot;53fa&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Until 2011, Weinberg was DuckDuckGo’s sole full-time employee. That year, he pushed to expand the company. He bought &lt;a href=&quot;https://www.wired.com/2011/01/duckduckgo-google-privacy/&quot; data-href=&quot;https://www.wired.com/2011/01/duckduckgo-google-privacy/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;a billboard in Google’s backyard&lt;/a&gt; of San Francisco that proudly proclaimed, “Google tracks you. &lt;em class=&quot;markup--em markup--p-em&quot;&gt;We&lt;/em&gt; don’t.” (That defiant gesture &lt;a href=&quot;https://uncubed.com/daily/the-best-and-worst-of-startup-billboards/&quot; data-href=&quot;https://uncubed.com/daily/the-best-and-worst-of-startup-billboards/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;and others like it&lt;/a&gt; were later parodied on HBO’s &lt;a href=&quot;https://www.youtube.com/watch?v=Vl4HWvvNwo8&quot; data-href=&quot;https://www.youtube.com/watch?v=Vl4HWvvNwo8&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Silicon Valley&lt;/em&gt;&lt;/a&gt;.) The stunt paid off in spades, doubling DuckDuckGo’s daily search traffic. Weinberg began courting VC investors, eventually selling a minority stake in the company to Union Square Ventures, the firm that has also backed SoundCloud, Coinbase, Kickstarter, and Stripe. That fall, he hired his first full-time employee, and DuckDuckGo moved out of Weinberg’s house and into the strangest-looking office in all of Paoli, Pennsylvania.&lt;/p&gt;
&lt;p name=&quot;49ae&quot; id=&quot;49ae&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Then, in 2013, digital privacy became front-page news. That year, NSA contractor Edward Snowden leaked a series of documents to the &lt;a href=&quot;https://www.theguardian.com/world/2013/jun/06/us-tech-giants-nsa-data&quot; data-href=&quot;https://www.theguardian.com/world/2013/jun/06/us-tech-giants-nsa-data&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Guardian&lt;/em&gt;&lt;/a&gt; and the &lt;a href=&quot;https://www.washingtonpost.com/world/national-security/nsa-infiltrates-links-to-yahoo-google-data-centers-worldwide-snowden-documents-say/2013/10/30/e51d661e-4166-11e3-8b74-d89d714ca4dd_story.html?noredirect=on&amp;amp;utm_term=.0a2a22e68c6e&quot; data-href=&quot;https://www.washingtonpost.com/world/national-security/nsa-infiltrates-links-to-yahoo-google-data-centers-worldwide-snowden-documents-say/2013/10/30/e51d661e-4166-11e3-8b74-d89d714ca4dd_story.html?noredirect=on&amp;amp;utm_term=.0a2a22e68c6e&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Washington Post&lt;/em&gt;&lt;/a&gt; revealing the existence of the NSA’s PRISM program, which granted the agency unfettered access to the personal data of millions of Americans through a secret back door into the servers of Google, Yahoo, Facebook, Apple, and other major internet firms. Though &lt;a href=&quot;https://www.washingtonpost.com/world/national-security/google-statement-on-nsa-infiltration-of-links-between-data-centers/2013/10/30/75f3314a-41b3-11e3-a624-41d661b0bb78_story.html?utm_term=.59f4e9b5887b&quot; data-href=&quot;https://www.washingtonpost.com/world/national-security/google-statement-on-nsa-infiltration-of-links-between-data-centers/2013/10/30/75f3314a-41b3-11e3-a624-41d661b0bb78_story.html?utm_term=.59f4e9b5887b&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Google denied&lt;/a&gt; any knowledge of the program, the reputational damage had been done. DuckDuckGo rode a wave of press coverage, enjoying placement in stories that offered data privacy solutions to millions of newly freaked-out people worried that the government was spying on them.&lt;/p&gt;
&lt;p name=&quot;e600&quot; id=&quot;e600&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--p graf--trailing&quot;&gt;“All of a sudden we were part of this international story,” Weinberg says. The next year, DuckDuckGo turned a profit. Shortly thereafter, Weinberg finally started paying himself a salary.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 17 Jan 2019 14:36:42 +0000</pubDate>
<dc:creator>kjhughes</dc:creator>
<og:title>Nothing Can Stop Google. DuckDuckGo Is Trying Anyway.</og:title>
<og:url>https://medium.com/s/story/nothing-can-stop-google-duckduckgo-is-trying-anyway-718eb7391423</og:url>
<og:image>https://cdn-images-1.medium.com/focal/1200/632/47/43/1*7X7-LcW3uW6rfNHQ3X9cOw.jpeg</og:image>
<og:description>In late November, hotel conglomerate Marriott International disclosed that the personal information of some 500 million customers — including home addresses, phone numbers, and credit card numbers —…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/s/story/nothing-can-stop-google-duckduckgo-is-trying-anyway-718eb7391423</dc:identifier>
</item>
</channel>
</rss>