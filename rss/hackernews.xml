<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Bash 5.0 released</title>
<link>http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00063.html</link>
<guid isPermaLink="true" >http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00063.html</guid>
<description>&lt;head&gt;&lt;title&gt;Bash-5.0 release available&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;88.312296246761&quot;&gt;
&lt;center&gt;


&lt;/center&gt;
&lt;hr /&gt;&lt;p&gt;[&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00062.html&quot;&gt;Date Prev&lt;/a&gt;][&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00064.html&quot;&gt;Date Next&lt;/a&gt;][&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00055.html&quot;&gt;Thread Prev&lt;/a&gt;][&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00064.html&quot;&gt;Thread Next&lt;/a&gt;][&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/index.html#00063&quot;&gt;Date Index&lt;/a&gt;][&lt;a href=&quot;http://lists.gnu.org/archive/html/bug-bash/2019-01/threads.html#00063&quot;&gt;Thread Index&lt;/a&gt;] &lt;/p&gt;
&lt;h2&gt;Bash-5.0 release available&lt;/h2&gt;
&lt;hr /&gt;&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;2.5&quot;&gt;&lt;tr&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;From&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Chet Ramey&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;Subject&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Bash-5.0 release available&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;Date&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Mon, 7 Jan 2019 17:03:32 -0500&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr /&gt;&lt;pre&gt;
Introduction
============

The first public release of bash-5.0 is now available with the URLs

&lt;a rel=&quot;nofollow&quot; href=&quot;ftp://ftp.cwru.edu/pub/bash/bash-5.0.tar.gz&quot;&gt;ftp://ftp.cwru.edu/pub/bash/bash-5.0.tar.gz&lt;/a&gt;
&lt;a rel=&quot;nofollow&quot; href=&quot;ftp://ftp.gnu.org/pub/gnu/bash/bash-5.0.tar.gz&quot;&gt;ftp://ftp.gnu.org/pub/gnu/bash/bash-5.0.tar.gz&lt;/a&gt;

and from the master branch of the bash git repository
(&lt;a rel=&quot;nofollow&quot; href=&quot;http://git.savannah.gnu.org/cgit/bash.git/log/&quot;&gt;http://git.savannah.gnu.org/cgit/bash.git/log/&lt;/a&gt;)
and the usual GNU mirror sites.

Bash is the GNU Project's Bourne Again SHell, a complete
implementation of the POSIX shell spec, but also with interactive
command line editing, job control on architectures that support it,
csh-like features such as history substitution and brace expansion,
and a slew of other features.  For more information on the features
of Bash that are new to this type of shell, see the file
`doc/bashref.texi'.  There is also a large Unix-style man page.  The
man page is the definitive description of the shell's features. 

This tar file includes the formatted documentation (pdf, postscript,
dvi, info, and html, plus nroffed versions of the manual pages). 

Please use `bashbug' to report bugs with this version.  It is built
and installed at the same time as bash.

Installation
============

Please read the README file first.

Installation instructions are provided in the INSTALL file.

New Features
============

This is the fifth major release of bash.

Read the file NEWS in the bash-5.0 distribution for a complete description
of the new features.  A copy of the relevant portions is included below. 

This release fixes several outstanding bugs in bash-4.4 and introduces several
new features.  The most significant bug fixes are an overhaul of how
nameref variables resolve and a number of potential out-of-bounds memory
errors discovered via fuzzing. There are a number of changes to the
expansion of $@ and $* in various contexts where word splitting is not
performed to conform to a Posix standard interpretation, and additional
changes to resolve corner cases for Posix conformance.

The most notable new features are several new shell variables: BASH_ARGV0,
EPOCHSECONDS, and EPOCHREALTIME. The `history' builtin can remove ranges of
history entries and understands negative arguments as offsets from the end
of the history list. There is an option to allow local variables to inherit
the value of a variable with the same name at a preceding scope. There is
a new shell option that, when enabled, causes the shell to attempt to
expand associative array subscripts only once (this is an issue when they
are used in arithmetic expressions).  The `globasciiranges' shell option
is now enabled by default; it can be set to off by default at configuration
time.

There are a few incompatible changes between bash-4.4 and bash-5.0. The
changes to how nameref variables are resolved means that some uses of
namerefs will behave differently, though I have tried to minimize the
compatibility issues. By default, the shell only sets BASH_ARGC and
BASH_ARGV at startup if extended debugging mode is enabled; it was an
oversight that it was set unconditionally and caused performance issues
when scripts were passed large numbers of arguments.

Bash can be linked against an already-installed Readline library rather
than the private version in lib/readline if desired.  Only readline-8.0 and
later versions are able to provide all of the symbols that bash-5.0 requires;
earlier versions of the Readline library will not work correctly. 

A complete list of changes between bash-4.4 and bash-5.0 is available in
the file CHANGES; the complete list is too large to include in this
message. 

Readline
========

Also available is a new release of the standalone Readline library,
version 8.0, with its own configuration scripts and Makefiles. 
It can be retrieved with the URLs

&lt;a rel=&quot;nofollow&quot; href=&quot;ftp://ftp.cwru.edu/pub/bash/readline-8.0.tar.gz&quot;&gt;ftp://ftp.cwru.edu/pub/bash/readline-8.0.tar.gz&lt;/a&gt;
&lt;a rel=&quot;nofollow&quot; href=&quot;ftp://ftp.gnu.org/pub/gnu/readline/readline-8.0.tar.gz&quot;&gt;ftp://ftp.gnu.org/pub/gnu/readline/readline-8.0.tar.gz&lt;/a&gt;

and from the master branch of the GNU readline git repository
(&lt;a rel=&quot;nofollow&quot; href=&quot;http://git.savannah.gnu.org/cgit/readline.git/log/&quot;&gt;http://git.savannah.gnu.org/cgit/readline.git/log/&lt;/a&gt;)
and the usual GNU mirror sites.

The formatted Readline documentation is included in the readline
distribution tar file.

A separate announcement listing the changes in Readline is being
distributed.

As always, thanks for your help.

Chet

+========== NEWS ==========+
This is a terse description of the new features added to bash-5.0 since
the release of bash-4.4.  As always, the manual page (doc/bash.1) is
the place to look for complete descriptions.

1.  New Features in Bash

a. The `wait' builtin can now wait for the last process substitution created.

b. There is an EPOCHSECONDS variable, which expands to the time in seconds
   since the Unix epoch.

c. There is an EPOCHREALTIME variable, which expands to the time in seconds
   since the Unix epoch with microsecond granularity.

d. New loadable builtins: rm, stat, fdflags.

e. BASH_ARGV0: a new variable that expands to $0 and sets $0 on assignment.

f. When supplied a numeric argument, the shell-expand-line bindable readline
   command does not perform quote removal and suppresses command and process
   substitution.

g. `history -d' understands negative arguments: negative arguments offset from
   the end of the history list.

h. The `name' argument to the `coproc' reserved word now undergoes word
   expansion, so unique coprocs can be created in loops.

i. A nameref name resolution loop in a function now resolves to a variable by
   that name in the global scope.

j. The `wait' builtin now has a `-f' option, which signfies to wait until the
   specified job or process terminates, instead of waiting until it changes
   state.

k. There is a define in config-top.h that allows the shell to use a static
   value for $PATH, overriding whatever is in the environment at startup, for
   use by the restricted shell.

l. Process substitution does not inherit the `v' option, like command
   substitution.

m. If a non-interactive shell with job control enabled detects that a foreground
   job died due to SIGINT, it acts as if it received the SIGINT.

n. The SIGCHLD trap is run once for each exiting child process even if job
   control is not enabled when the shell is in Posix mode.

o. A new shopt option: localvar_inherit; if set, a local variable inherits the
   value of a variable with the same name at the nearest preceding scope.

p. `bind -r' now checks whether a key sequence is bound before binding it to
   NULL, to avoid creating keymaps for a multi-key sequence.

q. A numeric argument to the line editing `operate-and-get-next' command
   specifies which history entry to use.

r. The positional parameters are now assigned before running the shell startup
   files, so startup files can use address@hidden

s. There is a compile-time option that forces the shell to disable the check
   for an inherited OLDPWD being a directory.

t. The `history' builtin can now delete ranges of history entries using
   `-d start-end'.

u. The `vi-edit-and-execute-command' bindable readline command now puts readline
   back in vi insertion mode after executing commands from the edited file.

v. The command completion code now matches aliases and shell function names
   case-insensitively if the readline completion-ignore-case variable is set.

w. There is a new `assoc_expand_once' shell option that attempts to expand
   associative array subscripts only once.

x. The shell only sets up BASH_ARGV and BASH_ARGC at startup if extended
   debugging mode is active. The old behavior of unconditionally setting them
   is available as part of the shell compatibility options.

y. The `umask' builtin now allows modes and masks greater than octal 777.

z. The `times' builtin now honors the current locale when printing a decimal
   point.

aa. There is a new (disabled by default, undocumented) shell option to enable
    and disable sending history to syslog at runtime.

bb. Bash no longer allows variable assignments preceding a special builtin that
    changes variable attributes to propagate back to the calling environment
    unless the compatibility level is 44 or lower.

cc. You can set the default value for $HISTSIZE at build time in config-top.h.

dd. The `complete' builtin now accepts a -I option that applies the completion
    to the initial word on the line.

ee.  The internal bash malloc now uses mmap (if available) to satisfy requests
    greater than 128K bytes, so free can use mfree to return the pages to the
    kernel.

ff. The shell doesn't automatically set BASH_ARGC and BASH_ARGV at startup
    unless it's in debugging mode, as the documentation has always said, but
    will dynamically create them if a script references them at the top level
    without having enabled debugging mode.

gg. The localvar_inherit option will not attempt to inherit a value from a
    variable of an incompatible type (indexed vs. associative arrays, for
    example).

hh. The `globasciiranges' option is now enabled by default; it can be set to
    off by default at configuration time.

ii. Associative and indexed arrays now allow subscripts consisting solely of
    whitespace.

jj. `checkwinsize' is now enabled by default.

kk. The `localvar_unset' shopt option is now visible and documented.

ll. The `progcomp_alias' shopt option is now visible and documented.

mm. The signal name processing code now understands `SIGRTMIN+n' all the way
    up to SIGRTMAX.

nn. There is a new `seq' loadable builtin.

oo. Trap execution now honors the (internal) max invocations of `eval', since
    traps are supposed to be executed as if using `eval'.

pp. The $_ variable doesn't change when the shell executes a command that forks.

qq. The `kill' builtin now supports -sSIGNAME and -nSIGNUM, even though
    conforming applications aren't supposed to use them.

rr. POSIX mode now enables the `shift_verbose' option.

2.  New Features in Readline

a. Non-incremental vi-mode search (`N', `n') can search for a shell pattern, as
   Posix specifies (uses fnmatch(3) if available).

b. There are new `next-screen-line' and `previous-screen-line' bindable
   commands, which move the cursor to the same column in the next, or previous,
   physical line, respectively.

c. There are default key bindings for control-arrow-key key combinations.

d. A negative argument (-N) to `quoted-insert' means to insert the next N
   characters using quoted-insert.

e. New public function: rl_check_signals(), which allows applications to
   respond to signals that readline catches while waiting for input using
   a custom read function.

f. There is new support for conditionally testing the readline version in an
   inputrc file, with a full set of arithmetic comparison operators available.

g. There is a simple variable comparison facility available for use within an
   inputrc file. Allowable operators are equality and inequality; string
   variables may be compared to a value; boolean variables must be compared to
   either `on' or `off'; variable names are separated from the operator by
   whitespace.

h. The history expansion library now understands command and process
   substitution and extended globbing and allows them to appear anywhere in a
   word.

i. The history library has a new variable that allows applications to set the
   initial quoting state, so quoting state can be inherited from a previous
   line.

j. Readline now allows application-defined keymap names; there is a new public
   function, rl_set_keymap_name(), to do that.

k. The &quot;Insert&quot; keypad key, if available, now puts readline into overwrite
   mode.

-- 
``The lyf so short, the craft so long to lerne.'' - Chaucer
                 ``Ars longa, vita brevis'' - Hippocrates
Chet Ramey, UTech, CWRU    address@hidden    &lt;a rel=&quot;nofollow&quot; href=&quot;http://tiswww.cwru.edu/~chet/&quot;&gt;http://tiswww.cwru.edu/~chet/&lt;/a&gt;


&lt;/pre&gt;
&lt;hr /&gt;
&lt;hr /&gt;&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;[Prev in Thread]&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Current Thread&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;[Next in Thread]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt;Bash-5.0 release available&lt;/strong&gt;, &lt;em&gt;Chet Ramey&lt;/em&gt;&lt;/span&gt; &lt;strong&gt;&amp;lt;=&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr /&gt;&lt;/body&gt;</description>
<pubDate>Tue, 08 Jan 2019 02:19:46 +0000</pubDate>
<dc:creator>siteshwar</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://lists.gnu.org/archive/html/bug-bash/2019-01/msg00063.html</dc:identifier>
</item>
<item>
<title>The US spends more on healthcare for no gain says new report from Johns Hopkins</title>
<link>https://www.jhsph.edu/news/news-releases/2018/us-health-care-spending-highest-among-developed-countries.html</link>
<guid isPermaLink="true" >https://www.jhsph.edu/news/news-releases/2018/us-health-care-spending-highest-among-developed-countries.html</guid>
<description>&lt;p&gt;January 7, 2018&lt;/p&gt;

&lt;h2&gt;Americans on average continue to spend much more for health care—while getting less care—than people in other developed countries&lt;/h2&gt;
&lt;p&gt;The United States, on a per capita basis, spends much more on health care than other developed countries; the chief reason is not greater health care utilization, but higher prices, according to a study from a team led by a Johns Hopkins Bloomberg School of Public Health researcher.&lt;/p&gt;
&lt;p&gt;The paper appears in the January issue of &lt;em&gt;Health Affairs&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The researchers determined that the higher overall health care spending in the U.S. was due mainly to higher prices—including higher drug prices, higher salaries for doctors and nurses, higher hospital administration costs and higher prices for many medical services.&lt;/p&gt;
&lt;p&gt;The paper finds that the U.S. remains an outlier in terms of per capita health care spending, which was $9,892 in 2016. That amount was about 25 percent higher than second-place Switzerland’s $7,919. It was also 108 percent higher than Canada’s $4,753, and 145 percent higher than the Organization for Economic Cooperation and Development (OECD) median of $4,033. And it was more than double the $4,559 the U.S. spent per capita on health care in 2000—the year whose data the researchers analyzed for a 2003 study.&lt;/p&gt;
&lt;p&gt;The researchers, along with the late Princeton health care economist Uwe Reinhardt, who died in 2017, came to the same conclusion in their well-known 2003 &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/12757275&quot;&gt;study&lt;/a&gt;, “It's the prices, stupid: why the United States is so different from other countries.” The new analysis is in part a tribute to the late Reinhardt.&lt;/p&gt;
&lt;p&gt;“In spite of all the efforts in the U.S. to control health spending over the past 25 years, the story remains the same—the U.S. remains the most expensive because of the prices the U.S pays for health services,” says lead author Gerard F. Anderson, PhD, a professor in the Bloomberg School’s Department of Health Policy and Management. &lt;/p&gt;
&lt;p&gt;Both studies were based on an analysis of health care use and spending in the U.S. and the other industrialized countries that are members of the OECD. The updated study was co-authored by Peter Hussey, PhD, vice president of the RAND Corporation and Dean Varduhi Petrosyan, PhD, of the American University of Armenia.&lt;/p&gt;
&lt;p&gt;Anderson and his colleagues noticed one big difference between 2003 and 2016: a widening of the gap between what public insurers and private insurers pay for the same health care services. In order to lower per capita health care spending, the authors recommend that the U.S. should focus on what private insurers and self-insured corporations pay, since they pay significantly more than public insurers.&lt;/p&gt;
&lt;p&gt;The researchers also found that health spending in the U.S. has been growing faster than the other OECD countries in spite of efforts to control spending in the U.S. Overall U.S. health spending increased at an average rate of 2.8 percent annually between 2000 and 2016, which is greater than the OECD median annual increase of 2.6 percent. Per capita, inflation-adjusted spending on pharmaceuticals also increased much more quickly in the U.S.—at a rate of 3.8 percent per year, compared to just 1.1 percent for the OECD median.&lt;/p&gt;
&lt;p&gt;During the same period, U.S. gross domestic product (GDP) per capita increased by only 0.9 percent annually, which means that health care continues to represent a larger share of GDP. U.S. health care spending in 2016 totaled 17.2 percent of GDP, compared to just 8.9 percent for the OECD median.&lt;/p&gt;
&lt;p&gt;Not only does the U.S outspend other OECD countries, on the whole it has less access to many health care resources. The researchers found that in 2015, the most recent year for which data were available in the U.S., there were only 7.9 practicing nurses and 2.6 practicing physicians per 1,000 population, compared to the OECD medians of 9.9 nurses and 3.2 physicians.&lt;/p&gt;
&lt;p&gt;Similarly, the U.S. in 2015 had only 7.5 new medical school graduates per 100,000 population, compared to the OECD median of 12.1, and just 2.5 acute care hospital beds per 1,000 population compared to the OECD median of 3.4.&lt;/p&gt;
&lt;p&gt;Although the U.S. ranked second in the numbers of MRI machines per capita and third in the numbers of CT scanners per capita—implying a relatively high use of these expensive resources—Japan ranked first in both categories, yet was among the lowest overall health care spenders in the OECD in 2016.&lt;/p&gt;
&lt;p&gt;“It’s not that we’re getting more; it’s that we’re paying much more,” Anderson says.&lt;/p&gt;
&lt;p&gt;“It’s Still The Prices, Stupid: Why The US Spends So Much On Health Care, And A Tribute To Uwe Reinhardt,” was written by Gerard Anderson, Peter Hussey and Varduhi Petrosyan.&lt;/p&gt;
&lt;p&gt;# # #&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Media contacts for the Johns Hopkins Bloomberg School of Public Health: Barbara Benham at 410-614-6029 or &lt;a href=&quot;mailto:bbenham1@jhu.edu&quot;&gt;bbenham1@jhu.edu&lt;/a&gt; &lt;/span&gt;&lt;span&gt;and&lt;/span&gt;&lt;span&gt; Robin Scullin at 410-955-7619 or &lt;/span&gt;&lt;a href=&quot;mailto:rsculli1@jhu.edu&quot;&gt;rsculli1@jhu.edu&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 08 Jan 2019 00:39:16 +0000</pubDate>
<dc:creator>grecy</dc:creator>
<og:url>https://www.jhsph.edu/news/news-releases/2018/us-health-care-spending-highest-among-developed-countries.html</og:url>
<og:type>website</og:type>
<og:title>U.S. Health Care Spending Highest Among Developed Countries</og:title>
<og:description>The United States, on a per capita basis, spends much more on health care than other developed countries; the chief reason is not greater health care utilization, but higher prices, according to a stu</og:description>
<og:image>https://www.jhsph.edu/custom/mod_webstats/_images/12.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.jhsph.edu/news/news-releases/2018/us-health-care-spending-highest-among-developed-countries.html</dc:identifier>
</item>
<item>
<title>We can confirm that there was a successful 51% attack on Ethereum Classic</title>
<link>https://twitter.com/etherchain_org/status/1082329360948969472</link>
<guid isPermaLink="true" >https://twitter.com/etherchain_org/status/1082329360948969472</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/etherchain_org/status/1082329360948969472&quot;&gt;https://twitter.com/etherchain_org/status/1082329360948969472&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18849961&quot;&gt;https://news.ycombinator.com/item?id=18849961&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 420&lt;/p&gt;
&lt;p&gt;# Comments: 181&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 20:55:05 +0000</pubDate>
<dc:creator>doener</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/etherchain_org/status/1082329360948969472</dc:identifier>
</item>
<item>
<title>Supporting open source with 3% of our revenue</title>
<link>https://blog.geteventbot.com/2019/01/06/how-we-support-open-source-software.html</link>
<guid isPermaLink="true" >https://blog.geteventbot.com/2019/01/06/how-we-support-open-source-software.html</guid>
<description>&lt;p&gt;&lt;em&gt;TL;DR: We’re donating 3% of our revenue to fund important open source projects&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1266306/50743445-e08f5080-11cc-11e9-893b-09160b0cef31.png&quot; width=&quot;400&quot; alt=&quot;redwood open source&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Open source software is critical to our lives, as the internet relies heavily on projects built by legions of good-willed developers. In business, over &lt;a href=&quot;https://www.siliconrepublic.com/enterprise/open-source-software-enterprise&quot;&gt;78% of companies&lt;/a&gt; utilize open source in their organization. However, most companies see open source software as a simple cost reduction - get software functionality without spending money on development. Sadly this ignores the countless humans who dedicate their time and energy to maintain and grow these projects. Not only is this unsustainable in the long run, but it diminishes the great work of these open source developers.&lt;/p&gt;
&lt;p&gt;Our team at Eventbot think it’s critically important to support open source and more specifically, the people who make it all possible. &lt;strong&gt;So we’ve decided to dedicate 3% of our revenue into the open source projects we rely on.&lt;/strong&gt; This is a bit of an experiment, as we are a small startup but we feel it’s important to set an example and help the teams that are contributing to our own success. Among the open source projects we’re donating to, we’re big fans of &lt;a href=&quot;https://node-postgres.com/&quot;&gt;Node-Postgres&lt;/a&gt;, &lt;a href=&quot;https://gulpjs.com/&quot;&gt;GulpJS&lt;/a&gt;, &lt;a href=&quot;https://nearley.js.org/&quot;&gt;Nearley&lt;/a&gt;, and &lt;a href=&quot;https://fullcalendar.io/&quot;&gt;Full Calendar.&lt;/a&gt; These projects provide a significant value to us, enabling us to deliver Eventbot to our users around the world. Plus, we just felt like these projects were could really use more financial support. Our plan is re-evaluate our contributions every 6 months to increase the dollars we contribute and review new projects we might be using internally.&lt;/p&gt;
&lt;p&gt;Most people who use Eventbot will never know about what open source projects are used to deliver their service, and that’s fine. But we can do our part to ensure these project maintainers get some financial assistance and recognition for their efforts. In the long run, we hope the software industry find a more long term approach to open source funding, because donations can only go so far. But until then - we stand on the shoulders of giants who’ve come before us so we gladly contribute to a more sustainable open source future.&lt;/p&gt;
&lt;p&gt;Do you have a favorite open source project that needs additional support? &lt;a href=&quot;https://support.geteventbot.com/hc/en-us/requests/new&quot;&gt;Let us know!&lt;/a&gt; We’d love to hear from you! 💌&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1266306/50743413-6b238000-11cc-11e9-9329-8a3e183cd242.jpg&quot; width=&quot;400&quot; alt=&quot;forest redwoods&quot;/&gt;🚀 Aren’t using Eventbot yet? &lt;a href=&quot;https://slack.com/apps/A740FQ2E7-eventbot&quot;&gt;Install from Slack’s App Directory&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;🐦 Follow us on &lt;a href=&quot;https://twitter.com/geteventbot&quot;&gt;Twitter&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.facebook.com/geteventbot&quot;&gt;Facebook&lt;/a&gt; for product + fun updates! 🎉&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;Photo by Blum and Andrew Jenkins on Unsplash&lt;/sub&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 18:47:42 +0000</pubDate>
<dc:creator>newtang</dc:creator>
<og:title>Supporting open source with 3% of our revenue</og:title>
<og:description>Your team Slack calendar bot</og:description>
<og:url>blog.geteventbot.com/2019/01/06/how-we-support-open-source-software.html</og:url>
<og:type>article</og:type>
<og:image>https://user-images.githubusercontent.com/1266306/50743445-e08f5080-11cc-11e9-893b-09160b0cef31.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.geteventbot.com/2019/01/06/how-we-support-open-source-software.html</dc:identifier>
</item>
<item>
<title>Digitized Books from 1923 Now Available at the Internet Archive</title>
<link>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</link>
<guid isPermaLink="true" >http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</guid>
<description>&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059784&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png&quot; alt=&quot;&quot; width=&quot;666&quot; height=&quot;550&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png 666w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-240x198.png 240w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-360x297.png 360w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-300x248.png 300w&quot; sizes=&quot;(max-width: 666px) 100vw, 666px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Whether your interest is in winning arguments online or considerably deepening your knowledge of world cultural and intellectual history, you will be very well-served by at least one government agency from now into the foreseeable future. Thanks to the expiration of the so-called &quot;Micky Mouse Protection Act,&quot; the U.S. Copyright Office will release a year’s worth of art, literature, scholarship, photography, film, etc. into the public domain, starting with 1923 this year then moving through the 20th century each subsequent year.&lt;/p&gt;
&lt;p&gt;And thanks to the venerable online institution the Internet Archive, we already have almost &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;11,000 texts from 1923 in multiple digital formats&lt;/a&gt;, just a click or two away.&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;A cursory survey produced Wm. A. Haussmann’s translation of &lt;a href=&quot;https://archive.org/details/thebirthoftraged00nietuoft/page/n7&quot;&gt;Nietzsche’s &lt;em&gt;The Birth of Tragedy&lt;/em&gt;&lt;/a&gt;, Arthur Stanley Eddington’s &lt;a href=&quot;https://archive.org/details/mathematicaltheo00eddiuoft/page/n7&quot;&gt;&lt;em&gt;The Mathematical Theory of Relativity&lt;/em&gt;&lt;/a&gt;, Waldo Lincoln’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/historyoflincoln00illinc/page/n7&quot;&gt;History of the Lincoln Family&lt;/a&gt;&lt;/em&gt;, covering the President’s ancestors and descendants from 1637 to 1920...&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059785&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy.png&quot; alt=&quot;&quot; width=&quot;682&quot; height=&quot;547&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy.png 682w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-240x192.png 240w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-360x289.png 360w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-300x241.png 300w&quot; sizes=&quot;(max-width: 682px) 100vw, 682px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;...Lynn Thorndike’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/historyofmagicex00thor/page/n5&quot;&gt;A History of Magic and Experimental Science, Volume I&lt;/a&gt;&lt;/em&gt;, Chandra Chakraberty’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/interpretationof00chakuoft/page/n5&quot;&gt;An Interpretation of Ancient Hindu Medicine&lt;/a&gt;&lt;/em&gt;, Edward McCurdy’s &lt;a href=&quot;https://archive.org/details/leonardodavincis007918mbp/page/n9&quot;&gt;translations of Leonardo da Vinci’s Notebooks&lt;/a&gt;, Nandal Sinha’s translation of &lt;em&gt;&lt;a href=&quot;https://archive.org/details/thevaiasesikasut00kanauoft/page/n7&quot;&gt;The Vaisesika Sutras of Kanada&lt;/a&gt;&lt;/em&gt;, Winston Churchill’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/worldcrisis00chur/page/n9&quot;&gt;The World Crisis&lt;/a&gt;&lt;/em&gt;, Henry Adams Bellows’ &lt;a href=&quot;https://archive.org/details/poeticedda00belluoft/page/n7&quot;&gt;translation of &lt;em&gt;The Poetic Edda&lt;/em&gt;&lt;/a&gt;, a collection of &lt;a href=&quot;https://archive.org/details/mussoliniasrevea00mussuoft&quot;&gt;Mussolini’s political speeches from 1914-1923&lt;/a&gt;, and &lt;a href=&quot;https://archive.org/details/thomsirishwhoswh00dubl/page/118&quot;&gt;&lt;em&gt;Thom’s Irish Who’s Who&lt;/em&gt;&lt;/a&gt;, which catalogues “prominent men and women in Irish life at home and abroad,” but tellingly leaves out James Joyce, who had just published &lt;em&gt;Ulysses&lt;/em&gt;, to some infamy, the previous year. (It does include William Butler Yeats.)&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059786&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks.png&quot; alt=&quot;&quot; width=&quot;783&quot; height=&quot;628&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks.png 783w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-240x192.png 240w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-360x289.png 360w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-768x616.png 768w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-300x241.png 300w&quot; sizes=&quot;(max-width: 783px) 100vw, 783px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1923 turns out to have been a particularly rich literary year itself, with many of the 20th century’s finest writers publishing major and lesser-known works (see &lt;a href=&quot;https://en.wikipedia.org/wiki/1923_in_literature#New_books&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.goodreads.com/book/popular_by_date/1923&quot;&gt;here&lt;/a&gt;, for example). Browsing and focused searching &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;through the archive&lt;/a&gt;—by topic, collection, creator, and language—will net many a literary classic or overlooked gem by some famous author. But you’ll also find much in this enormous collection of digitized books that you would never think to look for, like browsing the shelves of a Borgesian university library with an entire wing devoted to the year 1923.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059787&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142.jpg&quot; alt=&quot;&quot; width=&quot;544&quot; height=&quot;889&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142.jpg 544w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-147x240.jpg 147w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-220x360.jpg 220w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-300x490.jpg 300w&quot; sizes=&quot;(max-width: 544px) 100vw, 544px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The Internet Archive &lt;a href=&quot;https://archive.org/index.php&quot;&gt;homepage&lt;/a&gt; looks as modest as it does dedicated, listing all of its top collections rather than foregrounding &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;the huge tranche of newly-available material (and counting) on the 1923 shelves&lt;/a&gt;. But founder Brewster Kahle does not mince words in describing its incredible importance. “We have shortchanged a generation,” &lt;a href=&quot;https://www.smithsonianmag.com/arts-culture/first-time-20-years-copyrighted-works-enter-public-domain-180971016/&quot;&gt;he says&lt;/a&gt;, “The 20th century is largely missing from the internet” (in legally available form, that is). Now and in the coming years, thousands of its stories can be told by teachers, scholars, artists, and filmmakers with ever-broadening access to documentary history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related Content:   &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2018/04/an-avalanche-of-novels-films-and-other-works-of-art-will-soon-enter-the-public-domain.html&quot;&gt;An Avalanche of Novels, Films and Other Works of Art Will Soon Enter the Public Domain: Virginia Woolf, Charlie Chaplin, William Carlos Williams, Buster Keaton &amp;amp; More&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2018/11/library-congress-makes-thousands-fabulous-photos-posters-images-free-use-reuse.html&quot;&gt;The Library of Congress Makes Thousands of Fabulous Photos, Posters &amp;amp; Images Free to Use &amp;amp; Reuse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2015/01/the-public-domain-project-makes-10000-film-clips-free-online.html&quot;&gt;The Public Domain Project Makes 10,000 Film Clips, 64,000 Images &amp;amp; 100s of Audio Files Free to Use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://about.me/jonesjoshua&quot;&gt;&lt;em&gt;Josh Jones&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is a writer and musician based in Durham, NC. Follow him at &lt;a href=&quot;https://twitter.com/jdmagness&quot;&gt;@jdmagness&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;br/&gt;</description>
<pubDate>Mon, 07 Jan 2019 18:27:37 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:type>article</og:type>
<og:url>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</og:url>
<og:title>11,000 Digitized Books From 1923 Are Now Available Online at the Internet Archive</og:title>
<og:image>http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png</og:image>
<og:description> Whether your interest is in winning arguments online or considerably deepening your knowledge of world cultural and intellectual history, you will be very well-served by at least one government agency from now into the foreseeable future.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</dc:identifier>
</item>
<item>
<title>How to Choose a Startup to Work for by Thinking Like an Investor</title>
<link>https://triplebyte.com/blog/how-to-choose-a-startup-to-work-for</link>
<guid isPermaLink="true" >https://triplebyte.com/blog/how-to-choose-a-startup-to-work-for</guid>
<description>&lt;p&gt;&lt;strong&gt;I believe that most advice on choosing a startup to work for is wrong. Early employees at wildly successful startups suggest you &lt;a href=&quot;https://twitter.com/rabois/status/679722946919677952&quot;&gt;assume the value of your equity is zero&lt;/a&gt; and instead optimize for &lt;a href=&quot;https://triplebyte.com/blog/interview-with-gmail-creator-and-y-combinator-partner-paul-buchheit&quot;&gt;how much you can learn&lt;/a&gt;. In this post I'll argue that evaluating how likely a startup is to succeed should actually be the most important factor in your decision to join one. As a former partner at Y Combinator, I know a lot about how investors do this. Now, as a founder and CEO of Triplebyte, I see how much less rigor the average job seeker applies to their decision and what they miss that investors would notice.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First you should be sure you really want to work at a startup. This is not the right choice for everyone. Paul Buchheit, an early engineer at Google, says,&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“If you're happy working where you are, and you don't have any ambition to do anything else, you're probably going to get paid less and work more if you leave [for a startup]. If getting paid less and working more is unappealing to you, then I would recommend staying where you are!”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Joining a startup means giving up greater liquid compensation today for the chance of gaining other things that accumulate value over time. Things like personal networks, learning opportunities and equity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can learn new things and meet people working at any startup. However you will learn significantly more, build a stronger network, and accelerate your career trajectory much faster by joining a successful startup than an average one.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Successful startups attract the best resources in every category as they grow. They'll get the best investors, press coverage, and hire the best talent. The latter is especially important for your career. Initially, founders can only recruit talent from the limited pool of people who have the risk tolerance to join something early. As the startup succeeds, this pool grows and it becomes a magnet for the best talent. By joining early, you get to work alongside the smartest people and solve problems together without several layers of management between you.&lt;/p&gt;
&lt;p&gt;It's also only by joining a successful startup early that you can get remarkably steep career trajectories, like Jeff Dean, Marissa Mayer or Chris Cox. Successful startups grow faster than they can hire experienced and qualified people to keep up with growth. This creates vacuums of responsibility, vacuums that existing employees who might be “under qualified” on paper can step in and fill. If you fill the vacuum well, you can keep repeating until you rise up into the highest levels of leadership of what will eventually become a public company. Even if you leave before reaching those levels, there's a halo effect around you now. Companies will roll out the red carpet to hire you, and investors will be keen to fund your startup ideas.&lt;/p&gt;
&lt;h2&gt;How To Choose a Startup&lt;/h2&gt;
&lt;p&gt;Once you've decided to join a startup, the first obvious thing to look for is any evidence that it is already succeeding. This is what investors do. Unfortunately, at the early stages there's usually not much data like this. When there is, one thing we learned at YC was not to be fooled by large absolute numbers. What matters most is the growth rate. A startup with $1 million in monthly revenue which has been flat for the past year is less exciting than one with $100,000 in monthly revenue that was at $0 six months ago. You care about the trajectory a startup is on, not just where it is at this moment in time. Joining Facebook in 2006 would have been a better choice than Myspace even though the latter had more users at the time.&lt;/p&gt;
&lt;p&gt;Next, you need to evaluate the strength of the team and market. At the earliest stage, the team is just the founders. It's difficult to evaluate startup founders using traditional signals like college or work history. In fact, the kind of experience that looks good on a resume can be a negative signal for being suited to founding a company. Rising up the ranks at Google might mean you can only thrive in a well-structured environment working on a product with millions of users. Neither of those conditions apply to startups. However, it may also signal an outlying level of competence and competitiveness. Those are both good traits for a startup founder. That's what makes this so hard. There's not a single clearly defined shape of person you're trying to identify.&lt;/p&gt;
&lt;p&gt;My advice would be to focus on how impressive the accomplishments of the founders are relative to their peer group and environment. Starting a company and convincing investors to invest is an accomplishment that contains signal. It contains more signal if achieved by a 19 year old college dropout from Milwaukee than a Stanford computer science graduate.&lt;/p&gt;
&lt;p&gt;You also need to evaluate how well a founder understands the problem they're working on. Being an expert in the domain yourself makes this easy. You know exactly which questions to ask someone to call bullshit. If you're not, then take the approach of asking the founders to teach you about the problem they're working on. Be intellectually curious and see how well they can explain product choices they've made, how the market works, and who their competitors are. I particularly like asking what has surprised them since starting the company and which early assumptions turned out to be wrong. I would be suspicious if they claim every assumption turned out to be completely right.&lt;/p&gt;
&lt;p&gt;Evaluating the relationship between founders is as important as evaluating the founders themselves. The top cause of startup death during a Y Combinator batch was cofounder disputes. We evaluated this very closely during interviews. We were looking for red flags such as talking over each other and disagreeing on important issues. It was a particularly bad sign if it wasn't clear who the CEO was. Likewise it was a bad sign if, when asked, one person meekly answered they were the CEO while the other glared at them. I'd recommend you request to meet the cofounders together to answer your questions so you can feel out this dynamic.&lt;/p&gt;
&lt;p&gt;You can also get valuable data about the startup from the team that has been hired. They may know about any red flags or major issues the company is facing which the founders haven't told you about. This data is especially valuable because it is the hardest to get. Once you receive an offer, ask anyone you met during the interview to meet you for coffee. Then ask them hard questions such as, what are the biggest weaknesses of the founders? How have conflicts been handled? What major problems has the company faced thus far?&lt;/p&gt;
&lt;p&gt;If you are an engineer, I'd also ask specific questions around how product ideas are generated and work is assigned. Do not look for a perfectly smooth and egalitarian process here. I believe early stage startups work better as benevolent dictatorships. You want at least one of the founders to have strong product opinions and be the final product decision maker. Early on, speed of action matters most to a startup, and decisiveness is a good trait in startup founders because it creates motion. Don't miss out on joining a great early stage startup because the founder seemed too opinionated and involved in product decisions early on.&lt;/p&gt;
&lt;p&gt;You should also judge the quality of the product but don't always look for a perfect product. An imperfect product with bugs is fine if the team can explain why it still delivers a better experience than competitors. Moving quickly to launch software and sacrificing some amount of quality to gain users in a new or emerging market is a good strategy for a startup. This same tradeoff does not apply if the startup is in a crowded space with large incumbents who already have pretty decent products. &lt;a href=&quot;http://airtable.com/&quot;&gt;Airtable&lt;/a&gt; is a good recent example of a product that has seen success launching in a crowded market by taking time to build and iterate on the product.&lt;/p&gt;
&lt;p&gt;Next you need to evaluate how promising the market is. I won't cover how to do deep analysis of market size here. Estimating the true market size is an exercise composed of some parts rigorous analysis, guesswork, and persuasion. What is important is identifying the type of market the startup is in. There are two types of market for a startup. The first is a new market that is growing quickly e.g. blockchain. The second is an already known and large market with existing large incumbents e.g. real estate.&lt;/p&gt;
&lt;p&gt;The type of market a startup is in should also impact how you evaluate the strength of the team and product. Being the first mover in a new and growing market has huge advantages which can cover up a lot of deficiencies in both the team and the product. If it is early enough, investors won't have funded many competitors yet. If you believe strongly in the growth potential of a market and find a startup that is currently in the lead you can afford to be more forgiving on the quality of the team and product. If the startup grows, both will be upgraded anyhow.&lt;/p&gt;
&lt;p&gt;Operating in a market which is already known to be large and valuable will be less forgiving. There will be many well-funded competitors, and you'll need an exceptional team with access to capital and a correct vision for differentiation. &lt;a href=&quot;http://opendoor.com/&quot;&gt;Opendoor&lt;/a&gt;, for example, was not an average founding team. Co-founder Keith Rabois was an early team member at several startups that went public, such as LinkedIn, Paypal and Square. CEO Eric Wu had deep domain expertise after founding and selling a real estate startup.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Simply joining any startup won’t provide you with great learning opportunities or a strong personal network by default. A startup on a flat growth trajectory with a weak team offers neither. A consequence of this is being willing to move startups if the one you are currently at stops growing. I think startup employees should re-evaluate the growth trajectory of their startup every year. I’m conflicted in offering this advice. As the founder of a hiring marketplace, more people looking for jobs each year increases our market size. As the founder and CEO of a startup, I want my employees to stay with us for a long time and have faith during the inevitable rough patches.&lt;/p&gt;
&lt;p&gt;There's a balance here. Every startup faces challenges, and if you're quick to jump ship you might give up a lot of upside. As a personal anecdote, my first startup was given an acquisition offer by Facebook in 2007. We declined in favor of taking another deal because Facebook seemed like a chaotic organization at the time with a lot of executive turnover and the conventional wisdom said it was overvalued. In hindsight, it may not have been a bad decision to join and stick through a temporarily turbulent time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Predicting startup success is hard, and even professional investors fail at it most of the time. My advice here is intended to make you think more like them, in the hope that you'll build a portfolio of experiences over time that will maximize both your learning and your earnings. Good luck!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Elad Gil, Ammon Bartram and Charlie Treichler for reading early drafts of this essay.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 17:58:18 +0000</pubDate>
<dc:creator>Harj</dc:creator>
<og:type>article</og:type>
<og:title>How to Choose a Startup to Work For by Thinking Like An Investor</og:title>
<og:description>I believe that most advice on choosing a startup to work for is wrong. Early employees at wildly successful startups suggest you assume the value of your equity is zero (https://twitter.com/rabois/status/679722946919677952) and instead optimize for how much you can learn (https://triplebyte.com/blog/interview-with-gmail-creator-and-y-combinator-partner-paul-buchheit). In this post I'll argue that evaluating how likely a startup is to succeed should actually be the most important factor in your decision to join one. As a former partner at Y Combinator, I know a lot about how investors do this. Now, as a founder and CEO of Triplebyte, I see how much less rigor the average job seeker applies to their decision and what they miss that investors would notice.</og:description>
<og:url>https://triplebyte.com/blog/how-to-choose-a-startup-to-work-for</og:url>
<og:image>https://d25hn4jiqx5f7l.cloudfront.net/blog-posts/og_images/og/32_1546824850.jpg?1546824850</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://triplebyte.com/blog/how-to-choose-a-startup-to-work-for</dc:identifier>
</item>
<item>
<title>Announcing unlimited free private repos</title>
<link>https://blog.github.com/2019-01-07-new-year-new-github/</link>
<guid isPermaLink="true" >https://blog.github.com/2019-01-07-new-year-new-github/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/29592817/50617647-e676f000-0eb3-11e9-992d-0eb11d29f8e0.png&quot; alt=&quot;GitHub announces unlimited private repos&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Today we’re announcing two major updates to make GitHub more accessible to developers: unlimited free private repositories, and a simpler, unified Enterprise offering. We’re excited about these updates to our Free and Enterprise offerings:&lt;/p&gt;
&lt;ul readability=&quot;5.9122257053292&quot;&gt;&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;GitHub Free&lt;/strong&gt; now includes unlimited private repositories. For the first time, developers can use GitHub for their private projects with up to three collaborators per repository for free. Many developers want to use private repos to apply for a job, work on a side project, or try something out in private before releasing it publicly. Starting today, those scenarios, and many more, are possible on GitHub at no cost. Public repositories are still free (of course—no changes there) and include unlimited collaborators.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.8718535469108&quot;&gt;
&lt;p&gt;&lt;strong&gt;GitHub Enterprise&lt;/strong&gt; is the new unified product for Enterprise Cloud (formerly GitHub Business Cloud) and Enterprise Server (formerly GitHub Enterprise). Organizations that want the flexibility to use GitHub in a cloud or self-hosted configuration can now access both at one per-seat price. And with &lt;a href=&quot;https://blog.github.com/2018-10-16-future-of-software/#business&quot;&gt;GitHub Connect&lt;/a&gt;, these products can be securely linked, providing a hybrid option so developers can work seamlessly across both environments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/pricing&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Pro (formerly GitHub Developer) and GitHub Team are also available for developers and teams who need professional coding and collaboration features. And of course, open source contributors will still have everything they need to collaborate on public repositories, including our free version of GitHub Team.&lt;/p&gt;
&lt;p&gt;Whether you’re a student about to write your first line of code, an enterprise leader with teams around the world, or an open source maintainer, we want GitHub to be the best place for you to code, collaborate, and connect with the global community of developers. Today’s changes are a big investment in the future of GitHub, and we’re excited to see what you build in 2019.&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 17:03:59 +0000</pubDate>
<dc:creator>razer6</dc:creator>
<og:title>New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering</og:title>
<og:description>Today we’re announcing two major updates to make GitHub more accessible to developers.</og:description>
<og:url>https://blog.github.com/2019-01-07-new-year-new-github/</og:url>
<og:image>https://user-images.githubusercontent.com/29592817/50617660-f393df00-0eb3-11e9-85ac-3e2d344acb10.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.github.com/2019-01-07-new-year-new-github/</dc:identifier>
</item>
<item>
<title>Tennessee doctors earn big money denying disability claims</title>
<link>https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</link>
<guid isPermaLink="true" >https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</guid>
<description>&lt;div class=&quot;longform-body clearfix&quot;&gt;


&lt;section id=&quot;module-position-ReBMTRdJaYM&quot; class=&quot;longformstorymid-bucket longform-inline-share-module longform-longform-inline-share-module&quot;&gt;&lt;div class=&quot;lf-social-bookmarks clearfix&quot;&gt;
&lt;div class=&quot;lf-social-bookmark-header&quot;&gt;Share This Story&lt;/div&gt;


&lt;/div&gt;
&lt;/section&gt;&lt;p class=&quot;speakable-p-1 p-text&quot;&gt;By the time Alan Chrisman was diagnosed with stage 4 colorectal cancer, he was too sick to work. The cancer had spread to his lungs. His doctors said he may never get better.&lt;/p&gt;
&lt;p class=&quot;speakable-p-2 p-text&quot;&gt;Chrisman, 59, applied for disability, the federal safety net program he contributed to with every paycheck during his 30 years working as a stonemason.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;But a doctor hired by Tennessee’s Disability Determination Services to review applications quickly concluded Chrisman wasn’t sick enough to get the $804 monthly benefit.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;That physician, Dr. Thomas Thrush, is one of about 50 doctors contracted to review applications for Tennesseans seeking disability.&lt;/p&gt;
&lt;div id=&quot;module-position-ReBMTSczSVk&quot; class=&quot;story-asset video-asset&quot;&gt;
&lt;div class=&quot;ui-video-wrapper&quot; itemprop=&quot;video&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/VideoObject&quot;&gt;

&lt;div class=&quot;js-ui-video-init ui-pluto-video js-video-aps js-uw-iframe-video uw-iframe-video video story-video inline-story-video widestoryvideohtml5&quot; data-video-id=&quot;2486637002&quot; data-snow-enabled=&quot;true&quot;&gt;
&lt;div class=&quot;js-ptb pluto-title-bar&quot;&gt;

&lt;div class=&quot;js-ptb-close pluto-title-bar-vcenter pluto-title-bar-close&quot;&gt;
&lt;div&gt;CLOSE&lt;img class=&quot;pluto-title-bar-close-icon&quot; src=&quot;https://www.gannett-cdn.com/uxstatic/tennessean/uscp-web-static-3620.0/images/sprites/icon_close.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ui-video-controls video story-video inline-story-video&quot;&gt;
&lt;p class=&quot;video-desc&quot; itemprop=&quot;description&quot;&gt;How some doctors earn big money denying disability claims &lt;span class=&quot;credit&quot;&gt;Michael Schwab, Nashville Tennessean&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;p-text&quot;&gt;The doctors are paid a flat rate for each application file they review. How much they earn depends on how fast they work.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Thrush, like many of the doctors who contract with the state, works very fast.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In fiscal year 2018, he reviewed — on average — one case every 12 minutes.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Thrush’s productivity has paid off. He earned $420,000 for reviewing the applications of 9,088 Tennesseans applying for disability during the year ending June 30. He has made more than $2.2 million since 2013.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;On average, 80 percent of the cases he reviewed were denied. &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;6 takeaways from this investigation:&lt;/strong&gt; &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.tennessean.com/story/news/investigations/2019/01/06/tennessee-disability-claims-denials-appeals-investigation/2473381002/&quot;&gt;Doctors speed through disability claims, make millions&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Tennessee has among the highest denial rates for disability applicants in the nation, rejecting 72 percent of all claims in 2017. The national average for denials was 66 percent.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Outside experts and former and current state employees say it’s impossible to review cases so quickly without making mistakes that lead to wrongful rejections of disability benefits.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In Chrisman’s case, Thrush failed to obtain one critical piece of evidence: a discharge paper from a hospital that stated Chrisman’s cancer was inoperable and had metastasized. The prognosis clearly qualified him for disability, even under the complex rules set by the Social Security Administration. The mistake was discovered only after Chrisman hired a lawyer.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;A USA TODAY NETWORK - Tennessee investigation examined 5½ years of data for physicians and psychologists who review disability applications. The investigation found that between January 2013 and July 2018:&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;• &lt;strong&gt;Some doctors raced through cases&lt;/strong&gt;. More than half of all contract physicians outpaced the federal standard of 1.5 cases per hour, and 1 out of every 5 doctors doubled that pace.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;• &lt;strong&gt;A whistleblower was fired&lt;/strong&gt;. The contract of a former medical consultant was terminated in 2017 after he raised concerns about some physicians reviewing a high volume of cases.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;• &lt;strong&gt;Speed pays&lt;/strong&gt;. Seven high-volume doctors billed for more than $1 million each between fiscal 2013 and 2018. These physicians’ annual payments range from $103,000 to $451,000. By contrast, the acting chief of the Social Security Administration, a Cabinet-level position, earned $240,000. For some physicians, this was not their sole source of income.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;• &lt;strong&gt;Staff doctors take more time&lt;/strong&gt;. The state employed a small number of staff doctors whose compensation is not tied to the number of cases they review. These doctors reviewed cases at a rate that is in line with federal recommendations. They typically earned less than $150,000 annually, according to the state’s salary database. Beginning this year, however, the state is terminating all doctors on salary and relying only on contract physicians.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;• &lt;strong&gt;Some doctors have a history of misconduct&lt;/strong&gt;. At least two doctors under contract with the state are felons, including Thrush. Two other physicians had their medical licenses placed on probation. Another physician had his license revoked twice in the past 20 years and now works on a restricted license that bars him from treating patients.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Five current and former contractors and state employees said they believe disability applicants are being wrongfully denied in an effort to process as many applications as possible. Most spoke to The Tennessean on the condition of anonymity, for fear of reprisal.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“It’s like a cash register,” said one contract physician. “From our perspective it’s unethical. From a consumer’s point of view it can be a tragedy.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;One doctor who raised the issue through official channels lost his contract. Dr. John Mather, the whistleblower, was the former chief medical officer for disability programs at the federal Social Security Administration, and worked as a contract doctor for the state after he retired.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“Who knows how many applicants for disability benefits have had their applications denied without justification,” he said.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;DISABILITY DATABASE:&lt;/strong&gt;  &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://data.tennessean.com/tennessee-office-of-disability-determination-services-medical-consultants-2013-2018/&quot;&gt;Click here to see doctors, how many patients they've processed and how much they earn&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;A whistleblower&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;Mather said he warned James Stanfield, director for the state disability department, and Raquel Hatter, then commissioner of the Department of Human Services, in 2016 about the dangers of some doctors performing large numbers of reviews. The Human Services Department’s general counsel responded in a letter saying there was nothing illegal or fraudulent.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Mather emailed the Social Security Administration, which referred the matter to the Office of Inspector General. That office determined no investigation was warranted. Mather met with auditors at the Comptroller of the Treasury, then received no further response.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In 2017, Stanfield declined to renew Mather’s contract.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“I don’t think they care about the claimant,” Mather said of administrators. “They just want to see the cases out. I don’t think they care too much about quality. People who are high producers — they are very happy to have them around.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Current and former personnel said they were speaking up now because they want an outside investigator to review all cases to ensure individuals have not been wrongly denied.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“These findings are troubling,” Tennessee U.S. Rep. Jim Cooper said in a statement. “Physicians, especially those dealing with state and federal funds, should be careful and thorough in their work. Social Security Disability Insurance is a vital program, and we have to keep it strong.”&lt;/p&gt;
&lt;div id=&quot;module-position-ReBMTScDp94&quot; class=&quot;story-asset image-asset&quot;&gt;
&lt;aside itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; class=&quot;wide single-photo&quot;&gt;&lt;img itemprop=&quot;url&quot; src=&quot;https://www.gannett-cdn.com/presto/2018/11/05/PNAS/ed35094e-b28d-4723-9cdc-367cf8970881-NAS-DisabilityDenials_0002.JPG?width=2352&amp;amp;height=1764&amp;amp;fit=bounds&amp;amp;auto=webp&quot; alt=&quot;Alan Chrisman walks with his wife, Joyce, near the Sevierville, Tenn., McDonald's where he worked as a maintenance employee before being diagnosed with stage 4 colorectal cancer. Chrisman applied for disability but was initially denied based on a recommendation by a medical contractor hired by the state to review claims.&quot; width=&quot;400&quot; data-wide-src=&quot;&quot; class=&quot;image-selector&quot;/&gt;&lt;p class=&quot;longform-inline-photo-caption&quot;&gt;Alan Chrisman walks with his wife, Joyce, near the Sevierville, Tenn., McDonald's where he worked as a maintenance employee before being diagnosed with stage 4 colorectal cancer. Chrisman applied for disability but was initially denied based on a recommendation by a medical contractor hired by the state to review claims.&lt;br/&gt;&lt;span class=&quot;credit&quot;&gt;(Photo: Caitie McMekin/News Sentinel)&lt;/span&gt;&lt;/p&gt;

&lt;/aside&gt;
&lt;/div&gt;
&lt;p class=&quot;p-text&quot;&gt;A spokesman for the Department of Human Services, which oversees the disability program in Tennessee, disputed any connection between how fast doctors review case files and their mistakes.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“We have no reason to believe that doctors that average faster reviews are more prone to have errors in their reviews,” Sky Arnold said in a statement.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The Social Security Administration provided its own statistics that showed Tennessee doctors were spending on average 47 “medical minutes per case.” Patti Patterson, a spokeswoman, noted that was more than the national average of 38 minutes.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;But the federal data adds the time multiple physicians spend reviewing the same case, a common occurrence when someone is claiming both a mental and physical disability requiring two different specialists. The state data analyzed by The Tennessean details each doctor’s speed.&lt;/p&gt;
&lt;div id=&quot;module-position-ReBMTSd5nDE&quot; class=&quot;story-asset oembed-asset&quot;&gt;
&lt;div class=&quot;story-oembed-wrap&quot;&gt;
&lt;div class=&quot;js-oembed story-oembed story-oembed- story-oembed-type-&quot; data-oembed-type=&quot;&quot; data-oembed-provider=&quot;&quot;&gt;
&lt;div class=&quot;oembed-frame&quot;&gt;&lt;img src=&quot;https://www.gannett-cdn.com/presto/2019/01/04/PNAS/1d98a196-6c06-440d-b50b-ac518c1c361b-disabilty_graphic_002.jpg&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;A letter brings crushing news&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;For weeks, Chrisman did not feel well. Some days he would lose control of his bowels.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;After stonemason work became scarce, he got a job as a maintenance man at a McDonald’s in Sevierville, Tennessee, two years ago. One day in November 2017, he showed up to work at the restaurant and promptly soiled himself.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;At the insistence of his wife, Joyce, he headed straight to a walk-in clinic. It was his first medical visit in a long time. The Chrismans cannot afford insurance.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;He was referred to a doctor, then another. The diagnosis was swift.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Chrisman had late-stage cancer of the intestine. The cancer had spread. There were two spots on his lung.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;A golf ball-sized tumor and about a foot of his intestine were removed in surgery.&lt;/p&gt;
&lt;div id=&quot;module-position-ReBMTScfwQs&quot; class=&quot;story-asset image-asset&quot;&gt;
&lt;aside itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; class=&quot;wide single-photo&quot;&gt;&lt;img itemprop=&quot;url&quot; src=&quot;https://www.gannett-cdn.com/presto/2018/08/31/PNAS/56dad4bb-a2ac-4d6c-8a58-6202abd73b1d-NAS-DisabilityDenials_0001.JPG?width=2352&amp;amp;height=1764&amp;amp;fit=bounds&amp;amp;auto=webp&quot; alt=&quot;Alan Chrisman worked as a maintenance employee at this Sevierville, Tenn., McDonald's before being diagnosed with stage IV colorectal cancer in November 2017. He's now on his 11th dose of chemotherapy. After his 12th next month, he will return for a scan.&quot; width=&quot;400&quot; data-wide-src=&quot;&quot; class=&quot;image-selector&quot;/&gt;&lt;p class=&quot;longform-inline-photo-caption&quot;&gt;Alan Chrisman worked as a maintenance employee at this Sevierville, Tenn., McDonald's before being diagnosed with stage IV colorectal cancer in November 2017. He's now on his 11th dose of chemotherapy. After his 12th next month, he will return for a scan.&lt;br/&gt;&lt;span class=&quot;credit&quot;&gt;(Photo: Caitie McMekin/News Sentinel)&lt;/span&gt;&lt;/p&gt;

&lt;/aside&gt;
&lt;/div&gt;
&lt;p class=&quot;p-text&quot;&gt;Weakened by chemotherapy and radiation, emaciated after shedding 40 pounds, and in extreme discomfort with tubes protruding from his backside, Chrisman occasionally can’t sit or stand. On a good day he can walk outside to pick up a single log for the fireplace in the couple’s unheated two-bedroom cabin.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The Chrismans earned about $32,000 a year between his earnings and his wife’s $10 hourly wage cleaning laundry at a Smoky Mountain resort. The mounting medical bills and Chrisman’s lost wages devastated his wife, who tried to arrange payment plans with medical providers.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Chrisman applied for disability in November 2017.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The rejection letter came six months later.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“Although your therapy is currently causing you discomfort, it is expected these effects will be temporary,” said the denial letter, based on the recommendation from Thrush.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Joyce Chrisman cried when she read the letter.&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;Mistakes unlikely to be caught&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;The disability process has two layers of oversight designed to catch errors, but doctors know there is little likelihood anyone would catch a mistake in denying someone's application.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;First, a quality assurance department in Nashville spot-checks approvals and denials to make sure staff and doctors have followed procedures. Then, federal regional offices review a portion of disability applications.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Tennessee has consistently ranked high in the quality of its case reviews, averaging a 95.8 percent quality rating since 2016, said Arnold, the state spokesman. In 2017 DDS earned a Social Security Administration &quot;Phoenix Award&quot; for its performance.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;But the state and federal offices review a tiny percentage of denied disability claims for accuracy.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;By law, half of all approvals by state DDS personnel are reviewed by Social Security Administration staff — a provision meant to safeguard public funds.&lt;/p&gt;
&lt;div id=&quot;module-position-ReBMTScjkVQ&quot; class=&quot;story-asset image-asset&quot;&gt;
&lt;aside itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot; class=&quot;wide single-photo&quot;&gt;&lt;img itemprop=&quot;url&quot; src=&quot;https://www.gannett-cdn.com/presto/2018/08/31/PNAS/a32064b4-ea17-4526-950a-aaff0a573555-NAS-DisabilityDenials_0004.JPG?width=2352&amp;amp;height=1764&amp;amp;fit=bounds&amp;amp;auto=webp&quot; alt=&quot;Alan Chrisman was diagnosed with stage 4 colorectal cancer over a year ago. He applied for disability but was denied based on a recommendation by a medical contractor hired by the state to review claims. He then found a lawyer to file a request for reconsideration. Another physician&amp;#xA0;examined his file and recommended he be granted disability.&quot; width=&quot;400&quot; data-wide-src=&quot;&quot; class=&quot;image-selector&quot;/&gt;&lt;p class=&quot;longform-inline-photo-caption&quot;&gt;Alan Chrisman was diagnosed with stage 4 colorectal cancer over a year ago. He applied for disability but was denied based on a recommendation by a medical contractor hired by the state to review claims. He then found a lawyer to file a request for reconsideration. Another physician examined his file and recommended he be granted disability.&lt;br/&gt;&lt;span class=&quot;credit&quot;&gt;(Photo: Caitie McMekin/News Sentinel)&lt;/span&gt;&lt;/p&gt;

&lt;/aside&gt;
&lt;/div&gt;
&lt;p class=&quot;p-text&quot;&gt;The law, however, doesn’t set specific requirements for denials. As a result, the Social Security Administration reviewed fewer than 2 percent of all rejections, according to an analysis by the National Association of Social Security Claims Representatives.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“If the adjudicator is making poor decisions, if they tend towards denials, they’re just not going to be reviewed,” said Jen Burdick, an attorney with Community Legal Services of Philadelphia. She is is among advocates nationwide asking for Social Security to review more denials.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Wrongful denials may be appealed, but &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.tennessean.com/story/news/2019/01/06/denied-disability-how-appeal-tennessee/2339794002/&quot;&gt;long delays for a hearing can take a devastating  toll&lt;/a&gt; in lost wages, lack of access to health care and medical bills. In fiscal year 2017, at least 9,570 people died waiting for their disability appeals to be heard. &lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;Speed pays — sometimes millions&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;The Social Security Administration oversees two disability programs: Supplemental Security Income, or SSI, for low-income individuals without a work history, and Social Security Disability Insurance for workers who become disabled.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The federal government delegates to the states the administration of the programs. Tennessee received $8.5 million last year from the Social Security Administration to hire medical consultants with a variety of specialties to review medical records.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;These doctors never examine claimants in person, although they occasionally order a physical exam by another doctor.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Seven days a week, setting their own schedules, the doctors swipe their badges to access secured floors of a brown and glass office building on the outskirts of downtown Nashville, logging into a computer system that generates a queue of cases to review.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Some applications contain just a few pages. Others include hundreds of pages of doctor’s notes, hospital reports, X-rays, lab results and employment records. Doctors must write a brief report to justify their findings, too.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The decision to grant or deny benefits is officially made by a state employee, but doctors who work for the state say it is their recommendation that carries the most weight.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;For this work, the doctors are paid a flat fee ranging from $30 to $47 per case. Doctors also bill $68 per hour in most instances for the time they spend consulting with staff or mentoring other physicians.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;strong&gt;Use the database below to search for physicians&lt;/strong&gt;&lt;/p&gt;

&lt;p class=&quot;p-text&quot;&gt;Like Thrush, some of these doctors work very fast.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Dr. Kanika Chaudhuri, a pediatrician, evaluated 3,872 cases last fiscal year, averaging more than four cases per hour when she worked. She earned $192,000 in fiscal 2018 and $1.1 million since 2013.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Out of all the cases Chaudhuri reviewed over the five years, 78 percent were denied, according to data provided by the state.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;State officials later noted that the denial data included cases in which multiple doctors made assessments, meaning Chaudhuri and other doctors may not have made the final assessment.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Asked whether she felt pressured to review cases too quickly, Chaudhuri said:&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&quot;No direct pressure. They recommend that we must keep up. They always recommend you do your best. There are so many applications and so few doctors. We are overwhelmed with cases.&quot;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Jenaan Khaleeli, a psychologist, has averaged 4½ cases an hour since 2013. Nearly 80 percent of those cases were denied. Over the five years, Khaleeli earned $1.2 million, including $209,000 in fiscal 2018.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Dr. Frank Pennington, an ear, nose and throat specialist who is also a felon, earned $144,000 reviewing cases in fiscal 2018, and more than $1 million since 2013. During the five-year period he reviewed 20,835 cases, at a rate of three per hour.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Pennington is one of five contract physicians with a history of misconduct. Pennington is confined to the administrative practice of medicine after three separate felony cocaine convictions and two stints in federal prison in the 1990s.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Thrush had his license placed on probation for four years in 2008 after he  pleaded guilty to prescription fraud in 2006.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Arnold, the DHS spokesman, said the physicians were all doctors in good standing while employed. &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&quot;It's important to remember these are not forward-facing doctors,&quot; Arnold said. &quot;Their role is to examine medical records and reports. They do not meet with patients in person.&quot;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Thrush, Pennington and Khaleeli did not respond to messages.&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;'A flawed system'&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;Tennessee’s pay-by-the-case model — and the sums paid to contract doctors — surprised even advocates and attorneys who routinely assist people with disabilities.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“There is an obvious financial incentive under such a payment arrangement — to process cases as quickly as possible,” said Russ Overby, an attorney with the Legal Aid Society of Middle Tennessee, who represents individuals seeking disability.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“I am concerned that some clients who are in fact eligible for disability benefits will be denied because there has not been a sufficient review of the case.” &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Carrie Hobbs Guiden, executive director of The Arc of Tennessee, advocates for individuals with developmental and intellectual disabilities who occasionally apply for Social Security disability benefits. Doctors have to invest the time to properly review cases, she said, especially when it involves people with untreated mental health issues.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“If they’re getting paid based on how many they get done, that’s a flawed system,” Guiden said. “That’s not encouraging quality. You have to question if the purpose is to deny as many people as possible.”&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;Under pressure to meet 'workload goals'&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;State disability determination departments face enormous pressures to meet &quot;workload goals&quot; set by the Social Security Administration.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In 2018, the Social Security Administration set a goal of 103,161 disability applications to be cleared by Tennessee's office.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The staff and consultants needed to clear those cases in Tennessee have shrunk by 24 percent between 2010 and 2016.  &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Failure to meet goals can result in a financial penalty from the federal government, according to Jeffrey Price, the past legislative director for the National Association of Disability Examiners.&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;Doctors elsewhere push back&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;About half of all state disability offices in the United States operate on a similar model to Tennessee’s, in which physicians reviewing applications are paid by the case, according to Price.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The contract model, in which doctors receive a fee for each assessment, introduces some risks, Price said.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“If you were paid by the case, it behooves you to sign off on as many cases as you can,” he said. “I think that model at least has the potential for increased error rates.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“A doctor can review cases effectively at about two cases per hour,” Price said. “You’re hoping that the doctor will actually look at the whole case, not just what the examiner wrote.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Doctors like Thrush, who processed more than five cases per hour, might be valued in an office trying to shovel itself out of a large caseload, Price said, but the pace is implausible.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“I think that would be dangerous, actually,” Price said. “Inherently you would be missing something if you’re looking at five cases an hour.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;At the North Carolina Disability Determination Services office, where Price has worked for nearly 40 years, managers recently asked doctors to process an average of three cases per hour instead of two. Doctors in that office are all on staff, as opposed to contractors.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“Some of our doctors are pushing back,” Price said. “They say that’s too many.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;A rule put into place by the Social Security Administration in 2017 has made the work of DDS physicians even more critical in deciding an outcome of an application.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Previously a “treating physician rule” required DDS to give more weight to the opinions of an applicant’s personal doctor than doctors hired by DDS. That rule was eliminated, giving doctors hired by DDS more influence in deciding the outcome of applications.&lt;/p&gt;
&lt;h2 class=&quot;presto-h2&quot;&gt;&lt;strong&gt;'Something needs to be done'&lt;/strong&gt;&lt;/h2&gt;
&lt;p class=&quot;p-text&quot;&gt;After Chrisman was denied, he and his wife found a lawyer in Sevierville tofile a request for reconsideration.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In September, Joyce Chrisman came home from work and brought the mail inside their cabin. The letter from Social Security said, “We found that you became disabled under our rules on November 8, 2017.” That was the day after she urged Chrisman to visit the walk-in clinic.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Another physician had examined Alan Chrisman's file and recommended he be granted disability.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“We said ‘wow,' ” Chrisman said. “We couldn’t believe it.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;George Garrison, his lawyer, said he was troubled by The Tennessean's findings.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“People come to me at a point they’re about to lose everything they’ve got,” he said. “They’re sick. They’re dying. They’re having to deal with a complex system.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;The benefit meant that Joyce Chrisman no longer had to worry about paying medical bills. The bills would be paid dating back to the time her husband applied for disability. &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;His disability approval also automatically qualified Alan Chrisman for TennCare, which is now covering his ongoing chemotherapy, medications and hospitalizations.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Chrisman sits on his couch most of the time. He’s on his 11th dose of chemotherapy. After his 12th next month, he will return for a scan. “Then we’ll go from there,” he said.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Thinking about the months he spent rejected — when he and his wife were barely scraping by — Chrisman gets angry.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;“Something needs to be done,” he said. “They’re either getting too much of a caseload or they’re getting greedy.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;em&gt;Reach Anita Wadhwani at awadhwani@tennessean.com or 615-259-8092 and on Twitter @AnitaWadhwani.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;News that matters most to you: &lt;/strong&gt; For more stories like this, &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://profile.tennessean.com/newsletters/news/&quot;&gt;sign up for our free newsletter&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;p-text p-text-last&quot; id=&quot;article-body-p-last&quot;&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;section id=&quot;module-position-ReBMTRciYhw&quot; class=&quot;longformstorybottom-bucket longform-poster-ad-module longform-longform-poster-ad-module&quot;&gt;
&lt;/section&gt;&lt;section id=&quot;module-position-ReBMTRcKQrE&quot; class=&quot;longformstorybottom-bucket longform-inline-share-module longform-longform-inline-share-module&quot;&gt;&lt;div class=&quot;lf-social-bookmarks clearfix&quot;&gt;
&lt;div class=&quot;lf-social-bookmark-header&quot;&gt;Share This Story&lt;/div&gt;


&lt;/div&gt;
&lt;/section&gt;&lt;section id=&quot;module-position-ReBMTRdfgVs&quot; class=&quot;longformstorybottom-bucket longform-series-bottom-module longform-longform-series-bottom-module&quot;&gt;
&lt;/section&gt;&lt;section id=&quot;module-position-ReBMTRcz4Fc&quot; class=&quot;longformstorybottom-bucket longform-footer-logo-module longform-longform-footer-logo-module&quot;&gt;&lt;a href=&quot;https://www.tennessean.com/&quot;&gt;&lt;img src=&quot;https://www.gannett-cdn.com/sites/tennessean/images/footer-logo@2x.png&quot; class=&quot;longform-footer-logo&quot; alt=&quot;The Tennessean&quot;/&gt;&lt;/a&gt;&lt;/section&gt;&lt;section id=&quot;module-position-ReBMTRccrrw&quot; class=&quot;longformstorybottom-bucket longform-footer-copyright-module longform-longform-footer-copyright-module&quot;&gt;&lt;p class=&quot;longform-footer-copyright&quot;&gt;© 2019 www.tennessean.com. All rights reserved&lt;/p&gt;
&lt;/section&gt;&lt;section id=&quot;module-position-ReBMTRfsOVE&quot; class=&quot;longformmessaging-bucket cam-messaging-module longform-cam-messaging-module&quot;&gt;&lt;div class=&quot;longform-messaging&quot;&gt;
&lt;div class=&quot;cm-wrapper&quot;&gt;
&lt;div class=&quot;alert-bar cm-collapsed&quot;&gt;

&lt;div class=&quot;cm-offer&quot;&gt;


&lt;div class=&quot;cm-cta&quot;&gt;Subscribe Now&lt;/div&gt;
&lt;div class=&quot;cm-market&quot;&gt;&lt;a class=&quot;cm-market-img&quot; href=&quot;https://www.tennessean.com/&quot;&gt;&lt;img class=&quot;cm-market-img&quot; src=&quot;https://www.gannett-cdn.com/gannett-web/properties/tennessean/logos-and-branding/logo-default-light.svg&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;</description>
<pubDate>Mon, 07 Jan 2019 16:25:31 +0000</pubDate>
<dc:creator>howard941</dc:creator>
<og:image>https://www.gannett-cdn.com/presto/2018/08/31/PNAS/a32064b4-ea17-4526-950a-aaff0a573555-NAS-DisabilityDenials_0004.JPG?crop=4676,2619,x0,y61&amp;width=3200&amp;height=1680&amp;fit=bounds</og:image>
<og:title>Denied: How some Tennessee doctors earn big money denying disability claims</og:title>
<og:description>Tennessee doctors are paid to review applications to the federal disability program. How much they earn depends on how fast they work. Some doctors work very fast.</og:description>
<og:url>https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</dc:identifier>
</item>
<item>
<title>I learnt C++ in 2018 and have no regrets</title>
<link>https://vishnubharathi.codes/blog/learning-cpp-2018/</link>
<guid isPermaLink="true" >https://vishnubharathi.codes/blog/learning-cpp-2018/</guid>
<description>&lt;p&gt;My quest for relearning C++ started in November 2018. I have been reading + &lt;a href=&quot;https://vishnubharathi.codes/tags/c/&quot;&gt;blogging&lt;/a&gt; + writing C++ from then. I would like to reflect on my journey a bit.&lt;/p&gt;
&lt;p&gt;Before I begin, I would like to state that this is not a language war blog post (although few parts of it might sound like). My intention and emphasis is on how all these beautiful languages converge and diverge to give healthy competition and chance for evolution.&lt;/p&gt;
&lt;h2 id=&quot;Background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I have been writing JavaScript code on Node.js for most of my time in the past 3 years. Around November 2018, I started to get the feel that I am missing something in my toolbox.&lt;/p&gt;
&lt;p&gt;One thing that I do easily is to get excited about programming - programming languages, tools, technologies and even the old things that I haven’t experienced before. This leads me to be that kind of person who likes to explore more and learn from them.&lt;/p&gt;
&lt;p&gt;During November 2018, I was basically having my mind fly around huge number of thoughts like let me read the source code of a open source software today… no let me do competitive programming and improve my DS and algorithm skills… no let me spend time learning about design patterns and learn Object Oriented Programming… no let me pick up functional programming… no let me read about linux and do Systems Programming…&lt;/p&gt;
&lt;p&gt;I was equally excited for doing all of those. Before the confusion took over and make me do nothing, I decided to take initiative and progress somewhere. I can’t do all at once but I could wisely choose a tool that will help me do most of them.&lt;/p&gt;
&lt;p&gt;So what was that tool? You guessed it right. It was C++&lt;/p&gt;
&lt;p&gt;NOTE: If you feel weird when I call out a programming language as a tool, become comfortable with it. Because I just bring that up wherever possible! - I feel that it is just a tool to instruct a machine to do something.&lt;/p&gt;
&lt;p&gt;Ok! Here is my evaluation of what led me to study C++ in 2018 and I have no regrets about it now.&lt;/p&gt;
&lt;h2 id=&quot;C-11-is-not-the-C-I-ran-away-from&quot;&gt;C++11 is not the C++ I ran away from&lt;/h2&gt;
&lt;p&gt;I studied C++ in my college and I used to fear using it mainly because of the book I used to learn. It was a pretty scary book - a very big one portraying C++ to be full of complex concepts. Actually I was ok with it, but the real problem started to happen when I attempted to write C++ for building a Windows Store app for Windows 8 platform.&lt;/p&gt;
&lt;p&gt;I met with lot of outside the text book notations like the &lt;a href=&quot;https://stackoverflow.com/questions/500580/in-c-cli-what-does-the-hat-character-do&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Microsoft Visual C++ ^ operator&lt;/a&gt;. I couldn’t even manage to understand the sample codes properly. At the same time, I met C# which was easy to learn and understand + had friends who use it - so it was my time to blend with the local community and rebel against C++.&lt;/p&gt;
&lt;p&gt;I heard about the new C++ standards here and there on the internet like C++11, C++14, C++17 and C++20. I was curious to know what changed in them.&lt;/p&gt;
&lt;p&gt;I chose to learn C++11 because it was the breaking point and a major release of what C++ was. After learning it and while learning it, I have to tell you that it is not the C++ I feared and ran away from few years back. It is something else. (nicer!)&lt;/p&gt;

&lt;p&gt;C++ is hanging around for a long time ( 34 years till date according to Wikipedia). It is powering some of the world’s oldest and stable piece of software written over all these years. So I thought there must be a secret sauce in there that is keeping it alive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more code than you write&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I took this programming advice seriously and as a result I have been wanting to read more code. A good way to start this would be to read books that have code in them. Because you just can’t start reading the source code of a code base from top to bottom, (you can but not in most cases, but might give up at some point without understanding something. Books are in between everything from documentation to source code to contributing guides.&lt;/p&gt;
&lt;p&gt;I was very much interested in reading the source code of V8, Node.js, libuv, redis, electron etc. because they will help me to understand node.js or respective technologies in a better way and all of them are written in C or C++&lt;/p&gt;
&lt;p&gt;C is not going to go away at least in the near future and so is C++. Because there are already great piece of software written in them and is being used extensively. So learning C++ would be helpful for me if I ever have to work with / debug / understand internals of any of those kind of software.&lt;/p&gt;

&lt;p&gt;C++ is widely adopted amongst competitive programmers. I heard somewhere that all the finalists of Google code jam use C++ except 1 who used Java. Why so? It is mainly because of the STL which is providing nice functionality and clear abstraction.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stack&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;bitset&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;If you ask me one favourite thing about C++, it would be the presence of STL and it’s organisation.&lt;/p&gt;
&lt;p&gt;I don’t want to compare any specific language here, but I obviously compared it with a lot of languages and I feel that C++ really got this right!&lt;/p&gt;
&lt;h2 id=&quot;Object-Oriented-Programming&quot;&gt;Object Oriented Programming&lt;/h2&gt;
&lt;p&gt;I read Head First Design Patterns book in October 2018 and I was interested in implementing and learning about these patterns more. So I obviously wanted to learn a language which has good OOPS background. For example, I learnt Go back in Jan 2018 for most of the reasons written down here, but it did not satisfy this particular criteria. It was filled with structs and it was &lt;a href=&quot;https://github.com/tmrts/go-patterns&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hard to or impossible&lt;/a&gt; to express the common patterns in it. I don’t want to sail the same ship. This time I am taking the one which is deeply rooted and created in first place for Object Orientation.&lt;/p&gt;

&lt;p&gt;By the end of 2018, we are clearly seeing this emergence of newer Systems Programming languages being written (Go, Rust, Crystal, Zig). Most of them advertise to fix what C++’s shortcomings are. So I believe that learning C++ is a good way to get idea about those problems and using it will actually make me feel the real pain, that is causing the newer languages to emerge (and also how C++ is trying to solve with newer versions maintaining/breaking compatibility).&lt;/p&gt;
&lt;p&gt;For example, after reading C++ for a while I took a break for a week to learn about Rust. I definitely attempted to read about Rust before, but gave up during those attempts. But this time the story is different. I was curious to know how the ownership model and lifetimes in Rust are reducing pain because I have already got enough taste of segmentation faults at this point. (If you are interested in C++ and read till this point, there is a good chance that you will enjoy learning Rust. Give it a go!)&lt;/p&gt;
&lt;h2 id=&quot;Paradigm&quot;&gt;Paradigm&lt;/h2&gt;
&lt;p&gt;C++ has a nice merge of various programming paradigm embedded in it. From Object Oriented Programming to function programming, we have the batteries included!&lt;/p&gt;
&lt;p&gt;Want to do systems programming? sit down and write code that is C like and get a good performance.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// access a dynamically sized array like&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;vec[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// more efficient but unsafe than&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;vec.at(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// because .at() throws exception for out of bounds access&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I personally use &lt;code&gt;.at()&lt;/code&gt; at all times because my use cases demand safety over performance. Programming is all about trade offs. It is like they say, “you have to lose something to gain some other thing!”&lt;/p&gt;
&lt;p&gt;One thing that I absolutely loved learning + using in C++ is generics. As I &lt;a href=&quot;https://twitter.com/scriptnull/status/1063634792888115200&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tweeted&lt;/a&gt; a while back, C++ is full of generics.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a rich heritage of generic programming popping up everywhere, resulting in generalized ideas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Regarding functional programming, C++ now includes lamda expressions and closures, functors, and &lt;a href=&quot;http://www.cplusplus.com/reference/functional/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;functional header&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;There are definitely some problems that I faced in this land. These problems gave a sense of when to and when not to use C++ for solving a problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I have to pay:&lt;/strong&gt; First and main concern being that the standard study materials for reading about C++ are not free. They are in book format (&lt;a href=&quot;http://www.stroustrup.com/4th.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The C++ Programming Language (4th Edition)&lt;/a&gt; and &lt;a href=&quot;http://www.stroustrup.com/tour2.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A Tour of C++ (Second Edition)&lt;/a&gt;) and you have to pay for them. Good work in the Rust community in this case because they have free and open books for all the standard study material.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tooling:&lt;/strong&gt; Coming from a JS background, npm set high expectations in this area. I faced this problem in Go too (which I think is being actively solved). There is no standard tool for doing a particular thing — there are just a lot of tools and that basically gives you flexibility to use them and confusion of which one to use. There are lot of choices available for compilers (gcc, Microsoft Visual C++ compiler, clang), build tools (make, bazel, ninja etc.) and there is CMake which a lot of projects seem to use and again we have to pay for getting the standard material on it and even more is that there will be a lot of time spent learning and choosing. For formatting there is clang_format which seems to be a nice way but I am using gcc for compiling my code and to format my C++ I have to suddenly install clang tools. This just leads to more work and effort. Package management with Conan - I haven’t given it a try. You know why! It is worth learning if it is being already used in a project that you are interested in or it is the standard/default way recommended of doing something. There are lot of test frameworks too — most common being gtest and catch2. Again more choices. On the other hand Rust has solved the tooling problem nicely with cargo, creates, tests, benchmarks etc. in a simpler way.&lt;/p&gt;
&lt;p&gt;To round up, C++ does not dictate about its tooling, which basically gives lot of choices and flexibility. But at the same time it is making it complex for beginners to come in to projects and start projects with it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/xUA7aSnSnSnrWWSTWE/giphy.gif&quot; alt=&quot;crazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Example: I just spent days learning about tools and coming up with &lt;a href=&quot;https://vishnubharathi.codes/blog/my-cpp-setup/&quot;&gt;my own C++ setup&lt;/a&gt; for bootstrapping projects in C++ — when entering rust all I have to do was type &lt;code&gt;cargo new project —bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oh and I am not trying to advertise that Rust got everything right and you should use Rust because nothing is ever perfect and that is what make things interesting.&lt;/p&gt;
&lt;p&gt;There are awesome efforts going on already to overcome the problems. One such notable effort being C++ Modules which is probably the most exciting thing if you ask me.&lt;/p&gt;
&lt;h2 id=&quot;No-regrets&quot;&gt;No regrets&lt;/h2&gt;
&lt;p&gt;Despite all the problems I faced, I still don’t have regrets learning and using C++ now and then. Because it gives this awesome base of knowledge about problems that programmers faced all these years and how they are being solved with respect to language design and tooling.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Within C++ is a smaller, simpler, safer language struggling to get out.” - Bjarne Stroustrup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There surely is!&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 14:45:30 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:type>article</og:type>
<og:title>I learnt C++ in 2018 and have no regrets</og:title>
<og:url>https://vishnubharathi.codes/blog/learning-cpp-2018/index.html</og:url>
<og:description>My quest for relearning C++ started in November 2018. I have been reading + blogging + writing C++ from then. I would like to reflect on my journey a bit. Before I begin, I would like to state that th</og:description>
<og:image>https://media.giphy.com/media/xUA7aSnSnSnrWWSTWE/giphy.gif</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://vishnubharathi.codes/blog/learning-cpp-2018/</dc:identifier>
</item>
<item>
<title>SQL Is No Excuse to Avoid DevOps</title>
<link>https://queue.acm.org/detail.cfm?id=3300018</link>
<guid isPermaLink="true" >https://queue.acm.org/detail.cfm?id=3300018</guid>
<description>&lt;div class=&quot;navbar&quot;&gt;

&lt;a href=&quot;https://queue.acm.org/&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/acmqueue_logo.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;https://queue.acm.org/app/2018_11-12_lrg.png&quot; with=&quot;90&quot; height=&quot;120&quot; alt=&quot;November/December 2018 issue of acmqueue&quot;/&gt;&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot;&gt;The November/December issue of acmqueue is out now&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://cdn.coverstand.com/3rd_pty/acm/login.html?&amp;amp;btx_i=553278&quot;&gt;Subscribers and ACM Professional members login here&lt;/a&gt;&lt;br clear=&quot;all&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;br/&gt;&lt;h3&gt;&lt;a href=&quot;https://queue.acm.org/listing.cfm?typefilter=Everythingsysadmin&amp;amp;sort=publication_date&amp;amp;order=desc&amp;amp;qc_type=Everythingsysadmin&amp;amp;article_type=&amp;amp;item_topic=all&amp;amp;filter_type=topic&amp;amp;page_title=Everything%20Sysadmin&amp;amp;filter=all&quot;&gt;Everything Sysadmin&lt;/a&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a href=&quot;https://queue.acm.org/listing.cfm?item_topic=Development&amp;amp;qc_type=theme_list&amp;amp;filter=Development&amp;amp;page_title=Development&amp;amp;order=desc&quot;&gt;Development&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;  &lt;a href=&quot;https://dl.acm.org/ft_gateway.cfm?id=3300018&amp;amp;ftid=2025916&amp;amp;dwn=1&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/icon_pdf.png&quot; alt=&quot;Download PDF version of this article&quot;/&gt; PDF&lt;/a&gt;&lt;/p&gt;
&lt;label&gt;December 12, 2018&lt;br/&gt;&lt;strong&gt;&lt;a class=&quot;descriptor&quot; href=&quot;https://queue.acm.org/issuedetail.cfm?issue=3291276&quot;&gt;Volume 16, issue 5&lt;/a&gt;&lt;/strong&gt;&lt;/label&gt;

&lt;h2&gt;Automation and a little discipline allow better testing, shorter release cycles, and reduced business risk.&lt;/h2&gt;
&lt;h3&gt;Thomas A. Limoncelli&lt;/h3&gt;
&lt;p&gt;A friend recently said to me, &quot;We can't do DevOps, we use a SQL database.&quot; I nearly fell off my chair. Such a statement is wrong on many levels.&lt;/p&gt;
&lt;p&gt;&quot;But you don't understand our situation!&quot; he rebuffed. &quot;DevOps means we'll be deploying new releases of our software more frequently! We can barely handle deployments now and we only do it a few times a year!&quot;&lt;/p&gt;
&lt;p&gt;I asked him about his current deployment process.&lt;/p&gt;
&lt;p&gt;&quot;Every few months we get a new software release,&quot; he explained. &quot;Putting it into production requires a lot of work. Because we use SQL, the deployment looks something like this: First, we kick out all the users and shut down the application. Next the DBAs (database administrators) modify the database schema. Once their work is done, the new software release is installed and enabled. The process takes many hours, so we tend to do it on the weekend... which I hate. If it fails, we have to revert to the backup tapes and restore everything from scratch and start again.&quot;&lt;/p&gt;
&lt;p&gt;He concluded, &quot;Just scheduling such an event takes weeks of negotiation. We usually lose the negotiation, which is why we end up doing it on the weekend. Doing this every few months is painful and the number-one source of stress around here. If we had to do this for weekly releases, most of us would just quit. We'd have no weekends! Heck, I've heard some companies do software releases multiple times a day. If we did that, our application would always be down for upgrades!&quot;&lt;/p&gt;
&lt;p&gt;Wow. There's a lot to unpack there. Let me start by clearing up a number of misconceptions. Then let's talk about some techniques for making those deployments much, much easier.&lt;/p&gt;
&lt;p&gt;First, DevOps is not a technology, it is a methodology. The most concise definition of DevOps is that it is applying agile/lean methods from source code all the way to production. This is done to &quot;deliver value faster,&quot; which is a fancy way of saying reducing the time it takes for a feature to get from idea to production. More frequent releases means less time a newly written feature sits idle waiting to be put into production.&lt;/p&gt;
&lt;p&gt;DevOps doesn't require or forbid any particular database technology—or any technology, for that matter. Saying you can or cannot &quot;do DevOps&quot; because you use a particular technology is like saying you can't apply agile to a project that uses a particular language. SQL may be a common &quot;excuse of the month,&quot; but it is a weak excuse.&lt;/p&gt;
&lt;p&gt;I understand how DevOps and the lack of SQL databases could become inexorably linked in some people's minds. In the 2000s and early 2010s companies that were inventing and popularizing DevOps were frequently big websites that were, by coincidence, also popularizing NoSQL (key/value store) databases. Linking the two, however, is confusing correlation with causation. Those same companies were also popularizing providing gourmet lunches to employees at no charge. We can all agree that is not a prerequisite for DevOps.&lt;/p&gt;
&lt;p&gt;Secondly, I'm not sure if someone can &quot;&lt;em&gt;do&lt;/em&gt; DevOps.&quot; You can use DevOps techniques, methods, and so on. That said, people use that phrase often enough that I think I've lost that battle.&lt;/p&gt;
&lt;p&gt;My friend and I discussed his situation further, and soon he realized that DevOps would not be impossible; it would simply be a difficult transition. Once the transition was complete, however, life would actually be much easier.&lt;/p&gt;
&lt;p&gt;My friend had one more concern. &quot;Look,&quot; he confessed, &quot;these deployments are risky. Every time we do one I risk the company's data and, to be honest, my job. I just don't want to do them. Doing them every few months is stressful enough. Doing them more frequently? No, sir, that's just irresponsible.&quot;&lt;/p&gt;
&lt;p&gt;As I discussed in a previous column (&quot;The Small Batches Principle,&quot; &lt;em&gt;acmqueue&lt;/em&gt; 14(2) [&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2945077&quot;&gt;https://queue.acm.org/detail.cfm?id=2945077&lt;/a&gt;]), when something is risky there is a natural inclination to seek to do it less. Counterintuitively, this actually increases risk. The next time you do the risky thing, you'll be even more out of practice, and the accumulated changes to the surrounding environment become larger and larger, making failure-by-unknown-side-effect nearly guaranteed. Instead, DevOps takes the radical stance that risky things should be done &lt;em&gt;more frequently.&lt;/em&gt; The higher frequency exposes the minor (and major) issues that have been swept under the rug because &quot;this happens only once a year.&quot; It forces us to automate the process, automate the testing of the process, and make the process so smooth that risk is reduced. It gives the people involved more practice. Practice makes perfect. Rather than running away from what we fear, it bravely takes risk head on and overcomes it. Like anyone who has experienced post-op recovery, you repeat the exercise until it is no longer painful.&lt;/p&gt;
&lt;p&gt;There is always some fixed cost to deploy. You should always, in principle, be driving down the fixed cost of deployment toward zero. Increasing deployment frequency without driving down that fixed cost is detrimental to the business and irresponsible.&lt;/p&gt;
&lt;p&gt;The rest of this article describes two practices that enable rapid releases in an environment that uses SQL. Implementing them requires developers, quality assurance, and operations to get out of their silos and collaborate, which is unheard of in some organizations but is the essence of DevOps. The result will be a much smoother, less painful, and certainly less stressful way of conducting business.&lt;/p&gt;

&lt;h3&gt;Technique 1: Automated Schema Updates&lt;/h3&gt;
&lt;p&gt;In the old methodology, any schema change requires the entire application to be shut down while a team of experts (or one very overworked DBA) modifies the schema manually. If you're going to do fully automated deployments, you need to have fully automated schema updates.&lt;/p&gt;
&lt;p&gt;To that end, the application should manage the schema. Each version of the schema should be numbered. An application starts with schema version 1. That value is stored in the database (imagine a one-row table with a single field that stores the value &quot;1&quot;). When the application starts, it should know that it is compatible with schema version 1, and if it doesn't find that version in the database, it refuses to run.&lt;/p&gt;
&lt;p&gt;To automate schema updating, however, the next release of the software knows it requires version 2 of the schema, and knows the SQL command that will upgrade a version 1 schema to version 2. On startup, it sees the version is 1, runs the appropriate schema upgrade command, updates the version number stored in the database to 2, and then proceeds to run the application.&lt;/p&gt;
&lt;p&gt;Software that does this typically has a table of SQL schema update commands. The command in array index &lt;em&gt;n&lt;/em&gt; upgrades the schema from version &lt;em&gt;n-1&lt;/em&gt; to &lt;em&gt;n&lt;/em&gt;. Thus, no matter which version is found, the software can bring the database to the required schema version. In fact, if an uninitialized database is found (for example, in a testing environment), it might loop through dozens of schema changes until it gets to the newest version. Not every software release requires a schema change; therefore, separate version numbers are used for schema and software.&lt;/p&gt;
&lt;p&gt;There are open-source and commercial systems that implement this process. Some of these products are more sophisticated than others, supporting a variety of languages, database systems, error-handling sophistication, and whether or not they also support rollbacks. A web search for &quot;sql change automation&quot; will find many. I am most familiar with the open-source projects Mayflower for .NET code (&lt;a href=&quot;https://github.com/bretcope/Mayflower.NET&quot;&gt;https://github.com/bretcope/Mayflower.NET&lt;/a&gt;) and Goose for Go (&lt;a href=&quot;https://bitbucket.org/liamstask/goose&quot;&gt;https://bitbucket.org/liamstask/goose&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Schema modifications used to lock the database for minutes and possibly hours. This would cause applications to time out and fail. Modern SQL databases have reduced or eliminated such problems, thanks to lockless schema updates and online reindexing features. These features can be found in all recent SQL products, including open-source products such as MariaDB, MySQL, and PostgreSQL. Check the documentation for details of what can and cannot be done without interruption.&lt;/p&gt;
&lt;p&gt;Once your software uses these techniques, adopting CI (continuous integration) becomes significantly easier. Your automated testing environment can include tests that build a database in the old schema, upgrade it, and run the new software release. Your schema upgrade process may be tested hundreds of times before it goes into production. This should bring new confidence to the process, reduce the risk of schema upgrades, and decouple the DBAs' personal involvement in upgrades. They will appreciate getting their weekends back.&lt;/p&gt;
&lt;p&gt;My favorite part of this technique is that your schema is now being treated like code. Manual work at the console has been eliminated and you've gained the ability to do the process over and over—in developer sandboxes, testing environments, UAT (user acceptance test) environments, and production. You can run the process multiple times, fixing and fine-tuning it. Now that it is code, you can apply the best code-management and software-engineering techniques to it.&lt;/p&gt;

&lt;h3&gt;Technique 2: Coding for Multiple Schemas&lt;/h3&gt;
&lt;p&gt;How can you upgrade a database schema in a distributed computing environment?&lt;/p&gt;
&lt;p&gt;Imagine a typical web-based application that is many instances (replicas) of the same software running behind a web load balancer. Each instance receives its share of the HTTP traffic. The instances access the same database server.&lt;/p&gt;
&lt;p&gt;When the software is tightly coupled to the database schema it becomes impossible to perform software upgrades that require a database schema change. If you first change the schema, the instances will all die or at least get confused by the change; you could run around upgrading the instances as fast as possible, but you've already lost the game because you suffer an outage.&lt;/p&gt;
&lt;p&gt;Ah ha! Why not upgrade the instances first! Sadly, as you upgrade the instances' software one by one, the newly upgraded instances fail to start as they detect the wrong schema. You'll end up with downtime until the schema is changed to match the software.&lt;/p&gt;
&lt;p&gt;The obvious solution is to defy the laws of physics and change the database schema at the exact same time as you upgrade the software on all the instances. If you could do that, everything would be just fine.&lt;/p&gt;
&lt;p&gt;Sadly, the ACM has a policy against defying the laws of physics, as do most employers. This is why the traditional method is to shut down the entire application, upgrade everything, and then bring it back online. It's the best we can do until our friends at IEEE figure out how to pause time.&lt;/p&gt;
&lt;p&gt;Whether you stop the world by defying physics or by scheduling downtime, you have introduced an even bigger problem: You have made many individual changes, but you don't know if any of them were successful until the system is running again. You also don't know which of the accumulated changes caused things to break.&lt;/p&gt;
&lt;p&gt;Such &quot;big bang&quot; changes are risky. It is less risky to make and validate the changes one at a time. If you make multiple changes all at once, and there is a problem, you have to start binary searching to figure out which change caused the problem. If you make one change at a time, and there is a failure, the search becomes a no-brainer. It is also easier to back out one change than many.&lt;/p&gt;
&lt;p&gt;Heck, even Google, with its highly sophisticated testing technologies and methodologies, understands that subtle differences between the staging environment and the production environment may result in deployment failures. They &quot;canary&quot; their software releases: upgrading one instance, waiting to see if it starts properly, then upgrading the remaining instances slowly over time. This is not a testing methodology, this is an insurance policy against incomplete testing—not that their testing people aren't excellent, but nobody is perfect. The canary technique is now an industry best practice and is even embedded in the Kubernetes system. (The term &lt;em&gt;canary&lt;/em&gt; is derived from &quot;canary in a coalmine.&quot; The first instance to be upgraded dies as a warning sign that there is a problem, just as coal miners used to bring with them birds, usually canaries, which are more sensitive to poisonous gas than humans. If the canary died, it was a sign to evacuate.)&lt;/p&gt;
&lt;p&gt;Since these problems are caused by software being tightly coupled to a particular schema, the solution is to loosen the coupling. These can be decoupled by writing software that works for multiple schemas at the same time. This is separating rollout and activation.&lt;/p&gt;
&lt;p&gt;The first phase is to write code that doesn't make assumptions about the fields in a table. In SQL terms, this means &lt;code&gt;SELECT&lt;/code&gt; statements should specify the exact fields needed, rather than using &lt;code&gt;SELECT *&lt;/code&gt;. If you do use &lt;code&gt;SELECT *&lt;/code&gt;, don't assume that the fields are in a particular order. LAST_NAME may be the third field today, but it might not be tomorrow.&lt;/p&gt;
&lt;p&gt;With this discipline, deleting a field from the schema is easy. New releases are deployed that don't use the field, and everything just works. The schema can be changed after all the instances are running updated releases. In fact, since the vestigial field is ignored, you can procrastinate and remove it later, much later, possibly waiting until the next (otherwise unrelated) schema change.&lt;/p&gt;
&lt;p&gt;Adding a new field is a simple matter of creating it in the schema ahead of the first software release that uses it. We use Technique 1 (applications manage their own schema) and deploy a release that modifies the schema but doesn't use the field. With the right transactional locking hullabaloo, the first instance that is restarted with the new software will cleanly update the schema. If there is a problem, the canary will die. You can fix the software and try a new canary. Reverting the schema change is optional.&lt;/p&gt;
&lt;p&gt;Since the schema and software are decoupled, developers can start using the new field at their leisure. While in the past upgrades required finding a maintenance window compatible with multiple teams, now the process is decoupled and all parties can work in a coordinated way but not in lockstep.&lt;/p&gt;
&lt;p&gt;More complicated changes require more planning. When splitting a field, removing some fields, adding others, and so on, the fun really begins.&lt;/p&gt;
&lt;p&gt;First, the software must be written to work with both the old and new schemas and most importantly must also handle the transition phase. Suppose you are migrating from storing a person's complete name in one field, to splitting it into individual fields for first, middle, last name, title, and so on. The software must detect which field(s) exist and act appropriately. It must also work correctly while the database is in transition and both sets of fields exist. Once both sets of fields exist, a batch job might run that splits names and stores the individual parts, nulling the old field. The code must handle the case where some rows are unconverted and others are converted.&lt;/p&gt;
&lt;p&gt;The process for doing this conversion is documented in the sidebar &quot;The Five Phases of a Live Schema Change.&quot; It has many phases, involving creating new fields, updating software, migrating data, and removing old fields. This is called the McHenry Technique in &lt;em&gt;The Practice of Cloud System Administration&lt;/em&gt; (of which I am coauthor with Strata R. Chalup and Christina J. Hogan); it is also called Expand/Contract in &lt;em&gt;Release It!: Design and Deploy Production-Ready Software&lt;/em&gt; by Michael T. Nygard.&lt;/p&gt;

&lt;div readability=&quot;30&quot;&gt;
&lt;h3&gt;The Five Phases of a Live Schema Change&lt;/h3&gt;
&lt;p&gt;1. The running code reads and writes the old schema, selecting just the fields that it needs from the table or view. This is the original state.&lt;/p&gt;
&lt;p&gt;2. Expand: The schema is modified by adding any new fields but not removing any old ones. No code changes are made. If a rollback is needed, it's painless because the new fields are not being used.&lt;/p&gt;
&lt;p&gt;3. Code is modified to use the new schema fields and pushed into production. If a rollback is needed, it just reverts to phase 2. At this time any data conversion can be done while the system is live.&lt;/p&gt;
&lt;p&gt;4. Contract: Code that references the old, now unused, fields is removed and pushed into production. If a rollback is needed, it just reverts to phase 3.&lt;/p&gt;
&lt;p&gt;5. Old, now unused, fields are removed from the schema. In the unlikely event that a rollback is needed at this point, the database would simply revert to phase 4.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The technique is sophisticated enough to handle the most complex schema changes on a live distributed system. Plus, each and every mutation can be rolled back individually.&lt;/p&gt;
&lt;p&gt;The number of phases can be reduced for special cases. If one is only adding fields, phase 5 is skipped because there is nothing to be removed. The process reduces to what was described earlier in this article. Phases 4 and 5 can be combined or overlapped. Alternatively, phase 5 from one schema change can be merged into phase 2 of the next schema change.&lt;/p&gt;
&lt;p&gt;With these techniques you can roll through the most complex schema changes without downtime.&lt;/p&gt;

&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Using SQL databases is not an impediment to doing DevOps. Automating schema management and a little developer discipline enables more vigorous and repeatable testing, shorter release cycles, and reduced business risk.&lt;/p&gt;
&lt;p&gt;Automating releases liberates us. It turns a worrisome, stressful, manual upgrade process into a regular event that happens without incident. It reduces business risk but, more importantly, creates a more sustainable workplace.&lt;/p&gt;
&lt;p&gt;When you can confidently deploy new releases, you do it more frequently. New features that previously sat unreleased for weeks or months now reach users sooner. Bugs are fixed faster. Security holes are closed sooner. It enables the company to provide better value to customers.&lt;/p&gt;

&lt;h4&gt;Acknowledgments&lt;/h4&gt;
&lt;p&gt;I'd like to thank the following people for their help with this article: Sam Torno, SRE, Stack Overflow Inc.; Mark Henderson, SRE, Stack Overflow Inc.; Steve Gunn, independent; Harald Wagener, iNNOVO Cloud GmbH; Andrew Clay Shafer, Pivotal; Kristian Köhntopp, Booking.com, Ex-MySQL AB.&lt;/p&gt;

&lt;h4&gt;Related articles&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2945077&quot;&gt;The Small Batches Principle&lt;/a&gt;&lt;/strong&gt; Reducing waste, encouraging experimentation, and making everyone happy Thomas A. Limoncelli &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2945077&quot;&gt;https://queue.acm.org/detail.cfm?id=2945077&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2841311&quot;&gt;Lean Software Development—Building and Shipping Two Versions&lt;/a&gt;&lt;/strong&gt; Catering to developers' strengths while still meeting team objectives Kate Matsudaira &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2841311&quot;&gt;https://queue.acm.org/detail.cfm?id=2841311&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2540984&quot;&gt;Adopting DevOps Practices in Quality Assurance&lt;/a&gt;&lt;/strong&gt; Merging the art and science of software development James Roche &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2540984&quot;&gt;https://queue.acm.org/detail.cfm?id=2540984&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thomas A. Limoncelli&lt;/strong&gt; is the SRE manager at Stack Overflow Inc. in New York City. His books include &lt;em&gt;The Practice of System and Network Administration&lt;/em&gt; (&lt;a href=&quot;http://the-sysadmin-book.com&quot;&gt;http://the-sysadmin-book.com&lt;/a&gt;), &lt;em&gt;The Practice of Cloud System Administration&lt;/em&gt; (&lt;a href=&quot;http://the-cloud-book.com&quot;&gt;http://the-cloud-book.com&lt;/a&gt;), and &lt;em&gt;Time Management for System Administrators&lt;/em&gt; (&lt;a href=&quot;http://shop.oreilly.com/product/9780596007836.do&quot;&gt;http://shop.oreilly.com/product/9780596007836.do&lt;/a&gt;). He blogs at &lt;a href=&quot;http://EverythingSysadmin.com&quot;&gt;EverythingSysadmin.com&lt;/a&gt; and tweets at &lt;a href=&quot;https://twitter.com/yesthattom&quot;&gt;@YesThatTom&lt;/a&gt;. He holds a B.A. in computer science from Drew University.&lt;/p&gt;
&lt;p class=&quot;Qcopyrightline&quot;&gt;Copyright © 2018 held by owner/author. Publication rights licensed to ACM.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;floatLeft&quot; src=&quot;https://queue.acm.org/img/q%20stamp_small.jpg&quot; width=&quot;26&quot; height=&quot;45&quot; alt=&quot;acmqueue&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Originally published in Queue vol. 16, no. 5&lt;/em&gt;—&lt;br/&gt;see this item in the &lt;a href=&quot;https://portal.acm.org/citation.cfm?id=3300018&quot;&gt;ACM Digital Library&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;ACMQueue&quot;&gt;Tweet&lt;/a&gt; 
&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;
Related:
&lt;p&gt;&lt;span&gt;Ivar Jacobson, Roly Stimson&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3301760&quot;&gt;&lt;strong&gt;Tear Down the Method Prisons! Set Free the Practices!&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Essence: a new way of thinking that promises to liberate the practices and enable true learning organizations&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Alpha Lam&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3287302&quot;&gt;&lt;strong&gt;Using Remote Cache Service for Bazel&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Save time by sharing and reusing build and test output&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Jez Humble&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3190610&quot;&gt;&lt;strong&gt;Continuous Delivery Sounds Great, but Will It Work Here?&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;It's not magic, it just requires continuous, daily improvement at all levels.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Nicole Forsgren, Mik Kersten&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3182626&quot;&gt;&lt;strong&gt;DevOps Metrics&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Your biggest mistake might be collecting the wrong data.&lt;/p&gt;
&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;(newest first)&lt;/p&gt;
&lt;p class=&quot;author&quot;&gt;Michael Mullany | Mon, 07 Jan 2019 22:47:47 UTC&lt;/p&gt;
Anyone trying to do DevOps with SQL should be looking at using Datrium storage, which uses a log structured file system to eliminate restore latency (every write batch in Datrium is its own snapshot - which can be promoted to live pretty much instantly). (full disclosure - I'm an investor in them.)
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Simson Garfinkel | Sun, 30 Dec 2018 14:31:01 UTC&lt;/p&gt;
Great article about how to integrate DevOps principles into organizations that rely on SQL. Two techniques that I've found useful are having multiple SQL databases filled with the same data so that you can run the same code on pre- and post-schema changes, and using Views so that legacy code can continue to run with the old schema. I have also recently seen an SQL proxy that is used to implement additional functionality (in this case, access control for privacy protection and compliance).
&lt;p&gt;Have you written anything else on integrating DevOps techniques into organizations that are resistant to change?&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Jason | Tue, 18 Dec 2018 16:17:52 UTC&lt;/p&gt;
Flyway (https://flywaydb.org/) is there for the Java crowd.
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;

&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3300018#&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/logo_acm.gif&quot;/&gt;&lt;/a&gt;&lt;br/&gt;© 2018 ACM, Inc. All Rights Reserved.&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 14:39:16 +0000</pubDate>
<dc:creator>YesThatTom2</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://queue.acm.org/detail.cfm?id=3300018</dc:identifier>
</item>
</channel>
</rss>