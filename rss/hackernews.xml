<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Endlessh: An SSH Tarpit</title>
<link>https://nullprogram.com/blog/2019/03/22/</link>
<guid isPermaLink="true" >https://nullprogram.com/blog/2019/03/22/</guid>
<description>&lt;time datetime=&quot;2019-03-22&quot;&gt;March 22, 2019&lt;/time&gt;&lt;p&gt;nullprogram.com/blog/2019/03/22/&lt;/p&gt;
&lt;p&gt;I’m a big fan of tarpits: a network service that intentionally inserts delays in its protocol, slowing down clients by forcing them to wait. This arrests the speed at which a bad actor can attack or probe the host system, and it ties up some of the attacker’s resources that might otherwise be spent attacking another host. When done well, a tarpit imposes more cost on the attacker than the defender.&lt;/p&gt;
&lt;p&gt;The Internet is a very hostile place, and anyone who’s ever stood up an Internet-facing IPv4 host has witnessed the immediate and continuous attacks against their server. I’ve maintained &lt;a href=&quot;https://nullprogram.com/blog/2017/06/15/&quot;&gt;such a server&lt;/a&gt; for nearly six years now, and more than 99% of my incoming traffic has ill intent. One part of my defenses has been tarpits in various forms. The latest addition is an SSH tarpit I wrote a couple of months ago:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/skeeto/endlessh&quot;&gt;&lt;strong&gt;Endlessh: an SSH tarpit&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This program opens a socket and pretends to be an SSH server. However, it actually just ties up SSH clients with false promises indefinitely — or at least until the client eventually gives up. After cloning the repository, here’s how you can try it out for yourself (default port 2222):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ make
$ ./endlessh &amp;amp;
$ ssh -p2222 localhost
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your SSH client will hang there and wait for at least several days before finally giving up. Like a mammoth in the La Brea Tar Pits, it got itself stuck and can’t get itself out. As I write, my Internet-facing SSH tarpit currently has 27 clients trapped in it. A few of these have been connected for weeks. In one particular spike it had 1,378 clients trapped at once, lasting about 20 hours.&lt;/p&gt;
&lt;p&gt;My Internet-facing Endlessh server listens on port 22, which is the standard SSH port. I long ago moved my real SSH server off to another port where it sees a whole lot less SSH traffic — essentially none. This makes the logs a whole lot more manageable. And (hopefully) Endlessh convinces attackers not to look around for an SSH server on another port.&lt;/p&gt;
&lt;p&gt;How does it work? Endlessh exploits &lt;a href=&quot;https://tools.ietf.org/html/rfc4253#section-4.2&quot;&gt;a little paragraph in RFC 4253&lt;/a&gt;, the SSH protocol specification. Immediately after the TCP connection is established, and before negotiating the cryptography, both ends send an identification string:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SSH-protoversion-softwareversion SP comments CR LF
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The RFC also notes:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;The server MAY send other lines of data before sending the version string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is no limit on the number of lines, just that these lines must not begin with “SSH-“ since that would be ambiguous with the identification string, and lines must not be longer than 255 characters including CRLF. So &lt;strong&gt;Endlessh sends and &lt;em&gt;endless&lt;/em&gt; stream of randomly-generated “other lines of data”&lt;/strong&gt; without ever intending to send a version string. By default it waits 10 seconds between each line. This slows down the protocol, but prevents it from actually timing out.&lt;/p&gt;
&lt;p&gt;This means Endlessh need not know anything about cryptography or the vast majority of the SSH protocol. It’s dead simple.&lt;/p&gt;
&lt;h3 id=&quot;implementation-strategies&quot;&gt;Implementation strategies&lt;/h3&gt;
&lt;p&gt;Ideally the tarpit’s resource footprint should be as small as possible. It’s just a security tool, and the server does have an actual purpose that doesn’t include being a tarpit. It should tie up the attacker’s resources, not the server’s, and should generally be unnoticeable. (Take note all those who write the awful “security” products I have to tolerate at my day job.)&lt;/p&gt;
&lt;p&gt;Even when many clients have been trapped, Endlessh spends more than 99.999% of its time waiting around, doing nothing. It wouldn’t even be accurate to call it I/O-bound. If anything, it’s &lt;em&gt;timer-bound&lt;/em&gt;, waiting around before sending off the next line of data. &lt;strong&gt;The most precious resource to conserve is &lt;em&gt;memory&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;processes&quot;&gt;Processes&lt;/h4&gt;
&lt;p&gt;The most straightforward way to implement something like Endlessh is a fork server: accept a connection, fork, and the child simply alternates between &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep(3)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;write(2)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;for (;;) {
    ssize_t r;
    char line[256];

    sleep(DELAY);
    generate_line(line);
    r = write(fd, line, strlen(line));
    if (r == -1 &amp;amp;&amp;amp; errno != EINTR) {
        exit(0);
    }
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A process per connection is a lot of overhead when connections are expected to be up hours or even weeks at a time. An attacker who knows about this could exhaust the server’s resources with little effort by opening up lots of connections.&lt;/p&gt;
&lt;h4 id=&quot;threads&quot;&gt;Threads&lt;/h4&gt;
&lt;p&gt;A better option is, instead of processes, to create a thread per connection. On Linux &lt;a href=&quot;https://nullprogram.com/blog/2015/05/15/&quot;&gt;this is practically the same thing&lt;/a&gt;, but it’s still better. However, you still have to allocate a stack for the thread and the kernel will have to spend some resources managing the thread.&lt;/p&gt;
&lt;h4 id=&quot;poll&quot;&gt;Poll&lt;/h4&gt;
&lt;p&gt;For Endlessh I went for an even more lightweight version: a single-threaded &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt; server, analogous to stackless green threads. The overhead per connection is about as low as it gets.&lt;/p&gt;
&lt;p&gt;Clients that are being delayed are not registered in &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt;. Their only overhead is the socket object in the kernel, and another 78 bytes to track them in Endlessh. Most of those bytes are used only for accurate logging. Only those clients that are overdue for a new line are registered for &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When clients are waiting, but no clients are overdue, &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt; is essentially used in place of &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep(3)&lt;/code&gt;. Though since it still needs to manage the &lt;em&gt;accept&lt;/em&gt; server socket, it (almost) never actually waits on &lt;em&gt;nothing&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;There’s an option to limit the total number of client connections so that it doesn’t get out of hand. In this case it will stop polling the accept socket until a client disconnects. I probably shouldn’t have bothered with this option and instead relied on &lt;code class=&quot;highlighter-rouge&quot;&gt;ulimit&lt;/code&gt;, a feature already provided by the operating system.&lt;/p&gt;
&lt;p&gt;I could have used epoll (Linux) or kqueue (BSD), which would be much more efficient than &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt;. The problem with &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt; is that it’s constantly registering and unregistering Endlessh on each of the overdue sockets each time around the main loop. This is by far the most CPU-intensive part of Endlessh, and it’s all inflicted on the kernel. Most of the time, even with thousands of clients trapped in the tarpit, only a small number of them at polled at once, so I opted for better portability instead.&lt;/p&gt;
&lt;p&gt;One consequence of not polling connections that are waiting is that disconnections aren’t noticed in a timely fashion. This makes the logs less accurate than I like, but otherwise it’s pretty harmless. Unforunately even if I wanted to fix this, the &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt; interface isn’t quite equipped for it anyway.&lt;/p&gt;
&lt;h4 id=&quot;raw-sockets&quot;&gt;Raw sockets&lt;/h4&gt;
&lt;p&gt;With a &lt;code class=&quot;highlighter-rouge&quot;&gt;poll(2)&lt;/code&gt; server, the biggest overhead remaining is in the kernel, where it allocates send and receive buffers for each client and manages the proper TCP state. The next step to reducing this overhead is Endlessh opening a &lt;em&gt;raw socket&lt;/em&gt; and speaking TCP itself, bypassing most of the operating system’s TCP/IP stack.&lt;/p&gt;
&lt;p&gt;Much of the TCP connection state doesn’t matter to Endlessh and doesn’t need to be tracked. For example, it doesn’t care about any data sent by the client, so no receive buffer is needed, and any data that arrives could be dropped on the floor.&lt;/p&gt;
&lt;p&gt;Even more, raw sockets would allow for some even nastier tarpit tricks. Despite the long delays between data lines, the kernel itself responds very quickly on the TCP layer and below. ACKs are sent back quickly and so on. An astute attacker could detect that the delay is artificial, imposed above the TCP layer by an application.&lt;/p&gt;
&lt;p&gt;If Endlessh worked at the TCP layer, it could &lt;a href=&quot;https://nyman.re/super-simple-ssh-tarpit/&quot;&gt;tarpit the TCP protocol itself&lt;/a&gt;. It could introduce artificial “noise” to the connection that requires packet retransmissions, delay ACKs, etc. It would look a lot more like network problems than a tarpit.&lt;/p&gt;
&lt;p&gt;I haven’t taken Endlessh this far, nor do I plan to do so. At the moment attackers either have a hard timeout, so this wouldn’t matter, or they’re pretty dumb and Endlessh already works well enough.&lt;/p&gt;
&lt;h3 id=&quot;asyncio-and-other-tarpits&quot;&gt;asyncio and other tarpits&lt;/h3&gt;
&lt;p&gt;Since writing Endless &lt;a href=&quot;https://nullprogram.com/blog/2019/03/10/&quot;&gt;I’ve learned about Python’s &lt;code class=&quot;highlighter-rouge&quot;&gt;asycio&lt;/code&gt;&lt;/a&gt;, and it’s actually a near perfect fit for this problem. I should have just used it in the first place. The hard part is already implemented within &lt;code class=&quot;highlighter-rouge&quot;&gt;asyncio&lt;/code&gt;, and the problem isn’t CPU-bound, so being written in Python &lt;a href=&quot;https://nullprogram.com/blog/2019/02/24/&quot;&gt;doesn’t matter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here’s a simplified (no logging, no configuration, etc.) version of Endlessh implemented in about 20 lines of Python 3.7:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;9.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;asyncio&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectionResetError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0.0.0.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2222&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serve_forever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Since Python coroutines are stackless, the per-connection memory overhead is comparable to the C version. So it seems asycio is perfectly suited for writing tarpits! Here’s an HTTP tarpit to trip up attackers trying to exploit HTTP servers. It slowly sends a random, endless HTTP header:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot; readability=&quot;10.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;asyncio&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'HTTP/1.1 200 OK&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'X-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConnectionResetError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0.0.0.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serve_forever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Try it out for yourself. Firefox and Chrome will spin on that server for hours before giving up. I have yet to see curl actually timeout on its own in the default settings (&lt;code class=&quot;highlighter-rouge&quot;&gt;--max-time&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; does work correctly, though).&lt;/p&gt;
&lt;p&gt;Parting exercise for the reader: Using the examples above as a starting point, implement an SMTP tarpit using asyncio. Bonus points for using TLS connections and testing it against real spammers.&lt;/p&gt;
&lt;ol class=&quot;references print-only&quot;/&gt;&lt;nav class=&quot;no-print&quot;&gt;
&lt;/nav&gt;
</description>
<pubDate>Fri, 22 Mar 2019 19:22:13 +0000</pubDate>
<dc:creator>stargrave</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://nullprogram.com/blog/2019/03/22/</dc:identifier>
</item>
<item>
<title>Bitcoin ETF research finds that 95% of Bitcoin volume is fake</title>
<link>https://twitter.com/BitwiseInvest/status/1109114656944209921</link>
<guid isPermaLink="true" >https://twitter.com/BitwiseInvest/status/1109114656944209921</guid>
<description>17/ And, when you remove fake volume, CME and CBOE futures volume is significant ($91M), especially compared to the real spot volume (35% for Feb 2019). 

This is good news because it means CME— a regulated, surveilled market— is of material size, which important for an ETF. &lt;a href=&quot;https://t.co/pVqMqPSZkt&quot; data-pre-embedded=&quot;true&quot; rel=&quot;nofollow&quot; data-entity-id=&quot;1109105122917912576&quot; dir=&quot;ltr&quot; data-url=&quot;https://twitter.com/BitwiseInvest/status/1109114706688700418/photo/1&quot; data-tco-id=&quot;pVqMqPSZkt&quot; class=&quot;twitter_external_link dir-ltr tco-link has-expanded-path&quot; target=&quot;_top&quot; data-expanded-path=&quot;/BitwiseInvest/status/1109114706688700418/photo/1&quot;&gt;pic.twitter.com/pVqMqPSZkt&lt;/a&gt;</description>
<pubDate>Fri, 22 Mar 2019 18:43:08 +0000</pubDate>
<dc:creator>mlerner</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/BitwiseInvest/status/1109114656944209921</dc:identifier>
</item>
<item>
<title>Redis streams as a pure data structure</title>
<link>http://antirez.com/news/128</link>
<guid isPermaLink="true" >http://antirez.com/news/128</guid>
<description>&lt;section id=&quot;newslist&quot;&gt;&lt;article data-news-id=&quot;128&quot;&gt;
&lt;/article&gt;&lt;/section&gt;&lt;article class=&quot;comment&quot; data-comment-id=&quot;128-&quot; id=&quot;128-&quot; readability=&quot;57.740544936966&quot;&gt;&lt;span class=&quot;info&quot;&gt;&lt;span class=&quot;username&quot;&gt;&lt;a href=&quot;http://antirez.com/user/antirez&quot;&gt;antirez&lt;/a&gt;&lt;/span&gt; 8 hours ago. 27295 views.&lt;/span&gt;
&lt;pre&gt;
The new Redis data structure introduced in Redis 5 under the name of “Streams” generated quite some interest in the community. Soon or later I want to run a community survey, talking with users having production use cases, and blogging about it. Today I want to address another issue: I’m starting to suspect that many users are only thinking at Streams as a way to solve Kafka(TM)-alike use cases. Actually the data structure was designed to *also* work in the context of messaging with producers and consumers, but to think that Redis Streams are just good for that is incredibly reductive. Streaming is a terrific pattern and “mental model” that can be applied when designing systems with great success, but Redis Streams, like most Redis data structures, are more general, and can be used to model dozen of different unrelated problems. So in this blog post I’ll focus on Streams as a pure data structure, completely ignoring its blocking operations, consumer groups, and all the messaging parts.

## Streams are CSV files on steroids

If you want to log a series of structured data items and decided that databases are overrated after all, you may say something like: let’s just open a file in append only mode, and log every row as a CSV (Comma Separated Value) item:

(open data.csv in append only)
time=1553096724033,cpu_temp=23.4,load=2.3
time=1553096725029,cpu_temp=23.2,load=2.1

Looks simple and people did this for ages and still do: it’s a solid pattern if you know what you are doing. But what is the in-memory equivalent of that? Memory is more powerful than an append only file and can automagically remove the limitations of  a CSV file like that:

1. It’s hard (inefficient) to do range queries here.

2. There is too much redundant information: the time is almost the same in every entry and the fields are duplicated. At the same time removing it will make the format less flexible, if I want to switch to a different set of fields.

3. Item offsets are just the byte offset in the file: if we change the file structure the offset will be wrong, so there is no actual true concept of primary ID here. Entries are basically not univocally addressed in some way.

4. I can’t remove entries, but only mark them as no longer valid without the ability of garbage collecting, if not by rewriting the log. Log rewriting usually sucks for several reasons and if it can be avoided, it’s good.

Still such log of CSV entries is also great in some way: there is no fixed structure and fields may change, is trivial to generate, and after all is quite compact as well. The idea with Redis Streams was to retain the good things, but go over the limitations. The result is a hybrid data structure very similar to Redis Sorted Sets: they *feel like* a fundamental data structure, but to get such an effect, internally it uses multiple representations.

## Streams 101 (you may skip that if you know already Redis Stream basics)

Redis Streams are represented as delta-compressed macro nodes that are linked together by a radix tree. The effect is to be able to seek to random entries in a very fast way, to obtain ranges if needed, remove old items to create a capped stream, and so forth. Yet our interface to the programmer is very similar to a CSV file:

&amp;gt; XADD mystream * cpu-temp 23.4 load 2.3
&quot;1553097561402-0&quot;
&amp;gt; XADD mystream * cpu-temp 23.2 load 2.1
&quot;1553097568315-0&quot;

As you can see from the example above the XADD command auto generates and returns the entry ID, which is monotonically incrementing and has two parts: &amp;lt;time&amp;gt;-&amp;lt;counter&amp;gt;. The time is in milliseconds and the counter increases for entries generated in the same milliseconds. 

So the first new abstraction on top of the “append only CSV file” idea is that, since we used the asterisk as the ID argument of XADD, we get the entry ID for free from the server. Such ID is not only useful to point to a specific item inside a stream, it’s also related to the time when the entry was added to the stream. In fact with XRANGE it is possible to perform range queries or fetch single items:

&amp;gt; XRANGE mystream 1553097561402-0 1553097561402-0
1) 1) &quot;1553097561402-0&quot;
   2) 1) &quot;cpu-temp&quot;
      2) &quot;23.4&quot;
      3) &quot;load&quot;
      4) &quot;2.3&quot;

In this case I used the same ID as the start and the stop of the range in order to identify a single element. However I can use any range, and a COUNT argument to limit the number of results. Similarly there is no need to specify full IDs as range, I can just use the millisecond unix time part of the IDs, to get elements in a given range of time:

&amp;gt; XRANGE mystream 1553097560000 1553097570000
1) 1) &quot;1553097561402-0&quot;
   2) 1) &quot;cpu-temp&quot;
      2) &quot;23.4&quot;
      3) &quot;load&quot;
      4) &quot;2.3&quot;
2) 1) &quot;1553097568315-0&quot;
   2) 1) &quot;cpu-temp&quot;
      2) &quot;23.2&quot;
      3) &quot;load&quot;
      4) &quot;2.1&quot;

For now there is no need to show you more Streams API, there is the Redis documentation for that. For now let’s just focus on that usage pattern: XADD to add stuff, XRANGE (but also XREAD) in order to fetch back ranges (depending on what you want to do), and let’s see why I claim Streams are so powerful as a data structure.

However if you want to learn more about Redis Streams and their API, make sure to visit the tutorial here: &lt;a rel=&quot;nofollow&quot; href=&quot;https://redis.io/topics/streams-intro&quot;&gt;https://redis.io/topics/streams-intro&lt;/a&gt;

## Tennis players

A few days ago I was modeling an application with a friend of mine which is learning Redis those days: an app in order to keep track of local tennis courts, local players and matches. The way you model players in Redis is quite obvious, a player is a small object, so an Hash is all you need, with key names like player:&amp;lt;id&amp;gt;. As you model the application data further, to use Redis as its primary, you immediately realize you need a way to track the games played in a given tennis club. If player:1 and player:2 played a game, and player 1 won, we could write the following entry in a stream:

&amp;gt; XADD club:1234.matches * player-a 1 player-b 2 winner 1
&quot;1553254144387-0&quot;

With this simple operation we have:

1. A unique identifier of the match: the ID in the stream.
2. No need to create an object in order to identify a match.
3. Range queries for free to paginate the matches, or check the matches played in a given moment in the past.

Before Streams we needed to create a sorted set scored by time: the sorted set element would be the ID of the match, living in a different key as a Hash value. This is not just more work, it’s also an incredible amount of memory wasted. More, much more you could guess (see later).

For now the point to show is that Redis Streams are kinda of a Sorted Set
in append only mode, keyed by time, where each element is a small Hash. And in its simplicity this is a revolution in the context of modeling for Redis.

## Memory usage

The above use case is not just a matter of a more solid pattern. The memory cost of the Stream solution is so different compared to the old approach of having a Sorted Set + Hash for every object that makes certain things that were not viable, now perfectly fine.

Those are the numbers for storing one million of matches in the configurations exposed previously:

Sorted Set + Hash memory usage = 220 MB (242 RSS)
Stream memory usage                  = 16.8 MB (18.11 RSS)

This is more than an order of magnitude difference (13 times difference exactly), and it means that use cases that yesterday were too costly for in-memory now are perfectly viable. The magic is all in the representation of Redis Streams: the macro nodes can contain several elements that are encoded in a data structure called listpack in a very compact way. Listpacks will take care, for instance, to encode integers in binary form even if they are semantically strings. On top of that, we then apply delta compression and same-fields compression. Yet we are able to seek by ID or time because such macro nodes are linked in the radix tree, which was also designed to use little memory. All these things together account for the low memory usage, but the interesting part is that semantically the user does not see any of the implementation details making Streams efficient.

Now let’s do some simple math. If I can store 1 million entries in about 18 MB of memory, I can store 10 millions in 180 MB, and 100 millions in 1.8 GB. With just 18 GB of memory I can have 1 billion items.

## Time series

One important thing to note is, in my opinion, how the usage above where we used a Stream to represent a tennis match was semantically *very different* than using a Redis Stream for a time series. Yes, logically we are still logging some kind of event, but one fundamental difference is that in one case we use the logging and the creation of entries in order to render objects. While in the case of time series, we are just metering something happening externally, that does not really represent an object. You may think that this difference is trivial but it’s not. It is important for Redis users to build the idea that Redis Streams can be used in order to create small objects that have a total order, and assign IDs to such objects.

However even the most basic use case of time series is, obviously, a huge one here, because before Streams Redis was a bit hopeless in regard to such use case. The memory characteristics and flexibility of streams, plus the ability to have capped streams (see the XADD options), is a very important tool in the hands of the developer.

## Conclusions

Streams are flexible and have lots of use cases, however I wanted to take this blog post short to make sure that there is a clear take-home message in the above examples and analysis of the memory usage. Perhaps this was already obvious to many readers, but talking with people in the last months gave me the feeling that there was a strong association between Streams and the streaming use case, like if the data structure was only good at that. That’s not the case :-)
&lt;/pre&gt;&lt;/article&gt;
&lt;noscript readability=&quot;1.15625&quot;&gt;
&lt;p&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;</description>
<pubDate>Fri, 22 Mar 2019 15:13:21 +0000</pubDate>
<dc:creator>itamarhaber</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://antirez.com/news/128</dc:identifier>
</item>
<item>
<title>Defining a Distinguished Engineer</title>
<link>https://blog.jessfraz.com/post/defining-a-distinguished-enginner/</link>
<guid isPermaLink="true" >https://blog.jessfraz.com/post/defining-a-distinguished-enginner/</guid>
<description>&lt;h2&gt;Defining a Distinguished Engineer&lt;/h2&gt;&lt;p&gt;Thursday, March 21, 2019&lt;/p&gt;
&lt;p&gt;I learned a lot about myself and the way big companies are organized over the past year or so. I had mentioned a bit in a &lt;a href=&quot;https://blog.jessfraz.com/post/government-medicine-capitalism/&quot;&gt;previous blog post&lt;/a&gt; and &lt;a href=&quot;https://weirdtrickmafia.fm/post/pilot/&quot;&gt;podcast&lt;/a&gt; about “the N + 1 shithead problem” (from &lt;a href=&quot;https://www.youtube.com/watch?v=1KeYzjILqDo&quot;&gt;Bryan Cantrill’s talk on leadership&lt;/a&gt;). To reiterate, the “N +1 shithead problem” occurs when you are demotivated by seeing people who are a level above you behave poorly, or more bluntly when they behave like a shithead. I know from experience what a huge demotivator this is and after talking to several other folks I realized this is quite common.&lt;/p&gt;
&lt;p&gt;When faced with this demotivator, I found myself thinking “why would I want to be at their level, when once I get there I’ll just be one amongst the dipshits.” It’s a horrible feeling to have and I’d love to have a model that resembles what I think of as a distinguished engineer or technical fellow.&lt;/p&gt;
&lt;p&gt;In this post I will define what it means to me to be a distinguished engineer or technical fellow and maybe others that agree will modify their ladders to incentivize people to resemble these qualities.&lt;/p&gt;
&lt;h2 id=&quot;technical-leader&quot;&gt;Technical Leader&lt;/h2&gt;
&lt;p&gt;The first thing people think of when they think of a distinguished engineer is that they are a technical leader. I fully agree. A technical leader should understand all parts of a system. They can also be dropped into a new system and pick up the way it is architected and designed with relative ease. I think this is an important distinction to make. It’s good to be an expert in a field, but only being an expert is limiting. It’s also important to understand the full picture and that takes general knowledge. I think having a general knowledge of things outside your area of expertise is key if you choose to gain expertise in something.&lt;/p&gt;
&lt;h3 id=&quot;value-learning&quot;&gt;Value learning&lt;/h3&gt;
&lt;p&gt;A technical leader should always realize that there is more to learn. One cannot be an expert in everything and you can have a general knowledge of most things without fully understanding the details within. A technical leader should always strive to continue to learn and persuade others to continue to learn as well.&lt;/p&gt;
&lt;h3 id=&quot;empower-others&quot;&gt;Empower others&lt;/h3&gt;
&lt;p&gt;A technical leader should build up others and empower their colleagues to do things that are more challenging than what they might think they are capable of. This is key for growing other members of an organization. I personally believe you don’t need a high title to take on a hard task, you just need the support and faith that you are capable of handling it. That support should come from the distinguished engineer and be reflected in their behavior towards others.&lt;/p&gt;
&lt;p&gt;A technical leader should also make time for growing and mentoring others. They should be approachable and communicate with their peers and colleagues in a way that makes them approachable. They should welcome newcomers to the team and treat them as peers from day one.&lt;/p&gt;
&lt;h3 id=&quot;give-constructive-technical-criticism&quot;&gt;Give constructive technical criticism&lt;/h3&gt;
&lt;p&gt;A distinguished engineer should never tear others down but they should be capable of giving constructive criticism on technical work. This does not mean finding something wrong just to prove their brilliance; no, that would make them the brilliant jerk. Constructive criticism means teaching others to make their work better when there are problems, while also encouraging them to iterate and empowering them to succeed.&lt;/p&gt;
&lt;h3 id=&quot;have-strong-opinions-loosely-held&quot;&gt;Have strong opinions loosely held&lt;/h3&gt;
&lt;p&gt;A technical leader should be able to have strong opinions loosely held on designs and architecture. They do not need to have opinions on everything, that would be pedantic. Technical leaders should be able to use their experience to help others succeed, while also empowering others to own solutions. Technical leaders should not pass down solutions to problems but allow others to learn by letting others come up with solutions themselves. This is where good constructive criticism (from above) can come into play.&lt;/p&gt;
&lt;h3 id=&quot;great-communicator-and-bridge&quot;&gt;Great communicator and bridge&lt;/h3&gt;
&lt;p&gt;A technical leader should have strong communication skills and be able to articulate the “why” of a problem as well as articulate the technical details of designs. They should never communicate in a derogatory manner. They should always communicate to others as peers and colleagues.&lt;/p&gt;
&lt;p&gt;At times, technical leaders will need to act as a bridge between teams. It is really important to be able to clearly communicate then as well as always.&lt;/p&gt;
&lt;h3 id=&quot;humility-and-empathy&quot;&gt;Humility and empathy&lt;/h3&gt;
&lt;p&gt;A technical leader should not be driven by ego but by a constant urge to learn and grow both themselves and their colleagues. They should have empathy for others and portray kindness towards their peers and colleagues.&lt;/p&gt;
&lt;h3 id=&quot;prioritize-shipping-and-decisiveness&quot;&gt;Prioritize shipping and decisiveness&lt;/h3&gt;
&lt;p&gt;A technical leader should value shipping and decisiveness. They should not be susceptible to analysis paralysis. At the end of the day most people have jobs to get things out the door and this should be a priority. Of course, shipping should not come with the trade off of burning out a team or setting the company on fire.&lt;/p&gt;
&lt;h3 id=&quot;customer-focused&quot;&gt;Customer focused&lt;/h3&gt;
&lt;p&gt;Technical leaders should always seek feedback from their customers. This might be the internal customers of their infrastructure or external customers if they are on a product team. The best technical leaders are capable of empathizing with customers and iterating quickly on customer feedback.&lt;/p&gt;
&lt;h3 id=&quot;build-resilient-systems&quot;&gt;Build resilient systems&lt;/h3&gt;
&lt;p&gt;A part of being a technical leader is having the experience of building multiple systems in the past. Distinguished engineers should be able to anticipate various failures from their past experiences and build systems that will not create the same failures. Of course no system is perfect so they should be able to learn from the failures they cannot anticipate as well. This is a cycle that they can then use when building the next system.&lt;/p&gt;
&lt;h3 id=&quot;value-quality-performance-and-security&quot;&gt;Value quality, performance, and security&lt;/h3&gt;
&lt;p&gt;Great technical leaders value quality, performance, and security in what they build. They stay up to date on advancements and research in technology so that they might be able to use new techniques for bettering their solutions. Technical leaders should also build with respect for users and their privacy.&lt;/p&gt;
&lt;h3 id=&quot;value-maintainability&quot;&gt;Value maintainability&lt;/h3&gt;
&lt;p&gt;Technical leaders should value writing code that is easy to maintain and easy to understand. They should value unit and integration tests as well as making sure if a bug is fixed it has a test to make sure there is not a regression. Technical leaders should use code comments, not as a garnish, but to denote things a reader would need to know. This could be details of a code section that fixes a specific bug or maybe reasoning behind why something is written a certain way. Documenting context is super valuable and helpful for maintainability.&lt;/p&gt;

&lt;p&gt;Good technical leaders are also leaders in the outside communities. This can include giving talks on various things they have built as well as mentoring others in the community or the workplace.&lt;/p&gt;

&lt;p&gt;If you silo yourself to only learning within your company, you are missing out on a world of experiences and expertise different than yours from the external community. Technical leaders realize this and place importance on learning from the larger world of computing than just their solo.&lt;/p&gt;
&lt;h3 id=&quot;value-listening-and-be-open-to-feedback&quot;&gt;Value listening and be open to feedback&lt;/h3&gt;
&lt;p&gt;By gaining feedback and making yourself visible to an external community, leaders avoid a dunning-kruger like effect of only growing inside an echo chamber. It is always valuable to see where the rest of the industry is focusing and how technical leaders at other companies are solving problems. Technical leaders realize that there is much to learn from people with different experiences than their own. They should always be open to listening to others.&lt;/p&gt;
&lt;h3 id=&quot;humility&quot;&gt;Humility&lt;/h3&gt;
&lt;p&gt;Technical leaders should always remain humble and modest. The best technical leaders know that it’s not possible for them to know &lt;em&gt;everything&lt;/em&gt; and will prioritize keeping an open mind to always be learning.&lt;/p&gt;
&lt;h3 id=&quot;call-upon-other-experts&quot;&gt;Call upon other experts&lt;/h3&gt;
&lt;p&gt;The best technical leaders know when they need to call on experts in specific areas for help or feedback on certain designs or architecture. By participating in the external community, leaders form strong networks and bonds with fellow engineers they can call on when they need them. Technical leaders should always be eager to use these relationships when they need them or introduce others to these folks if they could use their expertise.&lt;/p&gt;
&lt;h3 id=&quot;value-research&quot;&gt;Value research&lt;/h3&gt;
&lt;p&gt;Along with being able to call upon other experts, technical leaders should value well researched solutions. They should strive to learn from prior art.&lt;/p&gt;
&lt;h2 id=&quot;have-fun&quot;&gt;Have fun&lt;/h2&gt;
&lt;p&gt;Always make sure to have fun and not take yourself too seriously!&lt;/p&gt;
&lt;p&gt;These are just a few of the things I think define a strong technical leader and engineer. I am sure I will grow this list as I personally grow myself every day.&lt;/p&gt;
&lt;p&gt;Most importantly you must actually &lt;em&gt;do&lt;/em&gt; these things. Actions speak louder than words.&lt;/p&gt;
</description>
<pubDate>Fri, 22 Mar 2019 15:06:54 +0000</pubDate>
<dc:creator>johns</dc:creator>
<og:title>Defining a Distinguished Engineer</og:title>
<og:url>https://blog.jessfraz.com/post/defining-a-distinguished-engineer/</og:url>
<og:image>/img/share.png</og:image>
<og:description>A summary of how I would define a distinguished engineer or technical fellow.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jessfraz.com/post/defining-a-distinguished-engineer/</dc:identifier>
</item>
<item>
<title>The Boombox Incident: removing bald people from photos</title>
<link>https://matthewbilyeu.com/blog/2019-03-21/the-boombox-incident</link>
<guid isPermaLink="true" >https://matthewbilyeu.com/blog/2019-03-21/the-boombox-incident</guid>
<description>&lt;p&gt;&lt;span&gt;Written by&lt;/span&gt; Matt Bilyeu&lt;br/&gt;&lt;span&gt;on &lt;/span&gt;&lt;time datetime=&quot;2019-03-21 20:00:00 -0400&quot;&gt;March 21, 2019&lt;/time&gt;&lt;/p&gt;


&lt;p&gt;In &lt;em&gt;Seinfeld&lt;/em&gt; episode &lt;a href=&quot;https://www.youtube.com/watch?v=pSB3HdmLcY4&quot;&gt;#163&lt;/a&gt;, “The Slicer”, George has just landed a cushy job at Kruger Industrial Smoothing, when he sees himself in the background of a family photo on his new boss’s desk.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://matthewbilyeu.com/blog/assets/boombox/kruger-family-untouched.png&quot; alt=&quot;kruger-family-untouched&quot;/&gt;&lt;/p&gt;
&lt;p&gt;George is instantly reminded of the “boombox incident”, in which he had, years earlier, embarrassed himself in front of the Kruger family.&lt;/p&gt;
&lt;p&gt;Later, upon hearing about the photo, Kramer suggests that George sneak the photo off to have himself airbrushed out of the picture, so that Kruger doesn’t remember the incident and fire George.&lt;/p&gt;
&lt;p&gt;George enacts the plan and things are going fine until he receives the touched-up photo: the clerk has removed Kruger from the family photo instead of George.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;kruger_family_airbrushed&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/kruger-family-airbrushed.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The clerk mistook Kruger in the photo for George, since in the picture George had hair but Kruger was bald. Removing the only bald person from the photo was a pretty reasonable thing for the photo store clerk to do. I figured this is something that photo editors have to do frequently, so I decided to automate it.&lt;/p&gt;
&lt;p&gt;The process for removing bald people from photos is as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;detect faces in an image using off-the-shelf tools&lt;/li&gt;
&lt;li&gt;for each face
&lt;ul&gt;&lt;li&gt;roughly locate the forehead/hair region&lt;/li&gt;
&lt;li&gt;get the dominant color of the face and of the top of the head&lt;/li&gt;
&lt;li&gt;compare the two colors&lt;/li&gt;
&lt;li&gt;consider a bald subject to be one where the two colors are very close, i.e. the top of the head is the same color as the face (skin tone)&lt;/li&gt;
&lt;li&gt;attempt to inpaint the region containing the bald individual&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;face-detection&quot;&gt;Face detection&lt;/h2&gt;
&lt;p&gt;Face detection in OpenCV can be accomplished with a &lt;a href=&quot;https://docs.opencv.org/3.0-beta/doc/tutorials/objdetect/cascade_classifier/cascade_classifier.html&quot;&gt;cascade classifier&lt;/a&gt;. A pre-trained model from the &lt;a href=&quot;https://github.com/opencv/opencv/tree/master/data/haarcascades&quot;&gt;OpenCV data repository&lt;/a&gt; is made available. The underlying algorithm at play is the &lt;a href=&quot;frameworkhttps://en.wikipedia.org/wiki/Viola%E2%80%93Jones_object_detection_framework#Cascade_architecture&quot;&gt;Viola-Jones object detection framework&lt;/a&gt;, which uses a coarse-to-fine cascade of Haar-feature matching to identify human faces.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;haar_features&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/haar.png&quot;/&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;17&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;29&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;face_cascade&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CascadeClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./haarcascade_frontalface_default.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;detect_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cvtColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;min_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;faces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_cascade&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detectMultiScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scaleFactor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minNeighbors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CV_HAAR_SCALE_IMAGE&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faces&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g_and_k_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./input_images/george-and-kruger.jpg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_and_k_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;detect_faces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_and_k_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt=&quot;george_and_kruger_detection&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/george-and-kruger-detection.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;seinfeld_detection&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/seinfeld-detection.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;forehead-region&quot;&gt;Forehead region&lt;/h2&gt;
&lt;p&gt;Once the faces in a photo have been located, we need to examine just above each face region to determine whether the person is bald or has hair. This approach assumes, of course, that the faces are oriented vertically. A better method might be to locate the eyes and/or mouth using other cascade classifiers and then approximate the forehead position from there.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;11.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forehead_region&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_loc&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fore_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.33&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fore_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fore_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fore_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fore_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fore_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fore_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fore_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fore_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
               &lt;span class=&quot;n&quot;&gt;fore_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fore_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fore_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt=&quot;elaine_forehead_detail&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/elaine-forehead-detail.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;dominant-color&quot;&gt;Dominant color&lt;/h2&gt;
&lt;p&gt;The algorithm presented here compares the color in the forehead/top-of-head region to that of the face region. To find the dominant color, we can use &lt;a href=&quot;https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.html&quot;&gt;k-means clustering&lt;/a&gt;. This quantizes all pixel BGR values to be one of &lt;em&gt;k&lt;/em&gt; colors, and we chose the most frequent. Simply averaging all colors in the image can also work well (and is faster) if the region is tightly bound.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dominant_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# via https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_ml/py_kmeans/py_kmeans_opencv/py_kmeans_opencv.html
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# define criteria, number of clusters(K) and apply kmeans()
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TERM_CRITERIA_EPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TERM_CRITERIA_MAX_ITER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kmeans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;criteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KMEANS_RANDOM_CENTERS&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
    &lt;span class=&quot;c1&quot;&gt;# via https://stackoverflow.com/a/43111221
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;return_counts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dominant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dominant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;elaine_face_color&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/elaine-face-color.png&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;elaine_hair_color&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/elaine-hair-color.png&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;bald&quot;&gt;Bald?&lt;/h2&gt;
&lt;p&gt;With the dominant color for each subject’s face and hair regions obtained, we can compare the values to determine baldness. &lt;a href=&quot;http://hanzratech.in/2015/01/16/color-difference-between-2-colors-using-python.html&quot;&gt;Comparing colors programatically&lt;/a&gt; is not as simple as taking the Euclidean distance of the BGR color vectors, because the resultant differences don’t correspond well to human color difference perception. A better distance metric is &lt;a href=&quot;https://en.wikipedia.org/wiki/Color_difference#CIELAB_.CE.94E.2A&quot;&gt;ΔE* in the CIE Lab color space&lt;/a&gt;. I used the &lt;a href=&quot;https://python-colormath.readthedocs.io/en/latest/&quot;&gt;colormath&lt;/a&gt; package to perform those distance calculations.&lt;/p&gt;
&lt;p&gt;We compare the color difference to a threshold, and this heuristic is the baldness detection. It probably gives false positives for subjects with hair color close to their skin tone.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;13.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;22&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# via http://hanzratech.in/2015/01/16/color-difference-between-2-colors-using-python.html
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;colormath.color_objects&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sRGBColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabColor&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;colormath.color_conversions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convert_color&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;colormath.color_diff&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta_e_cie2000&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_bald&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;face_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_region&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;forehead_img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forehead_region&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;face_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dominant_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;face_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;forehead_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dominant_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forehead_img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;face_rgb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sRGBColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;face_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fore_rgb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sRGBColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forehead_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forehead_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forehead_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta_e_cie2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;convert_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;face_rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;convert_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fore_rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LabColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thresh&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;img alt=&quot;low_delta&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/low-delta.png&quot;/&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt=&quot;high_delta&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/high-delta.png&quot;/&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;img alt=&quot;final_detection_0&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/final-detection-0.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;final_detection_1&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/final-detection-1.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;final_detection_2&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/final-detection-2.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;inpainting&quot;&gt;Inpainting&lt;/h2&gt;
&lt;p&gt;Now that bald individuals have been identified, they can be removed from the image. OpenCV has an &lt;a href=&quot;https://docs.opencv.org/3.3.1/df/d3d/tutorial_py_inpainting.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inpainting&lt;/code&gt;&lt;/a&gt; function, which is really only meant for removing small strokes from an image. The results of applying it here are…not ideal.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;18&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;31&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rm_bald&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bald_locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uint8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inpaint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INPAINT_TELEA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt=&quot;inpainted_result&quot; src=&quot;https://matthewbilyeu.com/blog/assets/boombox/inpainted-result.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
</description>
<pubDate>Fri, 22 Mar 2019 12:47:20 +0000</pubDate>
<dc:creator>mbil</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://matthewbilyeu.com/blog/2019-03-21/the-boombox-incident</dc:identifier>
</item>
<item>
<title>South Korea accepts geothermal plant probably caused destructive quake</title>
<link>https://www.nature.com/articles/d41586-019-00959-4</link>
<guid isPermaLink="true" >https://www.nature.com/articles/d41586-019-00959-4</guid>
<description>&lt;div class=&quot;content position-relative cleared clear mq1200-padded&quot; data-component=&quot;article-container&quot; role=&quot;main&quot;&gt;
&lt;header class=&quot;article-item__header clear cleared pull--both&quot;&gt;&lt;div class=&quot;article__type&quot;&gt;NEWS
&lt;div class=&quot;ml10 article__date&quot;&gt;&lt;time itemprop=&quot;datePublished&quot;&gt;22 March 2019&lt;/time&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;article-item__teaser-text serif&quot;&gt;The nation’s energy ministry expressed ‘deep regret’, and said it would dismantle the experimental plant.&lt;/div&gt;
&lt;/header&gt;
&lt;div class=&quot;bordered-container clear cleared pull--both&quot;&gt;
&lt;div id=&quot;author-affiliations&quot; class=&quot;tab-group text14&quot; role=&quot;tablist&quot; data-test=&quot;author-affiliations&quot; data-tab-group=&quot;&quot;&gt;
&lt;div class=&quot;cleared&quot;&gt;
&lt;div id=&quot;author-affiliation-news-0&quot; class=&quot;tab-box js-box-wrapper&quot;&gt;
&lt;h3 id=&quot;author-affiliation-news-0-head&quot; data-track=&quot;click&quot; data-track-label=&quot;view author info&quot; class=&quot;sans-serif strong tab tab-skin&quot; role=&quot;tab&quot; aria-controls=&quot;author-affiliation-news-0-content&quot; data-tooltip=&quot;Show author information&quot;&gt;Mark Zastrow&lt;/h3&gt;
&lt;div id=&quot;author-affiliation-news-0-content&quot; class=&quot;tab-content pin-right grid grid-12 last&quot; role=&quot;tabpanel&quot;&gt;
&lt;div class=&quot;pa10&quot; aria-labelledby=&quot;author-affiliation-news-0-head&quot;&gt;
&lt;div class=&quot;clear cleared&quot;&gt;
&lt;div class=&quot;align-left&quot;&gt;
&lt;h4 class=&quot;sans-serif&quot;&gt;Search for this author in:&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;align-left&quot;&gt;
&lt;div class=&quot;article__body serif cleared&quot;&gt;
&lt;div class=&quot;embed intensity--high&quot;&gt;&lt;img class=&quot;figure__image&quot; alt=&quot;Bricks and debris from damaged buildings lie on the ground in front of a damaged car in Pohang, South Korea&quot; data-src=&quot;//media.nature.com/w800/magazine-assets/d41586-019-00959-4/d41586-019-00959-4_16566008.jpg&quot;/&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;&quot; alt=&quot;Bricks and debris from damaged buildings lie on the ground in front of a damaged car in Pohang, South Korea&quot; src=&quot;https://media.nature.com/w800/magazine-assets/d41586-019-00959-4/d41586-019-00959-4_16566008.jpg&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p class=&quot;figure__caption sans-serif&quot;&gt;&lt;span class=&quot;mr10&quot;&gt;A 2017 earthquake in Pohang, South Korea has been linked to a geothermal plant.&lt;/span&gt;&lt;span&gt;Credit: Yonhap/EPA-EFE/Shutterstock&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A South Korean government panel has concluded that a magnitude-5.4 earthquake that struck the city of Pohang on 15 November 2017 was probably caused by an experimental geothermal power plant. The panel was convened under presidential orders and released its findings on 20 March.&lt;/p&gt;
&lt;p&gt;Unlike conventional geothermal plants, which extract energy directly from hot underground water or rock, the Pohang power plant injected fluid at high pressure into the ground to fracture the rock and release heat — a technology known as an enhanced geothermal system. This pressure caused small earthquakes that affected nearby faults, and eventually triggered the bigger 2017 quake, the panel found.&lt;/p&gt;
&lt;p&gt;The quake was the nation’s second strongest and its most destructive on modern record — it injured 135 people and caused an estimated 300 billion won (US$290 million) in damage. The nation’s Ministry of Trade, Industry and Energy, which had provided funding for the plant, said in a statement that it accepts the panel’s findings and “expresses deep regret” to the citizens of Pohang who were harmed by the event.&lt;/p&gt;
&lt;p&gt;The ministry announced that it would dismantle the power plant, restore the site to its original condition, and invest 225.7 billion won to repair infrastructure in the hardest-hit area. The results support the findings of a pair of studies published in &lt;em&gt;Science&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;https://www.nature.com/articles/d41586-019-00959-4#ref-CR1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup&gt;&lt;a href=&quot;https://www.nature.com/articles/d41586-019-00959-4#ref-CR2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; last year, which suggested the plant as a likely cause of the quake.&lt;/p&gt;
&lt;p&gt;Earthquakes have been linked to geothermal power plant in other parts of the world. But the Pohang quake is by far the strongest ever tied to this kind of plant — 1,000 times mightier than a magnitude-3.4 quake triggered by a plant in Basel, Switzerland, in 2006.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;emphasis&quot;&gt;doi: 10.1038/d41586-019-00959-4&lt;/div&gt;

&lt;div id=&quot;references&quot; class=&quot;references&quot; data-toggle=&quot;anchor-links-section&quot; data-label=&quot;References&quot; data-concertina=&quot;true&quot;&gt;
&lt;section aria-labelledby=&quot;Bib1&quot;&gt;&lt;div class=&quot;serif article-section js-article-section cleared clear&quot; id=&quot;Bib1-section&quot;&gt;
&lt;h2 class=&quot;js-section-title section-title strong position-relative tighten-line-height background-gray-light pt20 pb6 pl0 pr20 standard-space-below small-space-above mq640-pt10 mq640-pb10 mq640-pl20 mq640-mt0 mq640-ml-20 mq640-mr-20 extend-left&quot; id=&quot;Bib1&quot;&gt;References&lt;/h2&gt;
&lt;div class=&quot;pl20 mq875-pl0 js-collapsible-section&quot; id=&quot;Bib1-content&quot;&gt;
&lt;div data-container-section=&quot;references&quot;&gt;
&lt;ol class=&quot;clean-list ma0 standard-space-below indented-list&quot; data-test=&quot;references-list&quot;&gt;&lt;li class=&quot;small-space-below border-gray-medium border-bottom-1 position-relative js-ref-item&quot; itemprop=&quot;citation&quot; itemscope=&quot;itemscope&quot; itemtype=&quot;http://schema.org/Article&quot; data-test=&quot;citation&quot;&gt;&lt;span class=&quot;indented-counter serif h2 tighten-line-height text-right position-absolute grade-c-hide&quot;&gt;1.&lt;/span&gt;
&lt;p class=&quot;tiny-space-below&quot; id=&quot;ref-CR1&quot;&gt;Grigoli, F. &lt;em&gt;et al.&lt;/em&gt; &lt;em&gt;Science&lt;/em&gt; &lt;strong&gt;360&lt;/strong&gt;, 1003–1006 (2018).&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;small-space-below border-gray-medium border-bottom-1 position-relative js-ref-item&quot; itemprop=&quot;citation&quot; itemscope=&quot;itemscope&quot; itemtype=&quot;http://schema.org/Article&quot; data-test=&quot;citation&quot;&gt;&lt;span class=&quot;indented-counter serif h2 tighten-line-height text-right position-absolute grade-c-hide&quot;&gt;2.&lt;/span&gt;
&lt;p class=&quot;tiny-space-below&quot; id=&quot;ref-CR2&quot;&gt;Kim, K.-H. &lt;em&gt;et al.&lt;/em&gt; &lt;em&gt;Science&lt;/em&gt; &lt;strong&gt;360&lt;/strong&gt;, 1007–1009 (2018).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;hide-print text-right&quot;&gt;&lt;a href=&quot;https://www.nature.com/articles/d41586-019-00959-4-references.ris&quot; class=&quot;text14 sans-serif strong&quot; data-track=&quot;click&quot; data-track-action=&quot;download citation references&quot; data-track-category=&quot;article body&quot; data-track-label=&quot;link&quot;&gt;Download references&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;/div&gt;

&lt;aside class=&quot;c-latest-content mt40 hide-print&quot; data-simple-tab=&quot;&quot; data-tab-group=&quot;&quot; data-component-id=&quot;latest-news&quot; data-track=&quot;in-view&quot; data-track-action=&quot;in-view&quot; data-track-category=&quot;latest content&quot; data-track-label=&quot;visible&quot;&gt;&lt;div id=&quot;latest-content&quot; role=&quot;tablist&quot;&gt;
&lt;p class=&quot;serif strong&quot;&gt;Latest on:&lt;/p&gt;

&lt;/div&gt;
&lt;/aside&gt;&lt;div class=&quot;nature-briefing nature-briefing--article cleared hide-print&quot; data-component-id=&quot;nature-briefing-box&quot; data-track=&quot;in-view&quot; data-track-action=&quot;in-view&quot; data-track-category=&quot;nature briefing&quot; data-track-label=&quot;box visible&quot;&gt;
&lt;header class=&quot;nature-briefing__header&quot;&gt;&lt;span class=&quot;visually-hidden&quot;&gt;Nature Briefing&lt;/span&gt;&lt;/header&gt;&lt;div class=&quot;pa10 pt20&quot;&gt;
&lt;p class=&quot;serif nature-briefing__slogan mr30&quot;&gt;&lt;strong&gt;Sign up for the daily &lt;span class=&quot;emphasis&quot;&gt;Nature Briefing&lt;/span&gt; email newsletter&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&quot;sans-serif nature-briefing__standfirst mr30&quot;&gt;Stay up to date with what matters in science and why, handpicked from &lt;span class=&quot;emphasis&quot;&gt;Nature&lt;/span&gt; and other publications worldwide.&lt;/p&gt;
&lt;p class=&quot;cleared&quot;&gt;&lt;a class=&quot;nature-briefing__link&quot; data-track-category=&quot;nature briefing&quot; data-track=&quot;click&quot; data-track-label=&quot;nature briefing article link&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot; href=&quot;https://www.nature.com/briefing/signup/&quot;&gt;Sign Up&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;aside class=&quot;article__aside align-right&quot;&gt;&lt;div class=&quot;related-content shrink--aside hide-print&quot;&gt;
&lt;h3 class=&quot;aside__title sans-serif&quot;&gt;Related Articles&lt;/h3&gt;
&lt;/div&gt;

&lt;div id=&quot;div-gpt-ad-right-2&quot; class=&quot;div-gpt-ad advert medium-rectangle js-ad text-center hide-print grade-c-hide&quot; data-gpt-unitpath=&quot;/285/nature.com/article&quot; data-gpt-sizes=&quot;300x250&quot; data-gpt-targeting=&quot;pos=right;artid=/articles/d41586-019-00959-4;path=/articles/d41586-019-00959-4&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;a href=&quot;https://pubads.g.doubleclick.net/gampad/jump?iu=/285/nature.com/article&amp;amp;sz=300x250&amp;amp;c=-20867124&amp;amp;t=pos%3Dright%26artid%3D/articles/d41586-019-00959-4&quot;&gt;&lt;img data-test=&quot;gpt-advert-fallback-img&quot; src=&quot;https://pubads.g.doubleclick.net/gampad/ad?iu=/285/nature.com/article&amp;amp;sz=300x250&amp;amp;c=-20867124&amp;amp;t=pos%3Dright%26artid%3D/articles/d41586-019-00959-4&quot; alt=&quot;Advertisement&quot; width=&quot;300&quot; height=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;
&lt;/aside&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 22 Mar 2019 12:32:53 +0000</pubDate>
<dc:creator>bookofjoe</dc:creator>
<og:url>http://www.nature.com/articles/d41586-019-00959-4</og:url>
<og:type>article</og:type>
<og:title>South Korea accepts geothermal plant probably caused destructive quake</og:title>
<og:description>The nation’s energy ministry expressed ‘deep regret’, and said it would dismantle the experimental plant.</og:description>
<og:image>https://media.nature.com/lw1024/magazine-assets/d41586-019-00959-4/d41586-019-00959-4_16566004.jpg</og:image>
<dc:language>EN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nature.com/articles/d41586-019-00959-4</dc:identifier>
</item>
<item>
<title>At $75K, housing a prisoner in California now costs more than a year at Harvard</title>
<link>https://www.latimes.com/local/lanow/la-me-prison-costs-20170604-htmlstory.html</link>
<guid isPermaLink="true" >https://www.latimes.com/local/lanow/la-me-prison-costs-20170604-htmlstory.html</guid>
<description>&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;The cost of imprisoning each of California’s 130,000 inmates is expected to reach a record $75,560 in the next year&lt;/p&gt;
&lt;/div&gt;
&lt;hr class=&quot;diamondy&quot;/&gt;&lt;img src=&quot;http://www.trbimg.com/img-5681c657/turbine/la-me-san-quentin-death-row-20151106-pg-003/750/750x422&quot; alt=&quot;&quot; title=&quot;&quot;/&gt; A guard watches prisoners being escorted across the yard at San Quentin State Prison. &lt;span class=&quot;credits&quot;&gt;Mark Boster / Los Angeles Times&lt;/span&gt;

&lt;p&gt;
&lt;h3 class=&quot;benton-title timeline-title&quot;&gt;More than tuition at Harvard University&lt;/h3&gt;
&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p&gt;That’s enough to cover the annual cost of attending Harvard University and still have plenty left over for pizza and beer&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;Gov. Jerry Brown’s spending plan for the fiscal year that starts July 1 includes a record $11.4 billion for the corrections department while also predicting that there will be 11,500 fewer inmates in four years because voters in November approved earlier releases for many inmates.&lt;/p&gt;
&lt;/div&gt;
&lt;img src=&quot;http://www.trbimg.com/img-55e627e9/turbine/la-me-solitary-confinement-prison-pictures-007/800/800x450&quot; alt=&quot;&quot; title=&quot;&quot;/&gt; California State Prison in Corcoran. &lt;span class=&quot;credits&quot;&gt;(Barbara Davidson / Los Angeles Times)&lt;/span&gt;
&lt;div&gt;
&lt;p class=&quot;date-title&quot;&gt;A PATTERN CONTINUES&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3 class=&quot;benton-title timeline-title&quot;&gt;Cost per prisoner has doubled since 2005&lt;/h3&gt;
&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;The price for each inmate has doubled since 2005, even as court orders related to overcrowding have reduced the population by about one-quarter. Salaries and benefits for prison guards and medical providers drove much of the increase.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;The result is a per-inmate cost that is the nation’s highest — and $2,000 above tuition, fees, room and board, and other expenses to attend Harvard.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;Since 2015, California’s per-inmate costs have surged nearly $10,000, or about 13%. New York is a distant second in overall costs at about $69,000.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;p&gt;Critics say with fewer inmates, the costs should be falling.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;p&gt;“Now that we’re incarcerating less, we haven’t ramped the system back down,” said Chris Hoene, executive director of the left-leaning California Budget &amp;amp; Policy Center.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;For example, the corrections department has one employee for every two inmates, compared with one employee for roughly every four inmates in 1994.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;p class=&quot;date-title&quot;&gt;why does it cost so much?&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3 class=&quot;benton-title timeline-title&quot;&gt;Costs rising even as prison population declines&lt;/h3&gt;
&lt;/p&gt;
&lt;div readability=&quot;13&quot;&gt;
&lt;p&gt;California was sued over prison overcrowding, and to comply with a federal court-imposed population cap, the Brown administration now keeps most lower-level offenders in county jails instead of state prisons. Additionally, voters in 2014 reduced penalties for drug and property crimes and last fall approved the earlier releases.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;State Sen. Jim Nielsen (R-Gerber) said reformers falsely promised a “prison dividend” from savings related to the changes. Instead, there’s now an uptick in many crimes and he’s worried it will lead to an influx of new inmates that will cost more to house.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;p&gt;Joan Petersilia, co-director of the Stanford Criminal Justice Center, said it was “highly predictable” that per-inmate costs would increase even as the population decreased.&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;p&gt;“We released all the low-risk, kind of low-need, and we kept in the high-risk, high-need,” she said.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ALSO&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.latimes.com/local/lanow/la-me-ln-lethal-injection-suit-20170516-story.html&quot; target=&quot;_blank&quot;&gt;Judge throws out lawsuit challenging California's execution law&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.latimes.com/opinion/op-ed/la-oe-pfaff-why-prison-reform-isnt-working-20170514-story.html&quot; target=&quot;_blank&quot;&gt;Op-Ed: The never-ending 'Willie Horton effect' is keeping prisons too full for America's good&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.latimes.com/politics/la-pol-sac-prop-57-prison-programs-20170420-htmlstory.html&quot; target=&quot;_blank&quot;&gt;'I took someone’s life — now I am giving back': In California's prisons, inmates teach each other how to start over&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 22 Mar 2019 07:26:29 +0000</pubDate>
<dc:creator>wallace_f</dc:creator>
<og:url>https://www.latimes.com/local/lanow/la-me-prison-costs-20170604-htmlstory.html</og:url>
<og:title>At $75,560, housing a prisoner in California now costs more than a year at Harvard</og:title>
<og:image>https://www.latimes.com/resizer/qELXxewstde0a2rZAjyfkM1FnIA=/1200x0/arc-anglerfish-arc2-prod-tronc.s3.amazonaws.com/public/7IFCMDT5WNCK3NT3SUGEKY7QTI.jpg</og:image>
<og:description>At $75,560, housing a prisoner in California now cost more than a year at Harvard</og:description>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.latimes.com/local/lanow/la-me-prison-costs-20170604-htmlstory.html</dc:identifier>
</item>
<item>
<title>Quake II RTX: Re-Engineering a Classic with Ray Tracing Effects on Vulkan</title>
<link>https://www.nvidia.com/en-us/geforce/news/quake-ii-rtx-ray-tracing-vulkan-vkray-geforce-rtx/</link>
<guid isPermaLink="true" >https://www.nvidia.com/en-us/geforce/news/quake-ii-rtx-ray-tracing-vulkan-vkray-geforce-rtx/</guid>
<description>&lt;p&gt;id Software’s &lt;em&gt;Quake II&lt;/em&gt; launched in 1997, bringing gamers a new single-player campaign, a long-awaited, addictive multiplayer mode that we played for years on pitifully-slow 56K modems, and a jaw-dropping engine that supported 3DFX GPU acceleration out of the box. Colored lighting, dynamic visual effects, and much more, all running at a glorious 640x480, or perhaps 800x600 if you had top-of-the-line hardware.&lt;/p&gt;
&lt;p&gt;Fast forward to 2001, when id Software made the &lt;em&gt;Quake II&lt;/em&gt; engine &lt;a href=&quot;https://github.com/id-Software/Quake-2&quot;&gt;open source&lt;/a&gt;, enabling anyone to legally release total conversions with complete engine overhauls. Ever since, fans have beavered away on their own personal projects, the latest of which is &lt;em&gt;&lt;a href=&quot;http://brechpunkt.de/q2vkpt/&quot;&gt;Q2VKPT&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Released in January, &lt;em&gt;Q2VKPT&lt;/em&gt; was created by former NVIDIA intern Christoph Schied, a Ph.D. student at the Karlsruhe Institute of Technology in Germany. The “PT” in its name stands for &lt;a href=&quot;https://chunky.llbit.se/path_tracing.html&quot;&gt;Path Tracing&lt;/a&gt;, a compute-intensive ray tracing technique that unifies all lighting effects (shadows, reflections, et cetera) into a single ‘pure ray tracing algorithm’. With Ray Tracing being all the rage, word of a developer making a beautiful, real-time ray-traced version of &lt;em&gt;Quake II&lt;/em&gt; made headlines around the world.&lt;/p&gt;
&lt;p&gt;But path tracing has a downside: its random sampling algorithm introduces ‘noise’ that makes gameplay appear grainy and speckled, as seen in 2016’s &lt;em&gt;&lt;a href=&quot;https://amietia.com/q2pt.html&quot;&gt;Q2PT&lt;/a&gt;&lt;/em&gt;. To solve the problem, Christoph and his university colleagues &lt;a href=&quot;http://brechpunkt.de/q2vkpt/&quot;&gt;built upon&lt;/a&gt; ideas originally conceived in 2016 &lt;a href=&quot;https://research.nvidia.com/publication/2017-07_Spatiotemporal-Variance-Guided-Filtering%3A&quot;&gt;during his NVIDIA internship&lt;/a&gt;, when he co-invented a fast way to remove said graininess by combining the results of multiple game frames, in a manner similar to that used by Temporal Anti-Aliasing.&lt;/p&gt;
</description>
<pubDate>Fri, 22 Mar 2019 07:24:05 +0000</pubDate>
<dc:creator>nullifidian</dc:creator>
<og:type></og:type>
<og:url>https://www.nvidia.com/en-us/geforce/news/quake-ii-rtx-ray-tracing-vulkan-vkray-geforce-rtx/</og:url>
<og:title>Quake II RTX: Re-Engineering a Classic with Ray Tracing Effects on Vulkan</og:title>
<og:description>Working with the creator of Q2VKPT, we present the most advanced version of Quake II seen to date. Check out our debut Quake II RTX video to see it in action.</og:description>
<og:image>https://www.nvidia.com/content/dam/en-zz/Solutions/geforce/news/quake-ii-rtx-ray-tracing-vulkan-vkray-geforce-rtx/quake-ii-rtx-screenshot-005-ogimage.jpg</og:image>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nvidia.com/en-us/geforce/news/quake-ii-rtx-ray-tracing-vulkan-vkray-geforce-rtx/</dc:identifier>
</item>
<item>
<title>Ad Fraud Scheme Drained Users’ Batteries By Running Hidden Video Ads In Android</title>
<link>https://www.buzzfeednews.com/article/craigsilverman/in-banner-video-ad-fraud</link>
<guid isPermaLink="true" >https://www.buzzfeednews.com/article/craigsilverman/in-banner-video-ad-fraud</guid>
<description>&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;95.065032987747&quot;&gt;

&lt;p&gt;&lt;strong&gt;Julien is an independent developer&lt;/strong&gt; who built and maintains one of the most popular audio apps in the Google Play store. With millions of downloads and hundreds of thousands of positive reviews, he’s obsessive about responding to user complaints and concerns.&lt;/p&gt;
&lt;p&gt;He often receives emails from users complaining that his app is draining their battery and using more data than expected. Usually, it’s because they set the app to download files when they’re not on Wi-Fi. But sometimes it’s due to ad fraudsters taking advantage of his app to run hidden, data-hungry video ads behind the legitimate banners he sells to earn his living.&lt;/p&gt;
&lt;p&gt;Julien's app is one of several, including many using Twitter's MoPub ad platform, that saw its in-app ads hijacked in an ad fraud scheme uncovered by fraud detection firm Protected Media. The company’s findings, along with additional reporting and interviews by BuzzFeed News, and independent verification from an outside ad fraud lab, show that one of the players implicated in this scheme is Aniview, an Israeli company with offices in New York that runs a video ad technology platform.&lt;/p&gt;
&lt;p&gt;Aniview denies any involvement and instead says the platform and banner ads and code, which were created by one of its subsidiaries, were exploited by a malicious, unnamed third party.&lt;/p&gt;
&lt;p&gt;“BuzzFeed brought to our attention that there is an abuse activity, as an immediate action, we stopped this activity and started and continue an internal incident review,” said Aniview CEO Alon Carmel in an emailed statement. “We notified and emphasized our clients that the use of our platform must be according to our policy and the IAB and TAG guidelines.”&lt;/p&gt;
&lt;p&gt;It’s just one of the many ways ad fraudsters siphon money out of the global digital advertising industry, which will see &lt;a href=&quot;https://digiday.com/media/daily-hourly-fight-digital-ad-fraud-worse-ever/&quot; target=&quot;_blank&quot;&gt;more than $20 billion&lt;/a&gt; stolen this year. This scheme in particular highlights &lt;a href=&quot;https://www.buzzfeednews.com/article/craigsilverman/ad-industry-insiders-are-connected-to-a-fraud-scheme-that&quot; target=&quot;_blank&quot;&gt;once again&lt;/a&gt; how ad tech companies exploit insider access and technical knowledge to participate in ad fraud.&lt;/p&gt;
&lt;p&gt;“I don’t even think about me being ripped off,” Julien told BuzzFeed News. “All I think about is them damaging the app’s reputation. It can cost money to [a user] and drain his battery. This is the thing that makes me really mad.” (BuzzFeed News agreed to withhold his full name and the name of his app due to concerns about people wrongly thinking it was knowingly part of the scheme.)&lt;/p&gt;
&lt;p&gt;Here’s how the scheme works. Julien sells a banner ad, which appears in the app and is visible to his users. Then, hidden from view behind that banner, fraudsters conceal autoplaying video ads that no human being actually sees, but which register as having been served and viewed. In this scenario, Julien gets paid for the small banner ad in his app that users see, but the fraudsters earn many times that amount by stuffing far more lucrative video ads behind the banner. Ultimately, it’s the brands whose ads were shown in hidden video players that lose money to those running the scheme.&lt;/p&gt;
&lt;p&gt;“Fraudsters are purchasing cheap in-app display inventory and are filling it with multiple video players behind innocuous fake branded display ads,” said Asaf Greiner, the CEO of Protected Media.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;61.301123595506&quot;&gt;

&lt;p&gt;This type of ad fraud is known in the industry as in-banner video ads, and has been &lt;a href=&quot;https://videoadnews.com/2018/03/22/mcdonalds-the-latest-to-fall-victim-of-ad-fraud/&quot; target=&quot;_blank&quot;&gt;documented in the past&lt;/a&gt;. Greiner’s team identified a new version of it last fall and said in total they’ve seen tens of millions of dollars' worth of fraudulent video ads running per month as a result.&lt;/p&gt;
&lt;p&gt;The ad fraud lab run by DoubleVerify, a digital measurement company, identified the same in-banner video ad fraud scheme at the end of last year, according to Roy Rosenfeld, the company’s VP of product management.&lt;/p&gt;
&lt;p&gt;He told BuzzFeed News the fraudsters “did a very good job at hiding and obfuscating what they were doing” and were “quite sophisticated in the thinking behind how they can monetize that [video] inventory.”&lt;/p&gt;
&lt;p&gt;DoubleVerify saw at least 60 million ad calls being made for fraudulent video ads per month, though Rosenfeld noted that not all of those ad slots were filled.&lt;/p&gt;
&lt;p&gt;Aniview and its subsidiary, OutStream Media, were identified by Protected Media as being part of the scheme after the fraud detection firm gathered and analyzed &lt;a href=&quot;https://www.youtube.com/watch?v=59jK66Ut8tY&amp;amp;feature=youtu.be&quot; target=&quot;_blank&quot;&gt;video evidence&lt;/a&gt;, code, and other information during an investigation.&lt;/p&gt;
&lt;p&gt;Rosenfeld said DoubleVerify’s investigation identified that “the Aniview player was heavily driving” the fraudulent video ad activity. He said his team identified the same code and other materials as Protected Media had.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;51&quot;&gt;

&lt;p&gt;Carmel, of Aniview, told BuzzFeed News that his company “does not knowingly engage in any fraudulent activity” and said his team has been trying to stop this activity on their platform since they were first contact by Protected Media last month. He acknowledged that OutStream Media, the company identified by Protected Media, is a subsidiary of Aniview. But he said it had ceased operations last summer and that Aniview is in the process of legally shutting it down. He said the ad fraud documented by Protected Media and DoubleVerify was done by bad actors using the Aniview video ad platform, as well as images and code created by OutStream Media, in an unauthorized way.&lt;/p&gt;
&lt;p&gt;“To be crystal clear, another customer on Aniview’s [self-serve] platform used this [video ad] player and is responsible for this activity and we took actions immediately to stop this activity,” he said.&lt;/p&gt;
&lt;p&gt;“We are fighting against bad activities, pushing and focus on clean and legit activities and should not be blamed or framed for bad use of our platform.&quot;&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;157&quot;&gt;

&lt;p&gt;Carmel could not say who this bad actor was or how they managed to gain access to content that was uploaded to an OutStream Media account on Aniview’s platform. He declined to identify the malicious actors, or to share any details about them. He also acknowledged removing the photos and names of people, including his cofounder, Tal Melenboim, from Aniview’s website after being contacted by BuzzFeed News.&lt;/p&gt;
&lt;p&gt;Two of the removed employees had leadership roles with OutStream Media in addition to their work at Aniview. Carmel, who previously cofounded the popular Jewish dating site Jdate, said they left the company to pursue other interests at the end of last year, and he neglected to remove them from the Aniview team page.&lt;/p&gt;
&lt;p&gt;Carmel was provided with a copy of the malicious code used to place the banner ads and hidden video players. In addition to using the Aniview platform and banner ads from OutStream Media’s account on it, this code included the URL shoval.tv as a tracking pixel to gather data on ad performance. Shoval.tv is a domain name owned by Aniview cofounder Tal Melenboim. In an email to BuzzFeed News, Melenboim denied any involvement.&lt;/p&gt;
&lt;p&gt;Carmel said the fraudsters must have copied the part of the code that included Shoval.tv from an earlier OutStream demo, and said Shoval.tv is commonly used as a tracking URL by Aniview. The inclusion of this code means that only a person with access to shoval.tv would be able to track the performance of the fraudulent ads carrying this pixel.&lt;/p&gt;
&lt;p&gt;Protected Media also found that a significant portion of the banner ads purchased for this scheme were bought using MoPub, the mobile ad network owned by Twitter. This does not mean MoPub was engaged in the scheme. But it does mean Twitter’s ad platform was exploited for months by fraudsters, and it earned commission on the ads bought using its tools. (Julien uses MoPub to help place ads in his app and says the company is responsive when he reports bad ads.)&lt;/p&gt;
&lt;p&gt;“At this time, we can confirm that the suspicious activity in question is not being initiated by MoPub,” a company spokesperson told BuzzFeed News. “The activity observed by Protected Media stems from an ad that is initiating other non-viewable video ads to run in the background. We are currently investigating what the potential sources of the issue could be.”&lt;/p&gt;
&lt;p&gt;This scheme illustrates one of the central challenges in reducing the massive, multibillion-dollar fraud problem in digital advertising: Nearly every player in the supply chain, except for the brands who spend money on ads, profits from fraudulent ad delivery. Even if they’re not involved in ad fraud, platforms such as ad networks and other intermediaries earn a share of the money spent on invalid ads. This creates a disincentive to stop fraud from taking place, according to Greiner.&lt;/p&gt;
&lt;p&gt;“It’s an unfair kind of situation because anybody who behaves well and doesn’t allow this on their platform is being left out of the profit,” he said, adding that “there’s very little penalty and there’s a lot to gain — the numbers are just enormous.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protected Media first&lt;/strong&gt; detected the use of hidden video ads in October. Though not a new ad fraud technique, the company saw this iteration grow large enough that it warranted a closer look. After seeing which video players were being used to run the hidden ads, and which ad networks the fraudsters were buying the display ad from, Protected Media reached out to the relevant parties, including Aniview, last month. (Rosenfeld of DoubleVerify said it also identified the scheme late last year and began blocking it.)&lt;/p&gt;
&lt;p&gt;Protected Media provided BuzzFeed News with video documentation of invalid video ads running behind banners that were created by OutStream Media, Aniview’s subsidiary. These video ads were served using Aniview’s platform and the banner ads were hosted on Aniview’s website with an account in OutStream Media’s name. This demonstrates a direct link between OutStream Media and the banners that were placed in apps such as Julien’s.&lt;/p&gt;
&lt;p&gt;Protected Media also identified that the shoval.tv domain name owned by Aniview cofounder Tal Melenboim was used to track the performance of the fraudulent ads, adding yet another link to Aniview.&lt;/p&gt;
&lt;p&gt;Given that information, Greiner believes “Aniview is the group who left no room for deniability — the others can claim ignorance.”&lt;/p&gt;
&lt;p&gt;After BuzzFeed News first contacted Aniview, the company removed the LinkedIn page for OutStream Media, and deleted people from the Aniview team page on its website. Two of the removed people were Melenboim, who had previously listed himself as the founder and CEO of OutStream Media on his LinkedIn, and his wife Mazal Melenboim, whose LinkedIn lists her as the head of media operations for Aniview and the head of operations for OutStream Media.&lt;/p&gt;
&lt;p&gt;Carmel said the couple left Aniview at the end of last year and praised Tal Melenboim as a “reputable professional” who was “an asset to Aniview during his many years of employment.”&lt;/p&gt;
&lt;p&gt;Tal Melenboim told BuzzFeed News in an email that he and his wife are not involved in any illegal activity. “It is important for me to point out to you, that if you got the impression that Aniview/Outstream Media or someone from our team, including me or my wife, is involved in an act of not legit activity, it is simply far away from the true.” (Melenboim said that Carmel’s English is better than his, and that as a result specific questions should be directed to him.)&lt;/p&gt;
&lt;p&gt;Carmel said the Melenboims were removed from the company website at his direction after being contacted by BuzzFeed News, and said it was an oversight that they were still on the site. He offered to provide a letter from the company’s legal counsel to testify to the fact that the Melenboims had not worked at Aniview since the end of last year. He also said other employees were removed from the company’s team page at the same time.&lt;/p&gt;
&lt;p&gt;After BuzzFeed News emailed Carmel two links that showed the scheme was still active on his platform, the activity was quickly shut off. He said that was a result of his company being given the information necessary to shut it down.&lt;/p&gt;
&lt;p&gt;One of the links BuzzFeed News provided to Carmel went to a page at play.aniview.com/outstreammedia/ that hosted the banner ads used in the scheme. These banners were generic images for companies and products such as Coca-Cola, M&amp;amp;M's, McDonald’s, and Disney. If a user clicked on them they were taken to the homepage of the Google Play Store, showing that they were not real ads.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;72&quot;&gt;

&lt;p&gt;Carmel said these images belonged to OutStream Media and were created as test images when the company was operational last year. He said someone used these images without permission to execute the fraud.&lt;/p&gt;
&lt;p&gt;“The banners were ONLY used for reach media demos of outstream units,” he said in an email. “After seeing in your email that someone used our banner without our permission we removed it from our server. Thank you for pointing it out.”&lt;/p&gt;
&lt;p&gt;Ultimately what Carmel claims is that an unknown bad actor created an account on his platform, and then used banner ad images created by his subsidiary to execute the fraud scheme. He declined to share information about the bad actor’s account, citing legal concerns. He also couldn’t say exactly how this actor knew about banner ads uploaded to the account of OutStream Media — a company Carmel says was only briefly operational last year. He suggested one of the organizations OutStream had previously tried to pitch its services to was involved.&lt;/p&gt;
&lt;p&gt;“The demo page of Outstream units was public and as well have been sent to many potential customers (BTW, one of them was Buzzfeed),” he said in an email. Carmel did not provide contact information for the person at BuzzFeed he says received the OutStream pitch. He did provide screenshots of email templates that were sent to prospective clients in May of last year that included a link to a demo.&lt;/p&gt;
&lt;p&gt;Carmel says the same bad actor must have copied the OutStream tracking code that included shoval.tv, the domain owned by Melenboim. This means the fraudsters were sophisticated enough to set up and manage the scheme, but would have left in a tracking pixel that prevents them from receiving performance data on their ads.&lt;/p&gt;
&lt;p&gt;Greiner of Protected Media said several ad tech companies engaged in or facilitated this form of fraud. Aniview was the one they gathered the most convincing evidence about. Others continue to run the scheme after being contacted by Protected Media, and in at least one case an executive from an involved company even complained about being called out.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;“One of them spoke to my VP of sales and said everybody does it, why are we picking on them,” Greiner said. “It’s something we hear too often, unfortunately.” ●&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 22 Mar 2019 04:28:01 +0000</pubDate>
<dc:creator>occamschainsaw</dc:creator>
<og:url>https://www.buzzfeednews.com/article/craigsilverman/in-banner-video-ad-fraud</og:url>
<og:image>https://img.buzzfeed.com/buzzfeed-static/static/2019-03/19/13/enhanced/buzzfeed-prod-web-05/anigif_longform-original-14198-1553017862-3.gif?crop=1600:837;0,229</og:image>
<og:title>A Giant Ad Fraud Scheme Drained Users' Batteries And Data By Running Hidden Video Ads In Android Apps</og:title>
<og:description>A scheme to stealthily run video ads behind banner images drained users' batteries and data while they used popular Android apps.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.buzzfeednews.com/article/craigsilverman/in-banner-video-ad-fraud</dc:identifier>
</item>
<item>
<title>Tell HN: Google removing Gmail access from IFTTT</title>
<link>https://news.ycombinator.com/item?id=19458172</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19458172</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Tell HN: Google removing Gmail access from IFTTT&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10.494055482166&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;6.996036988111&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;19458172&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=19458172&quot; class=&quot;storylink&quot;&gt;Tell HN: Google removing Gmail access from IFTTT&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.77922077922078&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_19458172&quot;&gt;223 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=pgrote&quot; class=&quot;hnuser&quot;&gt;pgrote&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=19458172&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_19458172&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=19458172&amp;amp;goto=item%3Fid%3D19458172&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Tell%20HN%3A%20Google%20removing%20Gmail%20access%20from%20IFTTT&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Tell%20HN%3A%20Google%20removing%20Gmail%20access%20from%20IFTTT&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=19458172&amp;amp;auth=7d0d435a24f2a56e95b7c23ffe1dcac6886c4415&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=19458172&quot;&gt;117 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;21.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;22&quot;&gt;Hello,
&lt;p&gt;Although you don’t need to take any action, we wanted to let you know that the following third-party apps will no longer be able to access some data in your Google Account, including your Gmail content. This change will go into effect starting March 31, 2019.&lt;/p&gt;
&lt;p&gt;IFTTT&lt;/p&gt;
&lt;p&gt;We are making this change as part of ongoing efforts to make sure your data is protected and private. These apps haven’t yet complied with our updated data privacy requirements announced on October 8, 2018&lt;/p&gt;
&lt;p&gt;You can always view, manage and remove apps you’ve given access to your account by visiting your Google Account.&lt;/p&gt;
&lt;p&gt;Thanks, The Google Accounts team&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.73972602739726&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;a href=&quot;https://www.ycombinator.com/apply/&quot;&gt;Applications are open for YC Summer 2019&lt;/a&gt;&lt;/center&gt;
&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 21 Mar 2019 22:54:51 +0000</pubDate>
<dc:creator>pgrote</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19458172</dc:identifier>
</item>
</channel>
</rss>