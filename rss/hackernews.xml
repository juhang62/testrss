<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google’s problems are bigger than just the antitrust case</title>
<link>https://www.economist.com/briefing/2020/07/30/googles-problems-are-bigger-than-just-the-antitrust-case</link>
<guid isPermaLink="true" >https://www.economist.com/briefing/2020/07/30/googles-problems-are-bigger-than-just-the-antitrust-case</guid>
<description>&lt;aside class=&quot;article__aside&quot;&gt;&lt;div class=&quot;layout-article-meta&quot;&gt;&lt;time itemscope=&quot;&quot; itemtype=&quot;http://schema.org/DateTime&quot; datetime=&quot;2020-07-30T00:00:00Z&quot; class=&quot;article__dateline-datetime&quot;&gt;Jul 30th 2020&lt;/time&gt;&lt;p data-test-id=&quot;Dateline&quot; itemtype=&quot;http://schema.org/dateline&quot; class=&quot;article__dateline-location&quot;&gt;MOUNTAIN VIEW&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p class=&quot;article__body-text article__body-text--dropcap&quot;&gt;&lt;span data-caps=&quot;initial&quot;&gt;T&lt;/span&gt;&lt;small&gt;O GET A&lt;/small&gt; good look at Google, climb a barren hill in front of the online giant’s Silicon Valley headquarters—or rather, both of them. To the right lies the old &lt;small&gt;HQ&lt;/small&gt;, a clump of low-slung office buildings ringed by dozens of similar boxes. To the left a brand-new corporate centre is rising. From outside it resembles an oversized circus tent, but the inside is still undetermined: pillars, wooden panelling and hardly any walls. The bare-bones structure is meant to provide architectural flexibility. This will come in handy in a post-pandemic world in which offices will look quite different. “We’ll get a chance to reimagine it,” says Sundar Pichai, the boss of both Google and its parent company, Alphabet. And just as the bricks-and-mortar structure is changing, the organisation is in transition, too.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;When Mr Pichai took over as chief executive of Google in August 2015, after it became the core of the newly formed Alphabet, the online-search-and-advertising business had annual revenues of $66bn and net income of $14bn. By the time Sergey Brin and Larry Page, Google’s founders, handed him the reins of Google’s parent company last December his division was raking in profits of $34bn on sales of $161bn—and Alphabet was worth almost twice as much as four years earlier.&lt;/p&gt;

&lt;p class=&quot;article__body-text&quot;&gt;This enviable track record justifies Mr Pichai’s rich compensation package over several years, of $2m annual salary plus $240m in shares and stock options (depending on performance targets). It would also justify a degree of complacency. Far from it. Mr Pichai realises he inherited an organisation in the middle of momentous change. That is not just because of the founders’ departure or the move next year into the new &lt;small&gt;HQ&lt;/small&gt;, but for a deeper reason. As Alphabet has grown—more than 4bn people are thought to use at least one of its products or services—so has the tug of economic and political forces on it.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;From the outside, lawmakers and trustbusters are pressing it for explanations over alleged abuses of its market dominance in online-search-and-advertising technology. On July 29th Mr Pichai joined his opposite numbers at Amazon, Apple and Facebook to field angry questions from a congressional committee investigating Big Tech’s alleged anticompetitive practices (see &lt;a href=&quot;https://www.economist.com/united-states/2020/07/30/big-techs-grilling-provides-more-show-than-substance&quot; data-tegid=&quot;24mvrg1uih19aujcb4tqliej3pp5rtma&quot;&gt;article&lt;/a&gt;). On the inside, Google’s core businesses are maturing. After &lt;em&gt;The Economist&lt;/em&gt; went to press Alphabet was expected to report the first year-on-year decline in quarterly revenues in its history, hurt by the pandemic-induced tightening of marketing budgets. And the company’s famously freewheeling culture is becoming harder to sustain.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Mr Pichai’s foremost challenge is to prevent Alphabet from becoming what Mr Brin and Mr Page were so bent on avoiding—a “conventional company” that dies a slow death from lack of innovation and declining growth. The task is as delicate as the technology giant is gargantuan.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Today Alphabet is a conglomerate of businesses that sometimes appear to have little in common—a corporate planetary system or Googleverse, if you will. Commercially, its centre of gravity is Google itself, and particularly its online-advertising business. This generates 83% of the group’s revenue and all its profits. It is a constellation unto itself, featuring a plethora of products that together form what is called the “online ad stack”: services to sell, buy and serve ads, and measure their effectiveness, all automatically. In all of these areas, Google is as globally dominant as it is in online search. Its market share in some parts of the ad-serving stack exceeds 90%.&lt;/p&gt;

&lt;p class=&quot;article__body-text&quot;&gt;On the surface this might suggest that Alphabet, like most big tech firms, is a “one-trick pony”, in the words of Michael Cusumano of &lt;small&gt;MIT&lt;/small&gt; Sloan School of Management. In fact, it is a herd of ponies, some of which look rather more like full-grown Shires. Nine have more than a billion users globally (see chart 2). Every day people make an estimated 6bn search queries on Google and upload more than 49 years’ worth of video to YouTube. More than 300bn emails are said to be sent every day and if only one-third originate on Gmail—a conservative estimate—then a stack of print-outs would be 10,000km high.&lt;/p&gt;
&lt;div class=&quot;article__body-text-image&quot; readability=&quot;60&quot;&gt;
&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;1&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBC644.png&quot; srcset=&quot;https://www.economist.com/img/b/200/418/90/sites/default/files/images/print-edition/20200801_FBC644.png 200w,https://www.economist.com/img/b/300/627/90/sites/default/files/images/print-edition/20200801_FBC644.png 300w,https://www.economist.com/img/b/400/836/90/sites/default/files/images/print-edition/20200801_FBC644.png 400w,https://www.economist.com/img/b/600/1253/90/sites/default/files/images/print-edition/20200801_FBC644.png 600w,https://www.economist.com/img/b/640/1337/90/sites/default/files/images/print-edition/20200801_FBC644.png 640w,https://www.economist.com/img/b/800/1671/90/sites/default/files/images/print-edition/20200801_FBC644.png 800w,https://www.economist.com/img/b/1000/2089/90/sites/default/files/images/print-edition/20200801_FBC644.png 1000w,https://www.economist.com/img/b/1280/2674/90/sites/default/files/images/print-edition/20200801_FBC644.png 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;And there is more. “Other bets”, as Alphabet’s financial statements refer to its non-core businesses, now number 11, each with its own capital structure. These include Access (offering fibre-optic broadband), &lt;small&gt;GV&lt;/small&gt; (which invests in startups), Verily (a health-care firm), Waymo (a developer of autonomous cars) and &lt;small&gt;X&lt;/small&gt; (a secretive skunk works engaged in all manner of moonshots). Commercially these ventures seem only loosely connected with the core. What links them to the main business is information processing—and specifically these days artificial intelligence (&lt;small&gt;AI&lt;/small&gt;), which powers everything from search to Waymo’s self-driving cars.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Early on, the founders decided that to enable the company to grow with startup-like speed regardless of its actual size, they would create a singular organisational mix of institutions they knew best: the internet, the open-source-software movement and Stanford’s post-graduate programme, where the duo came up with Google’s original search algorithm in 1996.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Like the internet, Google was envisaged as an ever-expanding collection of groups of engineers linked by a common language and common goals, most prominently to “organise all the world’s information”. Alphabet, too, is a network of networks held together by technical standards. It grows horizontally by adding yet more networks.&lt;/p&gt;
&lt;/div&gt;
&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;0&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBC639.png&quot; srcset=&quot;https://www.economist.com/img/b/200/105/90/sites/default/files/images/print-edition/20200801_FBC639.png 200w,https://www.economist.com/img/b/300/158/90/sites/default/files/images/print-edition/20200801_FBC639.png 300w,https://www.economist.com/img/b/400/210/90/sites/default/files/images/print-edition/20200801_FBC639.png 400w,https://www.economist.com/img/b/600/315/90/sites/default/files/images/print-edition/20200801_FBC639.png 600w,https://www.economist.com/img/b/640/336/90/sites/default/files/images/print-edition/20200801_FBC639.png 640w,https://www.economist.com/img/b/800/420/90/sites/default/files/images/print-edition/20200801_FBC639.png 800w,https://www.economist.com/img/b/1000/525/90/sites/default/files/images/print-edition/20200801_FBC639.png 1000w,https://www.economist.com/img/b/1280/672/90/sites/default/files/images/print-edition/20200801_FBC639.png 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;To keep hierarchies flat, Mr Brin and Mr Page briefly went so far as to abolish managers altogether, though the experiment had to be dialled back. A compromise was to give managers a minimum of seven direct reports to limit the time they have to loom over each underling. They also had limited time to accost the two bosses, who at one point got rid of their personal assistants to make it harder to book time with them, forcing executives to ambush them whenever they appeared in public to get a sign-off on decisions.&lt;/p&gt;
&lt;h2&gt;Cosmic ambitions&lt;/h2&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Google resembled a big open-source project by being an open book, at least internally. Any employee could freely access all internal information except for sensitive user data or company finances. All code, project documents, even a colleague’s calendar, were fair game. Workers were encouraged to use one of Google’s plethora of messaging tools, such as mailing lists (of which there are now more than a million). They were also expected to ask tough questions at weekly company-wide town-hall meetings with the founders, called &lt;small&gt;TGIF&lt;/small&gt;, for “Thank God It’s Friday” (now held on Thursdays to allow Googlers around the world to participate without having to get up on Saturday morning). Grievances were to be kept within the company’s walls. Leaking, particularly to the press, was a sackable offence. But the place was also meant to be playful; hence the playground-like offices, ping-pong tables and the like.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;From Stanford Mr Brin and Mr Page borrowed the idea of letting people follow their passions. Google employees were allowed to spend 20% of their time working on what they thought would most benefit the firm, even if that often led to them working 120%. They also often set their own quarterly goals. Recruiting and promotion were similar to academia, too. Candidates were graded like &lt;small&gt;P&lt;/small&gt;h&lt;small&gt;D&lt;/small&gt; students and decisions about who should move up the corporate ladder were taken by a committee of peers from across the company, rather than individual managers, who often promote people they like rather than those who would do the best job.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Having created most of this unique structure in 2001 the founders recruited Eric Schmidt, a Silicon Valley veteran who understood both managers and technologists, to help implement it—or, as they themselves put it, to provide “adult supervision”. To shield the setup from potential shareholder pressure, the three of them built a legal moat around it. Google was one of the first Big Tech companies to opt for dual-class shares, which gave the original shareholders ten times the voting power. Although Messrs Page, Brin and Schmidt together held only a small stake, they retained an outsized 38% of voting rights. The founders warned in “An Owner’s Manual” for Google’s shareholders, published before the firm’s initial public offering in 2004, that new investors “will have little ability to influence its strategic decisions through their voting rights”.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Mr Page took over from Mr Schmidt as Google’s &lt;small&gt;CEO&lt;/small&gt; in 2011 (though Mr Schmidt remained Alphabet’s executive chairman until 2018), before handing over to Mr Pichai four years later. Since then Mr Pichai has managed Google in much the same way that previously he ran Chrome, Google’s web browser, and other projects. Rather than getting bogged down in details, he put trusted people in charge, giving them resources and nudging them along.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;The result is a collection of semi-independent firms with powerful bosses sitting atop each of them: Thomas Kurian at Google Cloud, Susan Wojcicki at YouTube, Rick Osterloh at Google’s hardware division and Hiroshi Lockheimer at the Android operation. In early June Mr Pichai put Prabhakar Raghavan, who already headed Google’s ad business, in charge of search as well, making him Google’s de facto deputy &lt;small&gt;CEO&lt;/small&gt;. (Mustafa Suleyman, vice-president of &lt;small&gt;AI&lt;/small&gt; policy at Google, sits on the board of &lt;em&gt;The Economist&lt;/em&gt;’s parent company.) A company of Alphabet’s breadth would fail if it depended solely on one man’s judgment, Mr Pichai explains. “People have to be able to make their own decisions.”&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;These decisions are becoming harder. Googlers have always prided themselves on solving the toughest problems in computer science—less so on making money. This may be one reason why some of the company’s hit services generate smaller revenues than they might, like YouTube, or barely any at all, like Maps. Monetisation from the “other bets” has scarcely begun. They racked up more than $5bn in losses in the four quarters to March. Only Access and Verily bring in material revenues. Some could one day turn into huge businesses: Waymo was valued at about $30bn when it raised outside capital this spring. But even that impressive figure is much less than earlier estimates, which valued the autonomous-driving unit at more than $100bn.&lt;/p&gt;
&lt;div class=&quot;article__body-text-image&quot; readability=&quot;39&quot;&gt;
&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;1&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBC640.png&quot; srcset=&quot;https://www.economist.com/img/b/200/218/90/sites/default/files/images/print-edition/20200801_FBC640.png 200w,https://www.economist.com/img/b/300/327/90/sites/default/files/images/print-edition/20200801_FBC640.png 300w,https://www.economist.com/img/b/400/436/90/sites/default/files/images/print-edition/20200801_FBC640.png 400w,https://www.economist.com/img/b/600/653/90/sites/default/files/images/print-edition/20200801_FBC640.png 600w,https://www.economist.com/img/b/640/697/90/sites/default/files/images/print-edition/20200801_FBC640.png 640w,https://www.economist.com/img/b/800/871/90/sites/default/files/images/print-edition/20200801_FBC640.png 800w,https://www.economist.com/img/b/1000/1089/90/sites/default/files/images/print-edition/20200801_FBC640.png 1000w,https://www.economist.com/img/b/1280/1394/90/sites/default/files/images/print-edition/20200801_FBC640.png 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;None of this used to matter much, as long as Google’s ad products were “a gold-threaded safety net underneath every daring innovation”, as Steven Levy, one of Silicon Valley’s scribes, put it in 2011. It becomes a problem when it translates into lower margins and weaker stockmarket performance than rival tech giants (see chart 3 and chart 4).&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;article__body-text-image&quot; readability=&quot;41&quot;&gt;
&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;1&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBC641.png&quot; srcset=&quot;https://www.economist.com/img/b/200/218/90/sites/default/files/images/print-edition/20200801_FBC641.png 200w,https://www.economist.com/img/b/300/327/90/sites/default/files/images/print-edition/20200801_FBC641.png 300w,https://www.economist.com/img/b/400/436/90/sites/default/files/images/print-edition/20200801_FBC641.png 400w,https://www.economist.com/img/b/600/653/90/sites/default/files/images/print-edition/20200801_FBC641.png 600w,https://www.economist.com/img/b/640/697/90/sites/default/files/images/print-edition/20200801_FBC641.png 640w,https://www.economist.com/img/b/800/871/90/sites/default/files/images/print-edition/20200801_FBC641.png 800w,https://www.economist.com/img/b/1000/1089/90/sites/default/files/images/print-edition/20200801_FBC641.png 1000w,https://www.economist.com/img/b/1280/1394/90/sites/default/files/images/print-edition/20200801_FBC641.png 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Online advertising overall is far from a mature market, but growth in search ads, which continue to generate about 60% of Alphabet’s revenues, has slowed. In 2019 sales expanded by 15%, a healthy clip but considerably lower than the 22% a year earlier. General online search is also being “hollowed out” by specialised searches, says Mark Shmulik of Bernstein, a research firm. Mr Shmulik estimates that about 60% of product searches now start on Amazon (whose fast-growing online-ad business is already the world’s third-biggest behind Google and Facebook).&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Spaced out&lt;/h2&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Alphabet’s engineer-driven bottom-up culture is also showing signs of age. It can be hit and miss. “You can paper over a lot of problems by throwing money at it and hiring more bodies,” says a long-time Googler, who previously worked for Microsoft, which was regularly scooped by Google when it came to new products. “I thought they must have really clever strategists,” he recalls, only to discover on joining the firm that it “had hundreds of things happening in parallel”. Alphabet executives often liken their firm’s structure to a “slime mould”—organisms that survive as single cells, but must aggregate to reproduce.&lt;/p&gt;
&lt;div class=&quot;article__body-text-image&quot; readability=&quot;64&quot;&gt;
&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;1&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBD002_0.jpg&quot; srcset=&quot;https://www.economist.com/img/b/200/257/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 200w,https://www.economist.com/img/b/300/385/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 300w,https://www.economist.com/img/b/400/514/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 400w,https://www.economist.com/img/b/600/771/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 600w,https://www.economist.com/img/b/640/822/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 640w,https://www.economist.com/img/b/800/1028/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 800w,https://www.economist.com/img/b/1000/1285/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 1000w,https://www.economist.com/img/b/1280/1644/90/sites/default/files/images/print-edition/20200801_FBD002_0.jpg 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Innovation can indeed mushroom in such a corporate ecosystem. But it may hinder the development of more structured products, which require more sustained co-operation and a strategic vision. This is particularly true of lucrative enterprise offerings, where corporate clients expect providers to be both consistent and responsive to their needs. Google has a reputation for being neither.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Over the years Google has churned out new messaging tools, from Allo and Buzz to Hangouts and Meet, only recently starting to develop a unified communications offering for corporations, similar to Slack or Microsoft Teams. Google’s cloud business has often been criticised for “not having a customer-service bone in its body”, says Brent Thill of Jefferies, a bank. As a result it lags behind Amazon Web Services and Microsoft’s Azure, where customer service verges on an obsession.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;It is also becoming increasingly apparent that Alphabet’s organisational setup does not scale well. Even with a workforce of a few tens of thousands Google felt small, notes an employee who left a few years ago and later returned. With the firms’ 120,000 permanent workers complemented by an even more numerous (and less-well-paid) temporary or contract staff, the founders’ original idiosyncratic rules are becoming a drag. Executives grumble that internal promotion by committee is often a time-consuming political exercise. Letting a thousand flowers bloom is leading to an awful lot of compost.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Size creates political tensions, too. After 2016 the firm’s mostly woke workforce began using internal messaging tools to organise and press management to take action on everything from President Donald Trump’s harsh immigration policy to boycotting meat in its cafeterias. As Alphabet has hired engineers at breakneck speed, it is no longer “a country where everybody politically agrees” with the once-dominant liberal bent, says an insider.&lt;/p&gt;
&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Tensions came to a head in 2017 when James Damore, a Google software engineer, published a memo on an internal mailing list arguing that the lack of gender diversity in tech could partly be explained by biological differences. After it was leaked to the press he was fired, but many insiders felt that management, including Mr Pichai, had let the debate fester and did not do enough to help the activist employees who had been “doxxed” (having their personal details published online) by other staffers.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Things went downhill from there. Once unthinkable leaks multiplied. So did internal petitions. In 2018 activist employees forced Google not to renew an &lt;small&gt;AI&lt;/small&gt; contract with the Pentagon and to abandon plans for a censored Chinese version of its search engine. Tensions culminated later that year when it emerged that high-performing executives accused of sexual harassment had been sent off with multi-million exit packages. More than 20,000 employees globally staged a walkout in protest.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;“The walkout broke Larry’s heart,” says one Googler. It suggested that the goal of creating an engineers’ commune had failed. After that the two founders put more distance between themselves and their creation. They stopped attending the &lt;small&gt;TGIF&lt;/small&gt; meetings. In many ways Mr Pichai’s ascent to the top job last year was a formality.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Although Mr Brin, Mr Page and Mr Schmidt remain Alphabet’s biggest individual shareholders—with 13.1% of shares and 56.7% of voting rights—a former senior executive says that the company is now run by a different triumvirate. Besides Mr Pichai it includes Kent Walker, senior vice-president of global affairs, and Ruth Porat, the finance chief poached from Morgan Stanley, an investment bank. Where Mr Brin and Mr Page were technologists and Mr Schmidt a technologist-manager, the new team are simply managers.&lt;/p&gt;

&lt;p class=&quot;article__body-text&quot;&gt;This transformation was apparent at Mr Pichai’s first quarterly earnings call as the boss of Alphabet in February, when he delighted analysts by at long last breaking out YouTube’s revenues ($15bn in 2019, up by more than a third from the previous year). He has also accelerated share buy-backs, from $6.1bn in the last quarter of 2019 to $8.5bn in the three months to March. “They are no longer the most hated big tech company from a shareholder perspective,” says Mr Thill of Jefferies.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Alphabet is also becoming shareholder-friendlier in how it manages its other bets. Some of the subsidiaries, like Waymo, have wooed outside investors, suggesting that they will one day be spun off. Others, such as Chronicle, which hoped to revolutionise cyber-security, and Jigsaw, a think-tank, have been folded back into Google. Yet others, like Makani, which is developing flying wind turbines to generate energy, are likely to be shut down or sold.&lt;/p&gt;
&lt;h2&gt;To infinity and beyond&lt;/h2&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Mr Pichai’s shakeup of management is on starkest display at Google Cloud. After he became Google’s boss five years ago it was becoming apparent that cloud-computing was something more than a passing fad. He ramped up investment in the division and in 2018 hired Mr Kurian, a former senior executive at Oracle, a big maker of corporate software, to run it. In keeping with Mr Pichai’s evolving management philosophy, Mr Kurian was granted far more autonomy than his predecessor, Diane Greene, and turned the unit into a more top-down organisation, hiring people from his former employer as well as &lt;small&gt;SAP&lt;/small&gt;, its German rival.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;It seems to be working. Google’s cloud business, which includes &lt;small&gt;G&lt;/small&gt; Suite, its package of professional online services, is growing at more than 50% a year. Revenues are expected to reach $13bn this year, contributing 8% to Alphabet’s total.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;However, Mr Kurian’s financial success carries a risk. Insiders report a mini-exodus from the cloud unit to other parts of Alphabet. Plenty of employees worry that the top-down-approach from Google’s cloud business will spread throughout the organisation. Many are beginning to grumble about getting tasks handed down from above with a deadline.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;That hints at a bigger unsolved problem with Google’s culture. After the walkouts, management made some tweaks. “When we were smaller, we all worked as one team, on one product, and everyone understood how business decisions were made. It’s harder to give a company of over 100,000 people the full context on everything,” Mr Walker reportedly wrote in November in an internal newsletter. The &lt;small&gt;TGIF&lt;/small&gt; meetings are now held only once a month and limited to business-related questions. The largest internal mailing lists are moderated and postings deemed too political are allegedly being taken down. These days employees are being told to access sensitive documents only if they “need to know”. Some staff talk of creating if not a labour union, then at least a group to defend their interests.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;In the wake of the killing of George Floyd many Googlers criticised their top management for doing too little, too late to make the company more diverse; after a couple of weeks the firm vowed to raise the “leadership representation of underrepresented groups” by 30% over the next five years. In June more than 2,000 employees signed an open letter to Mr Pichai demanding that the company stop selling its technology to police forces across America.&lt;/p&gt;

&lt;div itemscope=&quot;&quot; itemprop=&quot;image&quot; itemtype=&quot;https://schema.org/ImageObject&quot; data-slim=&quot;0&quot;&gt;&lt;img src=&quot;https://www.economist.com/sites/default/files/images/print-edition/20200801_FBD003_0.jpg&quot; srcset=&quot;https://www.economist.com/img/b/200/113/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 200w,https://www.economist.com/img/b/300/169/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 300w,https://www.economist.com/img/b/400/225/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 400w,https://www.economist.com/img/b/600/338/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 600w,https://www.economist.com/img/b/640/360/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 640w,https://www.economist.com/img/b/800/450/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 800w,https://www.economist.com/img/b/1000/563/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 1000w,https://www.economist.com/img/b/1280/720/90/sites/default/files/images/print-edition/20200801_FBD003_0.jpg 1280w&quot; sizes=&quot;(max-width: 320px) 300px, (max-width: 414px) 400px, (max-width: 600px) 640px, (max-width: 768px) 800px, (max-width: 960px) 1000px, (max-width: 1024px) 1200px&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Over the past few weeks things have seemed to calm down internally. But the respite may be superficial. Many workers are keeping their mouths shut for fear of being laid off, one Googler reports. Few relish the thought of losing a cushy job in a recession. Activists now shun the firm’s communication tools and organise elsewhere online.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;All this fuels murmurings and speculation, both inside and outside Alphabet, over whether Mr Pichai is the right person for the job. Some Google executives and engineers describe him as “too checked out” and his leadership as “uninspired”. He is also accused of excessive risk aversion. “I’ve never shied away from making big bets and following my instincts,” Mr Pichai insists. But it is hard to argue that he has shown the vision of Amazon’s Jeff Bezos or Microsoft’s Satya Nadella.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;Mr Pichai has an opportunity to prove the sceptics wrong. The covid-19 pandemic offers a convenient pretext to get rid of inefficiencies, such as overlapping products, and cut through Alphabet’s internal red tape. It could result in a new balance being struck between Google’s innovative culture and more systematic exploitation of its products’ and services’ money-making potential. Even the antitrust probes have a silver lining for Mr Pichai. “In some ways, I’m looking for clarity,” he says.&lt;/p&gt;
&lt;p class=&quot;article__body-text&quot;&gt;To be a leader in the mould of Mr Nadella, however, he would have to be more daring. One idea is to charge for some of its services. Another is for Google to become more of a data fiduciary that manages people’s information for them—a bit like a bank does with money. The firm has already started developing tools necessary for this, such as software that can mine encrypted data. If Mr Pichai could pull this off, that would be truly inspirational. And it would help keep Alphabet unconventional for a while yet. &lt;span data-ornament=&quot;ufinish&quot;&gt;■&lt;/span&gt;&lt;/p&gt;
&lt;p data-test-id=&quot;Footnote&quot; class=&quot;article__footnote&quot;&gt;This article appeared in the Briefing section of the print edition under the headline &quot;Google grows up&quot;&lt;/p&gt;
&lt;div class=&quot;layout-article-links&quot;&gt;&lt;a class=&quot;ds-actioned-link ds-actioned-link--reuse-this-content&quot; target=&quot;_blank&quot; href=&quot;https://s100.copyright.com/AppDispatchServlet?publisherName=economist&amp;amp;publication=economist&amp;amp;title=Google%E2%80%99s%20problems%20are%20bigger%20than%20just%20the%20antitrust%20case&amp;amp;publicationDate=2020-07-30&amp;amp;contentID=%2Fcontent%2Fboii79c8q1qljelmdqea3d3feu4mi8nb&amp;amp;type=A&amp;amp;orderBeanReset=TRUE&quot;&gt;&lt;span&gt;Reuse this content&lt;/span&gt;&lt;/a&gt;&lt;a class=&quot;ds-actioned-link ds-actioned-link--the-trust-project&quot; href=&quot;https://www.economist.com/about-the-economist&quot;&gt;&lt;span&gt;The Trust Project&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
</description>
<pubDate>Thu, 30 Jul 2020 16:21:08 +0000</pubDate>
<dc:creator>martincmartin</dc:creator>
<og:title>Google’s problems are bigger than just the antitrust case</og:title>
<og:type>Article</og:type>
<og:url>https://www.economist.com/briefing/2020/07/30/googles-problems-are-bigger-than-just-the-antitrust-case</og:url>
<og:description>As the computing conglomerate has grown, so too have the risks that it becomes more like a conventional company</og:description>
<og:image>https://www.economist.com/sites/default/files/images/print-edition/20200801_FBD001_0.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.economist.com/briefing/2020/07/30/googles-problems-are-bigger-than-just-the-antitrust-case</dc:identifier>
</item>
<item>
<title>Apple halved app store fee to get Amazon Prime video on devices</title>
<link>https://www.bloomberg.com/news/articles/2020-07-29/apple-considered-taking-40-cut-from-subscriptions-emails-show</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2020-07-29/apple-considered-taking-40-cut-from-subscriptions-emails-show</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-07-29/apple-considered-taking-40-cut-from-subscriptions-emails-show&quot;&gt;https://www.bloomberg.com/news/articles/2020-07-29/apple-considered-taking-40-cut-from-subscriptions-emails-show&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23999542&quot;&gt;https://news.ycombinator.com/item?id=23999542&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 240&lt;/p&gt;
&lt;p&gt;# Comments: 181&lt;/p&gt;
</description>
<pubDate>Thu, 30 Jul 2020 15:48:26 +0000</pubDate>
<dc:creator>gumby</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=626754e0-d2c9-11ea-ba36-3d2a97a675ab&amp;url=L25ld3MvYXJ0aWNsZXMvMjAyMC0wNy0yOS9hcHBsZS1jb25zaWRlcmVkLXRha2luZy00MC1jdXQtZnJvbS1zdWJzY3JpcHRpb25zLWVtYWlscy1zaG93</dc:identifier>
</item>
<item>
<title>Internet Archive responds to publishers’ lawsuit</title>
<link>https://blog.archive.org/2020/07/29/internet-archive-responds-to-publishers-lawsuit/</link>
<guid isPermaLink="true" >https://blog.archive.org/2020/07/29/internet-archive-responds-to-publishers-lawsuit/</guid>
<description>&lt;img src=&quot;https://blog.archive.org/wp-content/uploads/2017/09/300funston.jpg&quot; alt=&quot;&quot; class=&quot;wp-image-14552&quot; srcset=&quot;https://blog.archive.org/wp-content/uploads/2017/09/300funston.jpg 800w, https://blog.archive.org/wp-content/uploads/2017/09/300funston-300x216.jpg 300w, https://blog.archive.org/wp-content/uploads/2017/09/300funston-768x553.jpg 768w&quot; sizes=&quot;(max-width: 800px) 100vw, 800px&quot;/&gt;&lt;p&gt;Yesterday, the Internet Archive filed our &lt;a href=&quot;https://archive.org/details/internet-archive-answer&quot;&gt;response&lt;/a&gt; to the lawsuit brought by four commercial publishers to end the practice of Controlled Digital Lending (CDL), the digital equivalent of traditional library lending. CDL is a respectful and secure way to bring the breadth of our library collections to digital learners. Commercial ebooks, while useful, only cover a small fraction of the books in our libraries. As we launch into a fall semester that is largely remote, we must offer our students the best information to learn from—collections that were purchased over centuries and are now being digitized. What is at stake with this lawsuit? Every digital learner’s access to library books. That is why the Internet Archive is standing up to defend the rights of  hundreds of libraries that are using Controlled Digital Lending.&lt;/p&gt;&lt;p&gt;The publishers’ lawsuit aims to stop the longstanding and widespread library practice of &lt;a href=&quot;https://controlleddigitallending.org&quot;&gt;Controlled Digital Lending&lt;/a&gt;, and stop the hundreds of libraries using this system from providing their patrons with digital books. Through CDL, libraries lend a digitized version of the physical books they have acquired as long as the physical copy doesn’t circulate and the digital files are protected from redistribution. This is how Internet Archive’s lending library works, and has for more than nine years. Publishers are seeking to shut this library down, claiming copyright law does not allow it. Our response is simple: Copyright law does not stand in the way of libraries’ rights to own books, to digitize their books, and to lend those books to patrons in a controlled way.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is at stake with this lawsuit? Every digital learner’s access to library books. That is why the Internet Archive is standing up to defend the rights of  hundreds of libraries that are using Controlled Digital Lending.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“The Authors Alliance has several thousand members around the world and we have endorsed the Controlled Digital Lending as a fair use,” stated Pamela Samuelson, &lt;a href=&quot;https://www.authorsalliance.org/&quot;&gt;Authors Alliance&lt;/a&gt; founder and Richard M. Sherman Distinguished Professor of Law at Berkeley Law. “It’s really tragic that at this time of pandemic that the publishers would try to basically cut off even access to a digital public library like the Internet Archive…I think that the idea that lending a book is illegal is just wrong.”&lt;/p&gt;
&lt;p&gt;These publishers clearly intend this lawsuit to have a chilling effect on Controlled Digital Lending at a moment in time when it can benefit digital learners the most. For students and educators, the 2020 fall semester will be unlike any other in recent history. From K-12 schools to universities, many institutions have already announced they will keep campuses closed or severely limit access to communal spaces and materials such as books because of public health concerns. The conversation we must be having is: how will those students, instructors and researchers access information — from textbooks to primary sources? Unfortunately, four of the world’s largest book publishers seem intent on undermining both libraries’ missions and our attempts to keep educational systems operational during a global health crisis.&lt;/p&gt;
&lt;img src=&quot;https://blog.archive.org/wp-content/uploads/2020/07/raph6-1.jpeg&quot; alt=&quot;&quot; class=&quot;wp-image-21117&quot; srcset=&quot;https://blog.archive.org/wp-content/uploads/2020/07/raph6-1.jpeg 1024w, https://blog.archive.org/wp-content/uploads/2020/07/raph6-1-300x200.jpeg 300w, https://blog.archive.org/wp-content/uploads/2020/07/raph6-1-768x512.jpeg 768w, https://blog.archive.org/wp-content/uploads/2020/07/raph6-1-624x416.jpeg 624w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;Ten percent of the world’s population experience disabilities that impact their ability to read. For these learners, digital books are a lifeline. The publishers’ lawsuit against the Internet Archive calls for the destruction of more than a million digitized books.
&lt;p&gt;The publishers’ lawsuit does not stop at seeking to end the practice of Controlled Digital Lending. These publishers call for the destruction of the 1.5 million digital books that Internet Archive makes available to our patrons. This form of digital book burning is unprecedented and unfairly disadvantages people with print disabilities. For the blind, ebooks are a lifeline, yet less than one in ten exists in accessible formats. &lt;a href=&quot;https://web.archive.org/web/20100714081221/https://www.usatoday.com/news/education/2010-07-14-InternetArchive14_st_N.htm&quot;&gt;Since 2010&lt;/a&gt;, Internet Archive has made our lending library available to the blind and print disabled community, in addition to sighted users. If the publishers are successful with their lawsuit, more than a million of those books would be deleted from the Internet’s digital shelves forever.&lt;/p&gt;
&lt;p&gt;I call on the executives at Hachette, HarperCollins, Wiley, and Penguin Random House to come together &lt;em&gt;with us&lt;/em&gt; to help solve the pressing challenges to access to knowledge during this pandemic. Please drop this needless lawsuit.&lt;/p&gt;
</description>
<pubDate>Thu, 30 Jul 2020 13:53:22 +0000</pubDate>
<dc:creator>edward</dc:creator>
<og:type>article</og:type>
<og:title>Libraries lend books, and must continue to lend books: Internet Archive responds to publishers’ lawsuit - Internet Archive Blogs</og:title>
<og:description>Yesterday, the Internet Archive filed our response to the lawsuit brought by four commercial publishers to end the practice of Controlled Digital Lending (CDL), the digital equivalent of traditional library lending. CDL is a respectful and secure way to bring the breadth of our library collections to digital learners. Commercial ebooks, while useful, only cover […]</og:description>
<og:url>http://blog.archive.org/2020/07/29/internet-archive-responds-to-publishers-lawsuit/</og:url>
<og:image>http://blog.archive.org/wp-content/uploads/2017/09/300funston.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.archive.org/2020/07/29/internet-archive-responds-to-publishers-lawsuit/</dc:identifier>
</item>
<item>
<title>The Haskell Elephant in the Room</title>
<link>https://www.stephendiehl.com/posts/crypto.html</link>
<guid isPermaLink="true" >https://www.stephendiehl.com/posts/crypto.html</guid>
<description>&lt;h4 id=&quot;the-crypto-perversion-of-haskell&quot;&gt;The Crypto Perversion of Haskell&lt;/h4&gt;
&lt;p&gt;Many blog posts about Haskell often discuss the latest advances in our compiler, research in type systems and clever new ideas that make the Haskell language such a fun and inspiring tool. However, if you peel back the curtain on a lot of what we do as functional programmers you see the economic machinery that shapes everything we do and informs the problems we chose to spend our cycles on. While the last few years have seen enormous progress and excitement, there is an enormous elephant in the room that we’ve collectively chosen not to discuss.&lt;/p&gt;
&lt;p&gt;For a while it has been a public secret the Haskell ecosystem has become increasingly entangled with an unsavoury variety in the cryptocurrency sector as one of primary mechanisms for funding development. This has been a double edged sword in that it has created jobs and allowed a lot of questionable ICO money and funds of dubious origin into the language ecosystem without a lot of questions being asked. It is time to ask that question. Does the deal with the devil come at too high a price?&lt;/p&gt;
&lt;h4 id=&quot;what-is-happening&quot;&gt;What is happening?&lt;/h4&gt;
&lt;p&gt;Cryptocurrency is not a traditional business in any sense. The basic economic structure of a business is a group of people who exchange their goods or services for money. For example, your traditional software consulting business sells your time and expertise to clients to write software for them. Your ecommerce website provides a marketplace to sell physical goods. Your local coffee shops sells you wifi under the guise of coffee. However cryptocurrency companies do not produce anything, instead they offer synthetic financial products which are marketing to the generic public as investments. These “investments” are not tied directly to economic activity, these are what economists call &lt;em&gt;non-productive assets&lt;/em&gt;. The value of these assets is only determined by what other people are willing to pay for them. This has created a giant ecosystem in which products aren’t traded on any investment fundamentals but on the hope to sell them off to a “greater fool”.&lt;/p&gt;
&lt;p&gt;This is not a new phenomenon. We’ve seen markets with this kind of structure early in the early history of the development of modern market economies. We saw this with Wildcat banking in the 1800s in which frontier banks would issue massive amounts of new worthless currencies supposedly backed by other securities. Another variation occurred in the 20s with widespread Ponzi schemes where new investor money was used to pay out earlier investors. And again in the 80s with the rise of boiler rooms that would massive volumes of penny stocks and municipal bonds to the public with inflated promises of returns. The history of finance is full of scams and cryptocurrency is simply the latest iteration in a long line of frauds.&lt;/p&gt;
&lt;p&gt;Normally these frauds are recognized for what they are quite quickly and the courts and regulatory bodies can clean up the mess and rectify the damages to those who have been misled. However this new type of scam is particularly nefarious in that it has found a way to decentralise operations and move the trading operations to offshore entities. Following the money on these companies leads to these deeply layered networks of shell entities across &lt;a href=&quot;https://www.bankfrick.li/en/banking-services/blockchain-banking/crypto-trading-services&quot;&gt;Lichtenstein&lt;/a&gt;, &lt;a href=&quot;https://services.gov.im/ded/services/companiesregistry/viewcompany.iom?Id=331585&quot;&gt;Isle of Mann&lt;/a&gt;, and the &lt;a href=&quot;https://decrypt.co/19204/top-7-crypto-companies-based-in-tax-havens&quot;&gt;Cayman Islands&lt;/a&gt; which are set up to be immune to prosecution while still being able to funnel money across less reputable actors in these jurisdictions.&lt;/p&gt;
&lt;h4 id=&quot;how-is-it-happening&quot;&gt;How is it happening?&lt;/h4&gt;
&lt;p&gt;These companies could not be set up in countries with financial regulators because what they are offering would be blatantly illegal to offer to the general public. Instead we’ve seen this metastasize across the world to form what are effectively digital gambling sites, in which unsophisticated investors trade unregulated products on markets that are directly manipulated by exchanges with no oversight. Most of the traded volume on these sites is directly manipulated by the exchange itself with no transparency or guarantees of market conditions. If these dodgy exchanges steal your funds, you have absolutely no legal recourse. Not surprisingly this has attracted an enormous amount of interest from global criminals and market manipulation is allowed to run wild allowing massive extraction of wealth from unsuspecting users.&lt;/p&gt;
&lt;p&gt;The duplicitous story of these financial product offerings appeals to a lot of software engineers on a pure technical level. There are indeed massive inefficiencies in the financial system that could be addressed by the use of better technologies. And even in the most progressive countries it is undeniable that there exists an ambient level of corruption and fraud, which has especially hurt a younger generation who come of age in the financial crisis. However cryptocurrency does not provide any technical answers to the inefficiencies since its entire existence is purely predicated on the appeal as a speculative investment first and not on its efficacy to transmit value. The insidious mechanism embedded inside of crypto is that as investment it has a negative expected return. In this negative sum game each early investor mathematically needs to onboard more investors or inflate the price of the asset. The mechanism that has risen to achcieve this is creation of what is effectively a new religious movement deeply entangled with fringe economic theories and right wing conspiracies, whose purpose is to onboard new followers.&lt;/p&gt;
&lt;p&gt;New religious movements like the cryptocult provide a psychological and philosophical framework that provides sense-making for a world that seems hostile and out of their control. The crypto movement fits all the textbook criteria, it provides a mechanism for determining an in-crowd and an out-crowd (no-coiners vs bitcoiners). It gives a framework for assessing the virtue of other followers based on their faith (HODLing) in the cause. It offers simple answers to complex issues in economics and monetary policy. It gives a linguistic framework of “thought-terminating clichés” and acronyms to quell dissent. It gives a mechanism of social control in which one can acquire influence and status in exchange proselytizing and onboarding more followers to buy tokens. It makes miraculous promises of wealth, not derived from effort but from faith. It presents an eschatological narrative of retributive justice about the end-times of the global financial system, in which the true believers will be reborn with a new life in an anarcho-capitalist utopia. And most importantly, it gives people a sense of a community, hope and belonging which is a powerful force that can be exploited by charismatic leaders. David Golumbia’s excellent book &lt;a href=&quot;https://www.amazon.com/Politics-Bitcoin-Right-Wing-Extremism-Forerunners-ebook/product-reviews/B01M22NTCT&quot;&gt;The Politics of Bitcoin: Software as Right-Wing Extremism&lt;/a&gt; outlines the rabbit-hole effect that this ecosystem is having on software engineers onboarding them into deeper forms of right-wing extremism.&lt;/p&gt;
&lt;h4 id=&quot;what-now&quot;&gt;What Now?&lt;/h4&gt;
&lt;p&gt;Every day retail investors are being enticed by the promise of easy returns for nothing. They are fleeced by this massive industry that is no longer being run by slick haired “Wolf of Wall Street” characters, but by software engineers like you and me. If you go to Zurihac or ICFP, simply look around, the people you’ll see are the ones now running these financial scams. Painfully, some of the very founding contributors to Haskell itself are the ones deepest involved in this ring.&lt;/p&gt;
&lt;p&gt;In this new era the Haskell community itself has simply become a tool to buy legitimacy and pump token values. The reputation of our community is now used to defraud the public and convince non-technical users of the soundness of an utterly unsound investment.&lt;/p&gt;
&lt;p&gt;I have avoided names in this article because I genuinely want to believe many engineers mean well and can change course, however core Haskell companies such as Well-Typed, Tweag and FP Complete have been deeply complicit in building up this crypto industry for years now.&lt;/p&gt;
&lt;p&gt;Avoiding success at all costs does not mean that we should sell out to grifters and charlatans to fund our ambitions. The Haskell community that I used to care about should aim higher than involving ourselves in this utterly dishonest trade, because sometimes the cost of success comes at too high a price. And that’s something we have to avoid at all costs.&lt;/p&gt;
</description>
<pubDate>Thu, 30 Jul 2020 13:10:57 +0000</pubDate>
<dc:creator>tenslisi</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.stephendiehl.com/posts/crypto.html</dc:identifier>
</item>
<item>
<title>You Want to See My Data? I Thought We Were Friends</title>
<link>http://nautil.us/blog/you-want-to-see-my-data-i-thought-we-were-friends</link>
<guid isPermaLink="true" >http://nautil.us/blog/you-want-to-see-my-data-i-thought-we-were-friends</guid>
<description>&lt;p&gt;Stuart Ritchie is a Lecturer in the Social, Genetic and Developmental Psychiatry Centre at King’s College London. His new book, &lt;a href=&quot;https://www.sciencefictions.org/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Science Fictions: How Fraud, Bias, Negligence and Hype Undermine the Search for Truth&lt;/em&gt;&lt;/a&gt;, explains the ideas in this comic, by Zach Weinersmith, in more detail, telling shocking stories of scientific error and misconduct. It also proposes an abundance of ideas for how to rescue science from its current malaise.&lt;br/&gt;&lt;/p&gt;
&lt;img src=&quot;http://static.nautil.us/17478_9684bb9ec9d685632ee47174ed6f2dd5.png&quot; width=&quot;733&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://static.nautil.us/17479_11b028954c6671b7d75743a2b78b2afe.png&quot; width=&quot;733&quot; alt=&quot;&quot;/&gt;&lt;img src=&quot;http://static.nautil.us/17480_f63ca18283fce920f258fe42b153b199.png&quot; width=&quot;733&quot; alt=&quot;&quot;/&gt;&lt;p&gt;&lt;em&gt;Stuart Ritchie is a Lecturer in the Social, Genetic and Developmental Psychiatry Centre at King’s College London. He is the author of the new book &lt;/em&gt;&lt;a href=&quot;https://www.sciencefictions.org/&quot; target=&quot;_blank&quot;&gt;Science Fictions&lt;/a&gt;&lt;em&gt;, which documents how fraud, bias, negligence, and hype are rife in science. &lt;/em&gt;Science Fictions &lt;em&gt;proposes an abundance of ideas for how to rescue science from its current malaise.&lt;/em&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Zach Weinersmith is an illustrator, writer, producer, and creator of the webcomic &lt;a href=&quot;https://www.smbc-comics.com/&quot; target=&quot;_blank&quot;&gt;Saturday Morning Breakfast Cereal&lt;/a&gt;. He is co-creator of books that include &lt;/em&gt;&lt;a href=&quot;https://www.amazon.com/Soonish-Emerging-Technologies-Improve-Everything/dp/0399563822/ref=tmm_hrd_swatch_0?_encoding=UTF8&amp;amp;qid;=&amp;amp;sr;=&quot; target=&quot;_blank&quot;&gt;Soonish: Ten Emerging Technologies That’ll Improve and/or Ruin Everything&lt;/a&gt;, &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;https://www.amazon.com/Open-Borders-Science-Ethics-Immigration-ebook/dp/B07YRKYKZ3/ref=sr_1_2?crid=38RSV6UBOKFUB&amp;amp;dchild=1&amp;amp;keywords=open+borders+the+science+and+ethics+of+immigration&amp;amp;qid=1595956345&amp;amp;s=digital-text&amp;amp;sprefix=open+borders,digital-text,168&amp;amp;sr=1-2&quot; target=&quot;_blank&quot;&gt;Open Borders: The Science and Ethics of Immigration&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;
&lt;div id=&quot;inpagesub&quot; readability=&quot;34&quot;&gt;
&lt;p&gt;Get the &lt;span class=&quot;plain&quot;&gt;Nautilus&lt;/span&gt; newsletter&lt;/p&gt;
&lt;p&gt;The newest and most popular articles delivered right to your inbox!&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 30 Jul 2020 10:10:52 +0000</pubDate>
<dc:creator>dnetesn</dc:creator>
<og:type>website</og:type>
<og:url>http://nautil.us/blog/you-want-to-see-my-data-i-thought-we-were-friends</og:url>
<og:title>You Want to See My Data? I Thought We Were Friends! - Facts So Romantic - Nautilus</og:title>
<og:description>Stuart Ritchie is a Lecturer in the Social, Genetic and Developmental Psychiatry Centre at King’s College London. His new book, Science&amp;#8230;</og:description>
<og:image>http://static.nautil.us/17478_9684bb9ec9d685632ee47174ed6f2dd5.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>http://nautil.us/blog/you-want-to-see-my-data-i-thought-we-were-friends</dc:identifier>
</item>
<item>
<title>Nano 5.0</title>
<link>https://lists.gnu.org/archive/html/info-gnu/2020-07/msg00010.html</link>
<guid isPermaLink="true" >https://lists.gnu.org/archive/html/info-gnu/2020-07/msg00010.html</guid>
<description>&lt;head&gt;&lt;title&gt;[ANNOUNCE] nano-5.0 is released&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;228.11519003762&quot;&gt;
&lt;center&gt;


&lt;/center&gt;
&lt;hr /&gt;&lt;p&gt;[&lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/msg00009.html&quot;&gt;Date Prev&lt;/a&gt;][Date Next][&lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/msg00009.html&quot;&gt;Thread Prev&lt;/a&gt;][Thread Next][&lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/index.html#00010&quot;&gt;Date Index&lt;/a&gt;][&lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/threads.html#00010&quot;&gt;Thread Index&lt;/a&gt;] &lt;/p&gt;
&lt;h2&gt;[ANNOUNCE] nano-5.0 is released&lt;/h2&gt;
&lt;hr /&gt;&lt;table border=&quot;0&quot;&gt;&lt;tbody readability=&quot;3.5&quot;&gt;&lt;tr&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;From&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Benno Schulenberg&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;Subject&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;[ANNOUNCE] nano-5.0 is released&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;Date&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Wed, 29 Jul 2020 11:02:47 +0200&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot;&gt;&lt;strong&gt;User-agent&lt;/strong&gt;:&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Thunderbird/68.10.0&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;hr /&gt;&lt;pre&gt;
2020.07.29 - GNU nano 5.0  &quot;Among the fields of barley&quot;

• With --indicator (or -q or 'set indicator') nano will show a kind
  of scrollbar on the righthand side of the screen to indicate where
  in the buffer the viewport is located and how much it covers.
• With &amp;lt;Alt+Insert&amp;gt; any line can be &quot;tagged&quot; with an anchor, and
  &amp;lt;Alt+PageUp&amp;gt; and &amp;lt;Alt+PageDown&amp;gt; will jump to the nearest anchor.
  When using line numbers, an anchor is shown as &quot;+&quot; in the margin.
• The Execute Command prompt is now directly accessible from the
  main menu (with ^T, replacing the Spell Checker).  The Linter,
  Formatter, Spell Checker, Full Justification, Suspension, and
  Cut-Till-End functions are available in this menu too.
• On terminals that support at least 256 colors, nine new color
  names are available: pink, purple, mauve, lagoon, mint, lime,
  peach, orange, and latte.  These do not have lighter versions.
• For the color names red, green, blue, yellow, cyan, magenta,
  white, and black, the prefix 'light' gives a brighter color.
  Prefix 'bright' is deprecated, as it means both bold AND light.
• All color names can be preceded with &quot;bold,&quot; and/or &quot;italic,&quot;
  (in that order) to get a bold and/or italic typeface.
• With --bookstyle (or -O or 'set bookstyle') nano considers any
  line that begins with whitespace as the start of a paragraph.
• Refreshing the screen with ^L now works in every menu.
• In the main menu, ^L also centers the line with the cursor.
• Toggling the help lines with M-X now works in all menus except
  in the help viewer and the linter.
• At a filename prompt, the first &amp;lt;Tab&amp;gt; lists the possibilities,
  and these are listed near the bottom instead of near the top.
• Bindable function 'curpos' has been renamed to 'location'.
• Long option --tempfile has been renamed to --saveonexit.
• Short option -S is now a synonym of --softwrap.
• The New Buffer toggle (M-F) has become non-persistent.  Options
  --multibuffer and 'set multibuffer' still make it default to on.
• Backup files will retain their group ownership (when possible).
• Data is synced to disk before &quot;... lines written&quot; is shown.
• The raw escape sequences for F13 to F16 are no longer recognized.
• Distro-specific syntaxes, and syntaxes of less common languages,
  have been moved down to subdirectory syntax/extra/.  The affected
  distros and others may wish to move wanted syntaxes one level up.
• Syntaxes for Markdown, Haskell, and Ada were added.


GNU nano is a simple and easy-to-use editor for on the terminal.
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://nano-editor.org/&quot;&gt;https://nano-editor.org/&lt;/a&gt;
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://nano-editor.org/manual.html&quot;&gt;https://nano-editor.org/manual.html&lt;/a&gt;

A concise overview of nano's shortcut keystrokes:
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://nano-editor.org/cheatsheet.html&quot;&gt;https://nano-editor.org/cheatsheet.html&lt;/a&gt;

The tarball and its signature are here:
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://nano-editor.org/dist/latest/nano-5.0.tar.xz&quot;&gt;https://nano-editor.org/dist/latest/nano-5.0.tar.xz&lt;/a&gt;
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://nano-editor.org/dist/latest/nano-5.0.tar.xz.asc&quot;&gt;https://nano-editor.org/dist/latest/nano-5.0.tar.xz.asc&lt;/a&gt;


Specific issues that were addressed in this release:
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?56226&quot;&gt;https://savannah.gnu.org/bugs/?56226&lt;/a&gt;  (cutting &quot;touched&quot; next line)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?56525&quot;&gt;https://savannah.gnu.org/bugs/?56525&lt;/a&gt;  (allow using 'italic' in syntax [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?57061&quot;&gt;https://savannah.gnu.org/bugs/?57061&lt;/a&gt;  (print baked-in nanorc path [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?57402&quot;&gt;https://savannah.gnu.org/bugs/?57402&lt;/a&gt;  (justifying ignored leading blanks)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?57577&quot;&gt;https://savannah.gnu.org/bugs/?57577&lt;/a&gt;  (a kind of bookmarks [wish])

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?57956&quot;&gt;https://savannah.gnu.org/bugs/?57956&lt;/a&gt;  (some kind of scrollbar [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58088&quot;&gt;https://savannah.gnu.org/bugs/?58088&lt;/a&gt;  (with -L, M-6 could copy repeatedly)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58130&quot;&gt;https://savannah.gnu.org/bugs/?58130&lt;/a&gt;  (syntax for Markdown and Haskell [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58357&quot;&gt;https://savannah.gnu.org/bugs/?58357&lt;/a&gt;  (lone CR in DOS file mistreated as LF)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58383&quot;&gt;https://savannah.gnu.org/bugs/?58383&lt;/a&gt;  (backup always had user's default group)

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58410&quot;&gt;https://savannah.gnu.org/bugs/?58410&lt;/a&gt;  (poor error message on undeletable file)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58424&quot;&gt;https://savannah.gnu.org/bugs/?58424&lt;/a&gt;  ('chan' in Go file was not highlighted)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58439&quot;&gt;https://savannah.gnu.org/bugs/?58439&lt;/a&gt;  (backup file could get appended to)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58442&quot;&gt;https://savannah.gnu.org/bugs/?58442&lt;/a&gt;  (user could not change mind after &quot;No&quot;)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58443&quot;&gt;https://savannah.gnu.org/bugs/?58443&lt;/a&gt;  (^C was mistakenly understood as &quot;Yes&quot;)

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58469&quot;&gt;https://savannah.gnu.org/bugs/?58469&lt;/a&gt;  (^L did not work at a prompt)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58471&quot;&gt;https://savannah.gnu.org/bugs/?58471&lt;/a&gt;  (let M-X work nearly everywhere [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58481&quot;&gt;https://savannah.gnu.org/bugs/?58481&lt;/a&gt;  (possible miscoloring after replacement)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58489&quot;&gt;https://savannah.gnu.org/bugs/?58489&lt;/a&gt;  (cursor could sit on status bar in help)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58490&quot;&gt;https://savannah.gnu.org/bugs/?58490&lt;/a&gt;  (unknown sequence was silent at prompt)

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58503&quot;&gt;https://savannah.gnu.org/bugs/?58503&lt;/a&gt;  (separate 'bold' from 'bright' [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58619&quot;&gt;https://savannah.gnu.org/bugs/?58619&lt;/a&gt;  (&amp;lt;Tab&amp;gt; pointlessly showed . and ..)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58620&quot;&gt;https://savannah.gnu.org/bugs/?58620&lt;/a&gt;  (let &amp;lt;Tab&amp;gt; show list near bottom [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58627&quot;&gt;https://savannah.gnu.org/bugs/?58627&lt;/a&gt;  (show the list after one &amp;lt;Tab&amp;gt; [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58632&quot;&gt;https://savannah.gnu.org/bugs/?58632&lt;/a&gt;  (restricted mode could leak info)

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58642&quot;&gt;https://savannah.gnu.org/bugs/?58642&lt;/a&gt;  (potential data loss upon crash)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58685&quot;&gt;https://savannah.gnu.org/bugs/?58685&lt;/a&gt;  (warn about read-only file [wish])
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58714&quot;&gt;https://savannah.gnu.org/bugs/?58714&lt;/a&gt;  (invalid Unicode gave wrong feedback)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58730&quot;&gt;https://savannah.gnu.org/bugs/?58730&lt;/a&gt;  (pasting at Unicode prompt did not work)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58731&quot;&gt;https://savannah.gnu.org/bugs/?58731&lt;/a&gt;  (&amp;lt;Alt+numeric operator&amp;gt; entered letter)

  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58788&quot;&gt;https://savannah.gnu.org/bugs/?58788&lt;/a&gt;  (&amp;lt;Esc&amp;gt;&amp;lt;Esc&amp;gt; sequence not always reset)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58799&quot;&gt;https://savannah.gnu.org/bugs/?58799&lt;/a&gt;  (older compilers do not know &quot;\e&quot;)
  &lt;a rel=&quot;nofollow&quot; href=&quot;https://savannah.gnu.org/bugs/?58818&quot;&gt;https://savannah.gnu.org/bugs/?58818&lt;/a&gt;  (&amp;lt;Esc&amp;gt;&amp;lt;Esc&amp;gt; sequence failed in macro)


Changes between v4.9 and v5.0:
------------------------------

Marco Diego Aurélio Mesquita (4):
      new feature: bindable functions for toggling and jumping to &quot;bookmarks&quot;
      bindings: hard-bind the bookmark functions to M-Ins and M-PgUp/M-PgDn
      display: support the position indicator also when --softwrap is used
      files: make the M-F (New Buffer) toggle non-persistent

Michalis Kokologiannakis (3):
      files: improve the backup procedure to ensure no data is lost
      tweaks: adjust some indentation after the previous change
      tweaks: move the backup code to a separate function

Ryan Westlund (2):
      syntax: go: highlight the chan keyword, and the special +build comment
      syntax: haskell: new file -- coloring rules for Haskell programs

Andreas K. Foerster (1):
      syntax: ada: new file -- coloring rules for Ada 2012 files

Pedro Victor de Brito Cordeiro (1):
      tweaks: make parameter names in prototypes match those in the definitions

Benno Schulenberg (375):
      anchor: do not let a full justification transfer an anchor to the top
      anchor: do not let piping and spelling transfer an anchor to the top
      anchor: during full justification preserve anchors as during single ones
      backup: do not understand ^C as &quot;Yes&quot; when asking whether to continue
      backup: when rereading the original file fails, ask the user what to do
      bindings: add mistakenly removed M-J (Full Justify) back to the main menu
      bindings: add ^Z (Suspend) to the &quot;Execute Command&quot; menu
      bindings: allow toggling the help lines at several prompts and in browser
      bindings: allow typing digits on the numeric keypad by holding Shift
      bindings: make ^L (Refresh) work at all the prompts too
      bindings: make ^T invoke the &quot;Execute Command&quot; menu, and ^T^T the Speller
      bindings: remove the Full-Justify function from the Search menu
      bindings: stop &amp;lt;Alt+operator&amp;gt; on the keypad from entering spurious letter
      bindings: stop supporting &amp;lt;Esc&amp;gt; &amp;lt;Esc&amp;gt; &amp;lt;numeric slash&amp;gt; without NumLock
      build: allow compilation to succeed on curses without italic support
      build: do not let --disable-speller exclude also the formatter code
      build: fix compilation for --enable-tiny --enable-color --enable-nanorc
      build: fix compilation when configured with --disable-color
      build: fix compilation when configured with --disable-speller
      build: fix compilation when configured with --enable-tiny
      build: fix compilation when configured with --enable-tiny
      build: fix miscompilation for --enable-{tiny,color,nanorc}
      build: fix the Makefile after two header files were renamed
      build: make a deeper clone of gnulib (when building from git)
      build: make ./configure report which global nanorc file will be used
      build: replace the non-standard backslash escape &quot;\e&quot; with &quot;\x1B&quot;
      build: stop distributing a nano.spec file
      build: use a more dependable method for detecting a build from git
      bump version numbers and add a news item for the 5.0 release
      color: avoid allocating emptiness when there are no multiline regexes
      color: when syntax coloring is toggled back on, calculate multiline data
      colors: move purple one step away from magenta, and use a darker mauve
      copying: change the implementation, away from cutting plus copying back
      copying: do not forget to update the screen when M-6 is pressed
      copying: when using M-6, copy the final line in the buffer just once
      copying: with --nonewlines, don't add a final newline to the cutbuffer
      counting: count words and characters without partitioning the file
      counting: count words correctly also when --wordchars is used
      cutting: change the implementation of cutting to not use partitioning
      cutting: overhaul the pasting routine, to not make use of partitioning
      display: avoid an additional redrawing when redrawing the screen
      display: blank the status bar for a copy operation, like for cut &amp;amp; paste
      display: do not try to draw content when there is no open buffer yet
      display: reposition the cursor after an error message also in a help text
      docs: complete the renaming of 'tempfile' to 'saveonexit'
      docs: copy the 4.9.1 news item from the release branch
      docs: copy the 4.9.2 news item from the release branch
      docs: copy the 4.9.3 news item from the release branch
      docs: document the --indicator (-q) and 'set indicator' options
      docs: document the new -O/--bookstyle and 'set bookstyle' options
      docs: explain how anchors work, and document their bindable functions
      docs: improve some descriptions concerning the file browser
      docs: in the sample nanorc file, refer instead of duplicating
      docs: mention that doing a full-buffer operation wipes away all anchors
      docs: mention that M-X toggle is special, because available in most menus
      docs: mention that the dedicated cursor-moving keys are not rebindable
      docs: mention the nine new color names, and &quot;bold&quot; plus &quot;italic&quot;
      docs: note Marco as the original author of the bookmarking code
      docs: reduce the TODO file to a reference to the bug tracker on Savannah
      docs: stop mentioning that --wordchars overrides --wordbounds
      docs: use 'bold' and 'light' instead of 'bright' in the sample nanorc
      feedback: beep also at a prompt when receiving an unknown escape sequence
      feedback: do not list &quot;.&quot; and &quot;..&quot; as possible &amp;lt;Tab&amp;gt;&amp;lt;Tab&amp;gt; completions
      feedback: indicate an anchor with a &quot;+&quot; in the line-number margin
      feedback: show a message also when trying to copy an empty region
      feedback: show the cursor position also at startup in an empty buffer
      feedback: skip wiping the prompt bar when the shortcut printed a message
      files: also when creating a backup fails, ask the user whether to proceed
      files: ask the user whether to proceed every time a backup fails
      files: before prompting, show also the reason why the backup failed
      files: disallow tabbing when in restricted mode
      files: do not append but truncate when allowing insecure backups
      files: do not let a stray CR in a DOS file trigger Mac format
      files: do not make a failsafe backup when in restricted mode
      files: give a more precise warning when deleting an existing backup fails
      files: ignore errors when calling chmod() on a backup file
      files: ignore errors when calling chown() on a backup file
      files: ignore errors when calling futimens() on a backup file
      files: list possible completions after just one &amp;lt;Tab&amp;gt; instead of two
      files: make a backup only when requested, not an unrequested failsafe one
      files: make better use of the last row when there are many completions
      files: make filtering of the entire buffer into a new buffer work again
      files: never report a file as being of mixed format
      files: reinitialize the palette only when the syntax actually changed
      files: remove two superfluous calls for shielding temp files from others
      files: show a warning when writing a backup fails, before prompting
      files: show possible tab completions near the bottom of the edit window
      files: take into account that also closing a backup file can fail
      files: trigger the Easter egg only when &quot;zzy&quot; is typed at the prompt
      files: warn the root user when all the write bits are missing
      files: write out a marked region without partitioning the buffer
      general: make five tools accessible through the &quot;Execute Command&quot; menu
      general: rename &quot;bookmark&quot; to &quot;anchor&quot;, to sound less permanent
      gnulib: update to its current upstream state
      help: describe what has been added to the &quot;Execute Command&quot; menu
      help: pair the items in the two bottom lines better in the tiny version
      help: put the two toggles first in the &quot;Execute Command&quot; menu
      history: don't send error messages to the screen; store them in the queue
      history: take into account that closing a file can fail
      history: take into account that statting a file can fail too
      indicator: recompute the extra rows also for cut/paste/split/join
      indicator: recompute the extra rows also when justifying and resizing
      indicator: rework how the &quot;scrollbar&quot; is computed when softwrapping
      input: interpret an escape sequence only when it starts with &quot;[&quot; or &quot;O&quot;
      input: reset the counters when a three-digit sequence is not completed
      input: stop recognizing the raw escape sequences for F13 to F16
      locking: ignore the insecure-backup flag when creating a lock file
      locking: prevent a symlink attack by not opening an existing lock file
      memory: plug a leak, by freeing the cutbuffer after a bracketed paste
      menus: remove unneeded words and shortenings from key labels
      new feature: a position-plus-portion indicator on the righthand side
      oops -- restore an accidentally changed file
      options: add --indicator and -q for switching on the scroll-bar thing
      options: add -O/--bookstyle to make leading whitespace mean new paragraph
      options: let --afterends affect also the deleting of words (Ctrl+Delete)
      options: make -S the short synonym of --softwrap
      options: rename --tempfile to --saveonexit, to be far clearer
      options: stop recognizing the obsolete --morespace and --smooth
      po: update translations and regenerate POT file and PO files
      prompt: at Yes-No, do not treat a screen resize as an invalid keystroke
      rcfile: accept prefix &quot;light&quot; to make a color brighter without bolding it
      rcfile: add bindable function 'execute', for access to &quot;Execute Command&quot;
      rcfile: allow specifying a bright background color (with prefix &quot;light&quot;)
      rcfile: complain when an essential key binding is missing
      rcfile: do not complain when &quot;bright&quot; is used with a background color
      rcfile: introduce nine new named colors, from &quot;pink&quot; to &quot;latte&quot;
      rcfile: introduce the modifier &quot;bold&quot;, for specifying bolding separately
      rcfile: introduce the modifier 'italic', for slanted text
      rcfile: rename bindable function 'curpos' to 'location'
      rcfile: rename 'extcmd' to 'execute', to be more readable and fitting
      rcfile: report the first bad color element, not a later one that is okay
      rcfile: restore terminal settings when exiting upon excessive unbindings
      replacing: recalculate the multiline coloring info when needed
      scrolling: add a function and a key binding to center the cursor line
      speller: take into account that statting a file can fail  [coverity]
      startup: allow presetting case-sensitive search also in the tiny version
      startup: check stdout instead of stdin when probing for a Linux console
      startup: enter curses mode before reading the nanorc files
      startup: initialize colors only when the terminal is capable of colors
      syntax: css: color multiline comments correctly
      syntax: default: colorize embedded control codes
      syntax: email: rename file and syntax, away from the mistaken 'mutt'
      syntax: markdown: do not colorize text between two bold words as italic
      syntax: markdown: new file -- coloring rules for Markdown files
      syntax: mgp: drop the almost-empty MagicPoint file and syntax
      syntax: move distro-specific files down to a subdirectory, syntax/extra/
      syntax: nanorc: colorize 'bright' anyway, so existing syntaxes look okay
      syntax: nanorc: colorize the new named colors too, from &quot;mint&quot; to &quot;mauve&quot;
      syntax: nanorc: stop colorizing 'bright', even though it's still accepted
      syntax: sql: condense some regexes, and reduce their number
      syntax: sql: rename the file to match the name of the syntax
      syntaxes: move the rules for Fortran and Povray files down to extra/
      syntaxes: remove some stuff that has been commented out for a long time
      syntaxes: remove some superfluous outer parentheses from regexes
      syntaxes: remove unneeded backslash escapes before quotes
      syntaxes: uniformize the initial comment
      tabbing: beep at the first listing, and when there are zero possibilities
      tabbing: properly terminate the answer when the sole match is a folder
      text: retain a bookmark when two lines are joined or something is cut
      tweaks: add a condition, so that two ifs can be elided
      tweaks: add a helpful message for when pkg.m4 is missing during a build
      tweaks: add a helping variable, in order to unwrap three lines
      tweaks: add a helping variable, to slightly condense the code
      tweaks: add a symbol, in order to condense three function calls
      tweaks: add four early returns for read/write errors of history files
      tweaks: add four more translator hints
      tweaks: add two comments, and improve another
      tweaks: adjust comments and indentation after the previous change
      tweaks: adjust the conditional help-item pairing for absence of speller
      tweaks: adjust the file format indicator in a quicker way
      tweaks: adjust the indentation after the previous change
      tweask: adjust the indentation after the previous change
      tweaks: avoid a compiler warning
      tweaks: avoid a function call when a simple boolean will do
      tweaks: avoid an unnecessary refresh for zero or just one completion
      tweaks: avoid a warning about an unused variable in the tiny version
      tweaks: avoid checking a variable three times for each pass in the loop
      tweaks: avoid unneeded calls of free() by reallocating the full name
      tweaks: call init_pair() just once for each pair number
      tweaks: call the spotlighting routines only for the relevant line
      tweaks: call use_default_colors() just once for each run
      tweaks: cascade the ifs properly: without increasing the indentation
      tweaks: change a helping variable, to make two blocks still more similar
      tweaks: change a 'switch' to 'if', to elide a dummy 'return'
      tweaks: close opened files when something goes wrong  [coverity]
      tweaks: condense a bit of code, by reusing an existing variable
      tweaks: condense a comment, and express a condition in a different way
      tweaks: condense a comment, and reshuffle a few lines
      tweaks: condense a comment, and reshuffle some conditions
      tweaks: condense and improve some comments
      tweaks: condense some cases to a single line, for more clarity
      tweaks: condense the code a little further, by grouping things better
      tweaks: correct a comment, and avoid third repetition of some conditions
      tweaks: correct a comment, and drop a redundant (because nested) #ifdef
      tweaks: correct some comments, as VT100 and such have smaller keypads
      tweaks: correct two spelling mistakes  [codespell]
      tweaks: delete a ChangeLog that is no longer updated and is incomplete
      tweaks: delete another pointless ChangeLog
      tweaks: delete a now-unused function
      tweaks: delete some unneeded code, and rename the function accordingly
      tweaks: delete the now-unused partitioning and unpartitioning routines
      tweaks: delete two functions that are never executed
      tweaks: do not use 'switch' when there are just two possibilities
      tweaks: do not use the string &quot;stat()&quot; in any of the comments
      tweaks: don't bother overwriting a CR -- decreasing the length is enough
      tweaks: don't bother statting the lock file before unlinking it
      tweaks: don't bother using the exclusive flag when creating a lock file
      tweaks: don't check for escape sequences that start with a lowercase &quot;o&quot;
      tweaks: don't use a symbol for other purposes
      tweaks: do the conversion of -1 to a specific color just once
      tweaks: do the saving of histories in a single place
      tweaks: drop an unneeded assignment, and reshuffle a few lines
      tweaks: drop a superfluous check for a non-zero length
      tweaks: drop obsolete 'nano.spec' from .gitignore file, and reshuffle
      tweaks: drop two redundant conditions, and improve three comments
      tweaks: drop two unneeded assignments
      tweaks: drop two unneeded wnoutrefresh() calls in the spotlight routines
      tweaks: elide a function that is called just once
      tweaks: elide a function that is too sparse
      tweaks: elide another parameter, relevant in just three menus
      tweaks: elide a now-unused parameter -- it is always FALSE
      tweaks: elide an unneeded call of strlen(), and copy NUL byte with string
      tweaks: elide an unneeded global variable
      tweaks: elide an unneeded parameter, and rename the other
      tweaks: elide an unneeded variable, as there is nothing beyond '*place'
      tweaks: elide an unused parameter, and rename the other and a variable
      tweaks: elide a parameter, by calling the relevant function beforehand
      tweaks: elide a parameter that is relevant for only one menu (Goto Dir)
      tweaks: elide a redundant intermediate function
      tweaks: elide a variable and be more direct, and rename another
      tweaks: elide a variable, and shortcircuit a return
      tweaks: elide a variable, by returning the result directly
      tweaks: elide a wrapper function, by checking a precondition earlier
      tweaks: elide three functions that are called just once
      tweaks: elide three parameters, as they are the same for both calls
      tweaks: elide two ifs for the most likely case, when defaults are allowed
      tweaks: elide two redundant calls of strchr()
      tweaks: exclude a bit of bracketed-paste code from the tiny version
      tweaks: exclude an unneeded fragment of code from the tiny version
      tweaks: exit from the writing loop as soon as the last line is reached
      tweaks: fix twenty typos, in old Changelogs and in some comments
      tweaks: fold translation of all modified keypad keystrokes together
      tweaks: fold two blocks into each other, to elide three overlapping cases
      tweaks: for each version, mention the changes to the PO files last
      tweaks: get rid of a bunch of annoying casts, and thus condense the code
      tweaks: group the exiting routines together, and condense the comments
      tweaks: handle the double escapes directly, instead of going round again
      tweaks: handle two similar things in the same way
      tweaks: implement the anchor routines in a different way
      tweaks: improve a comment, rename a function, and elide a parameter
      tweaks: improve a comment, reshuffle a scroll command, elide a variable
      tweaks: improve four comments
      tweaks: improve several comments, and rewrap two lines
      tweaks: improve some comments, and reshuffle an assignment
      tweaks: improve some comments and whitespace, and reshuffle a few lines
      tweaks: improve three comments, drop one, and unwrap a line
      tweaks: improve two comments, and reshuffle some lines for conciseness
      tweaks: invert a condition, to have two clauses in a more logical order
      tweaks: invert a condition, to see the similarity between the two modes
      tweaks: make an early return for zero matches, and rename a variable
      tweaks: make an error message more accurate and reduce it to its essence
      tweaks: make three hard-bindings of special keys more efficiently
      tweaks: move a copyright notice to a better place, and improve it
      tweaks: move a fragment of code to the one branch that needs it
      tweaks: move a function to a more logical place
      tweaks: move a function to before the one that calls it
      tweaks: move a function to before the one that calls it
      tweaks: move a function, to be in the order in which they are called
      tweaks: move a function to the file where it is used the most
      tweaks: move an 'if', to not call leftedge_for() when not softwrapping
      tweaks: move an initialization function to before the one that calls it
      tweaks: move two functions, to have them in a more logical order
      tweaks: normalize the indentation after the previous change
      tweaks: normalize the indentation after the previous change
      tweaks: normalize the indentation after the previous change
      tweaks: normalize the indentation after the previous change
      tweaks: normalize the indentation after the previous change
      tweaks: order three menu names in the documentation slightly better
      tweaks: plug a leak, by always freeing the full filename  [valgrind]
      tweaks: rake a common statement to the end of the case
      tweaks: recalculate the multiline info just once when doing &quot;Replace All&quot;
      tweaks: reduce the indentation after the previous change
      tweaks: remove an incorrect mention of umask() from a comment
      tweaks: remove an unneeded call of wnoutrefresh()
      tweaks: remove an unneeded cursor movement, and rename a variable
      tweaks: remove an unneeded element from the openfilestruct
      tweaks: remove a redundant cursor movement, remove a redundant condition
      tweaks: remove a superfluous check on the length of the key buffer
      tweaks: remove a superfluous global variable
      tweaks: remove some superfluous conditions
      tweaks: remove three unneeded while loops from two input routines
      tweaks: remove two calls of umask() by specifying permissions directly
      tweaks: remove two redundant conditions, and make a more direct return
      tweaks: remove two superfluous assignments
      tweaks: remove unneeded variables after the previous change
      tweaks: rename a function, and move it to before the one that calls it
      tweaks: rename a function, and move it to before the one that calls it
      tweaks: rename a function, to be more correct
      tweaks: rename a function, to be more general and clearer
      tweaks: rename a function, to be more precise, and reshuffle it
      tweaks: rename a function, to be more precise, and reshuffle some things
      tweaks: rename a function, to better describe what it does
      tweaks: rename a function, to leave the old names behind
      tweaks: rename a function, to match with the boolean that guards it
      tweaks: rename a function, to not shadow a variable, and elide parameter
      tweaks: rename a parameter and a variable, to be more meaningful
      tweaks: rename a struct element, to be shorter and preciser
      tweaks: rename a symbol, and actually use it where it is needed
      tweaks: rename a symbol, away from a double abbreviation
      tweaks: rename a symbol, from a phrase to a noun
      tweaks: rename a symbol, to be more accurate, and reshuffle two lines
      tweaks: rename a symbol, to better suit its purpose, and reduce its scope
      tweaks: rename a variable, and condense a comment
      tweaks: rename a variable, and normalize the indentation
      tweaks: rename a variable, and reduce the scope of two others
      tweaks: rename a variable, for more contrast with the function name
      tweaks: rename a variable, for shortness and contrast
      tweaks: rename a variable, improve a comment, and reshuffle a few things
      tweaks: rename a variable, to avoid overrepetition of 'backup'
      tweaks: rename a variable, to better describe what it holds
      tweaks: rename a variable, to better fit related ones
      tweaks: rename a variable, to make more sense
      tweaks: rename a variable, to not refer to a row as a &quot;line&quot;
      tweaks: rename one of the flag symbols, to be clearer
      tweaks: rename two functions and a variable, and improve two comments
      tweaks: rename two functions, and rename and reshuffle a parameter
      tweaks: rename two functions, to better indicate what they do
      tweaks: rename two header files, to be distinct and not an abbreviation
      tweaks: rename two labels, for brevity
      tweaks: rename two parameters, away from abbreviations
      tweaks: rename two parameters, away from an abbreviation
      tweaks: rename two parameters, to be more fitting
      tweaks: rename two variables, and reduce the scope of a third
      tweaks: rename two variables, away from abbreviations
      tweaks: rename two variables, to avoid a repetitive prefix
      tweaks: rename two variables, to be shorter and without abbreviations
      tweaks: reshuffle a bit of code, to elide an #ifndef
      tweaks: reshuffle a condition, for symmetry
      tweaks: reshuffle a condition, to avoid a repetition of code
      tweaks: reshuffle a condition, to make a little more sense
      tweaks: reshuffle a declaration and six calls of free(), to avoid a leak
      tweaks: reshuffle a few lines, and remove a few unneeded comments
      tweaks: reshuffle a few lines, for conciseness
      tweaks: reshuffle a few lines, to elide an 'if' from the most common path
      tweaks: reshuffle a fragment of code, to elide a 'goto'
      tweaks: reshuffle an assignment, for conciseness, and rename a variable
      tweaks: reshuffle and trim a comment, and remove unneeded pair of braces
      tweaks: reshuffle a statement, to have major initialization in nano.c
      tweaks: reshuffle some code, to avoid needlessly calling a function
      tweaks: reshuffle some conditions, to straighten the logic
      tweaks: reshuffle some lines, for esthetics
      tweaks: reshuffle some lines, to better separate the three cases
      tweaks: rewrap a few lines in old news items, for more balanced lines
      tweaks: separate a symbol from its definition by two spaces
      tweaks: shorten an error message, to be appropriate in all situations
      tweaks: shorten the name of a symbol, to match its bindable function
      tweaks: simplify an error message, by mentioning just the main point
      tweaks: simplify the counting of characters in a section
      tweaks: skip the conversion to multibyte for plain ASCII codes
      tweaks: slightly improve a comment and the ordering of some lines
      tweaks: slightly improve the grouping of shortcuts in some help texts
      tweaks: three escapes is the same as either zero escapes or one escape
      tweaks: trim an ASCII case, as the function is called only for UTF-8
      tweaks: trim some oververbose comments -- they overshadow the code
      tweaks: uniformize some old translator credits
      tweaks: update a translator hint, and add another
      tweaks: update three translator hints, add two, and frob three strings
      tweaks: use a better symbol than 'ERR' to signify a valid hex digit
      tweaks: use knowledge of Unicode to skip the general multibyte conversion
      tweaks: use three switches instead of cascading ifs, for brevity
      undo: choose the proper x positions to place the cursor and rejoin lines
      undo: when undoing a line cut, place the cursor back where it was
      usage: unabbreviate option arguments where possible
      verbatim: show an error message when an invalid Unicode code is entered
      verbatim: turn bracketed-paste mode off while waiting for input

-- 

Benno

&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/pgpxYU4kysZQp.pgp&quot;&gt;&lt;img src=&quot;https://lists.gnu.org/icons/generic.png&quot; align=&quot;left&quot; border=&quot;0&quot; alt=&quot;Attachment:&quot; width=&quot;20&quot; height=&quot;22&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://lists.gnu.org/archive/html/info-gnu/2020-07/pgpxYU4kysZQp.pgp&quot;&gt;&lt;tt&gt;signature.asc&lt;/tt&gt;&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;&lt;em&gt;Description:&lt;/em&gt; OpenPGP digital signature&lt;/p&gt;
&lt;hr /&gt;
&lt;hr /&gt;&lt;table width=&quot;100%&quot;&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;[Prev in Thread]&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Current Thread&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;[Next in Thread]&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;strong&gt;[ANNOUNCE] nano-5.0 is released&lt;/strong&gt;, &lt;em&gt;Benno Schulenberg&lt;/em&gt;&lt;/span&gt; &lt;strong&gt;&amp;lt;=&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr /&gt;&lt;/body&gt;</description>
<pubDate>Thu, 30 Jul 2020 08:37:49 +0000</pubDate>
<dc:creator>doener</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lists.gnu.org/archive/html/info-gnu/2020-07/msg00010.html</dc:identifier>
</item>
<item>
<title>Apple does not keep the 30% commission on a refund</title>
<link>https://twitter.com/twolivesleft/status/1288625617873694721</link>
<guid isPermaLink="true" >https://twitter.com/twolivesleft/status/1288625617873694721</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/twolivesleft/status/1288625617873694721&quot;&gt;https://twitter.com/twolivesleft/status/1288625617873694721&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23995750&quot;&gt;https://news.ycombinator.com/item?id=23995750&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 1548&lt;/p&gt;
&lt;p&gt;# Comments: 348&lt;/p&gt;
</description>
<pubDate>Thu, 30 Jul 2020 08:06:56 +0000</pubDate>
<dc:creator>metafunctor</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/twolivesleft/status/1288625617873694721</dc:identifier>
</item>
<item>
<title>Luckysheet, an open-source spreadsheet</title>
<link>https://github.com/mengshukeji/Luckysheet</link>
<guid isPermaLink="true" >https://github.com/mengshukeji/Luckysheet</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://gitter.im/mengshukeji/Luckysheet?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e8e74c43ea63f8ed08777290dfe85a7323b7319f/68747470733a2f2f6261646765732e6769747465722e696d2f6d656e677368756b656a692f4c75636b7973686565742e737667&quot; alt=&quot;Join the chat at https://gitter.im/mengshukeji/Luckysheet&quot; data-canonical-src=&quot;https://badges.gitter.im/mengshukeji/Luckysheet.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;English| &lt;a href=&quot;https://github.com/mengshukeji/Luckysheet/blob/master/README-zh.md&quot;&gt;简体中文&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Support table settings including freezing columns, merging cells, filtering, sorting, querying, conditional formatting, and annotations&lt;/li&gt;
&lt;li&gt;Support data analysis functions including pivottables, charts, columns, matrix operations, built-in 385 calculation functions&lt;/li&gt;
&lt;li&gt;Support one-click screenshots, data copying as json,shared editing, and free data copying and pasting between excel and luckysheet&lt;/li&gt;
&lt;li&gt;Support mobile viewing&lt;/li&gt;
&lt;li&gt;Support sparkLine&lt;/li&gt;
&lt;li&gt;Drop down copy&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/24ce8e791276fb4331502e984726d7eceb99c7fe/68747470733a2f2f6d696e696f2e636e626162796c6f6e2e636f6d2f7075626c69632f6c75636b7973686565742f4c75636b79736865657444656d6f2e676966&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/24ce8e791276fb4331502e984726d7eceb99c7fe/68747470733a2f2f6d696e696f2e636e626162796c6f6e2e636f6d2f7075626c69632f6c75636b7973686565742f4c75636b79736865657444656d6f2e676966&quot; alt=&quot;Demo&quot; data-canonical-src=&quot;https://minio.cnbabylon.com/public/luckysheet/LuckysheetDemo.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Plan&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Improve chart plugin&lt;/li&gt;
&lt;li&gt;Insert picture&lt;/li&gt;
&lt;li&gt;Data validation (checkbox, drop-down list)&lt;/li&gt;
&lt;li&gt;Print&lt;/li&gt;
&lt;li&gt;Cell segmentation style&lt;/li&gt;
&lt;li&gt;Tree menu&lt;/li&gt;
&lt;li&gt;Table function: filter, slice&lt;/li&gt;
&lt;li&gt;Excel import/export&lt;/li&gt;
&lt;li&gt;More...&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDemo/&quot; rel=&quot;nofollow&quot;&gt;Online demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mengshukeji.github.io/LuckysheetDocs/&quot; rel=&quot;nofollow&quot;&gt;Online documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; rel=&quot;nofollow&quot;&gt;Node.js&lt;/a&gt; Version &amp;gt;= 6&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;npm install
npm install gulp -g
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;p&gt;Development&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm run dev
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Package&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm run build
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Read&lt;/p&gt;
&lt;p&gt;The core code of Luckysheet is luckysheet-core.js and luckysheet-function.js, developers only need to look at these two files to see the source code, and then we will discuss the modularization scheme and improve this library.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;h4&gt;First step&lt;/h4&gt;
&lt;p&gt;Copy all files in the &lt;code&gt;dist&lt;/code&gt; folder after &lt;code&gt;npm run build&lt;/code&gt; to the project directory&lt;/p&gt;
&lt;h4&gt;Second step&lt;/h4&gt;
&lt;p&gt;Introduce dependencies&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;link rel='stylesheet' href='./plugins/css/pluginsCss.css' /&amp;gt;
&amp;lt;link rel='stylesheet' href='./plugins/plugins.css' /&amp;gt;
&amp;lt;link rel='stylesheet' href='./css/luckysheet.css' /&amp;gt;
&amp;lt;script src=&quot;./plugins/js/plugin.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;./luckysheet.umd.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;Third step&lt;/h4&gt;
&lt;p&gt;Specify a table container&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;div id=&quot;luckysheet&quot; style=&quot;margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 0px;&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;Fourth step&lt;/h4&gt;
&lt;p&gt;Create a table&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;&amp;lt;script&amp;gt;
    $(function () {
        //Configuration item
        var options = {
            container: 'luckysheet' //luckysheet is the container id
        }
        luckysheet.create(options)
    })
&amp;lt;/script&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Contact&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;mailto:mengshu@office2.cn&quot;&gt;mengshu@office2.cn&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;communication&lt;/h2&gt;
&lt;h2&gt;Authors and acknowledgment&lt;/h2&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://opensource.org/licenses/MIT&quot; rel=&quot;nofollow&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright (c) 2020-present, mengshukeji&lt;/p&gt;
</description>
<pubDate>Thu, 30 Jul 2020 04:14:51 +0000</pubDate>
<dc:creator>tzm</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/61444807?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>mengshukeji/Luckysheet</og:title>
<og:url>https://github.com/mengshukeji/Luckysheet</og:url>
<og:description>Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source. - mengshukeji/Luckysheet</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/mengshukeji/Luckysheet</dc:identifier>
</item>
<item>
<title>Universal Basic Income is Capitalism 2.0</title>
<link>https://timjrobinson.com/universal-basic-income-is-capitalism-2-0/</link>
<guid isPermaLink="true" >https://timjrobinson.com/universal-basic-income-is-capitalism-2-0/</guid>
<description>&lt;p&gt;A Universal Basic Income (UBI) would improve everyone’s lives, increase our free time, empower workers, and ensure everyone has food and a roof over their head. These are noble goals, but obviously there’s a downside or it would already be implemented, right? &lt;/p&gt;&lt;p&gt;What if a UBI wasn’t just a noble thing to do, but the best thing to kick-start the economy and explode GDP growth to previously unseen levels? I believe UBI is capitalism 2.0 and today I’m going to show you why.&lt;/p&gt;
&lt;h2&gt;Why does capitalism work so well?&lt;/h2&gt;
&lt;p&gt;Even the most hardcore anti-capitalists have to give respect to how the combination of capitalism and technology has worked to lift most of the world out poverty and provided us with the security and comfort only kings enjoyed just a few century’s ago.&lt;/p&gt;
&lt;p&gt;I’m a huge fan of capitalism and free trade, as laid out in Adam Smith’s genre defining book &lt;a href=&quot;https://amzn.to/2ZMJGZG&quot;&gt;The Wealth of Nations&lt;/a&gt;. The first core component of capitalism is the understanding that when everyone performs the work they are best at, then trades with each other, everyone wins.&lt;/p&gt;
&lt;p&gt;The second core component of capitalism is the more accurate information you have, the better economic decisions you make. Free-Market Capitalism has always outperformed top down economic control because those at the top can’t manage all the information about the economy, such as who is best at what, and where the most efficient areas to allocate resources are. When everyone learns about and optimizes their own section of the economy, much more wealth is generated than if they were told what to do by some central government. &lt;/p&gt;
&lt;p&gt;Capitalism accelerated in the 18th Century with Industrialization. We became more efficient at turning raw goods into useful products, which generated more wealth. The increased supply of goods caused their prices to lower so everyone could afford more stuff. &lt;/p&gt;
&lt;p&gt;In the 19th century the age of Nationalism began. Legal corporations were invented, and big corporations began building train lines, ships, and started digging for oil and coal. Our overall energy production and connectivity increased, which created more wealth as more people could work together, with every person specializing in what they were good at. &lt;/p&gt;
&lt;p&gt;In the 20th century we started the Globalization experiment. Ship’s became more massive than ever which lowered the costs to shipping anywhere in the world. Governments also started becoming more cooperative. Because we all become wealthier when goods are produced by those most efficient at making them, eventually goods started to be produced in low income countries. The income of those living in developing nations went up, and those in the developed world received cheaper goods. &lt;/p&gt;
&lt;p&gt;In the late 20th century and early 21st century we started on the Automation experiment. This is still in its infancy but will eventually be a complete revolution of capitalism as big as the industrial age first was.&lt;/p&gt;
&lt;p&gt;Strangely, even though we’re in a golden age of hyper-efficient production and trade, the overall GDP growth of the USA is slowing. This is happening because we’re reaching the end of the current stage of capitalism and need a new paradigm for the 21st century. &lt;/p&gt;
&lt;h2&gt;Winner take all economics&lt;/h2&gt;
&lt;p&gt;A core feature of capitalism is when people are given freedom of choice in their spending, they want the best value goods they can get.&lt;/p&gt;
&lt;p&gt;Imagine an 18th century town with two widget makers, one of whom makes significantly better and/or cheaper widgets than the other. Once the townsfolk realize this, the shop with the superior product would gain all their business causing the other company to go bankrupt.&lt;/p&gt;
&lt;p&gt;As capitalism went national in the 19th century, it was no longer good enough to be the best widget producer in your local town. Now you had to compete against the other widget producers in your state or country. Over time, people learned who made the best value widgets and took their business there, even if the producer lived hundreds of miles away. If that widget maker could keep up with demand, they may eventually own the majority of the market. Instead of putting one competitor out of business, as per the 18th century town, they could potentially bankrupt thousands of other companies. &lt;/p&gt;
&lt;p&gt;As the market got bigger, the rewards for winning were greater. The best widget producers of the 19th century made significantly more wealth than the best in the 18th century, even if they took over less of the market.&lt;/p&gt;
&lt;img src=&quot;https://timjrobinson.com/wp-content/uploads/2020/07/capitalisms-rewards-2.png&quot; alt=&quot;&quot; class=&quot;wp-image-344&quot; srcset=&quot;https://timjrobinson.com/wp-content/uploads/2020/07/capitalisms-rewards-2.png 664w, https://timjrobinson.com/wp-content/uploads/2020/07/capitalisms-rewards-2-196x300.png 196w&quot; sizes=&quot;(max-width: 664px) 100vw, 664px&quot;/&gt;&lt;p&gt;This is why wealth inequality soared when capitalism went global in the 20th century. Potential markets grew to astronomical size, with huge rewards for the victors. As companies became more efficient they could take over entire global markets and produce their goods in the cheapest, most efficient location possible. This led to massive accumulations of wealth and the biggest wealth gap in history.&lt;/p&gt;
&lt;p&gt;This in itself isn’t a bad thing. After all, we’ve all become wealthier in the last few centuries even if some have become unimaginably wealthy. But what happens if most of the money accrues to the top of society? It leads to lack of demand for the widgets being produced, because those at the bottom don’t have enough wealth to purchase them.&lt;/p&gt;
&lt;p&gt;There’s a common economic theory called “supply-side economics”. The core belief is that if you allow companies to compete and optimize, they will drive down the cost of products which will allow consumers to purchase more, which stimulates GDP growth. &lt;/p&gt;
&lt;p&gt;Now supply-side economics makes sense, and products have become cheaper over time. However you always reach a point of diminishing returns where you’d have to spend vast amounts of money to make your product only a fraction of a percent cheaper, and thus it’s not worth the investment. When a company starts to reach this equilibrium they cannot lower the price enough to gain enough new customers and they start to become demand-constrained. &lt;/p&gt;
&lt;p&gt;When a company is demand-constrained it can keep up with orders from customers, and produce as many products as they desire without needing to add additional production capacity. As we’ve had so much competition, automation and globalization in the 20th century, most consumer goods companies have now reached equilibrium and become demand-constrained. &lt;/p&gt;
&lt;p&gt;When demand-constrained, they need to increase demand for their product in order to make more money. They do this via advertising. We can see that more and more companies are becoming demand constrained because their advertising budgets increase every year:&lt;/p&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/biWhrntU11ercokAXrnHp2bykerAyyfyRlBIJ8gFV1yWuxk4ULbk9uXRMwpaFevP8aaqahbm2OBmcE45klv4aO4OzH66qRe3ZAn4BDi6_F0iD0CGDBGfkx4AHn4A0SvHZq7Hr36q&quot; alt=&quot;&quot;/&gt;&lt;p&gt;The thing is, &lt;a href=&quot;http://press.careerbuilder.com/2017-08-24-Living-Paycheck-to-Paycheck-is-a-Way-of-Life-for-Majority-of-U-S-Workers-According-to-New-CareerBuilder-Survey&quot;&gt;consumers in the bottom 78% of US workers live paycheck to paycheck&lt;/a&gt;, they already spend everything they have each month.They’re not holding back additional money, waiting for the right product to appear. Which means all this advertising is creating little additional growth and wealth, it’s just taking it from other companies.&lt;/p&gt;
&lt;p&gt;So we’ve got the supply, we have enough products, and people are spending as much as they can on the products out there. We’ve reached economic equilibrium, and as a consequence of this, growth stagnates:&lt;/p&gt;
&lt;h4 class=&quot;has-text-align-center&quot;&gt;United States GDP Annual Growth Rate 1948-2020&lt;/h4&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/jUe4AvpQOvE9jXyS-4Y_NOvC1E7KYGK696zpAbt4Q-yQEPNZHovBKLSXuJZu2U4XpcEOVHLB-IuLKNHTFPhz9ln3dFrW1Jc2-7pewC-eZ-XZJMVs5P9MzC2VW8RJ8UFjqRvuqxpl&quot; alt=&quot;&quot;/&gt;&lt;p&gt;Instead of continually trying to optimize supply, with diminishing returns, we need to optimize demand by giving consumers more money to spend on things they desire.&lt;/p&gt;
&lt;p&gt;If we can give companies overwhelming demand so they have to scale up production instead of spending all their money on advertising, we can have both happy companies making profit hand over fist, and happy consumers who get everything they desire.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To reverse this trend of stagnating growth, we must put more capital in the hands of lower income consumers, who will then spend it on things they desire and increase GDP.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;The Solutions&lt;/h2&gt;
&lt;p&gt;There are multiple ways to increase capital at the bottom of the wealth pyramid. Most of them involve attempting to revert to some past state of society. Only one of them fully embraces capitalism and all its strengths and extends it into the future. &lt;/p&gt;
&lt;p&gt;The first solution is some form of nationalism, where countries enact tariffs and attempt to bring all production back to the country instead of producing it overseas. This will create higher paying jobs for those whose work was previously outsourced to cheaper countries. However, this creates less wealth overall as work is no longer given to where it’s done most efficiently. This breaks the primary component of capitalism. &lt;/p&gt;
&lt;p&gt;The second solution is some sort of socialism, where the government introduces new laws and systems to redirect money to attempt to balance the system manually. This will help, but creates less wealth overall as the government must make many decisions with limited information. There is no way the government can make spending decisions for millions of people, and have those decisions be better than what those people could make on their own. Thus this is less efficient and goes against the second core component of capitalism. &lt;/p&gt;
&lt;p&gt;The third solution is a Universal Basic Income, where countries distribute some wealth to all residents equally. This keeps both the first and second core components of capitalism intact. Jobs are done in the most efficient locations and those deciding where money should be spent are the ones with the most information. As jobs are displaced no one is left without an income source and the bottom of the income pyramid has enough to keep consuming. &lt;/p&gt;
&lt;p&gt;The fourth solution is to ignore this and hope for the best. If history is any guide we’ll either get economic stagnation for decades, or those at the bottom of the wealth pyramid will get so mad it leads to violent revolution. So it’s best we avoid this. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Obvious Next Step&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It’s clear we’ve stepped into a new world of rapidly increasing wealth, but growth is slowing down because of the effects of globalization and automation. We’re now faced with a few choices. Most of these choices will undo progress and take us back to a previous state of the world with less overall wealth. A UBI embraces capitalism and takes us into a future of happy wealthy lives, with everyone benefitting from the massive increases in wealth humanity has achieved. Even if you’re still doubtful you can see it’s the least worst solution we have to make capitalism work in the 21st century. &lt;/p&gt;
&lt;p&gt;A UBI is the logical next step we must take to move forward as humanity. If we continue to wait more people will suffer and we’ll end up stagnating for decades, or destroying the fruits of capitalism in revolution anyway. &lt;/p&gt;


</description>
<pubDate>Thu, 30 Jul 2020 01:00:42 +0000</pubDate>
<dc:creator>TimJRobinson</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://timjrobinson.com/universal-basic-income-is-capitalism-2-0/</dc:identifier>
</item>
<item>
<title>Jeff Bezos can’t promise Amazon employees don’t access independent seller data</title>
<link>https://www.theverge.com/2020/7/29/21347083/jeff-bezos-amazon-tech-antitrust-hearing-jayapal-questioning</link>
<guid isPermaLink="true" >https://www.theverge.com/2020/7/29/21347083/jeff-bezos-amazon-tech-antitrust-hearing-jayapal-questioning</guid>
<description>&lt;p id=&quot;bh09Zd&quot;&gt;During Wednesday’s antitrust hearing, Amazon and its CEO Jeff Bezos came under fire by lawmakers over the company’s alleged use of third-party seller data in developing its own products.&lt;/p&gt;
&lt;p id=&quot;FfzyUY&quot;&gt;Earlier this year, &lt;a href=&quot;https://www.wsj.com/articles/amazon-scooped-up-data-from-its-own-sellers-to-launch-competing-products-11587650015&quot;&gt;&lt;em&gt;The&lt;/em&gt; &lt;em&gt;Wall Street Journal&lt;/em&gt; reported&lt;/a&gt; that Amazon employees have accessed sales data from independent sellers on its marketplace to help the company develop competing products for its private-label. Amazon has a policy barring the practice, but lawmakers like Rep. Pramila Jayapal (D-WA) focused in on the company’s enforcement of that policy.&lt;/p&gt;
&lt;p id=&quot;JB4KpG&quot;&gt;“Let me ask you, Mr. Bezos, does Amazon ever access and use seller data when making business decisions?” Jayapal asked.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;HSYNsV&quot;&gt;&lt;q&gt;“I can’t guarantee you that that policy has never been violated.”&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;FMXObU&quot;&gt;Bezos highlighted the company’s policy banning the practice, but said, “I can’t guarantee you that that policy has never been violated.” He continued, “We continue to look into that very carefully. I’m not yet satisfied that we’ve gotten to the bottom of it, and we’re going to keep looking at it. It’s not as easy to do as you would think because some of the sources in the article are anonymous.”&lt;/p&gt;
&lt;p id=&quot;q1P5IA&quot;&gt;Before the &lt;em&gt;Journal&lt;/em&gt;’s report came out, Amazon had told Congress that it doesn’t access sales data to help guide the launch of its own products. “Our incentive is to help the seller succeed because we rely on them,” Nate Sutton, Amazon’s associate general counsel, &lt;a href=&quot;https://www.cnbc.com/2019/07/16/amazon-tells-house-it-doesnt-favor-own-brands-in-antitrust-hearing.html&quot;&gt;said at a hearing last July&lt;/a&gt;. “They have many options. So we apply the same criteria to both and we do not use their individual data when we’re making decisions to launch private brands.”&lt;/p&gt;
&lt;div id=&quot;3bjKcr&quot; readability=&quot;6.1331775700935&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;6.5420560747664&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Documents from the Hearing on “Online Platforms and Market Power: Examining the Dominance of Amazon, Apple, Facebook and Google&quot; &lt;a href=&quot;https://t.co/Ypvxhm7asA&quot;&gt;pic.twitter.com/Ypvxhm7asA&lt;/a&gt;&lt;/p&gt;
— House Judiciary Dems (@HouseJudiciary) &lt;a href=&quot;https://twitter.com/HouseJudiciary/status/1288556281016520705?ref_src=twsrc%5Etfw&quot;&gt;July 29, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p id=&quot;UT46Q6&quot;&gt;Antitrust activists have long been concerned about Amazon’s power over independent sellers on its platform and how it could use that power to launch competing products. In &lt;a href=&quot;https://www.yalelawjournal.org/note/amazons-antitrust-paradox&quot;&gt;a pivotal 2017 law review article&lt;/a&gt;, antitrust scholar Lina Khan described it as a classic example of discrimination in infrastructure, writing, “Amazon itself effectively controls the infrastructure of the internet economy.”&lt;/p&gt;
&lt;p id=&quot;WD1H53&quot;&gt;Still, Jayapal cited documents obtained and interviews conducted over the committee’s investigation that call into question Amazon’s ability to enforce its policies against tapping seller data. “The committee has interviewed employees that say these breaches typically occur,” Jayapal said.&lt;/p&gt;
&lt;p id=&quot;BPydor&quot;&gt;The collection of aggregate data is allowed under Amazon’s policies, just not specific seller data. Still, Jayapal argued that aggregate data could still provide Amazon with “detailed data” on specific product categories.&lt;/p&gt;
&lt;p id=&quot;BjWhx2&quot;&gt;“So you can set the rules of the game for your competitors, but not actually follow those same rules for yourself,” Jayapal said.&lt;/p&gt;
&lt;p id=&quot;V7hLhP&quot;&gt;Bezos also caught fire from Rep. Lucy McBath (D-GA) over Amazon’s ability to “systematically block” sellers &lt;a href=&quot;https://www.theverge.com/2020/7/29/21335706/antitrust-hearing-highlights-facebook-google-amazon-apple-congress-testimony&quot;&gt;from selling specific products&lt;/a&gt;, citing direct testimony from a seller who believed she had been blocked.&lt;/p&gt;
&lt;p id=&quot;WzWyOX&quot;&gt;“I do not think that’s systematically what’s going on,” Bezos said. “Third-party sellers in aggregate are doing extremely well on Amazon.”&lt;/p&gt;


</description>
<pubDate>Wed, 29 Jul 2020 22:15:27 +0000</pubDate>
<dc:creator>pabo</dc:creator>
<og:description>He says Amazon is investigating.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/2UGy0bZAHZ8zEsiv7-ql63adoZA=/0x322:4500x2678/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/20789285/1227830557.jpg.jpg</og:image>
<og:title>Jeff Bezos can’t promise Amazon employees don’t access independent seller data</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2020/7/29/21347083/jeff-bezos-amazon-tech-antitrust-hearing-jayapal-questioning</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2020/7/29/21347083/jeff-bezos-amazon-tech-antitrust-hearing-jayapal-questioning</dc:identifier>
</item>
</channel>
</rss>