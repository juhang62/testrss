<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Guesstimate – A Spreadsheet for things that aren&amp;#039;t certain</title>
<link>https://www.getguesstimate.com/</link>
<guid isPermaLink="true" >https://www.getguesstimate.com/</guid>
<description>&lt;style id=&quot;wistia_16_style&quot; type=&quot;text/css&quot; class=&quot;wistia_injected_style&quot;&gt;&lt;![CDATA[
@font-face {
font-family: 'WistiaPlayerOverpassNumbers';
src: url(data:application/x-font-ttf;charset=utf-8;base64,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);
}
]]&gt;&lt;/style&gt;</description>
<pubDate>Sat, 29 Dec 2018 19:56:28 +0000</pubDate>
<dc:creator>666_howitzer</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.getguesstimate.com/?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Inter UI, a typeface designed for user interfaces</title>
<link>https://rsms.me/inter/</link>
<guid isPermaLink="true" >https://rsms.me/inter/</guid>
<description>&lt;p&gt;Inter UI comes with many OpenType features that can be used to tailor functionality and aesthetics to your specific needs. Some of these features can be combined to form a great number of alternative variations.&lt;/p&gt;
&lt;h3&gt;Contextual alternates &lt;q title=&quot;OpenType feature ID&quot;&gt;calt&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;This feature is enabled by default and causes certain characters to adjust themselves or be replaced depending on the surrounding context.&lt;/p&gt;
DisabledEnabled 12&lt;em&gt;:&lt;/em&gt;34, FE&lt;em&gt;—&lt;/em&gt;X12:34, FE—X 4&lt;em&gt;.&lt;/em&gt;24.2 &lt;em&gt;(&lt;/em&gt;SEMI&lt;em&gt;)&lt;/em&gt;PERMANENT(SEMI)PERMANENT SFO &lt;em&gt;-&amp;gt;&lt;/em&gt; STOSFO -&amp;gt; STO IIA &lt;em&gt;—&amp;gt;&lt;/em&gt; OGGIIA —&amp;gt; OGG ARN &lt;em&gt;&amp;lt;--&amp;gt;&lt;/em&gt; OGGARN  OGG M&lt;em&gt;@&lt;/em&gt;N &lt;a href=&quot;https://rsms.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;48250826&quot;&gt;[email protected]&lt;/a&gt;&lt;a href=&quot;https://rsms.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;2e636e60&quot;&gt;[email protected]&lt;/a&gt; &lt;a href=&quot;https://rsms.me/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;fd90bd93&quot;&gt;[email protected]&lt;/a&gt; Smile &lt;em&gt;:-)&lt;/em&gt;Smile :-)
&lt;p&gt;There are many more contextual alternates.&lt;/p&gt;
&lt;h3&gt;Tabular numbers &lt;q title=&quot;OpenType feature ID&quot;&gt;tnum&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;Fixed-width numbers are useful for tabular data, where comparing columns across rows is desired.&lt;/p&gt;
DisabledEnabled 12345678901234567890 1131711&lt;em&gt; &lt;/em&gt;1131711&lt;em&gt; &lt;/em&gt; 0040900&lt;em&gt; &lt;/em&gt;0040900&lt;em&gt; &lt;/em&gt; 11:31,711&lt;em&gt; &lt;/em&gt;11:31,711&lt;em&gt; &lt;/em&gt; 00:40.900&lt;em&gt; &lt;/em&gt;00:40.900&lt;em&gt; &lt;/em&gt; 0.45, 0.91, +0.08&lt;em&gt; &lt;/em&gt;0.45, 0.91, +0.08&lt;em&gt; &lt;/em&gt; 1.00, 9.44, −0.13&lt;em&gt; &lt;/em&gt;1.00, 9.44, −0.13&lt;em&gt; &lt;/em&gt; 0.00, 1.13, ~7.12&lt;em&gt; &lt;/em&gt;0.00, 1.13, ~7.12&lt;em&gt; &lt;/em&gt;
&lt;h3&gt;Numerators &lt;q title=&quot;OpenType feature ID&quot;&gt;numr&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled Hello &lt;em&gt;0123&lt;/em&gt;Hello 0123
&lt;h3&gt;Denominators &lt;q title=&quot;OpenType feature ID&quot;&gt;dnom&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled Hello &lt;em&gt;0123&lt;/em&gt;Hello 0123
&lt;h3&gt;Superscript &lt;q title=&quot;OpenType feature ID&quot;&gt;sups&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled H&lt;em&gt;ello 0123&lt;/em&gt;Hello 0123 &lt;em&gt;abcdefghijklm&lt;/em&gt;abcdefghijklm &lt;em&gt;nopqrstuvwxyz&lt;/em&gt;nopqrstuvwxyz
&lt;h3&gt;Subscript &lt;q title=&quot;OpenType feature ID&quot;&gt;subs&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled H&lt;em&gt;ello 0123&lt;/em&gt;Hello 0123 &lt;em&gt;abcdefghijklm&lt;/em&gt;abcdefghijklm &lt;em&gt;nopqrstuvwxyz&lt;/em&gt;nopqrstuvwxyz
&lt;h3&gt;Fractions &lt;q title=&quot;OpenType feature ID&quot;&gt;frac&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;This feature is contextually sensitive and will convert &quot;words&quot; of numbers separated by forward slash into proper fractions. This feature is dynamic and allows for any fractions. Note that the digits used for fractions are custom-made for their small size, and are even made separately from the slightly larger Superscript and Subscript numbers.&lt;/p&gt;
DisabledEnabled &lt;em&gt;1/3&lt;/em&gt; &lt;em&gt;3/4&lt;/em&gt; &lt;em&gt;1/5&lt;/em&gt; &lt;em&gt;1337/5910&lt;/em&gt; 1/3 3/4 1/5 1337/5910
&lt;h3&gt;Case alternates &lt;q title=&quot;OpenType feature ID&quot;&gt;case&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;Switches out some glyphs to work better with capital letters and numbers.&lt;/p&gt;
DisabledEnabled &lt;em&gt;(&lt;/em&gt;Hello&lt;em&gt;)&lt;/em&gt; &lt;em&gt;[&lt;/em&gt;World&lt;em&gt;]&lt;/em&gt; &lt;em&gt;{&lt;/em&gt;9000&lt;em&gt;}&lt;/em&gt; (Hello) [World] {9000} SCHOOL &lt;em&gt;@&lt;/em&gt; RUNSCHOOL @ RUN 3 &lt;em&gt;+&lt;/em&gt; 9 &lt;em&gt;=&lt;/em&gt; 12 &lt;em&gt;*&lt;/em&gt; 13 + 9 = 12 * 1 &lt;em&gt;*+÷±×=≠≈•~&amp;lt;&amp;gt;≤≥&lt;/em&gt;*+÷±×=≠≈•~≤≥ &lt;em&gt;→&lt;/em&gt; &lt;em&gt;←&lt;/em&gt; &lt;em&gt;⟶&lt;/em&gt; &lt;em&gt;⟵&lt;/em&gt; &lt;em&gt;−&lt;/em&gt; &lt;em&gt;-&lt;/em&gt; &lt;em&gt;–&lt;/em&gt; &lt;em&gt;—&lt;/em&gt; &lt;em&gt;:&lt;/em&gt;→ ← ⟶ ⟵ − - – — :
&lt;h3&gt;Stylistic set 1: Alternate digits &lt;q title=&quot;OpenType feature ID&quot;&gt;ss01&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;An alternate style of digits. Note that individual digit styles can be cherry-picked using the cvXX features.&lt;/p&gt;
DisabledEnabled &lt;em&gt;1&lt;/em&gt;2&lt;em&gt;34&lt;/em&gt;5&lt;em&gt;6&lt;/em&gt;78&lt;em&gt;9&lt;/em&gt;0 1234567890 &lt;em&gt;13469&lt;/em&gt;13469
&lt;h3&gt;Stylistic set 2: Disambiguation &lt;q title=&quot;OpenType feature ID&quot;&gt;ss02&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;Alternate glyph set that increases visual difference between similar-looking characters.&lt;/p&gt;
DisabledEnabled WP&lt;em&gt;0&lt;/em&gt;AC2A9XS&lt;em&gt;I&lt;/em&gt;1&lt;em&gt;0&lt;/em&gt;12O9WP0AC2A9XSI1012O9 &lt;em&gt;Ill&lt;/em&gt;ega&lt;em&gt;l&lt;/em&gt;Illegal βeta &lt;em&gt;ß&lt;/em&gt;eta Busine&lt;em&gt;ß&lt;/em&gt;βeta ßeta Busineß
&lt;h3&gt;Discretionary ligatures &lt;q title=&quot;OpenType feature ID&quot;&gt;dlig&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled &lt;em&gt;¡¿&lt;/em&gt;What&lt;em&gt;?!&lt;/em&gt;¡¿What?! &lt;em&gt;¿¡&lt;/em&gt;What&lt;em&gt;!?&lt;/em&gt;¿¡What!?
&lt;h3&gt;Slashed zero &lt;q title=&quot;OpenType feature ID&quot;&gt;zero&lt;/q&gt;&lt;/h3&gt;
DisabledEnabled &lt;em&gt;0&lt;/em&gt;1230123
&lt;h3&gt;Character variants &lt;q title=&quot;OpenType feature ID&quot;&gt;cvXX&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;Allows cherry-picking alternate characters.&lt;/p&gt;
Feature  DisabledEnabled cv0111 cv0244 cv0366 cv0499 cv05l ł ƚ ɫ ɬ ŀ ĺ ļ ľ ḷ ḹ ḻ ḽl ł ƚ ɫ ɬ ŀ ĺ ļ ľ ḷ ḹ ḻ ḽ cv06r ɽ ɍ ɼ ŕ ŗ ř ȑ ȓ ṙ ṛ ṝ ṟr ɽ ɍ ɼ ŕ ŗ ř ȑ ȓ ṙ ṛ ṝ ṟ cv07ßß cv08I Ï Ḯ Ɨ Ḭ Ì Í Î Ĩ Ī Ĭ&lt;br/&gt;Į İ Ǐ Ȉ Ȋ Ỉ Ị Ι Ί Ϊ Ἰ Ἱ Ἲ&lt;br/&gt;Ἳ Ἴ Ἵ Ἶ Ἷ Ῐ Ῑ Ὶ Ί І ЇI Ï Ḯ Ɨ Ḭ Ì Í Î Ĩ Ī Ĭ&lt;br/&gt;Į İ Ǐ Ȉ Ȋ Ỉ Ị Ι Ί Ϊ Ἰ Ἱ Ἲ&lt;br/&gt;Ἳ Ἴ Ἵ Ἶ Ἷ Ῐ Ῑ Ὶ Ί І Ї cv0933
&lt;h3&gt;Capital Spacing &lt;q title=&quot;OpenType feature ID&quot;&gt;cpsp&lt;/q&gt;&lt;/h3&gt;
&lt;p&gt;Slightly increases letter spacing for increased legibility of capital letters. Note: It's usually better to set letter-spacing (aka tracking) manually instead of using this feature. It's here mainly for completeness.&lt;/p&gt;
DisabledEnabled FOREVER IMMATERIALFOREVER IMMATERIAL TORSCHLUẞPANIKTORSCHLUẞPANIK
&lt;p&gt;Additional features, not highlighted above: &lt;q title=&quot;OpenType feature ID&quot;&gt;locl&lt;/q&gt;, &lt;q title=&quot;OpenType feature ID&quot;&gt;aalt&lt;/q&gt;, &lt;q title=&quot;OpenType feature ID&quot;&gt;ccmp&lt;/q&gt;, &lt;q title=&quot;OpenType feature ID&quot;&gt;ordn&lt;/q&gt; and &lt;q title=&quot;OpenType feature ID&quot;&gt;salt&lt;/q&gt;,&lt;/p&gt;


</description>
<pubDate>Sat, 29 Dec 2018 17:19:29 +0000</pubDate>
<dc:creator>dsego</dc:creator>
<og:description>Inter UI is a new typeface optimized for computer user interfaces</og:description>
<og:image>https://rsms.me/inter/res/poster.png</og:image>
<og:url>https://rsms.me/inter//</og:url>
<og:type>product</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://rsms.me/inter/</dc:identifier>
</item>
<item>
<title>Windows file access performance compared to Linux</title>
<link>https://github.com/Microsoft/WSL/issues/873#issuecomment-425272829</link>
<guid isPermaLink="true" >https://github.com/Microsoft/WSL/issues/873#issuecomment-425272829</guid>
<description>
&lt;p&gt;I wish this problem was as easy as saying &quot;NTFS is slow&quot; or &quot;DrvFs is slow&quot;. We've long since gotten all the low-hanging fruit and are left with what is essentially &quot;death by a thousand cuts,&quot; with no single component responsible for our (lack of) performance, but with lots of different things contributing.&lt;/p&gt;
&lt;p&gt;The IO subsystem is architected very differently in Windows than it is in Linux, with different goals in mind. Some of the major differences we have to deal with are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Linux has a top-level directory entry cache that means that certain queries (most notably stat calls) can be serviced without calling into the file system at all once an item is in the cache. Windows has no such cache, and leaves much more up to the file systems. A Win32 path like C:\dir\file gets translated to an NT path like \??\C:\dir\file, where \??\C: is a symlink in Object Manager to a device object like \Device\HarddiskVolume4. Once such a device object is encountered, the entire remainder of the path is just passed to the file system, which is very different to the centralized path parsing that VFS does in Linux.&lt;/li&gt;
&lt;li&gt;Windows's IO stack is extensible, allowing filter drivers to attach to volumes and intercept IO requests before the file system sees them. This is used for numerous things, including virus scanning, compression, encryption, file virtualization, things like OneDrive's files on demand feature, gathering pre-fetching data to speed up app startup, and much more. Even a clean install of Windows will have a number of filters present, particularly on the system volume (so if you have a D: drive or partition, I recommend using that instead, since it likely has fewer filters attached). Filters are involved in many IO operations, most notably creating/opening files.&lt;/li&gt;
&lt;li&gt;The NT file system API is designed around handles, not paths. Almost any operation requires opening the file first, which can be expensive. Even things that on the Win32 level seem to be a single call (e.g. DeleteFile) actually open and close the file under the hood. One of our biggest performance optimizations for DrvFs which we did several releases ago was the introduction of a new API that allows us to query file information without having to open it first.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Whether we like it or not (and we don't), file operations in Windows are more expensive than in Linux, even more so for those operations that only touch file metadata (such as stat). The costs of these operations are spread all over the place, from Object Manager and IO manager, to the filters, and NTFS. If it was as simple as saying &quot;NTFS is slow,&quot; we'd simply spend a release optimizing NTFS (and we have spent time doing just that), but our costs are so spread out over many components that there just isn't a silver bullet anymore. And we can only ever address in-box filters; who knows what third party filters are doing. We do work with the vendors of those filters to try and improve things. For example, when we introduced the new API to query file information without opening it, we needed filter drivers to support that. We needed to make sure we didn't break the system if some installed filters didn't support it (basically by falling back to a open/query/close operation). Making sure everybody supported this so you, our users, got the maximum speed benefit from that change took a lot of time and effort. The same thing is true for something like the case-sensitive directory work; we had to make sure our filter ecosystem could handle this new behavior.&lt;/p&gt;
&lt;p&gt;When Rich was talking about app behavior above, he wasn't trying to blame the apps for behaving that way. These apps were written on a system where file system operations are incredibly fast, and we're trying to run them, unmodified (unlike e.g. Git for Windows which tries to optimize its access patterns to better fit the Windows way of doing things) on a system that, unfortunately, is not as fast.&lt;/p&gt;
&lt;p&gt;And it's not even as simple as saying &quot;Windows is the cause of the slowness&quot; either, since WSL does play a role. Most notably, Windows path parsing is very different than Linux path parsing (and, as I said above, is the responsibility of the file system, so can differ between file systems, while on Linux it's centralized). Linux apps expect the Linux behavior, so we have to carefully emulate that behavior, and unfortunately that means sending more operations down to the file system. Something like a stat call, which in Linux can be served entirely from the kernel's own cache if you're lucky, for WSL requires sending multiple file system requests, all of which have to traverse the entire filter stack. We've done a lot of work, even as recent as the upcoming 1809, to reduce the amount of extra work WSL has to do. But the differences between Linux and Windows's API mean there'll always be some extra work, at least.&lt;/p&gt;
&lt;p&gt;Basically, this isn't a simple problem, and everything we do involves multiple components, and often involves working with Microsoft's partners if the changes affect filter drivers.&lt;/p&gt;
&lt;p&gt;That doesn't mean we've given up either. We're still making changes, and are actively exploring new avenues to make WSL faster, and thus more useful, for you. Of course, I wish I could tell you exactly what we're doing and what our timeline is, but that's unfortunately not the corporate reality we live in.&lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 13:48:55 +0000</pubDate>
<dc:creator>eatonphil</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/600347?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Major performance (I/O?) issue in /mnt/* and in ~ (home) · Issue #873 · Microsoft/WSL</og:title>
<og:url>https://github.com/Microsoft/WSL/issues/873</og:url>
<og:description>A brief description As a Symfony developer, it&amp;#39;s always been hard to get a stable/fast development environment. My current setup is a Ubuntu running under VirtualBox (using vagrant). While page...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/Microsoft/WSL/issues/873</dc:identifier>
</item>
<item>
<title>PayPal has permanently banned The Hacker News and hold funds for 180 days</title>
<link>https://twitter.com/TheHackersNews/status/1078907851995860992</link>
<guid isPermaLink="true" >https://twitter.com/TheHackersNews/status/1078907851995860992</guid>
<description>&lt;div class=&quot;dir-ltr&quot; dir=&quot;ltr&quot; readability=&quot;11.693430656934&quot;&gt;Instead of giving a valid reason, company says &quot;specific reasons for such a decision is proprietary &amp;amp; it is not released since that could impair PayPal's ability to do business in a safe and secure manner&quot;

Seriously &lt;a href=&quot;https://mobile.twitter.com/PayPal&quot; class=&quot;twitter-atreply dir-ltr&quot; dir=&quot;ltr&quot; data-mentioned-user-id=&quot;30018058&quot; data-screenname=&quot;PayPal&quot;&gt;@PayPal&lt;/a&gt;????

You have to mention at least one valid reason.&lt;/div&gt;
</description>
<pubDate>Sat, 29 Dec 2018 13:37:51 +0000</pubDate>
<dc:creator>AlexKaul</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/TheHackersNews/status/1078907851995860992</dc:identifier>
</item>
<item>
<title>How DOOM fire was done</title>
<link>http://fabiensanglard.net/doom_fire_psx/</link>
<guid isPermaLink="true" >http://fabiensanglard.net/doom_fire_psx/</guid>
<description>&lt;head&gt;&lt;title&gt;How DOOM fire was done&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;96.10460251046&quot;&gt;

&lt;center&gt;

&lt;/center&gt;
&lt;p&gt;Dec 28, 2018&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How DOOM fire was done&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt; The &lt;a href=&quot;http://fabiensanglard.net/gebbdoom&quot;&gt;Game Engine Black Book: DOOM&lt;/a&gt; features a whole chapter about DOOM console ports and the challenges they encountered. The utter failure of the 3DO, the difficulties of the Saturn due to its affine texture mapping, and the amazing &quot;reverse-engineering-from- scratch&quot; by Randy Linden on Super Nintendo all have rich stories to tell.&lt;/p&gt;&lt;p&gt;Once heading towards disaster&lt;a name=&quot;back_1&quot; href=&quot;http://fabiensanglard.net/doom_fire_psx/#footnote_1&quot;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;, the Playstation 1 (PSX) devteam managed to rectify course to produce a critically and commercially acclaimed conversion. &lt;a href=&quot;https://www.youtube.com/watch?v=p85npx14HUI&quot;&gt;Final DOOM&lt;/a&gt; was the most faithful port when compared to the PC version. The alpha blended colored sectors not only improved visual quality, they also made gameplay better by indicating the required key color. Sound was also improved via reverberation effects taking advantage of the PSX's Audio Processing Unit.&lt;/p&gt;&lt;p&gt;The devteam did such a good job that they found themselves with a few extra CPU cycles they decided to use to generate animated fire both during both the &lt;a href=&quot;https://www.youtube.com/watch?v=YJB0gfP-GRY&amp;amp;feature=youtu.be&amp;amp;t=10&quot;&gt;intro&lt;/a&gt; and the &lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/psx_screen_sky.png&quot;&gt;gameplay&lt;/a&gt;. Mesmerized, I tried to find out how it was done. After an initial calling found no answer, I was about to dust off my MIPS book to rip open the PSX executable when Samuel Villarreal replied on Twitter to tell me he had already reverse-engineered the Nintendo 64 version&lt;a name=&quot;back_2&quot; href=&quot;http://fabiensanglard.net/doom_fire_psx/#footnote_2&quot;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt;. I only had to clean, simplify, and optimize it a little bit.&lt;/p&gt;&lt;p&gt;It was interesting to re-discover this classic demoscene effect; the underlying idea is similar to the first &lt;a href=&quot;http://agilerepose.weebly.com/water-ripple.html&quot;&gt;water ripple&lt;/a&gt; many developers implemented as a programming kata in the 90's. The fire effect is a vibrant testimony to a time when judiciously picked palette colors combined with a simple trick were the only way to get things done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Core idea&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;At its core, the fire effect relies on a simple heightmap. A screen-sized array is populated with thirty-seven values ranging from 0 to 36. Each value is associated with a color from white to black, using yellow, orange, and red along the way. The idea is to model the fire particle's temperature as it elevates and cools down.&lt;/p&gt;
&lt;table width=&quot;100%&quot; border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The framebuffer is initialized full black (with zeros) with a single line of white pixels at the bottom (36) which will be the &quot;source&quot; of the fire.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/basis.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;For each screen refresh the &quot;heat&quot; is propagated up. A new value for each pixel in the framebuffer is calculated. Each pixel is updated based on the value directly below. In the code, lower-left is at array index zero and upper right is at index FIRE_HEIGHT * FIRE_WIDTH - 1.&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; doFire&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;x&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt; &lt;span&gt;;&lt;/span&gt; x &lt;span&gt;&amp;lt;&lt;/span&gt; FIRE_WIDTH&lt;span&gt;;&lt;/span&gt; x&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;y &lt;span&gt;=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; y &lt;span&gt;&amp;lt;&lt;/span&gt; FIRE_HEIGHT&lt;span&gt;;&lt;/span&gt; y&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            spreadFire&lt;span&gt;(&lt;/span&gt;y &lt;span&gt;*&lt;/span&gt; FIRE_WIDTH &lt;span&gt;+&lt;/span&gt; x&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;

 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;src &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; firePixels&lt;span&gt;[&lt;/span&gt;src&lt;span&gt;]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that line 0 is never updated (y iteration starts at 1 instead of 0). This line populated with zeros is the &quot;generator&quot; of fire. This simple version with linear cooling (-=1) yields a boring uniform output.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/propagate_boring.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;We can tweak the spreadFire() function a little bit and change how fast a heat points decays. Adding randomness works well.&lt;/p&gt;
&lt;pre&gt;
 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; rand &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;round&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;random&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;3.0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;src &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; pixel &lt;span&gt;-&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;rand &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt; &lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/variable_decay.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;That's better. To improve the illusion further, the heat can be randomly propagated to go not only above but also left and right.&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; rand &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;round&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;random&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;3.0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; dst &lt;span&gt;=&lt;/span&gt; src &lt;span&gt;-&lt;/span&gt; rand &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;dst &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; firePixels&lt;span&gt;[&lt;/span&gt;src&lt;span&gt;]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;rand &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Et voila! Notice that by adjusting how the fire propagates up, wind can also be simulated. I will leave that as an exercise for the readers who had the courage to read up to here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Source Code&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Samuel's &lt;a href=&quot;https://codepen.io/svkaiser/pen/xXmOvY&quot;&gt;version&lt;/a&gt; (logically) looked a lot like assembly. If you want to take a look, here is a &lt;a href=&quot;https://github.com/fabiensanglard/DoomFirePSX/blob/master/flames.html&quot;&gt;cleaned up and simplified version&lt;/a&gt;.&lt;br/&gt;&lt;img id=&quot;doom&quot; src=&quot;http://fabiensanglard.net/doom_fire_psx/doom.png&quot; width=&quot;379&quot; height=&quot;260&quot; hidden=&quot;true&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;&lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/#back_1&quot;&gt;^&lt;/a&gt; [1] Source: &lt;a href=&quot;http://fabiensanglard.net/gebbdoom&quot;&gt;The full story is detailed in Game Engine Black Book: DOOM&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/#back_2&quot;&gt;^&lt;/a&gt; [2] Source: &lt;a href=&quot;https://twitter.com/fabynou/status/936329655308632064&quot;&gt;Twitter post, March 25th 2018&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;center&gt;*&lt;/center&gt;
&lt;/body&gt;</description>
<pubDate>Sat, 29 Dec 2018 09:59:24 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://fabiensanglard.net/doom_fire_psx/</dc:identifier>
</item>
<item>
<title>Doctors ask engineers to spend more time in the hospital before building apps</title>
<link>https://www.cnbc.com/2018/12/27/doctors-are-asking-technologists-from-google-to-shadow-them-before-they-build-medical-apps-.html</link>
<guid isPermaLink="true" >https://www.cnbc.com/2018/12/27/doctors-are-asking-technologists-from-google-to-shadow-them-before-they-build-medical-apps-.html</guid>
<description>&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;As an emergency room physician, Richard Zane often considers how software can help him with patients. The problem is that engineers and doctors are from different worlds.&lt;/p&gt;
&lt;p&gt;Zane, who's also the chief innovation officer at UCHealth in Colorado, said that most technologists he's met have never seen the inner workings of a hospital and don't have a deep understanding of what doctors want and need.&lt;/p&gt;
&lt;p&gt;&quot;We found that tech companies more often than not had a preconceived notion of how health care worked,&quot; Zane told CNBC. They've &quot;gone very far down the path of building a product&quot; without that input, he said.&lt;/p&gt;

&lt;p&gt;Zane decided one way to bridge the gap was by inviting in developers from companies to see how he works. For now, that involves monitoring how he uses computers and other software tools to document and make decisions, but keeping them out of the operating environment and away from patient information.&lt;/p&gt;
&lt;p&gt;However, &quot;if there were a good reason to do it, like we wanted to build a surgical tool, we would ask patients for their consent,&quot; Zane said.&lt;/p&gt;
&lt;p&gt;Across the country, as more &lt;a class=&quot;inline_asset&quot; href=&quot;https://rockhealth.com/reports/q1-2018-funding-keeps-climbing-as-digital-health-startups-double-down-on-validation/&quot;&gt;funding than ever pours into digital health&lt;/a&gt;, technologists are realizing that selling to &lt;a class=&quot;inline_asset&quot; href=&quot;https://blog.stormventures.com/crossing-the-abyss-go-to-market-strategy-in-digital-health-60ab0dddeaa1&quot;&gt;doctors is more challenging than they expected&lt;/a&gt;. So spending time with clinicians by observing medical procedures and sitting in on consultations are some of the ways they're getting up to speed.&lt;/p&gt;
&lt;p&gt;Big companies are going even further. &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;8016&quot; data-inline-quote-symbol=&quot;AAPL&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=AAPL&quot;&gt;Apple&lt;/a&gt;, for example, is &lt;a href=&quot;https://www.cnbc.com/2018/12/12/apple-has-dozens-of-doctors-on-staff.html&quot;&gt;hiring dozens of doctors&lt;/a&gt; for their expertise, and others are using experts to help make design decisions and to better understand how to sell into hospital networks.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Brandon Ballinger, a former &lt;a class=&quot;inline_quotes&quot; data-gdsid=&quot;19004&quot; data-inline-quote-symbol=&quot;GOOGL&quot; href=&quot;https://www.cnbc.com/quotes/?symbol=GOOGL&quot;&gt;Google&lt;/a&gt; engineer, spent months working with doctors, and even watched a heart procedure at the University of California, San Francisco, before starting his company, Cardiogram, which looks for signs of common medical conditions in data generated by consumer wearables. That experience gave him a sense of how to gain the approval and trust of physicians when Cardiogram embarked on studies of its own.&lt;/p&gt;
&lt;p&gt;&quot;Brandon volunteered with us at about full-time for a year, sat in on research meetings and helped us in return with data science projects,&quot; said Greg Marcus, a cardiologist at UCSF. &quot;Frequently entrepreneurs without clinical expertise, without adequate consultation might be misled in thinking their flashy tech by itself is sufficient, without thinking about how it will actually aid us. I'm a strong advocate for entrepreneurs reaching out, and I think many physicians would want to help.&quot;&lt;/p&gt;
&lt;p&gt;Epic Systems, the largest privately-held medical records company, &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.nytimes.com/2018/12/20/business/epic-systems-campus-verona-wisconsin.html&quot;&gt;reportedly sends its engineers along to open heart surgeries&lt;/a&gt; so they can see how important it is for their software to function in critical situations. Even so, &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.newyorker.com/magazine/2018/11/12/why-doctors-hate-their-computers&quot;&gt;many doctors&lt;/a&gt; see plenty of room for improvement when it comes to Epic's user experience.&lt;/p&gt;
&lt;p&gt;Physicians need more from their software. In general, they're spending less time with patients, and more on so-called desktop medicine, which involves hours of documentation in front of a computer after a long day at the clinic. &lt;a class=&quot;inline_asset&quot; href=&quot;https://www.ncbi.nlm.nih.gov/pubmed/26653297&quot;&gt;Studies&lt;/a&gt; find that so much time on administrative tasks related to things like billing is contributing to increased levels of physician burnout.&lt;/p&gt;
&lt;p&gt;Zane wants better technology, built with an understanding of how doctors work.&lt;/p&gt;
&lt;/div&gt;&lt;div class=&quot;group&quot; itemprop=&quot;articleBody&quot;&gt;
&lt;p&gt;Carm Huntress, the founder of a start-up called RxRevu, shadowed Zane and is applying what he learned.&lt;/p&gt;
&lt;p&gt;RxRevu, based in Denver, worked with the hospital on a service to help physicians figure out how to prescribe better. The company's software aims to quickly figure out whether certain drugs will interact negatively with each other, if a patient is allergic to a medication or if insurance covers a specific drug. The goal is to help doctors have informed conversations with their patients about their options.&lt;/p&gt;
&lt;p&gt;Huntress said one thing he noticed in observing doctors at their desks is that many automatically move their mouse to delete a notification before reading it. He could tell that clinicians were suffering from alert fatigue and might be missing out on important information amid all this noise. Doctors work extremely long shifts and see dozens of patients, so they need to avoid anything that's even more &quot;taxing on their brain,&quot; Huntress said.&lt;/p&gt;
&lt;p&gt;Inspired by Zane, simplicity became a driving principle for RxRevu.&lt;/p&gt;
&lt;p&gt;&quot;He pushed me hard to say, 'Look, let's pair your engineers with our clinicians, so you'll understand a day in the life before you build,'&quot; said Huntress. &quot;He was 100 percent right.&quot;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sat, 29 Dec 2018 02:06:27 +0000</pubDate>
<dc:creator>brandonb</dc:creator>
<og:type>article</og:type>
<og:url>https://www.cnbc.com/2018/12/27/doctors-are-asking-technologists-from-google-to-shadow-them-before-they-build-medical-apps-.html</og:url>
<og:image>https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2018/12/28/105649426-1546021520265uchealth_dsc_0798.1910x1000.jpg</og:image>
<og:title>Doctors are asking Silicon Valley engineers to spend more time in the hospital before building apps</og:title>
<og:description>Doctors have had enough with software that's not useful, so they're inviting entrepreneurs to shadow them.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cnbc.com/2018/12/27/doctors-are-asking-technologists-from-google-to-shadow-them-before-they-build-medical-apps-.html</dc:identifier>
</item>
<item>
<title>How Facebook Keeps Messenger from Crashing on New Year&amp;#039;s Eve</title>
<link>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</link>
<guid isPermaLink="true" >https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</guid>
<description>&lt;img src=&quot;https://spectrum.ieee.org/image/MzE5OTkzNw.jpeg&quot; alt=&quot;An illustration shows a conversation in Facebook Messenger overlaid on a giant thumb to symbolize a Facebook &amp;quot;like.&amp;quot;&quot;/&gt; Illustration: IEEE Spectrum
&lt;section id=&quot;side-module&quot;&gt;&lt;div class=&quot;medium-top-ad&quot;&gt;
&lt;div class=&quot;ad-module&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;recommended-side&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Editor’s Picks&lt;/p&gt;
&lt;div id=&quot;article-rec&quot; readability=&quot;36&quot;&gt;
&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MzEzMzQxNg&quot; alt=&quot;David Patterson with computer hardware.&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;David Patterson Says It’s Time for New Computer Architectures and Software Languages&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MjI3NDk1Mg&quot; alt=&quot;Image by Getty Images&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Stalking on Facebook Is Easier Than You Think&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MjI3OTg4Nw&quot; alt=&quot;null&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Facebook Knows Your Friends—Even if They’re Not on Facebook&lt;/h4&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p&gt;On New Year’s Eve, millions of people will use Facebook’s Messenger app to wish friends and family a “Happy New Year!” If everything goes smoothly, those messages will reach recipients in fewer than 100 milliseconds, and life will go on. But if the service stalls or fails, a small team of software engineers based in the company’s New York City office will have to answer for it.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/isaacpayamahdout/&quot;&gt;Isaac Ahdout&lt;/a&gt;, engineering manager, and &lt;a href=&quot;https://www.linkedin.com/in/thomas-georgiou-94803323/&quot;&gt;Thomas Georgiou&lt;/a&gt;, software engineer, are both on that team. They’ve tested and tweaked the app throughout the year and will soon face their biggest annual performance exam. Messenger’s 1.3 billion monthly active users send more messages on New Year’s Eve than on any other day of the year. Many hit “send” (represented as a blue arrow in the app) immediately after the clock strikes midnight in &lt;a href=&quot;https://www.timeanddate.com/counters/firstnewyear.html&quot;&gt;their respective time zones&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“There’s like this firehouse you can’t stop, of deliveries you have to make,” says Georgiou. “We have to keep up. Otherwise, you end up in a bad situation.”&lt;/p&gt;
&lt;p&gt;It’s a problem familiar to anyone who works on networks or services that see a dramatic spike in use at a particular time of day or year. U.S. telecommunications companies frequently install new base stations ahead of &lt;a href=&quot;https://www.adweek.com/brand-marketing/verizon-shows-what-it-took-to-wire-u-s-bank-stadium-for-73000-fans-at-the-super-bowl/&quot;&gt;Super Bowls&lt;/a&gt;, &lt;a href=&quot;https://www.theindependent.com/news/state_fair/state-fair-increases-ability-to-digitally-connect/article_963a2222-2186-11e7-b578-5b374c07b109.html&quot;&gt;state fairs&lt;/a&gt;, and &lt;a href=&quot;https://about.att.com/innovationblog/inauguration_network&quot;&gt;presidential inaugurations&lt;/a&gt; for similar reasons.&lt;/p&gt;
&lt;aside class=&quot;inlay pullquote lt med&quot;&gt;“The biggest thing we worry about is: How do you prevent that cascading failure from happening?” &lt;span class=&quot;pq-attrib&quot;&gt;—Thomas Georgiou, software engineer&lt;/span&gt;&lt;/aside&gt;&lt;p&gt;For Facebook’s Messenger team, the challenge is slightly more complicated than shuffling a simple message from one user to another. Facebook allows people to set up large group chats, and shows senders a receipt every time a message is &lt;a href=&quot;https://www.facebook.com/help/messenger-app/iphone/926389207386625/&quot;&gt;delivered, sent, or read&lt;/a&gt;. These features compound the total number of messages that must be distributed across the service.&lt;/p&gt;
&lt;p&gt;Users also send and receive a higher percentage of photos and videos as they ring in the new year, compared to an average day. And people often try to resend messages that don’t appear to make it through right away, which piles on more requests.&lt;/p&gt;
&lt;p&gt;Or, as Ahdout puts it, “once you start falling behind, you fall behind more.”&lt;/p&gt;
&lt;p&gt;“The biggest thing we worry about is: How do you prevent that cascading failure from happening?” adds Georgiou.&lt;/p&gt;
&lt;p&gt;One way is to perform extensive &lt;a href=&quot;https://ieeexplore.ieee.org/document/7123673&quot;&gt;load testing&lt;/a&gt; ahead of time, to simulate the volume of messages that Facebook expects on New Year’s Eve based on activity in previous years. (The company declined to share its forecasts, and would not say how many messages were sent in previous years.) Load testing allows the team to validate how many messages a given server can handle before the team must shift traffic over to other servers in the network.  &lt;/p&gt;
&lt;p&gt;During the last New Year’s Eve, for example, one data center struggled with the volume of incoming messages, so the team directed traffic away from that center to another one. Following that incident, the group built tools to allow them to make those kinds of changes more easily this year.&lt;/p&gt;
&lt;img alt=&quot;A black and white photo shows Facebook's Messenger infrastructure team. &quot; src=&quot;https://spectrum.ieee.org/image/MzE5OTk2Ng.jpeg&quot;/&gt; Photo: Facebook Facebook’s Messenger infrastructure team gathers for a photo. 
&lt;p&gt;In addition to shifting loads, the Messenger team has developed other levers that it can pull “if things get really bad,” says Ahdout. Every new message sent to a server goes into a queue as part of &lt;a href=&quot;https://code.fb.com/production-engineering/building-mobile-first-infrastructure-for-messenger/&quot;&gt;a service called Iris&lt;/a&gt;. There, messages are assigned a timeout—a period of time after which, that message will drop out of the queue to make room for new messages. During a high-volume event, this allows the team to quickly discard certain types of messages, such as read receipts, to focus its resources on delivering ones that users have composed.&lt;/p&gt;
&lt;p&gt;“We set up our systems so that if it comes to that, they start shedding the lowest-priority traffic,” says Ahdout. “So if it came to it, Iris would rather deliver a message and drop the read receipt, rather than drop the message and deliver the read receipt.”&lt;/p&gt;
&lt;p&gt;Georgiou says the group can also sacrifice the accuracy of the green dot displayed in the Messenger app that indicates a friend is currently online. Slowing the frequency at which the dot is updated can relieve network congestion. Or, the team could instruct the system to temporarily delay certain functions—such as deleting information about old messages—for a few hours to free up CPUs that would ordinarily perform that task, in order to process more messages in the moment.&lt;/p&gt;
&lt;aside class=&quot;inlay pullquote rt med&quot;&gt;“We set up our systems so that if it comes to that, they start shedding the lowest-priority traffic.” &lt;span class=&quot;pq-attrib&quot;&gt;—Isaac Ahdout, engineering manager&lt;/span&gt;&lt;/aside&gt;&lt;p&gt;All of these options fall under the notion of “graceful degradation,” says Ahdout. “Rather than having your service dying on the floor and no one using it, you make it a little less awesome and people can still use it.” Fortunately, the Messenger team didn’t have to resort to any of these measures last year.&lt;/p&gt;
&lt;p&gt;Aside from those efforts, Messenger’s engineers also spend a lot of time on efficiency projects designed to make the most of the CPUs and memory within each server. Ahead of New Year’s Eve 2018, for example, the team added a scheduler, which is a program that allows the system to “batch” similar messages together.&lt;/p&gt;
&lt;p&gt;“You can imagine that our servers are getting many requests concurrently,” explains Ahdout. “You can bundle some of those together into a single large request before you send it downstream. Doing that, you reduce the computational load on downstream systems.”&lt;/p&gt;
&lt;p&gt;Batches are formed based on a principle called affinity, which can be derived from a variety of characteristics. For example, two messages may have higher affinity if they are traveling to the same recipient, or require similar resources from the back end. As traffic increases, the Messenger team can have the system batch more aggressively. Doing so will increase latency (a message’s roundtrip delay) by a few milliseconds, but makes it more likely that all messages will get through.&lt;/p&gt;
&lt;p&gt;This year for New Year’s Eve, neither Ahdout nor Georgiou will be on duty &lt;a href=&quot;https://www.timeanddate.com/counters/firstnewyear.html&quot;&gt;as midnight approaches in Asia&lt;/a&gt;, when the service sees its largest spike in messages, but Ahdout says he will stay close to his laptop, just in case. “Basically, a lot of this work never really sees the light of day, in the sense that things go well, or if they don’t, we handle them so gracefully that users don’t even know what happened,” he says.&lt;/p&gt;
&lt;p&gt;“It’s sort of been awhile since there was a major problem,” he adds. Fingers crossed. &lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 00:35:51 +0000</pubDate>
<dc:creator>victorvation</dc:creator>
<og:title>How Facebook Keeps Messenger From Crashing on New Year's Eve</og:title>
<og:url>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</og:url>
<og:description>Messenger's 1.3 billion users send more messages on New Year’s Eve than on any other day of the year</og:description>
<og:image>https://spectrum.ieee.org/image/MzE5OTk2Mw.jpeg</og:image>
<og:type>blog-tech-talk</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</dc:identifier>
</item>
<item>
<title>Why I’m so “against” Ethereum</title>
<link>https://threadreaderapp.com/thread/1078682801954799617.html</link>
<guid isPermaLink="true" >https://threadreaderapp.com/thread/1078682801954799617.html</guid>
<description>&lt;span class=&quot;nop nop-start&quot;&gt;2/&lt;/span&gt; First, ETH’s architecture &amp;amp; culture is _opposite_ that of Bitcoin, and yet claims to offer same solutions: decentralization, immutability, SoV, asset issuance, smart contracts, …&lt;p&gt;Second, ETH is considered a crypto ‘blue chip’, thus colors perception of uninformed newcomers.&lt;/p&gt;</description>
<pubDate>Fri, 28 Dec 2018 23:57:55 +0000</pubDate>
<dc:creator>DyslexicAtheist</dc:creator>
<og:title>Thread by @TuurDemeester: &quot;1/ People often ask me why I’m so “against” Ethereum. Why do I go out of my way to point out flaws or make analogies that put it in a bad li […]&quot;</og:title>
<og:image>https://threadreaderapp.com/images/screenshots/thread/1078682801954799617.jpg</og:image>
<og:url>https://threadreaderapp.com/thread/1078682801954799617.html</og:url>
<og:description>Thread by @TuurDemeester: &quot;1/ People often ask me why I’m so “against” Ethereum. Why do I go out of my way to point out flaws or make analogi a bad light? 2/ First, ETH’s architecture &amp;amp; culture is _opposite_ that of Bitcoin, and yet claims to off […]&quot;</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threadreaderapp.com/thread/1078682801954799617.html</dc:identifier>
</item>
<item>
<title>Teachers Quit Jobs at Highest Rate on Record</title>
<link>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</guid>
<description>&lt;p&gt;Teachers and other public education employees, such as community-college faculty, school psychologists and janitors, are quitting their jobs at the fastest rate on record, government data shows.&lt;/p&gt; &lt;p&gt;A tight labor market with historically low unemployment has encouraged Americans in a variety of occupations to quit their jobs at elevated rates, with the expectation they can find something better. But quitting among public educators stands out because the field is one where stability is viewed as a key perk and longevity often rewarded....
  &lt;/p&gt;</description>
<pubDate>Fri, 28 Dec 2018 23:20:23 +0000</pubDate>
<dc:creator>dpflan</dc:creator>
<og:title>Teachers Quit Jobs at Highest Rate on Record </og:title>
<og:description>Teachers and other public education employees—such as community-college faculty, school psychologists and janitors—are quitting their jobs at the fastest rate on record, government data show.</og:description>
<og:url>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</og:url>
<og:image>https://si.wsj.net/public/resources/images/B3-CT536_teache_SOC_20181227171926.jpg</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</dc:identifier>
</item>
<item>
<title>Things I Don’t Know as of 2018</title>
<link>https://overreacted.io/things-i-dont-know-as-of-2018/</link>
<guid isPermaLink="true" >https://overreacted.io/things-i-dont-know-as-of-2018/</guid>
<description>&lt;p&gt;People often assume that I know far more than I actually do. That’s not a bad problem to have and I’m not complaining. (Folks from minority groups often suffer the opposite bias despite their hard-earned credentials, and that &lt;em&gt;sucks&lt;/em&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this post I’ll offer an incomplete list of programming topics that people often wrongly assume that I know.&lt;/strong&gt; I’m not saying &lt;em&gt;you&lt;/em&gt; don’t need to learn them — or that I don’t know &lt;em&gt;other&lt;/em&gt; useful things. But since I’m not in a vulnerable position myself right now, I can be honest about this.&lt;/p&gt;
&lt;p&gt;Here’s why I think it’s important.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;First, there is often an unrealistic expectation that an experienced engineer knows every technology in their field. Have you seen a “learning roadmap” that consists of a hundred libraries and tools? It’s useful — but intimidating.&lt;/p&gt;
&lt;p&gt;What’s more, no matter how experienced you get, you may still find yourself switching between feeling capable, inadequate (“Impostor syndrome”), and overconfident (“Dunning–Kruger effect”). It depends on your environment, job, personality, teammates, mental state, time of day, and so on.&lt;/p&gt;
&lt;p&gt;Experienced developers sometimes open up about their insecurities to encourage beginners. But there’s a world of difference between a seasoned surgeon who still gets the jitters and a student holding their first scalpel!&lt;/p&gt;
&lt;p&gt;Hearing how “we’re all junior developers” can be disheartening and sound like empty talk to the learners faced with an actual gap in knowledge. Feel-good confessions from well-intentioned practitioners like me can’t bridge it.&lt;/p&gt;
&lt;p&gt;Still, even experienced engineers have many knowledge gaps. This post is about mine, and I encourage those who can afford similar vulnerability to share their own. But let’s not devalue our experience while we do that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We can admit our knowledge gaps, may or may not feel like impostors, and still have deeply valuable expertise that takes years of hard work to develop.&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;With that disclaimer out of the way, here’s just a few things I don’t know:&lt;/p&gt;
&lt;ul readability=&quot;46.5&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Unix commands and Bash.&lt;/strong&gt; I can &lt;code class=&quot;language-text&quot;&gt;ls&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;cd&lt;/code&gt; but I look up everything else. I get the concept of piping but I’ve only used it in simple cases. I don’t know how to use &lt;code class=&quot;language-text&quot;&gt;xargs&lt;/code&gt; to create complex chains, or how to compose and redirect different output streams. I also never properly learned Bash so I can only write very simple (and often buggy) shell scripts.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Low-level languages.&lt;/strong&gt; I understand Assembly lets you store things in memory and jump around the code but that’s about it. I wrote a few lines of C and understand what a pointer is, but I don’t know how to use &lt;code class=&quot;language-text&quot;&gt;malloc&lt;/code&gt; or other manual memory management techniques. Never played with Rust.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Networking stack.&lt;/strong&gt; I know computers have IP addresses, and DNS is how we resolve hostnames. I know there’s low level protocols like TCP/IP to exchange packets that (maybe?) ensure integrity. That’s it — I’m fuzzy on details.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Containers.&lt;/strong&gt; I have no idea about how to use Docker or Kubernetes. (Are those related?) I have a vague idea that they let me spin up a separate VM in a predictable way. Sounds cool but I haven’t tried it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Serverless.&lt;/strong&gt; Also sounds cool. Never tried it. I don’t have a clear idea of how that model changes backend programming (if it does at all).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Microservices.&lt;/strong&gt; If I understand correctly, this just means “many API endpoints talking to each other”. I don’t know what are the practical advantages or downsides of this approach because I haven’t worked with it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Python.&lt;/strong&gt; I feel bad about this one — I &lt;em&gt;have&lt;/em&gt; worked with Python for several years at some point and I’ve never bothered to actually learn it. There are many things there like import behavior that are completely opaque to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Node backends.&lt;/strong&gt; I understand how to run Node, used some APIs like &lt;code class=&quot;language-text&quot;&gt;fs&lt;/code&gt; for build tooling, and can set up Express. But I’ve never talked from Node to a database and don’t really know how to write a backend in it. I’m also not familiar with React frameworks like Next beyond a “hello world”.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Native platforms.&lt;/strong&gt; I tried learning Objective C at some point but it didn’t work out. I haven’t learned Swift either. Same about Java. (I could probably pick it up though since I worked with C#.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Algorithms.&lt;/strong&gt; The most you’ll get out of me is bubble sort and maybe quicksort on a good day. I can probably do simple graph traversing tasks if they’re tied to a particular practical problem. I understand the O(n) notation but my understanding isn’t much deeper than “don’t put loops inside loops”.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Functional languages.&lt;/strong&gt; Unless you count JavaScript, I’m not fluent in any traditionally functional language. (I’m only fluent in C# and JavaScript — and I already forgot most of C#.) I struggle to read either LISP-inspired (like Clojure), Haskell-inspired (like Elm), or ML-inspired (like OCaml) code.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Functional terminology.&lt;/strong&gt; Map and reduce is as far as I go. I don’t know monoids, functors, etc. I know what a monad is but maybe that’s an illusion.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Modern CSS.&lt;/strong&gt; I don’t know Flexbox or Grid. Floats are my jam.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;CSS Methodologies.&lt;/strong&gt; I used BEM (meaning the CSS part, not the original BEM) but that’s all I know. I haven’t tried OOCSS or other methodologies.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;SCSS / Sass.&lt;/strong&gt; Never got to learn them.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;CORS.&lt;/strong&gt; I dread these errors! I know I need to set up some headers to fix them but I’ve wasted hours here in the past.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;HTTPS / SSL.&lt;/strong&gt; Never set it up. Don’t know how it works beyond the idea of private and public keys.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;GraphQL.&lt;/strong&gt; I can read a query but I don’t really know how to express stuff with nodes and edges, when to use fragments, and how pagination works there.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Sockets.&lt;/strong&gt; My mental model is they let computers talk to each other outside the request/response model but that’s about all I know.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Streams.&lt;/strong&gt; Aside from Rx Observables, I haven’t worked with streams closely. I used old Node streams one or two times but always messed up error handling.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Electron.&lt;/strong&gt; Never tried it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;TypeScript.&lt;/strong&gt; I understand the concept of types and can read annotations but I’ve never written it. The few times I tried, I ran into difficulties.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Deployment and devops.&lt;/strong&gt; I can manage to send some files over FTP or kill some processes but that’s the limit of my devops skills.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Graphics.&lt;/strong&gt; Whether it’s canvas, SVG, WebGL or low-level graphics, I’m not productive in it. I get the overall idea but I’d need to learn the primitives.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Of course this list is not exhaustive. There are many things that I don’t know.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;It might seem like a strange thing to discuss. It even feels wrong to write it. Am I boasting of my ignorance? My intended takeaway from this post is that:&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Even your favorite developers may not know many things that you know.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Regardless of your knowledge level, your confidence can vary greatly.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Experienced developers have valuable expertise despite knowledge gaps.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I’m aware of my knowledge gaps (at least, some of them). I can fill them in later if I become curious or if I need them for a project.&lt;/p&gt;
&lt;p&gt;This doesn’t devalue my knowledge and experience. There’s plenty of things that I can do well. For example, learning technologies when I need them.&lt;/p&gt;
</description>
<pubDate>Fri, 28 Dec 2018 22:40:14 +0000</pubDate>
<dc:creator>nhebb</dc:creator>
<og:url>https://overreacted.io/things-i-dont-know-as-of-2018/</og:url>
<og:title>Things I Don’t Know as of 2018</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://overreacted.io/things-i-dont-know-as-of-2018/</dc:identifier>
</item>
</channel>
</rss>