<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>We can confirm that there was a successful 51% attack on Ethereum Classic</title>
<link>https://twitter.com/etherchain_org/status/1082329360948969472</link>
<guid isPermaLink="true" >https://twitter.com/etherchain_org/status/1082329360948969472</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/etherchain_org/status/1082329360948969472&quot;&gt;https://twitter.com/etherchain_org/status/1082329360948969472&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18849961&quot;&gt;https://news.ycombinator.com/item?id=18849961&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 220&lt;/p&gt;
&lt;p&gt;# Comments: 103&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 20:55:05 +0000</pubDate>
<dc:creator>doener</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/etherchain_org/status/1082329360948969472</dc:identifier>
</item>
<item>
<title>Digitized Books from 1923 Now Available at the Internet Archive</title>
<link>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</link>
<guid isPermaLink="true" >http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</guid>
<description>&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059784&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png&quot; alt=&quot;&quot; width=&quot;666&quot; height=&quot;550&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png 666w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-240x198.png 240w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-360x297.png 360w, http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family-300x248.png 300w&quot; sizes=&quot;(max-width: 666px) 100vw, 666px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Whether your interest is in winning arguments online or considerably deepening your knowledge of world cultural and intellectual history, you will be very well-served by at least one government agency from now into the foreseeable future. Thanks to the expiration of the so-called &quot;Micky Mouse Protection Act,&quot; the U.S. Copyright Office will release a year’s worth of art, literature, scholarship, photography, film, etc. into the public domain, starting with 1923 this year then moving through the 20th century each subsequent year.&lt;/p&gt;
&lt;p&gt;And thanks to the venerable online institution the Internet Archive, we already have almost &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;11,000 texts from 1923 in multiple digital formats&lt;/a&gt;, just a click or two away.&lt;/p&gt;
&lt;center/&gt;
&lt;p&gt;A cursory survey produced Wm. A. Haussmann’s translation of &lt;a href=&quot;https://archive.org/details/thebirthoftraged00nietuoft/page/n7&quot;&gt;Nietzsche’s &lt;em&gt;The Birth of Tragedy&lt;/em&gt;&lt;/a&gt;, Arthur Stanley Eddington’s &lt;a href=&quot;https://archive.org/details/mathematicaltheo00eddiuoft/page/n7&quot;&gt;&lt;em&gt;The Mathematical Theory of Relativity&lt;/em&gt;&lt;/a&gt;, Waldo Lincoln’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/historyoflincoln00illinc/page/n7&quot;&gt;History of the Lincoln Family&lt;/a&gt;&lt;/em&gt;, covering the President’s ancestors and descendants from 1637 to 1920...&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059785&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy.png&quot; alt=&quot;&quot; width=&quot;682&quot; height=&quot;547&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy.png 682w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-240x192.png 240w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-360x289.png 360w, http://cdn8.openculture.com/2019/01/03225151/Birth-of-Tragedy-300x241.png 300w&quot; sizes=&quot;(max-width: 682px) 100vw, 682px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;...Lynn Thorndike’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/historyofmagicex00thor/page/n5&quot;&gt;A History of Magic and Experimental Science, Volume I&lt;/a&gt;&lt;/em&gt;, Chandra Chakraberty’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/interpretationof00chakuoft/page/n5&quot;&gt;An Interpretation of Ancient Hindu Medicine&lt;/a&gt;&lt;/em&gt;, Edward McCurdy’s &lt;a href=&quot;https://archive.org/details/leonardodavincis007918mbp/page/n9&quot;&gt;translations of Leonardo da Vinci’s Notebooks&lt;/a&gt;, Nandal Sinha’s translation of &lt;em&gt;&lt;a href=&quot;https://archive.org/details/thevaiasesikasut00kanauoft/page/n7&quot;&gt;The Vaisesika Sutras of Kanada&lt;/a&gt;&lt;/em&gt;, Winston Churchill’s &lt;em&gt;&lt;a href=&quot;https://archive.org/details/worldcrisis00chur/page/n9&quot;&gt;The World Crisis&lt;/a&gt;&lt;/em&gt;, Henry Adams Bellows’ &lt;a href=&quot;https://archive.org/details/poeticedda00belluoft/page/n7&quot;&gt;translation of &lt;em&gt;The Poetic Edda&lt;/em&gt;&lt;/a&gt;, a collection of &lt;a href=&quot;https://archive.org/details/mussoliniasrevea00mussuoft&quot;&gt;Mussolini’s political speeches from 1914-1923&lt;/a&gt;, and &lt;a href=&quot;https://archive.org/details/thomsirishwhoswh00dubl/page/118&quot;&gt;&lt;em&gt;Thom’s Irish Who’s Who&lt;/em&gt;&lt;/a&gt;, which catalogues “prominent men and women in Irish life at home and abroad,” but tellingly leaves out James Joyce, who had just published &lt;em&gt;Ulysses&lt;/em&gt;, to some infamy, the previous year. (It does include William Butler Yeats.)&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059786&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks.png&quot; alt=&quot;&quot; width=&quot;783&quot; height=&quot;628&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks.png 783w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-240x192.png 240w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-360x289.png 360w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-768x616.png 768w, http://cdn8.openculture.com/2019/01/03225210/Leonardos-Notebooks-300x241.png 300w&quot; sizes=&quot;(max-width: 783px) 100vw, 783px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;1923 turns out to have been a particularly rich literary year itself, with many of the 20th century’s finest writers publishing major and lesser-known works (see &lt;a href=&quot;https://en.wikipedia.org/wiki/1923_in_literature#New_books&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.goodreads.com/book/popular_by_date/1923&quot;&gt;here&lt;/a&gt;, for example). Browsing and focused searching &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;through the archive&lt;/a&gt;—by topic, collection, creator, and language—will net many a literary classic or overlooked gem by some famous author. But you’ll also find much in this enormous collection of digitized books that you would never think to look for, like browsing the shelves of a Borgesian university library with an entire wing devoted to the year 1923.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1059787&quot; src=&quot;https://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142.jpg&quot; alt=&quot;&quot; width=&quot;544&quot; height=&quot;889&quot; srcset=&quot;http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142.jpg 544w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-147x240.jpg 147w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-220x360.jpg 220w, http://cdn8.openculture.com/2019/01/03225224/thomsirishwhoswh00dubl_0142-300x490.jpg 300w&quot; sizes=&quot;(max-width: 544px) 100vw, 544px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The Internet Archive &lt;a href=&quot;https://archive.org/index.php&quot;&gt;homepage&lt;/a&gt; looks as modest as it does dedicated, listing all of its top collections rather than foregrounding &lt;a href=&quot;https://archive.org/search.php?query=date%3A1923+AND+mediatype%3Atexts+AND+NOT+collection%3Aopensource+AND+scanningcenter%3A%2A&amp;amp;sort=-downloads&quot;&gt;the huge tranche of newly-available material (and counting) on the 1923 shelves&lt;/a&gt;. But founder Brewster Kahle does not mince words in describing its incredible importance. “We have shortchanged a generation,” &lt;a href=&quot;https://www.smithsonianmag.com/arts-culture/first-time-20-years-copyrighted-works-enter-public-domain-180971016/&quot;&gt;he says&lt;/a&gt;, “The 20th century is largely missing from the internet” (in legally available form, that is). Now and in the coming years, thousands of its stories can be told by teachers, scholars, artists, and filmmakers with ever-broadening access to documentary history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related Content:   &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2018/04/an-avalanche-of-novels-films-and-other-works-of-art-will-soon-enter-the-public-domain.html&quot;&gt;An Avalanche of Novels, Films and Other Works of Art Will Soon Enter the Public Domain: Virginia Woolf, Charlie Chaplin, William Carlos Williams, Buster Keaton &amp;amp; More&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2018/11/library-congress-makes-thousands-fabulous-photos-posters-images-free-use-reuse.html&quot;&gt;The Library of Congress Makes Thousands of Fabulous Photos, Posters &amp;amp; Images Free to Use &amp;amp; Reuse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.openculture.com/2015/01/the-public-domain-project-makes-10000-film-clips-free-online.html&quot;&gt;The Public Domain Project Makes 10,000 Film Clips, 64,000 Images &amp;amp; 100s of Audio Files Free to Use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://about.me/jonesjoshua&quot;&gt;&lt;em&gt;Josh Jones&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is a writer and musician based in Durham, NC. Follow him at &lt;a href=&quot;https://twitter.com/jdmagness&quot;&gt;@jdmagness&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;br/&gt;</description>
<pubDate>Mon, 07 Jan 2019 18:27:37 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:type>article</og:type>
<og:url>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</og:url>
<og:title>11,000 Digitized Books From 1923 Are Now Available Online at the Internet Archive</og:title>
<og:image>http://cdn8.openculture.com/2019/01/03225014/Lincoln-Family.png</og:image>
<og:description> Whether your interest is in winning arguments online or considerably deepening your knowledge of world cultural and intellectual history, you will be very well-served by at least one government agency from now into the foreseeable future.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.openculture.com/2019/01/11000-digitized-books-from-1923-are-now-available-online-at-the-internet-archive.html</dc:identifier>
</item>
<item>
<title>Announcing unlimited free private repos</title>
<link>https://blog.github.com/2019-01-07-new-year-new-github/</link>
<guid isPermaLink="true" >https://blog.github.com/2019-01-07-new-year-new-github/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/29592817/50617647-e676f000-0eb3-11e9-992d-0eb11d29f8e0.png&quot; alt=&quot;GitHub announces unlimited private repos&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Today we’re announcing two major updates to make GitHub more accessible to developers: unlimited free private repositories, and a simpler, unified Enterprise offering. We’re excited about these updates to our Free and Enterprise offerings:&lt;/p&gt;
&lt;ul readability=&quot;5.9122257053292&quot;&gt;&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;strong&gt;GitHub Free&lt;/strong&gt; now includes unlimited private repositories. For the first time, developers can use GitHub for their private projects with up to three collaborators per repository for free. Many developers want to use private repos to apply for a job, work on a side project, or try something out in private before releasing it publicly. Starting today, those scenarios, and many more, are possible on GitHub at no cost. Public repositories are still free (of course—no changes there) and include unlimited collaborators.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.8718535469108&quot;&gt;
&lt;p&gt;&lt;strong&gt;GitHub Enterprise&lt;/strong&gt; is the new unified product for Enterprise Cloud (formerly GitHub Business Cloud) and Enterprise Server (formerly GitHub Enterprise). Organizations that want the flexibility to use GitHub in a cloud or self-hosted configuration can now access both at one per-seat price. And with &lt;a href=&quot;https://blog.github.com/2018-10-16-future-of-software/#business&quot;&gt;GitHub Connect&lt;/a&gt;, these products can be securely linked, providing a hybrid option so developers can work seamlessly across both environments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/pricing&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Pro (formerly GitHub Developer) and GitHub Team are also available for developers and teams who need professional coding and collaboration features. And of course, open source contributors will still have everything they need to collaborate on public repositories, including our free version of GitHub Team.&lt;/p&gt;
&lt;p&gt;Whether you’re a student about to write your first line of code, an enterprise leader with teams around the world, or an open source maintainer, we want GitHub to be the best place for you to code, collaborate, and connect with the global community of developers. Today’s changes are a big investment in the future of GitHub, and we’re excited to see to what you build in 2019.&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 17:03:59 +0000</pubDate>
<dc:creator>razer6</dc:creator>
<og:title>New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering</og:title>
<og:description>Today we’re announcing two major updates to make GitHub more accessible to developers.</og:description>
<og:url>https://blog.github.com/2019-01-07-new-year-new-github/</og:url>
<og:image>https://user-images.githubusercontent.com/29592817/50617660-f393df00-0eb3-11e9-85ac-3e2d344acb10.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.github.com/2019-01-07-new-year-new-github/</dc:identifier>
</item>
<item>
<title>Tennessee doctors earn big money denying disability claims</title>
<link>https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</link>
<guid isPermaLink="true" >https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/&quot;&gt;https://www.tennessean.com/story/news/2019/01/06/tennessee-doctors-disability-claims/1077220002/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18846510&quot;&gt;https://news.ycombinator.com/item?id=18846510&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 238&lt;/p&gt;
&lt;p&gt;# Comments: 148&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 16:25:31 +0000</pubDate>
<dc:creator>howard941</dc:creator>
<og:title>New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering</og:title>
<og:description>Today we’re announcing two major updates to make GitHub more accessible to developers.</og:description>
<og:url>https://blog.github.com/2019-01-07-new-year-new-github/</og:url>
<og:image>https://user-images.githubusercontent.com/29592817/50617660-f393df00-0eb3-11e9-85ac-3e2d344acb10.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.github.com/2019-01-07-new-year-new-github/</dc:identifier>
</item>
<item>
<title>I learnt C++ in 2018 and have no regrets</title>
<link>https://vishnubharathi.codes/blog/learning-cpp-2018/</link>
<guid isPermaLink="true" >https://vishnubharathi.codes/blog/learning-cpp-2018/</guid>
<description>&lt;p&gt;My quest for relearning C++ started in November 2018. I have been reading + &lt;a href=&quot;https://vishnubharathi.codes/tags/c/&quot;&gt;blogging&lt;/a&gt; + writing C++ from then. I would like to reflect on my journey a bit.&lt;/p&gt;
&lt;p&gt;Before I begin, I would like to state that this is not a language war blog post (although few parts of it might sound like). My intention and emphasis is on how all these beautiful languages converge and diverge to give healthy competition and chance for evolution.&lt;/p&gt;
&lt;h2 id=&quot;Background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;I have been writing JavaScript code on Node.js for most of my time in the past 3 years. Around November 2018, I started to get the feel that I am missing something in my toolbox.&lt;/p&gt;
&lt;p&gt;One thing that I do easily is to get excited about programming - programming languages, tools, technologies and even the old things that I haven’t experienced before. This leads me to be that kind of person who likes to explore more and learn from them.&lt;/p&gt;
&lt;p&gt;During November 2018, I was basically having my mind fly around huge number of thoughts like let me read the source code of a open source software today… no let me do competitive programming and improve my DS and algorithm skills… no let me spend time learning about design patterns and learn Object Oriented Programming… no let me pick up functional programming… no let me read about linux and do Systems Programming…&lt;/p&gt;
&lt;p&gt;I was equally excited for doing all of those. Before the confusion took over and make me do nothing, I decided to take initiative and progress somewhere. I can’t do all at once but I could wisely choose a tool that will help me do most of them.&lt;/p&gt;
&lt;p&gt;So what was that tool? You guessed it right. It was C++&lt;/p&gt;
&lt;p&gt;NOTE: If you feel weird when I call out a programming language as a tool, become comfortable with it. Because I just bring that up wherever possible! - I feel that it is just a tool to instruct a machine to do something.&lt;/p&gt;
&lt;p&gt;Ok! Here is my evaluation of what led me to study C++ in 2018 and I have no regrets about it now.&lt;/p&gt;
&lt;h2 id=&quot;C-11-is-not-the-C-I-ran-away-from&quot;&gt;C++11 is not the C++ I ran away from&lt;/h2&gt;
&lt;p&gt;I studied C++ in my college and I used to fear using it mainly because of the book I used to learn. It was a pretty scary book - a very big one portraying C++ to be full of complex concepts. Actually I was ok with it, but the real problem started to happen when I attempted to write C++ for building a Windows Store app for Windows 8 platform.&lt;/p&gt;
&lt;p&gt;I met with lot of outside the text book notations like the &lt;a href=&quot;https://stackoverflow.com/questions/500580/in-c-cli-what-does-the-hat-character-do&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Microsoft Visual C++ ^ operator&lt;/a&gt;. I couldn’t even manage to understand the sample codes properly. At the same time, I met C# which was easy to learn and understand + had friends who use it - so it was my time to blend with the local community and rebel against C++.&lt;/p&gt;
&lt;p&gt;I heard about the new C++ standards here and there on the internet like C++11, C++14, C++17 and C++20. I was curious to know what changed in them.&lt;/p&gt;
&lt;p&gt;I chose to learn C++11 because it was the breaking point and a major release of what C++ was. After learning it and while learning it, I have to tell you that it is not the C++ I feared and ran away from few years back. It is something else. (nicer!)&lt;/p&gt;

&lt;p&gt;C++ is hanging around for a long time ( 34 years till date according to Wikipedia). It is powering some of the world’s oldest and stable piece of software written over all these years. So I thought there must be a secret sauce in there that is keeping it alive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Read more code than you write&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I took this programming advice seriously and as a result I have been wanting to read more code. A good way to start this would be to read books that have code in them. Because you just can’t start reading the source code of a code base from top to bottom, (you can but not in most cases, but might give up at some point without understanding something. Books are in between everything from documentation to source code to contributing guides.&lt;/p&gt;
&lt;p&gt;I was very much interested in reading the source code of V8, Node.js, libuv, redis, electron etc. because they will help me to understand node.js or respective technologies in a better way and all of them are written in C or C++&lt;/p&gt;
&lt;p&gt;C is not going to go away at least in the near future and so is C++. Because there are already great piece of software written in them and is being used extensively. So learning C++ would be helpful for me if I ever have to work with / debug / understand internals of any of those kind of software.&lt;/p&gt;

&lt;p&gt;C++ is widely adopted amongst competitive programmers. I heard somewhere that all the finalists of Google code jam use C++ except 1 who used Java. Why so? It is mainly because of the STL which is providing nice functionality and clear abstraction.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stack&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;bitset&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;If you ask me one favourite thing about C++, it would be the presence of STL and it’s organisation.&lt;/p&gt;
&lt;p&gt;I don’t want to compare any specific language here, but I obviously compared it with a lot of languages and I feel that C++ really got this right!&lt;/p&gt;
&lt;h2 id=&quot;Object-Oriented-Programming&quot;&gt;Object Oriented Programming&lt;/h2&gt;
&lt;p&gt;I read Head First Design Patterns book in October 2018 and I was interested in implementing and learning about these patterns more. So I obviously wanted to learn a language which has good OOPS background. For example, I learnt Go back in Jan 2018 for most of the reasons written down here, but it did not satisfy this particular criteria. It was filled with structs and it was &lt;a href=&quot;https://github.com/tmrts/go-patterns&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hard to or impossible&lt;/a&gt; to express the common patterns in it. I don’t want to sail the same ship. This time I am taking the one which is deeply rooted and created in first place for Object Orientation.&lt;/p&gt;

&lt;p&gt;By the end of 2018, we are clearly seeing this emergence of newer Systems Programming languages being written (Go, Rust, Crystal, Zig). Most of them advertise to fix what C++’s shortcomings are. So I believe that learning C++ is a good way to get idea about those problems and using it will actually make me feel the real pain, that is causing the newer languages to emerge (and also how C++ is trying to solve with newer versions maintaining/breaking compatibility).&lt;/p&gt;
&lt;p&gt;For example, after reading C++ for a while I took a break for a week to learn about Rust. I definitely attempted to read about Rust before, but gave up during those attempts. But this time the story is different. I was curious to know how the ownership model and lifetimes in Rust are reducing pain because I have already got enough taste of segmentation faults at this point. (If you are interested in C++ and read till this point, there is a good chance that you will enjoy learning Rust. Give it a go!)&lt;/p&gt;
&lt;h2 id=&quot;Paradigm&quot;&gt;Paradigm&lt;/h2&gt;
&lt;p&gt;C++ has a nice merge of various programming paradigm embedded in it. From Object Oriented Programming to function programming, we have the batteries included!&lt;/p&gt;
&lt;p&gt;Want to do systems programming? sit down and write code that is C like and get a good performance.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&quot;code&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// access a dynamically sized array like&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;vec[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// more efficient but unsafe than&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;vec.at(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;p&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// because .at() throws exception for out of bounds access&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I personally use &lt;code&gt;.at()&lt;/code&gt; at all times because my use cases demand safety over performance. Programming is all about trade offs. It is like they say, “you have to lose something to gain some other thing!”&lt;/p&gt;
&lt;p&gt;One thing that I absolutely loved learning + using in C++ is generics. As I &lt;a href=&quot;https://twitter.com/scriptnull/status/1063634792888115200&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tweeted&lt;/a&gt; a while back, C++ is full of generics.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a rich heritage of generic programming popping up everywhere, resulting in generalized ideas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Regarding functional programming, C++ now includes lamda expressions and closures, functors, and &lt;a href=&quot;http://www.cplusplus.com/reference/functional/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;functional header&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Problems&quot;&gt;Problems&lt;/h2&gt;
&lt;p&gt;There are definitely some problems that I faced in this land. These problems gave a sense of when to and when not to use C++ for solving a problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I have to pay:&lt;/strong&gt; First and main concern being that the standard study materials for reading about C++ are not free. They are in book format (&lt;a href=&quot;http://www.stroustrup.com/4th.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The C++ Programming Language (4th Edition)&lt;/a&gt; and &lt;a href=&quot;http://www.stroustrup.com/tour2.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A Tour of C++ (Second Edition)&lt;/a&gt;) and you have to pay for them. Good work in the Rust community in this case because they have free and open books for all the standard study material.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tooling:&lt;/strong&gt; Coming from a JS background, npm set high expectations in this area. I faced this problem in Go too (which I think is being actively solved). There is no standard tool for doing a particular thing — there are just a lot of tools and that basically gives you flexibility to use them and confusion of which one to use. There are lot of choices available for compilers (gcc, Microsoft Visual C++ compiler, clang), build tools (make, bazel, ninja etc.) and there is CMake which a lot of projects seem to use and again we have to pay for getting the standard material on it and even more is that there will be a lot of time spent learning and choosing. For formatting there is clang_format which seems to be a nice way but I am using gcc for compiling my code and to format my C++ I have to suddenly install clang tools. This just leads to more work and effort. Package management with Conan - I haven’t given it a try. You know why! It is worth learning if it is being already used in a project that you are interested in or it is the standard/default way recommended of doing something. There are lot of test frameworks too — most common being gtest and catch2. Again more choices. On the other hand Rust has solved the tooling problem nicely with cargo, creates, tests, benchmarks etc. in a simpler way.&lt;/p&gt;
&lt;p&gt;To round up, C++ does not dictate about its tooling, which basically gives lot of choices and flexibility. But at the same time it is making it complex for beginners to come in to projects and start projects with it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/xUA7aSnSnSnrWWSTWE/giphy.gif&quot; alt=&quot;crazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Example: I just spent days learning about tools and coming up with &lt;a href=&quot;https://vishnubharathi.codes/blog/my-cpp-setup/&quot;&gt;my own C++ setup&lt;/a&gt; for bootstrapping projects in C++ — when entering rust all I have to do was type &lt;code&gt;cargo new project —bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oh and I am not trying to advertise that Rust got everything right and you should use Rust because nothing is ever perfect and that is what make things interesting.&lt;/p&gt;
&lt;p&gt;There are awesome efforts going on already to overcome the problems. One such notable effort being C++ Modules which is probably the most exciting thing if you ask me.&lt;/p&gt;
&lt;h2 id=&quot;No-regrets&quot;&gt;No regrets&lt;/h2&gt;
&lt;p&gt;Despite all the problems I faced, I still don’t have regrets learning and using C++ now and then. Because it gives this awesome base of knowledge about problems that programmers faced all these years and how they are being solved with respect to language design and tooling.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Within C++ is a smaller, simpler, safer language struggling to get out.” - Bjarne Stroustrup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There surely is!&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 14:45:30 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:type>article</og:type>
<og:title>I learnt C++ in 2018 and have no regrets</og:title>
<og:url>https://vishnubharathi.codes/blog/learning-cpp-2018/index.html</og:url>
<og:description>My quest for relearning C++ started in November 2018. I have been reading + blogging + writing C++ from then. I would like to reflect on my journey a bit. Before I begin, I would like to state that th</og:description>
<og:image>https://media.giphy.com/media/xUA7aSnSnSnrWWSTWE/giphy.gif</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://vishnubharathi.codes/blog/learning-cpp-2018/</dc:identifier>
</item>
<item>
<title>Game dev: Linux users were only 0.1% of sales but 20% of crashes and tickets</title>
<link>https://twitter.com/bgolus/status/1080213166116597760</link>
<guid isPermaLink="true" >https://twitter.com/bgolus/status/1080213166116597760</guid>
<description>&lt;p&gt;We eventually laid out a guide with known good versions of Linux and graphics drivers, but it didn't matter. Part of the allure of Linux is the customizability, so few actually stuck to it, and generally wanted to run the game on older hardware we didn't support.&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 14:13:45 +0000</pubDate>
<dc:creator>belltaco</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/bgolus/status/1080213166116597760</dc:identifier>
</item>
<item>
<title>Thank u, next</title>
<link>https://words.steveklabnik.com/thank-u-next</link>
<guid isPermaLink="true" >https://words.steveklabnik.com/thank-u-next</guid>
<description>&lt;time datetime=&quot;2019-01-06&quot; class=&quot;article_time&quot;&gt;January 6, 2019&lt;/time&gt;&lt;p&gt;I started working at 15, when I took a job as a pizza cook. Over the next seven years, I moved up the ranks, to a driver, shift manager, and then as part of the “new store opening team.” The franchise was growing, and we needed to help new franchisees open their new stores. I’d travel to where the new store was a week before they would open, help train the new staff, and then work their opening weekend. It was really fulfilling work; if pizza paid as well as tech, I’d seriously consider doing it forever.&lt;/p&gt;
&lt;p&gt;One time, somewhere in Maryland, I got a bit ill. It wasn’t a good idea for me to work the rest of the week, but the company’s top brass would usually visit to cut the ribbon on the store. It was about a four hour drive back to home, and our COO graciously agreed to let me come back to the ‘burgh with him, so I could recover at home. On the drive, I asked him what he did before working here, and the answer really surprised me. “Oh, I was the CEO of American Eagle. I grew them from 20 locations to 200, and then decided to move on.” To a kid from the suburbs, being in charge of one of the most popular clothing brands among my peers seemed like a great gig. Why’d he quit? The answer is something that’s really stuck with me; this happened about fifteen years ago. What he told me was this: at each stage of a company’s growth, they have different needs. Those needs generally require different skills. What he enjoyed, and what he had the skills to do, was to take a tiny company and make it medium sized. Once a company was at that stage of growth, he was less interested and less good at taking them from there. And that was what he was trying to do for our pizza chain.&lt;/p&gt;
&lt;p&gt;I’ve mostly worked at small companies. I did a startup, then consulted, then worked for a series of companies with five to 15 people. I quit one of those jobs when I found Rust. What I saw in Rust was something that the world really &lt;em&gt;needed&lt;/em&gt;. And I wanted to help it get there. Beyond that, the only real way to get a job working on Rust was to work at Mozilla. And independently of Rust, that was something I’m really excited about.&lt;/p&gt;
&lt;p&gt;Here’s a poster on my wall:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/x35Th9VqQFuuZ4SFBEsZkU0xspap.jpeg&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/x35Th9VqQFuuZ4SFBEsZkU0xspap_small.jpeg&quot; alt=&quot;image1.jpeg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ve been using Firefox before it was called Firefox. This poster is of a two-page ad that Mozilla took out in the New York Times to announce Firefox 1.0. I’ve long believed in Mozilla’s mission. This was an exciting opportunity!&lt;/p&gt;
&lt;p&gt;Fast forward a few years. Rust has been growing, we’re doing great things. I love my team. But every time that this means interacting with Mozilla more broadly, I end up being frustrated. I could say a lot of things here, but I won’t get into the details. What’s really important is this: I’m not proud to be a Mozillian anymore. A variety of incidents contributed to this, but at the end of the day, it’s what’s true. Furthermore, I don’t have any personal opportunity at Mozilla; I recently discovered I’m the lowest-paid person on my team, and Mozilla doesn’t pay particularly well in the first place. In order to have any kind of career growth, I would have to not do the work that aligns with my skills, and what I’m doing now is really how I can have the most impact on Rust moving forward.&lt;/p&gt;
&lt;p&gt;I don’t believe that has any chance of changing; when I’ve tried to express my frustrations, I’ve only gotten disciplined. Mozilla is not interested in hearing what I have to say. And that’s fine, but when I take a step back and think about things, that means it’s time to go, for both my sake and Mozilla’s. So I’ve just put in my two weeks’ notice.&lt;/p&gt;
&lt;p&gt;So what’s next? Well, the first thing is that I don’t plan to stop working on Rust. How much I’ll be able to depends on what’s next, but that’s the great part about open source; I can continue to help the thing I love, even if it might not be full-time anymore.&lt;/p&gt;
&lt;p&gt;I’ve also been enamored with another technology recently: WebAssembly. 2019 is going to be a &lt;em&gt;huge&lt;/em&gt; year for WebAssembly, even if many people don’t know it yet, and may not see the effects until 2020. Once again, I find myself seeing something that the world needs, and I think I have the skills to help make that happen. Unlike with Rust, I don’t think that WebAssembly needs my help to actually work on it itself; I think it’s not yet found its killer application. I’d like to help find out what that is, and help both wasm and that application grow.&lt;/p&gt;
&lt;p&gt;There’s something similar in Google’s Fuchsia. I’ve worked with the web for a long time, but doing Rust for the last few years, I’ve also really enjoyed systems-level work. Fuchsia is very interesting and a bit of an enigma, but I can’t wait to see how it turns out. They use a lot of Rust, and plan to use more. I’m not really a kernel hacker, and I’m not sure that Fuchsia is far enough along to really need my skills, but it also really piques my interest.&lt;/p&gt;
&lt;p&gt;Additionally, I’m always open to other things. Before Rust, I worked at Balanced Payments, which was one of my favorite jobs I’ve ever had. I would have never thought I’d want to work at a payments company, but by being open to it, I found an awesome role, with fantastic co-workers. Maybe what I do next will be something completely different!&lt;/p&gt;
&lt;p&gt;In terms of the actual &lt;em&gt;work&lt;/em&gt; I would like to do, I don’t think a traditional engineering role really suits me. Don’t get me wrong, I love to write some code, but I don’t think that those kinds of roles really play to my unique strengths. What I really love to do is teaching, evangelizing, and growing something. I’ve done it with Rust, and I can do it again. I could see several roles or hybrid ones here, with titles like “developer evangelist,” “product manager”, or possibly even “VP of Growth.” I want something that challenges me, and where I can grow my career.&lt;/p&gt;
&lt;p&gt;So if you’re:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A company that wants to invest in Rust, or at Rust in your company&lt;/li&gt;
&lt;li&gt;A company that thinks they can take webassembly (and their product built on it) to the next level&lt;/li&gt;
&lt;li&gt;The Fuchsia team at Google&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;or something completely different that you think I’d be psyched about, please &lt;a href=&quot;mailto:steve@steveklabnik.com&quot;&gt;email me&lt;/a&gt; and let’s see where things go!&lt;/p&gt;


&lt;p&gt;1,332&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;


&lt;p&gt;1,332&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 14:09:13 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>thank u, next • Steve Klabnik</og:title>
<og:type>article</og:type>
<og:description>I started working at 15, when I took a job as a pizza cook. Over the next seven years, I moved up the ranks, to a driver, shift manager, and then as part of the “new store opening team.” The franchise was growing, and we needed to help new... | Steve Klabnik | “The most violent element in society is ignorance.” - Emma Goldman</og:description>
<og:image>https://svbtleusercontent.com/x35Th9VqQFuuZ4SFBEsZkU0xspap_small.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://words.steveklabnik.com/thank-u-next</dc:identifier>
</item>
<item>
<title>Show HN: Mkcert – Valid HTTPS certificates for localhost</title>
<link>https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/</link>
<guid isPermaLink="true" >https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://blog.filippo.io/content/images/2019/01/mkcert.png&quot; alt=&quot;example mkcert session&quot;/&gt;&lt;/p&gt;&lt;p&gt;The web is moving to HTTPS, preventing network attackers from observing or injecting page contents. But HTTPS needs TLS certificates, and while deployment is increasingly a solved issue thanks to the ACME protocol and Let's Encrypt, development still mostly ends up happening over HTTP because &lt;a href=&quot;https://letsencrypt.org/docs/certificates-for-localhost/&quot;&gt;no one can get an universally valid certificate for &lt;em&gt;localhost&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a problem because more and more browser features are being made available only to secure origins, and testing with HTTP hides any mixed content issues that can break a production HTTPS website. Developing with HTTPS should be as easy as deploying with HTTPS.&lt;/p&gt;
&lt;p&gt;That's what &lt;strong&gt;mkcert&lt;/strong&gt; is for.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.filippo.io/content/images/2019/01/screenshot.png&quot; alt=&quot;mkcert in action, a green lock for localhost&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;mkcert&lt;/a&gt; is a simple by design tool that hides all the arcane knowledge required to generate valid TLS certificates. It works for any hostname or IP, including &lt;em&gt;localhost&lt;/em&gt;, because it only works for you.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-no-highlight&quot;&gt;$ mkcert example.com example-staging.appspot.com localhost
Using the local CA at &quot;/Users/filippo/Library/Application Support/mkcert&quot; ✨

Created a new certificate valid for the following names 📜  
 - &quot;example.com&quot;
 - &quot;example-staging.appspot.com&quot;
 - &quot;localhost&quot;

The certificate is at &quot;./example.com+2.pem&quot; and the key at &quot;./example.com+2-key.pem&quot; ✅  
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here's the twist: it doesn't generate self-signed certificates, but certificates signed by your own private CA, which your machine is automatically configured to trust when you run &lt;code&gt;mkcert -install&lt;/code&gt;. So when your browser loads a certificate generated by your instance of mkcert, it will show up with a green lock!&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-no-highlight&quot;&gt;$ mkcert -install
Using the local CA at &quot;/Users/filippo/Library/Application Support/mkcert&quot; ✨  
The local CA is now installed in the system trust store! ⚡️  
The local CA is now installed in the Firefox trust store (requires browser restart)! 🦊  
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It supports &lt;a href=&quot;https://github.com/FiloSottile/mkcert/blob/master/README.md#supported-root-stores&quot;&gt;macOS, Linux, and Windows, and Firefox, Chrome and Java&lt;/a&gt;. It even &lt;a href=&quot;https://github.com/FiloSottile/mkcert#mobile-devices&quot;&gt;works on mobile devices with a couple manual steps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, unlike OpenSSL, it does the right thing by default, instead of forcing you to &lt;a href=&quot;https://letsencrypt.org/docs/certificates-for-localhost/#making-and-trusting-your-own-certificates&quot;&gt;use a dozen flags and materialize a config file for each certificate&lt;/a&gt;. (That is, it uses Subject Alternative Names, instead of the 20-years-deprecated Common Name.)&lt;/p&gt;
&lt;p&gt;The hardest part of the project, besides figuring out half a dozen different root stores, has been keeping the tool simple and focused. There are adjacent use cases that mkcert might be good for, like acting as a CA infrastructure for microservices, but that's not what mkcert is for. mkcert is a development tool, and that focus allowed it to provide useful defaults and limit configuration options to virtually zero. &lt;a href=&quot;https://github.com/jsha/minica&quot;&gt;Other tools&lt;/a&gt; can fill other gaps better.&lt;/p&gt;
&lt;p&gt;One feature is left before mkcert is finished: an ACME server. If you are doing TLS certificates right in production, you are using Let's Encrypt via the ACME protocol. Development and staging should be as close to production as possible, so mkcert will soon act as an ACME server like Let's Encrypt, providing locally-trusted certificates with no verification. Then all you'll have to change between dev and prod will be the URL of the ACME endpoint.&lt;/p&gt;
&lt;p&gt;As for now, mkcert is already stable, with 8 releases and almost 12k stars. You can &lt;a href=&quot;https://github.com/FiloSottile/mkcert#installation&quot;&gt;install it from most package managers&lt;/a&gt;, or &lt;a href=&quot;https://github.com/FiloSottile/mkcert/releases&quot;&gt;use the pre-built binaries&lt;/a&gt;. Please try it in your workflows, and &lt;a href=&quot;https://github.com/FiloSottile/mkcert/issues&quot;&gt;report any usability issues&lt;/a&gt;. You might also want to &lt;a href=&quot;https://twitter.com/FiloSottile&quot;&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.filippo.io/content/images/2019/01/sticker-transparent.png&quot; alt=&quot;mkcert logo&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 02:15:44 +0000</pubDate>
<dc:creator>FiloSottile</dc:creator>
<og:type>article</og:type>
<og:title>mkcert: valid HTTPS certificates for localhost</og:title>
<og:description>The web is moving to HTTPS, preventing network attackers from observing or injecting page contents. But HTTPS needs TLS certificates, and while deployment is increasingly a solved issue thanks to the ACME protocol and Let's Encrypt, development still mostly ends up happening over HTTP because no one can get an</og:description>
<og:url>https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.filippo.io/mkcert-valid-https-certificates-for-localhost/</dc:identifier>
</item>
<item>
<title>The Hand Licking Incident</title>
<link>https://raisingfutureadults.blogspot.com/2019/01/the-hand-licking-incident.html</link>
<guid isPermaLink="true" >https://raisingfutureadults.blogspot.com/2019/01/the-hand-licking-incident.html</guid>
<description>&lt;p dir=&quot;ltr&quot;&gt;When my oldest son was seven and in second grade, we were living in Kansas. Some time after the school year started, he began licking his hands. He soon was doing so all day, every day.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;His teacher wanted it to stop. So did his dad, my husband.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I was a young homemaker, financially dependent on my husband, and I was feeling enormously pressured by both of these people. I also felt they both had real careers and didn't genuinely respect me. They both felt it was my job and mine alone to somehow make my son stop licking his hands entirely.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I caved to the pressure. I tried telling my child to stop. I tried spanking him. I tried putting unpleasant spices on his hands to deter him.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I tried grilling him about why he was doing this so I could find some solution. He couldn't explain it and the terror in his eyes was disturbing.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;None of it made any difference whatsoever. He continued to lick his hands all day, every day. He just tried to hide it a little better.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Meanwhile, our relationship grew more acrimonious. He clearly no longer trusted me and this was beginning to poison all our interactions.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Finally, I had this moment where I felt that my efforts to ramp up the pressure to force him to stop had crossed some line. I felt I was turning into an abusive parent.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;At that moment, I decided this had to stop. I didn't care if he licked his hands the rest of his life. It couldn't be worse than this.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;So I dropped the matter. I did so completely and totally.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I said not one word thereafter. I didn't so much as sigh or roll my eyes. My moratorium on the topic was very thorough. It included all possible forms of communication.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;It was his body. He could lick his hands if he wanted to. This was in line with longstanding policy on my part.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Coincidentally, the next few months were extremely busy. We were moving to another state and my sister had a new baby.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;My husband was career military and he had orders for a new duty station. I talked to the school and asked what day was the earliest day we could pull our son out of school and have it count as him graduating from second grade so I wouldn't have to put him in a new school in another state the last few weeks of the school year. My husband arranged to take some leave so we could make that work. My son got an extra long summer out of it by about a month.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;My sister's newborn baby had arrived a few weeks early. I had offered to take care of the baby for a month so her preemie didn't have to go to daycare with strangers while she finished out her work obligation after her maternity leave ran out.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;So we moved from Kansas to Washington state around the beginning of May and then in July I flew to Georgia with my two sons to take care of my infant niece for a month. Then we flew back to Washington in time for both boys to start school. My youngest was starting kindergarten that year.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;With so much happening in such a short period of time, I forgot all about the hand licking. Besides, it seemed to have largely stopped on its own.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;About a year after I decided to shut up completely and totally about the hand licking, my oldest began licking his hands in front of me one cold, blustery day as we walked to school. Out of curiosity, I quietly asked him &quot;Why do you do that?&quot;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The same child who could not give me a useful answer when I was grilling him to try to figure out how to make him stop answered very simply with &quot;My hands get dry.&quot;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;That answer was given to me because he trusted me again. He knew I didn't have an agenda. I wasn't collecting intel on him in order to screw with his life and force him to be what adults wanted him to be. It was just a conversation with his mom who loved him and would never intentionally do anything to harm him in any way.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;With hearing those words from him, a great many things fell into place in my mind. Winter in Kansas and winter in Washington are both cases of cold, harsh weather that's hard on the skin, doubly so if you are a small child with health issues, as he was.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The saliva was digesting the oils on his skin and leaving his hands wet in windy weather, which was just making his problem worse. The moisture in his hands was being insidiously wicked away. The more he licked his hands, the more he needed to lick his hands. It was the worst possible solution, one that made his problem worse while seeming to make it better.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;This was the crux of the issue. He felt we were interfering with his solution to his problem, not helping him. He was too young to understand the cause and effect relationship, and the way the adults around him had handled it just ensured that he would never come to us to ask for help with his real problem.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;So I explained to him that licking his hands was just making it worse and then I listed out some easy solutions that would actually help. I told him he could stuff his hands into his pockets, he could wear mittens and/or he could use lotion.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;After that, if I saw him lick his hands, I was helpful. Unlike when I had been scolding him, he was happy to get this new feedback and completely cooperative.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;If we were at home, I offered to get him his mittens or some lotion. If we were out walking, I reminded him that he could put his mittens on or stuff his hands in his pockets.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;After just two weeks, with no drama and no acrimony, he had established new and more effective habits that actually resolved his problem with his hands getting dry in the harsh winter weather. The hand licking never returned.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The hand licking incident strongly reinforced my commitment to &lt;em&gt;just stop&lt;/em&gt; and not do things that I knew didn't work. It made me more committed to not &quot;put out the fire with gasoline,&quot; even in the face of social pressure to the contrary.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Imagine you see some small fire in your house. Say, a match was dropped on the carpet or a small candle was knocked over. You just happen to be carrying something flammable, like an alcoholic beverage. You are surrounded by panicked people screaming at you to douse it with your drink before the house burns down.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;It's small and manageable and could still be safely put out. Unless you cave to social pressure and dump your beverage on it, thereby adding fuel to the fire.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Afterwards, you vow to yourself: Never again!&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The hand licking incident brought it home to me in a big way that, yea, verily, it's better to stand there dumbly and just watch it burn while trying to think of something better to do, even though that is extraordinarily stressful and can feel like the worst possible solution. When there is a crisis, it often feels like you should do Something! Anything!&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Maybe. But sometimes you should do &lt;em&gt;Anything -- except that. Anything but that.&lt;/em&gt; So it reinforced my resolve to stand my ground when adults around me were haranguing me to do things I knew would not work and would, in fact, be counterproductive.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Once I returned to that place where my child fundamentally trusted me because I had no agenda to control him or his behavior, the problem was very easily solved. It had only been a big problem to begin with because other adults decided arbitrarily that hand licking was Bad Behavior and that this Bad Behavior Absolutely Must Stop At Any Cost.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;A few years later, I told this story to my sister. She noted that her daughter, the infant niece I had taken care of the year this all happened, had recently started licking her hands. She was glad to know what the answer had been for us.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I never heard her mention her daughter licking her hands again. Presumably, it never became a big deal because her mother had good information to work with.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Thorny problems are only intractable as long as you don't know the solution. Investing energy into fighting with someone because no one knows the solution is just an exercise in undermining trust. It only makes it harder to solve.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Trust is earned. You don't get it by standing on authority. You absolutely don't get it by bullying a child. In fact, that very much undermines it.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;I had caved to pressure because I felt threatened. I felt like if I didn't comply, then outside forces might interfere with my parental rights. It might result in worse things happening to my relationship to my child than him being mad at me about this one thing. So I tried to comply with this expectation that my child needed to stop and I needed to be the one to make that happen.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;And it was the wrong thing to do. It just turned some small thing into a really big issue that could have gone even worse places had I not decided to reverse gears and reinstate my previous policies.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;When the chips are down, that's when you most need your child's trust. Undermining their trust only comes back to bite you. It just turns minor problems into major ones and major ones into ruinous disasters.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;The hand licking incident is the only exception I can recall to my policy to parent in a manner that earned the trust of my children. Fortunately, I was able to undo the damage and win my son's trust back by returning to the set of deeply respectful principles that had long driven my parenting choices.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=18842009&quot;&gt;HN Discussion&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 07 Jan 2019 01:22:43 +0000</pubDate>
<dc:creator>DoreenMichele</dc:creator>
<og:url>https://raisingfutureadults.blogspot.com/2019/01/the-hand-licking-incident.html</og:url>
<og:title>The Hand Licking Incident</og:title>
<og:description>When my oldest son was seven and in second grade, we were living in Kansas. Some time after the school year started, he began licking his ha...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://raisingfutureadults.blogspot.com/2019/01/the-hand-licking-incident.html</dc:identifier>
</item>
<item>
<title>Show HN: Trilium Notes – Scriptable note-taking application</title>
<link>https://github.com/zadam/trilium</link>
<guid isPermaLink="true" >https://github.com/zadam/trilium</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/trilium-notes/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/cb1b685bfa3673201e1973d9ea903f68f65a15f3/68747470733a2f2f6261646765732e6769747465722e696d2f7472696c69756d2d6e6f7465732f4c6f6262792e737667&quot; alt=&quot;Join the chat at https://gitter.im/trilium-notes/Lobby&quot; data-canonical-src=&quot;https://badges.gitter.im/trilium-notes/Lobby.svg&quot;/&gt;&lt;/a&gt; Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. See &lt;a href=&quot;https://github.com/zadam/trilium/wiki/Screenshot-tour&quot;&gt;screenshots&lt;/a&gt; for quick overview:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/wiki/zadam/trilium/images/screenshot.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wiki/zadam/trilium/images/screenshot.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;h2&gt;Builds&lt;/h2&gt;
&lt;p&gt;Trilium is provided as either desktop application (Linux, Windows, Mac) or web application hosted on your server (Linux).&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you want to use Trilium on the desktop, download binary release for your platform from &lt;a href=&quot;https://github.com/zadam/trilium/releases/latest&quot;&gt;latest release&lt;/a&gt;, unzip the package and run &lt;code&gt;trilium&lt;/code&gt; executable.&lt;/li&gt;
&lt;li&gt;If you want to install Trilium on server, follow &lt;a href=&quot;https://github.com/zadam/trilium/wiki/Server-installation&quot;&gt;this page&lt;/a&gt;.
&lt;ul&gt;&lt;li&gt;Currently only recent Chrome and Firefox are supported (tested) browsers.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/zadam/trilium/wiki/&quot;&gt;See wiki for complete list of documentation pages.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also read &lt;a href=&quot;https://github.com/zadam/trilium/wiki/Patterns-of-personal-knowledge-base&quot;&gt;Patterns of personal knowledge base&lt;/a&gt; to get some inspiration on how you might use Trilium.&lt;/p&gt;
&lt;h2&gt;Contribute&lt;/h2&gt;
&lt;p&gt;Use a browser based dev environment&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/zadam/trilium&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1eb1ddfea6092593649f0117f7262ffa8fbd3017/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667&quot; alt=&quot;Open in Gitpod&quot; data-canonical-src=&quot;https://gitpod.io/button/open-in-gitpod.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or clone locally and run&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;npm install
npm run start
&lt;/code&gt;
&lt;/pre&gt;&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 06 Jan 2019 21:57:54 +0000</pubDate>
<dc:creator>The_Colonel</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/617641?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>zadam/trilium</og:title>
<og:url>https://github.com/zadam/trilium</og:url>
<og:description>Build your personal knowledge base with Trilium Notes - zadam/trilium</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/zadam/trilium</dc:identifier>
</item>
</channel>
</rss>