<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Deno 1.0</title>
<link>https://deno.land/v1</link>
<guid isPermaLink="true" >https://deno.land/v1</guid>
<description>&lt;p&gt;Dynamic languages are useful tools. Scripting allows users to rapidly and succinctly tie together complex systems and express ideas without worrying about details like memory management or build systems. In recent years programming languages like Rust and Go have made it much easier to produce sophisticated native machine code; these projects are incredibly important developments in computer infrastructure. However, we claim it is still important to have a powerful scripting environment that can address a wide range of problem domains.&lt;/p&gt;
&lt;p&gt;JavaScript is the most widely used dynamic language, operating on every device with a web browser. Vast numbers of programmers are fluent in JavaScript and much effort has been put into optimizing its execution. Through standards organizations like ECMA International, the language has been carefully and continuously improved. We believe JavaScript is the natural choice for dynamic language tooling; whether in a browser environment or as standalone processes.&lt;/p&gt;
&lt;p&gt;Our original undertaking in this area, Node.js, proved to be a very successful software platform. People have found it useful for building web development tooling, building standalone web servers, and for a myriad of other use-cases. Node, however, was designed in 2009 when JavaScript was a much different language. Out of necessity, Node had to invent concepts which were later taken up by the standards organizations and added to the language differently. In the presentation &lt;a href=&quot;https://www.youtube.com/watch?v=M3BM9TB-8yA&quot; class=&quot;link&quot;&gt;Design Mistakes in Node&lt;/a&gt;, this is discussed in more detail. Due to the large number of users that Node has, it is difficult and slow to evolve the system.&lt;/p&gt;
&lt;p&gt;With the changing JavaScript language, and new additions like TypeScript, building Node projects can become an arduous endeavor, involving managing build systems and other heavy handed tooling that takes away from the fun of dynamic language scripting. Furthermore the mechanism for linking to external libraries is fundamentally centralized through the NPM repository, which is not inline with the ideals of the web.&lt;/p&gt;
&lt;p&gt;We feel that the landscape of JavaScript and the surrounding software infrastructure has changed enough that it was worthwhile to simplify. We seek a fun and productive scripting environment that can be used for a wide range of tasks.&lt;/p&gt;

&lt;p&gt;Deno is a new runtime for executing JavaScript and TypeScript outside of the web browser.&lt;/p&gt;
&lt;p&gt;Deno attempts to provide a standalone tool for quickly scripting complex functionality. Deno is (and always will be) a single executable file. Like a web browser, it knows how to fetch external code. In Deno, a single file can define arbitrarily complex behavior without any other tooling.&lt;/p&gt;
&lt;pre class=&quot;prism-code language-ts flex overflow-y-auto rounded border border-gray-200 p-1 px-2 sm:px-3&quot;&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
 
&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
 
&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;3&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
 
&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;4&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
 
&lt;/pre&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;5&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
 
&lt;/pre&gt;


&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token plain&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;serve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token plain&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8000&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;&lt;span class=&quot;token plain&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token method function property-access&quot;&gt;respond&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token plain&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello World\n&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;pr-2 sm:pr-3&quot;&gt;Here a complete HTTP server module is added as a dependency in a single line. There are no additional configuration files, there is no install to do beforehand, just &lt;strong&gt;&lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;deno run example.js&lt;/code&gt;&lt;/strong&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also like browsers, code is executed in a secure sandbox by default. Scripts cannot access the hard drive, open network connections, or make any other potentially malicious actions without permission. The browser provides APIs for accessing cameras and microphones, but users must first give permission. Deno provides analogous behaviour in the terminal. The above example will fail unless the &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;--allow-net&lt;/code&gt; command-line flag is provided.&lt;/p&gt;
&lt;p&gt;Deno is careful to not deviate from standardized browser JavaScript APIs. Of course, not every browser API is relevant for Deno, but where they are, Deno does not deviate from the standard.&lt;/p&gt;

&lt;p&gt;We want Deno to be applicable to a wide range of problem domains: from small one-line scripts, to complex server-side business logic. As programs become more complex, having some form of type checking becomes increasingly important. TypeScript is an extension of the JavaScript language that allows users to optionally provide type information.&lt;/p&gt;
&lt;p&gt;Deno supports TypeScript without additional tooling. The runtime is designed with TypeScript in mind. The &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;deno types&lt;/code&gt; command provides type declarations for everything provided by Deno. Deno's standard modules are all written in TypeScript.&lt;/p&gt;

&lt;p&gt;Node was designed before JavaScript had the concept of Promises or async/await. Node's counterpart to promises was the EventEmitter, which important APIs are based around, namely sockets and HTTP. Setting aside the ergonomic benefits of async/await, the EventEmitter pattern has an issue with back-pressure. Take a TCP socket, for example. The socket would emit &quot;data&quot; events when it received incoming packets. These &quot;data&quot; callbacks would be emitted in an unconstrained manner, flooding the process with events. Because Node continues to receive new data events, the underlying TCP socket does not have proper back-pressure, the remote sender has no idea the server is overloaded and continues to send data. To mitigate this problem, a &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;pause()&lt;/code&gt; method was added. This could solve the problem, but it required extra code; and since the flooding issue only presents itself when the process is very busy, many Node programs can be flooded with data. The result is a system with bad tail latency.&lt;/p&gt;
&lt;p&gt;In Deno, sockets are still asynchronous, but receiving new data requires users to explicitly &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;read()&lt;/code&gt;. No extra pause semantics are necessary to properly structure a receiving socket. This is not unique to TCP sockets. The lowest level binding layer to the system is fundamentally tied to promises - we call these bindings &quot;ops&quot;. All callbacks in Deno in some form or another arise from promises.&lt;/p&gt;
&lt;p&gt;Rust has its own promise-like abstraction, called Futures. Through the &quot;op&quot; abstraction, Deno makes it easy to bind Rust future-based APIs into JavaScript promises.&lt;/p&gt;

&lt;p&gt;The primary component that we ship is the Deno command-line interface (CLI). The CLI is the thing that is version 1.0 today. But Deno is not a monolithic program, but designed as a collection of Rust crates to allow integration at different layers.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://crates.io/crates/deno_core&quot; class=&quot;link&quot;&gt;deno_core&lt;/a&gt; crate is a very bare bones version of Deno. It does not have dependencies on TypeScript nor on &lt;a href=&quot;https://tokio.rs/&quot; class=&quot;link&quot;&gt;Tokio&lt;/a&gt;. It simply provides our Op and Resource infrastructure. That is, it provides an organized way of binding Rust futures to JavaScript promises. The CLI is of course built entirely on top of deno_core.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://crates.io/crates/rusty_v8&quot; class=&quot;link&quot;&gt;rusty_v8&lt;/a&gt; crate provides high quality Rust bindings to V8's C++ API. The API tries to match the original C++ API as closely as possible. It's a zero-cost binding - the objects that are exposed in Rust are exactly the object you manipulate in C++. (Previous attempts at Rust V8 bindings forced the use of Persistent handles, for example.) The crate provides binaries that are built in Github Actions CI, but it also allows users to compile V8 from scratch and adjust its many build configurations. All of the V8 source code is distributed in the crate itself. Finally rusty_v8 attempts to be a safe interface. It's not yet 100% safe, but we're getting close. Being able to interact with a VM as complex as V8 in a safe way is quite amazing and has allowed us to discover many difficult bugs in Deno itself.&lt;/p&gt;

&lt;p&gt;We promise to maintain a stable API in Deno. Deno has a lot of interfaces and components, so it's important to be transparent about what we mean by &quot;stable&quot;. The JavaScript APIs that we have invented to interact with the operating system are all found inside the &quot;Deno&quot; namespace (e.g. &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;Deno.open()&lt;/code&gt;). These have been carefully examined and we will not be making backwards incompatible changes to them.&lt;/p&gt;
&lt;p&gt;All functionality which is not yet ready for stabilization has been hidden behind the &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;--unstable&lt;/code&gt; command-line flag. You can see the documentation for the unstable interfaces &lt;a href=&quot;https://doc.deno.land/https/raw.githubusercontent.com/denoland/deno/master/cli/js/lib.deno.unstable.d.ts&quot; class=&quot;link&quot;&gt;here&lt;/a&gt;. In subsequent releases, some of these APIs will be stabilized as well.&lt;/p&gt;
&lt;p&gt;In the global namespace you'll find all sorts of other objects (e.g. &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;setTimeout()&lt;/code&gt; and &lt;code class=&quot;py-0.5 px-1 font-mono rounded-sm bg-gray-100 deno-inlinecode&quot;&gt;fetch()&lt;/code&gt;). We've tried very hard to keep these interfaces identical to those in the browser; but we will issue corrections if we discover inadvertent incompatibilities. The browser standards define these interfaces, not us. Any corrections issued by us are bug fixes, not interface changes. If there is an incompatibility with a browser standard API, that incompatibility may be corrected before a major release.&lt;/p&gt;
&lt;p&gt;Deno also has many Rust APIs, namely the deno_core and rusty_v8 crates. None of these APIs are at 1.0 yet. We will continue to iterate on them.&lt;/p&gt;

&lt;p&gt;It's important to understand that Deno is not a fork of Node - it's a completely new implementation. Deno has been under development for just two years, while Node has been under development for over a decade. Given the amount of interest in Deno, we expect it to continue to evolve and mature.&lt;/p&gt;
&lt;p&gt;For some applications Deno may be a good choice today, for others not yet. It will depend on the requirements. We want to be transparent about these limitations to help people make informed decisions when considering to use Deno.&lt;/p&gt;
&lt;h3 id=&quot;compatibility&quot;&gt;&lt;a href=&quot;https://deno.land/v1#compatibility&quot; class=&quot;hover:underline&quot;&gt;Compatibility&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unfortunately, many users will find a frustrating lack of compatibility with existing JavaScript tooling. Deno is not compatible, in general, with Node (NPM) packages. There is a nascent compatibility layer being built at &lt;a href=&quot;https://deno.land/std/node/&quot; class=&quot;link&quot;&gt;https://deno.land/std/node/&lt;/a&gt; but it is far from complete.&lt;/p&gt;
&lt;p&gt;Although Deno has taken a hardline approach to simplifying the module system, ultimately Deno and Node are pretty similar systems with similar goals. Over time, we expect Deno to be able to run more and more Node programs out-of-the-box.&lt;/p&gt;
&lt;h3 id=&quot;http-server-performance&quot;&gt;&lt;a href=&quot;https://deno.land/v1#http-server-performance&quot; class=&quot;hover:underline&quot;&gt;HTTP Server Performance&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://deno.land/benchmarks&quot; class=&quot;link&quot;&gt;We continuously track the performance of Deno's HTTP server&lt;/a&gt;. A hello-world Deno HTTP server does about 25k requests per second with a max latency of 1.3 milliseconds. A comparable Node program does 34k requests per second with a rather erratic max latency between 2 and 300 milliseconds.&lt;/p&gt;
&lt;p&gt;Deno's HTTP server is implemented in TypeScript on top of native TCP sockets. Node's HTTP server is written in C and exposed as high-level bindings to JavaScript. We have resisted the urge to add native HTTP server bindings to Deno, because we want to optimize the TCP socket layer, and more generally the op interface.&lt;/p&gt;
&lt;p&gt;Deno is a proper asynchronous server and 25k requests per second is quite enough for most purposes. (If it's not, probably JavaScript is not the best choice.) Furthermore, we expect Deno to generally exhibit better tail latency due to the ubiquitous use of promises (discussed above). All that said, we do believe there are more performance wins to be had in the system, and we hope to achieve that in future releases.&lt;/p&gt;
&lt;h3 id=&quot;tsc-bottleneck&quot;&gt;&lt;a href=&quot;https://deno.land/v1#tsc-bottleneck&quot; class=&quot;hover:underline&quot;&gt;TSC Bottleneck&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Internally Deno uses Microsoft's TypeScript compiler to check types and produce JavaScript. Compared to the time it takes V8 to parse JavaScript, it is very slow. Early on in the project we had hoped that &quot;V8 Snapshots&quot; would provide significant improvements here. Snapshots have certainly helped but it's still unsatisfyingly slow. We certainly think there are improvements that can be done here on top of the existing TypeScript compiler, but it's clear to us that ultimately the type checking needs to be implemented in Rust. This will be a massive undertaking and will not happen any time soon; but it would provide order of magnitude performance improvements in a critical path experienced by developers. TSC must be ported to Rust. If you're interested in collaborating on this problem, please get in touch.&lt;/p&gt;
&lt;h3 id=&quot;plugins--extensions&quot;&gt;&lt;a href=&quot;https://deno.land/v1#plugins--extensions&quot; class=&quot;hover:underline&quot;&gt;Plugins / Extensions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We have a nascent plugin system for extending the Deno runtime with custom ops. However this interface is still under development and has been marked as unstable. Therefore, accessing native systems beyond that which is provided by Deno is difficult.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;&lt;a href=&quot;https://deno.land/v1#acknowledgements&quot; class=&quot;hover:underline&quot;&gt;Acknowledgements&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Many thanks to the &lt;a href=&quot;https://github.com/denoland/deno/graphs/contributors&quot; class=&quot;link&quot;&gt;many contributors&lt;/a&gt; who helped make this release possible. Espcially: &lt;a href=&quot;https://github.com/kitsonk&quot; class=&quot;link&quot;&gt;@kitsonk&lt;/a&gt; who has had a massive hand in many parts of the system, including (but not limited to) the TypeScript compiler host, deno_typescript, deno bundle, deno install, deno types, streams implementation. &lt;a href=&quot;https://github.com/kevinkassimo&quot; class=&quot;link&quot;&gt;@kevinkassimo&lt;/a&gt; has contributed countless bug fixes over the whole history of the project. Among his contributions are the timer system, TTY integration, wasm support. Deno.makeTempFile, Deno.kill, Deno.hostname, Deno.realPath, std/node's require, window.queueMircotask, and REPL history. He also created the logo. &lt;a href=&quot;https://github.com/kt3k&quot; class=&quot;link&quot;&gt;@kt3k&lt;/a&gt; implemented the continuous benchmark system (which has been instrumental in almost every major refactor), signal handlers, the permissions API, and many critical bug fixes. &lt;a href=&quot;https://github.com/nayeemrmn&quot; class=&quot;link&quot;&gt;@nayeemrmn&lt;/a&gt; contributes bug fixes in many parts of Deno, most notably he greatly improved the stack trace and error reporting, and has been a forceful help towards the stabilizing the APIs for 1.0. &lt;a href=&quot;https://github.com/justjavac&quot; class=&quot;link&quot;&gt;@justjavac&lt;/a&gt; has contributed many small but critical fixes to align deno APIs with web standards and most famously he wrote the VS Code deno plugin. &lt;a href=&quot;https://github.com/zekth&quot; class=&quot;link&quot;&gt;@zekth&lt;/a&gt; has contributed a lot of modules to std, among them the std/encoding/csv, std/encoding/toml, std/http/cookies, as well as many other bug fixes. &lt;a href=&quot;https://github.com/axetroy&quot; class=&quot;link&quot;&gt;@axetroy&lt;/a&gt; has helped with all things related to prettier, contributed many bug fixes, and has maintained the VS Code plugin. &lt;a href=&quot;https://github.com/afinch7&quot; class=&quot;link&quot;&gt;@afinch7&lt;/a&gt; implemented the plugin system. &lt;a href=&quot;https://github.com/keroxp&quot; class=&quot;link&quot;&gt;@keroxp&lt;/a&gt; implemented the websocket server and provided many bug fixes. &lt;a href=&quot;https://github.com/cknight&quot; class=&quot;link&quot;&gt;@cknight&lt;/a&gt; has provided a lot of documentation and std/node polyfills. &lt;a href=&quot;https://github.com/lucacasonato&quot; class=&quot;link&quot;&gt;@lucacasonato&lt;/a&gt; built almost the entire deno.land website. &lt;a href=&quot;https://github.com/hashrock&quot; class=&quot;link&quot;&gt;@hashrock&lt;/a&gt; has done a lot of amazing artwork, like the loading page on doc.deno.land and the lovely image at the top of this page!&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 22:18:14 +0000</pubDate>
<dc:creator>theBashShell</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://deno.land/v1</dc:identifier>
</item>
<item>
<title>Show HN: This Word Does Not Exist</title>
<link>https://www.thisworddoesnotexist.com/</link>
<guid isPermaLink="true" >https://www.thisworddoesnotexist.com/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.thisworddoesnotexist.com/&quot;&gt;https://www.thisworddoesnotexist.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=23169962&quot;&gt;https://news.ycombinator.com/item?id=23169962&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 434&lt;/p&gt;
&lt;p&gt;# Comments: 194&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 18:21:52 +0000</pubDate>
<dc:creator>turtlesoup</dc:creator>
<og:url>https://www.thisworddoesnotexist.com</og:url>
<og:title>colobranch: this word does not exist</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.thisworddoesnotexist.com/</dc:identifier>
</item>
<item>
<title>Let&amp;#039;s guess what Google requires in 14 days or they kill our extension</title>
<link>https://blog.pushbullet.com/2020/05/13/lets-guess-what-google-requires-in-14-days-or-they-kill-our-extension/</link>
<guid isPermaLink="true" >https://blog.pushbullet.com/2020/05/13/lets-guess-what-google-requires-in-14-days-or-they-kill-our-extension/</guid>
<description>&lt;p&gt;&lt;strong&gt;We at Pushbullet have received some bad news from Google. It appears our extension will be removed from the Chrome Web Store if we don’t make required changes within 14 days. Not good! The bigger problem? Google hasn’t told us what those required changes are.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/guzba/7a971459f2f6dd8a208d57c5b2e2bfb2&quot;&gt;Here’s the full text of the email if you’d like to read it for yourself.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Pushbullet Chrome extension has been on the Chrome Web store for over 6 years, currently has over 1,000,000 users, and has a 4.5 star average rating. &lt;a href=&quot;https://chrome.google.com/webstore/detail/pushbullet/chlffgpmiacpedhhbkiomidkjlcfhogd&quot;&gt;See for yourself here.&lt;/a&gt; We are very proud of this. In addition to the large number of users and excellent rating, our extension is also frequently featured by Chrome Web Store team which we really appreciate! &lt;a href=&quot;https://chrome.google.com/webstore/category/collection/workfromhome&quot;&gt;Here’s us in the Work From Home collection.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Considering all of the work we’ve done over the years to make an exceptional Chrome extension that this worthy of being featured by the Chrome Web Store team, it was shocking to read we are less than 14 days away from being removed from the Web Store.&lt;/p&gt;
&lt;p&gt;The Pushbullet extension is our most-installed app for desktop. It being removed may very well be the end of Pushbullet altogether. This is a big deal for us.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14 days and counting. What do we have to go on to guess the required changes to not get kicked off the Chrome Web Store?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fortunately, Google has given us a hint of what changes we need to make. Here’s what the email said:&lt;/p&gt;
&lt;div class=&quot;eee&quot;&gt;
&lt;p&gt;Your item did not comply with the following section of our Program Policies:&lt;/p&gt;
&lt;p&gt;&quot;User Data Privacy&quot;&lt;/p&gt;
&lt;p&gt;Your product violates the &quot;Use of Permissions&quot; section of the policy, which requires that you:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Request access to the narrowest permissions necessary to implement your product’s features or services.&lt;/li&gt;
&lt;li&gt;If more than one permission could be used to implement a feature, you must request those with the least access to data or functionality.&lt;/li&gt;
&lt;li&gt;Don't attempt to &quot;future proof&quot; your product by requesting a permission that might benefit services or features that have not yet been implemented.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;We appear to violate the “Use of Permissions” section of the Chrome Web Store policy. That’s not good!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Based on my interpretation of bullet points listed, I believe Google wants us to find ways to reduce the permissions our extension requests. Ok, fair enough. I’ll accept that challenge. It’s not clear what permissions Google wants us to remove (or how many, or anything like that) but lets make a good-faith effort to reduce the permissions our extension requests!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What permissions does our extension request?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our extension requires these permissions: &lt;strong&gt;tabs&lt;/strong&gt;, &lt;strong&gt;activeTab&lt;/strong&gt;, &lt;strong&gt;contextMenu&lt;/strong&gt;, &lt;strong&gt;cookies&lt;/strong&gt;, &lt;strong&gt;notifications&lt;/strong&gt;, &lt;strong&gt;idle&lt;/strong&gt;, &lt;strong&gt;https://*/*&lt;/strong&gt;, and &lt;strong&gt;http://*/*&lt;/strong&gt;. We also optionally request these permissions if a user wants to enable certain features: &lt;strong&gt;background&lt;/strong&gt;, &lt;strong&gt;clipboardRead&lt;/strong&gt;, &lt;strong&gt;clipboardWrite&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So, can we cut any of these permissions?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, let’s start off by prioritizing. I believe the Chrome team are most concerned with the required permissions (these are all granted at install). Optional permissions are requested later and must be manually granted by the user. Since the optional permissions are specifically approved by a user, they seem pretty tame. Let’s focus on reducing the required permissions!&lt;/p&gt;
&lt;p&gt;As I looked at the permissions and what our extension actually needs to operate, I noticed a great opportunity to reduce our permissions requests. We do not need to request access to data on &lt;strong&gt;https://*/*&lt;/strong&gt; and &lt;strong&gt;http://*/*&lt;/strong&gt;. Instead, we can simply request data access for &lt;strong&gt;https://*.pushbullet.com/*&lt;/strong&gt;, &lt;strong&gt;http://*.pushbullet.com/*&lt;/strong&gt;, and &lt;strong&gt;http://localhost/*&lt;/strong&gt;. This is a huge reduction in the private data our extension could theoretically access. A big win!&lt;/p&gt;
&lt;p&gt;The other opportunity is the &lt;strong&gt;tabs&lt;/strong&gt; permission. This permission lets extensions see what tabs are open. Pushbullet uses this permission to avoid opening new tabs for websites that are already open when &lt;a href=&quot;https://blog.pushbullet.com/2013/11/12/real-time-notification-mirroring-from-android-to-your-computer/&quot;&gt;mirrored notifications&lt;/a&gt; are clicked. This is a small sacrifice to make to let go of a big permission. Let’s let it go!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What permissions are required now?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our extension will now only require: &lt;strong&gt;activeTab&lt;/strong&gt;, &lt;strong&gt;contextMenu&lt;/strong&gt;, &lt;strong&gt;cookies&lt;/strong&gt;, &lt;strong&gt;notifications&lt;/strong&gt;, &lt;strong&gt;idle&lt;/strong&gt;, &lt;strong&gt;https://*.pushbullet.com/*&lt;/strong&gt;, &lt;strong&gt;http://*.pushbullet.com/*&lt;/strong&gt;, and &lt;strong&gt;http://localhost/*&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This is a huge reduction in the level of access Pushbullet requires to operate! A big success. Let’s get it submitted to the Chrome Web Store!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Submitted and rejected.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Around 24 hours after submitting the updated extension, it was rejected. Unfortunately, it appears the changes we’ve made are not the changes Google requires.&lt;/p&gt;
&lt;p&gt;Google has provided no further guidance on what changes they require. The reason for rejection was exactly the same as our original notice. I also replied to the email asking for further guidance but have not received any response. I obviously don’t expect one but it was no harm to try.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7 days left now. Where do we go from here?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’ve tried coming up with a few theories of other changes we could make to potentially get past whatever is blocking our extension. Here are my current theories:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Change the &lt;strong&gt;http(s)://*.pushbullet.com/*&lt;/strong&gt; data permissions to &lt;strong&gt;http(s)://www.pushbullet.com&lt;/strong&gt;. This shouldn’t really matter since it is our own first-party domain after all, but perhaps reducing the scope would help?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove the clipboardRead and clipboardWrite permissions. These permissions are optional and only requested if a user enables &lt;a href=&quot;https://blog.pushbullet.com/2014/08/20/introducing-universal-copy-and-paste/&quot;&gt;Universal copy &amp;amp; paste&lt;/a&gt;. However, perhaps Chrome is unwilling to allow extensions to request these permissions now? &lt;a href=&quot;https://www.androidpolice.com/2019/03/14/android-q-will-kill-clipboard-manager-apps-in-the-name-of-privacy/&quot;&gt;Google did kill clipboard managers on Android recently after all.&lt;/a&gt; This will mean removing the feature from our extension.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Why not just keep trying submissions with changes that might help until it passes review?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I think I don’t have any choice to do this, but it isn’t without risk. I fear Google’s automated system will think I am trying to find a way around the rules and permaban my entire Google account. Their policy does specifically state: &lt;strong&gt;This may also result in the suspension of related Google services associated with your Google account.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Giving it another try, stay tuned for updates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Later today I am going to give another submission a try with the 2 changes I listed above. Follow our blog and &lt;a href=&quot;http://twitter.com/pushbullet&quot;&gt;@pushbullet&lt;/a&gt; for updates!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What do you think of all of this?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’m eager to hear what people think so far. Am I missing something obvious? Do you have a good suggestion I may not have thought of? Do you have a friend that works on Chrome? Please share! &lt;a href=&quot;https://www.reddit.com/r/PushBullet/comments/gj2dio/lets_guess_what_google_requires_in_14_days_or/&quot;&gt;I have made a post on the Pushbullet subreddit for us to discuss this here.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 16:51:07 +0000</pubDate>
<dc:creator>cimnine</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.pushbullet.com/2020/05/13/lets-guess-what-google-requires-in-14-days-or-they-kill-our-extension/</dc:identifier>
</item>
<item>
<title>A first look at Unreal Engine 5</title>
<link>https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5</link>
<guid isPermaLink="true" >https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5</guid>
<description>&lt;h2&gt;Unreal Engine 4 &amp;amp; 5 timeline&lt;/h2&gt;
Unreal Engine 4.25 already supports next-generation console platforms from Sony and Microsoft, and Epic is working closely with console manufacturers and dozens of game developers and publishers using Unreal Engine 4 to build next-gen games.&lt;p&gt;Unreal Engine 5 will be available in preview in early 2021, and in full release late in 2021, supporting next-generation consoles, current-generation consoles, PC, Mac, iOS, and Android.&lt;/p&gt;&lt;p&gt;We’re designing for forward compatibility, so you can get started with next-gen development now in UE4 and move your projects to UE5 when ready. &lt;/p&gt;&lt;p&gt;We will release Fortnite, built with UE4, on next-gen consoles at launch and, in keeping with our commitment to prove out industry-leading features through internal production, migrate the game to UE5 in mid-2021.&lt;br/&gt; 
&lt;/p&gt;&lt;h2&gt;Unreal Engine royalties waived on first $1 million in game revenue &lt;/h2&gt;
Starting today, you can download and use Unreal Engine to build games for free as you always have, except now royalties are waived on your first $1 million in gross revenue. The new Unreal Engine license terms, which are retroactive to January 1, 2020, give game developers an unprecedented advantage over other engine license models. For more information, visit the &lt;a href=&quot;https://www.unrealengine.com/faq&quot; target=&quot;_blank&quot;&gt;FAQ&lt;/a&gt;.&lt;br/&gt; 
&lt;h2&gt;Epic Online Services have launched!&lt;/h2&gt;
Friends, matchmaking, lobbies, achievements, leaderboards, and accounts: we built these services for Fortnite, we launched them across seven major platforms - PlayStation, Xbox, Switch, PC, Mac, iOS, and Android. Now we’re opening up &lt;a href=&quot;https://www.unrealengine.com/blog/epic-online-services-featuring-epic-account-and-game-services&quot; target=&quot;_blank&quot;&gt;Epic Online Services&lt;/a&gt; to all developers FOR FREE in a simple multiplatform SDK!&lt;p&gt;Mix and match these services together with your own account services, platform accounts, or Epic Games accounts, which reach the world’s largest cross-platform social graph with over 350 million players and their 2.2 billion friend connections across half a billion devices.&lt;br/&gt; &lt;/p&gt;</description>
<pubDate>Wed, 13 May 2020 15:26:38 +0000</pubDate>
<dc:creator>HammadB</dc:creator>
<og:url>https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5</og:url>
<og:type>article</og:type>
<og:title>A first look at Unreal Engine 5</og:title>
<og:description>Get a glimpse of new and improved real-time rendering features currently in development.</og:description>
<og:image>https://cdn2.unrealengine.com/Unreal+Engine%2Fblog%2Fa-first-look-at-unreal-engine-5%2FFB_US5_Announcement_V2-1200x630-ac3a159eb87c5655dd0397fcbf16d1a3808c1955.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5</dc:identifier>
</item>
<item>
<title>Redditor finds unsecured surveillance cameras seemingly placed by US government</title>
<link>https://old.reddit.com/r/conspiracy_commons/comments/gin79z/i_made_an_alt_because_this_is_sketchy_so_i_can</link>
<guid isPermaLink="true" >https://old.reddit.com/r/conspiracy_commons/comments/gin79z/i_made_an_alt_because_this_is_sketchy_so_i_can</guid>
<description>&lt;p&gt;&lt;strong&gt;Updates at the bottom about cameras going offline.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Also, Photo gallery time:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgur.com/a/ZgC6Zb0&quot;&gt;Reddittor flips off surveillance camera in Freeport, NY. Also picture of Camera&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://imgur.com/XWh15QB&quot;&gt;Redditor takes pictures of Framingham, MA Camera.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`&lt;/p&gt;
&lt;p&gt;Someone (the government) is spying on us with hidden cameras. They aren’t even password protected.&lt;/p&gt;
&lt;p&gt;So, I was just browsing looking at unsecured webcams the other day, as one does, when I came across these controllable cameras with really weird perspectives. Next, I noticed they seem to be in a box with glass on three sides, with large stickers reading “DANGER, HIGH VOLTAGE” on two of the sides. I have found at least 9 of these cameras, and one that literally has a “drug Enforcement Agency” label printed on the inside.&lt;/p&gt;
&lt;p&gt;Things that make me believe this is the government:&lt;/p&gt;
&lt;p&gt;-Super high quality cameras. A peeping tom would probably be better off with a lifetime porn hub subscription than to buy one of these to look in an old ladies window. I’m able to zoom in and read the lettering off a sign 968 feet away (as measured on google earth). I literally feel like a guy on CSI saying “Enhance” and the license plate on a car hundreds of feet away comes clearly into view.&lt;/p&gt;
&lt;p&gt;-Installation. Of the cameras I’ve found, they are installed in places where Creepy uncle Joe with a 40’ ladder would look out of place. I can control the cameras and look at the hardware in the box, and it appears to be stealing power off the pole. It does remind me of the TV show Burn notice, one of the spy tips was “if you label something as high voltage on a telephone pole, even linemen won't be too inclined to mess with it”&lt;/p&gt;
&lt;p&gt;-They appear to be using VPNsNone of the IPs trace back near their original location.&lt;/p&gt;
&lt;p&gt;-I’ve found articles where cities are buying these, and I’ve even found a website that shows what a box may look like, but it’s not a 100% match. I suppose keeping something like that secret would be beneficial to prevent them from being stolen. &lt;a href=&quot;http://www.qpcs.net/products/the-rsu-platform/rsu-covert/&quot;&gt;http://www.qpcs.net/products/the-rsu-platform/rsu-covert/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Okay, I wrote that first half while I only had found two. Here is the status now, I have found 9 High voltage boxes, one DEA box, and a few regular traffic cameras. A lot of them pointed in people’s windows. I do not know if that is other people looking for unsecured cameras, or an operator.&lt;/p&gt;
&lt;p&gt;Here are articles supporting the fact that the DEA and ICE are using these pole mounted cameras.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.defenseone.com/technology/2018/11/dea-and-ice-are-hiding-surveillance-cameras-streetlights/152724/&quot;&gt;https://www.defenseone.com/technology/2018/11/dea-and-ice-are-hiding-surveillance-cameras-streetlights/152724/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://qz.com/1458475/the-dea-and-ice-are-hiding-surveillance-cameras-in-streetlights/&quot;&gt;https://qz.com/1458475/the-dea-and-ice-are-hiding-surveillance-cameras-in-streetlights/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://qz.com/1486479/the-dea-is-hiding-surveillance-cameras-in-vacuum-cleaners/&quot;&gt;https://qz.com/1486479/the-dea-is-hiding-surveillance-cameras-in-vacuum-cleaners/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are the links to look at the cameras and their location. I’m not including the DEA camera I stumbled on, as it is clearly part of an ongoing investigation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://72.250.57.49:8000/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://72.250.57.49:8000/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; &lt;del&gt;N Mittman St &amp;amp; E Houston St, San Antonio, TX 78202&lt;/del&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://166.150.177.129/viewer/live/index.html?lang=en&quot;&gt;http://166.150.177.129/viewer/live/index.html?lang=en&lt;/a&gt; 99 Manako St, Aiea, HI 96701 &lt;strong&gt;[ERR_EMPTY_RESPONSE]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;461 Concord St Framingham, MA 01702 &lt;a href=&quot;http://166.149.142.29:8000/viewer/live/index.html?lang=en&quot;&gt;http://166.149.142.29:8000/viewer/live/index.html?lang=en&lt;/a&gt; &lt;strong&gt;[ERR_EMPTY_RESPONSE]&lt;/strong&gt; &lt;a href=&quot;https://imgur.com/XWh15QB&quot;&gt;&lt;strong&gt;&lt;em&gt;Here's a photo of the camera provided by&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; &lt;a href=&quot;https://old.reddit.com/u/Justanelectri_cia_n&quot;&gt;u/Justanelectri_cia_n&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;unknown location&lt;/del&gt; &lt;a href=&quot;http://107.85.194.11:8080/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://107.85.194.11:8080/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;4335 Countess, Von Ormy, TX 78073&lt;/del&gt; &lt;a href=&quot;http://107.85.195.13:8080/viewer/live/en/live.html&quot;&gt;&lt;del&gt;http://107.85.195.13:8080/viewer/live/en/live.html&lt;/del&gt;&lt;/a&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;700 W Gore St Orlando, FL 32805 &lt;a href=&quot;http://107.85.197.18:8080/viewer/live/index.html?lang=en&quot;&gt;http://107.85.197.18:8080/viewer/live/index.html?lang=en&lt;/a&gt; &lt;strong&gt;[ERR_EMPTY_RESPONSE]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;High voltage box, only pointed at houses, zoomed in on a window, havent found a location Likely Georgia&lt;/del&gt; &lt;a href=&quot;http://166.130.169.210:8080/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://166.130.169.210:8080/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; [Password]&lt;/p&gt;
&lt;p&gt;2 E Merrick Rd Freeport, NY 11520 &lt;a href=&quot;http://166.143.210.76:8000/viewer/live/index.html?lang=en&quot;&gt;http://166.143.210.76:8000/viewer/live/index.html?lang=en&lt;/a&gt; &lt;strong&gt;[ERR_CONNECTION_REFUSED]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;3503-3509 Farmdale Ave Los Angeles, CA 90016&lt;/del&gt; &lt;a href=&quot;http://166.140.149.240:6001/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://166.140.149.240:6001/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; &lt;del&gt;Found pointing at a window&lt;/del&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;High Voltage, Unknown, New York&lt;/del&gt; &lt;a href=&quot;http://166.161.118.236:8000/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://166.161.118.236:8000/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;High voltage, pointing at someone's window, unknown location.&lt;/del&gt; &lt;a href=&quot;http://166.143.219.32:8080/viewer/live/index.html?lang=en&quot;&gt;&lt;del&gt;http://166.143.219.32:8080/viewer/live/index.html?lang=en&lt;/del&gt;&lt;/a&gt; &lt;strong&gt;[Password]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;High Voltage, Unknown, New York &lt;a href=&quot;http://166.143.48.242:8000/viewer/live/en/live.html&quot;&gt;http://166.143.48.242:8000/viewer/live/en/live.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unknown, New Jersey &lt;a href=&quot;http://166.139.30.171/viewer/live/en/live.html&quot;&gt;http://166.139.30.171/viewer/live/en/live.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;covert, Unknown, pointed at window &lt;a href=&quot;http://166.130.17.116/viewer/live/index.html?lang=en&quot;&gt;http://166.130.17.116/viewer/live/index.html?lang=en&lt;/a&gt; &lt;strong&gt;[Camera is busy? Status unknown]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;200 &amp;amp; 34th, Queens, NY &lt;a href=&quot;http://166.149.183.92/viewer/live/en/live.html&quot;&gt;http://166.149.183.92/viewer/live/en/live.html&lt;/a&gt; &lt;strong&gt;[ERR_EMPTY_RESPONSE, someone was watching the camera and saw a guy in High Vis and a mask working on the camera]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Stony Hill Rd &amp;amp; Sperling RdClifton, NJ 07013 &lt;a href=&quot;http://166.143.114.105:8081/viewer/live/en/live.html&quot;&gt;http://166.143.114.105:8081/viewer/live/en/live.html&lt;/a&gt; &lt;strong&gt;[Camera is busy? Status unknown]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;Update: you can control the camera by clicking the box on the lower right, then adjust with the bars on either side, or even zoom in. ANYONE can control. with all yall looking around some are bound to get pointed at the inside of the box, that's why they'd be black.&lt;/p&gt;
&lt;p&gt;**Update 1700 UTC.**&lt;/p&gt;
&lt;p&gt;Men in high visibility vests with masks had been spotted working on the Queens camera, it is now offline, at least for me. Farmdale Ave Los Angeles camera is IDed as a LAPD Gang and Narcotics camera.&lt;/p&gt;
&lt;p&gt;Common question: How did I find these. There is a website called insacam.org that crawls around google and picks up all these unsecured cameras. A lot of them are just pictures of billboards or a parking lot somewhere in China, But I got good at knowing what to look for and where to look. It just became kinda a gut thing, I’ve always been good with that sort of thing. I didn’t run out of cameras to find, I just stopped looking after I found these. After finding the box with a printer label that said “Drug Enforcement Agency” it made my stomach feel funny, and I figured it was time to switch from Search to spread. These are just the ones where the IP says they are in a west coast time zone. I'm sure there are more out there.&lt;/p&gt;
&lt;p&gt;Again, I am not here for Karma, I am here because this is messed up. Feel free to copy and paste, and send wherever you’d like. I don’t know if it’s my VPN, my nerves, the traffic to these cameras from reddit, or something more tinfoil hat sounding, but my computer has slowed down considerably.&lt;/p&gt;
&lt;p&gt;Bella ciao&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;*** Update 1830 UTC***&lt;/p&gt;
&lt;p&gt;It would appear that a lot of the cameras are slowly becoming password protected, which was kinda the objective here. Those who saw, know what they saw. Those that aren't password protected are being taken offline, probably just turned off. Is it a reddit hug of death breaking them? Is some poor intern just turning them off and hope we go away? are the IPs getting changed? who knows. I think there are only two or four that aren't secured, and that number has changed in the time it took me to write this post. I just want to be clear that I mean no ill will towards any person or agency, it's just hard to tell the the feds &quot;Hey, your fly is down.&quot; The DEA camera I didn't share with you all is still not password protected, so these cameras are still out there unprotected. You can boo me, but I would like to think they aren't deploying this super expensive equipment on innocent people, and I hope everyone stays safe as they carry out their missions.&lt;/p&gt;
&lt;p&gt;Let this serve as a reminder to check out setting and our passwords when dealing with webcams. &lt;del&gt;Also watch out for boxes with high voltage stickers on 120/240 residential power lines and street lights, that aint high voltage. High voltage power lines are the big ass towers, not the pole in your front yard.&lt;/del&gt; I'm not an electrician, don't zap yourself but also notice how many boxes you see with high voltage stickers on your street. Once you know what to look for, you'll see these are out of place.&lt;/p&gt;
&lt;p&gt;I'm not really feeling inspired to go look for more cameras, because this is making me paranoid AF, but if you are inspired, know that these boxes are all specifically labeled with Warning, High voltage labels on lenses.&lt;/p&gt;
&lt;p&gt;P.S. Also don't try to guess the password, that's where we go from a legal gray area to a very much illegal act.&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 15:08:53 +0000</pubDate>
<dc:creator>nbrempel</dc:creator>
<og:description>**Updates at the bottom about cameras going offline.** Also, Photo gallery time: [Reddittor flips off surveillance camera in Freeport, NY. Also...</og:description>
<og:title>I made an alt because this is sketchy, so I can only post this here. The government (DEA, ICE, and local authorities) is hiding cameras on telephone poles, and then not securing those cameras with passwords. Anyone can access them.</og:title>
<og:image>https://external-preview.redd.it/42SQqef_nkB4neY-nmdady0rPY6SsT1d_ouHq0zG_iI.jpg?width=1200&amp;height=628.272251309&amp;auto=webp&amp;crop=1200:628.272251309,smart&amp;s=a8afeec3a209e5b21ee8a60296b6c527788f17d2</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://old.reddit.com/r/conspiracy_commons/comments/gin79z/i_made_an_alt_because_this_is_sketchy_so_i_can/</dc:identifier>
</item>
<item>
<title>Don’t require a user to be interested twice: lessons on reducing signup friction</title>
<link>https://bbirnbaum.com/two-lessons-on-reducing-sign-up-friction/</link>
<guid isPermaLink="true" >https://bbirnbaum.com/two-lessons-on-reducing-sign-up-friction/</guid>
<description>&lt;p&gt;I’ve been working for the past few months on a side project called &lt;a href=&quot;https://cortadomail.com/&quot;&gt;Cortado&lt;/a&gt;. It’s a website that helps to give you control over your daily information intake. You can create a personalized daily email with content from RSS feeds, email newsletters, Twitter, Reddit, Hacker News, and a growing list of additional sources. The goal is to put everything you need, and nothing more, in a single place that you already go to every day -- your email.&lt;/p&gt;
&lt;p&gt;A month ago, when my user base was still just a few family members and friends, I decided it was time to get at least one user I didn’t already know. I posted about Cortado in a few forums, and eight people signed up. Not a big number, but it was exciting to have people I had no connection with using something I had built.&lt;/p&gt;
&lt;p&gt;More importantly, I learned the hard way how important a carefully designed sign-up process is. I saw a large percentage of interested people fail to sign up because of easily preventable flaws in the flow. Two lessons in particular stand out:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Don’t require a user to be interested twice&lt;/li&gt;
&lt;li&gt;Email verification messages should take two seconds to read&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The sign-up section of my landing page used to look like this.&lt;/p&gt;
&lt;img src=&quot;https://lh6.googleusercontent.com/6vsRWLkRegqrYGZDV2ARYTnU3zkCT4GY7fnzXRW6KdhYcR3_tpNn--ryA194IeTiDJPVk0hQR696W4ftMbshu23X_7g2Pc-gpMXama69aoojT_1EfEGHeLw0Phm5fKRToYjmy7Uf&quot; class=&quot;kg-image&quot;/&gt;&lt;em&gt;What the sign up form used to look like.&lt;/em&gt;
&lt;p&gt;Users couldn’t get started on their own. They had to first leave their email address and then wait for me to send them an email with a link allowing them to register and start building their Cortado email.&lt;/p&gt;
&lt;p&gt;My motivation was control. I was concerned about bots, and I was worried (unrealistically) that I’d get too many users too quickly. But a lot of people who left their email address didn’t actually register once they received the verification. After one of my posts climbed to the top of a small subreddit, 16 people signed up. I sent registration instructions to all of them within 8 hours, but only 6 people clicked the link in that email.&lt;/p&gt;
&lt;p&gt;I had required people to be interested twice. First, they had to be interested enough to provide their email, and then they had to be interested enough to click through the verification message. Only 38% of people did this. If I had instead captured everyone as soon as they showed enough interest to leave an email address, I could’ve increased my conversion rate by 250%.&lt;/p&gt;
&lt;p&gt;I’ve since decided that it’s better to have users than control. This is what the sign-up section looks like now.&lt;/p&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/3pfF8phSqSpHqUtc7hohuR5co3tM0NcDGrNOKVBNP5QqjlxhhJPPoOfN4vUBFbx4EdG_lzerV0P-WCVMTTJOu5PyNPJrBetJY1XjlT4WnzB-yY3BatohI9SFQelsPI_HKU6oOhvu&quot; class=&quot;kg-image&quot;/&gt;&lt;em&gt;What the sign up form looks like now.&lt;/em&gt;
&lt;p&gt;As soon as users click the submit button, they get an email verification message in their inbox, which they can click on to set a password and get started. To retain some control, I put this permissive sign up flow behind a feature flag, and to help protect against bots, I added a reCAPTCHA. Now people only need to be interested once to sign up.&lt;/p&gt;

&lt;p&gt;At first I didn’t put much thought into the content of the email verification message because it didn’t seem very complicated. All I needed was a secret link for users to click and instructions to click on it. What could go wrong? A lot, it turns out. Here is what the first version of my email looked like.&lt;/p&gt;
&lt;img src=&quot;https://lh4.googleusercontent.com/7DsFBQ7Rz6D06CmmQIboKit_TzcfU_BADT9bpIezfohO2k4KOT4qd5mjO6LcTrkOxgPe5wnf-TFSPZhYTrexZkoK6Lvu9UcWPVwU8mS-fK_6bLB8bd5ZPntGAhS5VpdlwUVPb-Y9&quot; class=&quot;kg-image&quot;/&gt;The first version of the email verification message
&lt;p&gt;It seemed simple enough to me, but when I sent this email  to a friend he clicked on the “Cortado” link in the first sentence. This sent him to the landing page instead of the sign-up page. He texted me saying my website didn’t work. I told him to try the other link, but it took him a couple of days to get to it and actually log in. If he wasn’t my friend, I would have lost a user.&lt;/p&gt;
&lt;p&gt;My friend spent two seconds reading the message and clicked on the first link he saw. I do the same thing. So I removed the extra link in the next version of the message. (I also added a friendly sentence asking for feedback because, well, I wanted feedback.) Here is what the new message looked like.&lt;/p&gt;
&lt;img src=&quot;https://lh6.googleusercontent.com/WV2_FLhqJlFTSSciIdeeNlIWnCBvvxkayt3uwWQBvjqGwNoYqKueWDYCuEBZcSXI6AzfPyUOMT-JwuXmcEhlo67smQSkMXC5r37F8VoEs_hl2yMrLI2zIZYbVKFoXvBAAUx-Kzba&quot; class=&quot;kg-image&quot;/&gt;The second version of the email verification message
&lt;p&gt;Now there was only one clickable link (not counting the one that’s obviously an email address). But there was still a problem: it was too hard to see. In fact, one user missed it entirely. After reading the email, he told me that there was no link. Totally understandable when you just spend two seconds reading. I was lucky that he emailed me. Most users would have just given up.&lt;/p&gt;
&lt;p&gt;The fix was straightforward: make the link more obvious. Here is what the new version looks like.&lt;/p&gt;
&lt;img src=&quot;https://lh3.googleusercontent.com/tFhZcdZ1J1C1S2hTXKOX7U5FGSyBlPy3TBkBoc9hJk87CiflYM5Y9kFeifSl-EDmpvNtk2aAUfejvd-T1K-yrPgVkFdgs2RLugsmVlHz_LsyhgtrdxEeEh1INeYoOfY-Se18NZ7y&quot; class=&quot;kg-image&quot;/&gt;The third, and final, version of the email verification message
&lt;p&gt;Much better, no? The thing you are supposed to do is the first thing you read. Hard to miss, even in two seconds.&lt;/p&gt;

&lt;p&gt;It seems so. After implementing them, I posted a link to Cortado in Hacker News. I didn’t hear about any problems with the sign-up flow this time around. And the numbers, while small and subject to sampling bias and other confounders (including some changes to my landing page), support this conclusion. About 50 people clicked on the Hacker News link, and 9 of those people registered, an 18% conversion rate. In contrast, it took me 120 clicks to get the 6 registrations from my last marketing effort, a 5% conversion rate.&lt;/p&gt;
&lt;p&gt;I’m encouraged by this improvement, and I’m excited for what I’ll learn next in the quest to find new Cortado users.&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 14:42:22 +0000</pubDate>
<dc:creator>bbirnbaum</dc:creator>
<og:type>article</og:type>
<og:title>Two lessons on reducing sign-up friction</og:title>
<og:description>I’ve been working for the past few months on a side project called Cortado. It’s a website that helps to give you control over your daily information intake. You can create a personalized daily email with content from RSS feeds, email newsletters, Twitter, Reddit, Hacker News, and a</og:description>
<og:url>http://bbirnbaum.com/two-lessons-on-reducing-sign-up-friction/</og:url>
<og:image>https://images.unsplash.com/photo-1533582437341-dfdc01630b05?ixlib=rb-1.2.1&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;w=2000&amp;fit=max&amp;ixid=eyJhcHBfaWQiOjExNzczfQ</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://bbirnbaum.com/two-lessons-on-reducing-sign-up-friction/</dc:identifier>
</item>
<item>
<title>OTP 23</title>
<link>http://www.erlang.org/news/140</link>
<guid isPermaLink="true" >http://www.erlang.org/news/140</guid>
<description>&lt;h2&gt;OTP 23&lt;/h2&gt;
&lt;p&gt;Erlang/OTP 23 is a new major release with new features, improvements as well as a few incompatibilities.&lt;/p&gt;
&lt;h3&gt;Potential Incompatibilities&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;SSL&lt;/strong&gt;:
&lt;ul&gt;&lt;li&gt;Support for SSL 3.0 is completely removed.&lt;/li&gt;
&lt;li&gt;TLS 1.3 is added to the list of default supported versions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;erl_interface&lt;/code&gt;: Removed the deprecated parts of &lt;code&gt;erl_interface&lt;/code&gt; (&lt;code&gt;erl_interface.h&lt;/code&gt; and essentially all C functions with prefix &lt;code&gt;erl_&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;The deprecated &lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; BIF now returns an empty list instead of a stacktrace. &lt;code&gt;erlang:get_stacktrace/0&lt;/code&gt; is scheduled for removal in OTP 24.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Improvements and new features&lt;/h3&gt;
&lt;ul readability=&quot;19&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ssh&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;OpenSSH 6.5 introduced a new file representation of keys called &lt;code&gt;openssh-key-v1&lt;/code&gt;. This is now supported with the exception of handling encrypted keys.&lt;/li&gt;
&lt;li&gt;Algorithm configuration could now be done in a .config file. This is useful for example to enable an algorithm that is disabled by default without need to change the code.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SSL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Support for the middlebox compatibility mode makes the TLS 1.3 handshake look more like a TLS 1.2 handshake and increases the chance of successfully establishing TLS 1.3 connections through legacy middleboxes.&lt;/li&gt;
&lt;li&gt;Add support for key exchange with Edward curves and PSS-RSA padding in signature verification&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The possibility to run Erlang distribution without relying on EPMD has been extended. To achieve this a couple of new options to the inet distribution has been added.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-dist_listen false&lt;/code&gt; Setup the distribution channel, but do not listen for incoming connection.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-erl_epmd_port Port&lt;/code&gt; Configure a default port that the built-in EPMD client should return.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;A first EXPERIMENTAL &lt;code&gt;socket&lt;/code&gt; backend to&lt;br /&gt;&lt;code&gt;gen_tcp&lt;/code&gt; and &lt;code&gt;inet&lt;/code&gt; has been implemented. &lt;code&gt;gen_udp&lt;/code&gt; and &lt;code&gt;gen_sctp&lt;/code&gt; will follow.&lt;br /&gt;Putting &lt;code&gt;{inet_backend, socket}&lt;/code&gt; as first option to &lt;code&gt;listen()&lt;/code&gt; or &lt;code&gt;connect()&lt;/code&gt; makes it easy to try this for existing code&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;A new module &lt;code&gt;erpc&lt;/code&gt; in kernel which implements an enhanced subset of the operations provided by the &lt;code&gt;rpc&lt;/code&gt; module. Enhanced in the sense that it makes it possible to distinguish between returned value, raised exceptions and other errors. &lt;code&gt;erpc&lt;/code&gt; also has better performance and scalability than the original &lt;code&gt;rpc&lt;/code&gt; implementation. This by utilizing the newly introduced &lt;code&gt;spawn_request()&lt;/code&gt; BIF. Also the &lt;code&gt;rpc&lt;/code&gt; module benefits from these improvements by utilizing &lt;code&gt;erpc&lt;/code&gt; when possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Scalability and performance Improvements plus new functionality regarding distributed spawn operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;In binary matching, the size of the segment to be matched is now allowed to be a guard expression (EEP-52)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;When matching with maps the keys can now be guard expressions (EEP-52).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;ssh: support for TCP/IP port forwarding, a.k.a tunnelling a.k.a as tcp-forward/direct-tcp is implemented. In the OpenSSH client, this corresponds to the options -L and -R.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Allow underscores in numeric literals to improve readability. Examples: &lt;code&gt;123_456_789&lt;/code&gt;, &lt;code&gt;16#1234_ABCD&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;New functions in the shell for displaying documentation for Erlang modules, functions and types. The&lt;br /&gt;functions are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;h/1,2,3&lt;/code&gt; -- Print the documentation for a &lt;code&gt;Module:Function/Arity&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ht/1,2,3&lt;/code&gt; -- Print the type documentation for a &lt;code&gt;Module:Type/Arity&lt;/code&gt;.&lt;br /&gt;The embedded documentation is created as docchunks (EEP 48) when building the Erlang/OTP documentation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;kernel&lt;/strong&gt;: The module &lt;code&gt;pg&lt;/code&gt; with a new implementation of distributed named process groups is introduced. The old module &lt;code&gt;pg2&lt;/code&gt; is deprecated and scheduled for removal in OTP 24.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Our tool chain for building the Windows packages is upgraded with new C++ compiler, Java compiler, OpenSSL libraries and wxWidgets versions. We are now using WSL (the Linux Subsystem for Windows when building) which makes it easier to handle the build environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;For more details see&lt;br /&gt;&lt;a href=&quot;http://erlang.org/download/otp_src_23.0.readme&quot; rel=&quot;nofollow&quot;&gt;http://erlang.org/download/otp_src_23.0.readme&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pre built versions for Windows can be fetched here:&lt;br /&gt;&lt;a href=&quot;http://erlang.org/download/otp_win32_23.0.exe&quot; rel=&quot;nofollow&quot;&gt;http://erlang.org/download/otp_win32_23.0.exe&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;http://erlang.org/download/otp_win64_23.0.exe&quot; rel=&quot;nofollow&quot;&gt;http://erlang.org/download/otp_win64_23.0.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Online documentation can be browsed here:&lt;br /&gt;&lt;a href=&quot;http://erlang.org/documentation/doc-11.0/doc&quot; rel=&quot;nofollow&quot;&gt;http://erlang.org/documentation/doc-11.0/doc&lt;/a&gt;&lt;br /&gt;The Erlang/OTP source can also be found at GitHub on the official Erlang repository,&lt;br /&gt;&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;https://github.com/erlang/otp&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 13:14:09 +0000</pubDate>
<dc:creator>nifoc</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.erlang.org/news/140</dc:identifier>
</item>
<item>
<title>Work-from-home boom leads to more surveillance</title>
<link>https://www.npr.org/2020/05/13/854014403/your-boss-is-watching-you-work-from-home-boom-leads-to-more-surveillance</link>
<guid isPermaLink="true" >https://www.npr.org/2020/05/13/854014403/your-boss-is-watching-you-work-from-home-boom-leads-to-more-surveillance</guid>
<description>&lt;div id=&quot;res854050976&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/05/11/npr_spyware_final_wide-2f99e2b5f7a7620877103b01bb0ca5bbdbe58a72-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/05/11/npr_spyware_final_wide-2f99e2b5f7a7620877103b01bb0ca5bbdbe58a72-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;With more people working remotely, companies are turning to technology that tracks what employees are doing all day on their computers. Some workers say they feel like their privacy is being compromised. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Jackie Ferrentino for NPR&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Jackie Ferrentino for NPR&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2020/05/11/npr_spyware_final_wide-2f99e2b5f7a7620877103b01bb0ca5bbdbe58a72-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;10&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;With more people working remotely, companies are turning to technology that tracks what employees are doing all day on their computers. Some workers say they feel like their privacy is being compromised.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Jackie Ferrentino for NPR&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After two weeks of working from her Brooklyn apartment, a 25-year-old e-commerce worker received a staffwide email from her company: Employees were to install software called Hubstaff immediately on their personal computers so it could track their mouse movements and keyboard strokes, and record the webpages they visited.&lt;/p&gt;
&lt;p&gt;They also had to download an app called TSheets to their phones to keep tabs on their whereabouts during work hours.&lt;/p&gt;
&lt;p&gt;&quot;There are five of us. And we always came to work. We always came on time. There was no reason to start location-tracking us,&quot; the woman told NPR. She spoke on the condition of anonymity, fearing she could lose her job.&lt;/p&gt;
&lt;p&gt;Company emails that she provided to NPR show her employer believed the tracking software would improve the team's productivity and efficiency while everyone was working from home.&lt;/p&gt;
&lt;p&gt;Such rationales are increasingly ringing throughout workplaces nationwide.&lt;/p&gt;
&lt;p&gt;The coronavirus pandemic has forced &lt;a href=&quot;https://www.npr.org/sections/money/2020/04/28/846671375/why-remote-work-sucks-according-to-science&quot;&gt;about a third of U.S. workers&lt;/a&gt; to do their jobs from home. In turn, companies are ramping up the use of software to monitor what their employees do all day.&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;Privacy advocates and some workers said they worry that the intensified tracking brought upon by the coronavirus will normalize workplace surveillance and that this type of digital supervision will persist when workers return to offices.&lt;/p&gt;
&lt;p&gt;Just ask a woman who works in marketing at a small company in Minnesota. She also spoke to NPR anonymously out of fear her employer would retaliate against her for speaking out.&lt;/p&gt;
&lt;p&gt;Her employer has started using software called Time Doctor. It downloads videos of employees' screens while they work. It also can enable a computer's webcam to take a picture of the employee every 10 minutes.&lt;/p&gt;
&lt;p&gt;&quot;If you're idle for a few minutes, if you go to the bathroom or whatever, a pop-up will come up and it'll say, 'You have 60 seconds to start working again or we're going to pause your time,' &quot; the woman said.&lt;/p&gt;
&lt;p&gt;That meant stepping away from her computer briefly could cut into her pay.&lt;/p&gt;
&lt;p&gt;&quot;I just feel like crap. I feel like I'm not trusted. I feel ashamed of myself,&quot; she said, referring to a short break she took to speak with a colleague by phone. &quot;My co-workers were really, really upset. But everyone was too afraid to say anything.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your boss may know you're on Facebook even if you don't post&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Critics call this kind of tracking software &quot;tattleware.&quot; But Brad Miller, who runs the Connecticut-based company Awareness Technologies, bristles at that description.&lt;/p&gt;
&lt;p&gt;&quot;If you're not working or doing something wrong, then I guess it will tattle on you, but I don't think that's really how companies that are buying [the software] think of it as,&quot; Miller said.&lt;/p&gt;
&lt;p&gt;Since the COVID-19 outbreak, Miller said that Awareness Technologies' business has tripled. Its programs for managers keep a record of every task employees are doing on their computers. Each worker then gets assigned a productivity score. Every employee is ranked accordingly.&lt;/p&gt;
&lt;p&gt;&quot;Are they generally active on programs and websites that I would consider productive like Excel, PowerPoint, Word, email, as opposed to YouTube or Facebook?&quot; Miller asked. &quot;That's primarily what our customers are looking to know.&quot;&lt;/p&gt;
&lt;p&gt;Dave Nevogt, the CEO of Hubstaff, said demand has tripled for his company's monitoring software, too.&lt;/p&gt;
&lt;p&gt;&quot;We have seen a massive increase in the number of people needing our platform,&quot; Nevogt told NPR. &quot;Remote work has gotten a huge boost as everyone has been forced to work outside of the office, and we feel like these changes may be here for good.&quot;&lt;/p&gt;
&lt;p&gt;For bosses, keeping up with worker productivity has always been a give-and-take. But in the office, it is much easier to figure out if someone is doing a job well. Now tracking technology is taking the place of a manager's eyes. Miller said when the software runs on a homebound employee's computer, it gives the worker an added incentive not to slack off.&lt;/p&gt;
&lt;p&gt;&quot;I think if people know it's happening, then people will act better than they would otherwise, because we all act better when someone is watching,&quot; Miller said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intrusive? Maybe. Legal? Probably&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Alison Green, who writes the syndicated advice column &lt;a href=&quot;https://www.askamanager.org/&quot;&gt;Ask a Manager&lt;/a&gt;, has a different view.&lt;/p&gt;
&lt;p&gt;She has been flooded with questions from workers who feel icky about their bosses quantifying their keystrokes and how many emails they fire off each day.&lt;/p&gt;
&lt;p&gt;&quot;And then there's a lower-tech version of that, which is people whose managers are asking them to stay on video all day long so they can watch over them every minute of the day, which is very intrusive,&quot; Green said.&lt;/p&gt;
&lt;p&gt;It may feel intrusive, but it is not illegal, said Paul Stephens, director of policy and advocacy with &lt;a href=&quot;https://privacyrights.org/&quot;&gt;Privacy Rights Clearinghouse&lt;/a&gt;, a consumer advocacy nonprofit.&lt;/p&gt;
&lt;p&gt;While the Fourth Amendment protects against unreasonable searches and seizures by the government, employers are not running afoul of any federal laws by tracking what their workers are doing all day through surveillance software, he said.&lt;/p&gt;
&lt;p&gt;&quot;There's not a constitutional issue here,&quot; Stephens said. &quot;There aren't a whole lot of legal protections for employees who are being monitored.&quot;&lt;/p&gt;
&lt;p&gt;Stephens said state laws vary over whether companies must even tell workers whether they're using tracking software. Some states do not require that workers be notified first.&lt;/p&gt;
&lt;p&gt;And with few legal barriers, employers who turn to this software during the pandemic may choose to keep using it even after work-from-home orders are lifted, he said.&lt;/p&gt;
&lt;p&gt;&quot;Once the employer has made the investment in acquiring and installing the software, it's not likely that they're going to remove it,&quot; Stephens said. &quot;This has for a long time been true, but maybe now more than ever it's safe to assume that everything you're doing is being watched and tracked by your employer.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Choosing privacy over a paycheck&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Back in Brooklyn, the woman who works for the e-commerce startup said her employer's order to download Hubstaff and TSheets has strained relations between employees and their bosses.&lt;/p&gt;
&lt;p&gt;&quot;It has really destroyed morale for everyone,&quot; she said. &quot;And everyone has since kind of taken a step back and said, 'All right, if this is how they're going to treat us, why go the extra mile?' Because clearly it doesn't matter to them.&quot;&lt;/p&gt;
&lt;p&gt;Rather than download the software on her computer, she opted out. She's gone on unpaid leave until the office reopens. But the experience has soured her on her company. She's now hunting for a new job.&lt;/p&gt;
&lt;p&gt;&quot;It's not worth it for me right now to sacrifice my personal privacy and all my data for a paycheck,&quot; she said. &quot;It just made me very uncomfortable.&quot;&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 10:52:36 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:title>Your Boss Is Watching You: Work-From-Home Boom Leads To More Surveillance</og:title>
<og:url>https://www.npr.org/2020/05/13/854014403/your-boss-is-watching-you-work-from-home-boom-leads-to-more-surveillance</og:url>
<og:type>article</og:type>
<og:description>With more people now working from home, employers are increasingly relying on tracking software to monitor what employees do when they're on the clock.</og:description>
<og:image>https://media.npr.org/assets/img/2020/05/11/npr_spyware_final_wide-2f99e2b5f7a7620877103b01bb0ca5bbdbe58a72.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2020/05/13/854014403/your-boss-is-watching-you-work-from-home-boom-leads-to-more-surveillance</dc:identifier>
</item>
<item>
<title>Show HN: SHA-256 Animation</title>
<link>https://github.com/in3rsha/sha256-animation</link>
<guid isPermaLink="true" >https://github.com/in3rsha/sha256-animation</guid>
<description>&lt;p&gt;An animation of the &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf&quot; rel=&quot;nofollow&quot;&gt;SHA-256&lt;/a&gt; hash function in your terminal.&lt;/p&gt;
&lt;p&gt;I used this code to help me make a video to explain &lt;a href=&quot;https://www.youtube.com/watch?v=f9EbD6iY9zI&quot; rel=&quot;nofollow&quot;&gt;how SHA-256 works&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/sha256.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/sha256.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;Just run the &lt;code&gt;sha256.rb&lt;/code&gt; script with the data you want to see hashed.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# simple
ruby sha256.rb abc

# hash binary or hex data by using `0b` or `0x` prefixes
ruby sha256.rb 0b01100001
ruby sha256.rb 0xaabbccdd

# speed up or step through the animation (optional)
ruby sha256.rb abc normal # default
ruby sha256.rb abc fast
ruby sha256.rb abc enter
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can also run the individual functions used in SHA-256 by passing in binary strings as arguments:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby shr.rb 11111111111111110000000000000000 22
ruby rotr.rb 11111111111111110000000000000000 22
ruby sigma0.rb 11111111111111110000000000000000
ruby sigma1.rb 11111111111111110000000000000000
ruby usigma0.rb 11111111111111110000000000000000
ruby usigma1.rb 11111111111111110000000000000000
ruby ch.rb 11111111111111110000000000000000 11110000111100001111000011110000 00000000000000001111111111111111
ruby maj.rb 11111111111111110000000000000000 11110000111100001111000011110000 00000000000000001111111111111111
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You can do double-SHA256 (e.g. &lt;a href=&quot;https://learnmeabitcoin.com&quot; rel=&quot;nofollow&quot;&gt;Bitcoin&lt;/a&gt;) by using &lt;code&gt;hash256.rb&lt;/code&gt;. This script accepts &lt;em&gt;hex data&lt;/em&gt; (e.g. &lt;a href=&quot;https://learnmeabitcoin.com/guide/block-header&quot; rel=&quot;nofollow&quot;&gt;block headers&lt;/a&gt;, &lt;a href=&quot;https://learnmeabitcoin.com/guide/transaction-data&quot; rel=&quot;nofollow&quot;&gt;transaction data&lt;/a&gt;) by default.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ruby hash256.rb 0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c # genesis block header
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;How does SHA-256 work?&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf&quot; rel=&quot;nofollow&quot;&gt;NIST specification&lt;/a&gt; contains a precise explanation of SHA-256. The following is essentially a visualised summary of that document.&lt;/p&gt;
&lt;h3&gt;1. Definitions&lt;/h3&gt;
&lt;p&gt;The official specification begins with a number of definitions, but seeing as this is a simplified explanation, all I want you to know is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;bit&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; (the smallest unit of storage on a computer)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;word&lt;/code&gt; = 32 bits&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Also, &lt;a href=&quot;https://www.calleerlandsson.com/rubys-bitwise-operators/&quot; rel=&quot;nofollow&quot;&gt;bitwise operations&lt;/a&gt; use the following symbols:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;OR  = |
XOR = ^
AND = &amp;amp;
NOT = ~
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;2. Operations&lt;/h3&gt;
&lt;p&gt;SHA-256 uses four basic bitwise operations on &lt;code&gt;words&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Right Shift (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/shr.rb&quot;&gt;&lt;code&gt;shr.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/shr.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/shr.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
SHR&lt;sup&gt;n&lt;/sup&gt;(x) = x &amp;gt;&amp;gt; n
&lt;/pre&gt;
&lt;p&gt;Move bits a number of positions to the right. The bits shifted off the right-hand side are lost.&lt;/p&gt;
&lt;h4&gt;Rotate Right (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/rotr.rb&quot;&gt;&lt;code&gt;rotr.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/rotr.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/rotr.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
ROTR&lt;sup&gt;n&lt;/sup&gt;(x) = (x &amp;gt;&amp;gt; n) | (x &amp;lt;&amp;lt; 32-n)
&lt;/pre&gt;
&lt;p&gt;Move bits a number of positions to the right, and place the shifted bits on the left-hand side. This can also be referred to as a &lt;em&gt;circular right shift&lt;/em&gt;.&lt;/p&gt;
&lt;h4&gt;Exclusive Or (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/xor.rb&quot;&gt;&lt;code&gt;xor.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/xor.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/xor.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
x ^ y ^ z
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;XOR&lt;/code&gt; bitwise operator takes two input bits, and outputs a &lt;code&gt;1&lt;/code&gt; if &lt;em&gt;only one&lt;/em&gt; of them is a &lt;code&gt;1&lt;/code&gt;. This is useful for getting a &lt;em&gt;balanced representation of multiple bits&lt;/em&gt; when merging them together via multiple &lt;code&gt;XOR&lt;/code&gt; operations.&lt;/p&gt;
&lt;h4&gt;Addition (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/add.rb&quot;&gt;&lt;code&gt;add.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/add.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/add.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
(v + w + x + y + z) % 2&lt;sup&gt;32&lt;/sup&gt;&lt;/pre&gt;
&lt;p&gt;This is standard integer addition, but we constrain the result to a 32 bit number by taking the result &lt;strong&gt;modulus 2&lt;sup&gt;32&lt;/sup&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;3. Functions&lt;/h3&gt;
&lt;p&gt;The operations above can be combined to create functions.&lt;/p&gt;
&lt;p&gt;The first four functions are named using the Greek symbol &lt;strong&gt;Sigma&lt;/strong&gt; (lowercase &lt;code&gt;σ&lt;/code&gt; and uppercase &lt;code&gt;Σ&lt;/code&gt;). This is for no particular reason, it's just so we can give names to some combined operations.&lt;/p&gt;
&lt;p&gt;I like to think of these as the &quot;rotational&quot; functions.&lt;/p&gt;
&lt;h4&gt;σ0 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/sigma0.rb&quot;&gt;&lt;code&gt;sigma0.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/sigma0.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/sigma0.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
σ&lt;sub&gt;0&lt;/sub&gt;(x) = ROTR&lt;sup&gt;7&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;18&lt;/sup&gt;(x) ^ SHR&lt;sup&gt;3&lt;/sup&gt;(x)
&lt;/pre&gt;
&lt;h4&gt;σ1 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/sigma1.rb&quot;&gt;&lt;code&gt;sigma1.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/sigma1.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/sigma1.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
σ&lt;sub&gt;1&lt;/sub&gt;(x) = ROTR&lt;sup&gt;17&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;19&lt;/sup&gt;(x) ^ SHR&lt;sup&gt;10&lt;/sup&gt;(x)
&lt;/pre&gt;
&lt;h4&gt;Σ0 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/usigma0.rb&quot;&gt;&lt;code&gt;usigma0.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/usigma0.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/usigma0.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
Σ&lt;sub&gt;0&lt;/sub&gt;(x) = ROTR&lt;sup&gt;2&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;13&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;22&lt;/sup&gt;(x)
&lt;/pre&gt;
&lt;h4&gt;Σ1 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/usigma1.rb&quot;&gt;&lt;code&gt;usigma1.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/usigma1.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/usigma1.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
Σ&lt;sub&gt;1&lt;/sub&gt;(x) = ROTR&lt;sup&gt;6&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;11&lt;/sup&gt;(x) ^ ROTR&lt;sup&gt;25&lt;/sup&gt;(x)
&lt;/pre&gt;
&lt;p&gt;The last two functions of &lt;strong&gt;Choice&lt;/strong&gt; and &lt;strong&gt;Majority&lt;/strong&gt; accept three different inputs.&lt;/p&gt;
&lt;h4&gt;Choice (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/ch.rb&quot;&gt;&lt;code&gt;ch.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;This function uses the &lt;code&gt;x&lt;/code&gt; bit to &lt;strong&gt;choose&lt;/strong&gt; between the &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; bits. It chooses the &lt;code&gt;y&lt;/code&gt; bit if &lt;code&gt;x=1&lt;/code&gt;, and chooses the &lt;code&gt;z&lt;/code&gt; bit if &lt;code&gt;x=0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/ch.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/ch.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Ch(x, y, z) = (x &amp;amp; y) ^ (~x &amp;amp; z)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4&gt;Majority (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/maj.rb&quot;&gt;&lt;code&gt;maj.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;This function returns the &lt;strong&gt;majority&lt;/strong&gt; of the three bits.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/maj.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/maj.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Maj(x, y, z) = (x &amp;amp; y) ^ (x &amp;amp; z) ^ (y &amp;amp; z)
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;4. Constants (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/constants.rb&quot;&gt;&lt;code&gt;constants.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/constants.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/constants.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
K&lt;sub&gt;t&lt;/sub&gt; = ∛primes &lt;em&gt;(first 32 bits of fractional part)&lt;/em&gt;
&lt;/pre&gt;
&lt;p&gt;SHA-256 uses sixty four constants &lt;code&gt;K&lt;sub&gt;t&lt;/sub&gt;&lt;/code&gt; to help with mixing up the bits during the main hash computation. These constants are generated by taking the &lt;strong&gt;cube root&lt;/strong&gt; of the first sixty four &lt;strong&gt;prime numbers&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;fractional parts&lt;/em&gt; of these cube roots are irrational (they go on forever), so they make for a good selection of random bits to use at constants. This is better than using specifically chosen constants, as this makes it less likely that the hash function has been designed with a back-door.&lt;/p&gt;
&lt;p&gt;Anyway, to get &lt;em&gt;32 bits&lt;/em&gt; from these numbers, we take the fractional part and multiply it by 2&lt;sup&gt;32&lt;/sup&gt;, and use the resulting &lt;em&gt;integer&lt;/em&gt; as the constant.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Now that we've defined the functions and constants we're going to use, the next step is to &lt;em&gt;prepare the message&lt;/em&gt; for hashing.&lt;/p&gt;
&lt;h3&gt;5. Message (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/message.rb&quot;&gt;&lt;code&gt;message.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/message.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/message.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you may have noticed, SHA-256 operates on the individual &lt;em&gt;bits&lt;/em&gt; of data. So we before we can hash any data, we first of all need to convert it to its binary representation (&lt;code&gt;1&lt;/code&gt;s and &lt;code&gt;0&lt;/code&gt;s).&lt;/p&gt;
&lt;p&gt;For example when hashing a &lt;em&gt;string&lt;/em&gt;, we convert each character to its corresponding number in the &lt;a href=&quot;https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html&quot; rel=&quot;nofollow&quot;&gt;ASCII table&lt;/a&gt;. These numbers are converted to binary, and it's this binary data that we use as the input to the hash function.&lt;/p&gt;
&lt;h3&gt;6. Padding (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/padding.rb&quot;&gt;&lt;code&gt;padding.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/padding.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/padding.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The SHA-256 hash function works on data in 512-bit chunks, so all messages need to be &lt;em&gt;padded&lt;/em&gt; with zeros up to the nearest multiple of 512 bits.&lt;/p&gt;
&lt;p&gt;Furthermore, to prevent similar inputs from hashing to the same result, we separate the message from the zeros with a &lt;code&gt;1&lt;/code&gt; bit, and also include the size of the message in the last 64 bits of the padding.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This method of separating the message with a &lt;code&gt;1&lt;/code&gt; and including the message size in the padding is known as &lt;strong&gt;Merkle–Damgård strengthening&lt;/strong&gt; (MD strengthening).&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;7. Message Blocks (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/blocks.rb&quot;&gt;&lt;code&gt;blocks.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/blocks.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/blocks.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After the message has been padded, we cut it in to equal 512-bit &lt;strong&gt;message blocks&lt;/strong&gt; &lt;code&gt;M&lt;sup&gt;i&lt;/sup&gt;&lt;/code&gt; to be processed by the hash function. (There is only one message block for this example message, so the animation above isn't very interesting.)&lt;/p&gt;
&lt;p&gt;Each of these message blocks can also be further split in to 16 words &lt;code&gt;M&lt;sup&gt;i&lt;/sup&gt;&lt;sub&gt;j&lt;/sub&gt;&lt;/code&gt; (&lt;code&gt;512 / 32 = 16 words&lt;/code&gt;), which will come in handy in just a moment.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Now that we have padded our message and cut it in to equal chunks, we put &lt;em&gt;each of the message blocks&lt;/em&gt; through the main hash function.&lt;/p&gt;
&lt;h3&gt;8. Message Schedule (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/schedule.rb&quot;&gt;&lt;code&gt;schedule.rb&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/expansion.rb&quot;&gt;&lt;code&gt;expansion.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;For each message block we create a sixty-four word &lt;strong&gt;message schedule&lt;/strong&gt; &lt;code&gt;W&lt;sub&gt;t&lt;/sub&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first sixteen words of this message schedule are constructed from the message block.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/schedule.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/schedule.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
W&lt;sub&gt;t&lt;/sub&gt; = M&lt;sup&gt;i&lt;/sup&gt;&lt;sub&gt;t&lt;/sub&gt;&lt;em&gt;(for 0 ≤ t ≤ 15)&lt;/em&gt;
&lt;/pre&gt;
&lt;p&gt;This is then &lt;em&gt;expanded&lt;/em&gt; to a total of sixty four words by applying rotational functions to some of the words &lt;em&gt;already in the schedule&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/expansion.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/expansion.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
W&lt;sub&gt;t&lt;/sub&gt; = σ&lt;sub&gt;1&lt;/sub&gt;(W&lt;sub&gt;t-2&lt;/sub&gt;) + W&lt;sub&gt;t-7&lt;/sub&gt; + σ&lt;sub&gt;0&lt;/sub&gt;(W&lt;sub&gt;t-15&lt;/sub&gt;) + W&lt;sub&gt;t-16&lt;/sub&gt;&lt;em&gt;(for 16 ≤ t ≤ 63)&lt;/em&gt;
&lt;/pre&gt;
&lt;h3&gt;9. Initial Hash Value (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/initial.rb&quot;&gt;&lt;code&gt;initial.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;The hash function begins by setting the &lt;strong&gt;initial hash value&lt;/strong&gt; &lt;code&gt;H&lt;sup&gt;0&lt;/sup&gt;&lt;/code&gt; in the &lt;em&gt;state registers&lt;/em&gt; (&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/initial.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/initial.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
H&lt;sup&gt;0&lt;/sup&gt; = √primes &lt;em&gt;(first 32 bits of fractional part)&lt;/em&gt;
&lt;/pre&gt;
&lt;p&gt;Like the constants, the initial hash value uses the fractional part of the &lt;strong&gt;square root&lt;/strong&gt; of the first eight &lt;strong&gt;prime numbers&lt;/strong&gt;. This gives us a random set of bits that we can use as a platform to begin the hash computation.&lt;/p&gt;
&lt;h3&gt;10. Compression Function&lt;/h3&gt;
&lt;p&gt;This is the heart of the hash function.&lt;/p&gt;
&lt;p&gt;For each word in the message schedule, we use the current values in the state registers to calculate two new &lt;strong&gt;temporary words&lt;/strong&gt; (&lt;code&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; and &lt;code&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;Temporary Word 1 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/t1.rb&quot;&gt;&lt;code&gt;t1.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/t1.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/t1.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
T&lt;sub&gt;1&lt;/sub&gt; = Σ&lt;sub&gt;1&lt;/sub&gt;(e) + Ch(e, f, g) + h + K&lt;sub&gt;t&lt;/sub&gt; + W&lt;sub&gt;t&lt;/sub&gt;&lt;/pre&gt;
&lt;p&gt;This temporary word takes the next &lt;strong&gt;word in the message schedule&lt;/strong&gt; along with the next &lt;strong&gt;constant from the list&lt;/strong&gt;. These values added to a &lt;code&gt;Σ&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; rotation of the &lt;em&gt;fifth&lt;/em&gt; value in the state register, the &lt;code&gt;choice&lt;/code&gt; of the values in the &lt;em&gt;last three&lt;/em&gt; registers, and the value of the &lt;em&gt;last&lt;/em&gt; register on its own.&lt;/p&gt;
&lt;h4&gt;Temporary Word 2 (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/t2.rb&quot;&gt;&lt;code&gt;t2.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/t2.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/t2.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;
T&lt;sub&gt;2&lt;/sub&gt; = Σ&lt;sub&gt;0&lt;/sub&gt;(a) + Maj(a, b, c)
&lt;/pre&gt;
&lt;p&gt;This temporary word is calculated by adding a &lt;code&gt;Σ&lt;sub&gt;0&lt;/sub&gt;&lt;/code&gt; rotation of the &lt;em&gt;first&lt;/em&gt; value in the state register to a &lt;code&gt;majority&lt;/code&gt; of the values in the &lt;em&gt;first three&lt;/em&gt; registers.&lt;/p&gt;
&lt;h4&gt;Compression (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/compression.rb&quot;&gt;&lt;code&gt;compression.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/compression.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/compression.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After calculating the two temporary words, we shift each value in the state registers down one position, and update the following registers:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;em&gt;first&lt;/em&gt; value in the state register becomes &lt;code&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; + &lt;code&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;fifth&lt;/em&gt; value in the state register has &lt;code&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; added to it.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This is one &quot;round&quot; of compression, and is repeated for every word in the message schedule.&lt;/p&gt;
&lt;p&gt;After we have compressed the entire message schedule, we &lt;strong&gt;add&lt;/strong&gt; the resulting hash value to the initial hash value we started with. This gives us the final hash value for this message block.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;If there are further message blocks to be processed, the current hash value will be used as the &lt;em&gt;initial hash value&lt;/em&gt; in the next compression.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/merkle-damgard-construction.png&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/merkle-damgard-construction.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This process of applying a compression function to each message block and using the output as the input for the next compression is known as the &lt;strong&gt;Merkle–Damgård construction&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;11. Final Hash Value (&lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/final.rb&quot;&gt;&lt;code&gt;final.rb&lt;/code&gt;&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/images/final.gif&quot;&gt;&lt;img src=&quot;https://github.com/in3rsha/sha256-animation/raw/master/images/final.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will be left with eight 32-bit values in the state registers after applying the compression function to each message block.&lt;/p&gt;
&lt;p&gt;The final hash value is just the &lt;em&gt;concatenation&lt;/em&gt; of these eight 32-bit values to produce a 256-bit &lt;strong&gt;message digest&lt;/strong&gt;. For compactness this message digest is usually shown in hexadecimal.&lt;/p&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;This isn't the prettiest code I've ever written.&lt;/li&gt;
&lt;li&gt;These scripts redraw the entire terminal screen for every frame of the animation, so the display can become disjointed at faster speeds.&lt;/li&gt;
&lt;li&gt;All of the actual code for calculating SHA-256 hashes can be found in &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/sha256lib.rb&quot;&gt;&lt;code&gt;sha256lib.rb&lt;/code&gt;&lt;/a&gt;, all of the other files are animations.&lt;/li&gt;
&lt;li&gt;I decided not to include the individual animations for &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/expansion.rb&quot;&gt;&lt;code&gt;expansion.rb&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/t1.rb&quot;&gt;&lt;code&gt;t1.rb&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/t2.rb&quot;&gt;&lt;code&gt;t2.rb&lt;/code&gt;&lt;/a&gt; in the main &lt;a href=&quot;https://github.com/in3rsha/sha256-animation/blob/master/sha256.rb&quot;&gt;&lt;code&gt;sha256.rb&lt;/code&gt;&lt;/a&gt; animation. This is to help speed up the flow of the animation.&lt;/li&gt;
&lt;li&gt;In terms of security; I believe the &lt;strong&gt;Sigma&lt;/strong&gt; functions help with the &lt;em&gt;diffusion of bits&lt;/em&gt;, and the &lt;strong&gt;Choice&lt;/strong&gt; and &lt;strong&gt;Majority&lt;/strong&gt; functions give the hash function it's &lt;em&gt;one-wayness&lt;/em&gt; due to being &lt;em&gt;nonlinear&lt;/em&gt;. The &lt;strong&gt;addition modulus 2&lt;sup&gt;32&lt;/sup&gt;&lt;/strong&gt; is also &lt;em&gt;nonlinear&lt;/em&gt;.&lt;sup&gt;&lt;a href=&quot;https://github.com/in3rsha/sha256-animation#security&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Testimonials&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;that's dope - &lt;a href=&quot;https://twitter.com/Esky33junglist/status/1259789790943285248?s=20&quot; rel=&quot;nofollow&quot;&gt;esky33&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;&lt;h2&gt;Links&lt;/h2&gt;
&lt;h3&gt;Footnotes&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;a id=&quot;user-content-security&quot;&gt;1&lt;/a&gt;: Cryptography For Developers, Simon Johnson (pg. 218)&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 10:13:30 +0000</pubDate>
<dc:creator>inersha</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/7245284?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>in3rsha/sha256-animation</og:title>
<og:url>https://github.com/in3rsha/sha256-animation</og:url>
<og:description>Animation of the SHA-256 hash function in your terminal. - in3rsha/sha256-animation</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/in3rsha/sha256-animation</dc:identifier>
</item>
<item>
<title>Fonts extracted from BIOSes and VGA ROMs</title>
<link>https://github.com/spacerace/romfont</link>
<guid isPermaLink="true" >https://github.com/spacerace/romfont</guid>
<description>&lt;p&gt;I have diassembled and/or searched BIOS and VGA-ROMs for fonts and extracted these. Also I have written a few tools to support this job. All extracted fonts and screenshots are available here. I have written a big table to show what is covered. Also had a look and wrote about fonts of open source BIOSes/source available.&lt;/p&gt;
&lt;p&gt;If you have exotic ROMs or links to other open source BIOSes please let me know. Testing a ROM for known fonts and add it to this list only takes a few minutes and if there is one with a yet unknown font, I am happy to extract and document it :)&lt;br/&gt;I am really intersted in ROMs of old laptops with weird LCD-fonts and embedded devices (like POS systems, cash registers, money machines and other stuff). Also if you have localized graphic cards, that bring a local charset (ex. greek), I am happy to extract their' fonts.&lt;/p&gt;
&lt;p&gt;I already extracted more than 240 ROM-fonts. Most likely I am not updating this counter for every font, so check the font-bin and font-images folder, if there is something new relevant to you.&lt;/p&gt;

&lt;p&gt;I have written a tool to browse a ROM image and search for 8x8, 8x14, 8x16 charsets and export. It can be found here on github in another repo, called &quot;romfont-extractor&quot;.&lt;/p&gt;
&lt;p&gt;ls&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;LEGEND: &quot;ok&quot; - font already extracted
        &quot;XX&quot; - font not included in ROM (newer cards dont ship 8x14 usually)
        &quot;  &quot; - not yet done
        &quot;??&quot; - something strange
        &quot;LO&quot; - only lower 128 characters available

Filename of ROM                                  8x8  8x14 8x16  Bus    Memory   Date         Comments (BIOS manuf., year, version, ...)
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
ATI.X550.128.040512.rom                         | ok | xx | ok |      |        |            |
Asus.6200.16.050106.rom                         | ?? | ?? | ?? |      |        |            | NV44, 2004 Nvidia, Version 5.44.02.11.00 / AS05
CLGD5442.ROM                                    | ok | ok | ok |      |        |            | CL-GD540x/542x VGA BIOS Version 1.20, 1992-1993 Cirrus Logic, 1987-1990 Quadtel
avga1-a11.bin                                   | ?? | ?? | ?? |      |        |            |
AVGA2.ROM                                       | ok | ok | ok |      |        |            |
Commodore386SX-25_AVGA2.bin                     | ok | ok | ok | ISA  |   512k | 03/19/92   | Acumos AVGA2, DeskTop VGA BIOS (340-000-11-Rev1.00), 1984-1991 Phoenix
Connect3D.9500NP.128.Infineon30.021212.rom      | ok | xx | ok | AGP  |        | 2002/12/12 | R300, Infineon Memory BIOS - P/N 113-94232-101, 1988-2002 ATI BK-ATI VER008.004.008.004
Diamond Stealth 64 Video VRAM PCI 3.00.bin      | ok | ok | ok | PCI  |        | 07/05/95   | Stealth 64 Video VRAM Vers. 3.00, Diamond MultiMedia Systems
ELSAVIC2.ROM                                    | ok | ok | ok | AGP  |        | 11/23/98   | ELSA VICTORY II 4.03.00, 98-98 ELSA, 90-98 Elpin Systems
Elsa.FireGLV3200.128.040910.rom                 | ok | xx | ok | PCIE |  128MB | 2004/09/10 | RV380, 1988-2003, ATI BK-ATI VER008.015.121.000
FujitsuSiemens.QuadroFX1700.512.080123.rom      | ?? | ?? | ?? |      |  512MB |            | ??? compressed font ??? cant find font on first look
FujitsuSiemens.X300Mobility.32.050608.rom       | ok | xx | ok |      |   32MB |            |
G400.ROM                                        | ok | xx | ok |      |        |            | Matrox
GENOA.ROM                                       | ok | ok | ok |      |        |            | Tseng
Gigabyte.6200.16.050711.rom                     | ?? | ?? | ?? |      |        |            | ??? compressed font ??? cant find font on first look
Leadtek.6200.16.050128.rom                      | ?? | ?? | ?? |      |        |            | ??? compressed font ??? cant find font on first look
M32.ROM                                         | ok | ok | ok | PCI  |        |            | ATI
M64GX.ROM                                       | ok | ok | ok |      |        |            |
MGAMIL2.ROM                                     | ok | xx | ok |      |        |            |
MIROV968.ROM                                    | ok | ok | ok |      |        |            | Same like V7MERC
MORSE KP800 VGA CL-GD520A-32PC-B.bin            | ok | ok | ok |      |        |            | CL Award
NCR VLB VGA CL-GD5428-80QC-A.bin                | ok | ok | ok |      |        |            |
R128GL.ROM                                      | ok | xx | ok |      |        |            |
RIVA128A.ROM                                    | ok | xx | ok |      |        |            | STB
S3T64V2.ROM                                     | ok | ok | ok | PCI  |        |            | S3
S3VIRGX2.ROM                                    | ok | ok | ok | PCI  |        |            | S3
Sapphire.9600NP.256.unknown.031028.rom          | ok | xx | ok |      |  256MB |            |
Sapphire.9600PRO.128.Samsung28.030829.rom       | ok | xx | ok |      |  128MB |            |
TNT2M64.ROM                                     | ok | ok | ok |      |        |            |
TSVGA 9020-12 ET4000 ISA VGA.bin                | ok | ok | ok | ISA  |        |            |
Tseng ET3000AX ISA VGA-VGA ULTRA.bin            | ok | ok | ok | ISA  |        |            |
V7MERC.ROM                                      | ok | ok | ok |      |        |            |
V7_Vega                                         | ok | ok | ok |      |        |            | uses 3dfx font set, different fonts than V7MERC
video_seven_vega_vga_62L1989V5_435-0016-47.bin  | ok | ok | ok |      |        |            |
VANTA.ROM                                       | ok | ok | ?? |      |        |            | 8x16 not complete in ROM
VANTAGE.ROM                                     | xx | ok | ok |      |        |            | has no 8x8 font
VDOO3PCI.ROM                                    | ok | ok | ok |      |        |            | 3dfx Elpin
WIN1KXHR.ROM                                    | ok | ok | ok |      |        |            | ESLA
WONDER16.ROM                                    | ok | ok | ok |      |        |            |
XGA.ROM                                         | ok | ok | ok |      |        |            | Phoenix
et4000_stb.vbi                                  | ok | xx | ok |      |        |            |
et4000w32isa.BIN                                | ok | ok | ok |      |        |            |
et4000_weirdlowerL.bin                          | ok | ok | ok | ISA  |512k/1M |            | Has a weird lower L in 8x14 and 8x16 charsets. Typical TSENG change to a PC font.
OakTechnolgy-unknown-1.bin                      | ok | ok | ok |      |        |            |
OakTechnolgyVGA-KO77.bin                        | ok | ok | ok |      |        |            |
QuadtelS3_86C801_86C805EnhancedVGABIOS2.13.01   | ok | ok | ok |      |        |            |
QuadtelVGABIOSVersion1.21.00.bin                | ok | ok | ok |      |        |            |
SVGA141.ROM                                     | ok | ok | ok |      |        |            |
s3_764.bin                                      | ok | ok | ok |      |        |            |
TridentTVGA8900C_S27C256.bin                    | ?? | ?? | ?? |      |        |            |
tgui9400cxi.vbi                                 | ok | ok | ok |      |        |            |
tvga-c4.3.rom                                   | ok | ok | ok |      |        |            |
tvga-d3.0.rom                                   | ok | ok | ok |      |        |            |
tvga9000i-d4.01e                                | ?? | ?? | ?? |      |        |            |
tvga9000i-v2.vbi                                | ok | ok | ok |      |        |            |
tvga9000a_d211.bin                              | ok | ok | ok |      |        |            |
tvga9000a_d301.bin                              | ok | ok | ok |      |        |            |
tvga8800cs                                      | ok | ok | ok |      |        |            |
tvga8800cs_2                                    | ok | ok | ok |      |        |            |
BLADEXP.vbi                                     | ok | ok | ok |      |        |            |
BLADE3D_AGP.vbi                                 | ok | ok | ok |      |        |            |
BLADE3D_AGP_HIS.vbi                             | ok | ok | ok |      |        |            |
BLADE3D_PCI.vbi                                 | ok | ok | ok |      |        |            |
vgaedge.bin                                     | ok | ok | ok |      |        |            |
TsengLabsVGA-4000BIOSV1.1.bin                   | ok | ok | ok |      |        |            |
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
ATIEgaWonder800p.bin                            | ok | ok | ok |      |        |            |
ami-ega.rom                                     | ok | ok | xx |      |        |            | VERY SPECIAL FONTS, 2 different 8x8 (1 is mirrored) and one 8x14
genoa-ega-2.41.rom                              | ok | ok | xx |      |        |            |
ibm-ega.rom                                     | ok | ok | xx |      |        |            |
NSILogic-SmartEGAPlus-04-086-01Rev1.45-U21.bin  | ok | ok | xx |      |        |            |
wd-pega.rom                                     | ok | ok | xx |      |        |            |
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
IBM VGA                                         | ok | ok | ok |      |        |            | has a full 8x8 charset in 8x8, 8x14 and 8x16
IBM_PC_BIOS_1981-04-24_HALF_8x8.bin             | LO | XX | XX | ---  | ------ |            | IBM PC BIOS, only lower 128 characters, no &quot;graphical&quot; chars.
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
=&amp;gt; IN THIS SECTION: LOCALIZED VIDEO ROMS (greek, ...)
CGA_PRAVETZ.ROM                                 | ok | xx | xx |      |        |            | 4 different kyrillic fonts
acer500-II_cga_rom.bin                          | ok | xx | ?? |      |        |            | 2 different greek 8x8, somewhat strange 8x16 TBD
ati_small_wonder_rev1_GR-ROM.bin                | ok | xx | ?? |      |        |            | 4 different greek 8x8
clone2_cga_rom.bin                              | xx | ?? | ?? |      |        |            |
clone_cga_rom.bin                               | xx | ?? | ?? |      |        |            |
hyundai_mono-graphics-board_e40080004           | xx | ?? | ?? |      |        |            |
ibm5155_cga_rom_memotek_greek                   | ok | xx | xx |      |        |            | 10 different greek fonts?
tvga9000a_japan.vbi                             | ok | ok | ok |      |        |            |
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
mda.rom                                         | ?? | ?? | ?? |      |        |            | 8k ROM only font data, what is this? not extracted yet, some problems
50146chareuro.rom                               | ok | xx | ok |      |        |            | Tandy 1000, 8x8 and 8x14 in both a 8x16 array with padding zero bytes
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
=&amp;gt; IN THIS SECTION: SYSTEM BIOS
ali1429g.amw (AMI WINBIOS)                      | LO | xx | xx |      |        |            |
amic206.bin                                     | xx | xx | xx |      |        |            | NO FONT at all
ami386.bin                                      | LO | xx | xx |      |        |            |
amxtv132.rom                                    | LO | xx | xx |      |        |            |
award-2.05.rom                                  | LO | xx | xx |      |        |            |
DTK.PII-151B-BIOS.version.1.06B.bin             | xx | xx | xx |      |        |            | NO FONT at all
dtk_erso_2.42_2764.bin                          | LO | xx | xx |      |        |            |
genxt.bin                                       | LO | xx | xx |      |        |            |
JukoD16X-BIOSversion1.2.bin                     | xx | xx | xx |      |        |            | NO FONT at all
LongshineLCS-6821N-BIOSversion1.04.bin          | xx | xx | xx |      |        |            | NO FONT at all
olivetti-m24-1.21.rom                           | LO | xx | xx |      |        |            |
opt495sx.ami                                    | LO | xx | xx |      |        |            |
phoenix-2.51.rom                                | LO | xx | xx |      |        |            |
ToshibaT1000-BIOSROM-V4.10.bin                  | ?? | xx | xx |      |        |            | lo and hi in different places
toshibaT5200cbiosv3.bin                         | ok | xx | ok |      |        |            | VERY SPECIAL contains each 2 different fonts, 8x8 and 8x16
VTech-LaserTurboXT-BIOS-V1.11-27C64D.bin        | LO | xx | xx |      |        |            | VERY SPECIAL
VTech-LaserXT3-BIOS-V1.26-27C64.bin             | LO | xx | xx |      |        |            | VERY SPECIAL
wang3050_bios_rom                               | ok | ok | ok |      |        |            |
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
ibmjap.rom                                      | ok | ok | ok |      |        |            | Japanese PS/2 BIOS
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
=&amp;gt; IN THIS SECTION: FONTS THAT ARE AVAILABLE IN SOURCE
seabios                                         | ok | ok | ok | ---  | ------ |            | from official source
bochs                                           | LO | XX | XX | ---  | ------ |            | from official source
3dfx                                            | ok | ok | ok |      |        |            | from leaked source
IBM PC BIOS V1                                  | LO | XX | XX |      |        |   1981     | from IBM's source
IBM PC BIOS V2,V3                               | LO | XX | XX |      |        |   1981     | from IBM's source
IBM AT BIOS V1,V2,V3                            | LO | XX | XX |      |        |   1981     | from IBM's source
IBM XT BIOS V1,V2,V3                            | LO | XX | XX |      |        |   1981     | from IBM's source
IBM XT286 BIOS V1                               | LO | XX | XX |      |        |   1981     | from IBM's source
------------------------------------------------+----+----+----+------+--------+------------+------------------------------------------------------------------------------------------------
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;The folder 'other_sources' contains subfolders, which each holds a set of files for a ROM-font. They were not extracted from ROMs, they are already available as source. These sources were adapted and simple bin-generators were added to create the binary font files. These are available:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ibm_pc             -  original IBM PC, V1/V2/V3
ibm_xt             -  IBM XT, V1/V2/V3
ibm_xt286          -  IBM XT 286, only one BIOS available
ibm_at             -  IBM AT, V1/V2/V3
seabios            -  qemu seabios, 8x8, 8x14, 8x16
3dfx_leadked_bios  -  original source code, 8x8, 8x14, 8x16, 9x14, 9x16
bochs_bios         -  bochs bios, 8x8, only lower half of charset implemented
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Not all are yet converted to C (most of them in ASM) and bins are generated. The original sources are provided already.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;IBM has used a font for the very first PC BIOS, that has changed in second version of BIOS. After this release the font remained the same on these machines:
&lt;ul&gt;&lt;li&gt;IBM PC v2, v3&lt;/li&gt;
&lt;li&gt;IBM XT v1, v2, v3&lt;/li&gt;
&lt;li&gt;IBM XT v1&lt;/li&gt;
&lt;li&gt;IBM AT v1, v2, v3 The only change from first to second version is 1 single bit, that makes a huge difference when looking at it (ASCII 0x04, bottom line 0x00 changes to 0x08). This font only has the lower 128 characters.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IBM uses exactly same 8x8,8x14,8x16 on VGA and XGA. (full 256 item charset)&lt;/li&gt;
&lt;li&gt;qemu seabios 8x8 and 8x14 are exact matches to IBM's VGA and XGA fonts. These files are in fntcol16.zip from simtel. VGA-ROM.F08 and VGA-ROM.F14. qemu source comment claims this is public domain. I doubt IBM would release a font to public domain. Does this mean, qemu relied on claims by package creator and now they use a illegal copy?&lt;/li&gt;
&lt;li&gt;bochs bios 8x8 only brings lower 128 chars that are exactly matching IBM's second font. Same as with seabios 8x8 font (licensing).&lt;/li&gt;
&lt;li&gt;3dfx uses 8x8+8x14 IBM font, but looks like they use NVidia 8x16 font.&lt;/li&gt;
&lt;li&gt;The Voodoo3 8x8,8x14,8x16 match exactly the leaked ones from 3dfx.&lt;/li&gt;
&lt;li&gt;The AVGA2 has totally unique fonts - TODO - bit by bit compare - what are the differences?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Have a look at &lt;code&gt;MD5SUMs&lt;/code&gt; file, it is sorted by sum. This means, you will se which cards share same font. If you want to compare you may use a image viewer and view the zoomed images of the desired fonts.&lt;/p&gt;
&lt;p&gt;The folder &lt;code&gt;lowercharset&lt;/code&gt; holds the lower 128 characters of all 8x8 fonts to see, which one uses the original IBM PC's or the second version of this font.&lt;/p&gt;
</description>
<pubDate>Wed, 13 May 2020 10:06:20 +0000</pubDate>
<dc:creator>luu</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/3340904?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>spacerace/romfont</og:title>
<og:url>https://github.com/spacerace/romfont</og:url>
<og:description>VGA and BIOS rom font extraction. Contribute to spacerace/romfont development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/spacerace/romfont</dc:identifier>
</item>
</channel>
</rss>