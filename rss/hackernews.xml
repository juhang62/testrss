<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Faceswap Github repo is public but only accessible by logged-in users</title>
<link>https://github.com/deepfakes/faceswap</link>
<guid isPermaLink="true" >https://github.com/deepfakes/faceswap</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-KYH8zRCvGYQoVsdDKgYaJRXDN9CwQu0YkPVgbKm4cOiqLAxNisg2Kjex6tfrEB3yTAwtXcFY/sxBVj/3IkIiqg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-a70126cbff30372f13f599b76353080b.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-L+Xfjk72/sIPS5T8Z8Wy/+/78ngrN7jAjVpE5Zoo2KfZYqr9s8p6selV7sLydYrh0Y3Pu02CuEa7uuq70RjSxg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-278e4176d194ae782983c71f1f767503.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-C2PeOYJLfGX0l1usuxFpXXEX27kP3TXRWl7jQ/qpMF59td5XFUUqB/EmZL2loRRBzouPP96e09oq2jovH+smEA==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-0d139b56f7fdba32feb4dfab70407a06.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;Sign in to GitHub · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;GitHub is where people build software. More than 31 million people use GitHub to discover, fork, and contribute to over 100 million projects.&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Build software better, together&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;GitHub is where people build software. More than 31 million people use GitHub to discover, fork, and contribute to over 100 million projects.&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://github.githubassets.com/images/modules/open_graph/github-logo.png&quot;/&gt;&lt;meta property=&quot;og:image:type&quot; content=&quot;image/png&quot;/&gt;&lt;meta property=&quot;og:image:width&quot; content=&quot;1200&quot;/&gt;&lt;meta property=&quot;og:image:height&quot; content=&quot;1200&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://github.githubassets.com/images/modules/open_graph/github-mark.png&quot;/&gt;&lt;meta property=&quot;og:image:type&quot; content=&quot;image/png&quot;/&gt;&lt;meta property=&quot;og:image:width&quot; content=&quot;1200&quot;/&gt;&lt;meta property=&quot;og:image:height&quot; content=&quot;620&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://github.githubassets.com/images/modules/open_graph/github-octocat.png&quot;/&gt;&lt;meta property=&quot;og:image:type&quot; content=&quot;image/png&quot;/&gt;&lt;meta property=&quot;og:image:width&quot; content=&quot;1200&quot;/&gt;&lt;meta property=&quot;og:image:height&quot; content=&quot;620&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;pjax-timeout&quot; content=&quot;1000&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;A63D:7338:2B58009:415F354:5C698558&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;/login&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-request_id&quot; content=&quot;A63D:7338:2B58009:415F354:5C698558&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-region_edge&quot; content=&quot;sea&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-region_render&quot; content=&quot;iad&quot;/&gt;&lt;meta name=&quot;analytics-location-query-strip&quot; content=&quot;true&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;js-proxy-site-detection-payload&quot; content=&quot;NGJkYzc1NWRjMjljOGZiN2U3YTE1Y2IyYzg5OTZiMmM0Y2Q0MzhjODNhZWM4NDEzMDhlNmIxMDllY2Q5NDU0ZHx7InJlbW90ZV9hZGRyZXNzIjoiNjguMjMwLjY2LjE2OSIsInJlcXVlc3RfaWQiOiJBNjNEOjczMzg6MkI1ODAwOTo0MTVGMzU0OjVDNjk4NTU4IiwidGltZXN0YW1wIjoxNTUwNDE5Mjg5LCJob3N0IjoiZ2l0aHViLmNvbSJ9&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;UNIVERSE_BANNER,MARKETPLACE_PLAN_RESTRICTION_EDITOR,MARKETPLACE_BROWSING_V2&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;1a483fc7d4546c369b2876471835b6dc9a397aba&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;688077f92de7af23573f865e9a2e903f&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://github.com/login&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://github.githubassets.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;meta name=&quot;u2f-support&quot; content=&quot;true&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive min-width-0 session-authentication&quot; id=&quot;readabilityBody&quot; readability=&quot;46.523076923077&quot;&gt;




&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none&quot;&gt;&lt;span class=&quot;signed-in-tab-flash&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fdeepfakes%2Ffaceswap&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;signed-out-tab-flash&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fdeepfakes%2Ffaceswap&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark&quot; open=&quot;&quot;&gt;
&lt;/details&gt;
&lt;p&gt;Press h to open a hovercard with more details.&lt;/p&gt;

&lt;/body&gt;</description>
<pubDate>Sun, 17 Feb 2019 06:21:50 +0000</pubDate>
<dc:creator>jordwalke</dc:creator>
<og:url>https://github.com</og:url>
<og:title>Build software better, together</og:title>
<og:description>GitHub is where people build software. More than 31 million people use GitHub to discover, fork, and contribute to over 100 million projects.</og:description>
<og:image>https://github.githubassets.com/images/modules/open_graph/github-logo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fdeepfakes%2Ffaceswap</dc:identifier>
</item>
<item>
<title>Going Solo, Successfully</title>
<link>https://kev.inburke.com/kevin/going-solo-successfully</link>
<guid isPermaLink="true" >https://kev.inburke.com/kevin/going-solo-successfully</guid>
<description>&lt;p&gt;Three years ago I quit my job and &lt;a href=&quot;https://burke.services&quot;&gt;started consulting full time&lt;/a&gt;. It's worked out really well. I get to spend more time doing things I like to do and I've been able to deliver great products for clients. I wanted to go over some tips for starting a successful consulting business.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Charge more&lt;/strong&gt; - Everyone says it and it's true. I started out charging a monthly rate that was close to &lt;code&gt;my full time salary / 12&lt;/code&gt;. This is not a good idea because you have overhead that your employer is no longer covering - health care probably the biggest one, you don't have paid vacations, there may be unpaid downtime between contracts and also companies might not pay you. You need to be charging a lot more to just break even.&lt;/p&gt;
&lt;p&gt;I dread &quot;what's your rate&quot; conversations every time and they haven't gotten easier. Before I quote my rate I reread the details of the &lt;a href=&quot;https://en.wikipedia.org/wiki/High-Tech_Employee_Antitrust_Litigation&quot;&gt;High Tech Employee Antitrust case&lt;/a&gt; to pump myself up - it reminds me that I'm negotiating with a company that couldn't care less really and I am the only one who's going to stand up for myself. If you think you don't need the extra money - get it anyway, and then donate more to charities at the end of the year/buy CD's/put it in the stock market/give it to the government. Amazon just made $11 billion and paid $0 in taxes; you are going to spend an additional dollar better than Amazon's executives will.&lt;/p&gt;
&lt;p&gt;If you are not sure how much to charge, quote each new client more than the last. Your quote is often a signal of your quality so it's not even really the case that demand slopes downwards as you charge more.&lt;/p&gt;
&lt;p&gt;If you are working with a client and they are very happy with your work and want to extend your contract consider asking for a higher rate. &quot;Now that you know how good I am,&quot; etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Get the money&lt;/strong&gt; - Signed contracts, work performed, don't matter until the money hits your bank account. I learned this the hard way. If a company is going under your invoices are worthless. You can hold onto the company IP but that's probably also worthless. You can sue but at the end you will win a judgment that you can collect money from a company that doesn't have any to pay you.&lt;/p&gt;
&lt;p&gt;Try to get as much of the contract as you can paid up front - I generally ask for half or more up front. If a company offers Net 30 ask if you can shorten it to Net 5 or 10 or submit your invoices in advance. &lt;em&gt;Submit invoices on time&lt;/em&gt; - it's a very costly mistake and you won't learn its importance until it's too late.&lt;/p&gt;
&lt;p&gt;Try as hard as you can to figure out the financial health of the company - if you can do your homework in the press or ask questions to your primary point of contact, like how much cash they are burning, how many months of runway do you have. If a company is not forthcoming with this information it's a red flag that they may not be able to pay you.&lt;/p&gt;
&lt;p&gt;If you see &lt;em&gt;any&lt;/em&gt; red flags - the company wants to cut the contract short, people start leaving, company suddenly cuts back on perks - tell your contact that you need to be paid upfront or you are not going to work anymore. If they push back on this they may not have the cash to pay you at all. It's a crappy situation but better to cut your losses than to work for someone that can't actually pay.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Don't charge by the hour&lt;/strong&gt; - I have never actually done this so I can't speak to how bad it is but don't do this. You don't want a client to cut you loose at 3pm and suddenly you lose three hours you were counting on. Charge per week.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Get a lawyer&lt;/strong&gt; - Get a lawyer to review every contract you sign. Read through them, flag concerning things to the lawyer. They will suggest language. Send the language to the company. You are not being difficult when you do this, the company does this all the time. Lawyers are expensive, expect to pay north of $400 per hour and contract review can take 30-60 minutes. This money is worth it.&lt;/p&gt;
&lt;p&gt;A good clause to try to push for is limitation of liability. You don't want to be in a situation where $2 million of damages occurred or a high value client left the company because of an error you pushed and the company is suddenly coming after everything you own. Similarly the company may want to protect against you trying to sue them for a high amount of damages to your reputation, future business etc. Limiting the total liability to the size of the contract, or a multiple of the size of the contract - on both sides - can be a good move.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Register as a Company&lt;/strong&gt; - Consult with the lawyer you hired on what kind of company you want to be. Generally the more &quot;company-like&quot; you are the harder it is for companies to try to take your personal assets. I don't have employees or shareholders so I have a single member LLC that is disregarded for tax purposes — read &lt;a href=&quot;https://www.irs.gov/businesses/small-businesses-self-employed/single-member-limited-liability-companies&quot;&gt;this description from the IRS&lt;/a&gt;. Sometimes businesses are confused what this means when I tell them or try to sign up for things. Still, it is a good fit for me. It may not be for you - I am not a lawyer, you should talk with one, learn the tradeoffs and see what makes sense for your business.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Make Sure Contracts Are Signed With the Company&lt;/strong&gt; - The contracts you sign should be between the client you are working with and your company &lt;em&gt;NOT&lt;/em&gt; between the client and you personally. Discuss this with your lawyer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Get an accountant&lt;/strong&gt; - As a small business a lot of stuff is tax deductible - a home office, client travel, for example, even if it's just across town - and you want to make sure you are getting ~35% off on everything that you can. An accountant will help you with this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Market yourself&lt;/strong&gt; - Not necessarily ads or sponsorships, but: everyone you've worked with full time should know they can hire you now. If they don't then reach out to people and let them know. Put up a website that engineers can send to their boss. &lt;a href=&quot;https://burke.services&quot;&gt;My website isn't fancy but it is effective&lt;/a&gt;. Order business cards - VistaPrint is garbage, [order from moo.com][https://moo.com]. If you have a website or open source projects put a note at the bottom advertising that you're available for hire, like the one at the bottom of this post.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set up separate accounts for everything&lt;/strong&gt; - Open separate accounts for your business. Get a business credit card or just a separate cash back card on your personal account. I don't have a checking account registered for the business but I opened a second checking account at Ally that I call my &quot;business account&quot;. Clients pay into that account and I pay the business credit card out of that account. I even have a separate Clipper card that I use for business travel.&lt;/p&gt;
&lt;p&gt;There are two reasons for this. It makes tax accounting a lot easier. I know that every transaction on the business Clipper card is work travel and can be expensed; I don't have to try to remember what I was doing when I paid $2 to SamTrans at 5:34pm on July 27.&lt;/p&gt;
&lt;p&gt;Second, if you don't keep good records for the business - if you &quot;commingle&quot; funds between your personal life and the business - it makes it much easier for clients to go after your personal assets, what's called &quot;piercing the veil.&quot; Separate accounts (and discipline about transfers!) make it much easier to argue that your business income and spending and personal income and spending are separate even if you don't necessarily have the legal structures to back them up.&lt;/p&gt;
&lt;p&gt;I also &lt;strong&gt;set up a new Github account for every company I work with.&lt;/strong&gt; This avoids any issues with emails going to the wrong place, or the need to grant/revoke permissions to any 3rd party tools a company uses. I use &lt;a href=&quot;https://github.com/kevinburke/swish&quot;&gt;&lt;code&gt;github.com/kevinburke/swish&lt;/code&gt;&lt;/a&gt; to swap SSH settings between my Github accounts:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;pre class=&quot;chroma&quot;&gt;
    $ cat &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;which notion-github&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#!/usr/bin/env bash
&lt;/span&gt;    &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOPATH&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/bin/swish --identity-file &lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;/.ssh/github_notion_ed25519 --user kevinburkenotion
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Balancing multiple clients:&lt;/strong&gt; If you can do this or do things like charge retainers, great. I find it really hard to switch contexts so I work with one client at a time and treat it as a full time job. Do what works for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Give back to the tools that make you successful&lt;/strong&gt; - I &lt;a href=&quot;https://burke.services/2017/donations.html&quot;&gt;give a percentage of my earnings every year&lt;/a&gt; to support software tools that help me do my job - iTerm2, Vim, Go, Postgres, Node.js, Python, nginx, various other open source projects. You should consider doing this too. (If you are an open source maintainer reading this - tell me how I can pay you!!)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Liked what you read?&lt;/strong&gt; I am &lt;a href=&quot;https://burke.services&quot;&gt;available for hire.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 00:49:49 +0000</pubDate>
<dc:creator>kevinburke</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://kev.inburke.com/kevin/going-solo-successfully/</dc:identifier>
</item>
<item>
<title>What ABC called &quot;pink slime,&quot; USDA now says can be labeled &quot;ground beef&quot;</title>
<link>https://newfoodeconomy.org/bpi-pink-slime-ground-beef-usda-reclassifed/</link>
<guid isPermaLink="true" >https://newfoodeconomy.org/bpi-pink-slime-ground-beef-usda-reclassifed/</guid>
<description>&lt;div class=&quot;intro&quot;&gt;On the semantics of a product that scandalized America—and is now on a comeback tour.&lt;/div&gt;&lt;p class=&quot;byline entry-meta vcard m-all t-1of2 d-1of2&quot;&gt;February 7th, 2019&lt;br/&gt;by &lt;a href=&quot;https://newfoodeconomy.org/author/joe-fassler/&quot;&gt;Joe Fassler&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;tags m-all t-1of2 d-1of2&quot;&gt;&lt;span class=&quot;tags-title&quot;&gt;&lt;a href=&quot;https://newfoodeconomy.org/category/issues/culture/&quot; rel=&quot;category tag&quot;&gt;Culture&lt;/a&gt; &lt;a href=&quot;https://newfoodeconomy.org/category/issues/&quot; rel=&quot;category tag&quot;&gt;Issues&lt;/a&gt; &lt;a href=&quot;https://newfoodeconomy.org/category/issues/policy/&quot; rel=&quot;category tag&quot;&gt;Policy&lt;/a&gt; &lt;a href=&quot;https://newfoodeconomy.org/category/systems/&quot; rel=&quot;category tag&quot;&gt;Systems&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;social-horizontal m-all t-all d-all x-all&quot;&gt;

&lt;/div&gt;

&lt;div class=&quot;article-content&quot;&gt;
&lt;p&gt;Beef Products Inc. (BPI), the South Dakota-based meat processing company at the center of 2012’s &lt;a href=&quot;https://newfoodeconomy.org/pink-slime-strikes-back/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;“pink slime” controversy&lt;/a&gt;, just won a long-sought semantic victory. For years, the company has argued that its signature product is safe, wholesome, and not unlike everyday burger meat. Now, BPI has enlisted a powerful ally in its effort to recoup its image and reclassify its product: the federal government.&lt;/p&gt;
&lt;p&gt;After a months-long evaluation, the United States Department of Agriculture’s Food Safety and Inspection Service (FSIS) &lt;a href=&quot;https://www.beefmagazine.com/beef-quality/dude-it-s-ground-beef-usda-reclassifies-bpi-s-signature-product&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;determined&lt;/a&gt; in December that BPI’s signature product—the offering famously called “pink slime” in an ABC News exposé that got the network &lt;a href=&quot;https://newfoodeconomy.org/heres-look-pink-slime-trial/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;in a lot of trouble&lt;/a&gt;—can be labeled “ground beef.” Legally speaking, it’s now no different from ordinary hamburger, and could even be sold directly to the public.&lt;/p&gt;
&lt;p&gt;“After reviewing BPI’s submission of a new product and new production process, FSIS determined that the product meets the regulatory definition of ground beef under the law in &lt;a href=&quot;https://www.gpo.gov/fdsys/pkg/CFR-2012-title9-vol2/pdf/CFR-2012-title9-vol2-sec319-15.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;9 CFR 319.15(a)&lt;/a&gt; and may be labeled accordingly,” a FSIS spokesperson told me, in an emailed statement.&lt;/p&gt;
&lt;p&gt;FSIS calls it a “new” product because BPI’s process has evolved substantially since 2012—though how exactly it has changed is not immediately clear, for reasons I’ll explain.&lt;/p&gt;
&lt;p&gt;In case you missed the 2012 ABC News segment that first introduced the term “pink slime” to the public, or don’t remember details from the wave of coverage that followed, here’s some background.&lt;/p&gt;
&lt;p&gt;As cattle carcasses are turned into steaks at a processing plant, knife-wielding workers cut fatty edges off the meat. These carcass cuttings, or “trim”—&lt;a href=&quot;https://agr.wa.gov/foodanimal/custommeats/processingpercentage.aspx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;about 1/3 of each animal’s weight&lt;/a&gt; —contain small portions of edible meat, which can be used to make ground beef. The challenge is that hamburger makers always have a target fat content in mind. According to USDA, &lt;a href=&quot;https://www.ars.usda.gov/northeast-area/beltsville-md-bhnrc/beltsville-human-nutrition-research-center/nutrient-data-laboratory/docs/ground-beef-calculator/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ground beef can’t contain more than 30 percent fat&lt;/a&gt;, while “lean” ground beef, for instance, must contain less than 22.5 percent fat. How to make sure that the standard trim coming off cattle—typically 50 percent meat, 50 percent fat—ultimately results in a product that hits the precise fat content required?&lt;/p&gt;
&lt;p&gt;That’s where BPI comes in.&lt;/p&gt;
&lt;div class=&quot;quote1right-collect&quot;&gt;&lt;span class=&quot;quote1right flex-color&quot;&gt;Is “ground beef” the right term for meat mechanically ground by centrifuge?&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;BPI has a symbiotic relationship with a Tyson Foods plant in Dakota City, Nebraska, where its facility was built right next to the slaughterhouse. (In the wake of the ABC News report, the company’s orders &lt;a href=&quot;https://siouxcityjournal.com/business/local/roths-set-up-million-fund-for-workers-from-closed-bpi/article_4f5eaebe-43c0-57ca-8cdd-10accd9c07fd.html&quot;&gt;plunged&lt;/a&gt; from 5 million pounds a week to 1.5 million, ultimately forcing BPI to closes the three other plants it maintained across the country.) Tyson’s beef trim is ferried over from the kill floor to BPI’s plant by conveyor, where it’s warmed to about 100 degrees and sent through a centrifuge that separates the fat from the meat. The liquified fat can then be sold as tallow, while the resulting meat—which the industry has called “lean finely textured beef,” or “boneless beef trimmings” in the past—is nearly fatless. BPI &lt;a href=&quot;https://www.beefproducts.com/ground-beef/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;says&lt;/a&gt; its product is 95 percent lean, so only five percent fat.&lt;/p&gt;
&lt;p&gt;That product is then sterilized with a strong puff of ammonia gas to kill pathogens, as &lt;a href=&quot;https://www.consumerreports.org/content/cro/en/consumer-reports-magazine/z2015/October/how-safe-is-your-ground-beef.print.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;beef trimmings are especially susceptible to contamination&lt;/a&gt;. (Ammonia might sound scary, but it’s a common food additive and processing agent that’s &lt;a href=&quot;https://www.reuters.com/article/us-food-ammonia/ammonia-used-in-many-foods-not-just-pink-slime-idUSBRE8331B420120404&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;generally regarded to be safe&lt;/a&gt; in small amounts.) From there, it’s sold to meatpackers who mix it in with their ground beef to lower the fat content as desired. For decades, it was a booming business, and BPI had &lt;a href=&quot;https://grist.org/article/2009-12-31-meat-wagon-ammonia-burger/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;claimed&lt;/a&gt; that its product was present in over 70 percent of ground beef sold in the U.S. before 2012.&lt;/p&gt;
&lt;div class=&quot;imglarge&quot;&gt;
&lt;div id=&quot;attachment_14000&quot; class=&quot;wp-caption alignright&quot;&gt;

&lt;p class=&quot;wp-caption-text&quot;&gt;The art of the trade: How the burger patty gets made&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Still, when beef is not just “ground,” but rendered into fine paste through an intensely mechanical process, the question remains: What should we call it? If it can’t be called “pink slime,” what words should we use?&lt;/p&gt;
&lt;p&gt;Since 1994, the government’s stance has been clear. Lean finely textured beef (LFTB) has been a “qualified component” of hamburger, meaning it can be included in ground beef without being independently disclosed. But it could not &lt;em&gt;itself&lt;/em&gt; be called ground beef, suggesting that, in the eyes of regulators it was something else—a padding or additive, but not the real deal.&lt;/p&gt;
&lt;p&gt;Some at USDA weren’t comfortable even with that classification. Though ABC made the term “pink slime” famous, the network didn’t actually coin it. The term originated with a USDA microbiologist, David Zirnstein, who used it in a 2002 email to agency staff. According to a 2009 &lt;a href=&quot;https://www.nytimes.com/2009/12/31/us/31meat.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;report&lt;/a&gt; from &lt;em&gt;The New York Times&lt;/em&gt;’s Michael Moss—part of a &lt;a href=&quot;https://www.pulitzer.org/winners/michael-moss-and-members-staff&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;series of articles&lt;/a&gt; on food safety in the ground beef industry that would ultimately earn him a Pulitzer Prize—Zirnstein was troubled by the production method. “I do not consider the stuff to be ground beef, and I consider allowing it in ground beef to be a form of fraudulent labeling,” he wrote in the email, according to Moss’s report.&lt;/p&gt;
&lt;p&gt;Several years later, ABC released the now-infamous segment that lead to the “pink slime” hysteria of 2012. BPI argued that the network’s characterization was false and defamatory, ultimately suing it for &lt;a href=&quot;https://www.beefmagazine.com/communication/bpi-s-19-billion-lawsuit-against-abc-news-gets-underway&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1.9  billion dollars&lt;/a&gt;. That lawsuit was &lt;a href=&quot;https://newfoodeconomy.org/abc-bpi-settle-defamation-lawsuit-terms-remain-undisclosed/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;settled out of court in 2017&lt;/a&gt; for an undisclosed sum, though &lt;em&gt;The Chicago Tribune&lt;/em&gt; and other outlets have &lt;a href=&quot;https://www.chicagotribune.com/business/ct-pink-slime-defamation-suit-20170810-story.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;reported&lt;/a&gt; a settlement of at least $177 million paid out by ABC so far. ABC, according to the terms of its settlement, admits no wrongdoing and has stood by its report. And though BPI has managed to r&lt;a href=&quot;https://siouxcityjournal.com/business/local/roths-set-up-million-fund-for-workers-from-closed-bpi/article_4f5eaebe-43c0-57ca-8cdd-10accd9c07fd.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ecoup some of the economic damage&lt;/a&gt; from the fallout, most Americans still think of “lean finely textured beef” as “pink slime.”&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/g-sbaq7EcE8?controls=0&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;That may be about to change. Since the 2012 incident, BPI has launched a &lt;a href=&quot;https://www.beefmagazine.com/beef-quality/dude-it-s-ground-beef-usda-reclassifies-bpi-s-signature-product&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;campaign called “Dude, it’s beef,”&lt;/a&gt; trying to spread awareness about its processes while insisting on language it feels is fair. “Ground beef has always been made with beef trimmed from the whole muscle cuts,” the company &lt;a href=&quot;https://www.beefproducts.com/ground-beef/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;points out&lt;/a&gt; on its website. “The difference is the precision with which we are able to trim the meat.”&lt;/p&gt;
&lt;p&gt;That effort culminated in 2018, when BPI, citing advancements to its process, formally asked FSIS to consider whether its product might just be called “ground beef.”&lt;/p&gt;
&lt;p&gt;“It was an extensive review that took well over six months and included consumer reviews, nutritional panels, tours of the plant where agency folks could get a first-hand look at the process and understand what we are doing at BPI,” Nick Ross, BPI’s vice president of engineering, &lt;a href=&quot;https://www.beefmagazine.com/beef-quality/dude-it-s-ground-beef-usda-reclassifies-bpi-s-signature-product&quot;&gt;told&lt;/a&gt; &lt;em&gt;Beef Magazine&lt;/em&gt;, a trade publication that covers the cattle industry.&lt;/p&gt;
&lt;p&gt;I wanted to learn more about how the process has changed since the ABC report, to see whether it was technological changes that finally won the government over, or whether FSIS simply came around to BPI’s semantic argument. When I reached out to BPI, the company provided a written statement through a spokesman.&lt;/p&gt;
&lt;div class=&quot;quote1right-collect&quot;&gt;&lt;span class=&quot;quote1right flex-color&quot;&gt;Legally, BPI can now sell its product under the label “ground beef.” But will the rest of the world agree that’s the right term?&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;“For over 30 years, BPI has been continuously improving its expertise to deliver lean, wholesome, nutritious, and sustainable beef. As our capabilities continued to evolve and improve, we pursued more consumer-oriented means of delivering this value to our customers and in doing so have created even better products,” the statement read. “As part of that evolution, last year we engaged USDA to conduct a thorough review of our lean beef’s labeling. After an extensive review, which included on-site evaluation of BPI’s production process and the results of taste panels and consumer surveys provided by BPI, USDA concluded that our lean beef would be properly labeled as ground beef.”&lt;/p&gt;
&lt;p&gt;This left me with more questions than answers. How exactly has the process improved? And does the decision to pursue more “consumer-oriented” products mean that BPI has plans to sell its lean beef product directly to the public? It would be a major victory for a company that has long resisted terms like “additive” and “filler”—let alone the pejorative “pink slime”—to be able to sell its product to consumers, undifferentiated on the shelf from traditional ground beef.&lt;/p&gt;
&lt;p&gt;Though a BPI spokesperson initially assured me that I’d be able to interview Craig Letch, the company’s director of food safety, Letch ultimately recanted and declined to speak to me for this story. When I sent subsequent questions by email about process changes, the BPI spokesperson responded with an additional statement:&lt;/p&gt;
&lt;p&gt;“The evolution of our process since the introduction of lean finely textured beef in the early 1990s has been both continuous and extensive,” the statement read. “Starting with changes in raw material sourcing to only boneless beef trim and continuing through virtually every stage,  as our capabilities continued to evolve and improve, it became obvious to us that we should pursue more consumer oriented means of delivering our lean beef to market—sometimes even directly to the consumer. Keeping with the values that have led us to be an industry leader in innovation, it was and is our intent to create new markets and products based upon our lean ground beef.”&lt;/p&gt;
&lt;div class=&quot;quote1left-collect&quot;&gt;&lt;span class=&quot;quote1left flex-color&quot;&gt;“I think that consumers deserve to know exactly what they’re buying.”&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;When I asked, the company denied that a consumer product is on the immediate horizon, but refused to go into detail about future plans. “It is our intent to create new markets and products based upon our lean ground beef, but we don’t have any new products to announce at this time,” the spokesperson said by email.&lt;/p&gt;
&lt;p&gt;Legally, BPI can now sell its product under the label “ground beef.” But will the rest of the world agree that’s the right term?&lt;/p&gt;
&lt;p&gt;Meatpackers and their allies seem to have no qualms.&lt;/p&gt;
&lt;p&gt;“We see USDA’s decision to update the nomenclature as a positive step forward in recognizing the evolution of the production process that produces a safe, wholesome, sustainable product,” said Eric Mittenthal, vice president of public affairs at the North American Meat Institute (NAMI), a trade organization that represents meatpackers and processors, by email.&lt;/p&gt;
&lt;p&gt;But signs suggest not everyone in the industry agrees. In an &lt;a href=&quot;http://www.meatingplace.com/Industry/News/Details/83216&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;article&lt;/a&gt; on the development published by the online trade magazine Meatingplace, commenters expressed concerns that calling BPI’s product “ground beef” could ultimately lead to a consumer backlash.&lt;/p&gt;
&lt;p&gt;“While I personally have no issues with LFTB (or whatever you want to call it) It is a bad move by the industry to hide the fact that this will be in ground beef,” one commenter wrote. “It blew up on us once before, It will blow up again.”&lt;/p&gt;
&lt;p&gt;In a comment titled “A Regulatory ‘Victory’ Beef Farmers Will Later Regret?,” another individual said that the industry’s satisfaction over the decision could be short-lived, suggesting that calling a product derived by highly mechanized means “ground beef” is a slippery slope that could pave the way for cell-cultured meat companies to use the term for their own products.&lt;/p&gt;
&lt;div class=&quot;imglarge&quot;&gt;
&lt;div id=&quot;attachment_13985&quot; class=&quot;wp-caption alignleft&quot;&gt;

&lt;p class=&quot;wp-caption-text&quot;&gt;Thanks to FSIS’s decision, there’s nothing stopping BPI from selling its product directly to the public&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But some advocates who represent cattle ranchers—not just the packing houses, which benefit most from the BPI’s technology—are proceeding with caution.&lt;/p&gt;
&lt;p&gt;“It’s not a standalone beef product—it has to be added to ground beef,” says Bill Bullard, president of R-Calf, a group that advocates for independent cattle ranchers. “So I think that consumers deserve to know exactly what they’re buying. If they are as comfortable with it as the industry says they are, then no problem. If there are some consumers that would like to avoid it for whatever reason they may have, we believe that’s the consumer’s right. So our position has always been that the consumer deserves to know what our industry is selling to him or her, and we should be very transparent on precisely what is included in the product.”&lt;/p&gt;
&lt;p&gt;It’s not like you can just go out and buy BPI’s product. For now, it’s still used only as a component ingredient. But thanks to FSIS’s decision, there’s nothing stopping the company from selling it directly to the public. The question is whether it will.&lt;/p&gt;


&lt;p class=&quot;tags tags-footer&quot;&gt;&lt;span class=&quot;tags-title&quot;&gt;&lt;a href=&quot;https://newfoodeconomy.org/category/issues/culture/&quot; rel=&quot;category tag&quot;&gt;Culture&lt;/a&gt;, &lt;a href=&quot;https://newfoodeconomy.org/category/issues/&quot; rel=&quot;category tag&quot;&gt;Issues&lt;/a&gt;, &lt;a href=&quot;https://newfoodeconomy.org/category/issues/policy/&quot; rel=&quot;category tag&quot;&gt;Policy&lt;/a&gt;, &lt;a href=&quot;https://newfoodeconomy.org/category/systems/&quot; rel=&quot;category tag&quot;&gt;Systems&lt;/a&gt;&lt;a href=&quot;https://newfoodeconomy.org/tag/beef/&quot; rel=&quot;tag&quot;&gt;beef&lt;/a&gt;&lt;a href=&quot;https://newfoodeconomy.org/tag/ground-beef/&quot; rel=&quot;tag&quot;&gt;ground beef&lt;/a&gt;&lt;a href=&quot;https://newfoodeconomy.org/tag/lawsuits/&quot; rel=&quot;tag&quot;&gt;lawsuits&lt;/a&gt;&lt;a href=&quot;https://newfoodeconomy.org/tag/meat/&quot; rel=&quot;tag&quot;&gt;meat&lt;/a&gt;&lt;a href=&quot;https://newfoodeconomy.org/tag/pink-slime/&quot; rel=&quot;tag&quot;&gt;pink slime&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Sun, 17 Feb 2019 00:33:17 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:type>article</og:type>
<og:title>ABC News called it &quot;pink slime.&quot; Now, USDA says it can be labeled &quot;ground beef.&quot; | New Food Economy</og:title>
<og:description>On the semantics of a product that scandalized America—and is now on a comeback tour.</og:description>
<og:url>https://newfoodeconomy.org/bpi-pink-slime-ground-beef-usda-reclassifed/</og:url>
<og:image>https://newfoodeconomy.org/wp-content/uploads/2019/02/bpi-pink-slime-ground-beef-label-usda-february-2019.jpg</og:image>
<dc:language>en-CA</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://newfoodeconomy.org/bpi-pink-slime-ground-beef-usda-reclassifed/</dc:identifier>
</item>
<item>
<title>Making My Own USB Keyboard from Scratch</title>
<link>http://blakesmith.me/2019/01/16/making-my-own-usb-keyboard-from-scratch.html</link>
<guid isPermaLink="true" >http://blakesmith.me/2019/01/16/making-my-own-usb-keyboard-from-scratch.html</guid>
<description>&lt;p&gt;A few months ago, I completed a project to build an entire USB keyboard from scratch. This included electronic circuit design, PCB design, firmware coding, CAD design, assembly and usage. The final result is my daily driver work keyboard, which I affectionately call “KeeBee”:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_1.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_1_sized.jpg&quot; alt=&quot;KeeBee Keyboard, completed&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A few project goals:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Implement the circuit myself&lt;/li&gt;
&lt;li&gt;Write the keyboard firmware&lt;/li&gt;
&lt;li&gt;Learn about how the USB protocol works&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For my day job, I spend most of my time building cloud software that’s many layers removed from real running hardware. It’s extremely safisfying to peel back some of the abstractions, and get closer “to the metal” building real electronic devices I can physically touch and use.&lt;/p&gt;
&lt;h3 id=&quot;research--cad-design&quot;&gt;Research &amp;amp; CAD Design&lt;/h3&gt;
&lt;p&gt;I knew I really liked the &lt;a href=&quot;https://olkb.com/&quot;&gt;OLKB&lt;/a&gt; Planck and Preonic style boards. They feature a nice minimal ortho-linear layout, that’s very compact. I also knew that I wanted to use Cherry MX Brown switches. With those two design components in mind, I started playing around with key layouts in &lt;a href=&quot;http://www.openscad.org/&quot;&gt;OpenSCAD&lt;/a&gt;. OpenSCAD is a great open source CAD design tool that functions more like a programming language than a WYSIWYG point and click mouse CAD tool.&lt;/p&gt;
&lt;p&gt;Using the dimensions from a Cherry MX datasheet, I &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/keebee/hardware/keyboard.scad&quot;&gt;hacked up a keyboard plate design&lt;/a&gt;, and then added switches and keycaps to get a feel for what the layout would look like. The top plate sits above the keyboard PCB and serves as a good switch stabilizer.&lt;/p&gt;
&lt;p&gt;Top plate design:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_2_cad.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_2_cad_sized.png&quot; alt=&quot;KeeBee CAD Plate&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With keycaps added:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_3_cad.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_3_cad_sized.png&quot; alt=&quot;KeeBee CAD Plate with Switches&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_4_cad.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_4_cad_sized.png&quot; alt=&quot;KeeBee CAD Plate with Switches&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;prototype-circuit-and-firmware-design&quot;&gt;Prototype Circuit and Firmware Design&lt;/h3&gt;
&lt;p&gt;I chose an &lt;a href=&quot;https://www.digikey.com/product-detail/en/stmicroelectronics/STM32F042K6T6/497-14647-ND/4815294&quot;&gt;STM32F042K6T6&lt;/a&gt; as the main keyboard microcontroller. It’s around $3 per chip in individual quantities, and has just enough pins to implement a 69 &lt;a href=&quot;https://en.wikipedia.org/wiki/Keyboard_matrix_circuit&quot;&gt;key scan matrix&lt;/a&gt; (32 pins in total). It sports an ARM Cortex M0 processor, and has a dedicated USB peripheral for sending out USB bits without tying up the main processor bit-banging out USB signals. I bought a &lt;a href=&quot;https://www.digikey.com/product-detail/en/NUCLEO-F042K6/497-15980-ND/5428804&quot;&gt;Nucleo prototype development board&lt;/a&gt; of this chip for experimenting with the chip before I integrated it into my PCB design. The Nucleo was easy to use on a breadboard, and power directly with USB.&lt;/p&gt;
&lt;p&gt;I breadboarded out a small 4 key circuit, to test out the &lt;a href=&quot;http://blog.komar.be/how-to-make-a-keyboard-the-matrix/&quot;&gt;diode based circuit&lt;/a&gt; I had researched. Ignoring the USB side of the equation, The first step was to just get the Cherry switches to reliably turn the 4 corresponding LEDs on and off when the button is pressed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_5_prototype.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_5_prototype_sized.jpg&quot; alt=&quot;KeeBee prototype circuit&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Keyscan Matrix circuits are a technique to use when you have more switches than you have pins on your microcontroller.&lt;/p&gt;
&lt;p&gt;After I got the &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/drivers/stm32/scan_matrix.cc&quot;&gt;keyscan matrix implementation to my liking&lt;/a&gt;, it was time to work on the USB side of the equation.&lt;/p&gt;
&lt;p&gt;The inner loop for the firmware is basically:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Scan all keys in the button keyscan matrix.&lt;/li&gt;
&lt;li&gt;Map the button locations to their respective key symbols, using the currently selected layout (QWERTY, Dvorak, etc.)&lt;/li&gt;
&lt;li&gt;Take the mappings, and generate USB HID Report packets and send them out the USB peripheral.&lt;/li&gt;
&lt;li&gt;Set an LED on the keyboard to on if a key is pressed, off if not.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;From &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/keebee/src/main.cc#L85&quot;&gt;main.cc&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scan_and_update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scan_matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_scans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendReport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key_pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MapKeyScans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_scans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;update_key_press_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;status_led&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scan_and_update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;keyboard.SendReport&lt;/code&gt; component is the piece that actually sends the USB packets to the host. I struggled a lot to get USB working correctly. There are a lot of finnicky layers to the USB protocol that require accurate timing, and correct &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/keebee/src/usb_keyboard.cc#L12&quot;&gt;device identification&lt;/a&gt;. I ended up needing to fire up Wireshark to sniff USB packets coming back and forth to my Linux laptop, in order to debug where things were getting lost on the wire. Most of my googling was pretty useless at this part of the build: suggestions I found had suggestions like, “You probably have a faulty USB device, you should get a new one.” When you’re the one actually trying to build the USB device, this isn’t really helpful. I was left reading through very large USB specifications that contain a lot of terminology that was pretty unfamiliar to me.&lt;/p&gt;
&lt;p&gt;After mucking about for awhile, I was able to get the 4 key keyboard to correctly identify itself as a USB HID (Human Interface Device) to my laptop, and make sure all my key presses were being correctly mapped to the machine:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_6_dmesg.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_6_dmesg_sized.png&quot; alt=&quot;KeeBee dmesg USB output&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Getting a USB vendor and device id requires &lt;a href=&quot;https://www.usb.org/getting-vendor-id&quot;&gt;paying a good bit of cash&lt;/a&gt;, so if you’re just doing something as a hobby, you’ll need to &lt;a href=&quot;http://www.linux-usb.org/usb.ids&quot;&gt;hijack a similar device ID&lt;/a&gt;. I thought “Gear Head” sounded cool, and they make a keyboard, so I went with that one.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_7_lsusb.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_7_lsusb_sized.png&quot; alt=&quot;KeeBee lsusb USB output&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;schematic-and-pcb-design&quot;&gt;Schematic and PCB Design&lt;/h3&gt;
&lt;p&gt;With some working firmware on a working prototype, it’s time to put the schematic and PCB design into &lt;a href=&quot;http://kicad-pcb.org/&quot;&gt;KiCAD&lt;/a&gt; and get an actual printed circuit board made. Now that I had proven the schematic design worked, it was relatively straight-forward to connect everything together schematic wise:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_8_schematic.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_8_schematic_sized.png&quot; alt=&quot;KeeBee Kicad Schematic&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After building out the schematic and selecting part footprints, we need to layout the actual physical PCB:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_9_kicad_pcb.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_9_kicad_pcb_sized.png&quot; alt=&quot;KeeBee Kicad PCB&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KiCAD has a neat feature that lets you preview your PCB in 3D:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_10_pcb_3d_front.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_10_pcb_3d_front_sized.png&quot; alt=&quot;KeeBee Kicad PCB 3D Front&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_11_pcb_3d_back.png&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_11_pcb_3d_back_sized.png&quot; alt=&quot;KeeBee Kicad PCB 3D Back&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are lots of great tutorials on how to use KiCAD. I started with Chris Gammell’s excellent &lt;a href=&quot;https://www.youtube.com/watch?v=JN_Y93RTdSo&amp;amp;list=PLy2022BX6Eso532xqrUxDT1u2p4VVsg-q&quot;&gt;Getting to Blinkey 4.0&lt;/a&gt; youtube series, where he takes you through building a LED blinker PCB circuit in KiCAD from start to finish.&lt;/p&gt;
&lt;h3 id=&quot;pcb-and-component-ordering&quot;&gt;PCB and Component Ordering&lt;/h3&gt;
&lt;p&gt;Once I was reasonably satisfied with the &lt;a href=&quot;https://github.com/blakesmith/embedded/tree/master/keebee/hardware&quot;&gt;schematic and PCB design&lt;/a&gt;, I started placing a bunch of orders:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;All the board components from the keyboard’s &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/keebee/bom.org&quot;&gt;Bill of Materials&lt;/a&gt;: Switches, LEDs, diodes, microcontrollers, etc. I like to use &lt;a href=&quot;https://www.digikey.com/&quot;&gt;DigiKey&lt;/a&gt; for most of my electronic components.&lt;/li&gt;
&lt;li&gt;The PCB itself. There are a lot of really great PCB prototype manufacturing services out there that will do small run PCB fabrication for really cheap. I’ve had great experience with &lt;a href=&quot;https://oshpark.com/&quot;&gt;OshPark&lt;/a&gt; and &lt;a href=&quot;https://jlcpcb.com/&quot;&gt;JLCPCB&lt;/a&gt;. For this project, I went with JLCPCB because of the board size cost, and because they let me pick a blue solder-mask board.&lt;/li&gt;
&lt;li&gt;Any other cases, etc. For this project, my brother in law was able to laser cut the top and bottom keyboard plates from 1/4” acryllic sheets. There are other great online laser cutting and 3D printing services for case components, if you don’t have access to the equipment.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;PCB arrival day is the the best:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_12_pcb_front.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_12_pcb_front_sized.jpg&quot; alt=&quot;KeeBee PCB front&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_13_pcb_back.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_13_pcb_back_sized.jpg&quot; alt=&quot;KeeBee PCB back&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JLCPCB is very affordable. This design was less than $30 shipped DHL from China, and took a little over a week to arrive after submitting my gerber files for order.&lt;/p&gt;
&lt;p&gt;My brother in law took my &lt;a href=&quot;https://github.com/blakesmith/embedded/blob/master/keebee/hardware/top_plate.dxf&quot;&gt;DXF files&lt;/a&gt; from OpenSCAD and tossed them in the laser cutter:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_14_laser_cutter.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_14_laser_cutter_sized.jpg&quot; alt=&quot;KeeBee Laser Cutter&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;final-assembly&quot;&gt;Final Assembly&lt;/h3&gt;
&lt;p&gt;With all the pieces ordered and fabricated, it was time to put the final keyboard together. I started with PCB component assembly: I used a soldering iron for the larger electronic components and a &lt;a href=&quot;https://learn.sparkfun.com/tutorials/how-to-use-a-hot-air-rework-station/all&quot;&gt;hot air rework station&lt;/a&gt; for the small surface mount components like the STM32 microcontroller.&lt;/p&gt;
&lt;p&gt;Total component build time for a board was roughly 3 hours - most of the time was spent soldering the 70 diodes and switches.&lt;/p&gt;
&lt;p&gt;I added a JTAG debugger pin header to the PCB, which I used to plug in a &lt;a href=&quot;https://www.adafruit.com/product/3571&quot;&gt;JLINK Edu mini&lt;/a&gt; to flash the microcontroller with the firmware with &lt;a href=&quot;http://openocd.org/&quot;&gt;OpenOCD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From there, it was final testing, and plate assembly:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_15_final1.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_15_final1_sized.jpg&quot; alt=&quot;KeeBee Final 1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_16_final2.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_16_final2_sized.jpg&quot; alt=&quot;KeeBee Final 2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_17_final3.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_17_final3_sized.jpg&quot; alt=&quot;KeeBee Final 3&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My son thought it made a great train for his animals:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_18_train.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_18_train_sized.jpg&quot; alt=&quot;KeeBee Train&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blakesmith.me/images/keebee/keebee_19_animals.jpg&quot;&gt;&lt;img src=&quot;http://blakesmith.me/images/keebee/keebee_19_animals_sized.jpg&quot; alt=&quot;KeeBee Train Animals&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;From initial idea to final assembly, this project took about 3 months time. It was extremely rewarding to make something that I still use everyday at work.&lt;/p&gt;
&lt;p&gt;All the project files are &lt;a href=&quot;https://github.com/blakesmith/embedded/tree/master/keebee&quot;&gt;up on GitHub&lt;/a&gt;, including firmware source code, PCB schematics, Bill of Materials, and CAD models.&lt;/p&gt;
&lt;p&gt;Thanks for reading, and happy hardware hacking!&lt;/p&gt;
</description>
<pubDate>Sat, 16 Feb 2019 22:57:16 +0000</pubDate>
<dc:creator>blakesmith</dc:creator>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blakesmith.me/2019/01/16/making-my-own-usb-keyboard-from-scratch.html</dc:identifier>
</item>
<item>
<title>Google backtracks on Chrome modifications that would have crippled ad blockers</title>
<link>https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/</link>
<guid isPermaLink="true" >https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/</guid>
<description>&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://zdnet4.cbsistatic.com/hub/i/2019/02/16/6421ef02-ffdf-41e4-af9d-fb182c1adad6/0687de528a14273d23aeef2498c7b572/chrome-logo.png&quot; class=&quot;&quot; alt=&quot;Chrome Logo&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;credit&quot;&gt;Image: Google // Composition: ZDNet&lt;/span&gt;
&lt;p&gt;A study analyzing the performance of Chrome ad blocker extensions published on Friday has proven wrong claims made by Google developers last month, when a controversy broke out surrounding their decision to modify the Chrome browser in such a way that would have eventually &lt;a href=&quot;https://www.zdnet.com/article/google-chrome-could-soon-kill-off-most-ad-blocker-extensions/&quot; target=&quot;_blank&quot;&gt;killed off ad blockers&lt;/a&gt; and &lt;a href=&quot;https://www.zdnet.com/article/chrome-api-update-will-kill-a-bunch-of-other-extensions-not-just-ad-blockers/&quot; target=&quot;_blank&quot;&gt;many other extensions&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;relatedContent alignRight&quot;&gt;
&lt;h3 class=&quot;heading&quot;&gt;&lt;span class=&quot;int&quot;&gt;Featured stories&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://whotracks.me/blog/adblockers_performance_study.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;The study&lt;/a&gt;, carried out by the team behind the Ghostery ad blocker, found that ad blockers had sub-millisecond impact on Chrome's network requests that could hardly be called a performance hit.&lt;/p&gt;
&lt;p&gt;Hours after the Ghostery team published its study and benchmark results, the Chrome team backtracked on their planned modifications.&lt;/p&gt;
&lt;p&gt;At the root of Ghostery's benchmark into ad blocker performance stands Manifest V3, a new standard for developing Chrome extensions that Google &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=896897&amp;amp;desc=2&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;announced&lt;/a&gt; &lt;a href=&quot;https://www.zdnet.com/article/google-to-no-longer-allow-chrome-extensions-that-use-obfuscated-code/&quot; target=&quot;_blank&quot;&gt;last October&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The long-winded &lt;a href=&quot;https://docs.google.com/document/d/1nPu6Wy4LWR66EFLeYInl3NzzhHzc-qnk4w4PX-0XMw8/edit#&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;document&lt;/a&gt; contained many new rules about what Chrome functions and APIs an extension should use. One of the modifications was for extensions that needed to intercept and work with network requests. Google wanted extension developers to use the new DeclarativeNetRequest API instead of the older webRequest API.&lt;/p&gt;

&lt;p&gt;This new API came with limitations that put a muzzle on the number of network requests an extension could access. It took some time before ad blocker developers caught on to what this meant, but when they did, all hell broke loose, with both extension developers and regular users accusing the browser maker of trying to kill third-party ad blockers for the detriment of Chrome's new built-in ad blocker (which wouldn't be impacted).&lt;/p&gt;
&lt;p&gt;Chrome engineers justified the change by citing the performance impact of not having a maximum value for the number of network requests an extension could access.&lt;/p&gt;
&lt;section class=&quot;sharethrough-top&quot; data-component=&quot;medusaContentRecommendation&quot; data-medusa-content-recommendation-options=&quot;{&amp;quot;promo&amp;quot;:&amp;quot;promo_ZD_recommendation_sharethrough_top_in_article_desktop&amp;quot;,&amp;quot;spot&amp;quot;:&amp;quot;dfp-in-article&amp;quot;}&quot;&gt;
&lt;/section&gt;&lt;p&gt;But the Ghostery team disagreed with this assessment.&lt;/p&gt;
&lt;p&gt;&quot;This work [referring to the study] was motivated by one of the claims formulated in the Manifest V3 proposal of the Chromium project: 'the extension then performs arbitrary (and potentially very slow) JavaScript', talking about content-blockers' ability to process all network requests,&quot; said Cliqz, the company behind the Ghostery ad blocker.&lt;/p&gt;
&lt;p&gt;&quot;From the measurements, we do not think this claim holds, as all popular content-blockers are already very efficient and should not incur any noticeable slow-down for users,&quot; they added.&lt;/p&gt;
&lt;p&gt;Their study --which analyzed the network performance of ad blockers such as uBlock Origin, Adblock Plus, Brave, DuckDuckGo and Cliqz'z Ghostery-- found sub-millisecond median decision times per request, showing quite the opposite of what the Chrome team claimed.&lt;/p&gt;
&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/&quot; class=&quot;lazy&quot; alt=&quot;Ghostery benchmark results&quot; height=&quot;auto&quot; width=&quot;370&quot; data-original=&quot; https://zdnet2.cbsistatic.com/hub/i/r/2019/02/16/b820a9d2-e06f-4315-a75a-fcb49cb7aef7/resize/370xauto/ef1aa57b3d239eeb12a242e7bc016f55/ghostery-benchmark-results.png&quot;/&gt;&lt;/span&gt;&lt;noscript&gt;
&lt;p&gt;&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://zdnet2.cbsistatic.com/hub/i/r/2019/02/16/b820a9d2-e06f-4315-a75a-fcb49cb7aef7/resize/370xauto/ef1aa57b3d239eeb12a242e7bc016f55/ghostery-benchmark-results.png&quot; class=&quot;&quot; alt=&quot;Ghostery benchmark results&quot; height=&quot;auto&quot; width=&quot;370&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;span class=&quot;credit&quot;&gt;Image: Cliqz // Composition: ZDNet&lt;/span&gt;
&lt;p&gt;Following the publication of this study, Google engineers made it official on a &lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!topic/chromium-extensions/WcZ42Iqon_M&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Google Groups posting&lt;/a&gt; hours later, announcing a relaxation of the Manifest V3 changes that would have impacted ad blockers.&lt;/p&gt;
&lt;p&gt;&quot;Another clarification is that the webRequest API is &lt;strong&gt;not&lt;/strong&gt; going to be fully removed as part of Manifest V3,&quot; said Chrome engineer Devlin Cronin [emphasis his].&lt;/p&gt;
&lt;p&gt;&quot;The extensions ecosystem on Chrome is vibrant and varied, and enables myriad use cases that would otherwise be impossible,&quot; Cronin added. &quot;We are committed to preserving that ecosystem and ensuring that users can continue to customize the Chrome browser to meet their needs. This includes continuing to support extensions, including content blockers, developer tools, accessibility features, and many others. It is &lt;strong&gt;not&lt;/strong&gt;, nor has it ever been, our goal to prevent or break content blocking.&quot;&lt;/p&gt;
&lt;p&gt;Chrome's decision to ship the ad-blocker-breaking features was doomed from the start. Regular users have grown attached to their ad blockers, and for obvious reasons. Ad blockers may come with some sort of performance impact, but they also have benefits, which haven't gone unnoticed by end users.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://www.ghostery.com/lp/trackertax/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;May 2018 study&lt;/a&gt; from the same Ghostery team found that pages tend to load up to twice as fast when using an ad blocker.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/patrickhulce/third-party-web&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Another study&lt;/a&gt; released this week by software engineer Patrick Hulce showed that advertising code accounts for the largest chunk of the JavaScript execution tasks performed by a browser --giving users a good reason to block them.&lt;/p&gt;
&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/&quot; class=&quot;lazy&quot; alt=&quot;Hulce study results&quot; height=&quot;auto&quot; width=&quot;370&quot; data-original=&quot; https://zdnet4.cbsistatic.com/hub/i/r/2019/02/16/0598af19-2737-4369-8b3b-5e72baa6d4f6/resize/370xauto/772c1353358828af46e8ee9a87533533/hulce-study.png&quot;/&gt;&lt;/span&gt;&lt;noscript&gt;
&lt;p&gt;&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://zdnet4.cbsistatic.com/hub/i/r/2019/02/16/0598af19-2737-4369-8b3b-5e72baa6d4f6/resize/370xauto/772c1353358828af46e8ee9a87533533/hulce-study.png&quot; class=&quot;&quot; alt=&quot;Hulce study results&quot; height=&quot;auto&quot; width=&quot;370&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;span class=&quot;credit&quot;&gt;Image: Patrick Hulce&lt;/span&gt;
&lt;p&gt;A &lt;a href=&quot;https://www.debugbear.com/blog/measuring-the-performance-impact-of-chrome-extensions&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;DebugBear study&lt;/a&gt; from December 2018 also showed that ad blockers don't impact Chrome performance as much as people think, with other extensions bringing a bigger hit to CPU consumption, page download size, and user experience.&lt;/p&gt;
&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/&quot; class=&quot;lazy&quot; alt=&quot;DebugBear study results&quot; height=&quot;auto&quot; width=&quot;370&quot; data-original=&quot; https://zdnet2.cbsistatic.com/hub/i/r/2019/02/16/49c81965-0023-4eff-9e3d-15fa28ba2b9a/resize/370xauto/271fb8dd1a1b7c89877322ae1e8d9725/debugbear.png&quot;/&gt;&lt;/span&gt;&lt;noscript&gt;
&lt;p&gt;&lt;span class=&quot;img aspect-set&quot;&gt;&lt;img src=&quot;https://zdnet2.cbsistatic.com/hub/i/r/2019/02/16/49c81965-0023-4eff-9e3d-15fa28ba2b9a/resize/370xauto/271fb8dd1a1b7c89877322ae1e8d9725/debugbear.png&quot; class=&quot;&quot; alt=&quot;DebugBear study results&quot; height=&quot;auto&quot; width=&quot;370&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;span class=&quot;credit&quot;&gt;Image: DebugBear&lt;/span&gt;

&lt;h3&gt;More browser coverage:&lt;/h3&gt;
</description>
<pubDate>Sat, 16 Feb 2019 22:35:27 +0000</pubDate>
<dc:creator>jiaweihli</dc:creator>
<og:type>article</og:type>
<og:url>https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/</og:url>
<og:title>Google backtracks on Chrome modifications that would have crippled ad blockers | ZDNet</og:title>
<og:description>Google changes stance on upcoming Chrome Manifest V3 changes as benchmark shows they lied about performance hit.</og:description>
<og:image>https://zdnet4.cbsistatic.com/hub/i/r/2019/02/16/6421ef02-ffdf-41e4-af9d-fb182c1adad6/thumbnail/770x578/2d8940b857ae493b260a4978a3bb0dd0/chrome-logo.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.zdnet.com/article/google-backtracks-on-chrome-modifications-that-would-have-crippled-ad-blockers/</dc:identifier>
</item>
<item>
<title>Finding Lena Forsen, the Patron Saint of JPEGs</title>
<link>https://www.wired.com/story/finding-lena-the-patron-saint-of-jpegs/</link>
<guid isPermaLink="true" >https://www.wired.com/story/finding-lena-the-patron-saint-of-jpegs/</guid>
<description>&lt;section class=&quot;section-break-component&quot; readability=&quot;93.487014534191&quot;&gt;&lt;div class=&quot;callout-embed-component intro&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;span class=&quot;lede&quot;&gt;Every morning, Lena&lt;/span&gt; Forsen wakes up beneath a brass-trimmed wooden mantel clock dedicated to “The First Lady of the Internet.”&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;lede&quot;&gt;It was presented&lt;/span&gt; to her more than two decades ago by the Society for Imaging Science and Technology, in recognition of the pivotal—and altogether unexpected—role she played in shaping the digital world as we know it.&lt;/p&gt;
&lt;p&gt;Among some computer engineers, Lena is a mythic figure, a mononym on par with Woz or Zuck. Whether or not you know her face, you’ve used the technology it helped create; practically every photo you’ve ever taken, every website you’ve ever visited, every meme you’ve ever shared owes some small debt to Lena. Yet today, as a 67-year-old retiree living in her native Sweden, she remains a little mystified by her own fame. “I’m just surprised that it never ends,” she told me recently.&lt;/p&gt;
&lt;p&gt;Lena’s path to iconhood began in the pages of &lt;em&gt;Playboy&lt;/em&gt;. In 1972, at the age of 21, she appeared as Miss November, wearing nothing but a feathered sun hat, boots, stockings, and a pink boa. (At her suggestion, the editors spelled her first name with an extra “n,” to encourage proper pronunciation. “I didn’t want to be called &lt;em&gt;Lee&lt;/em&gt;na,” she explained.)&lt;/p&gt;
&lt;p&gt;About six months later, a copy of the issue turned up at the University of Southern California’s Signal and Image Processing Institute, where Alexander Sawchuk and his team happened to be looking for a new photograph against which to test their latest compression algorithm—the math that would make unwieldy image files manageable. Lena’s glossy centerfold, with its complex mixture of colors and textures, was the perfect candidate. They tore off the top third of the spread, ran it through a set of analog-to-digital converters, and saved the resulting 512-line scan to their Hewlett-Packard 2100. (Sawchuk did not respond to requests for comment.)&lt;/p&gt;


&lt;p&gt;The USC team proudly handed out copies to lab visitors, and soon the image of the young model looking coquettishly over her bare shoulder became an industry standard, replicated and reanalyzed billions of times as what we now know as the JPEG came into being. &lt;a href=&quot;https://procomm.ieee.org/wp-content/uploads/2013/05/may_jun01.pdf&quot; target=&quot;_blank&quot;&gt;According to James Hutchinson&lt;/a&gt;, an editor at the University of Illinois College of Engineering, Lena was for engineers “something like what Rita Hayworth was for US soldiers in the trenches of World War II.”&lt;/p&gt;
&lt;p&gt;They wrote poems in her honor, added their own artistic flourishes to her likeness, and gave the centerfold image a nickname befitting a Renaissance portrait: “The Lenna.” In the 1973 movie &lt;em&gt;Sleeper&lt;/em&gt;, when the protagonist wakes up in the year 2173, he is asked to identify images from the past, including photos of Stalin, de Gaulle, and Lena. These days, although her image shows up mostly on media studies syllabi and in coders’ forums, it is universally acknowledged as an indelible piece of internet history.&lt;/p&gt;
&lt;p&gt;For almost as long as the Lenna has been idolized among computer scientists, however, it has also been a source of controversy. “I have heard feminists argue that the image should be retired,” David C. Munson Jr., current president of the Rochester Institute of Technology, &lt;a href=&quot;https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;amp;arnumber=8100841&quot; target=&quot;_blank&quot;&gt;wrote back in 1996&lt;/a&gt;. Yet, 19 years later, the Lenna remained so ubiquitous that Maddie Zug, a high school senior from Virginia, felt compelled to write &lt;a href=&quot;https://www.washingtonpost.com/opinions/a-playboy-centerfold-does-not-belong-in-tj-classrooms/2015/04/24/76e87fa4-e47a-11e4-81ea-0649268f729e_story.html?&quot; target=&quot;_blank&quot;&gt;an op-ed about it in &lt;em&gt;The Washington Post&lt;/em&gt;&lt;/a&gt;. The image, she explained, had elicited “sexual comments” from the boys in her class, and its continuing inclusion in the curriculum was evidence of a broader “culture issue.”&lt;/p&gt;
&lt;p&gt;Deanna Needell, a math professor at UCLA, had &lt;a href=&quot;https://www.cmc.edu/news/every-picture-tells-a-story&quot; target=&quot;_blank&quot;&gt;similar memories from college&lt;/a&gt;, so in 2013 she and a colleague staged a quiet protest: They acquired the rights to a head shot of the male model Fabio Lanzoni and &lt;a href=&quot;https://epubs.siam.org/doi/abs/10.1137/120868281&quot; target=&quot;_blank&quot;&gt;used that for their imaging research&lt;/a&gt; instead. But perhaps the most stringent critic of the image is Emily Chang, author of &lt;em&gt;Brotopia&lt;/em&gt;. “The prolific use of Lena’s photo can be seen as a harbinger of behavior within the tech industry,” she writes in the book’s opening chapter. “In Silicon Valley today, women are second-class citizens and most men are blind to it.” For Chang, the moment that Lena’s centerfold was torn and scanned marked “tech’s original sin.”&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;section-break-component&quot; readability=&quot;128.34151128557&quot;&gt;&lt;p&gt;&lt;span class=&quot;lede&quot;&gt;One voice that&lt;/span&gt; has been conspicuously missing from the Lenna debate is that of Lena herself. The first and last time she spoke with the American press was in 1997, at the same conference where she was given her beloved mantel clock. (WIRED ran a &lt;a href=&quot;http://www.lenna.org/wired_backups/4000.html&quot; target=&quot;_blank&quot;&gt;short article&lt;/a&gt; on the visit titled “Playmate Meets Geeks Who Made Her a Net Star.”)&lt;/p&gt;
&lt;p&gt;Jeff Seideman, a former chapter president of the Society for Imaging Science and Technology, recalls that Lena’s presence at the conference caused a stir among his colleagues. “As silly as it sounds, they were surprised she was a real person,” he told me. “After some of them had spent 25 years looking at her picture, she just became this test image.” Since then, as the internet has grown to encompass billions of users and trillions of photos, no one has bothered to ask her what she makes of her image and its controversial afterlife.&lt;/p&gt;
&lt;div class=&quot;inset-left-component inset-left-component--image&quot; readability=&quot;6.5&quot;&gt;

&lt;div class=&quot;caption-component__caption&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;“I’m just surprised that it never ends,” Forsen says about her unusual fame.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;cite class=&quot;caption-component__credit&quot;&gt;Anna Huix&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I started looking for Lena about a year ago. For a first lady, she was remarkably difficult to find. After a series of fruitless searches, I discovered that the last time she’d appeared in public was in 2015, as a “special guest” at an image processing industry conference in Quebec City. &lt;a href=&quot;https://www.flickr.com/photos/icip2015/22672017426/in/album-72157658355011344/&quot; target=&quot;_blank&quot;&gt;Photographs of the event&lt;/a&gt; showed her stepping onstage through a glistening projection of her younger self. I reached out to the conference organizers, who said that they no longer had her contact information and that the man who had orchestrated her visit had died. Finally, the chair of the conference, an academic named Jean-Luc Dugelay, agreed to put us in touch. He cautioned, though, that Lena might well decline. “She is now apart from all of that,” he wrote.&lt;/p&gt;
&lt;p&gt;That's how, on a sweltering summer day in Stockholm, the object of tech’s original sin, the apple to Sawchuk’s Eve, came walking toward me. She’d told me to meet her on the Stureplan, a busy central square in one of the capital’s tonier districts. I waited under a large mushroom-shaped public sculpture, which provided much-needed shade. On a building nearby, a digital billboard flashed an ad for the Samsung S9+, showcasing its crisp camera.&lt;/p&gt;

&lt;p&gt;Soon, two older women emerged from a side street. Lena had brought a friend along, presumably to make sure I was a safe interlocutor. She wore a black and white printed sundress and pink Birkenstocks. Her gray hair was cropped close at the sides and crescendoed into graceful spikes, and her brightly manicured nails matched her shoes. “I am Lena,” she said, extending her hand. “How can I help you?” Together, we made our way into an upscale mall nearby and settled into a quiet corner in its posh café. Lena ordered a hot coffee, wiped her glasses, and began to tell me her story.&lt;/p&gt;

&lt;p&gt;We started from the beginning. After finishing high school, Lena had moved to the US to work as an au pair for one of her relatives. She’d planned to stay a year, but that turned into eight. By 1971, she was living in Chicago, newly married and trying to make ends meet. Her husband at the time encouraged her to sign up with a local modeling agency. “I was too short to do a lot of clothes, but I did some jewelry and some catalogs, and then I got in contact with &lt;em&gt;Playboy&lt;/em&gt;,” she said. “They wanted my mouth for a cover.” She was introduced to a photographer named Dwight Hooker, who asked whether she might be interested in some “&lt;em&gt;Playboy&lt;/em&gt; pictures.” “I didn’t really know what that was,” she told me. “But my husband, he thought it was kind of cool, and it was money, and I didn’t have a lot of money.”&lt;/p&gt;
&lt;p&gt;After her centerfold photos were published, Lena, green card in hand, got a divorce and a new boyfriend. &lt;em&gt;Playboy&lt;/em&gt; invited her to Hugh Hefner’s Beverly Hills mansion, but she declined. “We all had to go there and look at Hefner in his morning robe,” she explained. “He wanted me to come to California, but I wasn’t interested. That was not my ambition.”&lt;/p&gt;
&lt;p&gt;Instead, with her boyfriend, she moved to Rochester, New York, and took a job working as a Kodak model. She became one of the company’s “Shirleys”—beautiful women whose images were used to calibrate color film. (The moniker comes from the first woman to hold the position, Shirley Page.) It was an easy eight-to-four gig that allowed Lena, some nights, to work the evening shift as a bartender at the local Marriott.&lt;/p&gt;
&lt;p&gt;In one photo from that period, she poses invitingly, with a book and an umbrella, beside a Kodak Readymatic Processor, Model 420. In another, she smiles on the cover of the 1973 Kodak &lt;em&gt;Picture-Taking&lt;/em&gt; catalog, holding up a video camera and microphone. The cover of the Xerox 7700 instruction manual shows Lena’s wide-eyed face superimposed on an image of the photocopier, as if she came along with the packaging, the girl in the machine.&lt;/p&gt;

&lt;div class=&quot;js-skip-wide-content large-component large-component--image&quot; readability=&quot;32.5&quot;&gt;

&lt;div class=&quot;caption-component__caption&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;In the 1970s, Forsen worked as a model. Photos of her ended up on the covers of image-related product catalogs from Kodak and Xerox and her famous &lt;em&gt;Playboy&lt;/em&gt; shot was featured on the front of a PhD thesis on image processing.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;cite class=&quot;caption-component__credit&quot;&gt;Anna Huix&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The fact that Lena’s image proliferated at this particular moment in history hardly feels like a coincidence. The &lt;a href=&quot;https://www.history.com/news/human-computers-women-at-nasa&quot; target=&quot;_blank&quot;&gt;small army of women&lt;/a&gt; who had worked as so-called computers during the first half of the 20th century were leaving the tech industry in droves, as computing went from being perceived as a form of menial labor to a more cerebral, masculine pursuit.&lt;/p&gt;
&lt;p&gt;“In 1973, at the moment that her picture was being brought into the lab, there were hundreds if not thousands of women being pushed out,” said Marie Hicks, a historian of technology and author of &lt;em&gt;Programmed Inequality&lt;/em&gt;.&lt;sup&gt;1&lt;/sup&gt; “All this happened for a reason. If they hadn’t used a &lt;em&gt;Playboy&lt;/em&gt; centerfold, they almost certainly would have used another picture of a pretty white woman. The &lt;em&gt;Playboy&lt;/em&gt; thing gets our attention, but really what it’s about is this world-building that’s gone on in computing from the beginning—it’s about building worlds for certain people and not for others.”&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;section-break-component&quot; readability=&quot;116.0802414344&quot;&gt;&lt;p&gt;&lt;span class=&quot;lede&quot;&gt;Through her work&lt;/span&gt; for &lt;em&gt;Playboy&lt;/em&gt; and Kodak, Lena joined a very particular sisterhood of muses, past and present. In the late 19th century, the story goes, Parisian morticians were so taken by the beauty of an anonymous young woman whose body had washed up in the Seine that they commissioned a death mask and began selling copies. She became known as L’Inconnue de la Seine, the Unknown Woman of the Seine. Her face mask inspired artists and novelists for the next half century, at which time it came into use as a model for first-aid mannequins.&lt;/p&gt;
&lt;p&gt;Similarly, in the early 20th century, the model Audrey Munson’s body was reproduced in iron and marble statues around the world. While she was well-known at the height of her short career, she faded quickly from public view and died just as her image still lives: anonymously. Munson’s likeness adorns many of New York’s bridges and buildings, but until recently no one knew &lt;a href=&quot;https://believermag.com/descending-night/&quot; target=&quot;_blank&quot;&gt;her story&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both Munson and L’Inconnue are predecessors of the hundreds of women whose images were used to calibrate the coloring of 20th-century photography and film. These women’s identities shaped the technologies that their bodies were used to create: When, in the 1950s, Kodak first began employing Shirleys, they were overwhelmingly white, with the result that darker skin tones were less likely to be captured faithfully by Kodak film. (By the 1990s, Kodak began using multiracial Shirleys.) Shirley Page, meanwhile, has disappeared from the public record; NPR &lt;a href=&quot;https://www.npr.org/2014/11/13/363517842/for-decades-kodak-s-shirley-cards-set-photography-s-skin-tone-standard&quot; target=&quot;_blank&quot;&gt;spent months&lt;/a&gt; trying to find her, to no avail.&lt;/p&gt;
&lt;p&gt;The trend continued into this century. Suzanne Vega had &lt;a href=&quot;https://opinionator.blogs.nytimes.com/2008/09/23/toms-essay/&quot; target=&quot;_blank&quot;&gt;no idea&lt;/a&gt; that her voice had been used to create the first MP3 until a dad at her child’s nursery school congratulated her on being “The Mother of the MP3.” Two decades later, the voice actor Susan Bennett received a call from a friend who wanted to know why Apple’s new voice assistant sounded so familiar; Bennett, it turned out, was Siri. A passing glance at this peculiar genealogy reveals how deeply these women’s faces and voices are integrated into technology, even as their names and thoughts and lives are so often ignored.&lt;/p&gt;
&lt;p&gt;Lena, for her part, is still bewildered at what has become of her image. “When I was in Quebec, this girl came up to me and she said, ‘I think I know every freckle on your face,’” she recalled. “She was like, ‘Oh, you’re real. You’re a person.’ It was crazy.” But as she told me her life story, recalling her trips from America to Sweden, her marriages and jobs, the lives of her children and grandchildren, it became abundantly clear that the &lt;em&gt;Playboy&lt;/em&gt; episode and its aftermath is a curious footnote, a part of her life that she has been largely excluded from, if only because no one thought to tell her very much about it.&lt;/p&gt;
&lt;p&gt;When I asked her if she had heard anything about the recent controversy around her image, she seemed alarmed at the thought that she could have a part in hurting or discouraging young women. I sent her some articles about the Lenna and later gave her a call to see what she made of them. The photo, she said, doesn’t show very much—just down to her shoulders—so it was hard for her to see what the big deal was. “When I read about the girl in the class with all boys, I can understand that she was the only girl, and, well, boys talk,” Lena said. “Maybe they’d been looking at the whole picture.”&lt;/p&gt;


&lt;div class=&quot;caption-component__caption&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Forsen, photographed at her home in Södertälje, Sweden, on January 13, 2019.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;cite class=&quot;caption-component__credit&quot;&gt;Anna Huix&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;Lena doesn’t harbor any resentment toward Sawchuk and his imitators for how they appropriated her image; the only note of regret she expressed was that she wasn’t better compensated. In her view, the photograph is an immense accomplishment that just happened to take on a life of its own. “I’m really proud of that picture,” she said.&lt;/p&gt;
&lt;p&gt;It makes sense that she would feel this way: Unlike so many women in tech, Lena has at least been acknowledged, even feted, for her contribution. “She did that work, and then people started using the photo in this neat new way, and now she kind of has this immortality woven into the design of the machine,” Hicks said. “That’s why others, who are concerned about tech bias, have a problem with it. It’s intentionally designing systems around a particular set of power relationships.”&lt;/p&gt;
&lt;p&gt;Just as Lena’s identity has been occluded from the Lenna, the Lenna no longer feels like a part of the real woman's life. The intervening decades have made the details fuzzier, the times and places harder to recall while her image has been rendered ever richer by generations of engineers.&lt;/p&gt;
&lt;p&gt;From Sweden, she tried to read about the Lenna but slowly lost track of the story. “It was so far away,” she said. Her son works in tech, and he has occasionally tried to explain to his mother how her image is used and to what ends. “He works with pixels,” she said. “I don’t understand, but I think I’ve made some good.”&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;em&gt;Correction appended, 1/31/19, 7 pm EDT: This story has been updated to correct the spelling of Marie Hicks’ name.&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Linda Kinstler (&lt;a href=&quot;https://twitter.com/lindakinstler&quot; target=&quot;_blank&quot;&gt;@lindakinstler&lt;/a&gt;) is a freelance writer based in Berkeley, California.&lt;/em&gt;&lt;/p&gt;

&lt;hr/&gt;&lt;h3&gt;More Great WIRED Stories&lt;/h3&gt;
&lt;/section&gt;</description>
<pubDate>Sat, 16 Feb 2019 22:10:22 +0000</pubDate>
<dc:creator>lelf</dc:creator>
<og:type>article</og:type>
<og:title>Finding Lena, the Patron Saint of JPEGs</og:title>
<og:description>In 1972, a photo of a Swedish Playboy model was used to engineer the digital image format that would become the JPEG. The model herself was mostly a mystery—until now.</og:description>
<og:image>https://media.wired.com/photos/5c523ece95d28a2cb5b76db1/191:100/pass/Backchannel-Lena-Soderberg-FA.jpg</og:image>
<og:url>https://www.wired.com/story/finding-lena-the-patron-saint-of-jpegs/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wired.com/story/finding-lena-the-patron-saint-of-jpegs/</dc:identifier>
</item>
<item>
<title>Why I hate the weekends (2017)</title>
<link>https://www.cdahmedeh.net/blog/2017/4/15/why-i-hate-the-weekends</link>
<guid isPermaLink="true" >https://www.cdahmedeh.net/blog/2017/4/15/why-i-hate-the-weekends</guid>
<description>&lt;div class=&quot;sqs-layout sqs-grid-12 columns-12&quot; data-layout-label=&quot;Post Body&quot; data-type=&quot;item&quot; data-updated-on=&quot;1492300201456&quot; id=&quot;item-58f2b164414fb52e416832ff&quot;&gt;
&lt;div class=&quot;row sqs-row&quot;&gt;
&lt;div class=&quot;col sqs-col-12 span-12&quot;&gt;
&lt;div class=&quot;sqs-block html-block sqs-block-html&quot; data-block-type=&quot;2&quot; id=&quot;block-4d32932539d24c4095a7&quot;&gt;
&lt;div class=&quot;sqs-block-content&quot;&gt;
&lt;p&gt;It's Monday, the dreadful countdown has started. You're already thinking about the end of the week, and it barely started. As the days go by, you are fixated on Friday 5pm. By Friday afternoon, your mind is so overfilled with the prospect of the two-day break that you can barely get anything done anymore. Some of your co-workers are not even at their desks anymore; they left early. When it's your turn to leave, you breathe a sigh of relief. It's the moment you've been waiting for. The start of the &lt;em&gt;weekend&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;However, what's so odd is that it's already Monday again. The weekend was a blur. Everything that didn't fit the workday was squeezed into the weekend. Groceries, laundry, chores, medical appointments and so on. By the time you've finished all that it's Sunday evening. Just like work, the weekend made you tired. You want to idle, but tomorrow's Monday and you've already begun thinking about work. You don't have time to do anything anymore because you need to sleep early to wake up for work on time.&lt;/p&gt;
&lt;p&gt;Our lives are high maintenance. We need to maintain our relationships with our spouses, friends and family. We need to take care of ourselves with exercise, hygiene and so on. Our houses need to be kept clean and our fridge full of food. And to be able to do all that, we need work to make a wage so we can pay for what keeps us alive.&lt;/p&gt;
&lt;p&gt;With only two-day weekends, we find ourselves squeezing all that maintenance in such a short span of time. We meet with our friends on Saturday. We do the groceries on Sunday. We do the Laundry on Saturday morning. Little time is left to do what we enjoy. For some, it's simply watching TV shows. For others, it's learning a new art.&lt;/p&gt;
&lt;p&gt;The worst part is there is hardly any time for resting the mind and body. Our jobs can be mentally and physically demanding. Our relationships and our chores demand it too. It feels like being on an endless treadmill and there is no way to stop it. Many experience burnout or depression due to excessive stress and little break.&lt;/p&gt;
&lt;p&gt;It's clear that the two days we yearn for so much every week are not enough.&lt;/p&gt;
&lt;p&gt;Almost every month, there is a statuary holiday which extends the weekend by a single day. Oddly enough, after those weekends end, I find myself more at peace and rested. The first day of work after feels smoother and I'm not as stressed out.&lt;/p&gt;
&lt;p&gt;Personally, I have tried to extend the weekend as much as possible. I do the laundry on weekdays, I shop for groceries on a weekday late at night. I try to meet my friends on weekdays. I do all that hoping that my weekend would be empty of such obligations and I would have it all to myself.&lt;/p&gt;
&lt;p&gt;I want to spend time partaking in my hobbies on the weekend. However, I often find myself lifeless and staring blankly out the window. My mind is tired, my body is fatigued. By the time I'm fully rested it's Sunday night. At that point, it's time to head to bed and start the cycle of work again.&lt;/p&gt;
&lt;p&gt;I feel like my whole life is centered around work. Even though I work a (what is considered) reasonable 40-hour work-week, I feel like too much of time is taken away from me. Not only is it actually being in the office but commuting too. My morning are devoted to getting ready for work: dressing up, packing up a lunch and so on. When I get back in the evening, I have to empty my mind of work and that can take a while. Only a few hours a day are left for me.&lt;/p&gt;
&lt;p&gt;I'm a backend software developer and writing code requires plenty of creativity and thought. There's only so much I can muster before my mind quits. On top of that, I'm mentally ill and thoroughly medicated meaning I need even more rest. However, I hear co-workers who are healthier and more productive than complain about the same things I do. No matter how much fun I have at work, I still get tired. Everyone does and everyone needs rest after that. Even caffeine, energy drinks and modafinil can't fix that.&lt;/p&gt;
&lt;p&gt;When I first started writing this, I thought that the problem was the weekends were too short. However, it is that weeks that are composed of 168 hours are not enough to account for 40 hours of dedicated work. Our body and minds cannot optimally function without adequate rest and breaks. We're not made for it. Our lives are demanding and work is demanding too much of our lives.&lt;/p&gt;
&lt;p&gt;Even though modern society has allowed us to come really far when it comes work ethic, I don't think we are far enough yet. Our basic needs, our own desires, our dreams, our physiologies and psychologies need to be taken into account when we rethink what an ethical and humane work-week looks like.&lt;/p&gt;
&lt;p&gt;We are no longer factory workers where our output is proportional to the company's sales figures. Machines and automation are taking over the remedial roles that we used to do. Today, we are artists and developers and managers and service providers. What we do might not make any money at all. Still, what we do demands of us quite a bit and to provide more, we need to do less.&lt;/p&gt;
&lt;p&gt;I'm convinced that we need more time devoted to ourselves and those we care about. I want to spend more time caring for myself but I can't because I'm stuck in the system. To live, I need to pay my bills. I'm not lucky so I have to spend most of day working for it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=19180339&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Someone has submitted this blog post to Hacker News. I encourage to continue the discussion there.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Sat, 16 Feb 2019 19:07:10 +0000</pubDate>
<dc:creator>rajeshmr</dc:creator>
<og:title>Why I hate the weekends…</og:title>
<og:url>http://www.cdahmedeh.net/blog/2017/4/15/why-i-hate-the-weekends</og:url>
<og:type>article</og:type>
<og:description>It's Monday, the dreadful countdown has started. You're already thinking about the end of the week, and it barely started. As the days go by, you are fixated on Friday 5pm. By Friday afternoon, your mind is so overfilled with the prospect of the two-day break that you can barely get anything done an</og:description>
<dc:language>en-CA</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cdahmedeh.net/blog/2017/4/15/why-i-hate-the-weekends</dc:identifier>
</item>
<item>
<title>We Must Revive Gopherspace (2017)</title>
<link>https://box.matto.nl/revivegopher.html</link>
<guid isPermaLink="true" >https://box.matto.nl/revivegopher.html</guid>
<description>&lt;p&gt;Last edited &lt;time datetime=&quot;2017-12-28T15:49:13Z&quot;&gt;Thu Dec 28 15:49:13 2017&lt;/time&gt;&lt;/p&gt;
&lt;p&gt;Both the world of html and the world of Gopher orginate from the same era. The world wide web of html has become huge. Gopherspace not.&lt;/p&gt;
&lt;h2&gt;The web has changed&lt;/h2&gt;
&lt;p&gt;Although the world wide web is a huge success, it also has turned into an area of great concern. Every step you take on the web, every site you visit, every page you view, is used to create and enhance a profile about you. Everything you do is carefully tracked and monitored.&lt;/p&gt;
&lt;h2&gt;Surveillance marketing is evil.&lt;/h2&gt;
&lt;p&gt;Google, who once started with the core value of &quot;do no evil&quot; has become one of the most privacy invading organisations, just like Facebook and some others.&lt;/p&gt;
&lt;p&gt;Webpages once started as just text, and later got also images. Today, a webpage consists of a number of javascript files. a lot of links to surveillance marketeers, links to Facebook Twitter, Google, Instagram and so on, and than some content in a html file.&lt;/p&gt;
&lt;p&gt;Many websites and many webpages do not exist to give you information, but to sell you advertisements, to lure you to commerial webpages or to sell your private information to a surveillance marketing to build your profile.&lt;/p&gt;
&lt;h2&gt;Gopherspace is not evil&lt;/h2&gt;
&lt;p&gt;Maybe Gopher's weakness proves the be its biggest strength.&lt;/p&gt;
&lt;p&gt;Gopher is a much feature-less protocol than html. This is probably why it lost the race from html. But this not only makes Gopher flying fast, it also protects you from all those evil properties of the world wide web. Trackers have no change in Gopherspace.&lt;/p&gt;
&lt;p&gt;Surveillance marketing can not thrive in Gopherspace.&lt;/p&gt;
&lt;h2&gt;We must revive Gopherspace&lt;/h2&gt;
&lt;p&gt;Everybody has given op on Gopher. Hardly any browser supports it any more. There are just a few Gopher servers left.&lt;/p&gt;
&lt;p&gt;In order to make a comeback, Gopherspace needs two things:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;People visiting Gopherspace&lt;/li&gt;
&lt;li&gt;Contemporary content&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We need more people using Gopher. So, spread the word. Start using it yourself. Ask creators of webbrowsers to revive their support of Gopher. Or create a plugin.&lt;/p&gt;
&lt;h2&gt;If you build it, they will come.&lt;/h2&gt;
&lt;p&gt;Most of the content on Gopherspace is outdated. Often it is kept alive out of nostalgia. This is great, but not if there are no gopher sources that provide contemporary content.&lt;/p&gt;
&lt;p&gt;This is where the technically less challanged folks come in. This is what you can do.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can set up a gopher server. It is not that hard.&lt;/li&gt;
&lt;li&gt;You can add content to Gopherspace.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Got a blog? Got a website? Put a Gopher server along side of it, and share content on both platforms.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;gopher://box.matto.nl:70&quot;&gt;I have already started&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 16 Feb 2019 15:14:45 +0000</pubDate>
<dc:creator>stargrave</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://box.matto.nl/revivegopher.html</dc:identifier>
</item>
<item>
<title>Google .dev domain early access</title>
<link>https://domains.google/tld/dev/</link>
<guid isPermaLink="true" >https://domains.google/tld/dev/</guid>
<description>&lt;p&gt;The Early Access Fee is a one-time payment to secure your desired .dev domain early. From February 19th at 8:00am PST to February 28th at 7:59am PST, you can get a .dev domain before General Availability for an additional fee (this fee decreases the closer we get to General Availability). During General Availability, starting February 28th at 8:00 PST, .dev domains will be available without an Early Access Fee.&lt;/p&gt;
&lt;p&gt;During both the Early Access Program and General Availability, there is a $12/year cost for .dev domains. Annual fees may vary for Premium domains.&lt;/p&gt;
</description>
<pubDate>Sat, 16 Feb 2019 14:52:53 +0000</pubDate>
<dc:creator>jonseitz</dc:creator>
<og:image></og:image>
<og:title>Google Domains .dev Early Access Program</og:title>
<og:type>website</og:type>
<og:url>https://domains.google/tld/dev/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://domains.google/tld/dev/</dc:identifier>
</item>
<item>
<title>How to Secure a Linux Server</title>
<link>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</link>
<guid isPermaLink="true" >https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;An evolving how-to guide for securing a Linux server that, hopefully, also teaches you a little about security and why it matters.&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;(TOC made with &lt;a href=&quot;https://imthenachoman.github.io/nGitHubTOC/&quot; rel=&quot;nofollow&quot;&gt;nGitHubTOC&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;h3&gt;Guide Objective&lt;/h3&gt;
&lt;p&gt;This guide's purpose is to teach you how to secure a Linux server.&lt;/p&gt;
&lt;p&gt;There are a lot of things you can do to secure a Linux server and this guide will attempt to cover as many of them as possible. More topics/material will be added as I learn, or as folks &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Why Secure Your Server&lt;/h3&gt;
&lt;p&gt;I assume you're using this guide because you, hopefully, already understand why good security is important. That is a heavy topic onto itself and breaking it down is out-of-scope for this guide. If you don't know the answer to that question, I advise you research it first.&lt;/p&gt;
&lt;p&gt;At a high level, the second a device, like a server, is in the public domain -- i.e visible to the outside world -- it becomes a target for bad-actors. An unsecured device is a playground for bad-actors who want access to your data, or to use your server as another node for their large-scale DDOS attacks.&lt;/p&gt;
&lt;p&gt;What's worse is, without good security, you may never know if your server has been compromised. A bad-actor may have gained unauthorized access to your server and copied your data without changing anything so you'd never know. Or your server may have been part of a DDOS attack and you wouldn't know. Look at many of the large scale data breaches in the news -- the companies often did not discover the data leak or intrusion until long after the bad-actors were gone.&lt;/p&gt;
&lt;p&gt;Contrary to popular belief, bad-actors don't always want to change something or &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/blob/master&quot;&gt;lock you out of your data for money&lt;/a&gt;. Sometimes they just want the data on your server for their data warehouses (there is big money in big data) or to covertly use your server for their nefarious purposes.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Why Yet Another Guide&lt;/h3&gt;
&lt;p&gt;This guide may appear duplicative/unnecessary because there are countless articles online that tell you how to &lt;a href=&quot;https://duckduckgo.com/?q=how+to+secure+linux&amp;amp;t=ffab&amp;amp;atb=v151-7&amp;amp;ia=web&quot; rel=&quot;nofollow&quot;&gt;how to secure Linux&lt;/a&gt; but the information is spread across different articles, that cover different things, and in different ways. Who has time to scour through hundreds of articles?&lt;/p&gt;
&lt;p&gt;As I was going through research for my Debian build, I kept notes. At the end I realized that, along with what I already knew, and what I was learning, I had the makings of a how-to guide. I figured I'd put it online to hopefully help others &lt;strong&gt;learn&lt;/strong&gt;, and &lt;strong&gt;save time&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I've never found one guide that covers everything -- this guide is my attempt.&lt;/p&gt;
&lt;p&gt;Many of the things covered in this guide may be rather basic/trivial, but most of us do not install Linux every day and it is easy to forget those basic things.&lt;/p&gt;
&lt;p&gt;IT automation tools like &lt;a href=&quot;https://www.ansible.com/&quot; rel=&quot;nofollow&quot;&gt;Ansible&lt;/a&gt;, &lt;a href=&quot;https://www.chef.io/&quot; rel=&quot;nofollow&quot;&gt;Chef&lt;/a&gt;, &lt;a href=&quot;https://jenkins.io/&quot; rel=&quot;nofollow&quot;&gt;Jenkins&lt;/a&gt;, &lt;a href=&quot;https://puppet.com/&quot; rel=&quot;nofollow&quot;&gt;Puppet&lt;/a&gt;, etc. help with the tedious task of installing/configuring a server but IMHO they are better suited for multiple or large scale deployments. IMHO, the overhead required to use those kinds of automation tools is wholly unnecessary for a one-time single server install for home use.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;To Do / To Add&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Guide Overview&lt;/h2&gt;
&lt;h3&gt;About This Guide&lt;/h3&gt;
&lt;p&gt;This guide...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; a work in progress.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; focused on &lt;strong&gt;at-home&lt;/strong&gt; Linux servers. All of the concepts/recommendations here apply to larger/professional environments but those use-cases call for more advanced and specialized configurations that are out-of-scope for this guide.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; teach you about Linux, how to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#installing-linux&quot;&gt;install Linux&lt;/a&gt;, or how to use it.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; meant to be &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#picking-a-linux-distribution&quot;&gt;Linux distribution agnostic&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; teach you everything you need to know about security nor does it get into all aspects of system/server security. For example, physical security is out of scope for this guide.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;does not&lt;/strong&gt; talk about how programs/tools work, nor does it delve into their nook and crannies. Most of the programs/tools this guide references are very powerful and highly configurable. The goal is to cover the bare necessities -- enough to wet your appetite and make you hungry enough to want to go and learn more.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;aims&lt;/strong&gt; to make it easy by providing code you can copy-and-paste. You might need to modify the commands before you paste so keep your favorite &lt;a href=&quot;https://notepad-plus-plus.org/&quot; rel=&quot;nofollow&quot;&gt;text editor&lt;/a&gt; handy.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is&lt;/strong&gt; organized in an order that makes logical sense to me -- i.e. securing SSH before installing a firewall. As such, this guide is intended to be followed in the order it is presented but it is not necessary to do so. Just be careful if you do things in a different order -- some sections require previous sections to be completed.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Safe vs. DANGER ZONE&lt;/h3&gt;
&lt;p&gt;Some of the sections in this guide are generally considered safe and shouldn't make your system unusable.&lt;/p&gt;
&lt;p&gt;Some sections cover things that are high risk because there is a possibility they can make your system unusable, or are considered unnecessary by many because the risks outweigh any rewards. These sections are tagged with &lt;strong&gt;&lt;code&gt;[DZ]&lt;/code&gt;&lt;/strong&gt; and the content is hidden by default. &lt;strong&gt;!! PROCEED AT YOUR OWN RISK !!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some sections are not necessary to secure your server but are still helpful. For example, you don't need to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-configure-gmail-as-mta&quot;&gt;configure your server to send &lt;code&gt;mail&lt;/code&gt; through Gmail&lt;/a&gt; but you will want someway to send e-mails so you get critical system/security alerts. These sections are tagged with &lt;strong&gt;&lt;code&gt;[NS]&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Regardless of the section, as is with &lt;strong&gt;anything&lt;/strong&gt; in this guide, &lt;strong&gt;use with caution and proceed at your own risk&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Editing Configuration Files - For The Lazy&lt;/h3&gt;
&lt;p&gt;I am very lazy and do not like to edit files by hand if I don't need to. I also assume everyone else is just like me. :)&lt;/p&gt;
&lt;p&gt;So, when and where possible, I have provided &lt;code&gt;code&lt;/code&gt; snippets to quickly do what is needed, like add or change a line in a configuration file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;code&lt;/code&gt; snippets use basic commands like &lt;code&gt;echo&lt;/code&gt;, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, and &lt;code&gt;grep&lt;/code&gt;. How the &lt;code&gt;code&lt;/code&gt; snippets work, like what each command/part does, is out of scope for this guide -- the &lt;code&gt;man&lt;/code&gt; pages are your friend.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;code&lt;/code&gt; snippets do not validate/verify the change went through -- i.e. the line was actually added or changed. I'll leave the verifying part in your capable hands. The steps in this guide do include taking backups of all files that will be changed.&lt;/p&gt;
&lt;p&gt;Not all changes can be automated with &lt;code&gt;code&lt;/code&gt; snippets. Those changes need good, old fashioned, manual editing. For example, you can't just append a line to an &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot; rel=&quot;nofollow&quot;&gt;INI&lt;/a&gt; type file. Use your &lt;a href=&quot;https://en.wikipedia.org/wiki/Vi&quot; rel=&quot;nofollow&quot;&gt;favorite&lt;/a&gt; Linux text editor.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Contributing&lt;/h3&gt;
&lt;p&gt;I wanted to put this guide on &lt;a href=&quot;http://www.github.com&quot;&gt;GitHub&lt;/a&gt; to make it easy to collaborate. The more folks that contribute, the better and more complete this guide will become.&lt;/p&gt;
&lt;p&gt;To contribute you can fork and submit a pull request or submit a &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/new&quot;&gt;new issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Before You Start&lt;/h2&gt;
&lt;h3&gt;Identify Your Principles&lt;/h3&gt;
&lt;p&gt;Before you start you will want to identify what your Principles are. What is your &lt;a href=&quot;https://en.wikipedia.org/wiki/Threat_model&quot; rel=&quot;nofollow&quot;&gt;threat model&lt;/a&gt;? Some things to think about:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why do you want to secure your server?&lt;/li&gt;
&lt;li&gt;How much security do you want or not want?&lt;/li&gt;
&lt;li&gt;How much convenience are you willing to compromise for security and vice-versa?&lt;/li&gt;
&lt;li&gt;What are the threats you want to protect against? What are the specifics to your situation? For example:
&lt;ul&gt;&lt;li&gt;Is physical access to your server/network a possible attack vector?&lt;/li&gt;
&lt;li&gt;Will you be opening ports on your router so you can access your server from outside your home?&lt;/li&gt;
&lt;li&gt;Will you be hosting a file share on your server that will be mounted on a desktop class machine? What is the possibility of the desktop machine getting infected and, in turn, infecting the server?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Do you have a means of recovering if your security implementation locks you out of your own server? For example, you &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#dz-disable-root-login&quot;&gt;disabled root login&lt;/a&gt; or &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#dz-password-protect-grub&quot;&gt;password protected GRUB&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These are just &lt;strong&gt;a few things&lt;/strong&gt; to think about. Before you start securing your server you will want to understand what you're trying to protect against and why so you know what you need to do.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Picking A Linux Distribution&lt;/h3&gt;
&lt;p&gt;This guide is intended to be distribution agnostic so users can use &lt;a href=&quot;https://distrowatch.com/&quot; rel=&quot;nofollow&quot;&gt;any distribution&lt;/a&gt; they want. With that said, there are a few things to keep in mind:&lt;/p&gt;
&lt;p&gt;You want a distribution that...&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;...&lt;strong&gt;is stable&lt;/strong&gt;. Unless you like debugging issues at 2 AM, you don't want an &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#tbd&quot;&gt;unattended upgrade&lt;/a&gt;, or a manual package/system update, to render your server inoperable. But this also means you're okay with not running the latest, greatest, bleeding edge software.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;stays up-to-date with security patches&lt;/strong&gt;. You can secure everything on your server, but if the core OS or applications you're running have known vulnerabilities, you'll never be safe.&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;you're familiar with.&lt;/strong&gt; If you don't know Linux, I would advise you play around with one before you try to secure it. You should be comfortable with it and know your way around, like how to install software, where configuration files are, etc...&lt;/li&gt;
&lt;li&gt;...&lt;strong&gt;is well supported.&lt;/strong&gt; Even the most seasoned admin needs help every now and then. Having a place to go for help will save your sanity.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Installing Linux&lt;/h3&gt;
&lt;p&gt;Installing Linux is out-of-scope for this guide because each distribution does it differently and the installation instructions are usually well documented. If you need help, start with your distribution's documentation. Regardless of the distribution, the high-level process usually goes like so:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;download the ISO&lt;/li&gt;
&lt;li&gt;burn/copy/transfer it to your install medium (e.g. a CD or USB stick)&lt;/li&gt;
&lt;li&gt;boot your server from your install medium&lt;/li&gt;
&lt;li&gt;follow the prompts to install&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Where applicable, use the expert install option so you have tighter control of what is running on your server. &lt;strong&gt;Only install what you absolutely need.&lt;/strong&gt; I, personally, do not install anything other than SSH.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Pre/Post Installation&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;If you're opening ports on your router so you can access your server from the outside, disable the port forwarding until your system is up and secured.&lt;/li&gt;
&lt;li&gt;Unless you're doing everything physically connected to your server, you'll need remote access so be sure SSH works.&lt;/li&gt;
&lt;li&gt;Be sure to keep your system up-to-date (i.e. &lt;code&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt; on Debian based systems).&lt;/li&gt;
&lt;li&gt;At some point, like maybe right after configuring &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-publicprivate-keys&quot;&gt;SSH public/private keys&lt;/a&gt;, make sure you perform any tasks specific to your setup like:
&lt;ul&gt;&lt;li&gt;configuring network&lt;/li&gt;
&lt;li&gt;configuring mount points in &lt;code&gt;/etc/fstab&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;creating the initial user accounts&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Your server will need to be able to send e-mails so you can get important security alerts. If you're not setting up a mail server check &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-configure-gmail-as-mta&quot;&gt;Configure Gmail as MTA&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Other Important Notes&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;This guide is being written and tested on Debian. Most things below should work on other distributions. If you find something that does not, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;contact me&lt;/a&gt;. The main thing that separates each distribution will be its package management system. Since I use Debian, I will provide the appropriate &lt;code&gt;apt&lt;/code&gt; commands that should work on all &lt;a href=&quot;https://www.debian.org/derivatives/&quot; rel=&quot;nofollow&quot;&gt;Debian based distributions&lt;/a&gt;. If someone is willing to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;provide&lt;/a&gt; the respective commands for other distributions, I will add them.&lt;/li&gt;
&lt;li&gt;File paths and settings also may differ slightly -- check with your distribution's documentation if you have issues.&lt;/li&gt;
&lt;li&gt;Read the whole guide before you start. Your use-case and/or principals may call for not doing something or for changing the order.&lt;/li&gt;
&lt;li&gt;Do not &lt;strong&gt;blindly&lt;/strong&gt; copy-and-paste without understanding what you're pasting. Some commands will need to be modified for your needs before they'll work -- usernames for example.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;The Main Event&lt;/h2&gt;
&lt;h3&gt;SSH Public/Private Keys&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Using SSH public/private keys is more secure than using a password. It also makes it easier and faster, to connect to our server because you don't have to enter a password.&lt;/p&gt;
&lt;p&gt;Check the &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-key-references&quot;&gt;references&lt;/a&gt; below for more details but, at a high level, public/private keys work by using a pair of keys to verify identity.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;One key, the &lt;strong&gt;public&lt;/strong&gt; key, &lt;strong&gt;can only encrypt data&lt;/strong&gt;, not decrypt it&lt;/li&gt;
&lt;li&gt;The other key, the &lt;strong&gt;private&lt;/strong&gt; key, can decrypt the data&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;For SSH, a public and private key is created on the client. The public key is then securely transferred to the server you want to connect to. After this is done, SSH uses the public and private keys to verify identity and then establishing a secure connection. Identity is verified by the server encrypting a challenge message with the public key, then sending it to the client. If the client cannot decrypt the challenge message with the private key, the identity can't be verified and a connection will not be established.&lt;/p&gt;
&lt;p&gt;They are considered more secure because you need the private key to establish an SSH connection. If you set &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#PasswordAuthentication&quot;&gt;&lt;code&gt;PasswordAuthentication no&lt;/code&gt; in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/a&gt;, then SSH won't let you connect without the private key.&lt;/p&gt;
&lt;p&gt;You can also set a passphrase for the keys which would require you to enter the key passphrase when connecting using public/private keys. Keep in mind doing this means you can't use the key for automation because you'll have no way to send the passphrase in your scripts. &lt;code&gt;ssh-agent&lt;/code&gt; is a program that is shipped in many Linux distros (and usually already running) that will allow you to hold your unencrypted private key in memory for a configurable duration. Simply run &lt;code&gt;ssh-add&lt;/code&gt; and it will prompt you for your passphrase. You will not be prompted for your passphrase again until the configurable duration has passed.&lt;/p&gt;
&lt;p&gt;We will be using Ed25519 keys which, according to &lt;a href=&quot;https://linux-audit.com/using-ed25519-openssh-keys-instead-of-dsa-rsa-ecdsa/&quot; rel=&quot;nofollow&quot;&gt;https://linux-audit.com/&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It is using an elliptic curve signature scheme, which offers better security than ECDSA and DSA. At the same time, it also has good performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Ed25519 public/private SSH keys:
&lt;ul&gt;&lt;li&gt;private key on your client&lt;/li&gt;
&lt;li&gt;public key on your server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;You'll need to do this step for every computer and account you'll be connecting to your server from/as.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;From the computer you're going to use to connect to your server, &lt;strong&gt;the client&lt;/strong&gt;, not the server itself, create an &lt;a href=&quot;https://linux-audit.com/using-ed25519-openssh-keys-instead-of-dsa-rsa-ecdsa/&quot; rel=&quot;nofollow&quot;&gt;Ed25519&lt;/a&gt; key with &lt;code&gt;ssh-keygen&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-keygen -t ed25519
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/user/.ssh/id_ed25519):
Created directory '/home/user/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_ed25519.
Your public key has been saved in /home/user/.ssh/id_ed25519.pub.
The key fingerprint is:
SHA256:F44D4dr2zoHqgj0i2iVIHQ32uk/Lx4P+raayEAQjlcs user@client
The key's randomart image is:
+--[ED25519 256]--+
|xxxx  x          |
|o.o +. .         |
| o o oo   .      |
|. E oo . o .     |
| o o. o S o      |
|... .. o o       |
|.+....+ o        |
|+.=++o.B..       |
|+..=**=o=.       |
+----[SHA256]-----+
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you set a passphrase, you'll need to enter it every time you connect to your server using this key, unless you're using &lt;code&gt;ssh-agent&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you SSH to your server, your server will look for your public key in the &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; file &lt;strong&gt;in your home directory&lt;/strong&gt;. So we need to &lt;strong&gt;append&lt;/strong&gt; the contents of the public key &lt;code&gt;~/.ssh/id_ed25519.pub&lt;/code&gt; from the machine you're on (the client) to the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file on the &lt;strong&gt;target server&lt;/strong&gt;. You'll want to do this in a secure way since the public key gives access to your server. One approach is to copy it to a USB stick and physically transfer it to the server. If you're sure there is &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot; rel=&quot;nofollow&quot;&gt;nobody listening between the client you're on and your server&lt;/a&gt;, you can use &lt;code&gt;ssh-copy-id&lt;/code&gt; to transfer and append the public key:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-copy-id user@server    
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/home/user/.ssh/id_ed25519.pub&quot;
The authenticity of host 'host (192.168.1.96)' can't be established.
ECDSA key fingerprint is SHA256:QaDQb/X0XyVlogh87sDXE7MR8YIK7ko4wS5hXjRySJE.
Are you sure you want to continue connecting (yes/no)? yes
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
user@host's password:

Number of key(s) added: 1

Now try logging into the machine, with:   &quot;ssh 'user@host'&quot;
and check to make sure that only the key(s) you wanted were added.
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now would be a good time to &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#prepost-installation&quot;&gt;perform any tasks specific to your setup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Limit Who Can Use &lt;code&gt;sudo&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt; lets accounts run commands as other accounts, including &lt;strong&gt;root&lt;/strong&gt;. We want to make sure that only the accounts we want can use &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;sudo&lt;/code&gt; privileges limited to those who are in a group we specify&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Your installation may have already done this, or may already have a special group intended for this purpose so check first.
&lt;ul&gt;&lt;li&gt;Debian creates the &lt;code&gt;sudo&lt;/code&gt; group&lt;/li&gt;
&lt;li&gt;RedHat creates the &lt;code&gt;wheel&lt;/code&gt; group&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo groupadd sudousers
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add account(s) to the group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo usermod -a -G sudousers user1
sudo usermod -a -G sudousers user2
sudo usermod -a -G sudousers  ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll need to do this for every account on your server that needs &lt;code&gt;sudo&lt;/code&gt; privileges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/sudoers&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/sudoers /etc/sudoers.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo visudo
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell &lt;code&gt;sudo&lt;/code&gt; to only allow users in the &lt;code&gt;sudousers&lt;/code&gt; group to use &lt;code&gt;sudo&lt;/code&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line if it is not already there:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;%sudousers   ALL=(ALL:ALL) ALL
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Secure SSH&lt;/h3&gt;
&lt;h4&gt;Create SSH Group For &lt;code&gt;AllowGroups&lt;/code&gt;&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;To make it easy to control who can SSH to the server. By using a group, we can quickly add/remove accounts to the group to quickly allow or not allow SSH access to the server.&lt;/p&gt;
&lt;h5&gt;Goals&lt;/h5&gt;
&lt;h5&gt;Notes&lt;/h5&gt;
&lt;h5&gt;References&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;man groupadd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;man usermod&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo groupadd sshusers
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add account(s) to the group:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo usermod -a -G sshusers user1
sudo usermod -a -G sshusers user2
sudo usermod -a -G sshusers ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll need to do this for every account on your server that needs SSH access.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;Secure &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;SSH is a door into your server. This is especially true if you are opening ports on your router so you can SSH to your server from outside your home network. If it is not secured properly, a bad-actor could use it to gain unauthorized access to your system.&lt;/p&gt;
&lt;h5&gt;Goal&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;a secure SSH configuration&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;Notes&lt;/h5&gt;
&lt;h5&gt;References&lt;/h5&gt;
&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and remove default comments to make it easier to read:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/sshd_config /etc/ssh/sshd_config.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/^#|^$/ d&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; then &lt;strong&gt;find and edit or add&lt;/strong&gt; these settings that should apply regardless of your configuration/setup:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Your &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; file may already have some of these settings/lines. You will want to remove those and replace them with the ones below.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;########################################################################################################
# start settings from https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67 as of 2019-01-01
########################################################################################################

# Supported HostKey algorithms by order of preference.
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key

KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256

Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

# LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of which key was using to log in.
LogLevel VERBOSE

# Use kernel sandbox mechanisms where possible in unprivileged processes
# Systrace on OpenBSD, Seccomp on Linux, seatbelt on MacOSX/Darwin, rlimit elsewhere.
UsePrivilegeSeparation sandbox

########################################################################################################
# end settings from https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67 as of 2019-01-01
########################################################################################################

# Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
Subsystem sftp  internal-sftp -f AUTHPRIV -l INFO

# only use the newer, more secure protocl
Protocol 2

# disable X11 forwarding as X11 is very insecure
# you really shouldn't be running X on a server anyway
X11Forwarding no

# disable port forwarding
AllowTcpForwarding no
AllowStreamLocalForwarding no
GatewayPorts no
PermitTunnel no

# don't allow login if the account has an empty password
PermitEmptyPasswords no

# ignore .rhosts and .shosts
IgnoreRhosts yes

# verify hostname matches IP
UseDNS no

Compression no
TCPKeepAlive no
AllowAgentForwarding no
PermitRootLogin no
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then &lt;strong&gt;find and edit or add&lt;/strong&gt; these settings, and set values as per your requirements:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Setting&lt;/th&gt;
&lt;th&gt;Valid Values&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;AllowGroups&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;local UNIX group name&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AllowGroups sshusers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;group to allow SSH access to&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ClientAliveCountMax&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ClientAliveCountMax 0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of client alive messages sent without response&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ClientAliveInterval&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number of seconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ClientAliveInterval 300&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;timeout in seconds before a response request&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ListenAddress&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;space separated list of local addresses&lt;/td&gt;
&lt;td&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ListenAddress 0.0.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ListenAddress 192.168.1.100&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/td&gt;
&lt;td&gt;local addresses &lt;code&gt;sshd&lt;/code&gt; should listen on&lt;/td&gt;
&lt;td&gt;See &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/1&quot;&gt;Issue #1&lt;/a&gt; for important details.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;LoginGraceTime&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number of seconds&lt;/td&gt;
&lt;td&gt;&lt;code&gt;LoginGraceTime 30&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;time in seconds before login times-out&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxAuthTries&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxAuthTries 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum allowed attempts to login&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxSessions&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxSessions 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of open sessions&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MaxStartups&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MaxStartups 2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;maximum number of login sessions&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;PasswordAuthentication&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;yes&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PasswordAuthentication no&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;if login with a password is allowed&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Port&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;any open/available port number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Port 22&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;port that &lt;code&gt;sshd&lt;/code&gt; should listen on&lt;/td&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Check &lt;code&gt;man sshd_config&lt;/code&gt; for more details what these settings mean.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart ssh:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service sshd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;Deactivate Short Moduli&lt;/h4&gt;
&lt;h5&gt;Why&lt;/h5&gt;
&lt;p&gt;Per &lt;a href=&quot;https://infosec.mozilla.org/guidelines/openssh#modern-openssh-67&quot; rel=&quot;nofollow&quot;&gt;Mozilla's OpenSSH guidelines for OpenSSH 6.7+&lt;/a&gt;, &quot;all Diffie-Hellman moduli in use should be at least 3072-bit-long&quot;.&lt;/p&gt;
&lt;h5&gt;Goal&lt;/h5&gt;
&lt;ul&gt;&lt;li&gt;deactivate short moduli&lt;/li&gt;
&lt;/ul&gt;&lt;h5&gt;References&lt;/h5&gt;
&lt;h5&gt;Steps&lt;/h5&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/ssh/moduli&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/moduli /etc/ssh/moduli.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove short moduli:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;$5 &amp;gt;= 3071&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /etc/ssh/moduli &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee /etc/ssh/moduli.tmp
sudo mv /etc/ssh/moduli.tmp /etc/ssh/moduli
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;NTP Client&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Many security protocols leverage the time. If your system time is incorrect, it could have negative impacts to your server. An NTP client can solve that problem by keeping your system time in-sync with &lt;a href=&quot;https://www.pool.ntp.org/en/&quot; rel=&quot;nofollow&quot;&gt;global NTP servers&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;NTP client installed and keeping server time in-sync&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;ntp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install ntp
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check &lt;code&gt;ntp&lt;/code&gt;'s status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo systemctl status ntp
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;● ntp.service - LSB: Start NTP daemon
   Loaded: loaded (/etc/init.d/ntp; generated; vendor preset: enabled)
   Active: active (running) since Sat 2019-02-16 00:32:20 EST; 3s ago
     Docs: man:systemd-sysv-generator(8)
   CGroup: /system.slice/ntp.service
           └─1051 /usr/sbin/ntpd -p /var/run/ntpd.pid -g -u 109:114

Feb 16 00:32:20 host ntpd[1051]: Listen normally on 3 enp0s3 192.168.1.96:123
Feb 16 00:32:20 host ntpd[1051]: Listen normally on 4 lo [::1]:123
Feb 16 00:32:20 host ntpd[1051]: Listen normally on 5 enp0s3 [fe80::a00:27ff:feb6:ed8e%2]:123
Feb 16 00:32:20 host ntpd[1051]: Listening on routing socket on fd #22 for interface updates
Feb 16 00:32:21 host ntpd[1051]: Soliciting pool server 173.255.206.154
Feb 16 00:32:22 host ntpd[1051]: Soliciting pool server 216.6.2.70
Feb 16 00:32:22 host ntpd[1051]: Soliciting pool server 82.197.188.130
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 95.215.175.2
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 107.155.79.108
Feb 16 00:32:23 host ntpd[1051]: Soliciting pool server 212.110.158.28
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ntpq -p
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;     remote           refid      st t when poll reach   delay   offset  jitter
==============================================================================
 0.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 1.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 2.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
 3.debian.pool.n .POOL.          16 p    -   64    0    0.000    0.000   0.000
-li216-154.membe 45.56.123.24     3 u  119   64    2   51.912    0.663   2.311
+eudyptula.init7 162.23.41.10     2 u   60   64    3   99.378    1.563   3.485
+107.155.79.108  129.7.1.66       2 u  119   64    2   49.171   -1.372   1.441
-212.110.158.28  89.109.251.21    2 u  120   64    2  167.465   -1.064   1.263
*ec2-54-242-183- 128.10.19.24     2 u   62   64    3   19.157    2.536   4.434
-69.195.159.158  128.252.19.1     2 u  119   64    2   42.990    6.302   3.507
-200.89.75.198 ( 200.27.106.115   2 u   58   64    3  160.786   42.737  12.827
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[NS]&lt;/code&gt; Configure Gmail as MTA&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Unless you're planning on setting up your own mail server, you'll need a way to send e-mails from your server. This will be important for system alerts/messages.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;mail&lt;/code&gt; configured to send e-mails from your server using &lt;a href=&quot;https://mail.google.com/&quot; rel=&quot;nofollow&quot;&gt;Gmail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;exim4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install exim4
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure &lt;code&gt;exim4&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;For Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo dpkg-reconfigure exim4-config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll be prompted with some questions:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;right&quot;&gt;Prompt&lt;/th&gt;
&lt;th&gt;Answer&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;General type of mail configuration&lt;/td&gt;
&lt;td&gt;&lt;code&gt;mail sent by smarthost; no local mail&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;System mail name&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;IP-addresses to listen on for incoming SMTP connections&lt;/td&gt;
&lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Other destinations for which mail is accepted&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Visible domain name for local users&lt;/td&gt;
&lt;td&gt;(default)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;IP address or host name of the outgoing smarthost&lt;/td&gt;
&lt;td&gt;&lt;code&gt;smtp.gmail.com::587&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Keep number of DNS-queries minimal (Dial-on-Demand)?&lt;/td&gt;
&lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;right&quot;&gt;Split configuration into small files?&lt;/td&gt;
&lt;td&gt;&lt;code&gt;No&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/exim4/passwd.client&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
    sudo cp /etc/exim4/passwd.client /etc/exim4/passwd.client.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt; a line like this to &lt;code&gt;/etc/exim4/passwd.client&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;*.google.com:yourAccount@gmail.com:yourPassword
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Replace &lt;code&gt;yourAccount@gmail.com&lt;/code&gt; and &lt;code&gt;yourPassword&lt;/code&gt; with your details. If you have 2FA/MFA enabled on your Gmail then you'll need to create and use an app password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This file has your Gmail password so we need to lock it down:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo chown root:Debian-exim /etc/exim4/passwd.client
sudo chmod 640 /etc/exim4/passwd.client
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;exim4&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service exim4 restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add some mail aliases so we can send e-mails to local accounts by &lt;strong&gt;adding&lt;/strong&gt; lines like this to &lt;code&gt;/etc/aliases&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;user1: user1@gmail.com
user2: user2@gmail.com
...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You'll need to add all the local accounts that exist on your server.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;UFW: Uncomplicated Firewall&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Call me paranoid, and you don't have to agree, but I want to deny all traffic in and out of my server except what I explicitly allow. Why would my server be sending traffic out that I don't know about? And why would external traffic be trying to access my server if I don't know who or what it is? When it comes to good security, my opinion is to reject/deny by default, and allow by exception.&lt;/p&gt;
&lt;p&gt;Of course, if you disagree, that is totally fine and can configure UFW to suit your needs.&lt;/p&gt;
&lt;p&gt;Either way, ensuring that only traffic we explicitly allow is the job of a firewall. On Linux, the most common firewall is &lt;a href=&quot;https://en.wikipedia.org/wiki/Iptables&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;iptables&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;iptables&lt;/code&gt;, however, is rather complicated and confusing (IMHO). This is where UFW comes in. UFW simplifies the process of creating and managing &lt;code&gt;iptables&lt;/code&gt; rules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UFW&lt;/strong&gt; works by letting you configure rules that:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;allow&lt;/strong&gt; or &lt;strong&gt;deny&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;input&lt;/strong&gt; or &lt;strong&gt;output&lt;/strong&gt; traffic&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to&lt;/strong&gt; or &lt;strong&gt;from&lt;/strong&gt; ports&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You can create rules by explicitly specifying the ports or with application configurations that specify the ports.&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;all network traffic, input and output, blocked except those we explicitly allow&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;As you install other programs, you'll need to enable the necessary ports/applications.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;ufw&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install ufw
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deny all outgoing traffic:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default deny outgoing comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;deny all outgoing traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Default outgoing policy changed to 'deny'
(be sure to update your rules accordingly)
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;If you are not as paranoid as me, and don't want to deny all outgoing traffic, you can allow it instead:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default allow outgoing comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow all outgoing traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deny all incoming traffic:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw default deny incoming comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;deny all incoming traffic&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Obviously we want SSH connections in:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw limit &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; ssh comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow SSH connections in&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Rules updated
Rules updated (v6)
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allow additional traffic as per your needs. Some common use-cases:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 53 -- DNS&lt;/span&gt;
sudo ufw allow out 53 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow DNS calls out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 123 -- NTP&lt;/span&gt;
sudo ufw allow out 123 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow NTP out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out for HTTP, HTTPS, or FTP&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; apt might needs these depending on which sources you're using&lt;/span&gt;
sudo ufw allow out http comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow HTTP traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
sudo ufw allow out https comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow HTTPS traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
sudo ufw allow out ftp comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow FTP traffic out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow mail to go out&lt;/span&gt;
sudo ufw allow out &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Mail submission&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow mail out&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow whois&lt;/span&gt;
sudo ufw allow out whois comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow whois&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; allow traffic out on port 68 -- the DHCP client&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; you only need this if you're using DHCP&lt;/span&gt;
sudo ufw allow out 68 comment &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;allow the DHCP client to update&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start &lt;code&gt;ufw&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw &lt;span class=&quot;pl-c1&quot;&gt;enable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Command may disrupt existing ssh connections. Proceed with operation (y|n)? y
Firewall is active and enabled on system startup
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to see a status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status: active

To                         Action      From
--                         ------      ----
22/tcp                     LIMIT       Anywhere                   # allow SSH connections in
22/tcp (v6)                LIMIT       Anywhere (v6)              # allow SSH connections in

53                         ALLOW OUT   Anywhere                   # allow DNS calls out
123                        ALLOW OUT   Anywhere                   # allow NTP out
80/tcp                     ALLOW OUT   Anywhere                   # allow HTTP traffic out
443/tcp                    ALLOW OUT   Anywhere                   # allow HTTPS traffic out
21/tcp                     ALLOW OUT   Anywhere                   # allow FTP traffic out
Mail submission            ALLOW OUT   Anywhere                   # allow mail out
43/tcp                     ALLOW OUT   Anywhere                   # allow whois
53 (v6)                    ALLOW OUT   Anywhere (v6)              # allow DNS calls out
123 (v6)                   ALLOW OUT   Anywhere (v6)              # allow NTP out
80/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow HTTP traffic out
443/tcp (v6)               ALLOW OUT   Anywhere (v6)              # allow HTTPS traffic out
21/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow FTP traffic out
Mail submission (v6)       ALLOW OUT   Anywhere (v6)              # allow mail out
43/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow whois
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw status verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status: active
Logging: on (low)
Default: deny (incoming), deny (outgoing), disabled (routed)
New profiles: skip

To                         Action      From
--                         ------      ----
22/tcp                     LIMIT IN    Anywhere                   # allow SSH connections in
22/tcp (v6)                LIMIT IN    Anywhere (v6)              # allow SSH connections in

53                         ALLOW OUT   Anywhere                   # allow DNS calls out
123                        ALLOW OUT   Anywhere                   # allow NTP out
80/tcp                     ALLOW OUT   Anywhere                   # allow HTTP traffic out
443/tcp                    ALLOW OUT   Anywhere                   # allow HTTPS traffic out
21/tcp                     ALLOW OUT   Anywhere                   # allow FTP traffic out
587/tcp (Mail submission)  ALLOW OUT   Anywhere                   # allow mail out
43/tcp                     ALLOW OUT   Anywhere                   # allow whois
53 (v6)                    ALLOW OUT   Anywhere (v6)              # allow DNS calls out
123 (v6)                   ALLOW OUT   Anywhere (v6)              # allow NTP out
80/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow HTTP traffic out
443/tcp (v6)               ALLOW OUT   Anywhere (v6)              # allow HTTPS traffic out
21/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow FTP traffic out
587/tcp (Mail submission (v6)) ALLOW OUT   Anywhere (v6)              # allow mail out
43/tcp (v6)                ALLOW OUT   Anywhere (v6)              # allow whois
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Default Applications&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ufw&lt;/code&gt; ships with some default applications. You can see them with:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app list
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Available applications:
  AIM
  Bonjour
  CIFS
  DNS
  Deluge
  IMAP
  IMAPS
  IPP
  KTorrent
  Kerberos Admin
  Kerberos Full
  Kerberos KDC
  Kerberos Password
  LDAP
  LDAPS
  LPD
  MSN
  MSN SSL
  Mail submission
  NFS
  OpenSSH
  POP3
  POP3S
  PeopleNearby
  SMTP
  SSH
  Socks
  Telnet
  Transmission
  Transparent Proxy
  VNC
  WWW
  WWW Cache
  WWW Full
  WWW Secure
  XMPP
  Yahoo
  qBittorrent
  svnserve
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;To get details about the app, like which ports it includes, type:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app info [app name]
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw app info DNS
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;Profile: DNS
Title: Internet Domain Name Server
Description: Internet Domain Name Server

Port:
  53
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h4&gt;Custom Application&lt;/h4&gt;
&lt;p&gt;If you don't want to create rules by explicitly providing the port number(s), you can create your own application configurations. To do this, create a file in &lt;code&gt;/etc/ufw/applications.d&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, here is what you would use for &lt;a href=&quot;https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/&quot; rel=&quot;nofollow&quot;&gt;Plex&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat /etc/ufw/applications.d/plexmediaserver
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[PlexMediaServer]
title=Plex Media Server
description=This opens up PlexMediaServer for http (32400), upnp, and autodiscovery.
ports=32469/tcp|32413/udp|1900/udp|32400/tcp|32412/udp|32410/udp|32414/udp|32400/udp
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Then you can enable it like any other app:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw allow plexmediaserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;PSAD: &lt;code&gt;iptables&lt;/code&gt; Intrusion Detection And Prevention&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;I can't explain it any better than user &lt;a href=&quot;https://serverfault.com/users/143961/finesec&quot; rel=&quot;nofollow&quot;&gt;FINESEC&lt;/a&gt; from &lt;a href=&quot;https://serverfault.com/&quot; rel=&quot;nofollow&quot;&gt;https://serverfault.com/&lt;/a&gt; did at: &lt;a href=&quot;https://serverfault.com/a/447604/289829&quot; rel=&quot;nofollow&quot;&gt;https://serverfault.com/a/447604/289829&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fail2BAN scans log files of various applications such as apache, ssh or ftp and automatically bans IPs that show the malicious signs such as automated login attempts. PSAD on the other hand scans iptables and ip6tables log messages (typically /var/log/messages) to detect and optionally block scans and other types of suspect traffic such as DDoS or OS fingerprinting attempts. It's ok to use both programs at the same time because they operate on different level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And, since we're already using &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ufw-uncomplicated-firewall&quot;&gt;UFW&lt;/a&gt; so we'll follow the awesome instructions by &lt;a href=&quot;https://gist.github.com/netson&quot;&gt;netson&lt;/a&gt; at &lt;a href=&quot;https://gist.github.com/netson/c45b2dc4e835761fbccc&quot;&gt;https://gist.github.com/netson/c45b2dc4e835761fbccc&lt;/a&gt; to make PSAD work with UFW.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;psad&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install psad
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp /etc/psad/psad.conf /etc/psad/psad.conf.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Review and update configuration options in &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt;. Pay special attention to these:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Setting&lt;/th&gt;
&lt;th&gt;Set To&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html#EMAIL_ADDRESSES&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;EMAIL_ADDRESSES&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;your email address(s)&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;HOSTNAME&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;your server's hostname&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html#ENABLE_AUTO_IDS&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;ENABLE_AUTO_IDS&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS_EMAILS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ENABLE_AUTO_IDS_EMAILS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;EXPECT_TCP_OPTIONS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXPECT_TCP_OPTIONS Y;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Check the configuration file &lt;code&gt;psad&lt;/code&gt;'s documentation at &lt;a href=&quot;http://www.cipherdyne.org/psad/docs/config.html&quot; rel=&quot;nofollow&quot;&gt;http://www.cipherdyne.org/psad/docs/config.html&lt;/a&gt; for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to make some changes to &lt;code&gt;ufw&lt;/code&gt; so it works with &lt;code&gt;psad&lt;/code&gt; by telling &lt;code&gt;ufw&lt;/code&gt; to log all traffic so &lt;code&gt;psad&lt;/code&gt; can analyze it. Do this by editing &lt;strong&gt;two files&lt;/strong&gt; and &lt;strong&gt;adding&lt;/strong&gt; these lines &lt;strong&gt;at the end but before the COMMIT line&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Make backups:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp /etc/ufw/before.rules /etc/ufw/before.rules.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo cp /etc/ufw/before6.rules /etc/ufw/before6.rules.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edit the files:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/etc/ufw/before.rules&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ufw/before6.rules&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And add &lt;strong&gt;add&lt;/strong&gt; this &lt;strong&gt;at the end but before the COMMIT line&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# log all traffic so psad can analyze
-A INPUT -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
-A FORWARD -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We're adding a log prefix to all the &lt;code&gt;iptables&lt;/code&gt; logs. We'll need this for &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ns-separate-iptables-log-file&quot;&gt;seperating &lt;code&gt;iptables&lt;/code&gt; logs to their own file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;...

# log all traffic so psad can analyze
-A INPUT -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;
-A FORWARD -j LOG --log-tcp-options --log-prefix &quot;[IPTABLES] &quot;

# don't delete the 'COMMIT' line or these rules won't be processed
COMMIT
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to reload/restart &lt;code&gt;ufw&lt;/code&gt; and &lt;code&gt;psad&lt;/code&gt; for the changes to take effect:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo ufw reload

sudo psad -R
sudo psad --sig-update
sudo psad -H
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Analyze &lt;code&gt;iptables&lt;/code&gt; rules for errors:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad --fw-analyze
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[+] Parsing INPUT chain rules.
[+] Parsing INPUT chain rules.
[+] Firewall config looks good.
[+] Completed check of firewall ruleset.
[+] Results in /var/log/psad/fw_check
[+] Exiting.
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If there were any issues you will get an e-mail with the error.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check the status of &lt;code&gt;psad&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad --Status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;[-] psad: pid file /var/run/psad/psadwatchd.pid does not exist for psadwatchd on vm
[+] psad_fw_read (pid: 3444)  %CPU: 0.0  %MEM: 2.2
    Running since: Sat Feb 16 01:03:09 2019

[+] psad (pid: 3435)  %CPU: 0.2  %MEM: 2.7
    Running since: Sat Feb 16 01:03:09 2019
    Command line arguments: [none specified]
    Alert email address(es): root@localhost

[+] Version: psad v2.4.3

[+] Top 50 signature matches:
        [NONE]

[+] Top 25 attackers:
        [NONE]

[+] Top 20 scanned ports:
        [NONE]

[+] iptables log prefix counters:
        [NONE]

    Total protocol packet counters:

[+] IP Status Detail:
        [NONE]

    Total scan sources: 0
    Total scan destinations: 0

[+] These results are available in: /var/log/psad/status.out
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[NS]&lt;/code&gt; Separate &lt;code&gt;iptables&lt;/code&gt; Log File&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;There will come a time when you'll need to look through your &lt;code&gt;iptables&lt;/code&gt; logs. Having all the &lt;code&gt;iptables&lt;/code&gt; logs go to their own file will make it a lot easier to find what you're looking for.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;The first step is by telling your firewall to prefix all log entries with some unique string. If you're using &lt;code&gt;iptables&lt;/code&gt; directly, you would do something like &lt;code&gt;--log-prefix &quot;[IPTABLES] &quot;&lt;/code&gt; for all the rules. We took care of this in step &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#psad_step4&quot;&gt;step 4 of installing &lt;code&gt;psad&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After you've added a prefix to the firewall logs, we need to tell &lt;code&gt;rsyslog&lt;/code&gt; to send those lines to its own file. Do this by &lt;strong&gt;creating&lt;/strong&gt; the file &lt;code&gt;/etc/rsyslog.d/10-iptables.conf&lt;/code&gt; and &lt;strong&gt;adding&lt;/strong&gt; this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:msg, contains, &quot;[IPTABLES] &quot; /var/log/iptables.log
&amp;amp; stop
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you're expecting a lot if data being logged by your firewall, prefix the filename with a &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;https://www.rsyslog.com/doc/v8-stable/configuration/actions.html#regular-file&quot; rel=&quot;nofollow&quot;&gt;&quot;to omit syncing the file after every logging&quot;&lt;/a&gt;. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;:msg, contains, &quot;[IPTABLES] &quot; -/var/log/iptables.log
&amp;amp; stop
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Remember to change the prefix to whatever you use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since we're logging firewall messages to a different file, we need to tell &lt;code&gt;psad&lt;/code&gt; where the new file is. Edit &lt;code&gt;/etc/psad/psad.conf&lt;/code&gt; and set &lt;code&gt;IPT_SYSLOG_FILE&lt;/code&gt; to the path of the log file. For example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;IPT_SYSLOG_FILE /var/log/iptables.log;
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;psad&lt;/code&gt; and &lt;code&gt;rsyslog&lt;/code&gt; to activate the changes (or reboot):&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo psad -R
sudo psad --sig-update
sudo psad -H
sudo service rsyslog restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The last thing we have to do is tell &lt;code&gt;logrotate&lt;/code&gt; to rotate the new log file so it doesn't get to big and fill up our disk. &lt;strong&gt;Create&lt;/strong&gt; the file &lt;code&gt;/etc/logrotate.d/iptables&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;/var/log/iptables.log
{
    rotate 7
    daily
    missingok
    notifempty
    delaycompress
    compress
    postrotate
        invoke-rc.d rsyslog rotate &amp;gt; /dev/null
    endscript
}
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Fail2ban: Application Intrusion Detection And Prevention&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;A firewall will board up all the doors and windows you don't want anyone using so nobody can see they are even there. But what about the doors and windows you want visible so approved folks can use them? Even if the door is locked, how do you ensure that someone doesn't try to force their way in?&lt;/p&gt;
&lt;p&gt;That is where &lt;strong&gt;Fail2ban&lt;/strong&gt; comes in. It will monitor network traffic/logs and prevent intrusions by blocking suspicious activity (e.g. multiple successive failed connections in a short time-span).&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;network monitoring for suspicious activity with automatic banning of offending IPs&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;As of right now, the only thing running on this server is SSH so we'll want Fail2ban to monitor SSH and ban as necessary.&lt;/li&gt;
&lt;li&gt;As you install other programs, you'll need to create/configure the appropriate jails and enable them.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install fail2ban
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We don't want to edit &lt;code&gt;/etc/fail2ban/fail2ban.conf&lt;/code&gt; or &lt;code&gt;/etc/fail2ban/jail.conf&lt;/code&gt; because a future update may overwrite those so we'll update a local copy instead. &lt;strong&gt;Add&lt;/strong&gt; this to &lt;code&gt;/etc/fail2ban/jail.local&lt;/code&gt; after replacing &lt;code&gt;[LAN SEGMENT]&lt;/code&gt; and &lt;code&gt;[your email]&lt;/code&gt; with the appropriate values:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[DEFAULT]
# the IP address range we want to ignore
ignoreip = 127.0.0.1/8 [LAN SEGMENT]

# who to send e-mail to
destemail = [your e-mail]

# who is the email from
sender = [your e-mail]

# since we're using exim4 to send emails
mta = mail

# get email alerts
action = %(action_mwl)s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note: Your server will need to be able to send e-mails so Fail2ban can let you know of suspicious activity and when it banned an IP.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to create a jail for &lt;code&gt;ssh&lt;/code&gt; that tells &lt;code&gt;fail2ban&lt;/code&gt; to look at &lt;code&gt;ssh&lt;/code&gt; logs and use &lt;code&gt;ufw&lt;/code&gt; to ban/unban IPs as needed. Create a jail for &lt;code&gt;ssh&lt;/code&gt; by &lt;strong&gt;adding&lt;/strong&gt; this to &lt;code&gt;/etc/fail2ban/jail.d/ssh.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;[sshd]
enabled = true
banaction = ufw
port = ssh
filter = sshd
logpath = %(sshd_log)s
maxretry = 5
&lt;/code&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the above we tell &lt;code&gt;fail2ban&lt;/code&gt; to use the &lt;code&gt;ufw&lt;/code&gt; as the &lt;code&gt;banaction&lt;/code&gt;. Fail2ban ships with an action configuration file for &lt;code&gt;ufw&lt;/code&gt;. You can see it in &lt;code&gt;/etc/fail2ban/action.d/ufw.conf&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable &lt;code&gt;fail2ban&lt;/code&gt; and the jail for SSH:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client start
sudo fail2ban-client reload
sudo fail2ban-client add sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check the status:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client status
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status
|- Number of jail:      1
`- Jail list:   sshd
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo fail2ban-client status sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Status for the jail: sshd
|- Filter
|  |- Currently failed: 0
|  |- Total failed:     0
|  `- File list:        /var/log/auth.log
`- Actions
   |- Currently banned: 0
   |- Total banned:     0
   `- Banned IP list:
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h4&gt;Custom Jails&lt;/h4&gt;
&lt;p&gt;I have not needed to create a custom jail yet. Once I do, and I figure out how, I will update this guide. Or, if you know how please help &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contributing&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Unban an IP&lt;/h4&gt;
&lt;p&gt;To unban an IP use this command:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fail2ban-client &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; [jail] unbanip [IP]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;[jail]&lt;/code&gt; is the name of the jail that has the banned IP and &lt;code&gt;[IP]&lt;/code&gt; is the IP address you want to unban. For example, to unaban &lt;code&gt;192.168.1.100&lt;/code&gt; from SSH you would do:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fail2ban-client &lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; sshd unbanip 192.168.1.100
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Linux Kernel &lt;code&gt;sysctl&lt;/code&gt; Hardening&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;The kernel is the brains of a Linux system. Securing it just makes sense.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Changing kernel settings with &lt;code&gt;sysctl&lt;/code&gt; is risky and could break your server. If you don't know what you are doing, don't have the time to debug issues, or just don't want to take the risks, I would advise from not following these steps.&lt;/p&gt;
&lt;h4&gt;Disclaimer&lt;/h4&gt;
&lt;p&gt;I am not as knowledgeable about hardening/securing a Linux kernel as I'd like. As much as I hate to admit it, I do not know what all of these settings do. My understanding is that most of them are general kernel hardening and performance, and the others are to protect against spoofing and DOS attacks.&lt;/p&gt;
&lt;p&gt;In fact, since I am not 100% sure exactly what each setting does, I took recommended settings from numerous sites (all linked &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#sysctl-references&quot;&gt;below&lt;/a&gt;) and combined them to figure out what should be set. I figure if multiple reputable sites mention the same setting, it's probably safe.&lt;/p&gt;
&lt;p&gt;If you have a better understanding of what these settings do, or have any other feedback/advice on them, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;let me know&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I won't provide &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt; code in this section.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Documentation on all the &lt;code&gt;sysctl&lt;/code&gt; settings/keys is severely lacking. The &lt;a href=&quot;https://github.com/torvalds/linux/tree/master/Documentation&quot;&gt;documentation I can find&lt;/a&gt; seems to reference the 2.2 version kernel. I could not find anything newer. If you know where I can, please &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#contacting-me&quot;&gt;let me know&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The reference sites listed &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#sysctl-references&quot;&gt;below&lt;/a&gt; have more comments on what each setting does.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;The &lt;code&gt;sysctl&lt;/code&gt; settings can be found in the &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/blob/master/linux-kernel-sysctl-hardening.md&quot;&gt;linux-kernel-sysctl-hardening.md&lt;/a&gt; file in this repo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before you make a kernel &lt;code&gt;sysctl&lt;/code&gt; change permanent, you can test it with the &lt;code&gt;sysctl&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -w [key&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;value]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -w kernel.ctrl-alt-del=0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: There are no spaces in &lt;code&gt;key=value&lt;/code&gt;, including before and after the space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you have tested a setting, and made sure it works without breaking your server, you can make it permanent by adding the values to &lt;code&gt;/etc/sysctl.conf&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ sudo cat /etc/sysctl.conf
kernel.ctrl-alt-del = 0
fs.file-max = 65535
...
kernel.sysrq = 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After updating the file you can reload the settings or reboot. To reload:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If &lt;code&gt;sysctl&lt;/code&gt; has trouble writing any settings then &lt;code&gt;sysctl -w&lt;/code&gt; or &lt;code&gt;sysctl -p&lt;/code&gt; will write an error to &lt;code&gt;stderr&lt;/code&gt;. You can use this to quickly find invalid settings in your &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sysctl -p &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Password Protect GRUB&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;If a bad actor has physical access to your server, they could use GRUB to gain unauthorized access to your system.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;If you forget the password, you'll have to go through &lt;a href=&quot;https://www.cyberciti.biz/tips/howto-recovering-grub-boot-loader-password.html&quot; rel=&quot;nofollow&quot;&gt;some work&lt;/a&gt; to recover the password.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;auto boot the default Debian install and require a password for anything else&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;This will only protect GRUB and anything behind it like your operating systems. Check your motherboard's documentation for password protecting your BIOS to prevent a bad actor from circumventing GRUB.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Create a &lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot; rel=&quot;nofollow&quot;&gt;Password-Based Key Derivation Function 2 (PBKDF2)&lt;/a&gt; hash of your password:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grub-mkpasswd-pbkdf2 -c 100000
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The below output is from using &lt;code&gt;password&lt;/code&gt; as the password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Enter password:
Reenter password:
PBKDF2 hash of your password is grub.pbkdf2.sha512.100000.2812C233DFC899EFC3D5991D8CA74068C99D6D786A54F603E9A1EFE7BAEDDB6AA89672F92589FAF98DB9364143E7A1156C9936328971A02A483A84C3D028C4FF.C255442F9C98E1F3C500C373FE195DCF16C56EEBDC55ABDD332DD36A92865FA8FC4C90433757D743776AB186BD3AE5580F63EF445472CC1D151FA03906D08A6D
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy everything &lt;strong&gt;after&lt;/strong&gt; &lt;code&gt;PBKDF2 hash of your password is&lt;/code&gt; , &lt;strong&gt;starting from and including&lt;/strong&gt; &lt;code&gt;grub.pbkdf2.sha512...&lt;/code&gt; to the end. You'll need this in the next step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;update-grub&lt;/code&gt; program uses scripts to generate configuration files it will use for GRUB's settings. Create the file &lt;code&gt;/etc/grub.d/01_password&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; the below code after replacing &lt;code&gt;[hash]&lt;/code&gt; with the hash you copied from the first step. This tells &lt;code&gt;update-grub&lt;/code&gt; to use this username and password for GRUB.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/bin/sh&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; -e

cat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;set superusers=&quot;grub&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;password_pbkdf2 grub [hash]&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/bin/sh&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;set&lt;/span&gt; -e

cat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;set superusers=&quot;grub&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;password_pbkdf2 grub grub.pbkdf2.sha512.100000.2812C233DFC899EFC3D5991D8CA74068C99D6D786A54F603E9A1EFE7BAEDDB6AA89672F92589FAF98DB9364143E7A1156C9936328971A02A483A84C3D028C4FF.C255442F9C98E1F3C500C373FE195DCF16C56EEBDC55ABDD332DD36A92865FA8FC4C90433757D743776AB186BD3AE5580F63EF445472CC1D151FA03906D08A6D&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the file's execute bit so &lt;code&gt;update-grub&lt;/code&gt; includes it when it updates GRUB's configuration:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo chmod a+x /etc/grub.d/01_password
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a backup of &lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt; and unset execute bit so &lt;code&gt;update-grub&lt;/code&gt; doesn't try to run it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/grub.d/10_linux /etc/grub.d/10_linux.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo chmod a-x /etc/grub.d/10_linux.&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make the default Debian install unrestricted (&lt;strong&gt;without&lt;/strong&gt; the password) while keeping everything else restricted (&lt;strong&gt;with&lt;/strong&gt; the password) modify &lt;code&gt;/etc/grub.d/10_linux&lt;/code&gt; and &lt;strong&gt;add&lt;/strong&gt; &lt;code&gt;--unrestricted&lt;/code&gt; to the &lt;code&gt;CLASS&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;/^CLASS=/ a CLASS=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;\$&lt;/span&gt;{CLASS} --unrestricted&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /etc/grub.d/10_linux
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update GRUB with &lt;code&gt;update-grub&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo update-grub
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Disable Root Login&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;If you have &lt;code&gt;sudo&lt;/code&gt; &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#limit-who-can-use-sudo&quot;&gt;configured properly&lt;/a&gt;, then the &lt;strong&gt;root&lt;/strong&gt; account will mostly never need to log in directly -- either at the terminal or remotely.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Be warned, this can cause issues with some configurations!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If your installation uses &lt;a href=&quot;https://linux.die.net/man/8/sulogin&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;sulogin&lt;/code&gt;&lt;/a&gt; (like Debian) to drop to a &lt;strong&gt;root&lt;/strong&gt; console during boot failures, then locking the &lt;strong&gt;root&lt;/strong&gt; account will prevent &lt;code&gt;sulogin&lt;/code&gt; from opening the &lt;strong&gt;root&lt;/strong&gt; shell and you will get this error:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Cannot open access to console, the root account is locked.

See sulogin(8) man page for more details.

Press Enter to continue.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To work around this, you can use the &lt;code&gt;--force&lt;/code&gt; option for &lt;code&gt;sulogin&lt;/code&gt;. Some distributions already include this, or some other, workaround.&lt;/p&gt;
&lt;p&gt;An alternative to locking the &lt;strong&gt;root&lt;/strong&gt; acount is set a long/complicated &lt;strong&gt;root&lt;/strong&gt; password and store it in a secured, non digital format. That way you have it when/if you need it.&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;locked &lt;strong&gt;root&lt;/strong&gt; account that nobody can use to log in as &lt;strong&gt;root&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Some distributions disable &lt;strong&gt;root&lt;/strong&gt; login by default (e.g. Ubuntu) so you may not need to do this step. Check with your distribution's documentation.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Lock the &lt;strong&gt;root&lt;/strong&gt; account:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo passwd -l root
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;[DZ]&lt;/code&gt; Change Default &lt;code&gt;umask&lt;/code&gt;&lt;/h3&gt;
&lt;details&gt;!! PROCEED AT YOUR OWN RISK !!
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;umask&lt;/code&gt; controls the &lt;strong&gt;default&lt;/strong&gt; permissions of files/folders when they are created. Insecure file/folder permissions give other accounts potentially unauthorized access to your data. This may include the ability to make configuration changes.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For &lt;strong&gt;non-root&lt;/strong&gt; accounts, there is no need for other accounts to get any access to the account's files/folders &lt;strong&gt;by default&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;For the &lt;strong&gt;root&lt;/strong&gt; account, there is no need for the file/folder primary group or other accounts to have any access to &lt;strong&gt;root&lt;/strong&gt;'s files/folders &lt;strong&gt;by default&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;When and if other accounts need access to a file/folder, you want to explicitly grant it using a combination of file/folder permissions and primary group.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Changing the default &lt;code&gt;umask&lt;/code&gt; can create unexpected problems. For example, if you set &lt;code&gt;umask&lt;/code&gt; to &lt;code&gt;0077&lt;/code&gt; for &lt;strong&gt;root&lt;/strong&gt;, then &lt;strong&gt;non-root&lt;/strong&gt; accounts &lt;strong&gt;will not&lt;/strong&gt; have access to application configuration files/folders in &lt;code&gt;/etc/&lt;/code&gt; which could break applications that do not run with &lt;strong&gt;root&lt;/strong&gt; privileges.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;set default &lt;code&gt;umask&lt;/code&gt; for &lt;strong&gt;non-root&lt;/strong&gt; accounts to &lt;strong&gt;0027&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;set default &lt;code&gt;umask&lt;/code&gt; for the &lt;strong&gt;root&lt;/strong&gt; account to &lt;strong&gt;0077&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;umask&lt;/code&gt; is a Bash built-in which means a user can change their own &lt;code&gt;umask&lt;/code&gt; setting.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Set default &lt;code&gt;umask&lt;/code&gt; for &lt;strong&gt;non-root&lt;/strong&gt; accounts to &lt;strong&gt;0027&lt;/strong&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/bash.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;umask 0027
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/profile /etc/profile.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
sudo cp --preserve /etc/bash.bashrc /etc/bash.bashrc.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\numask 0027         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/profile /etc/bash.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We also need to &lt;strong&gt;add&lt;/strong&gt; this line to &lt;code&gt;/etc/login.defs&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;UMASK 0027
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/login.defs /etc/login.defs.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nUMASK 0027         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/login.defs 
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set default &lt;code&gt;umask&lt;/code&gt; for the &lt;strong&gt;root&lt;/strong&gt; account to &lt;strong&gt;0077&lt;/strong&gt; by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/root/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;umask 0077
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /root/.bashrc /root/.bashrc.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\numask 0077         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /root/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/details&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Force Accounts To Use Secure Passwords&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;By default, accounts can use any password they want, including bad ones. &lt;a href=&quot;https://linux.die.net/man/5/pwquality.conf&quot; rel=&quot;nofollow&quot;&gt;pwquality&lt;/a&gt;/&lt;a href=&quot;https://linux.die.net/man/8/pam_pwquality&quot; rel=&quot;nofollow&quot;&gt;pam_pwquality&lt;/a&gt; addresses this security gap by providing &quot;a way to configure the default password quality requirements for the system passwords&quot; and checking &quot;its strength against a system dictionary and a set of rules for identifying poor choices.&quot;&lt;/p&gt;
&lt;h4&gt;Goal&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;enforced strong passwords&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;libpam-pwquality&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install libpam-pwquality
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell PAM to use &lt;code&gt;libpam-pwquality&lt;/code&gt; to enforce strong passwords by editing the file &lt;code&gt;/etc/pam.d/common-password&lt;/code&gt; and &lt;strong&gt;change&lt;/strong&gt; the line that starts like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;password        requisite                       pam_pwquality.so
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;password        requisite                       pam_pwquality.so retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1 maxrepeat=3 gecoschec
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above options are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;retry=3&lt;/code&gt; = prompt user 3 times before returning with error.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minlen=10&lt;/code&gt; = the minimum length of the password, factoring in any credits (or debits) from these:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;dcredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one digit&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ucredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one upper case letter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lcredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one lower case letter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ocredit=-1&lt;/code&gt; = must have at least &lt;strong&gt;one non-alphanumeric character&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;difok=3&lt;/code&gt; = at least 3 characters from the new password cannot have been in the old password&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxrepeat=3&lt;/code&gt; = allow a maximum of 3 repeated characters&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gecoschec&lt;/code&gt; = do not allow passwords with the account's name&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/pam.d/common-password /etc/pam.d/common-password.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

sudo sed -i -r -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;s/^(password\s+requisite\s+pam_pwquality.so)(.*)$/# \1\2         # commented by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\n\1 retry=3 minlen=10 difok=3 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1 maxrepeat=3 gecoschec         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; /etc/pam.d/common-password
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;2FA/MFA for SSH&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;Even though SSH is a pretty good security guard for your doors and windows, it is still a visible door that bad-actors can see and try to brute-force in. &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#fail2ban-application-intrusion-detection-and-prevention&quot;&gt;Fail2ban&lt;/a&gt; will monitor for these brute-force attempts but there is no such thing as being too secure.&lt;/p&gt;
&lt;p&gt;Using Two Factor Authentication (2FA) / Multi Factor Authentication (MFA) requires anyone entering to have &lt;strong&gt;two&lt;/strong&gt; keys to enter which makes it harder for bad actors. The two keys are:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Their password&lt;/li&gt;
&lt;li&gt;A 6 digit token that changes every 30 seconds&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Without both keys, they won't be able to get in.&lt;/p&gt;
&lt;h4&gt;Why Not&lt;/h4&gt;
&lt;p&gt;Many folks might find the experience cumbersome or annoying. And, acesss to your system is dependent on the accompanying authenticator app that generates the code.&lt;/p&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;2FA/MFA enabled for all SSH connections&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Before you do this, you should have an idea of how 2FA/MFA works and you'll need an authenticator app on your phone to continue.&lt;/li&gt;
&lt;li&gt;We'll use &lt;a href=&quot;https://github.com/google/google-authenticator-libpam&quot;&gt;google-authenticator-libpam&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With the below configuration, a user will only need to enter their 2FA/MFA code if they are logging on with their password but not &lt;strong&gt;not&lt;/strong&gt; if they are using &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#ssh-publicprivate-keys&quot;&gt;SSH public/private keys&lt;/a&gt;. Check the documentation on how to change this behavior to suite your requirements.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install it &lt;code&gt;libpam-google-authenticator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install libpam-google-authenticator
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Make sure you're logged in as the ID you want to enable 2FA/MFA for&lt;/strong&gt; and &lt;strong&gt;execute&lt;/strong&gt; &lt;code&gt;google-authenticator&lt;/code&gt; to create the necessary token data:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
google-authenticator
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;Do you want authentication tokens to be time-based (y/n) y
https://www.google.com/chart?chs=200x200&amp;amp;chld=M|0&amp;amp;cht=qr&amp;amp;chl=otpauth://totp/user@host%3Fsecret%3DR4ZWX34FQKZROVX7AGLJ64684Y%26issuer%3Dhost

...

Your new secret key is: R3NVX3FFQKZROVX7AGLJUGGESY
Your verification code is 751419
Your emergency scratch codes are:
  12345678
  90123456
  78901234
  56789012
  34567890

Do you want me to update your &quot;/home/user/.google_authenticator&quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds. In order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with
poor time synchronization, you can increase the window from its default
size of +-1min (window size of 3) to about +-4min (window size of
17 acceptable tokens).
Do you want to do so? (y/n) y

If the computer that you are logging into isn't hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Notice this is &lt;strong&gt;not run as root&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Select default option (y in most cases) for all the questions it asks and remember to save the emergency scratch codes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we need to enable it as an authentication method for SSH by &lt;strong&gt;adding&lt;/strong&gt; this line to &lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;auth       required     pam_google_authenticator.so nullok
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Check &lt;a href=&quot;https://github.com/google/google-authenticator-libpam/blob/master/README.md#nullok&quot;&gt;here&lt;/a&gt; for what &lt;code&gt;nullok&lt;/code&gt; means.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/pam.d/sshd /etc/pam.d/sshd.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nauth       required     pam_google_authenticator.so nullok         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/pam.d/sshd
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell SSH to levearage it by &lt;strong&gt;adding&lt;/strong&gt; this line in &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ChallengeResponseAuthentication yes
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo cp --preserve /etc/ssh/sshd_config /etc/ssh/sshd_config.&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y%m%d%H%M%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;\nChallengeResponseAuthentication yes         # added by &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; on &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%Y-%m-%d @ %H:%M:%S&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee -a /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart &lt;code&gt;ssh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo service sshd restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Apticron - Automatic Update Notifier&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;It is important to keep your server up-to-date with all security patches. Otherwise you're at risk of known security vulnerabilities that bad-actors could use to gain unauthorized access to your server.&lt;/p&gt;
&lt;p&gt;You have two options:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Configure your server for unattended updates&lt;/li&gt;
&lt;li&gt;Be notified when updates are available&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Which option you pick is up to you but I prefer being notified by e-mail when updates are available. This is because an update may break something else. If the server updates it-self then I may not know and, if I do find out, I'll have to scramble to fix it. If it e-mails me when updates are available, then I can do the updates at my schedule.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Your server will need a way to send e-mails for this to work&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;apticron&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On Debian based systems:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install apticron
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the value of &lt;code&gt;EMAIL&lt;/code&gt; in &lt;code&gt;/etc/apticron/apticron.conf&lt;/code&gt; to your e-mail address.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Orphaned Software&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;As you use your system, and you install and uninstall software, you'll eventually end up with orphaned, or unused software/packages/libraries. You don't need to remove them, but if you don't need them, why keep them? When security is a priority, anything not explicitly needed is a potential security threat. You want to keep your server as trimmed and lean as possible.&lt;/p&gt;
&lt;h4&gt;Notes&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Each distribution manages software/packages/libraries differently so how you find and remove orphaned packages will be different.&lt;/li&gt;
&lt;li&gt;So far I only have steps for Debian; I will add for other distributions as I learn how.&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Steps&lt;/h4&gt;
&lt;h5&gt;Debian&lt;/h5&gt;
&lt;p&gt;For Debian based distributions, you can use &lt;a href=&quot;http://freshmeat.sourceforge.net/projects/deborphan/&quot; rel=&quot;nofollow&quot;&gt;deborphan&lt;/a&gt; to find orphaned packages.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;deborphan&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt install deborphan
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;deborphan&lt;/code&gt; as &lt;strong&gt;root&lt;/strong&gt; to see a list of orphaned packages:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo deborphan
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;pre&gt;
&lt;code&gt;libxapian30
libpipeline1
&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pass it's output to &lt;code&gt;apt&lt;/code&gt; to remove them:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo apt --autoremove purge &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will want to repeatedly run this command until &lt;code&gt;deborphan&lt;/code&gt; no longer returns any orphaned packages.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#editing-configuration-files---for-the-lazy&quot;&gt;For the lazy&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; [[ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; wc -l&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; 0 ]] &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
    sudo apt --autoremove purge &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;deborphan&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Lynis - Linux Security Auditing&lt;/h3&gt;
&lt;h4&gt;Why&lt;/h4&gt;
&lt;p&gt;From &lt;a href=&quot;https://cisofy.com/lynis/&quot; rel=&quot;nofollow&quot;&gt;https://cisofy.com/lynis/&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lynis is a battle-tested security tool for systems running Linux, macOS, or Unix-based operating system. It performs an extensive health scan of your systems to support system hardening and compliance testing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Goals&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;Lynis installed&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;Notes&lt;/h4&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;h4&gt;Steps&lt;/h4&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;lynis&lt;/code&gt;. &lt;a href=&quot;https://cisofy.com/lynis/#installation&quot; rel=&quot;nofollow&quot;&gt;https://cisofy.com/lynis/#installation&lt;/a&gt; has detailed instructions on how to install it for your distribution.&lt;/p&gt;
&lt;p&gt;On Debian based systems, using CISOFY's community software repository:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo wget -O - https://packages.cisofy.com/keys/cisofy-software-public.key &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo apt-key add -
sudo apt install apt-transport-https
sudo &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;deb https://packages.cisofy.com/community/lynis/deb/ stable main&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sudo tee /etc/apt/sources.list.d/cisofy-lynis.list
sudo apt update
sudo apt install lynis
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update it:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo lynis update info
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run a security audit:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sudo lynis audit system
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will scan your server, report its audit findings, and at the end it will give you suggestions. Spend some time going through the output and address gaps as necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;Miscellaneous&lt;/h2&gt;
&lt;h3&gt;Contacting Me&lt;/h3&gt;
&lt;p&gt;For any questions, comments, concerns, feedback, or issues, submit a &lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server/issues/new&quot;&gt;new issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Additional References&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Acknowledgments&lt;/h3&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;h3&gt;Disclaimer / Warranty&lt;/h3&gt;
&lt;p&gt;This guide comes with ABSOLUTELY NO WARRANTY. Use with caution. I take no responsibility for anything, related to or not related to this guide.&lt;/p&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/imthenachoman/How-To-Secure-A-Linux-Server#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;)&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 16 Feb 2019 06:47:25 +0000</pubDate>
<dc:creator>known</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/83817?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>imthenachoman/How-To-Secure-A-Linux-Server</og:title>
<og:url>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</og:url>
<og:description>An evolving how-to guide for securing a Linux server. - imthenachoman/How-To-Secure-A-Linux-Server</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/imthenachoman/How-To-Secure-A-Linux-Server</dc:identifier>
</item>
</channel>
</rss>