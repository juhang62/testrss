<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>The Embedded Rust Book</title>
<link>https://rust-embedded.github.io/book/intro/index.html</link>
<guid isPermaLink="true" >https://rust-embedded.github.io/book/intro/index.html</guid>
<description>&lt;p&gt;Welcome to The Embedded Rust Book: An introductory book about using the Rust Programming Language on &quot;Bare Metal&quot; embedded systems, such as Microcontrollers.&lt;/p&gt;

&lt;p&gt;Embedded Rust is for everyone who wants to do embedded programming while taking advantage of the higher-level concepts and safety guarantees the Rust language provides. (See also &lt;a href=&quot;https://doc.rust-lang.org/book/ch00-00-introduction.html&quot;&gt;Who Rust Is For&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The goals of this book are:&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Get developers up to speed with embedded Rust development. i.e. How to set up a development environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Share &lt;em&gt;current&lt;/em&gt; best practices about using Rust for embedded development. i.e. How to best use Rust language features to write more correct embedded software.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Serve as a cookbook in some cases. e.g. How do I do mix C and Rust in a single project?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This book tries to be as general as possible but to make things easier for both the readers and the writers it uses the ARM Cortex-M architecture in all its examples. However, the book doesn't assume that the reader is familiar with this particular architecture and explains details particular to this architecture where required.&lt;/p&gt;

&lt;p&gt;This book caters towards people with either some embedded background or some Rust background, however we believe everybody curious about embedded Rust programming can get something out of this book. For those without any prior knowledge we suggest you read the &quot;Assumptions and Prerequisites&quot; section and catch up on missing knowledge to get more out of the book and improve your reading experience. You can check out the &quot;Other Resources&quot; section to find resources on topics you might want to catch up on.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;header&quot; href=&quot;https://rust-embedded.github.io/book/intro/index.html#assumptions-and-prerequisites&quot; id=&quot;assumptions-and-prerequisites&quot;&gt;Assumptions and Prerequisites&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;You are comfortable using the Rust Programming Language, and have written, run, and debugged Rust applications on a desktop environment. You should also be familiar with the idioms of the &lt;a href=&quot;https://doc.rust-lang.org/edition-guide/&quot;&gt;2018 edition&lt;/a&gt; as this book targets Rust 2018.&lt;/li&gt;
&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;You are comfortable developing and debugging embedded systems in another language such as C, C++, or Ada, and are familiar with concepts such as:
&lt;ul&gt;&lt;li&gt;Cross Compilation&lt;/li&gt;
&lt;li&gt;Memory Mapped Peripherals&lt;/li&gt;
&lt;li&gt;Interrupts&lt;/li&gt;
&lt;li&gt;Common interfaces such as I2C, SPI, Serial, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a class=&quot;header&quot; href=&quot;https://rust-embedded.github.io/book/intro/index.html#other-resources&quot; id=&quot;other-resources&quot;&gt;Other Resources&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you are unfamiliar with anything mentioned above or if you want more information about a specific topic mentioned in this book you might find some of these resources helpful.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Topic&lt;/th&gt;
&lt;th&gt;Resource&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody readability=&quot;8.3716814159292&quot;&gt;&lt;tr readability=&quot;2.7216494845361&quot;&gt;&lt;td&gt;Rust&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://doc.rust-lang.org/book/&quot;&gt;Rust Book&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If you are not yet comfortable with Rust, we highly suggest reading the this book.&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.6260162601626&quot;&gt;&lt;td&gt;Rust, Embedded&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://docs.rust-embedded.org&quot;&gt;Embedded Rust Bookshelf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Here you can find several other resources provided by Rust's Embedded Working Group.&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.7234042553191&quot;&gt;&lt;td&gt;Rust, Embedded&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://docs.rust-embedded.org/embedonomicon/&quot;&gt;Embedonomicon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The nitty gritty details when doing embedded programming in Rust.&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.7303370786517&quot;&gt;&lt;td&gt;Rust, Embedded&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://docs.rust-embedded.org/faq.html&quot;&gt;embedded FAQ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Frequently asked questions about Rust in an embedded context.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Interrupts&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Interrupt&quot;&gt;Interrupt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1.2916666666667&quot;&gt;&lt;td&gt;Memory-mapped IO/Peripherals&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Memory-mapped_I/O&quot;&gt;Memory-mapped I/O&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.3488372093023&quot;&gt;&lt;td&gt;SPI, UART, RS232, USB, I2C, TTL&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://electronics.stackexchange.com/questions/37814/usart-uart-rs232-usb-spi-i2c-ttl-etc-what-are-all-of-these-and-how-do-th&quot;&gt;Stack Exchange about SPI, UART, and other interfaces&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;This book generally assumes that you’re reading it front-to-back. Later chapters build on concepts in earlier chapters, and earlier chapters may not dig into details on a topic, revisiting the topic in a later chapter.&lt;/p&gt;
&lt;p&gt;This book will be using the &lt;a href=&quot;http://www.st.com/en/evaluation-tools/stm32f3discovery.html&quot;&gt;STM32F3DISCOVERY&lt;/a&gt; development board from STMicroelectronics for the majority of the examples contained within. This board is based on the ARM Cortex-M architecture, and while basic functionality is the same across most CPUs based on this architecture, peripherals and other implementation details of Microcontrollers are different between different vendors, and often even different between Microcontroller families from the same vendor.&lt;/p&gt;
&lt;p&gt;For this reason, we suggest purchasing the &lt;a href=&quot;http://www.st.com/en/evaluation-tools/stm32f3discovery.html&quot;&gt;STM32F3DISCOVERY&lt;/a&gt; development board for the purpose of following the examples in this book.&lt;/p&gt;

&lt;p&gt;The work on this book is coordinated in &lt;a href=&quot;https://github.com/rust-embedded/book&quot;&gt;this repository&lt;/a&gt; and is mainly developed by the &lt;a href=&quot;https://github.com/rust-embedded/wg#the-resources-team&quot;&gt;resources team&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have trouble following the instructions in this book or find that some section of the book is not clear enough or hard to follow then that's a bug and it should be reported in &lt;a href=&quot;https://github.com/rust-embedded/book/issues/&quot;&gt;the issue tracker&lt;/a&gt; of this book.&lt;/p&gt;
&lt;p&gt;Pull requests fixing typos and adding new content are very welcome!&lt;/p&gt;
&lt;nav class=&quot;nav-wrapper&quot; aria-label=&quot;Page navigation&quot;&gt;

&lt;/nav&gt;</description>
<pubDate>Sat, 27 Apr 2019 17:49:08 +0000</pubDate>
<dc:creator>formalsystem</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://rust-embedded.github.io/book/intro/index.html</dc:identifier>
</item>
<item>
<title>Structure and Interpretation of Classical Mechanics (2015)</title>
<link>https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/toc.html</link>
<guid isPermaLink="true" >https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/toc.html</guid>
<description>&lt;p id=&quot;pref-1&quot; class=&quot;toc1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/preface001.html&quot;&gt;Preface&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;ack-1&quot; class=&quot;toc1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/acknowledgments.html&quot;&gt;Acknowledgments&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-1&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html&quot;&gt;&lt;strong&gt;1   Lagrangian Mechanics&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-2&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-2&quot;&gt;1.1     Configuration Spaces&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-3&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-3&quot;&gt;1.2     Generalized Coordinates&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-4&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-4&quot;&gt;1.3     The Principle of Stationary Action&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-5&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-5&quot;&gt;1.4     Computing Actions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6&quot;&gt;1.5     The Euler–Lagrange Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-5-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-5-1&quot;&gt;1.5.1  Derivation of the Lagrange Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-5-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-5-2&quot;&gt;1.5.2  Computing Lagrange’s Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6a&quot;&gt;1.6     How to Find Lagrangians&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-6-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-6-1&quot;&gt;1.6.1  Coordinate Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-6-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-6-2&quot;&gt;1.6.2  Systems with Rigid Constraints&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-6-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-6-3&quot;&gt;1.6.3  Constraints as Coordinate Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-6-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-6-4&quot;&gt;1.6.4  The Lagrangian Is Not Unique&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6b&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6b&quot;&gt;1.7     Evolution of Dynamical State&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6c&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6c&quot;&gt;1.8     Conserved Quantities&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-8-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-8-1&quot;&gt;1.8.1  Conserved Momenta&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-8-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-8-2&quot;&gt;1.8.2  Energy Conservation&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-8-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-8-3&quot;&gt;1.8.3  Central Forces in Three Dimensions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-8-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-8-4&quot;&gt;1.8.4  The Restricted Three-Body Problem&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-8-5&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-8-5&quot;&gt;1.8.5  Noether’s Theorem&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6d&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6d&quot;&gt;1.9     Abstraction of Path Functions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6e&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6e&quot;&gt;1.10     Constrained Motion&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-10-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-10-1&quot;&gt;1.10.1  Coordinate Constraints&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-10-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-10-2&quot;&gt;1.10.2  Derivative Constraints&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_1-10-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h3_1-10-3&quot;&gt;1.10.3  Nonholonomic Systems&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6f&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6f&quot;&gt;1.11     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-6g&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter001.html#h1-6g&quot;&gt;1.12     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-2&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html&quot;&gt;&lt;strong&gt;2   Rigid Bodies&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-7&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-7&quot;&gt;2.1     Rotational Kinetic Energy&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-8&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-8&quot;&gt;2.2     Kinematics of Rotation&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-8a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-8a&quot;&gt;2.3     Moments of Inertia&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-9&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-9&quot;&gt;2.4     Inertia Tensor&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-9a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-9a&quot;&gt;2.5     Principal Moments of Inertia&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-10&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-10&quot;&gt;2.6     Vector Angular Momentum&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-11&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-11&quot;&gt;2.7     Euler Angles&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-12&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-12&quot;&gt;2.8     Motion of a Free Rigid Body&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-8-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-8-1&quot;&gt;2.8.1  Computing the Motion of Free Rigid Bodies&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-8-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-8-2&quot;&gt;2.8.2  Qualitative Features&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-12a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-12a&quot;&gt;2.9     Euler’s Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-12b&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-12b&quot;&gt;2.10     Axisymmetric Tops&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-12c&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-12c&quot;&gt;2.11     Spin-Orbit Coupling&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-11-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-11-1&quot;&gt;2.11.1  Development of the Potential Energy&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-11-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-11-2&quot;&gt;2.11.2  Rotation of the Moon and Hyperion&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-11-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-11-3&quot;&gt;2.11.3  Spin-Orbit Resonances&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-12d&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-12d&quot;&gt;2.12     Nonsingular Coordinates and Quaternions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_2-12-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h3_2-12-1&quot;&gt;2.12.1  Motion in Terms of Quaternions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-13&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-13&quot;&gt;2.13     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-14&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter002.html#h1-14&quot;&gt;2.14     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-3&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html&quot;&gt;&lt;strong&gt;3   Hamiltonian Mechanics&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-15&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-15&quot;&gt;3.1     Hamilton’s Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-1-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-1-1&quot;&gt;3.1.1  The Legendre Transformation&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-1-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-1-2&quot;&gt;3.1.2  Hamilton’s Equations from the Action Principle&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-1-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-1-3&quot;&gt;3.1.3  A Wiring Diagram&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-16&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-16&quot;&gt;3.2     Poisson Brackets&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-17&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-17&quot;&gt;3.3     One Degree of Freedom&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-18&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-18&quot;&gt;3.4     Phase Space Reduction&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-4-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-4-1&quot;&gt;3.4.1  Lagrangian Reduction&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-19&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-19&quot;&gt;3.5     Phase Space Evolution&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-5-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-5-1&quot;&gt;3.5.1  Phase-Space Description Is Not Unique&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-20&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-20&quot;&gt;3.6     Surfaces of Section&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-6-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-6-1&quot;&gt;3.6.1  Periodically Driven Systems&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-6-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-6-2&quot;&gt;3.6.2  Computing Stroboscopic Surfaces of Section&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-6-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-6-3&quot;&gt;3.6.3  Autonomous Systems&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-6-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-6-4&quot;&gt;3.6.4  Computing Hénon–Heiles Surfaces of Section&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_3-6-5&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h3_3-6-5&quot;&gt;3.6.5  Non-Axisymmetric Top&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-21&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-21&quot;&gt;3.7     Exponential Divergence&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-21a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-21a&quot;&gt;3.8     Liouville’s Theorem&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-21b&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-21b&quot;&gt;3.9     Standard Map&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-22&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-22&quot;&gt;3.10     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-23&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter003.html#h1-23&quot;&gt;3.11     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-4&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html&quot;&gt;&lt;strong&gt;4   Phase Space Structure&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-24a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-24a&quot;&gt;4.1     Emergence of the Divided Phase Space&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-24&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-24&quot;&gt;4.2     Linear Stability&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-2-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-2-1&quot;&gt;4.2.1  Equilibria of Differential Equations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-2-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-2-2&quot;&gt;4.2.2  Fixed Points of Maps&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-2-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-2-3&quot;&gt;4.2.3  Relations Among Exponents&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-25&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-25&quot;&gt;4.3     Homoclinic Tangle&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-3-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-3-1&quot;&gt;4.3.1  Computation of Stable and Unstable Manifolds&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-26&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-26&quot;&gt;4.4     Integrable Systems&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-26a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-26a&quot;&gt;4.5     Poincaré–Birkhoff Theorem&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-5-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-5-1&quot;&gt;4.5.1  Computing the Poincaré–Birkhoff Construction&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-26b&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-26b&quot;&gt;4.6     Invariant Curves&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-6-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-6-1&quot;&gt;4.6.1  Finding Invariant Curves&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_4-6-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h3_4-6-2&quot;&gt;4.6.2  Dissolution of Invariant Curves&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-27&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-27&quot;&gt;4.7     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-28&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter004.html#h1-28&quot;&gt;4.8     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-5&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html&quot;&gt;&lt;strong&gt;5   Canonical Transformations&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-29&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-29&quot;&gt;5.1     Point Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-29a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-29a&quot;&gt;5.2     General Canonical Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-2-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-2-1&quot;&gt;5.2.1  Time-Dependent Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-2-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-2-2&quot;&gt;5.2.2  Abstracting the Canonical Condition&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-30&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-30&quot;&gt;5.3     Invariants of Canonical Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-31&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-31&quot;&gt;5.4     Generating Functions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-4-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-4-1&quot;&gt;5.4.1  &lt;em&gt;F&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; Generates Canonical Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-4-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-4-2&quot;&gt;5.4.2  Generating Functions and Integral Invariants&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-4-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-4-3&quot;&gt;5.4.3  Types of Generating Functions&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-4-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-4-4&quot;&gt;5.4.4  Point Transformations&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-4-5&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-4-5&quot;&gt;5.4.5  Total Time Derivatives&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-32&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-32&quot;&gt;5.5     Extended Phase Space&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_5-5-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h3_5-5-1&quot;&gt;5.5.1  Poincaré–Cartan Integral Invariant&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-33&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-33&quot;&gt;5.6     Reduced Phase Space&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-34&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-34&quot;&gt;5.7     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-35&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter005.html#h1-35&quot;&gt;5.8     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-6&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html&quot;&gt;&lt;strong&gt;6   Canonical Evolution&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-36&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-36&quot;&gt;6.1     Hamilton–Jacobi Equation&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-1-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-1-1&quot;&gt;6.1.1  Harmonic Oscillator&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-1-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-1-2&quot;&gt;6.1.2  Hamilton–Jacobi Solution of the Kepler Problem&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-1-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-1-3&quot;&gt;6.1.3  &lt;em&gt;F&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; and the Lagrangian&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-1-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-1-3&quot;&gt;6.1.4  The Action Generates Time Evolution&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-37&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-37&quot;&gt;6.2     Time Evolution is Canonical&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-2-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-2-1&quot;&gt;6.2.1  Another View of Time Evolution&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_6-2-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h3_6-2-2&quot;&gt;6.2.2  Yet Another View of Time Evolution&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-38&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-38&quot;&gt;6.3     Lie Transforms&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-39&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-39&quot;&gt;6.4     Lie Series&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-39a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-39a&quot;&gt;6.5     Exponential Identities&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-40&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-40&quot;&gt;6.6     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-41&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter006.html#h1-41&quot;&gt;6.7     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-7&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html&quot;&gt;&lt;strong&gt;7   Canonical Perturbation Theory&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-42&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-42&quot;&gt;7.1     Perturbation Theory with Lie Series&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-42a&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-42a&quot;&gt;7.2     Pendulum as a Perturbed Rotor&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-2-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-2-1&quot;&gt;7.2.1  Higher Order&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-2-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-2-2&quot;&gt;7.2.2  Eliminating Secular Terms&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-43&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-43&quot;&gt;7.3     Many Degrees of Freedom&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-3-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-3-1&quot;&gt;7.3.1  Driven Pendulum as a Perturbed Rotor&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-44&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-44&quot;&gt;7.4     Nonlinear Resonance&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-4-1&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-4-1&quot;&gt;7.4.1  Pendulum Approximation&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-4-2&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-4-2&quot;&gt;7.4.2  Reading the Hamiltonian&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-4-3&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-4-3&quot;&gt;7.4.3  Resonance-Overlap Criterion&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-4-4&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-4-4&quot;&gt;7.4.4  Higher-Order Perturbation Theory&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh3_7-4-5&quot; class=&quot;toc-h3&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h3_7-4-5&quot;&gt;7.4.5  Stability of the Inverted Vertical Equilibrium&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-45&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-45&quot;&gt;7.5     Summary&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;Rh1-46&quot; class=&quot;toc-h1&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter007.html#h1-46&quot;&gt;7.6     Projects&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-8&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter008.html&quot;&gt;&lt;strong&gt;8   Appendix: Scheme&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;chap-9&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/chapter009.html&quot;&gt;&lt;strong&gt;9   Appendix: Our Notation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;bib-1&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/bibliography001.html&quot;&gt;References&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;app-1&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/appendix001.html&quot;&gt;List of Exercises&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;indx-1&quot; class=&quot;toc&quot;&gt;&lt;a href=&quot;https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/index.html&quot;&gt;Index&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 27 Apr 2019 11:35:15 +0000</pubDate>
<dc:creator>Tomte</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mitpress.mit.edu/sites/default/files/titles/content/sicm_edition_2/toc.html</dc:identifier>
</item>
<item>
<title>Apple has removed or restricted several screen-time and parental-control apps</title>
<link>https://www.nytimes.com/2019/04/27/technology/apple-screen-time-trackers.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2019/04/27/technology/apple-screen-time-trackers.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;SAN FRANCISCO — They all tell a similar story: They ran apps that helped people limit the time they and their children spent on iPhones. Then Apple created its own screen-time tracker. And then Apple made staying in business very, very difficult.&lt;br/&gt;&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Over the past year, Apple has removed or restricted at least 11 of the 17 most downloaded screen-time and parental-control apps, according to an analysis by The New York Times and Sensor Tower, an app-data firm. Apple has also clamped down on a number of lesser-known apps.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In some cases, Apple forced companies to remove features that allowed parents to control their children’s devices or that blocked children’s access to certain apps and adult content. In other cases, it simply pulled the apps from its App Store.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Some app makers with thousands of paying customers have shut down. Most others say their futures are in jeopardy.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“They yanked us out of the blue with no warning,” said Amir Moussavian, chief executive of OurPact, the top parental-control iPhone app, with more than three million downloads. In February, Apple pulled the app, which accounted for 80 percent of OurPact’s revenue, from its App Store.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“They are systematically killing the industry,” Mr. Moussavian said.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The screen-time app makers are the latest companies to suddenly find themselves both competing against Apple and at the mercy of the tech titan. By controlling the iPhone App Store, where companies find some of their most lucrative customers, Apple has unusual power over the fortunes of other corporations.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;
&lt;div class=&quot;css-1xdhyk6 erfvjey0&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Image&lt;/span&gt;&lt;img alt=&quot;&quot; class=&quot;css-1m50asq&quot; src=&quot;https://static01.nyt.com/images/2019/04/25/business/00apple1/merlin_152066325_0d594d11-50b5-4069-af34-918dabb21791-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot; srcset=&quot;https://static01.nyt.com/images/2019/04/25/business/00apple1/merlin_152066325_0d594d11-50b5-4069-af34-918dabb21791-articleLarge.jpg?quality=90&amp;amp;auto=webp 600w,https://static01.nyt.com/images/2019/04/25/business/00apple1/merlin_152066325_0d594d11-50b5-4069-af34-918dabb21791-jumbo.jpg?quality=90&amp;amp;auto=webp 1024w,https://static01.nyt.com/images/2019/04/25/business/00apple1/merlin_152066325_0d594d11-50b5-4069-af34-918dabb21791-superJumbo.jpg?quality=90&amp;amp;auto=webp 2048w&quot; sizes=&quot;((min-width: 600px) and (max-width: 1004px)) 84vw, (min-width: 1005px) 60vw, 100vw&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2019/04/25/business/00apple1/merlin_152066325_0d594d11-50b5-4069-af34-918dabb21791-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;css-8i9d0s e13ogyst0&quot;&gt;Amir Moussavian, chief executive of OurPact, a popular parental-control iPhone app, said Apple had yanked his company’s app from the App Store, crippling the business.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-vuqh7u e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;John Francis Peters for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Executives at the app makers believe they are being targeted because their apps could hurt Apple’s business. Apple’s tools, they add, aren’t as aggressive about limiting screen time and don’t provide as many options.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“Their incentives aren’t really aligned for helping people solve their problem,” said Fred Stutzman, chief executive of Freedom, a screen-time app with more than 770,000 downloads before Apple removed it in August. “Can you really trust that Apple wants people to spend less time on their phones?”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Timothy D. Cook, Apple’s chief executive, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.youtube.com/watch?v=MU-SXaFpSts&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;said at a conference&lt;/a&gt; this month that Apple had added screen-time tools to help people monitor and manage their phone use. “We don’t want people using their phones all the time,” he said. “This has never been an objective for us.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;On Thursday, two of the most popular parental-control apps, Kidslox and Qustodio, filed a complaint with the European Union’s competition office. Kidslox said business had plummeted since Apple forced changes to its app that made it less useful than Apple’s tool.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple also faces an antitrust complaint in Russia from Kaspersky Lab — a Russian cybersecurity firm that American security officials claim has ties to the Russian government — which said Apple had forced it to remove key features from its parental-control app. The company is exploring a similar complaint in Europe, a Kaspersky spokeswoman said.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“We treat all apps the same, including those that compete with our own services,” said Tammy Levine, an Apple spokeswoman. “Our incentive is to have a vibrant app ecosystem that provides consumers access to as many quality apps as possible.” She said Apple removed or required changes to the apps because they could gain too much information from users’ devices. She added that the timing of Apple’s moves was not related to its debut of similar tools.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;[Get the&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/newsletters/signup/TU?module=inline&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Bits newsletter&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;for the latest from Silicon Valley and the technology industry.]&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple is facing other accusations that it is abusing its dominant position to lift itself and bury rivals — an issue that has become more important as the iPhone maker expands into &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/03/25/technology/apple-news-streaming-service.html?module=inline&quot; title=&quot;&quot;&gt;new markets like television, news and gaming&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;

&lt;span class=&quot;css-8i9d0s e13ogyst0&quot;&gt;The OurPact app had more than three million downloads.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-vuqh7u e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;John Francis Peters for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In the United States, Senator Elizabeth Warren of Massachusetts, a Democratic candidate for president, recently &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/03/13/technology/elizabeth-warren-tech-companies.html?module=inline&quot; title=&quot;&quot;&gt;suggested separating the App Store&lt;/a&gt; from Apple as part of her proposal to rein in the American tech giants.&lt;/p&gt;
&lt;h2 class=&quot;css-sbs9ef eoo0vm40&quot; id=&quot;link-7fce9e5d&quot;&gt;An Unhappy Parent&lt;/h2&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In early 2018, two prominent Wall Street investors urged Apple to address concerns that people were becoming addicted to their smartphones. In June, the company announced plans for tools to help iPhone owners track and limit their and their children’s phone use. It began offering the tools in September, tucked into the phone’s settings menu.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Shortly after &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/06/04/technology/apples-wwdc-live.html?module=inline&quot; title=&quot;&quot;&gt;announcing its new tools&lt;/a&gt;, Apple began purging apps that offered similar services.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple told the companies that their apps violated App Store rules, like enabling one iPhone to control another, although it had allowed such practices for years and had approved hundreds of versions of their apps.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple allows corporations to use such software to control employees’ phones. But last year, the company stopped apps from using the software to enable parents to control their children’s devices. The Apple spokeswoman said Apple had blocked the practice because app makers could gain access to too much information on the children’s devices.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Unlike apps such as OurPact, Apple’s tools don’t allow parents to schedule different times throughout a day when an app is blocked — for school or family dinner. And Apple’s tool blocks adult content only on its Safari web browser and some apps, not on other browsers or many popular apps, like Twitter, YouTube and Instagram.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Bruce Chantry, a 47-year-old father of two outside Cleveland, said he had used OurPact and Mobicip for years until Apple forced them to gut key features.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;

&lt;span class=&quot;css-8i9d0s e13ogyst0&quot;&gt;Suren Ramasubbu, left, chief executive of Mobicip, discussing the parental-control app with colleagues. Apple removed Mobicip from the App Store in February.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-vuqh7u e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;Samyukta Lakshmi for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;He has found Apple’s tool more complicated and less restrictive. His children have already found workarounds to Apple’s web-filtering tool and, unlike the apps he had used, it has no kill switch to quickly disable certain apps on their phones, Mr. Chantry said.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“It didn’t make managing these new digital threats any easier,” he said. “It actually made it more difficult.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple’s tool has another shortcoming: It requires the whole family to own iPhones. Many apps removed by Apple allowed parents with iPhones to control their children’s Android devices.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple has also limited the options for adults who want to fight their own phone addiction. In August, it abruptly pulled down the Freedom app, which allowed users to temporarily disable certain apps and websites. Mr. Stutzman, Freedom’s chief executive, said that to return to iPhones, he was forced to stop blocking apps and to block sites only on Apple’s Safari browser.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Apple’s tool now appears to be one of the few ways to disable apps, if not the only one. Yet when a user hits an app’s time limit on Apple’s tool, it provides a single option: “Ignore Limit.”&lt;/p&gt;
&lt;h2 class=&quot;css-sbs9ef eoo0vm40&quot; id=&quot;link-55e331c5&quot;&gt;‘No Reason, No Detail’&lt;/h2&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The app makers said they were most frustrated by the process of meeting Apple’s sudden demands. In many cases, Apple alerted them that their apps would be removed — and their businesses crippled — via a short note, according to correspondence viewed by The Times.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;When app makers asked for more information, responses were often perfunctory and slow in coming.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“As a developer who’s been on the App Store for 10 years, I would expect some courtesy from Apple of at least a phone call to explain what we’re doing wrong,” said Suren Ramasubbu, the head of Mobicip, a parental-control app that had about 2.5 million downloads earlier this year, about 70 percent of them on iPhones.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-79elbk&quot; data-testid=&quot;photoviewer-wrapper&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r15&quot;&gt;

&lt;span class=&quot;css-8i9d0s e13ogyst0&quot;&gt;Mr. Ramasubbu said he had repeatedly tried to get guidance from Apple so he could make adjustments to his app.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-vuqh7u e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;Samyukta Lakshmi for The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;On Jan. 19, Mr. Ramasubbu received a message from Apple that said he had 30 days to change the Mobicip app or it would be removed from the App Store. “If you have any questions about this information, please reply to this message to let us know,” the note said. “Best regards, App Store Review.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Over the next 27 days, Mr. Ramasubbu responded four times seeking more information. He eventually resubmitted the app with changes he hoped would satisfy Apple’s demands.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Then, with Mobicip’s deadline just a few days away, Apple responded three times to his earlier detailed questions — with virtually the same message: “Your app uses public A.P.I.s in an unapproved manner, which does not comply with guideline 2.5.1 of the App Store Review Guidelines.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“We hear you loud and clear,” Mr. Ramasubbu responded on the morning of Feb. 19, Apple’s deadline. He begged for answers: Could Apple tell him what he needed to do to keep Mobicip on iPhones?&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“Any general direction, clue or specific guidance will be deeply appreciated. We have been one of the pioneers among parental control apps on the App Store over 10 long years and have always been playing by the rules,” he wrote. “Please point us in the right direction and we can take it from there.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Five hours later, Apple responded with a 14-word message: “Your app has an unresolved issue and has been removed from the App Store.”&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“No reason, no detail,” Mr. Ramasubbu said. “Suddenly we don’t have a business anymore.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Sat, 27 Apr 2019 10:49:00 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:url>https://www.nytimes.com/2019/04/27/technology/apple-screen-time-trackers.html</og:url>
<og:type>article</og:type>
<og:title>Apple Cracks Down on Apps That Fight iPhone Addiction</og:title>
<og:image>https://static01.nyt.com/images/2019/04/27/business/27apple/27apple-facebookJumbo-v2.jpg</og:image>
<og:description>Last year, with much fanfare, the tech giant unveiled a screen-time tracker of its own. Then it quietly began purging competitors from its store.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2019/04/27/technology/apple-screen-time-trackers.html</dc:identifier>
</item>
<item>
<title>You’re probably using the wrong dictionary (2014)</title>
<link>http://jsomers.net/blog/dictionary</link>
<guid isPermaLink="true" >http://jsomers.net/blog/dictionary</guid>
<description>&lt;p&gt;The way I thought you used a dictionary was that you looked up words you’ve never heard of, or whose sense you’re unsure of. You would never look up an ordinary word — like &lt;em&gt;example&lt;/em&gt;, or &lt;em&gt;sport&lt;/em&gt;, or &lt;em&gt;magic&lt;/em&gt; — because all you’ll learn is what it means, and that you already know.&lt;/p&gt;
&lt;p&gt;Indeed, if you look up those particular words in the dictionary that comes with your computer — on my Mac, it’s the &lt;em&gt;New Oxford American Dictionary, 3rd Edition&lt;/em&gt; — you’ll be rewarded with… well, there won’t be any reward. The entries are pedestrian:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt; /igˈzampəl/, n. &lt;em&gt;a thing characteristic of its kind or illustrating a general rule&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sport&lt;/strong&gt; /spôrt/, n. &lt;em&gt;an activity involving physical exertion and skill in which an individual or team competes against another or others for entertainment&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;magic&lt;/strong&gt; /ˈmajik/, n. &lt;em&gt;the power of apparently influencing the course of events by using mysterious or supernatural forces&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Here, words are boiled to their essence. But that essence is dry, functional, almost bureaucratically sapped of color or pop, like &lt;a href=&quot;http://upload.wikimedia.org/wikipedia/commons/6/6f/Pruitt-Igoe-overview.jpg&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','upload.wikimedia.org']);&quot;&gt;high modernist architecture&lt;/a&gt;. Which trains you to think of the dictionary as a utility, not a quarry of good things, not a place you’d go to explore and savor.&lt;/p&gt;
&lt;p&gt;Worse, the words themselves take on the character of their definitions: they are likewise reduced. A delightful word like “fustian” — delightful because of what it means, because of the way it looks and sounds, because it is unusual in regular speech but not so effete as to be unusable, is described, efficiently, as “pompous or pretentious speech or writing.” Not only is this definition (as we’ll see in a minute) simplistic and basically wrong, it’s just not in the same class, English-wise, as “fustian.” The language is tin-eared and uninspired. It’s criminal: This is the place where all the words live and the writing’s no good.&lt;/p&gt;
&lt;p&gt;The New Oxford American dictionary, by the way, is not like singularly bad. Google’s dictionary, the modern Merriam-Webster, the dictionary at dictionary.com: they’re all like this. They’re all a chore to read. There’s no play, no delight in the language. The definitions are these desiccated little husks of technocratic meaningese, as if a word were no more than its coordinates in semantic space.&lt;/p&gt;
&lt;h3&gt;John McPhee’s secret weapon&lt;/h3&gt;
&lt;p&gt;John McPhee — one the great American writers of nonfiction, almost peerless as a prose stylist — once wrote an essay for the New Yorker about his process called “&lt;a href=&quot;http://jsomers.net/mcphee-draft-no-4.pdf&quot;&gt;Draft #4&lt;/a&gt;.” He explains that for him, draft #4 is the draft after the painstaking labor of creation is done, when all that’s left is to punch up the language, to replace shopworn words and phrases with stuff that sings.&lt;/p&gt;
&lt;p&gt;The way you do it, he says, is “you draw a box not only around any word that does not seem quite right but also around words that fulfill their assignment but seem to present an opportunity.” You go looking for &lt;em&gt;le mot juste&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;But where?&lt;/p&gt;
&lt;p&gt;“Your destination is the dictionary,” he writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suppose you sense an opportunity beyond the word “intention.” You read the dictionary’s thesaurian list of synonyms: “intention, intent, purpose, design, aim, end, object, objective, goal.” But the dictionary doesn’t let it go at that. It goes on to tell you the differences all the way down the line — how each listed word differs from all the others. Some dictionaries keep themselves trim by just listing synonyms and not going on to make distinctions. You want the first kind, in which you are not just getting a list of words; you are being told the differences in their hues, as if you were looking at the stripes in an awning, each of a subtly different green.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I do not have this first kind of dictionary. In fact I would have never thought to use a dictionary the way McPhee uses his, and the simple reason is that I’ve never had a dictionary &lt;em&gt;worth&lt;/em&gt; using that way. If you were to look up the word “intention” in my dictionary here’s all you would see: “a thing intended; an aim or plan.” No, I don’t think I’ll be punching up my prose with that.&lt;/p&gt;
&lt;p&gt;But somehow for McPhee, the dictionary — the dictionary! — was the fount of fine prose, the first place he’d go to filch a phrase, to steal fire from the gods. So for instance he’d have an idea of something he wanted to say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I grew up in canoes on northern lakes. Thirty years later, I was trying to choose a word or words that would explain why anyone in a modern nation would choose to go a long distance by canoe. I was damned if I was going to call it a sport, but nothing else occurred.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And he’d go, Well, “sport” is kind of clunky, it’s kind of humdrum. Maybe I can do better. And he’d look up “sport,” and instead of the even more hopelessly banal “an activity involving physical exertion and skill” that I’d get out of my dictionary, he’d discover this lovely chip of prose: “2. A diversion of the field.” Thus he could write:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;His professed criteria were to take it easy, see some wildlife, and travel light with his bark canoes — nothing more — and one could not help but lean his way… Travel by canoe is not a necessity, and will nevermore be the most efficient way to get from one region to another, or even from one lake to another — anywhere. A canoe trip has become simply a rite of oneness with certain terrain, a diversion of the field, an act performed not because it is necessary but because there is value in the act itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A book where you can enter “sport” and end up with “a diversion of the field” — this is in fact the opposite of what I’d known a dictionary to be. This is a book that transmutes plain words into language that’s finer and more vivid and sometimes more rare. No wonder McPhee wrote with it by his side. No wonder he looked up words he knew, versus words he didn’t, in a ratio of “at least ninety-nine to one.”&lt;/p&gt;
&lt;p&gt;Unfortunately, he never comes out and says exactly which dictionary he’s getting all this juice out of. But I was desperate to find it. What was this secret book, this dictionary so rich and alive that one of my favorite writers was using it to make heroic improvements to his writing?&lt;/p&gt;
&lt;p&gt;I did a little sleuthing. It wasn’t so hard with the examples McPhee gives, and Google. He says, for instance, that in three years of research for a book about Alaska he’d forgotten to look up the word &lt;em&gt;Arctic&lt;/em&gt;. He said that his dictionary gave him this: “Pertaining to, or situated under, the northern constellation called the Bear.”&lt;/p&gt;
&lt;p&gt;And that turned out to be enough to find it.&lt;/p&gt;
&lt;h3&gt;The invention of American English&lt;/h3&gt;
&lt;p&gt;Noah Webster is not the best-known of the Founding Fathers but he has been called “the father of American scholarship and education.” There’s actually this great &lt;a href=&quot;https://en.wikipedia.org/wiki/Noah_Webster#Blue_Backed_Speller&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);&quot;&gt;history&lt;/a&gt; of how he almost singlehandedly invented the very idea of &lt;em&gt;American&lt;/em&gt; English, defining the native tongue of the new republic, “rescuing” it from “the clamour of pedantry” imposed by the Brits.&lt;/p&gt;
&lt;p&gt;He developed a book, the Blue Backed Speller, which was meant to be something of a complete linguistic education for young American kids, teaching them in easy increments how to read, spell, and pronounce words, and bringing them up on a balanced diet of great writing. It succeeded. It was actually the most popular book of its time; by 1890 it had sold 60 million copies.&lt;/p&gt;
&lt;p&gt;But that wasn’t even Webster’s most ambitious project. Certainly it’s not what he became known for. In 1807, he started writing a dictionary, which he called, boldly, &lt;em&gt;An American Dictionary of the English Language&lt;/em&gt;. He wanted it to be comprehensive, authoritative. Think of that: a man sits down, aiming to capture his language whole.&lt;/p&gt;
&lt;p&gt;Dictionaries today are not written this way. In fact it’d be strange even to say that they’re &lt;em&gt;written&lt;/em&gt;. They are &lt;em&gt;built&lt;/em&gt; by a large team, less a work of art than of engineering. When you read an entry you don’t get the sense that a person labored at his desk, alone, trying to put the essence of that word into words. That is, you don’t get a sense, the way you do from a good novel, that there was another mind as alive as yours on the other side of the page.&lt;/p&gt;
&lt;p&gt;Webster’s dictionary took him 26 years to finish. It ended up having 70,000 words. He wrote it all himself, including the etymologies, which required that he learn 28 languages, including Old English, Gothic, German, Greek, Latin, Italian, Spanish, Dutch, Welsh, Russian, Aramaic, Persian, Arabic, and Sanskrit. He was plagued by debt to fund the project; he had to mortgage his home.&lt;/p&gt;
&lt;p&gt;In his own lifetime the dictionary sold poorly and got little recognition. Today, of course, his name is so synonymous with even the idea of a dictionary that &lt;em&gt;Webster&lt;/em&gt; is actually a &lt;a href=&quot;https://en.wikipedia.org/wiki/Genericized_trademark&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);&quot;&gt;genericized trademark&lt;/a&gt; in the U.S., so that other dictionaries &lt;em&gt;whose contents bear no relation to Webster’s original&lt;/em&gt; can &lt;a href=&quot;https://en.wikipedia.org/wiki/Webster&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);&quot;&gt;use&lt;/a&gt; the name just to have the “Webster” brand rub off on them. [1]&lt;/p&gt;
&lt;p&gt;* * *&lt;/p&gt;
&lt;p&gt;It makes sense: there was, and is, something remarkable about his 1828 dictionary, and the editions that followed in its line (the New and Revised 1847, the Unabridged 1864, the International 1890 and 1900, the New International 1909, the 1913, etc.). You can see why it became cliché to start a speech with “Webster’s defines X as…”: with his dictionary the definition that followed was actually likely to lend gravitas to your remarks, to sound so good, in fact, that it’d beat anything you could come up with on your own.&lt;/p&gt;
&lt;p&gt;Take a simple word, like “flash.” In all the dictionaries I’ve ever known, I would have never looked up that word. I’d’ve had no reason to — I already knew what it meant. But go &lt;a href=&quot;http://machaut.uchicago.edu/?action=search&amp;amp;word=flash&amp;amp;resource=Webster%27s&amp;amp;quicksearch=on&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','machaut.uchicago.edu']);&quot;&gt;look up “flash” in Webster’s&lt;/a&gt; (the edition I’m using is the 1913). The first thing you’ll notice is that the example sentences don’t sound like they came out of a DMV training manual (“the lights started flashing”) — they come from Milton and Shakespeare and Tennyson (“A thought flashed through me, which I clothed in act”).&lt;/p&gt;
&lt;p&gt;You’ll find a sense of the word that is somehow more evocative than any you’ve seen. “2. To convey as by a flash… as, to flash a message along the wires; to flash conviction on the mind.” In the juxtaposition of those two examples — a message transmitted by wires; a feeling that comes suddenly to mind — is a beautiful analogy, worth dwelling on, and savoring. Listen to that phrase: “to flash conviction on the mind.” This is in a &lt;em&gt;dictionary&lt;/em&gt;, for God’s sake.&lt;/p&gt;
&lt;p&gt;And, toward the bottom of the entry, as McPhee promised, is a usage note, explaining the fine differences in meaning between words in the penumbra of “flash”:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;… Flashing differs from exploding or disploding in not being accompanied with a loud report. To glisten, or glister, is to shine with a soft and fitful luster, as eyes suffused with tears, or flowers wet with dew.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Did you see that last clause? “To shine with a soft and fitful luster, as eyes suffused with tears, or flowers wet with dew.” I’m not sure why you won’t find writing like that in dictionaries these days, but you won’t. Here is the modern equivalent of that sentence in the latest edition of the Merriam-Webster: “glisten applies to the soft sparkle from a wet or oily surface &amp;lt;glistening wet sidewalk&amp;gt;.”&lt;/p&gt;
&lt;p&gt;Who decided that the American public couldn’t handle “a soft and fitful luster”? I can’t help but think something has been lost. “A soft sparkle from a wet or oily surface” doesn’t just sound worse, it actually describes the phenomenon with less precision. In particular it misses the shimmeriness, the micro movement and action, “the &lt;em&gt;fitful&lt;/em&gt; luster,” of, for example, an eye full of tears — which is by the way far more intense and interesting an image than “a wet sidewalk.”&lt;/p&gt;
&lt;p&gt;It’s as if someone decided that dictionaries these days had to sound like they were written by a Xerox machine, not a person, certainly not a person with a poet’s ear, a man capable of high and mighty English, who set out to write the secular American equivalent of the King James Bible and pulled it off.&lt;/p&gt;
&lt;h3&gt;Words worth using&lt;/h3&gt;
&lt;p&gt;I don’t want you to conclude that it’s just a matter of aesthetics. Yes, Webster’s definitions are prettier. But they are also better. In fact they’re so much better that to use another dictionary is to keep yourself forever at arm’s length from the actual language.&lt;/p&gt;
&lt;p&gt;Recall that the New Oxford, for the word “fustian,” gives “pompous or pretentious speech or writing.” I said earlier that that wasn’t even really correct. Here, then, is Webster’s definition: “An inflated style of writing; a kind of writing in which high-sounding words are used, above the dignity of the thoughts or subject; bombast.” Do you see the difference? What makes fustian fustian is not just that the language is pompous — it’s that this pomposity is &lt;em&gt;above the dignity of the thoughts or subject&lt;/em&gt;. It’s using fancy language where fancy language isn’t called for.&lt;/p&gt;
&lt;p&gt;It’s a subtle difference, but that’s the whole point: English is an awfully subtle instrument. A dictionary that ignores these little shades is dangerous; in fact in those cases it’s worse than useless. It’s misleading, deflating. It divests those words of their worth and purpose.&lt;/p&gt;
&lt;p&gt;Take “pathos.” This is one of those words I used to keep looking up because I kept forgetting what it meant — and every time I’d go to the dictionary I would get this terse, limiting definition: “a quality that evokes pity or sadness.” Not much there to grab a hold of. I’d wonder, Is that really all there is to pathos? It had always seemed a grander word than that. But this was the dictionary, and whatever it declared was final.&lt;/p&gt;
&lt;p&gt;Final, that is, until I discovered Webster:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pathos&lt;/strong&gt; /ˈpāˌTHäs/, n. &lt;em&gt;1. The quality or character of those emotions, traits, or experiences which are personal, and therefore restricted and evanescent; transitory and idiosyncratic dispositions or feelings as distinguished from those which are universal and deep-seated in character; — opposed to &lt;strong&gt;ethos&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It continued. &lt;em&gt;2. That quality or property of anything which touches the feelings or excites emotions and passions, esp., that which awakens tender emotions, such as pity, sorrow, and the like; contagious warmth of feeling, action, or expression; pathetic quality; as, the pathos of a picture, of a poem, or of a cry.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dear god! How did I not know about this dictionary? How could you even &lt;em&gt;call&lt;/em&gt; yourself a dictionary if all you give for “pathos” is “a quality that evokes pity or sadness”? Webster’s definition is so much fuller, so much closer to felt experience.&lt;/p&gt;
&lt;p&gt;Notice, too, how much less certain the Webster definition seems about itself, even though it’s more complete — as if to remind you that the word came first, that the word isn’t &lt;em&gt;defined&lt;/em&gt; by its definition here, in this humble dictionary, that definitions grasp, tentatively, at words, but that what words really are is this haze and halo of associations and evocations, a little networked cloud of uses and contexts.&lt;/p&gt;
&lt;p&gt;What I mean is that with its blunt authority the New Oxford definition of “pathos” — “a quality that evokes pity or sadness” — shuts down the conversation, it shuts down your thinking about the word, while the Webster’s version gets your wheels turning: it seems so much more provisional — “that which awakens tender emotions, such as pity, sorrow, and the like; contagious warmth of feeling, action, or expression; pathetic quality; as, the pathos of a picture, of a poem, or of a cry” — and therefore alive.&lt;/p&gt;
&lt;p&gt;Most important, it describes a word worth using: a mere six letters that have come to stand for something huge, for a complex meta-emotion with mythic roots. Such is the power of actual English.&lt;/p&gt;
&lt;h3&gt;The pleasure of finding things out&lt;/h3&gt;
&lt;p&gt;I could go on forever listing examples. I could say, “Look up &lt;em&gt;example&lt;/em&gt;, &lt;em&gt;magic&lt;/em&gt;, &lt;em&gt;sport&lt;/em&gt;. Look up &lt;em&gt;arduous&lt;/em&gt;, &lt;em&gt;huge&lt;/em&gt;, &lt;em&gt;chauvinistic&lt;/em&gt;, &lt;em&gt;venal&lt;/em&gt;, &lt;em&gt;pell-mell&lt;/em&gt;, &lt;em&gt;raiment&lt;/em&gt;, &lt;em&gt;sue&lt;/em&gt;, &lt;em&gt;smarting&lt;/em&gt;, &lt;em&gt;stereotype&lt;/em&gt;. Look up the word &lt;em&gt;word&lt;/em&gt;, and &lt;em&gt;look&lt;/em&gt;, and &lt;em&gt;up&lt;/em&gt;. Look up every word you used today.” Indeed that’s what motivated this post: I’d been using Webster’s dictionary for about a year; I kept looking words up, first there, then in whatever modern dictionary was closest to hand, and seeing this awful difference, evidence of a crime that kept piling up in my mind, the guilt building: so many people were getting this wrong impression about words, every day, so many times a day.&lt;/p&gt;
&lt;p&gt;There’s an amazing thing that happens when you start using the right dictionary. Knowing that it’s there for you, you start looking up more words, including words you already know. And you develop an affection for even those, the plainest most everyday words, because you see them treated with the same respect awarded to the rare ones, the high-sounding ones.&lt;/p&gt;
&lt;p&gt;Which is to say you get a feeling about English that Calvin once got with his pet tiger on a day of fresh-fallen snow: “It’s a magical world, Hobbes. Let’s go exploring!”&lt;/p&gt;
&lt;h3&gt;Appendix: How to start using Webster’s 1913 dictionary on your Mac, iPhone, Android, and Kindle&lt;/h3&gt;
&lt;p&gt;The closest thing you can get to a plain-text, easily hackable, free, out-of-copyright version of the dictionary McPhee probably used is &lt;a href=&quot;http://machaut.uchicago.edu/websters&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','machaut.uchicago.edu']);&quot;&gt;Webster’s Revised Unabridged Dictionary (1913 + 1828)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You’ll never use it, though, unless it’s built in to your computer and available easily on your phone and e-reader. For instance I wanted it so that whenever I typed a word into Spotlight, I’d get a Webster’s definition:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://jsomers.net/blog/wp-content/uploads/2014/05/first.png&quot;&gt;&lt;img src=&quot;http://jsomers.net/blog/wp-content/uploads/2014/05/first.png&quot; alt=&quot;spotlight&quot; width=&quot;432&quot; height=&quot;114&quot; class=&quot;alignnone size-full wp-image-1147&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I even wanted it so that when I highlighted a word in my browser, and hit Cmd + Ctrl + D, I’d see a definition from Webster’s:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://jsomers.net/blog/wp-content/uploads/2014/05/second.png&quot;&gt;&lt;img src=&quot;http://jsomers.net/blog/wp-content/uploads/2014/05/second.png&quot; alt=&quot;inline&quot; width=&quot;349&quot; height=&quot;514&quot; class=&quot;alignnone size-full wp-image-1146&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here’s how I got that to work:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Download &lt;a href=&quot;https://s3.amazonaws.com/jsomers/dictionary.zip&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','s3.amazonaws.com']);&quot;&gt;this archive from S3&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Unzip it and launch the DictUnifier app.&lt;/li&gt;
&lt;li&gt;Drag the &lt;code&gt;stardict-dictd-web1913-2.4.2.tar.bz2&lt;/code&gt; file, still compressed, onto that app’s little drag-and-drop area. It might take a few seconds before the conversion process starts. Once it does, it’ll take about 30 minutes to finish.&lt;/li&gt;
&lt;li&gt;The dictionary will now be available in your Dictionary app. (If not, you may need to enable it in the app’s Preferences pane, as &lt;a href=&quot;https://cloud.githubusercontent.com/assets/21294/3085216/6b3463ae-e50b-11e3-822d-a59765748865.png&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','cloud.githubusercontent.com']);&quot;&gt;here&lt;/a&gt;.) But its formatting may look a little off. If the lines are squished together, open &lt;code&gt;~/Library/Dictionaries/dictd_www.dict.org_web1913.dictionary/Contents/DefaultStyle.css&lt;/code&gt; in a text editor and add the following directive:&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-css&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.7em&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Restart the Dictionary app to confirm that the CSS was updated correctly. (You might also try bumping the &lt;code&gt;margin-top&lt;/code&gt; and &lt;code&gt;margin-bottom&lt;/code&gt; values in the &lt;code&gt;div.y&lt;/code&gt; block to 0.7em, from 0.5em. And some folks have said that 1em works better than 0.7em.)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you want to always see Webster’s results by default, go to the Dictionary app’s preferences and drag Webster’s to the top of the list.&lt;/li&gt;
&lt;li&gt;If you’re on OS X Lion, follow &lt;a href=&quot;http://apple.stackexchange.com/questions/22897/how-to-place-dictionary-definitions-higher-up-in-spotlight-results&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','apple.stackexchange.com']);&quot;&gt;these instructions&lt;/a&gt; so that Dictionary results appear first in Spotlight searches.&lt;/li&gt;
&lt;li&gt;If you’re unhappy with the formatting of the entries in Dictionary, &lt;a href=&quot;https://github.com/aparks517/convert-websters&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);&quot;&gt;here&lt;/a&gt; are alternative instructions for setting up Webster’s on OS X that may give better results. (&lt;a href=&quot;https://github.com/DieBuche/WebsterParser&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);&quot;&gt;Here&lt;/a&gt;, too.)&lt;/li&gt;
&lt;li&gt;To get it on your iPhone, get the Stardict-compatible &lt;a href=&quot;https://itunes.apple.com/us/app/dictionary-universal/id312088272?mt=8&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','itunes.apple.com']);&quot;&gt;Dictionary&lt;/a&gt; app. On its installation screen, go to the “Network” tab and type &lt;code&gt;http://abloz.com/huzheng/stardict-dic/dict.org/stardict-dictd-web1913-2.4.2.tar.bz2&lt;/code&gt;, exactly, into the URL bar. (Alternatively, just download &lt;a href=&quot;http://itunes.apple.com/app/id943993346&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','itunes.apple.com']);&quot;&gt;this free app&lt;/a&gt; by Aaron Parks.)&lt;/li&gt;
&lt;li&gt;For Android, you can follow &lt;a href=&quot;https://gist.github.com/jsomers/9dd78c8dc7fab071993c&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','gist.github.com']);&quot;&gt;these instructions&lt;/a&gt;, courtesy of &lt;a href=&quot;https://twitter.com/TheRealPlato&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);&quot;&gt;@TheRealPlato&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To add the dictionary as a search engine on Chrome, follow &lt;a href=&quot;https://gist.github.com/jsomers/60159ee970d6dee86aa2&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','gist.github.com']);&quot;&gt;these instructions&lt;/a&gt;, courtesy of &lt;a href=&quot;https://twitter.com/chancelionheart&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);&quot;&gt;@chancelionheart&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And finally, &lt;a href=&quot;https://gist.github.com/jsomers/4236a2770a51e0b24900&quot; onclick=&quot;javascript:_gaq.push(['_trackEvent','outbound-article','gist.github.com']);&quot;&gt;follow these instructions&lt;/a&gt; to get the dictionary on your Kindle.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Notes&lt;/h3&gt;
&lt;p&gt;[1] Note that the modern Merriam-Webster, even though it does derive directly from Webster’s original, has been revised so much that it’s actually &lt;em&gt;less&lt;/em&gt; similar, content-wise, than some of the impostors. It, too, is one of the “wrong” dictionaries.&lt;/p&gt;
</description>
<pubDate>Sat, 27 Apr 2019 02:43:40 +0000</pubDate>
<dc:creator>MaysonL</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://jsomers.net/blog/dictionary</dc:identifier>
</item>
<item>
<title>Docker Hub Hacked – 190k accounts, GitHub tokens revoked, builds disabled</title>
<link>https://news.ycombinator.com/item?id=19763413</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19763413</guid>
<description>Received this email a few minutes ago:
&lt;p&gt;&quot;On Thursday, April 25th, 2019, we discovered unauthorized access to a single Hub database storing a subset of non-financial user data. Upon discovery, we acted quickly to intervene and secure the site.&lt;/p&gt;&lt;p&gt;We want to update you on what we've learned from our ongoing investigation, including which Hub accounts are impacted, and what actions users should take.&lt;/p&gt;
&lt;p&gt;Here is what we’ve learned:&lt;/p&gt;
&lt;p&gt;During a brief period of unauthorized access to a Docker Hub database, sensitive data from approximately 190,000 accounts may have been exposed (less than 5% of Hub users). Data includes usernames and hashed passwords for a small percentage of these users, as well as Github and Bitbucket tokens for Docker autobuilds.&lt;/p&gt;
&lt;p&gt;Actions to Take:&lt;/p&gt;
&lt;p&gt;- We are asking users to change their password on Docker Hub and any other accounts that shared this password.&lt;/p&gt;
&lt;p&gt;- For users with autobuilds that may have been impacted, we have revoked GitHub tokens and access keys, and ask that you reconnect to your repositories and check security logs to see if any unexpected actions have taken place.&lt;/p&gt;
&lt;p&gt;- You may view security actions on your GitHub or BitBucket accounts to see if any unexpected access has occurred over the past 24 hours -see https://help.github.com/en/articles/reviewing-your-security-log and https://bitbucket.org/blog/new-audit-logs-give-you-the-who-what-when-and-where&lt;/p&gt;
&lt;p&gt;- This may affect your ongoing builds from our Automated build service. You may need to unlink and then relink your Github and Bitbucket source provider as described in https://docs.docker.com/docker-hub/builds/link-source/&lt;/p&gt;
&lt;p&gt;We are enhancing our overall security processes and reviewing our policies. Additional monitoring tools are now in place.&lt;/p&gt;
&lt;p&gt;Our investigation is still ongoing, and we will share more information as it becomes available.&lt;/p&gt;
&lt;p&gt;Thank you,&lt;/p&gt;
&lt;p&gt;Kent Lamb Director of Docker Support info@docker.com&quot;&lt;/p&gt;
</description>
<pubDate>Sat, 27 Apr 2019 02:36:01 +0000</pubDate>
<dc:creator>lugg</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19763413</dc:identifier>
</item>
<item>
<title>Mozilla is giving up on their IRC server</title>
<link>http://exple.tive.org/blarg/2019/04/26/synchronous-text/?s</link>
<guid isPermaLink="true" >http://exple.tive.org/blarg/2019/04/26/synchronous-text/?s</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.flickr.com/photos/mhoye/32583291157/&quot; title=&quot;Envoy.&quot;&gt;&lt;img src=&quot;https://live.staticflickr.com/7927/32583291157_46a9fa328e_n.jpg&quot; width=&quot;375&quot; height=&quot;400&quot; alt=&quot;Envoy.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let’s lead with the punchline: the question of what comes after IRC, for Mozilla, is now on my desk.&lt;/p&gt;
&lt;p&gt;I wasn’t in the room when IRC.mozilla.org was stood up, but from what I’ve heard IRC wasn’t “chosen” so much as it was the obvious default, the only tool available in the late ’90s. Suffice to say that as a globally distributed organization, Mozilla has relied on IRC as our main synchronous communications tool since the beginning. For much of that time it’s served us well, if for some less-than-ideal values of “us” and “well”.&lt;/p&gt;
&lt;p&gt;Like a lot of the early internet &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Relay_Chat&quot;&gt;IRC&lt;/a&gt; is a quasi-standard protocol built with far more of the optimism of the time than the paranoia the infosec community now refers to as “common sense”, born before we learned how much easier it is to automate bad acts than it is to foster healthy communities. Like &lt;a href=&quot;http://exple.tive.org/blarg/2018/11/09/the-evolution-of-open/&quot;&gt;all unauthenticated systems on the modern net&lt;/a&gt; it’s aging badly and showing no signs of getting better.&lt;/p&gt;
&lt;p&gt;While we still use it heavily, IRC is an ongoing source of abuse and harassment for many of our colleagues and getting connected to this now-obscure forum is an unnecessary technical barrier for anyone finding their way to Mozilla via the web. Available interfaces really haven’t kept up with modern expectations, spambots and harassment are endemic to the platform, and in light of that it’s no coincidence that people trying to get in touch with us from inside schools, colleges or corporate networks are finding that often as not IRC traffic isn’t allowed past institutional firewalls at all.&lt;/p&gt;
&lt;p&gt;All of that adds up to a set of real hazards and unnecessary barriers to participation in the Mozilla project; we definitely still need a globally-available, synchronous and text-first communication tool; our commitment to working in the open as an organization hasn’t changed. But we’re setting a higher bar for ourselves and our communities now and IRC can’t meet that bar. We’ve come to the conclusion that for all IRC’s utility, it’s irresponsible of us to ask our people – employees, volunteers, partners or anyone else – to work in an environment that we can’t make sure is healthy, safe and productive.&lt;/p&gt;
&lt;p&gt;In short, it’s no longer practical or responsible for us to keep that forum alive.&lt;/p&gt;
&lt;p&gt;In the next small number of months, Mozilla intends to deprecate IRC as our primary synchronous-text communications platform, stand up a replacement and decommission irc.mozilla.org soon afterwards. I’m charged with leading that process on behalf of the organization.&lt;/p&gt;
&lt;p&gt;Very soon, I’ll be setting up the evaluation process for a couple of candidate replacement stacks. We’re lucky; we’re spoiled for good options these days. I’ll talk a bit more about them in a future post, but the broad strokes of our requirements are pretty straightforward:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We are not rolling our own. Whether we host it ourselves or pay for a service, we’re getting something off the shelf that best meets our needs.&lt;/li&gt;
&lt;li&gt;It needs to be accessible to the greater Mozilla community.&lt;/li&gt;
&lt;li&gt;We are evaluating products, not protocols.&lt;/li&gt;
&lt;li&gt;We aren’t picking an outlier; whatever stack we choose needs to be a modern, proven service that seems to have a solid provenance and a good life ahead of it. We’re not moving from one idiosyncratic outlier stack to another idiosyncratic outlier stack.&lt;/li&gt;
&lt;li&gt;While we’re investigating options for semi-anonymous or pseudonymous connections, we will require authentication, because:&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://www.mozilla.org/en-US/about/governance/policies/participation/&quot;&gt;Mozilla Community Participation Guidelines&lt;/a&gt; will apply, and they’ll be enforced.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I found this at the top of a draft FAQ I’d started putting together a while back. It might not be what you’d call “complete”, but maybe it is:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Q: Why are we moving away from IRC? IRC is fine!&lt;br /&gt;A: IRC is not fine.&lt;/p&gt;
&lt;p&gt;Q: Seriously? You’re kidding, right?&lt;br /&gt;A: I’m dead serious.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don’t do blog comments anymore – unfortunately, for a lot of the same reasons I’m dealing with this – but if you’ve got questions, you can email me.&lt;/p&gt;
&lt;p&gt;Or, if you like, you can find me on IRC.&lt;/p&gt;
</description>
<pubDate>Sat, 27 Apr 2019 01:49:52 +0000</pubDate>
<dc:creator>ori_b</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://exple.tive.org/blarg/2019/04/26/synchronous-text/?s</dc:identifier>
</item>
<item>
<title>Google search only has 60% of my content from 2006</title>
<link>https://www.tablix.org/~avian/blog/archives/2019/02/google_index_coverage/</link>
<guid isPermaLink="true" >https://www.tablix.org/~avian/blog/archives/2019/02/google_index_coverage/</guid>
<description>&lt;p&gt;It recently came to my attention that Google has a new &lt;a href=&quot;https://search.google.com/search-console/about&quot;&gt;Search Console&lt;/a&gt; where you can see the status of your web site in Google's search index. I checked out what it says for this blog and I was a bit surprised.&lt;/p&gt;
&lt;p&gt;Some things I expected, like the number of pages I've blocked in the &lt;em&gt;robots.txt&lt;/em&gt; file to prevent crawling (however I didn't know that blocking an URL there means that it &lt;a href=&quot;https://support.google.com/webmasters/answer/7440203#blocked_by_robotstxt&quot;&gt;can still appear&lt;/a&gt; in search results). Other things were weirder, like &lt;a href=&quot;https://www.tablix.org/~avian/blog/archives/2011/02/syn_trickle/&quot;&gt;this old post&lt;/a&gt; being &lt;em&gt;soft recognized&lt;/em&gt; as a 404 Not Found response. My web server is properly configured and quite capable of sending correct HTTP response codes, so ignoring standards in that regard is just craziness on Google's part. But the thing that caught my eye the most was the number of &lt;em&gt;Excluded&lt;/em&gt; pages on the &lt;em&gt;Index Coverage&lt;/em&gt; pane:&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;a href=&quot;https://www.tablix.org/~avian/blog/images2/2019/02/screenshot_of_the_index_coverage_pane.png&quot;&gt;&lt;img alt=&quot;Screenshot of the Index Coverage pane.&quot; height=&quot;238&quot; src=&quot;https://www.tablix.org/~avian/blog/images2/2019/02/screenshot_of_the_index_coverage_pane-t.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Considering that I have less than a thousand published blog posts this number seemed high. Diving into the details, it turned out that most of the excluded pages were redirects to canonical URLs and Atom feeds for post comments. However at least 160 URL were permalink addresses of actual blog posts (there may be more, because the CSV export only contains the first 1000 URLs).&lt;/p&gt;
&lt;p class=&quot;img&quot;&gt;&lt;a href=&quot;https://www.tablix.org/~avian/blog/images2/2019/02/index_coverage_of_blog_posts_versus_year_of.png&quot;&gt;&lt;img alt=&quot;Index coverage of blog posts versus year of publication.&quot; height=&quot;267&quot; src=&quot;https://www.tablix.org/~avian/blog/images2/2019/02/index_coverage_of_blog_posts_versus_year_of-t.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All of these were in the &lt;em&gt;&quot;crawled, not indexed&quot;&lt;/em&gt; category. In their usual hand-waving way, &lt;a href=&quot;https://support.google.com/webmasters/answer/7440203#crawled&quot;&gt;Google describes&lt;/a&gt; this as:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;The page was crawled by Google, but not indexed. It may or may not be indexed in the future; no need to resubmit this URL for crawling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I read this as &quot;we know this page exists, there's no technical problem, but we don't consider it useful to show in search results&quot;. The older the blog post, the more likely that it was excluded. Google's index apparently contains only around 60% of my content from 2006, but 100% of that published in the last couple of years. I've tried searching for some of these excluded blog posts and indeed they don't show in the results.&lt;/p&gt;
&lt;p&gt;I have no intention to complain about my early writings not being shown to Google's users. As long as my web site complies with generally accepted technical standards I'm happy. I write about things that I find personally interesting and what I earnestly believe might be useful information in general. I don't feel entitled to be shown in Google's search results and what they include in their index or not is their own business.&lt;/p&gt;
&lt;p&gt;That said, it did made me think. I'm using Google Search almost exclusively to find information on the web. I suspected that they heavily prioritize new over old, but I've never seriously considered that Google might be intentionally excluding parts of the web from their index altogether. I often hear &lt;a href=&quot;https://news.ycombinator.com/item?id=19038327&quot;&gt;the sentiment&lt;/a&gt; how the &lt;em&gt;old web&lt;/em&gt; is disappearing. That the long tail of small websites is as good as gone. Some old one-person web sites may indeed be gone for good, but as this anecdote shows, some such content might just not be discoverable through Google.&lt;/p&gt;
&lt;p&gt;All this made me switch my default search engine in Firefox to &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;DuckDuckGo&lt;/a&gt;. Granted I don't know what they include or exclude from their search either. I have yet to see how well it works, but maybe it isn't such a bad idea to go back to the time where trying several search engines for a query was a standard practice.&lt;/p&gt;
</description>
<pubDate>Sat, 27 Apr 2019 00:22:31 +0000</pubDate>
<dc:creator>skm</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tablix.org/~avian/blog/archives/2019/02/google_index_coverage/</dc:identifier>
</item>
<item>
<title>When setting an environment variable gives you a 40x speedup</title>
<link>https://news.sherlock.stanford.edu/posts/when-setting-an-environment-variable-gives-you-a-40-x-speedup</link>
<guid isPermaLink="true" >https://news.sherlock.stanford.edu/posts/when-setting-an-environment-variable-gives-you-a-40-x-speedup</guid>
<description>&lt;p&gt;Today, we’d like to share some of our recent work on Sherlock that allowed a pretty significant speedup when listing files in directories with a lot of entries.&lt;/p&gt;&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;em&gt;Unlike our usual announcements, this post is more of a behind-the-scenes account of things we do on a regular basis on Sherlock, to keep it up and running in the best possible conditions for our users. We hope to have more of this in the future.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Listing many files takes time&lt;/h2&gt;
&lt;p&gt;It all started from a support question, from a user reporting a usability problem with &lt;code&gt;ls&lt;/code&gt; taking several minutes to list the contents of a 15,000+ entries directory on &lt;code&gt;$SCRATCH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Having thousands of files in a single directory is usually not very file system-friendly, and definitely not recommended. The user knew this already and admitted that wasn’t great, but when he mentioned his laptop was 1,000x faster than Sherlock to list this directory’s contents, of course, it stung. So we looked deeper.&lt;/p&gt;
&lt;h2&gt;Because &lt;code&gt;ls&lt;/code&gt; is nice&lt;/h2&gt;
&lt;p&gt;We looked at what &lt;code&gt;ls&lt;/code&gt; actually does to list the contents of a directory, and why it was taking so long to list files. On most modern distributions, &lt;code&gt;ls&lt;/code&gt; is aliased to &lt;code&gt;ls --color=auto&lt;/code&gt; by default. Which is nice, because everybody likes 🌈.&lt;/p&gt;
&lt;p&gt;But those pretty colors come at a price: for each and every file it displays, &lt;code&gt;ls&lt;/code&gt; needs to get information about a file’s type, its permissions, flags, extended attributes and the like, to choose the appropriate color to display.&lt;/p&gt;
&lt;p&gt;One easy solution to our problem would have been to disable colored output in &lt;code&gt;ls&lt;/code&gt; altogether, but imagine the uproar. There is no way we could have taken 🌈 away from users, we’re not monsters.&lt;/p&gt;
&lt;p&gt;So we looked deeper. &lt;code&gt;ls&lt;/code&gt; does coloring through the &lt;code&gt;LS_COLORS&lt;/code&gt; environment variable, which is set by &lt;a href=&quot;http://man7.org/linux/man-pages/man1/dircolors.1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;dircolors(1)&lt;/code&gt;&lt;/a&gt;, based on a &lt;a href=&quot;http://man7.org/linux/man-pages/man5/dir_colors.5.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;dir_colors(5)&lt;/code&gt;&lt;/a&gt; configuration file. Yes, that’s right: &lt;a href=&quot;http://www.bigsoft.co.uk/blog/2008/04/11/configuring-ls_colors&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;an executable reads a config file to produce an environment variable that is in turn used by &lt;code&gt;ls&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;🤯&lt;/p&gt;
&lt;h2&gt;Let’s dive in&lt;/h2&gt;
&lt;p&gt;To be able to determine which of those specific coloring schemes were responsible for the slowdowns, we created an experimental environment:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; mkdir &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; touch &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont/{1..10000} &lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time ls --color=always &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont | wc -l&lt;/span&gt;
10000

real    0m12.758s
user    0m0.104s
sys     0m0.699s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;12.7s for 10,000 files, not great. 🐌&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;em&gt;BTW, we need the &lt;code&gt;--color=always&lt;/code&gt; flag, because, although it’s aliased to &lt;code&gt;ls --color=auto&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt; detects when it’s not attached to a terminal (like when piped to something or with its output redirected), and then turns off coloring when set to &lt;code&gt;auto&lt;/code&gt;. Smart guy.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, what’s taking so much time? Equipped with our &lt;a href=&quot;https://en.wikipedia.org/wiki/Strace&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;strace&lt;/code&gt;&lt;/a&gt;-fu, we looked:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; strace -c ls --color=always &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont | wc -l&lt;/span&gt;
10000
&lt;span class=&quot;hljs-meta&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time     seconds  usecs/call     calls    errors syscall&lt;/span&gt;
------ ----------- ----------- --------- --------- ----------------
 44.21    0.186617          19     10000           lstat
 42.60    0.179807          18     10000     10000 getxattr
 12.19    0.051438           5     10000           capget
  0.71    0.003002          38        80           getdents
  0.07    0.000305          10        30           mmap
  0.05    0.000217          12        18           mprotect
  0.03    0.000135          14        10           read
  0.03    0.000123          11        11           open
  0.02    0.000082           6        14           close
[...]
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Wow: 10,000 calls to &lt;a href=&quot;https://linux.die.net/man/2/lstat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt;, 10,000 calls to &lt;a href=&quot;http://man7.org/linux/man-pages/man2/getxattr.2.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;getxattr()&lt;/code&gt;&lt;/a&gt; (which all fail by the way, because the attributes that &lt;code&gt;ls&lt;/code&gt; is looking for don’t exist in our environment), 10,000 calls to &lt;a href=&quot;http://man7.org/linux/man-pages/man2/capget.2.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;capget()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Can do better for sure.&lt;/p&gt;
&lt;h2&gt;File capabilities? Nah&lt;/h2&gt;
&lt;p&gt;Following advice from a &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=467508&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;10+ year-old bug&lt;/a&gt;, we tried file disabling &lt;a href=&quot;http://man7.org/linux/man-pages/man7/capabilities.7.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;capability&lt;/a&gt; checking:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;eval&lt;/span&gt; $(dircolors -b | sed s/ca=[^:]*:/ca=:/)&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time strace -c ls --color=always &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont | wc -l&lt;/span&gt;
10000
&lt;span class=&quot;hljs-meta&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time     seconds  usecs/call     calls    errors syscall&lt;/span&gt;
------ ----------- ----------- --------- --------- ----------------
 98.95    0.423443          42     10000           lstat
  0.78    0.003353          42        80           getdents
  0.04    0.000188          10        18           mprotect
  0.04    0.000181           6        30           mmap
  0.02    0.000085           9        10           read
  0.02    0.000084          28         3           mremap
  0.02    0.000077           7        11           open
  0.02    0.000066           5        14           close
[...]
------ ----------- ----------- --------- --------- ----------------
100.00    0.427920                 10221         6 total

real    0m8.160s
user    0m0.115s
sys     0m0.961s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Woohoo, down to 8s! We got rid of all those expensive &lt;code&gt;getxattr()&lt;/code&gt; calls, and &lt;code&gt;capget()&lt;/code&gt; calls are gone too, 👍.&lt;/p&gt;
&lt;p&gt;We still have all those pesky &lt;code&gt;lstat()&lt;/code&gt;, though…&lt;/p&gt;
&lt;h2&gt;How many colors is too many colors?&lt;/h2&gt;
&lt;p&gt;So we took a look at &lt;code&gt;LS_COLORS&lt;/code&gt; in more details.&lt;/p&gt;
&lt;p&gt;The first attempt was to simply unset that variable:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$LS_COLORS&lt;/span&gt;&lt;/span&gt;
rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;unset&lt;/span&gt; LS_COLORS&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;$LS_COLORS&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;
$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;  time ls --color=always &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont | wc -l&lt;/span&gt;
10000

real    0m13.037s
user    0m0.077s
sys     0m1.092s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Whaaaaat!?! Still 13s?&lt;/p&gt;
&lt;p&gt;It turns out that when the &lt;code&gt;LS_COLORS&lt;/code&gt; environment variable is not defined, or when just one of its &lt;code&gt;&amp;lt;type&amp;gt;=color:&lt;/code&gt; elements is not there, it defaults to its embedded database and uses colors anyway. So if you want to disable coloring for a specific file type, you need to override it with &lt;code&gt;&amp;lt;type&amp;gt;=:&lt;/code&gt;, or &lt;code&gt;&amp;lt;type&amp;gt; 00&lt;/code&gt; in the &lt;code&gt;DIR_COLORS&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;After a lot of trial and error, we narrowed it down to this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;EXEC &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;
SETUID &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;
SETGID &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;
CAPABILITY &lt;span class=&quot;hljs-number&quot;&gt;00&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;which translates in&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;LS_COLORS='ex=00:su=00:sg=00:ca=00:'
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In normal people speak, that means: don’t colorize files based on the their &lt;a href=&quot;https://lwn.net/Articles/211883/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;file capabilities&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Setuid&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;setuid&lt;/code&gt;/&lt;code&gt;setgid&lt;/code&gt;&lt;/a&gt; bits nor &lt;a href=&quot;https://wiki.archlinux.org/index.php/File_permissions_and_attributes#Viewing_permissions&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;executable flag&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Let &lt;code&gt;ls&lt;/code&gt; fly&lt;/h2&gt;
&lt;p&gt;And if you don’t do any of those checks, then the &lt;code&gt;lstat()&lt;/code&gt; calls disappear, and now, boom 🚀:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;export&lt;/span&gt; LS_COLORS=&lt;span class=&quot;hljs-string&quot;&gt;'ex=00:su=00:sg=00:ca=00:'&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time strace -c ls --color=always &lt;span class=&quot;hljs-variable&quot;&gt;$SCRATCH&lt;/span&gt;/dont | wc -l&lt;/span&gt;
10000
&lt;span class=&quot;hljs-meta&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; time     seconds  usecs/call     calls    errors syscall&lt;/span&gt;
------ ----------- ----------- --------- --------- ----------------
 63.02    0.002865          36        80           getdents
  8.10    0.000368          12        30           mmap
  5.72    0.000260          14        18           mprotect
  3.72    0.000169          15        11           open
  2.79    0.000127          13        10           read
[...]
------ ----------- ----------- --------- --------- ----------------
100.00    0.004546                   221         6 total

real    0m0.337s
user    0m0.032s
sys     0m0.029s
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;0.3s to list 10,000 files, track record. 🏁&lt;/p&gt;
&lt;h2&gt;This is on Sherlock&lt;/h2&gt;
&lt;p&gt;From 13s with the default settings, to 0.3s with a small &lt;code&gt;LS_COLORS&lt;/code&gt; tweak, that’s a 40x speedup right there, for the cheap price of not having &lt;code&gt;setuid&lt;/code&gt;/&lt;code&gt;setgid&lt;/code&gt; or executable files colorized differently.&lt;/p&gt;
&lt;p&gt;Of course, this is now setup on Sherlock, for every user’s benefit.&lt;/p&gt;
&lt;p&gt;But if you want all of your colors back, no worries, you can simply revert to the distribution defaults with:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;hljs language-shell&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;unset&lt;/span&gt; LS_COLORS&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But then, if you have directories with many many files, be sure to have some coffee handy while &lt;code&gt;ls&lt;/code&gt; is doing its thing.&lt;/p&gt;
</description>
<pubDate>Fri, 26 Apr 2019 19:48:32 +0000</pubDate>
<dc:creator>CaliforniaKarl</dc:creator>
<og:title>When setting an environment variable gives you a 40x speedup</og:title>
<og:type>article</og:type>
<og:description>Today, we'd like to share some of our recent work on Sherlock that allowed a pretty significant speedup when listing files in directories with a lot of entries. &gt; Unlike our usual announcements, this post is more of a behind-the-scenes...</og:description>
<og:url>http://news.sherlock.stanford.edu/posts/when-setting-an-environment-variable-gives-you-a-40-x-speedup</og:url>
<og:image>https://firebasestorage.googleapis.com/v0/b/noticeable-service.appspot.com/o/users%2F9s6zABHvXDeoEK3Pk0G3Z7gro513%2Fprojects%2FbYyIewUV308AvkMztxix%2Fposts%2FNzP6xovbLvQykEjMv50V%2Fcover-QntRt7zfMTosin6HghLV?alt=media&amp;token=05118a6d-c8ff-471d-8ae8-14e07189542b</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.sherlock.stanford.edu/posts/when-setting-an-environment-variable-gives-you-a-40-x-speedup</dc:identifier>
</item>
<item>
<title>Open-sourcing F14 for memory-efficient hash tables</title>
<link>https://code.fb.com/developer-tools/f14/?r=1</link>
<guid isPermaLink="true" >https://code.fb.com/developer-tools/f14/?r=1</guid>
<description>&lt;p&gt;Hash tables provide a fast way to maintain a set of keys or map keys to values, even if the keys are objects, like strings. They are such a ubiquitous tool in computer science that even incremental improvements can have a large impact. The potential for optimization led to a proliferation of hash table implementations inside Facebook, each with its own strengths and weaknesses. To simplify the process of selecting the right hash table, we built F14, a 14-way probing hash table within &lt;a href=&quot;https://github.com/facebook/folly&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Folly&lt;/a&gt;, our open source library of C++ components. The &lt;a href=&quot;https://github.com/facebook/folly/blob/master/folly/container/F14.md&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;F14&lt;/a&gt; hash tables outdo our previous specialized implementations while avoiding their pathologies. F14 is a good default — usually a great choice and never a bad one, regardless of the use case.&lt;/p&gt;
&lt;p&gt;On a programming forum, when engineers ask “What’s the best C++ hash table?” they really mean “Which C++ hash table has the best set of trade-offs for my scenario?” For us, this question used to lead to a litany of follow-up questions, such as:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do you keep long-lived references or pointers to the entries?&lt;/li&gt;
&lt;li&gt;Do you care more about CPU or memory?&lt;/li&gt;
&lt;li&gt;How big are your keys?&lt;/li&gt;
&lt;li&gt;How big are your tables?&lt;/li&gt;
&lt;li&gt;What is the operation mix between insertions, searches, and iteration?&lt;/li&gt;
&lt;li&gt;Are the keys strings?&lt;/li&gt;
&lt;li&gt;How often do you erase?&lt;/li&gt;
&lt;li&gt;… Can you post a link to your code?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Clearly, it’s hard to make the best choice when there are so many factors to consider. With F14, we have condensed this list to one simple choice: If you don’t keep long-lived references to entries, start with &lt;code&gt;folly::F14FastMap/Set&lt;/code&gt;. Otherwise, start with &lt;code&gt;folly::F14NodeMap/Set&lt;/code&gt;. F14 is part of &lt;a href=&quot;https://github.com/facebook/folly&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Folly&lt;/a&gt;, Facebook’s open source library of C++ components.&lt;/p&gt;
&lt;h2&gt;Improving hash table implementation with F14&lt;/h2&gt;
&lt;p&gt;Hash tables are useful because they are fast. The theoretical average running time for &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, and &lt;code&gt;erase&lt;/code&gt; is the optimal &lt;em&gt;O(1)&lt;/em&gt; — meaning no matter how big the hash table gets, the average number of steps needed to perform those operations on any hypothetical computer has a fixed limit. In practice, of course, one hash table implementation might be consistently better than another. We can’t improve on the theory of hash tables, but we can improve on the practice. In particular, F14 provides practical improvements for both performance and memory. It does this by exploiting the vector instructions available on modern CPUs, providing multiple memory layouts, and paying careful attention to detail. It is easy to use well, integrates with testing tools, and enables advanced features by default.&lt;/p&gt;
&lt;p&gt;Hash tables start by computing a numeric hash code for each key and using that number to index into an array. The hash code for a key is always the same, and hash codes for different keys are likely to be different. That means that the keys in a hash table are distributed randomly across the slots in the array. Much of the variation between hash table algorithms comes from how they handle collisions (multiple keys that map to the same array index). Algorithms generally use either chaining, which uses a secondary data structure such as a linked list to store all the keys for a slot, or probing, which stores keys directly in the main array and then keeps checking new slots if there is a collision.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12912&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png&quot; alt=&quot;Algorithms generally use either chaining, which uses a secondary data structure such as a linked list to store all the keys for a slot, or probing, which stores keys directly in the main array and then keeps checking new slots if there is a collision. &quot; width=&quot;2000&quot; height=&quot;1123&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png?resize=580,326 580w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png?resize=916,514 916w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png?resize=768,431 768w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_01.png?resize=1024,575 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;br/&gt;If we divide the number of keys by the size of the main array, we get a number called the &lt;em&gt;load factor&lt;/em&gt;, which is a measure of the hash table’s fullness. Decreasing the load factor by making the main array larger reduces the number of collisions but wastes memory. General-purpose hash tables keep the load factor from getting too high by rehashing, or moving entries to a new, larger array.&lt;/p&gt;
&lt;p&gt;The standard template library (STL) for C++ provides hash tables via &lt;code&gt;std::unordered_map&lt;/code&gt; and &lt;code&gt;std::unordered_set&lt;/code&gt;. The standard guarantees reference stability: References and pointers to the keys and values in the hash table must remain valid until the corresponding key is removed. In practice, this means the entries must be indirect and individually allocated, which adds a substantial CPU overhead. Folly has chosen to expose a fast C++ class without reference stability as well as a slower C++ class that allocates each entry in a separate node. The node-based version is not fully standard compliant, but it is drop-in compatible with the standard version in all the real code we’ve seen.&lt;/p&gt;
&lt;h2&gt;Reducing collisions with vector instructions&lt;/h2&gt;
&lt;p&gt;Collisions are the bane of a hash table: Resolving them creates unpredictable control flow and requires extra memory accesses. Modern processors are fast largely because of pipelining — each core has many execution units that allow the actual work of instructions to overlap. This strategy works well only if the CPU can accurately predict the outcome of &lt;code&gt;if&lt;/code&gt; statements and loops, and it’s hard to predict whether a key will have a collision.&lt;/p&gt;
&lt;p&gt;The core idea of F14 is to use the hash code to map keys to a chunk (a block of slots) instead of to a single slot, then search within the chunk in parallel. The intra-chunk search uses vector instructions (SSE2 or NEON) to filter all the slots of the chunk at the same time. We call our algorithm F14 because it filters 14 slots at once (this chunk size is a good trade-off between cache alignment and collision rate). F14 performs collision resolution if a chunk overflows or if two keys both pass the filtering step. The two-step search is a bit more work than in a normal hash table algorithm when neither has a collision, but F14 is faster overall because there’s a much lower probability that a collision will interfere with instruction pipelining.&lt;/p&gt;
&lt;img class=&quot;size-full wp-image-12913&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_02-1.jpg&quot; alt=&quot;The lower bits of the full hash code determine the chunk. The upper bits are used to filter which slots in a chunk might hold the search key.&quot; width=&quot;2000&quot; height=&quot;1217&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_02-1.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_02-1.jpg?resize=916,557 916w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_02-1.jpg?resize=768,467 768w, https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_02-1.jpg?resize=1024,623 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;The lower bits of the full hash code determine the chunk. The upper bits are used to filter which slots in a chunk might hold the search key.
&lt;p&gt;Chunking is an effective strategy because the chance that 15 of the table’s keys will map to a chunk with 14 slots is much lower than the chance that two keys will map to one slot. For instance, imagine you are in a room with 180 people. The chance that one other person has the same birthday as you is about 50 percent, but the chance that there are 14 people who were born in the same fortnight as you is much lower than 1 percent. Chunking keeps the collision rate low even for load factors above 80 percent. Even if there were 300 people in the room, the chance of a fortnight “overflow” is still less than 5 percent.&lt;/p&gt;
&lt;p&gt;Below is a plot of the likelihood that an algorithm won’t find a search key in the very first place it looks. The happiest place on the graph is the bottom right, where the high load factor saves memory and the lack of collisions means that keys are found quickly with predictable control flow. You’ll notice that the plot includes lines for both “F14 ideal” and “F14 with 7-bit tag.” The former includes only chunk overflow, while the latter reflects the actual algorithm. There’s a 1/128 chance that two keys have the same 7-bit tag even with a high-quality hash function.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12926&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg&quot; alt=&quot;a plot of the likelihood that an algorithm won't find a search key in the very first place it looks&quot; width=&quot;2000&quot; height=&quot;1123&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg?resize=580,326 580w, https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg?resize=916,514 916w, https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg?resize=768,431 768w, https://code.fb.com/wp-content/uploads/2019/04/F14_03.jpg?resize=1024,575 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Reference-counted tombstones&lt;/h2&gt;
&lt;p&gt;Most probing strategies keep looking until they find an empty slot. That makes erasing keys tricky. The algorithm must either leave a tombstone (an empty slot that doesn’t terminate the probe search) or slide down the later keys in the probe sequence, which becomes very complex for robust probing strategies. In workloads that mix &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;erase&lt;/code&gt;, tombstones can accumulate. Accumulated tombstones act like a high load factor from the performance perspective and a low load factor for memory utilization, which is the worst of both worlds.&lt;/p&gt;
&lt;p&gt;F14 uses a novel strategy that acts like something similar to reference-counted tombstones. It’s based on an auxiliary bit for each slot suggested by Amble and Knuth in their 1974 article “&lt;a href=&quot;https://academic.oup.com/comjnl/article/17/2/135/525363&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Ordered hash tables&lt;/a&gt;.” The bit was set whenever their insertion routine probed past a slot that was already full; the bit records that a slot has overflowed. A tombstone roughly corresponds to an empty slot with the overflow bit set. The overflow bit makes searches faster, because the search for a key can be stopped at a full slot whose overflow bit is clear, even if the following slot is not empty.&lt;/p&gt;
&lt;p&gt;Our extension to the overflow bit idea is to count the number of active overflows. This is possible because even though they accomplish the same purpose as a tombstone, overflow bits have a different life cycle. They are set when a displaced key is inserted rather than when the key that did the displacing is removed. It’s not practical to figure out how many keys are relying on a tombstone when it is created, but it’s easy to keep track of the number of keys relying on an overflow bit. Each F14 chunk uses 1 byte of metadata to count the number of keys that wanted to be placed in the chunk but are currently stored in a different chunk. When a key is erased, it decrements the overflow counter on all the chunks that are on its probe sequence, cleaning them up. This fits with our goal of making F14 work well in a wide variety of scenarios: Long-lived maps/sets with continual &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;erase&lt;/code&gt; work fine. Overflow counts also speed up F14 tables that don’t call &lt;code&gt;erase&lt;/code&gt;; they shorten probe lengths and reduce the chance that copy construction must perform a rehash.&lt;/p&gt;
&lt;h2&gt;Optimizing memory with multiple layouts&lt;/h2&gt;
&lt;p&gt;Reducing memory waste is directly useful. It also aids performance by allowing more of a program’s data to fit in cache, which can speed up both the hash table and the surrounding code. Two common strategies for hash table memory layouts are indirect (typically with a pointer stored in the main array) and direct (with the memory of the keys and values incorporated directly into the main hash array). Direct storage algorithms must use probing for conflict resolution unless they store additional metadata. F14 exposes pointer-indirect (F14Node) and direct storage (F14Value) versions, as well as the less common index-indirect (F14Vector).&lt;/p&gt;
&lt;p&gt;We can examine the trade-offs of different layouts by separating memory usage into categories. Let’s refer to space for keys and values as data, and space for everything else as metadata. Data space is proportional to the size of the keys and values; metadata space is independent of the key and value types. Categories of memory use:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Useful data space:&lt;/strong&gt; The number of bytes that actually hold the entries inserted by the user. There’s no generic way to reduce this component.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data space unusable because of the maximum load factor:&lt;/strong&gt; Conflict resolution with probing becomes inefficient if the main array fills up, so the table must rehash before that happens. For example, a maximum load factor of 0.5 is common for probing, which means no more than half the indexes can be filled before rehashing occurs. Therefore, space for data in the unused indexes is wasted. In the 0.5 load factor case, we can say that for every byte of useful data, there is one byte of waste due to the load factor, or a 100 percent overhead. This is greatly improved with F14Value, which generally uses a max load factor of 12/14.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data space unused because of bulk allocation:&lt;/strong&gt; While pointer-indirect hash tables can allocate data space one key at a time during &lt;code&gt;insert&lt;/code&gt;, those with direct or index-indirect memory layouts bulk-allocate data space during a rehash. While bulk allocation is more CPU efficient, it’s possible that not all the space will end up being used. The most common rehashing strategy is to double the capacity during rehash so that, in the worst case, allocating in bulk results in only half of the usable data space actually being used. If an algorithm doesn’t limit itself to power-of-two table sizes, this overhead can be avoided when the caller uses &lt;code&gt;reserve&lt;/code&gt;, but that is not compatible with the common performance optimization of using bitwise-and to evenly distribute hash codes across indexes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata per table:&lt;/strong&gt; Hash table data structures have some fundamental overhead, typically at least a pointer and a couple of integers. This category is important for use cases that have many empty or small tables, such as for the hash table inside &lt;code&gt;folly::dynamic&lt;/code&gt;. We have carefully engineered F14 hash tables so that there is no dynamic allocation for empty tables and the C++ type itself is small: only 24 bytes (F14Vector) or 32 bytes (F14Value and F14Node) on 64-bit platforms.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata per &lt;code&gt;insert&lt;/code&gt;:&lt;/strong&gt; Indirect storage with chaining for conflict resolution must allocate some bytes for the chaining pointer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Metadata per &lt;code&gt;rehash&lt;/code&gt;:&lt;/strong&gt; This category includes the bytes allocated during rehash not set aside for future storage of data values, such as the pointers in the main array for a chaining hash table or the secondary hashes used by F14.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Below are the overheads for hash sets holding 8-byte integers. The probing sentinel-based table here is similar to &lt;code&gt;dense_hash_set&lt;/code&gt; but has a minimum capacity of two and doesn’t allocate at all for empty tables.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12929&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset1.jpg&quot; alt=&quot;The overheads for hash sets holding 8-byte integers. The probing sentinel-based table is similar to dense_hash_set but has a minimum capacity of two and doesn't allocate at all for empty tables.&quot; width=&quot;2000&quot; height=&quot;664&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset1.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset1.jpg?resize=916,304 916w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset1.jpg?resize=768,255 768w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset1.jpg?resize=1024,340 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;br/&gt;The STL container &lt;code&gt;std::unordered_set&lt;/code&gt; never wastes any data space, because it waits until the last moment to allocate nodes. On the other hand, for small elements like these, the metadata overhead is quite high. Each data item is the same size as a pointer, so the metadata ranges from 2x to 3x the size of the data. Despite having a smaller maximum load factor, a probing table that uses sentinels ends up using less overall memory because its data space waste is smaller than the metadata waste of &lt;code&gt;std::unordered_set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12930&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset2.jpg&quot; alt=&quot;F14NodeSet performs a separate memory allocation for every value. F14ValueSet stores the values inline.&quot; width=&quot;2000&quot; height=&quot;662&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset2.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset2.jpg?resize=916,303 916w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset2.jpg?resize=768,254 768w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset2.jpg?resize=1024,339 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;br/&gt;&lt;code&gt;F14NodeSet&lt;/code&gt; performs a separate memory allocation for every value, like &lt;code&gt;std::unordered_set&lt;/code&gt;. It stores pointers to the values in chunks but uses F14’s probing collision resolution so there are no chaining pointers and no per-&lt;code&gt;insert&lt;/code&gt; metadata. &lt;code&gt;F14ValueSet&lt;/code&gt; stores the values inline, like a probing sentinel-based table. It has the same data waste from early allocation, which is intrinsic to inline storage, but has much less data waste due to using a higher maximum load factor. &lt;code&gt;F14ValueSet&lt;/code&gt; achieves this memory-efficiency win while also avoiding the need for sentinels.&lt;/p&gt;
&lt;p&gt;F14Node and F14Value typically use a maximum load factor of 12/14, so they rehash when growing beyond sizes of 12*2^k (like 24 in the above plots). However, if you look closely, you’ll see that rather than rehashing after 12, they rehash after 14. Filtering works fine even in a completely full chunk, so we are careful to use a maximum load factor of 100 percent when there is only one chunk. In fact, the filtering step means that we can support every capacity from 0 to 14 without any special cases in the lookup or insertion logic. If &lt;code&gt;reserve&lt;/code&gt; is not called, the initial rehashes occur after sizes 2 and 6. If an initial capacity is available, we can be even more memory-efficient for small tables.&lt;/p&gt;
&lt;p&gt;The relative space overhead of metadata is reduced for bigger values. Here are the same four graphs when storing &lt;code&gt;std::string&lt;/code&gt;. Note that the per-&lt;code&gt;insert&lt;/code&gt; metadata is larger for this case because &lt;code&gt;std::unordered_set&lt;/code&gt; chooses to cache the hash values in the nodes.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12931&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset3.jpg&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;663&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset3.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset3.jpg?resize=916,304 916w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset3.jpg?resize=768,255 768w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset3.jpg?resize=1024,339 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12932&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset4.jpg&quot; alt=&quot;&quot; width=&quot;2000&quot; height=&quot;660&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset4.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset4.jpg?resize=916,302 916w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset4.jpg?resize=768,253 768w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset4.jpg?resize=1024,338 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;/p&gt;
&lt;p&gt;F14 also provides an array-indirect memory policy. F14Vector stores values in a densely packed vector with a 4-byte index in the main hash array. When a key is removed, the last vector element is moved into its place and the corresponding index entry is adjusted. F14Vector provides very fast iteration and destruction. For large values it is also more memory-efficient than F14Value, because the data vector can be sized to have no load factor waste. When the final size is known in advance, we get further savings by sizing the data vector and chunk array independently. This lets us keep the number of chunks a power of two, which is important for lookup performance, while entirely eliminating data waste.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-12933&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset5.jpg&quot; alt=&quot;F14VectorSet could actually be more accurately called F12VectorSet — we use chunks of 12 to store the 4-byte indexes so that a chunk fits perfectly in a cache line, and we use a maximum load factor of 10/12.&quot; width=&quot;2000&quot; height=&quot;660&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14graphset5.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset5.jpg?resize=916,302 916w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset5.jpg?resize=768,253 768w, https://code.fb.com/wp-content/uploads/2019/04/F14graphset5.jpg?resize=1024,338 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;br/&gt;&lt;code&gt;F14VectorSet&lt;/code&gt; could actually be more accurately called F12VectorSet — we use chunks of 12 to store the 4-byte indexes so that a chunk fits perfectly in a cache line, and we use a maximum load factor of 10/12.&lt;/p&gt;
&lt;h2&gt;F14Fast: A hybrid memory policy&lt;/h2&gt;
&lt;p&gt;The graphs let us compare the memory efficiency at a particular size, but what about general conclusions? For 32-byte keys, &lt;code&gt;F14ValueSet&lt;/code&gt; uses less memory to hold 24 keys than &lt;code&gt;F14VectorSet&lt;/code&gt;, but is it more efficient on average? Benford’s law lets us compute the answer. Hash table sizes in production seem to follow Benford’s law across a range of sizes, which implies that the probability of finding a table with a particular load factor &lt;em&gt;f&lt;/em&gt; is proportional to 1/&lt;em&gt;f&lt;/em&gt;. This lets us weight the memory overheads independent of the exact rehash points.&lt;/p&gt;
&lt;p&gt;The following plot shows the average memory efficiency as a function of the size of the entries. Load factors are weighted using Benford’s law. The lines are not smooth because they also take into account the memory wasted because of the spacing between &lt;a href=&quot;https://github.com/jemalloc/jemalloc&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;jemalloc’s&lt;/a&gt; default allocation classes. These &lt;a href=&quot;https://github.com/google/hashtable-benchmarks/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;microtable benchmarks&lt;/a&gt; have code to compute this graph.&lt;br/&gt;&lt;img class=&quot;alignnone size-full wp-image-12927&quot; data-src=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg&quot; alt=&quot;This plot shows the average memory efficiency as a function of the size of the entries&quot; width=&quot;2000&quot; height=&quot;1123&quot; data-srcset=&quot;https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg 2000w, https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg?resize=580,326 580w, https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg?resize=916,514 916w, https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg?resize=768,431 768w, https://code.fb.com/wp-content/uploads/2019/04/F14_04.jpg?resize=1024,575 1024w&quot; sizes=&quot;(max-width: 992px) 100vw, 62vw&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Both F14Vector and F14Value provide excellent performance. Since our goal is to make a good default, we decided to splice them together into a hybrid storage policy, called F14Fast. This strategy acts like F14Vector whenever &lt;code&gt;value_type&lt;/code&gt; is 24 bytes or larger; otherwise, it acts like F14Value. The &lt;code&gt;folly::F14FastMap&lt;/code&gt; and &lt;code&gt;folly::F14FastSet&lt;/code&gt; types are by far the most commonly used across our codebase.&lt;/p&gt;
&lt;h2&gt;Testability&lt;/h2&gt;
&lt;p&gt;When converting existing code to F14, we encountered both unit test failures and production crashes. A majority of these were tests that hard-coded a specific iteration order, or code that implicitly relied on the specific behavior of a hash table implementation. For example, iterators work fine after a rehash in libstdc++’s &lt;code&gt;std::unordered_map&lt;/code&gt;, even though it is undefined behavior in the standard.&lt;/p&gt;
&lt;p&gt;To make sure code doesn’t take implicit dependencies on F14’s iteration order, we randomize it for debug builds. In this mode, F14 randomly chooses among all the empty slots in a chunk when inserting a new key. Entry order isn’t completely randomized, but the shuffle is good enough to catch a regressing test with only a few runs.&lt;/p&gt;
&lt;p&gt;F14 also has &lt;a href=&quot;https://github.com/google/sanitizers/wiki/AddressSanitizer&quot;&gt;ASAN&lt;/a&gt; integration that can probabilistically detect reference and iterator stability issues. In this mode, all the non-node memory is reallocated with probability 1/size on each &lt;code&gt;insert&lt;/code&gt;. This catches code fragments such as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;F14FastMap&amp;lt;.., ..&amp;gt; m;
auto&amp;amp; v1 = m[k1];
m[k2] = foo(v1); // m might rehash before calling foo!&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;One way to fix this pattern is to use &lt;code&gt;reserve&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;m.reserve(m.size() + 2); // space for k1 + k2 to be added
auto&amp;amp; v1 = m[k1];
m[k2] = foo(v1);&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;When there is a call to &lt;code&gt;m.reserve(m.size() + d)&lt;/code&gt;, spurious reallocations will be disabled for the next &lt;code&gt;d&lt;/code&gt; insertions that happen on that thread. So far, this simple heuristic has been sufficient to avoid any false positives.&lt;/p&gt;
&lt;h2&gt;C++ optimizations&lt;/h2&gt;
&lt;p&gt;The best way to speed up code is to run less of it. F14 reduces the need for object construction and copies both inside the hash table and in the surrounding code:&lt;br/&gt;&lt;strong&gt;1. Heterogeneous lookups and mutations:&lt;/strong&gt; Facebook code often uses string views (&lt;code&gt;folly::StringPiece&lt;/code&gt; and &lt;code&gt;std::string_view&lt;/code&gt;) to boost the performance of code that processes text. These classes don’t manage memory themselves, so they are not a good key type for a hash table. It is common, however, to want to use a &lt;code&gt;std::string_view&lt;/code&gt; to search in a hash table with &lt;code&gt;std::string&lt;/code&gt; keys. By using a hash function that can hash both &lt;code&gt;std::string_view&lt;/code&gt; and &lt;code&gt;std::string&lt;/code&gt;, F14 avoids the need to copy the content of the string in this case, allowing the calling code to do a lot less work. C++20 will let you opt in to this type of heterogeneous lookup for read-only APIs, such as &lt;code&gt;find&lt;/code&gt;. F14 has heterogeneous lookup for both the read and write APIs wherever it makes sense. &lt;code&gt;operator[]&lt;/code&gt; is especially important; its convenient syntax means it is heavily used to find existing keys. We’ve also made heterogeneous lookup the default for all stringlike key types.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Destructuring for &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;emplace&lt;/code&gt; arguments:&lt;/strong&gt; The &lt;code&gt;operator[]&lt;/code&gt; API and the newer unordered map APIs &lt;code&gt;try_emplace&lt;/code&gt; and &lt;code&gt;insert_or_assign&lt;/code&gt; pass the search key as a separate argument, making it easy to check the hash table for an existing entry without doing the work of constructing the &lt;code&gt;std::pair&lt;/code&gt; entry. &lt;code&gt;emplace&lt;/code&gt; is trickier because its arguments are forwarded through to one of &lt;code&gt;std::pair&lt;/code&gt;‘s eight constructors. The F14 maps are careful to match against all of those forms internally; if they find that a single parameter will be used to initialize the first element of the pair, then it can be used directly for the initial search. This is especially powerful when combined with heterogeneous lookup. F14’s map &lt;code&gt;insert&lt;/code&gt; method just forwards to &lt;code&gt;emplace&lt;/code&gt;, relying on destructuring to extract the key.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. &lt;code&gt;const&lt;/code&gt; field key workaround:&lt;/strong&gt; Constant fields can’t be used as the source of a move constructor. This is unfortunate, because &lt;code&gt;std::unordered_map&lt;/code&gt; (and &lt;code&gt;std::map&lt;/code&gt;) hold &lt;code&gt;std::pair&amp;lt;K const, T&amp;gt;&lt;/code&gt;. It’s not a big issue for node-based containers, since they never need to move an entry, but a hash table with direct storage must make a hard decision. There are four options: copy all the keys during every rehash, hand out mutable references to a &lt;code&gt;std::pair&amp;lt;K,T&amp;gt;&lt;/code&gt;, hand out a proxy class, or rely on undefined C++ behavior. Those options are slow, risky (clients can change the key), incompatible (maybe we can try again after proxy iterators work), and ugly, respectively. After careful deliberation, we chose ugly, using &lt;code&gt;const_cast&lt;/code&gt; to make the key mutable just prior to its destruction during rehash.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. &lt;code&gt;[[deprecated]]&lt;/code&gt; warning instead of &lt;code&gt;std::move_if_noexcept&lt;/code&gt;:&lt;/strong&gt; Each time we tried to put a type that is not &lt;code&gt;noexcept&lt;/code&gt; movable into an &lt;code&gt;F14FastMap&lt;/code&gt; or &lt;code&gt;F14FastSet&lt;/code&gt;, the missing &lt;code&gt;noexcept&lt;/code&gt; annotation was a mistake rather than an attempt to use copying to get the strong exception guarantee. On the other hand, forcing users to modify their code before trying F14 would put up barriers to adoption and experimentation. As a compromise, we always move keys and values, but if those constructors are not marked &lt;code&gt;noexcept&lt;/code&gt;, then we trigger noisy deprecation warnings.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. Whitelisting trusted hashers:&lt;/strong&gt; Some hash functions distribute information evenly across all their bits — any change to the input causes an avalanche of changes to the hash code. Ideally, any one-bit change in the input is expected to change about half the bits of the output. These hash functions can be mapped onto a power-of-two range by just zeroing the top bits. For example, we might map hash codes across 32 chunks by zeroing all but the bottom five bits.&lt;/p&gt;
&lt;p&gt;At the other end of the spectrum are hash functions like &lt;code&gt;std::hash&lt;/code&gt; for integral types, which is often the identity function. It meets the C++ standard’s requirements for hash quality (hash codes are very unlikely to be equal unless the inputs are also equal), but it doesn’t spread information at all. If we just took the bottom five bits, for example, then we would experience a large number of collisions if all the integer keys were multiples of 32. If the hash function doesn’t distribute information, then F14 must postprocess the hash code with a bit mixer.&lt;/p&gt;
&lt;p&gt;The bit mixer adds only a few cycles of latency, but it is still worth optimizing because hash tables are used at the core of some very hot loops. Folly has an extensible compile-time whitelisting mechanism that can be used to bypass the mixer, such as for &lt;code&gt;std::hash&amp;lt;std::string&amp;gt;&lt;/code&gt;. The whitelist can also be used to disable the mixer when the keys are known to be uniformly distributed.&lt;/p&gt;
&lt;p&gt;Folly’s &lt;a href=&quot;https://github.com/facebook/folly/blob/master/folly/container/F14.md&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;F14&lt;/a&gt; is widely used inside Facebook. F14 works well because its core algorithm leverages vector instructions to increase the load factor while reducing collisions, because it supports multiple memory layouts for different scenarios, and because we have paid attention to C++ overheads near the API. F14 is a good default choice — it delivers CPU and RAM efficiency that is robust across a wide variety of use cases.&lt;/p&gt;

</description>
<pubDate>Fri, 26 Apr 2019 17:06:49 +0000</pubDate>
<dc:creator>ot</dc:creator>
<og:type>article</og:type>
<og:title>Open-sourcing F14 for memory-efficient hash tables - Facebook Code</og:title>
<og:description>To simplify the process of selecting the right hash table, we built F14, part of Folly, our open source library of C++ components.</og:description>
<og:url>https://code.fb.com/developer-tools/f14/</og:url>
<og:image>https://code.fb.com/wp-content/uploads/2019/04/F14_CGraphic_Hero.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://code.fb.com/developer-tools/f14/?r=1</dc:identifier>
</item>
<item>
<title>Can Uber ever make money?</title>
<link>https://www.economist.com/business/2019/04/27/can-uber-ever-make-money</link>
<guid isPermaLink="true" >https://www.economist.com/business/2019/04/27/can-uber-ever-make-money</guid>
<description>&lt;div readability=&quot;31&quot;&gt;
&lt;div class=&quot;blog-post__asideable-content blog-post__asideable-content--meta&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;
&lt;h3 class=&quot;blog-post__section&quot; itemprop=&quot;articleSection&quot;&gt;&lt;span&gt;Print edition | Business&lt;/span&gt;&lt;/h3&gt;
&lt;time class=&quot;blog-post__datetime&quot; itemprop=&quot;dateCreated&quot; datetime=&quot;2019-04-27T00:00:00Z&quot;&gt;Apr 27th 2019&lt;/time&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;div itemprop=&quot;description&quot; readability=&quot;144&quot;&gt;
&lt;p&gt;&lt;span data-caps=&quot;initial&quot;&gt;L&lt;/span&gt;&lt;small&gt;ONDON CABBIES&lt;/small&gt; enjoy a good moan. But few can match the satirical indignation of a former ferry operator, John Taylor, who used to carry passengers on the Thames. As well as being a “waterman”, Taylor was a poet, writing in the 1620s just when horse-drawn Hackney carriages were making their debut on the streets of the capital. In “An Arrant Thief”, published in 1622, he described the carnage from “upstart Hell-cart-coaches” robbing his brethren of their fares. “Against the ground, we stand and knock our heels/Whilst all our profit runs away on wheels.”&lt;/p&gt;
&lt;p&gt;Four centuries later, profits across the global taxi industry are again running away—but this time into thin air. Until recently, the fortunes of regulated cab companies drew the most attention. Uber and Lyft in America, Didi in China and other ride-hailing firms elsewhere have used sackloads of venture capital to drive down fares and flood the streets of big cities with cars, clobbering the earnings of licensed rivals. But now their own losses are in the spotlight. In a filing released in the run-up to its initial public offering, Uber says it has lost $7.9bn since 2009. Lyft, which listed last month, lost $2.9bn in seven years. Uber is seeking a valuation of up to $100bn but as yet it is unclear if it can make money. To understand why, it helps to look at the history of the taxi industry. When regulated, it is a cushy business. When not, it is cut-throat.&lt;/p&gt;

&lt;div class=&quot;newsletter-form newsletter-form--inline&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;newsletter-form__message&quot; readability=&quot;7&quot;&gt;&lt;strong&gt;Get our daily newsletter&lt;/strong&gt;
&lt;p&gt;Upgrade your inbox and get our Daily Dispatch and Editor's Picks.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Start with Uber’s most oft-touted attributes. Its name has become synonymous with ride-hailing thanks to rapid expansion that its advocates put down to “first-mover advantage” and network effects, or the belief that it will become more valuable as more people use it. The company claims to have more than 65% of the ride-hailing market in the United States and Canada, Europe, Australia and New Zealand, and Latin America. But it sees itself as more than just a taxi company, with car ownership and public transport in its sights. The proposed valuation implies a huge market which Uber would need to all but monopolise.&lt;/p&gt;
&lt;p&gt;Look through history, though, and taxi monopolies look anything but impregnable. That is because the ride-hailing business, which will remain Uber’s bread and butter for the foreseeable future, is local, not global. And, as long as competition is unregulated, entering local markets is relatively easy. Len Sherman of Columbia Business School draws a parallel between Uber’s business and that of unregulated taxis in New York in the 1930s, when Ford’s Model &lt;small&gt;T&lt;/small&gt; emerged as a new, low-cost cab. During the Depression many jobless workers took to taxi-driving for a living, undercutting each other viciously. The streets were saturated with vehicles but the earnings of drivers and taxi companies evaporated. Customers benefited, but no one else did. Uber and Lyft are reprising that episode as they fight city by city for drivers and customers.&lt;/p&gt;
&lt;p&gt;Uber’s name recognition may help. Historically, taxi firms have benefited from strong brands. London’s black taxis, or New York’s yellow ones, for instance, attract users despite high fares and relative scarcity. They are hallmarks of their cities. In an ideal world for Uber, brand awareness would mean customers went straight to its app rather than that of a rival, convincing more drivers to work for it because they can access a bigger market. This would produce the vaunted network effect for drivers and riders.&lt;/p&gt;
&lt;p&gt;The trouble is, as competition increases, ride-hailing becomes a commodity business. Customers care little whether they ride with Uber or Lyft, as long as it gets them from &lt;small&gt;A&lt;/small&gt; to &lt;small&gt;B&lt;/small&gt;. That means neither firm can easily increase profits by raising fares, but may instead have to offer discounts. Likewise, the ride-hailing firms do not own their cars: their drivers do, and so have no reason to be loyal. That forces the firms to pile on incentives to stop drivers from deserting, kicking profits even further down the road.&lt;/p&gt;
&lt;p&gt;Throughout taxi history, the answer to such a race to the bottom has been regulation. In 1635 the number of Hackney carriages in London was restricted to reduce congestion (Taylor must have breathed a sigh of relief). In 1937 the Haas Act introduced the medallion system in New York, putting strict curbs on the number of medallions and driving up their value. Recently the city’s regulators have moved to control ride-hailing, capping the number of vehicles and introducing a minimum wage for drivers. That could become a trend.&lt;/p&gt;
&lt;p&gt;So much for the past. What about the future? Uber’s foray into Uber Eats, its food-delivery service, may be an even tougher business proposition than ride-hailing; it has to give restaurateurs a cut of each sale, as well as drivers. Its core measure of revenue at Uber Eats fell in the second half of 2018 compared with the first half. That was not encouraging. The firm is expanding into broader mobility services, such as scooters and electric bikes, and is building a platform that includes public transport, so customers can travel more seamlessly across a city. But again, competition will be intense: city governments will be loth to link access to their public-transport systems to a single platform, for safety, data-privacy and other reasons.&lt;/p&gt;
&lt;p&gt;Uber’s long-term goal is autonomous vehicles (&lt;small&gt;AV&lt;/small&gt;s), which would reduce its need to share revenues with human drivers. On April 18th Toyota and other investors put $1bn into Uber’s &lt;small&gt;AV&lt;/small&gt; division. On April 22nd Tesla unveiled plans to roll out robotaxis next year. That promise is subject to huge regulatory uncertainty, plus an Elon Musk bravado discount. But many other companies are keen to enter the fray. Expect fisticuffs.&lt;/p&gt;
&lt;h2 class=&quot;xhead&quot;&gt;Too Uber to fail&lt;/h2&gt;
&lt;p&gt;Uber will surely have a place in the future of transport. It may be able to increase rider and driver loyalty by replacing fares with monthly subscriptions. It may settle for dominating some cities, leaving others to rivals, provided that does not violate antitrust rules. History suggests that profits will be hard to come by. But at least its name should live on, just as Taylor’s hated Hackney “Hell-carts” do in London’s black cabs, 400 years later.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 26 Apr 2019 16:53:16 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:description>A ride back through history offers sobering lessons</og:description>
<og:image>https://cdn.static-economist.com/sites/default/files/images/print-edition/20190427_WBD000_0.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.economist.com/business/2019/04/27/can-uber-ever-make-money</og:url>
<og:title>Can Uber ever make money?</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.economist.com/business/2019/04/27/can-uber-ever-make-money</dc:identifier>
</item>
</channel>
</rss>