<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>I took 50,000 images of the night sky to make an 81 Megapixel image of the moon</title>
<link>https://www.reddit.com/r/space/comments/arer0k/i_took_nearly_50000_images_of_the_night_sky_to/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/space/comments/arer0k/i_took_nearly_50000_images_of_the_night_sky_to/</guid>
<description>&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;OP used an &lt;a target=&quot;_blank&quot; class=&quot;s90z9tc-27 hnLHXO&quot; href=&quot;https://astronomy-imaging-camera.com/product/asi224mc&quot;&gt;ASI224MC&lt;/a&gt; for the Moon exposures for this image. This is a camera which uses a similar sensor compared to your average DSLR, but it is smaller and has no moving parts, capable of taking dozens to hundreds of frames per second depending on what resolution you use.&lt;/p&gt;
&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;The software for capture, stacking, and processing is all free, thankfully. Firecapture is a popular capture software - as the ASI224MC has no viewfinder it relies on laptop control for operation. Autostakkert!2 is a popular stacking software (it aligns the Moon for each image and averages the pixel values), and either Registax or Photoshop can be used for sharpening afterwards.&lt;/p&gt;
&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;As for stacking, our atmosphere distorts incoming light, such as Moonlight. You can see this effect on a hot day when you look across a parking lot, the air will shimmer. This is compounded by the fact that even when the Moon is directly overhead, you are still looking through roughly 100 miles of air. The method then used to pick out those millisecond-long moments where the Moon is actually sharp and in focus is called Lucky Imaging, and it is why OP takes so many frames. For planetary imaging 50,000 is not too uncommon, though you can get decent enough results with as little as a few hundred with a calm atmosphere free of dust. As an example, I took &lt;a target=&quot;_blank&quot; class=&quot;s90z9tc-27 hnLHXO&quot; href=&quot;https://www.astrobin.com/full/351168/0/?nc=user&quot;&gt;this mosaic&lt;/a&gt; with the same camera OP used, using a total of about 100,000 frames, but spread through about 55 panels since my telescope is comparable to a ~2000mm lens (and since the camera sensor is so small, it only picks up a portion of that field of view). Click &quot;full resolution&quot; at your own peril, for those on mobile devices.&lt;/p&gt;
&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;The other advantage of stacking multiple images is noise reduction. Cameras have some amount of random noise in each frame, which is the grainy effect you often see in darker images. Astrophotography is all about signal-to-noise ratios, with the primary goal being to increase this ratio through varying methods of noise reduction, such as image stacking. The great thing about random noise is that you can get rid of most of it by stacking about 40 images, with some decreasing benefit using higher numbers of images. Obviously 50,000 would reduce it to tiny levels, but in the case of planetary imaging, which uses very short exposures, the main advantage of stacking is to get around the atmospheric blurring. &lt;a target=&quot;_blank&quot; class=&quot;s90z9tc-27 hnLHXO&quot; href=&quot;https://www.cloudynights.com/uploads/monthly_07_2018/post-273658-0-74013300-1530665326.jpg&quot;&gt;Here&lt;/a&gt; is an example of the benefits of stacking I found online.&lt;/p&gt;
&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;Capturing the night sky via long exposure is another animal. Long exposure introduces not only random noise, but some heat-related noise caused by the camera taking so long for each exposure. This can be partially reduced through stacking (for long exposure, we use a free software called Deep Sky Stacker, which will identify and align images to detected stars), but also benefits from calibration images called Darks. These are exposures identical to the ones you took of the night sky except with the lens cap on. Using this method, you can capture only the camera noise, which is subtracted from each image of the night sky before then stacking them together. In this manner, you can remove the predictable noise as well as the random noise for a clean image.&lt;/p&gt;
&lt;p class=&quot;s90z9tc-10 fHRkcP&quot;&gt;Also in the case of night sky long exposure, you will require a tracking mount. For bright objects like the Moon or planets, you can get away with using a manually-driven telescope, but since the Earth rotates, the stars will move during the exposure and thus require a tracking mount to counteract this. Widefield lenses (14mm or so) can get away with static tripod imaging since the stars don't noticeably move as fast, but anything 50mm or beyond will likely require a tracking mount for decent imaging.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Feb 2019 12:18:20 +0000</pubDate>
<dc:creator>sohkamyung</dc:creator>
<og:title>r/space - I took nearly 50,000 images of the night sky to make an 81 Megapixel image of Tuesday's moon. Uncompressed image linked in the comments. [OC]</og:title>
<og:type>image</og:type>
<og:url>https://www.reddit.com/r/space/comments/arer0k/i_took_nearly_50000_images_of_the_night_sky_to/</og:url>
<og:description>159,075 votes and 3,664 comments so far on Reddit</og:description>
<og:image>https://preview.redd.it/d1aehdnbq0h21.jpg?auto=webp&amp;s=90682669f090293cf1c26361777b71cab7967775</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/space/comments/arer0k/i_took_nearly_50000_images_of_the_night_sky_to/</dc:identifier>
</item>
<item>
<title>Cache Eviction: When Are Randomized Algorithms Better Than LRU? (2014)</title>
<link>http://danluu.com/2choices-eviction/</link>
<guid isPermaLink="true" >http://danluu.com/2choices-eviction/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;Caches: LRU v. random&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;/&gt;&lt;link rel=&quot;icon&quot; href=&quot;data:;base64,=&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;217.75126732004&quot;&gt;
&lt;p&gt;&lt;strong&gt;Caches: LRU v. random&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Once upon a time, my &lt;a href=&quot;http://pages.cs.wisc.edu/~sohi/&quot;&gt;computer architecture professor&lt;/a&gt; mentioned that using a random eviction policy for caches really isn't so bad. That random eviction isn't bad can be surprising -- if your cache fills up and you have to get rid of something, choosing the &lt;a href=&quot;http://www.mathcs.emory.edu/~cheung/Courses/355/Syllabus/9-virtual-mem/LRU-replace.html&quot;&gt;least recently used (LRU)&lt;/a&gt; is an obvious choice, since you're more likely to use something if you've used it recently. If you have a tight loop, LRU is going to be perfect as long as the loop fits in cache, but it's going to cause a miss every time if the loop doesn't fit. A random eviction policy degrades gracefully as the loop gets too big.&lt;/p&gt;
&lt;p&gt;In practice, on real workloads, random tends to do worse than other algorithms. But what if we take two random choices and just use LRU between those two choices?&lt;/p&gt;
&lt;p&gt;Here are the relative miss rates we get for SPEC CPU with a Sandy Bridge-like cache (&lt;a href=&quot;http://danluu.com/3c-conflict/&quot;&gt;8-way associative&lt;/a&gt;, 64k, 256k, and 2MB L1, L2, and L3 caches, respectively). These are ratios (algorithm miss rate : random miss rate); lower is better. Each cache uses the same policy at all levels of the cache.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Policy&lt;/th&gt;
&lt;th&gt;L1 (64k)&lt;/th&gt;
&lt;th&gt;L2 (256k)&lt;/th&gt;
&lt;th&gt;L3 (2MB)&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;2-random&lt;/td&gt;
&lt;td&gt;0.91&lt;/td&gt;
&lt;td&gt;0.93&lt;/td&gt;
&lt;td&gt;0.95&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FIFO&lt;/td&gt;
&lt;td&gt;0.96&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;td&gt;1.02&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;LRU&lt;/td&gt;
&lt;td&gt;0.90&lt;/td&gt;
&lt;td&gt;0.90&lt;/td&gt;
&lt;td&gt;0.97&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;random&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Random and FIFO are both strictly worse than either LRU or 2-random. LRU and 2-random are pretty close, with LRU edging out 2-random for the smaller caches and 2-random edging out LRU for the larger caches.&lt;/p&gt;
&lt;p&gt;To see if anything odd is going on in any individual benchmark, we can look at the raw results on each sub-benchmark. The L1, L2, and L3 miss rates are all plotted in the same column for each benchmark, below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sandy-bridge-miss.png&quot; alt=&quot;Cache miss rates for Sandy Bridge-like cache&quot;/&gt;&lt;/p&gt;
&lt;p&gt;As we might expect, LRU does worse than 2-random when the miss rates are high, and better when the miss rates are low.&lt;/p&gt;
&lt;p&gt;At this point, it's not clear if 2-random is beating LRU in L3 cache miss rates because it does better when the caches are large or because it does better because it's the third level in a hierarchical cache. Since a cache line that's being actively used in L1 or L2 isn't touched in L3, an eviction can happen from the L3 (which forces an eviction of both the L1 and L2) since, as far as the L3 is concerned, that line hasn't been used recently. This makes it less obvious that LRU is a good eviction policy for L3 cache.&lt;/p&gt;
&lt;p&gt;To separate out the effects, let's look at the relative miss rates for a non-hierarchical (single level) vs. hierarchical caches at various sizes. For the hierarchical cache, the L1 and L2 sizes are as above, 64k and 256k, and only the L3 cache size varies. Below, we've got the geometric means of the ratios of how each policy does (over all SPEC sub-benchmarks, compared to random eviction). A possible downside to this metric is that if we have some very low miss rates, those could dominate the mean since small fluctuations will have a large effect on the ratio, but we can look the distribution of results to see if that's the case.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-mean-ratios.png&quot; alt=&quot;Cache miss ratios for cache sizes between 64K and 16M&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-mean-ratios-l3.png&quot; alt=&quot;L3 cache miss ratios for cache sizes between 512K and 16M&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Sizes below 512k are missing for the hierarchical case because of the 256k L2 -- we're using an inclusive L3 cache here, so it doesn't really make sense to have an L3 that's smaller than the L2. Sizes above 16M are omitted because cache miss rates converge when the cache gets too big, which is uninteresting.&lt;/p&gt;
&lt;p&gt;Looking at the single cache case, it seems that LRU works a bit better than 2-random for smaller caches (lower miss ratio is better), 2-random edges out LRU as the cache gets bigger. The story is similar in the hierarchical case, except that we don't really look at the smaller cache sizes where LRU is superior.&lt;/p&gt;
&lt;p&gt;Comparing the two cases, the results are different, but similar enough that it looks our original results weren't only an artifact of looking at the last level of a hierarchical cache.&lt;/p&gt;
&lt;p&gt;Below, we'll look at the entire distribution so we can see if the mean of the ratios is being skewed by tiny results.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-miss.png&quot; alt=&quot;L3 cache miss ratios for cache sizes between 512K and 16M&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-miss-l3.png&quot; alt=&quot;L3 cache miss ratios for cache sizes between 512K and 16M&quot;/&gt;&lt;/p&gt;
&lt;p&gt;It looks like, for a particular cache size (one column of the graph), the randomized algorithms do better when miss rates are relatively high and worse when miss rates are relatively low, so, if anything, they're disadvantaged when we just look at the geometric mean -- if we were to take the arithmetic mean, the result would be dominated by the larger results, where 2 random choices and plain old random do relatively well.&lt;/p&gt;
&lt;p&gt;From what we've seen of the mean ratios, 2-random looks fine for large caches, and from what we've seen of the distribution of the results, that's despite 2-random being penalized by the mean ratio metric, which makes it seem pretty good for large caches.&lt;/p&gt;
&lt;p&gt;However, it's common to implement pseudo-LRU policies because LRU can be too expensive to be workable. Since 2-random requires having at least as much information as LRU, let's take a look at what happens we use pseudo 2-random (approximately 80% accurate), and pseudo 3-random (a two-level tournament, each level of which is approximately 80% accurate).&lt;/p&gt;
&lt;p&gt;Since random and FIFO are clearly not good replacement policies, I'll leave them out of the following graphs. Also, since the results were similar in the single cache as well as multi-level cache case, we can just look at the results from the more realistic multi-level cache case.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-mean-ratios-l3-pseudo.png&quot; alt=&quot;L3 cache miss ratios for cache sizes between 512K and 16M&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Since pseudo 2-random acts like random 20% of the time and 2-random 80% of the time, we might expect it to fall somewhere between 2-random and random, which is exactly what happens. A simple tweak to try to improve pseudo 2-random is to try pseudo 3-random (evict the least recently used of 3 random choices). While that's still not quite as good as true 2-random, it's pretty close, and it's still better than LRU (and pseudo LRU) for caches larger than 1M.&lt;/p&gt;
&lt;p&gt;The one big variable we haven't explored is the set associativity. To see how LRU compares with 2-random across different cache sizes let's look at the LRU:2-random miss ratio (higher/red means LRU is better, lower/green means 2-random is better).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danluu.com/images/2choices-eviction/sweep-sizes-assocs-mean-ratios.png&quot; alt=&quot;Cache miss ratios for cache sizes between 64K and 16M with associativities between and 64&quot;/&gt;&lt;/p&gt;
&lt;p&gt;On average, increasing associativity increases the difference between the two policies. As before, LRU is better for small caches and 2-random is better for large caches. Associativities of 1 and 2 aren't shown because they should be identical for both algorithms.&lt;/p&gt;
&lt;p&gt;There's still a combinatorial explosion of possibilities we haven't tried yet. One thing to do is to try different eviction policies at different cache levels (LRU for L1 and L2 with 2-random for L3 seems promising). Another thing to do is to try this for different types of caches. I happened to choose CPU caches because it's easy to find simulators and benchmark traces, but in today's “put a cache on it” world, there are a lot of other places 2-random can be applied.&lt;/p&gt;
&lt;p&gt;For any comp arch folks, from this data, I suspect that 2-random doesn't keep up with adaptive policies like DIP (although it might -- it's in the right ballpark, but it was characterized on a different workload using a different simulator, so it's not 100% clear). However, A pseudo 2-random policy can be implemented that barely uses more resources than pseudo-LRU policies, which makes this very cheap compared to DIP. Also, we can see that pseudo 3-random is substantially better than pseudo 2-random, which indicates that k-random is probably an improvement over 2-random for the k. Some k-random policy might be an improvement over DIP.&lt;/p&gt;
&lt;p&gt;So we've seen that this works, but why would anyone think to do this in the first place? &lt;a href=&quot;http://www.eecs.harvard.edu/~michaelm/postscripts/handbook2001.pdf&quot;&gt;The Power of Two Random Choices: A Survey of Techniques and Results by Mitzenmacher, Richa, and Sitaraman&lt;/a&gt; has a great explanation. The mathematical intuition is that if we (randomly) throw n balls into n bins, the maximum number of balls in any bin is &lt;code&gt;O(log n / log log n)&lt;/code&gt; with high probability, which is pretty much just &lt;code&gt;O(log n)&lt;/code&gt;. But if (instead of choosing randomly) we choose the least loaded of k random bins, the maximum is &lt;code&gt;O(log log n / log k)&lt;/code&gt; with high probability, i.e., even with two random choices, it's basically &lt;code&gt;O(log log n)&lt;/code&gt; and each additional choice only reduces the load by a constant factor.&lt;/p&gt;
&lt;p&gt;This turns out to have all sorts of applications; things like &lt;a href=&quot;http://brooker.co.za/blog/2012/01/17/two-random.html&quot;&gt;load balancing&lt;/a&gt; and hash distribution are natural fits for the balls and bins model. There are also a lot of applications that aren't obviously analogous to the balls and bins model, like &lt;a href=&quot;http://citeseerx.ist.psu.edu/showciting?cid=1042246&quot;&gt;circuit routing&lt;/a&gt; and &lt;a href=&quot;http://www.math.cmu.edu/math/mathcolloquium.php?SeminarSelect=522&quot;&gt;Erdős–Rényi&lt;/a&gt; graphs.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;Thanks to Jan Elder and Mark Hill for making dinero IV freely available, to Aleksandar Milenkovic for providing SPEC CPU traces, and to Carl Vogel, James Porter, Peter Fraenkel, Katerina Barone-Adesi, Jesse Luehrs, Lea Albaugh, and Kevin Lynagh for advice on plots and plotting packages, to Mindy Preston for finding a typo in the acknowledgments, to Lindsey Kuper for pointing out some terminology stuff, to Tom Wenisch for suggesting that I check out CMP$im for future work, and to Leah Hanson for extensive comments on the entire post.&lt;/small&gt;&lt;/p&gt;



&lt;/body&gt;</description>
<pubDate>Mon, 18 Feb 2019 04:26:44 +0000</pubDate>
<dc:creator>zwliew</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://danluu.com/2choices-eviction/</dc:identifier>
</item>
<item>
<title>Muscle memory discovery ends &amp;#039;use it or lose it&amp;#039; dogma</title>
<link>https://www.sciencedaily.com/releases/2019/01/190125084106.htm</link>
<guid isPermaLink="true" >https://www.sciencedaily.com/releases/2019/01/190125084106.htm</guid>
<description>&lt;p id=&quot;first&quot;&gt;The old adage &quot;use it or lose it&quot; tells us: if you stop using your muscles, they'll shrink. Until recently, scientists thought this meant that nuclei -- the cell control centers that build and maintain muscle fibers -- are also lost to sloth.&lt;/p&gt;&lt;div id=&quot;text&quot; readability=&quot;125&quot;&gt;
&lt;p&gt;But according to a review published in &lt;em&gt;Frontiers in Physiology&lt;/em&gt;, modern lab techniques now allow us to see that nuclei gained during training persist even when muscle cells shrink due to disuse or start to break down. These residual 'myonuclei' allow more and faster growth when muscles are retrained -- suggesting that we can &quot;bank&quot; muscle growth potential in our teens to prevent frailty in old age. It also suggests that athletes who cheat and grow their muscles with steroids may go undetected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Our biggest cells are in our muscles, and they're all fused together&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Syncytium. Sounds like a neo-noir comic book series. It's actually a special type of tissue in your body, where cells are fused together extra close -- so close, that they behave a like a giant single cell.&lt;/p&gt;
&lt;p&gt;&quot;Heart, bone and even placenta are built on these networks of cells,&quot; says Lawrence Schwartz, Professor of Biology at the University of Massachusetts. &quot;But by far our biggest cells -- and biggest syncytia -- are our muscles.&quot; Like the Sin City series, it appeared at first that everything was black and white with syncytia.&lt;/p&gt;
&lt;p&gt;&quot;Muscle growth is accompanied by the addition of new nuclei from stem cells to help meet the enhanced synthetic demands of larger muscle cells,&quot; explains Schwartz. &quot;This led to the assumption that a given nucleus controls a defined volume of cytoplasm -- so that when a muscle shrinks or 'atrophies' due to disuse or disease, the number of myonuclei decreases.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A muscle can gain nuclei, but never loses them&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This assumption long seemed valid, with many researchers reporting the presence of disintegrating nuclei in muscle tissue during atrophy induced by inactivity, injury or paralysis. But modern cell-type-specific dyes and genetic markers have shown that the dying nuclei other researchers had detected were in fact inflammatory and other cells recruited to atrophic muscle.&lt;/p&gt;
&lt;p&gt;The new evidence paints a very different picture of muscle syncytium.&lt;/p&gt;
&lt;p&gt;&quot;Two independent studies -- one in rodents and the other in insects -- have demonstrated that nuclei are not lost from atrophying muscle fibers, and even remain after muscle death has been initiated.&quot;&lt;/p&gt;
&lt;p&gt;This suggest that once a nucleus has been acquired by a muscle fiber, it belongs to the muscle syncytium -- probably for life. But Schwartz, for one, is unsurprised by the new findings.&lt;/p&gt;
&lt;p&gt;&quot;Muscles get damaged during extreme exercise, and often have to weather changes in food availability and other environmental factors that lead to atrophy. They wouldn't last very long giving up their nuclei in response to every one of these insults.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&quot;Use it or lose it -- until you use it again&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since myonuclei are the synthetic engine of muscle fibers, retaining them should enable muscle size and strength to recover more quickly after one of these insults, and help to explain the phenomenon of 'muscle memory'.&lt;/p&gt;
&lt;p&gt;&quot;It is well documented in the field of exercise physiology that it is far easier to reacquire a certain level of muscle fitness through exercise than it was to achieve it the first place, even if there has been a long intervening period of detraining. In other word, the phrase &quot;use it or lose it&quot; is might be more accurately articulated as 'use it or lose it, until you work at it again'.&quot;&lt;/p&gt;
&lt;p&gt;As such, the findings have important implications beyond understanding muscle biology.&lt;/p&gt;
&lt;p&gt;&quot;Informing public health policy, the discovery that myonuclei are retained indefinitely emphasizes the importance of exercise in early life. During adolescence muscle growth is enhanced by hormones, nutrition and a robust pool of stem cells, making it an ideal period for individuals to &quot;bank&quot; myonuclei that could be drawn upon to remain active in old age.&quot;&lt;/p&gt;
&lt;p&gt;The findings also support frequent drugs testing for competitive athletes, with permanent bans for proven steroid cheats since they will benefit from the steroids long after their use has ended.&lt;/p&gt;
&lt;p&gt;&quot;Anabolic steroids produce a permanent increase in users' capacity for muscle development. In keeping with this, studies show that mice given testosterone acquire new myonuclei that persist long after the steroid use ends.&quot;&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;story_source&quot; readability=&quot;29&quot;&gt;
&lt;p&gt;&lt;strong&gt;Story Source:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Materials provided by &lt;a href=&quot;http://www.frontiersin.org&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Frontiers&lt;/strong&gt;&lt;/a&gt;. &lt;em&gt;Note: Content may be edited for style and length.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sun, 17 Feb 2019 23:14:17 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:title>Muscle memory discovery ends 'use it or lose it' dogma</og:title>
<og:type>article</og:type>
<og:url>https://www.sciencedaily.com/releases/2019/01/190125084106.htm</og:url>
<og:description>Exercise physiologists agree: muscle memory is real. But how are these 'memories' stored? A review has a simple answer: nuclei gained during training persist even when muscle cells shrink due to disuse or start to break down. This means we can 'bank' nuclei in our youth to prevent frailty in old age -- and makes steroid use in competitive sport a perfect but irredeemable crime.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sciencedaily.com/releases/2019/01/190125084106.htm</dc:identifier>
</item>
<item>
<title>LD_PRELOAD: The Hero We Need and Deserve</title>
<link>https://blog.jessfraz.com/post/ld_preload/</link>
<guid isPermaLink="true" >https://blog.jessfraz.com/post/ld_preload/</guid>
<description>&lt;h2&gt;LD_PRELOAD: The Hero We Need and Deserve&lt;/h2&gt;&lt;p&gt;Sunday, February 17, 2019&lt;/p&gt;
&lt;p&gt;I’m a huge, HUGE, fan of &lt;code&gt;LD_PRELOAD&lt;/code&gt; let me tell you… oh wait it’s my blog so I’m going to. Where do I begin…&lt;/p&gt;
&lt;p&gt;About three years ago, I wrote a blog post about the &lt;a href=&quot;https://blog.jessfraz.com/post/top-10-favorite-ldflags/&quot;&gt;10 &lt;code&gt;LDFLAGS&lt;/code&gt; I love&lt;/a&gt;. After writing the post, I realized I should have made the number odd because I think that is part of BuzzFeed’s “click algorithm.” But more seriously, I realized just how many people on the internet you can upset when you don’t include &lt;code&gt;LD_PRELOAD&lt;/code&gt; in your favorite &lt;code&gt;LDFLAGS&lt;/code&gt; post. I am going to take the time right now to make one thing very clear, VERY CLEAR, listen closely: &lt;code&gt;LD_PRELOAD&lt;/code&gt; IS NOT A FLAG. It is an environment variable. Wake up sheeple! Phew!&lt;/p&gt;
&lt;p&gt;Now that’s out of the way, we can continue… I love &lt;code&gt;LD_PRELOAD&lt;/code&gt;. I love it so much I am devoting this entire blog post to professing my undying love for it. So here we go…&lt;/p&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;p&gt;For those who don’t know what &lt;code&gt;LD_PRELOAD&lt;/code&gt; is: &lt;a href=&quot;https://xkcd.com/1053/&quot;&gt;TODAY IS YOUR LUCKY DAY!&lt;/a&gt; &lt;code&gt;LD_PRELOAD&lt;/code&gt; allows you to override symbols in any library by specifying your new function in a shared object.&lt;/p&gt;
&lt;p&gt;When you run &lt;code&gt;LD_PRELOAD=/path/to/my/free.so /bin/mybinary&lt;/code&gt;, &lt;code&gt;/path/to/my/free.so&lt;/code&gt; is loaded &lt;em&gt;before&lt;/em&gt; any other library, including libc. When &lt;code&gt;mybinary&lt;/code&gt; is executed, it uses your custom function for &lt;code&gt;free&lt;/code&gt;. PRETTY FREAKING AWESOME RIGHT!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.jessfraz.com/img/kronk.gif&quot; alt=&quot;kronk&quot;/&gt;&lt;/p&gt;
&lt;p&gt;FEEL THE POWER! Okay, so moving on…&lt;/p&gt;
&lt;h2 id=&quot;fun-times-on-the-internet&quot;&gt;Fun Times on the Internet&lt;/h2&gt;
&lt;p&gt;One night, I’m just hanging around in my apartment, laying on my couch, and I think “oh I’m going to ask the Internet what they’ve done with &lt;code&gt;LD_PRELOAD&lt;/code&gt;.” This is how most of my tweets start for what it’s worth. So I asked…&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;6.3879781420765&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;yo internet nerds, tell me all the ways you've done dirty things with LD_PRELOAD…. I need them…. for… science…&lt;/p&gt;
— jessie frazelle 👩🏼‍🚀 (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/1087468414707343362?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;This tweet blew up in THE BEST WAY! I got some really cool responses I will highlight below.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;3.030303030303&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Not mine but my favorite: &lt;a href=&quot;https://t.co/zljcn70pmh&quot;&gt;https://t.co/zljcn70pmh&lt;/a&gt;&lt;/p&gt;
— ダデイさま (@leifwalsh) &lt;a href=&quot;https://twitter.com/leifwalsh/status/1087496833058914304?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;6.3959390862944&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;$ FORCE_PID=42 LD_PRELOAD=./getpid.so bash -c 'echo $$'&lt;br/&gt;42&lt;/p&gt;&lt;p&gt;For forcing specific bad ssh key generation when the RNG was busted…&lt;/p&gt;
— 𝙺𝚎𝚎𝚜 𝙲𝚘𝚘𝚔 (@kees_cook) &lt;a href=&quot;https://twitter.com/kees_cook/status/1094391729422123008?ref_src=twsrc%5Etfw&quot;&gt;February 10, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;4.8695652173913&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;i didn't use this but dropbox recently stopped working on non-ext4 filesystems and there's this LD_PRELOAD hack to make it work anyway &lt;a href=&quot;https://t.co/DqRL12FNMk&quot;&gt;https://t.co/DqRL12FNMk&lt;/a&gt;&lt;/p&gt;
— 🔎Julia Evans🔍 (@b0rk) &lt;a href=&quot;https://twitter.com/b0rk/status/1087478518534098945?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;3.3197969543147&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Intercept readline calls to add undo to any interpreter that uses readline&lt;a href=&quot;https://t.co/M44lDMaeFy&quot;&gt;https://t.co/M44lDMaeFy&lt;/a&gt;&lt;a href=&quot;https://t.co/aoeldkK4X6&quot;&gt;https://t.co/aoeldkK4X6&lt;/a&gt; &lt;a href=&quot;https://t.co/w84O715eQG&quot;&gt;pic.twitter.com/w84O715eQG&lt;/a&gt;&lt;/p&gt;
— Thomas Ballinger (@ballingt) &lt;a href=&quot;https://twitter.com/ballingt/status/1087473790227951616?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;4.741935483871&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We actually mention this in an academic paper! &lt;a href=&quot;https://t.co/qg5ac6vXx7&quot;&gt;https://t.co/qg5ac6vXx7&lt;/a&gt; We used LD_PRELOAD to interpose on the OnStar software modem audio interface.&lt;/p&gt;
— Karl (@supersat) &lt;a href=&quot;https://twitter.com/supersat/status/1087472112611282945?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;6.0353356890459&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I wrote a silly hack that let you mount an app’s objc runtime as a filesystem so you could easily browse the class hierarchy. It could be inserted via dyld. Here is a screenshot of the Finder browsing the runtime. &lt;a href=&quot;https://t.co/zyYxSsGaoS&quot;&gt;https://t.co/zyYxSsGaoS&lt;/a&gt;&lt;/p&gt;
— Bill Bumgarner (@bbum) &lt;a href=&quot;https://twitter.com/bbum/status/1087556645473796096?ref_src=twsrc%5Etfw&quot;&gt;January 22, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;6.4285714285714&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;enabling rapid-fire railguns in quake3 rocket arena by hooking gettimeofday() via LD_PRELOAD, enable/disable by hooking strstr() and using console commands&lt;/p&gt;
— HD Moore (@hdmoore) &lt;a href=&quot;https://twitter.com/hdmoore/status/1087470884896628737?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;4.7351351351351&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I made a thing to disable SSL certificate verification in a bunch of popular applications/libraries 😈&lt;a href=&quot;https://t.co/jMWQtbl0Kb&quot;&gt;https://t.co/jMWQtbl0Kb&lt;/a&gt;&lt;/p&gt;
— Dаvіd Вucһаnаn (@David3141593) &lt;a href=&quot;https://twitter.com/David3141593/status/1087469585798959105?ref_src=twsrc%5Etfw&quot;&gt;January 21, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;This isn’t all of them but isn’t the internet utterly awesome! You can poke through the thread more and find ones you love as well. But let’s move on to some mad science…&lt;/p&gt;
&lt;h2 id=&quot;science&quot;&gt;SCIENCE&lt;/h2&gt;
&lt;p&gt;No, not the &lt;a href=&quot;https://en.wikipedia.org/wiki/S.C.I.E.N.C.E.&quot;&gt;Incubus album&lt;/a&gt;… but my science experiment that I did with &lt;code&gt;LD_PRELOAD&lt;/code&gt;. My friend, &lt;a href=&quot;https://twitter.com/grepory&quot;&gt;@grepory&lt;/a&gt;, and I came up with this absolutely insane idea for “kernelless”. Yeah, it’s a joke making fun of all the other “-less”s. But ours was special, m’kay. He even made a dope website for it, &lt;a href=&quot;http://kernelless.cloud/&quot;&gt;kernelless.cloud&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So the way we were going to implement this in a mad science way would be as “Cloud Native Syscalls.” Let me tell you about the “Cloud Native Syscalls”…&lt;/p&gt;
&lt;h2 id=&quot;cloud-native-syscalls&quot;&gt;Cloud Native Syscalls&lt;/h2&gt;
&lt;p&gt;The first part of the “Cloud Native Syscalls” architecture consists of a daemon on a cloud VM which has a network endpoint accepting incoming syscalls and their arguments. The daemon then performs these syscalls, almost in a code execution as a service type way.&lt;/p&gt;
&lt;p&gt;To use “Cloud Native Syscalls”, you compile your binary with the library as follows: &lt;code&gt;LD_PRELOAD=/path/to/my/cloudnativesyscalls.so /bin/ls&lt;/code&gt;. This ensures that all your syscalls when you run &lt;code&gt;ls&lt;/code&gt; on &lt;em&gt;your host&lt;/em&gt; are actually performed in the cloud and sent to the daemon described above.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.jessfraz.com/img/nuts.gif&quot; alt=&quot;nuts&quot;/&gt;&lt;/p&gt;
&lt;p&gt;F’king nuts right… I know. We are working on our A-round don’t worry. It’s truly revolutionary.&lt;/p&gt;
&lt;p&gt;Anyways, that was our little science experiment. Hope you liked it, or at least enjoyed all the other people’s fun hacks. :) Keep &lt;code&gt;LD_PRELOAD&lt;/code&gt;ing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.jessfraz.com/img/everyday-im-ld-preloading.jpg&quot; alt=&quot;everyday-im-ld-preloading&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 22:54:48 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:title>LD_PRELOAD: The Hero We Need and Deserve</og:title>
<og:url>https://blog.jessfraz.com/post/ld_preload/</og:url>
<og:image>/img/share.png</og:image>
<og:description>A summary of my undying love for LD_PRELOAD.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jessfraz.com/post/ld_preload/</dc:identifier>
</item>
<item>
<title>WireGuard for MacOS</title>
<link>https://lists.zx2c4.com/pipermail/wireguard/2019-February/003853.html</link>
<guid isPermaLink="true" >https://lists.zx2c4.com/pipermail/wireguard/2019-February/003853.html</guid>
<description>&lt;head&gt;&lt;title&gt;WireGuard for macOS&lt;/title&gt;&lt;link rel=&quot;Index&quot; href=&quot;index.html&quot; /&gt;&lt;link rel=&quot;made&quot; href=&quot;mailto:wireguard%40lists.zx2c4.com?Subject=Re%3A%20WireGuard%20for%20macOS&amp;amp;In-Reply-To=%3CCAHmME9qjTJbWYVr9cToXpfnshGkppcqVS5%3DiVzqsrjS%2Bv_aF%2Bw%40mail.gmail.com%3E&quot; /&gt;&lt;meta name=&quot;robots&quot; content=&quot;index,nofollow&quot; /&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;link rel=&quot;Previous&quot; href=&quot;003872.html&quot; /&gt;&lt;link rel=&quot;Next&quot; href=&quot;003881.html&quot; /&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#FFFFFF&quot; id=&quot;readabilityBody&quot; readability=&quot;44.785804816223&quot;&gt;

&lt;p&gt;&lt;strong&gt;Jason A. Donenfeld&lt;/strong&gt; &lt;a href=&quot;mailto:wireguard%40lists.zx2c4.com?Subject=Re%3A%20WireGuard%20for%20macOS&amp;amp;In-Reply-To=%3CCAHmME9qjTJbWYVr9cToXpfnshGkppcqVS5%3DiVzqsrjS%2Bv_aF%2Bw%40mail.gmail.com%3E&quot; title=&quot;WireGuard for macOS&quot;&gt;Jason at zx2c4.com&lt;/a&gt;&lt;br /&gt;&lt;em&gt;Sat Feb 16 02:26:20 CET 2019&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;pre&gt;
Hey everyone,

After many months of hard work, Roopesh, Eric, and I are pleased to
announce an initial version of WireGuard for macOS:

&lt;a href=&quot;https://itunes.apple.com/us/app/wireguard/id1451685025?ls=1&amp;amp;mt=12&quot;&gt;https://itunes.apple.com/us/app/wireguard/id1451685025?ls=1&amp;amp;mt=12&lt;/a&gt;

This is built from the same code base as our existing iOS app and
makes use of Apple's Network Extension API to provide native
integration into the operating system's networking stack. The
application lives in the status bar, and after importing a
configuration, the ordinary System Preferences networking item may
also be used to control each tunnel. Because it uses these deep
integration APIs, we're only allowed to distribute the application
using the macOS App Store (whose rejections, appeals, and eventual
acceptance made for quite the stressful saga over the last week and a
half). Compared to the current CLI integration, we expect the
WireGuard experience using this app to be excellent.

For curious folks without a Mac (or without the patience to cajole KVM
into booting macOS), I've assembled a few screenshots:
&lt;a href=&quot;https://data.zx2c4.com/wireguard-for-macos-screenshots-february-2019/&quot;&gt;https://data.zx2c4.com/wireguard-for-macos-screenshots-february-2019/&lt;/a&gt;

This is new software, and there will certainly be problems. Don't
hesitate to email &lt;a href=&quot;https://lists.zx2c4.com/mailman/listinfo/wireguard&quot;&gt;team at wireguard.com&lt;/a&gt; directly with bugs as you
encounter them.

Enjoy!

Regards,
Jason

PS: Because people will inevitably ask: yes, a Windows client is on
its way, and it will have a very similar interface to this macOS one.
We're taking the long and careful route, writing a new TUN driver for
Windows 7+ called &quot;Wintun&quot; that we expect to be safer and faster than
the current popular OpenVPN TUN driver, and also suitable for all
projects, not just for WireGuard. We already have packets flowing and
things generally work well, but polish will require a bit of patience.
If you'd like to help and have an appetite for NDIS drivers, Win32 GUI
programming, or Go, please do get in touch.
&lt;/pre&gt;
&lt;hr /&gt;&lt;hr /&gt;&lt;p&gt;&lt;a href=&quot;https://lists.zx2c4.com/mailman/listinfo/wireguard&quot;&gt;More information about the WireGuard mailing list&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 17 Feb 2019 20:46:52 +0000</pubDate>
<dc:creator>helper</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lists.zx2c4.com/pipermail/wireguard/2019-February/003853.html</dc:identifier>
</item>
<item>
<title>On Being an Engineering Manager</title>
<link>https://nickmchardy.com/2019/02/on-being-an-engineering-manager.html</link>
<guid isPermaLink="true" >https://nickmchardy.com/2019/02/on-being-an-engineering-manager.html</guid>
<description>&lt;p&gt;I’ve been acting in the role of Engineering Manager for 6 months now, so it’s a good time to review how things are going. Some of the points below could be obvious to some and not everything will work in all situations, but I hope I can accurately describe my perspective.&lt;/p&gt;
&lt;p&gt;A little bit of background for you, first, to set the scene. The organisation I work for had endured several restructures over the past few years, but the most recent one was probably the most impactful for me. For the first time, I had the option of acting in a people management role as an Engineering Manager.&lt;/p&gt;
&lt;p&gt;Previously, most of my roles for the past few years at this organisation and prior have revolved around solution designer or architect. I was used to communicating with many different stakeholder groups and providing technical leadership, even if I didn’t realise it. The area where I’ve worked the past 4 years has been tasked with developing and supporting all kinds of online and digital platforms and products, so the core function of our division hasn’t really changed significantly. We’ve weathered a few name changes along the way, of course.&lt;/p&gt;
&lt;p&gt;One of the key elements of the most recent restructure was to remove the need to fund and run initiatives as &lt;em&gt;projects&lt;/em&gt;, and instead, run as long-lived &lt;em&gt;products&lt;/em&gt;. This strategy is still in the process of coming to fruition (I think I heard some people say we’re still in the ‘storming’ phase, which I think is accurate). Read more about running teams as products in a &lt;a href=&quot;https://nickmchardy.com/2018/12/doing-products-instead-of-projects.html&quot;&gt;previous blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To keep things simple, a new set of 6 Engineering Managers was appointed, of which half were acting. I was one of the 3 people to gain an acting position, which is definitely a promotion from my previous roles. I thought I’d give the role a go, especially when combined with decent support from senior management as I would be learning new skills.&lt;/p&gt;
&lt;p&gt;In my organisaton, an Engineering Manager is someone who manages an engineering team, comprised of developers, quality assurance (testers), build &amp;amp; operations and solution designers.&lt;/p&gt;
&lt;p&gt;Some of the reasons I agreed to take up the role was:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I’d never experienced people management and would like to pick up a new set of skills&lt;/li&gt;
&lt;li&gt;I knew pretty much everyone in the division, so I was in a reasonable position to ‘get things done’ with the support and respect of my peers&lt;/li&gt;
&lt;li&gt;It’s an &lt;em&gt;acting&lt;/em&gt; position, so I wouldn’t be stuck in it if I didn’t like it (I worked to define my substantive position, in case I wasn’t successful in becoming an officially appointed Engineering Manager)&lt;/li&gt;
&lt;li&gt;I’d be managing staff who look after 4 key platform areas: Analytics, Search, Identity Management and Content Recommendations&lt;/li&gt;
&lt;li&gt;The 4 platforms I was already intimately across since I’d either built it, designed it or procured it&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The Engineering Manager positions were interesting because we have a reasonable number of engineers, but few &lt;em&gt;managers&lt;/em&gt;. So, I would pick up 13 direct reports (which is a lot for a newbie!) and others would have up to 35 direct reports. Looking at the numbers alone, managing 13 people was a bit daunting, but in reality not everyone is a full-time employee. I have a mix of full-time, fixed-term contract and day-rate contract. Each style of employment has a differing requirement, from performance management and development plans, to contract renewal processes, and finally approving timesheeting.&lt;/p&gt;
&lt;p&gt;Some of the new processes which I had never been in before included:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Approving leave, travel and expense claims (to a limit)&lt;/li&gt;
&lt;li&gt;Performance management, job plans, individual development plans and appraisals&lt;/li&gt;
&lt;li&gt;1-on-1 meetings&lt;/li&gt;
&lt;li&gt;Timesheeting&lt;/li&gt;
&lt;li&gt;Budgeting&lt;/li&gt;
&lt;li&gt;Hiring&lt;/li&gt;
&lt;li&gt;… and sometimes receiving bad news when people decide to move on (not to give anyone ideas, of course!)&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;first-blood-my-poor-calendar&quot;&gt;First blood: my poor calendar&lt;/h2&gt;
&lt;p&gt;My role has always been dominated by an &lt;em&gt;incredible&lt;/em&gt; calendar, which I have &lt;a href=&quot;https://nickmchardy.com/2018/08/why-i-openly-share-my-calendar-across-the-whole-org-and-you-should-too.html&quot;&gt;written about&lt;/a&gt; before also. I say incredible, but really it’s often 7 hours of meetings a day. I do say “at least you get paid to be in meetings” but sometimes it can be too much. There’s simply no time between meetings to achieve something to talk about in the next meeting. I have a habit of being double and triple booked, even with an open calendar.&lt;/p&gt;
&lt;p&gt;Despite my calendar already being so packed, I decided that one thing I wanted to do was proper 1-on-1’s with each member of my team. This means running them every fortnight, for up to an hour, where I would try to listen to my team more than me doing the talking. To make this time more valuable, I have been taking notes in a diary, with an entry for each 1-on-1 session, with clear actions in a page that’s shared with the individual. One reason is that I can’t possibly remember everything, but also as I’ve only been ‘acting’, I could use it as a source to handover my team to someone else, should I need it. Also, with my team member’s approval of this! Nothing super confidential is written in the page, because others &lt;em&gt;may&lt;/em&gt; have admin access privileges and thus can read it, so I do exercise caution for this approach.&lt;/p&gt;
&lt;p&gt;I’d be booking 13 x 1 hour sessions a fortnight, plus several daily standups, plus 2 x weekly 1 hour management meetings. This basically halves the amount of time you have to spend on anything else. Yowch!&lt;/p&gt;
&lt;p&gt;Sometimes you can be a bit smarter about 1-on-1s:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You don’t need to use the full hour if your team member doesn’t need it&lt;/li&gt;
&lt;li&gt;If things come up or if the recurring meeting falls on a public holiday, you should always reschedule and at least give the option to be available&lt;/li&gt;
&lt;li&gt;You can go for a walk. Yes! Outside! Be creative, it doesn’t always have to be a talk-fest in a meeting room (I remember going to pick up a package from the post office, chatting to one of my team members)&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;what-i-learnt&quot;&gt;What I learnt&lt;/h2&gt;
&lt;p&gt;What I quickly discovered was that I really enjoy the technical aspects of my previous roles. I still enjoy dabbling in a bit of code here and there, just to stay sharp. It’s one of my strategies to make sure I still know what I’m talking about (or at least I try!). That’s also one of the reasons why, outside of my real job, I have &lt;a href=&quot;https://www.purpletoaster.com&quot;&gt;other projects&lt;/a&gt; on the go.&lt;/p&gt;
&lt;p&gt;The way the Engineering Manager position is described is a pure people management role. It’s all about developing a great engineering team, without having to do any of the technical work yourself. This poses the question for many senior technical people:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;When’s the right time to give up the tools and become a people manager?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A lot of organisations have a well-defined technical track separate from a dedicated people track, which is usually split once you get to a high enough level. On the technical side, this is less defined in my organisation, however we’re still working through how this can work with roles like Lead Engineer and Principal Engineer. I think for a lot of us, making this decision is quite a tough one because often once you hit a certain level of technical mastery, outside of learning a new language or technology, it’s difficult to progress further.&lt;/p&gt;
&lt;p&gt;Being labelled a ‘&lt;em&gt;manager&lt;/em&gt;’ for the first time was also an interesting experience, which took people a while to get used to. Actually, it even took &lt;em&gt;me&lt;/em&gt; some time to get used to as well! I can’t remember any time when anyone wasn’t supportive of the new role, so that definitely made the transition easier for me.&lt;/p&gt;
&lt;p&gt;It came time to apply for the role about half-way through my time as an Engineering Manager, so with 3 months experience, I had to make a decision. Would I apply for the role? Would I have a chance in being successful?&lt;/p&gt;
&lt;h2 id=&quot;so-what-did-i-decide&quot;&gt;So what did I decide?&lt;/h2&gt;
&lt;p&gt;I went the technical route and chose &lt;strong&gt;not&lt;/strong&gt; to apply for the Engineering Manager role. But why?&lt;/p&gt;
&lt;p&gt;I had a bit of time to think about it and I can promise I didn’t just take the lazy option because I didn’t want to update my resume and apply for the job!&lt;/p&gt;
&lt;p&gt;Here’s a few reasons that had me convinced:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I had so little time for doing things like drawing diagrams (something that I actually really enjoy) or coding bits here and there&lt;/li&gt;
&lt;li&gt;I enjoyed working across multiple solutions and products and wanted to ensure this continued&lt;/li&gt;
&lt;li&gt;I have a strong depth of technical understanding, having been here for over 4 years, that it’s easy to make decisions with confidence&lt;/li&gt;
&lt;li&gt;And this is the biggest one: I actually think with my skills, the organisation is &lt;em&gt;better&lt;/em&gt; off with me as a Solution Designer/Architect. We actually really need someone to fill this role, to tie a lot of the systems together, to bring that knowledge to make sure we are technically aligned and things aren’t missed or repeated in a way which wastes resources. So I could actually ensure the Solution Architect role continued by not applying for the Engineering Manager role.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sometimes, the organisation you work for might need you to do a certain role for a strategic reason, but remember: it is your life and your career, so it has to work for &lt;em&gt;you&lt;/em&gt; as much as it has to work for the organisation. I believe I can achieve this balance with my substantive position.&lt;/p&gt;
&lt;p&gt;Helping to develop people is tough! But that doesn’t mean you shouldn’t try. Fixing problems with a system or a computer is a lot easier (at least for me) than solving people’s problems. Understanding all of the nuances and complexities of a person can be a challenge, but it’s quite rewarding when you have a motivated and performing team.&lt;/p&gt;
&lt;p&gt;If you’re given the opportunity to have a hand in managing people, by all means give it a go! You don’t really begin to comprehend what’s involved until you’ve tried. There are times when I actually find the management role to be very satisfying: when you can resolve people’s issues and you can make a real impact to someone’s career. It’s a noble role and does take great skill to be a supportive and effective leader. I’m not there yet, but maybe one day I will be.&lt;/p&gt;
&lt;h2 id=&quot;what-i-realised-about-being-technical&quot;&gt;What I realised about being ‘technical’&lt;/h2&gt;
&lt;p&gt;Being a technical person who’s been around involves more leadership than you realise. Unknowingly, I actually really enjoy aspects of leadership when it comes to achieving an outcome with a solid approach. This may include influencing people to bring them on board, as much as also learning from others all the time. Just because I’d like to focus on seemingly more technical outcomes doesn’t mean I don’t need to continue to develop soft skills on how to empathise, analyse, communicate and influence others. There’s a huge gap if you can invent the best solution given all kinds of constraints (time, people, skills, budget, performance, accessibility, legislation, policy, you name it) and you can’t get anyone else on board with your vision.&lt;/p&gt;
&lt;p&gt;I also found I enjoy working closely with engineers - to the point of me standing up for the voice of the engineer - to make sure the team members who are doing the hard work are actually valued. It’s difficult to move things forward without the engineering community. This has many dynamics to it and it’s not always about sitting down in a work scenario to review code or walk through a solution design. It could be as simple as going to lunch with the team or making time to play boardgames. Mutual respect is an important power which is often overlooked when organisational “progress” takes the focus.&lt;/p&gt;
&lt;p&gt;Some approaches which I find work for me:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I like to share the solution and talk about it being “ours” or “we came up with it” rather than saying it’s mine. This is a reflection of truth not a façade because I would involve teams along the way as the solution is defined and developed&lt;/li&gt;
&lt;li&gt;A focus on building sustainable solutions goes a long way if you’re planning on staying in an organisation for a long time: you don’t want to be leaving a scorched earth of technical debt as you jump from project to project and keeping operational teams engaged is paramount&lt;/li&gt;
&lt;li&gt;Being across many things at once comes with it’s challenges, but it means you can be more effective in decision making because you understand more context&lt;/li&gt;
&lt;li&gt;Straddling both senior management and engineering teams equally can be challenging but is rewarding because you’ll need most people on your side&lt;/li&gt;
&lt;li&gt;Being open and sharing in thought with lots of documentation (even if it’s a work in progress) helps to build integrity&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;this-brings-me-to-today&quot;&gt;This brings me to today&lt;/h2&gt;
&lt;p&gt;Right now, I’m still acting as an Engineering Manager, holding the fort until the recruitment process is completed. I’m still happy to continue in this role in an acting capacity, because I have a great team who work on some pretty cool products and platforms. I’m still looking forward to getting some more time to draw the next diagram of course!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nickmchardy.com/images/on-being-an-engineering-manager/a-diagram.png&quot; alt=&quot;Plot, Diagram, Plan, Text&quot;/&gt;&lt;/p&gt;
&lt;p&gt;(I couldn’t help myself)&lt;/p&gt;
&lt;p&gt;Inspiration for this post came from: &lt;a href=&quot;https://blog.dbsmasher.com/2019/01/28/on-being-a-principal-engineer.html&quot;&gt;https://blog.dbsmasher.com/2019/01/28/on-being-a-principal-engineer.html&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 20:27:20 +0000</pubDate>
<dc:creator>boyter</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://nickmchardy.com/2019/02/on-being-an-engineering-manager.html</dc:identifier>
</item>
<item>
<title>Flightradar24 – how it works</title>
<link>https://habr.com/en/post/440596/</link>
<guid isPermaLink="true" >https://habr.com/en/post/440596/</guid>
<description>I’m going to hazard a guess and say that everyone whose friends or family have ever flown on a plane, have used Flightradar24 — a free and convenient service for tracking flights in real time.&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/xg/eo/t-/xgeot-h18b94ucc-fiuc46iotvm.jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;But, if my friends are any indication, very few people know that the service is community-driven and is supported by a group of enthusiasts gathering and sending data. Even fewer people know that anyone can join the project — including you.&lt;/p&gt;&lt;p&gt;Let’s see how Flightradar and similar other services works.&lt;/p&gt;&lt;h2&gt;Hardware&lt;/h2&gt;&lt;br/&gt;The first question is always “where the data comes from”.&lt;p&gt;Every civilian airliner is equipped with a special device — the so-caller ADS-B (Automatic Dependent Surveillance-Broadcast) transponder, on the photo, is a box with a «1200» label on it:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/uu/oj/s8/uuojs839h2_px4ritjoebq3hpba.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;br/&gt;&lt;em&gt;(photo from Garmin)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;This transponder sends various flight telemetry — airplane type, its coordinates, destination etc, using the 1090MHz unencrypted radio frequency.&lt;/p&gt;&lt;p&gt;That’s how the signal looks:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/si/ie/vl/siievlzltcdogtaxpycoxcdvqqw.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;And this is a data structure:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/mu/ig/uj/muigujxudctclwalfdxl5tzzdam.png&quot;/&gt;&lt;/p&gt;&lt;p&gt;The signal is transmitting with a high speed 1MB/s, so it takes only 0.00012sec to transmit the data, in the speaker we can hear only a very short 'click', if we'll try to listen this. But with the proper hardware the signal is very easy to decode. All we need is an RTL-SDR receiver (that costs around $15) connected to a PC.&lt;/p&gt;&lt;p&gt;The idea is pretty clear by that point — if you have a lot of receivers and gather data from all of them, you can see this:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/x4/4n/b0/x44nb02m30-zigckoseo6lnlwam.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;And that’s not all. Some planes transmit telemetry packets without GPS coordinates. But if you receive data from a lot of planes that do broadcast their location, then you can triangulate the position of the unknown aircraft by analyzing ping delays from different receivers. The technology is called multilateration (MLAT) and you can learn more about it &lt;a href=&quot;https://www.flightradar24.com/blog/how-we-track-flights-with-mlat/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;And finally, the last question — how do this services actually receiving the data. With the equipment being pretty cheap (from $50 to downright free), anyone can send it. Flightradar is not publishing their coverage, but we can see the receivers map of another 'competitor' service — Flightaware.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/wn/pi/41/wnpi416dssxcdzkiz7cr0_owg7s.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;As we can see, some countries are covered very sparsely, so some contributions can actually make a difference.&lt;/p&gt;&lt;p&gt;Let's get started!&lt;/p&gt;&lt;h2&gt;Install&lt;/h2&gt;
&lt;br/&gt;To set it up you need:&lt;ul&gt;&lt;li&gt;Raspberry Pi2/3 with an Internet connection (starting at $20)&lt;/li&gt;
&lt;li&gt;RTL-SDR dongle (from $15)&lt;/li&gt;
&lt;li&gt;A simple antenna made from 2 wires 6.8cm each (1090MHz 1/4 wave dipole).&lt;/li&gt;
&lt;/ul&gt;&lt;br/&gt;You would want to set everything up in a place with clear view of at least part of the sky, since signals of that high of a frequency get absorbed by things like houses or trees.&lt;p&gt;I already had both the Raspberry Pi and the dongle, so I was ready right away, but Flightradar and Flightaware actually send kits &lt;strong&gt;for free&lt;/strong&gt; to users, from locations they don’t have good coverage of. Everybody can send a request &lt;a href=&quot;https://www.flightradar24.com/apply-for-receiver&quot;&gt;to Flightradar&lt;/a&gt; or &lt;a href=&quot;http://uk.flightaware.com/adsb/request&quot;&gt;to the Flightaware&lt;/a&gt;, though obviously people from remote areas have a higher chance of approval. But my personal opinion, that its better to have &lt;em&gt;own receiver&lt;/em&gt;, and to be free to do what you want, to send data to any service, you want, and so on (there are some limitations for people who got receiver for free, as example, they cannot send data from it to a competitor service). And 20-30$ is not such a big value anyway.&lt;/p&gt;&lt;p&gt;I used the RTL-SDR V3-based kit from China, which came with an antenna and a mini-stand. It cost me $27 with free shipping, for all this stuff:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/e8/_p/he/e8_pheirzkeetsraqdwqmt3ulnc.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;By the way, as another incentive to encourage people to join, Flightradar24 and Flightaware offer &lt;strong&gt;free premium accounts&lt;/strong&gt;, unlocking all of the website’s functionality (that normally costs $50 a month). So if anyone really gets a lot out of the service, installing the receiver lets you use it much cheaper.&lt;/p&gt;&lt;h2&gt;Run&lt;/h2&gt;
&lt;br/&gt;Installation is pretty easy. You just need to connect Raspberry Pi to a receiver and execute this prompt:&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;sudo bash -c &quot;$(wget -O - http://repo.feed.flightradar24.com/install_fr24_rpi.sh)&quot;&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;It will request the data necesary (coordinate, receiver type, email address) and then the software works on its own — no further action from the user needed. Once that’s done, you can set up a &lt;a href=&quot;https://www.flightradar24.com/premium/signup?account=free&quot;&gt;premium account here&lt;/a&gt; and immediately get to use premium functionality.&lt;p&gt;If you go to the Raspberry Pi’s IP address, you’ll see its status:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/co/ns/iz/consizpsres1pcdz8qqpt2inmdk.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;br/&gt;Flightradar’s account page reveals a lot more information:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/m7/zw/8w/m7zw8wq87hyuox4shue_jq1wne0.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;I live on the 6th floor of a building near the airport, so even my simple antenna mounted near the window, caught almost 1000 planes in a day. And its range seemed to be around 215 miles — again, not bad for a setup that cheap. Various setups could be found on Ebay, just search “ads-b antenna”.&lt;/p&gt;&lt;h2&gt;Alternative solutions&lt;/h2&gt;
&lt;br/&gt;Bonus for those whose attention span is long enough to reach that point. Some readers might ask — is there a way to avoid third-party services like Flightradar entirely? Of course there is — you can run the decoder on the Raspberry Pi locally. The source code is published on github (&lt;a href=&quot;https://github.com/antirez/dump1090&quot;&gt;https://github.com/antirez/dump1090&lt;/a&gt;).&lt;p&gt;All you need is to enter these 3 commands:&lt;/p&gt;&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;git clone https://github.com/antirez/dump1090.git
cd dump1090/
make&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;And then launch the decoder:&lt;pre&gt;
&lt;code class=&quot;bash&quot;&gt;./dump1090 --interactive --net&lt;/code&gt;
&lt;/pre&gt;
&lt;br/&gt;The decoder gets to work, and we see “raw data” — a list of visible planes:&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/mn/7n/2z/mn7n2zwpkfk724rpjtzsix_ndyo.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;You can also log into the Raspberry Pi with a browser and see your own, local «Flightradar». It looks something like this:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://habrastorage.org/webt/kd/2w/va/kd2wvay_hy8_sohqwiohzd9qvdc.jpeg&quot; alt=&quot;image&quot;/&gt;&lt;/p&gt;&lt;p&gt;Why would you need that? Well, just for thrills, but also Flightradar24 censors some of the data, not showing some of the planes (for example, military, government aircrafts or business jets). If you launch your own station, you see everything — even censored stuff, although your data set will be limited by your location and antenna quality, and you won’t have access to MLAT. Again, the source code mentioned above lets you create your own Flightradar, with blackjack and all the bells and whistles you would want.&lt;/p&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;br/&gt;As we can see, it’s an involving, inexpensive and rather simple experience. Just for comparison: 10 years the Airnav RadarBox receiver cost around $1000, now the RTL-SDR, that does exactly the same thing, can be had for $10.&lt;p&gt;In my case, the receiver didn’t have any practical purpose, since Flightrader’s coverage in Europe is nearly complete anyway. But those living in the wilderness can genuinely help out air travelers from all over the world, extend the coverage map and even get a premium account for your troubles.&lt;/p&gt;</description>
<pubDate>Sun, 17 Feb 2019 18:33:59 +0000</pubDate>
<dc:creator>crunchiebones</dc:creator>
<og:type>article</og:type>
<og:url>https://habr.com/en/post/440596/</og:url>
<og:title>Flightradar24 — how it works?</og:title>
<og:image>https://habrastorage.org/webt/xg/eo/t-/xgeot-h18b94ucc-fiuc46iotvm.jpeg</og:image>
<og:description>I’m going to hazard a guess and say that everyone whose friends or family have ever flown on a plane, have used Flightradar24 — a free and convenient service for...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://habr.com/en/post/440596/</dc:identifier>
</item>
<item>
<title>The Book of Secret Knowledge – A collection of lists, blogs, hacks</title>
<link>https://github.com/trimstray/the-book-of-secret-knowledge</link>
<guid isPermaLink="true" >https://github.com/trimstray/the-book-of-secret-knowledge</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge/blob/master/doc/img/the-book-of-secret-knowledge-preview.png&quot;&gt;&lt;img src=&quot;https://github.com/trimstray/the-book-of-secret-knowledge/raw/master/doc/img/the-book-of-secret-knowledge-preview.png&quot; alt=&quot;Master&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 align=&quot;center&quot;&gt;A collection of awesome lists, manuals, blogs, hacks, one-liners, cli/web tools and more.&lt;/h4&gt;
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge/tree/master&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/588410b32491be114a084c302282529d4759412a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4272616e63682d6d61737465722d677265656e2e7376673f6c6f6e6743616368653d74727565&quot; alt=&quot;Branch&quot; data-canonical-src=&quot;https://img.shields.io/badge/Branch-master-green.svg?longCache=true&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;http://www.gnu.org/licenses/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2a0dc0f70793a1424e5b66a9a95e574cae05f58c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d474e552d626c75652e7376673f6c6f6e6743616368653d74727565&quot; alt=&quot;License&quot; data-canonical-src=&quot;https://img.shields.io/badge/License-GNU-blue.svg?longCache=true&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;br/&gt;&lt;hr/&gt;&lt;h2&gt;📔  What is it?&lt;/h2&gt;
&lt;p&gt;This list is a collection of various materials that I use every day in my work. It contains a lot of useful information gathered in one piece.&lt;/p&gt;
&lt;h2&gt;🚻  For whom?&lt;/h2&gt;
&lt;p&gt;It is intended for everyone and anyone - especially for System and Network Administrators, DevOps, Pentesters or Security Researchers.&lt;/p&gt;
&lt;h2&gt;ℹ️  Contributing&lt;/h2&gt;
&lt;p&gt;If you find something which doesn't make sense, or one of these doesn't seem right, or something seems really stupid; please make a pull request or please add valid and well-reasoned opinions about your changes or comments.&lt;/p&gt;
&lt;p&gt;A few simple rules for this project:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;inviting and clear&lt;/li&gt;
&lt;li&gt;not tiring&lt;/li&gt;
&lt;li&gt;useful&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These below rules may be better:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;easy to contribute to (Markdown + HTML ...)&lt;/li&gt;
&lt;li&gt;easy to find (simple TOC, maybe it's worth extending them?)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Url marked &lt;strong&gt;*&lt;/strong&gt; is temporary unavailable. Please don't delete it without confirming that it has permanently expired.&lt;/p&gt;
&lt;p&gt;Before add pull request please see &lt;strong&gt;&lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge/blob/master/CONTRIBUTING.md&quot;&gt;this&lt;/a&gt;&lt;/strong&gt;. All &lt;strong&gt;suggestions/PR&lt;/strong&gt; are welcome!&lt;/p&gt;
&lt;h2&gt;💝  Support&lt;/h2&gt;
&lt;p&gt;If this project is useful and important for you or if you really like &lt;em&gt;the-book-of-secret-knowledge&lt;/em&gt;, you can bring me &lt;strong&gt;more positive energy&lt;/strong&gt;, give me some &lt;strong&gt;good words&lt;/strong&gt; or support my &lt;strong&gt;&lt;a href=&quot;https://www.blockchain.com/eth/address/0xfF14C70D0E112E424AA6484DBaF32Fbc55ce2Acf&quot; rel=&quot;nofollow&quot;&gt;ethereum&lt;/a&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;a href=&quot;https://www.blockchain.com/btc/address/1QLRgnhGWc8Qf8wxqmpz2NohLDjL5Bncf8&quot; rel=&quot;nofollow&quot;&gt;bitcoin&lt;/a&gt;&lt;/strong&gt; wallets maybe. Thank you!&lt;/p&gt;
&lt;h2&gt;☑️  Todo&lt;/h2&gt;
&lt;h2&gt;💢  Table of Contents&lt;/h2&gt;
&lt;p&gt;Only main chapters:&lt;/p&gt;
&lt;h2&gt;🔱  The Book of Secret Knowledge (Chapters)&lt;/h2&gt;
&lt;h4&gt;CLI Tools  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Shells&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://ohmyz.sh/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Oh My ZSH!&lt;/strong&gt;&lt;/a&gt; - the best framework for managing your Zsh configuration.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Bash-it/bash-it&quot;&gt;&lt;strong&gt;bash-it&lt;/strong&gt;&lt;/a&gt; - framework for using, developing and maintaining shell scripts and custom commands for your daily work.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish&quot;&gt;&lt;strong&gt;Oh My Fish&lt;/strong&gt;&lt;/a&gt; - the Fishshell framework.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Managers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://midnight-commander.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Midnight Commander&lt;/strong&gt;&lt;/a&gt; - visual file manager, licensed under GNU General Public License.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.gnu.org/software/screen/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;screen&lt;/strong&gt;&lt;/a&gt; - full-screen window manager that multiplexes a physical terminal.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;&lt;strong&gt;tmux&lt;/strong&gt;&lt;/a&gt; - terminal multiplexer, lets you switch easily between several programs in one terminal.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/peikk0/tmux-cssh&quot;&gt;&lt;strong&gt;tmux-cssh&lt;/strong&gt;&lt;/a&gt; - sets a comfortable and easy to use functionality, clustering and synchronizing virtual tmux-sessions.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Text editors&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://ex-vi.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;vi&lt;/strong&gt;&lt;/a&gt; - is one of the most common text editors on Unix.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.vim.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;vim&lt;/strong&gt;&lt;/a&gt; - is a highly configurable text editor.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;emacs&lt;/strong&gt;&lt;/a&gt; - an extensible, customizable, free/libre text editor - and more.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Network&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://nmap.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;nmap&lt;/strong&gt;&lt;/a&gt; - free and open source (license) utility for network discovery and security auditing.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/robertdavidgraham/masscan&quot;&gt;&lt;strong&gt;masscan&lt;/strong&gt;&lt;/a&gt; - the fastest Internet port scanner, spews SYN packets asynchronously.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/gvb84/pbscan&quot;&gt;&lt;strong&gt;pbscan&lt;/strong&gt;&lt;/a&gt; - faster and more efficient stateless SYN scanner and banner grabber.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.hping.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;hping&lt;/strong&gt;&lt;/a&gt; - command-line oriented TCP/IP packet assembler/analyzer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/traviscross/mtr&quot;&gt;&lt;strong&gt;mtr&lt;/strong&gt;&lt;/a&gt; - functionality of the 'traceroute' and 'ping' programs in a single network diagnostic tool.&lt;br/&gt;  🔸 &lt;a href=&quot;http://netcat.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;netcat&lt;/strong&gt;&lt;/a&gt; - networking utility which reads and writes data across network connections, using the TCP/IP protocol.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.tcpdump.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;tcpdump&lt;/strong&gt;&lt;/a&gt; - powerful command-line packet analyzer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.wireshark.org/docs/man-pages/tshark.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;tshark&lt;/strong&gt;&lt;/a&gt; - dump and analyze network traffic (wireshark cli).&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jpr5/ngrep&quot;&gt;&lt;strong&gt;ngrep&lt;/strong&gt;&lt;/a&gt; - is like GNU grep applied to the network layer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/google/stenographer&quot;&gt;&lt;strong&gt;stenographer&lt;/strong&gt;&lt;/a&gt; - is a packet capture solution which aims to quickly spool all packets to disk.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/tgraf/bmon&quot;&gt;&lt;strong&gt;bmon&lt;/strong&gt;&lt;/a&gt; - monitoring and debugging tool to capture networking related statistics and prepare them visually.&lt;br/&gt;  🔸 &lt;a href=&quot;http://iptraf.seul.org/2.6/manual.html#installation&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;iptraf-ng&lt;/strong&gt;&lt;/a&gt; - is a console-based network monitoring program for Linux that displays information about IP traffic.&lt;br/&gt;  🔸 &lt;a href=&quot;https://iperf.fr/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;iPerf3&lt;/strong&gt;&lt;/a&gt; - is a tool for active measurements of the maximum achievable bandwidth on IP networks.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Microsoft/Ethr&quot;&gt;&lt;strong&gt;ethr&lt;/strong&gt;&lt;/a&gt; - is a Network Performance Measurement Tool for TCP, UDP &amp;amp; HTTP.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jwbensley/Etherate&quot;&gt;&lt;strong&gt;Etherate&lt;/strong&gt;&lt;/a&gt; - is a Linux CLI based Ethernet and MPLS traffic testing tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/troglobit/nemesis&quot;&gt;&lt;strong&gt;Nemesis&lt;/strong&gt;&lt;/a&gt; - packet manipulation CLI tool; craft and inject packets of several protocols.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/packetfu/packetfu&quot;&gt;&lt;strong&gt;packetfu&lt;/strong&gt;&lt;/a&gt; - a mid-level packet manipulation library for Ruby.&lt;br/&gt;  🔸 &lt;a href=&quot;https://scapy.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Scapy&lt;/strong&gt;&lt;/a&gt; - packet manipulation library; forge, send, decode, capture packets of a wide number of protocols.&lt;br/&gt;  🔸 &lt;a href=&quot;https://aria2.github.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;aria2&lt;/strong&gt;&lt;/a&gt; - is a lightweight multi-protocol &amp;amp; multi-source command-line download utility.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Network (DNS)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/mschwager/fierce&quot;&gt;&lt;strong&gt;fierce&lt;/strong&gt;&lt;/a&gt; - a DNS reconnaissance tool for locating non-contiguous IP space.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/aboul3la/Sublist3r&quot;&gt;&lt;strong&gt;sublist3r&lt;/strong&gt;&lt;/a&gt; - fast subdomains enumeration tool for penetration testers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/OWASP/Amass&quot;&gt;&lt;strong&gt;amass&lt;/strong&gt;&lt;/a&gt; - tool obtains subdomain names by scraping data sources, crawling web archives and more.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/google/namebench&quot;&gt;&lt;strong&gt;namebench&lt;/strong&gt;&lt;/a&gt; - provides personalized DNS server recommendations based on your browsing history.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jedisct1/dnscrypt-proxy&quot;&gt;&lt;strong&gt;dnscrypt-proxy 2&lt;/strong&gt;&lt;/a&gt; - a flexible DNS proxy, with support for encrypted DNS protocols.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Network (HTTP)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://curl.haxx.se/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Curl&lt;/strong&gt;&lt;/a&gt; - command line tool and library for transferring data with URLs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://gitlab.com/davidjpeacock/kurly&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;kurly&lt;/strong&gt;&lt;/a&gt; - is an alternative to the widely popular curl program, written in Golang.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jkbrzt/httpie&quot;&gt;&lt;strong&gt;HTTPie&lt;/strong&gt;&lt;/a&gt; - a user-friendly HTTP client.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/asciimoo/wuzz&quot;&gt;&lt;strong&gt;wuzz&lt;/strong&gt;&lt;/a&gt; - interactive cli tool for HTTP inspection.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/trimstray/htrace.sh&quot;&gt;&lt;strong&gt;htrace.sh&lt;/strong&gt;&lt;/a&gt; - shell script to debugging http/https; ssllabs, mozilla observatory, testssl.sh and nmap nse support.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/reorx/httpstat&quot;&gt;&lt;strong&gt;httpstat&lt;/strong&gt;&lt;/a&gt; - visualizes curl statistics in a way of beauty and clarity.&lt;br/&gt;  🔸 &lt;a href=&quot;https://lynx.browser.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Lynx&lt;/strong&gt;&lt;/a&gt; - is a text browser for the World Wide Web.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.joedog.org/siege-home/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;siege&lt;/strong&gt;&lt;/a&gt; - is an http load testing and benchmarking utility.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/wg/wrk&quot;&gt;&lt;strong&gt;wrk&lt;/strong&gt;&lt;/a&gt; - is a modern HTTP benchmarking tool capable of generating significant load.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/codesenberg/bombardier&quot;&gt;&lt;strong&gt;bombardier&lt;/strong&gt;&lt;/a&gt; - fast cross-platform HTTP benchmarking tool written in Go.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/cmpxchg16/gobench&quot;&gt;&lt;strong&gt;gobench&lt;/strong&gt;&lt;/a&gt; - http/https load testing and benchmarking tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/OJ/gobuster&quot;&gt;&lt;strong&gt;gobuster&lt;/strong&gt;&lt;/a&gt; - free and open source directory/file &amp;amp; DNS busting tool written in Go.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ SSL/Security&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.openssl.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;openssl&lt;/strong&gt;&lt;/a&gt; - is a robust, commercial-grade, and full-featured toolkit for the TLS and SSL protocols.&lt;br/&gt;  🔸 &lt;a href=&quot;https://gnutls.org/manual/html_node/gnutls_002dcli-Invocation.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;gnutls-cli&lt;/strong&gt;&lt;/a&gt; - client program to set up a TLS connection to some other computer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/nabla-c0d3/sslyze&quot;&gt;&lt;strong&gt;sslyze&lt;/strong&gt;&lt;/a&gt; - fast and powerful SSL/TLS server scanning library.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rbsec/sslscan&quot;&gt;&lt;strong&gt;sslscan&lt;/strong&gt;&lt;/a&gt; - tests SSL/TLS enabled services to discover supported cipher suites.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/drwetter/testssl.sh&quot;&gt;&lt;strong&gt;testssl.sh&lt;/strong&gt;&lt;/a&gt; - testing TLS/SSL encryption anywhere on any port.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.tarsnap.com/spiped.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;spiped&lt;/strong&gt;&lt;/a&gt; - is a utility for creating symmetrically encrypted and authenticated pipes between socket addresses.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/certbot/certbot&quot;&gt;&lt;strong&gt;Certbot&lt;/strong&gt;&lt;/a&gt; - is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;&lt;strong&gt;mkcert&lt;/strong&gt;&lt;/a&gt; - simple zero-config tool to make locally trusted development certificates with any names you'd like.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Auditing Tools&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://cisofy.com/lynis/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Lynis&lt;/strong&gt;&lt;/a&gt; - battle-tested security tool for systems running Linux, macOS, or Unix-based operating system.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rebootuser/LinEnum&quot;&gt;&lt;strong&gt;LinEnum&lt;/strong&gt;&lt;/a&gt; - scripted Local Linux Enumeration &amp;amp; Privilege Escalation Checks.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/installation/rkhunter&quot;&gt;&lt;strong&gt;Rkhunter&lt;/strong&gt;&lt;/a&gt; - scanner tool for Linux systems that scans backdoors, rootkits and local exploits on your systems.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/hasherezade/pe-sieve&quot;&gt;&lt;strong&gt;PE-sieve&lt;/strong&gt;&lt;/a&gt; - is a light-weight tool that helps to detect malware running on the system.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ System Diagnostics/Debuggers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/strace/strace&quot;&gt;&lt;strong&gt;strace&lt;/strong&gt;&lt;/a&gt; - diagnostic, debugging and instructional userspace utility for Linux.&lt;br/&gt;  🔸 &lt;a href=&quot;http://dtrace.org/blogs/about/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DTrace&lt;/strong&gt;&lt;/a&gt; - is a performance analysis and troubleshooting tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://en.wikipedia.org/wiki/Ltrace&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ltrace&lt;/strong&gt;&lt;/a&gt; - is a library call tracer, used to trace calls made by programs to library functions.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/draios/sysdig&quot;&gt;&lt;strong&gt;sysdig&lt;/strong&gt;&lt;/a&gt; - system exploration and troubleshooting tool with first class support for containers.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.valgrind.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Valgrind&lt;/strong&gt;&lt;/a&gt; - is an instrumentation framework for building dynamic analysis tools.&lt;br/&gt;  🔸 &lt;a href=&quot;https://nicolargo.github.io/glances/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;glances&lt;/strong&gt;&lt;/a&gt; - cross-platform system monitoring tool written in Python.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/hishamhm/htop&quot;&gt;&lt;strong&gt;htop&lt;/strong&gt;&lt;/a&gt; - interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.atoptool.nl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;atop&lt;/strong&gt;&lt;/a&gt; - ASCII performance monitor. Includes statistics for CPU, memory, disk, swap, network, and processes.&lt;br/&gt;  🔸 &lt;a href=&quot;https://en.wikipedia.org/wiki/Lsof&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;lsof&lt;/strong&gt;&lt;/a&gt; - displays in its output information about files that are opened by processes.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.brendangregg.com/flamegraphs.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;FlameGraph&lt;/strong&gt;&lt;/a&gt; - stack trace visualizer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/zevv/lsofgraph&quot;&gt;&lt;strong&gt;lsofgraph&lt;/strong&gt;&lt;/a&gt; - small utility to convert Unix lsof output to a graph showing FIFO and UNIX interprocess communication.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/sharkdp/hexyl&quot;&gt;&lt;strong&gt;hexyl&lt;/strong&gt;&lt;/a&gt; - a command-line hex viewer.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Log Analyzers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/rcoh/angle-grinder&quot;&gt;&lt;strong&gt;angle-grinder&lt;/strong&gt;&lt;/a&gt; - slice and dice log files on the command line.&lt;br/&gt;  🔸 &lt;a href=&quot;https://goaccess.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;GoAccess&lt;/strong&gt;&lt;/a&gt; - real-time web log analyzer and interactive viewer that runs in a terminal.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/lebinh/ngxtop&quot;&gt;&lt;strong&gt;ngxtop&lt;/strong&gt;&lt;/a&gt; - real-time metrics for nginx server.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Databases&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/xo/usql&quot;&gt;&lt;strong&gt;usql&lt;/strong&gt;&lt;/a&gt; - universal command-line interface for SQL databases.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/dbcli/pgcli&quot;&gt;&lt;strong&gt;pgcli&lt;/strong&gt;&lt;/a&gt; - postgres CLI with autocompletion and syntax highlighting.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/dbcli/mycli&quot;&gt;&lt;strong&gt;mycli&lt;/strong&gt;&lt;/a&gt; - terminal client for MySQL with autocompletion and syntax highlighting.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ TOR&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/GouveaHeitor/nipe&quot;&gt;&lt;strong&gt;Nipe&lt;/strong&gt;&lt;/a&gt; - script to make Tor Network your default gateway.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/trimstray/multitor&quot;&gt;&lt;strong&gt;multitor&lt;/strong&gt;&lt;/a&gt; - a tool that lets you create multiple TOR instances with a load-balancing.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Other&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://inotify.aiken.cz/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;incron&lt;/strong&gt;&lt;/a&gt; - is an inode-based filesystem notification technology.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rgburke/grv&quot;&gt;&lt;strong&gt;GRV&lt;/strong&gt;&lt;/a&gt; - is a terminal based interface for viewing Git repositories.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/tldr-pages/tldr&quot;&gt;&lt;strong&gt;tldr&lt;/strong&gt;&lt;/a&gt; - simplified and community-driven man pages.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/tj/commander.js/&quot;&gt;&lt;strong&gt;commander.js&lt;/strong&gt;&lt;/a&gt; - minimal CLI creator in JavaScript.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;GUI Tools  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Terminal emulators&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/Guake/guake&quot;&gt;&lt;strong&gt;Guake&lt;/strong&gt;&lt;/a&gt; - is a dropdown terminal made for the GNOME desktop environment.&lt;br/&gt;  🔸 &lt;a href=&quot;https://gnometerminator.blogspot.com/p/introduction.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Terminator&lt;/strong&gt;&lt;/a&gt; - is based on GNOME Terminal, useful features for sysadmins and other users.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Network&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.wireshark.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Wireshark&lt;/strong&gt;&lt;/a&gt; - is the world’s foremost and widely-used network protocol analyzer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.ettercap-project.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Ettercap&lt;/strong&gt;&lt;/a&gt; - is a comprehensive network monitor tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://etherape.sourceforge.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;EtherApe&lt;/strong&gt;&lt;/a&gt; - is a graphical network monitoring solution.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Browsers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.torproject.org/projects/torbrowser.html.en&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;TOR Browser&lt;/strong&gt;&lt;/a&gt; - protect your privacy and defend yourself against network surveillance and traffic analysis.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Password Managers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://keepassxc.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;KeePassXC&lt;/strong&gt;&lt;/a&gt; - store your passwords safely and auto-type them into your everyday websites and apps.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.enpass.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Enpass&lt;/strong&gt;&lt;/a&gt; - password manager and secure wallet.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Messengers/IRC Clients&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://hexchat.github.io/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HexChat&lt;/strong&gt;&lt;/a&gt; - is an IRC client based on XChat.&lt;br/&gt;  🔸 &lt;a href=&quot;https://pidgin.im/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pidgin&lt;/strong&gt;&lt;/a&gt; - is an easy to use and free chat client used by millions.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Messengers (end-to-end encryption)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.signal.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Signal&lt;/strong&gt;&lt;/a&gt; - is an encrypted communications app.&lt;br/&gt;  🔸 &lt;a href=&quot;https://wire.com/en/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Wire&lt;/strong&gt;&lt;/a&gt; - secure messaging, file sharing, voice calls and video conferences. All protected with end-to-end encryption.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/prof7bit/TorChat&quot;&gt;&lt;strong&gt;TorChat&lt;/strong&gt;&lt;/a&gt; - decentralized anonymous instant messenger on top of Tor Hidden Services.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Text editors&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.sublimetext.com/3&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Sublime Text&lt;/strong&gt;&lt;/a&gt; - is a lightweight, cross-platform code editor known for its speed, ease of use.&lt;br/&gt;  🔸 &lt;a href=&quot;https://code.visualstudio.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt;&lt;/a&gt; - an open-source and free source code editor developed by Microsoft.&lt;br/&gt;  🔸 &lt;a href=&quot;https://atom.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Atom&lt;/strong&gt;&lt;/a&gt; - a hackable text editor for the 21st Century.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Web Tools  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Browsers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.ssllabs.com/ssltest/viewMyClient.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SSL/TLS Capabilities of Your Browser&lt;/strong&gt;&lt;/a&gt; - test your browser's SSL implementation.&lt;br/&gt;  🔸 &lt;a href=&quot;https://caniuse.com/#home&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Can I use&lt;/strong&gt;&lt;/a&gt; - provides up-to-date browser support tables for support of front-end web technologies.&lt;br/&gt;  🔸 &lt;a href=&quot;https://panopticlick.eff.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Panopticlick 3.0&lt;/strong&gt;&lt;/a&gt; - is your browser safe against tracking?&lt;br/&gt;  🔸 &lt;a href=&quot;https://privacy.net/analyzer/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Privacy Analyzer&lt;/strong&gt;&lt;/a&gt; - see what data is exposed from your browser.&lt;br/&gt;  🔸 &lt;a href=&quot;https://browserleaks.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Web Browser Security&lt;/strong&gt;&lt;/a&gt; - it's all about Web Browser fingerprinting.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.howsmyssl.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;How's My SSL?&lt;/strong&gt;&lt;/a&gt; - was originally made to help a web server developer learn what real world TLS clients were capable of.&lt;br/&gt;  🔸 &lt;a href=&quot;https://suche.org/sslClientInfo&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;sslClientInfo&lt;/strong&gt;&lt;/a&gt; - client test (incl TLSv1.3 information).&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ SSL/Security&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.ssllabs.com/ssltest/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SSL Server Test&lt;/strong&gt;&lt;/a&gt; - free online service performs a deep analysis of the configuration of any SSL web server.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dev.ssllabs.com/ssltest/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SSL Server Test (DEV)&lt;/strong&gt;&lt;/a&gt; - free online service performs a deep analysis of the configuration of any SSL web server.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.htbridge.com/ssl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ImmuniWeb® SSLScan&lt;/strong&gt;&lt;/a&gt; - test SSL/TLS (PCI DSS, HIPAA and NIST).&lt;br/&gt;  🔸 &lt;a href=&quot;https://sslanalyzer.comodoca.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;COMODO SSL Analyzer&lt;/strong&gt;&lt;/a&gt; - ssl analyzer and ssl certificate checker.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.jitbit.com/sslcheck/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SSL Check&lt;/strong&gt;&lt;/a&gt; - scan your website for non-secure content.&lt;br/&gt;  🔸 &lt;a href=&quot;https://cryptcheck.fr/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CryptCheck&lt;/strong&gt;&lt;/a&gt; - test your TLS server configuration (e.g. ciphers).&lt;br/&gt;  🔸 &lt;a href=&quot;https://urlscan.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;urlscan.io&lt;/strong&gt;&lt;/a&gt; - service to scan and analyse websites.&lt;br/&gt;  🔸 &lt;a href=&quot;https://report-uri.com/home/tools&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Report URI&lt;/strong&gt;&lt;/a&gt; - monitoring security policies like CSP and HPKP.&lt;br/&gt;  🔸 &lt;a href=&quot;https://csp-evaluator.withgoogle.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CSP Evaluator&lt;/strong&gt;&lt;/a&gt; - allows developers and security experts to check if a Content Security Policy.&lt;br/&gt;  🔸 &lt;a href=&quot;https://uselesscsp.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Useless CSP&lt;/strong&gt;&lt;/a&gt; - public list about CSP in some big players (might make them care a bit more).&lt;br/&gt;  🔸 &lt;a href=&quot;https://whynohttps.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Why No HTTPS?&lt;/strong&gt;&lt;/a&gt; - list of the world's top 100 websites by Alexa rank not automatically redirecting insecure requests.&lt;br/&gt;  🔸 &lt;a href=&quot;https://cipherli.st/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;cipherli.st&lt;/strong&gt;&lt;/a&gt; - strong ciphers for Apache, Nginx, Lighttpd and more.&lt;br/&gt;  🔸 &lt;a href=&quot;https://badssl.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;badssl.com&lt;/strong&gt;&lt;/a&gt; - memorable site for testing clients against bad SSL configs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tlsfun.de/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;tlsfun.de&lt;/strong&gt;&lt;/a&gt; - registered for various tests regarding the TLS/SSL protocol.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ccadb.org/resources&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Common CA Database&lt;/strong&gt;&lt;/a&gt; - repository of information about CAs, and their root and intermediate certificates.&lt;br/&gt;  🔸 &lt;a href=&quot;https://certstream.calidog.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CERTSTREAM&lt;/strong&gt;&lt;/a&gt; - real-time certificate transparency log update stream.&lt;br/&gt;  🔸 &lt;a href=&quot;https://crt.sh/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;crt.sh&lt;/strong&gt;&lt;/a&gt; - discovers certificates by continually monitoring all of the publicly known CT.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.hardenize.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hardenize&lt;/strong&gt;&lt;/a&gt; - deploy the security standards.&lt;br/&gt;  🔸 &lt;a href=&quot;https://cryptcheck.fr/suite/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Cipher suite compatibility&lt;/strong&gt;&lt;/a&gt; - test TLS cipher suite compatibility.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ HTTP Headers &amp;amp; Web Linters&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://securityheaders.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Security Headers&lt;/strong&gt;&lt;/a&gt; - analyse the HTTP response headers (with rating system to the results).&lt;br/&gt;  🔸 &lt;a href=&quot;https://observatory.mozilla.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Observatory by Mozilla&lt;/strong&gt;&lt;/a&gt; - set of tools to analyze your website.&lt;br/&gt;  🔸 &lt;a href=&quot;https://webhint.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;webhint&lt;/strong&gt;&lt;/a&gt; - is a linting tool that will help you with your site's accessibility, speed, security and more.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ DNS&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://viewdns.info/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ViewDNS&lt;/strong&gt;&lt;/a&gt; - one source for free DNS related tools and information.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dnslytics.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNSlytics&lt;/strong&gt;&lt;/a&gt; - online investigation tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dnsspy.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNS Spy&lt;/strong&gt;&lt;/a&gt; - monitor, validate and verify your DNS configurations.&lt;br/&gt;  🔸 &lt;a href=&quot;https://findsubdomains.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Find subdomains online&lt;/strong&gt;&lt;/a&gt; - find subdomains for security assessment penetration test.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dnsdumpster.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNSdumpster&lt;/strong&gt;&lt;/a&gt; - dns recon &amp;amp; research, find &amp;amp; lookup dns records.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dnstable.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNS Table online&lt;/strong&gt;&lt;/a&gt; - search for DNS records by domain, IP, CIDR, ISP.&lt;br/&gt;  🔸 &lt;a href=&quot;http://ptrarchive.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PTRarchive.com&lt;/strong&gt;&lt;/a&gt; - this site is responsible for the safekeeping of historical reverse DNS records.&lt;br/&gt;  🔸 &lt;a href=&quot;http://xip.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;xip.ip&lt;/strong&gt;&lt;/a&gt; - wildcard DNS for everyone.&lt;br/&gt;  🔸 &lt;a href=&quot;https://intodns.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;intoDNS&lt;/strong&gt;&lt;/a&gt; - DNS and mail server health checker.&lt;br/&gt;  🔸 &lt;a href=&quot;http://leafdns.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Leaf DNS&lt;/strong&gt;&lt;/a&gt; - comprehensive DNS tester.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ceipam.eu/en/dnslookup.php&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;dnslookup (ceipam)&lt;/strong&gt;&lt;/a&gt; - one of the best DNS propagation checker (and not only).&lt;br/&gt;  🔸 &lt;a href=&quot;https://whatsmydns.com&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;What's My DNS&lt;/strong&gt;&lt;/a&gt; - DNS propagation checking tool.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Mail&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://mxtoolbox.com/SuperTool.aspx&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;MX Toolbox&lt;/strong&gt;&lt;/a&gt; - all of your MX record, DNS, blacklist and SMTP diagnostics in one integrated tool.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.blacklistalert.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;blacklistalert&lt;/strong&gt;&lt;/a&gt; - checks to see if your domain is on a Real Time Spam Blacklist.&lt;br/&gt;  🔸 &lt;a href=&quot;http://multirbl.valli.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;MultiRBL&lt;/strong&gt;&lt;/a&gt; - complete IP check for sending Mailservers.&lt;br/&gt;  🔸 &lt;a href=&quot;http://dkimvalidator.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DKIM SPF &amp;amp; Spam Assassin Validator&lt;/strong&gt;&lt;/a&gt; - checks mail authentication and scores messages with Spam Assassin.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Encoders/Decoders and Regex testing&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.url-encode-decode.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;URL Encode/Decode&lt;/strong&gt;&lt;/a&gt; - tool from above to either encode or decode a string of text.&lt;br/&gt;  🔸 &lt;a href=&quot;https://uncoder.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Uncoder&lt;/strong&gt;&lt;/a&gt; - the online translator for search queries on log data.&lt;br/&gt;  🔸 &lt;a href=&quot;https://regex101.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Regex101&lt;/strong&gt;&lt;/a&gt; - online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript.&lt;br/&gt;  🔸 &lt;a href=&quot;https://regexr.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;RegExr&lt;/strong&gt;&lt;/a&gt; - online tool to learn, build, &amp;amp; test Regular Expressions (RegEx / RegExp).&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.regextester.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;RegEx Testing&lt;/strong&gt;&lt;/a&gt; - online regex testing tool.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.regexpal.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;RegEx Pal&lt;/strong&gt;&lt;/a&gt; - online regex testing tool + other tools.&lt;br/&gt;  🔸 &lt;a href=&quot;https://gchq.github.io/CyberChef/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CyberChef&lt;/strong&gt;&lt;/a&gt; - The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Net-tools&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://toolbar.netcraft.com/site_report&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Netcraft&lt;/strong&gt;&lt;/a&gt; - detailed report about the site, helping you to make informed choices about their integrity.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.ripe.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;RIPE NCC&lt;/strong&gt;&lt;/a&gt; - not-for-profit membership association, a Regional Internet Registry and the secretariat for the RIPE.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.robtex.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Robtex&lt;/strong&gt;&lt;/a&gt; - uses various sources to gather public information about IP numbers, domain names, host names, routes etc.&lt;br/&gt;  🔸 &lt;a href=&quot;https://securitytrails.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Security Trails&lt;/strong&gt;&lt;/a&gt; - APIs for Security Companies, Researchers and Teams.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tools.keycdn.com/curl&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Online Curl&lt;/strong&gt;&lt;/a&gt; - curl test, analyze HTTP Response Headers.&lt;br/&gt;  🔸 &lt;a href=&quot;http://ping.eu/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Ping.eu&lt;/strong&gt;&lt;/a&gt; - online Ping, Traceroute, DNS lookup, WHOIS and others.&lt;br/&gt;  🔸 &lt;a href=&quot;https://network-tools.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Network-Tools&lt;/strong&gt;&lt;/a&gt; - network tools for webmasters, IT technicians &amp;amp; geeks.&lt;br/&gt;  🔸 &lt;a href=&quot;https://riseup.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Riseup&lt;/strong&gt;&lt;/a&gt; - provides online communication tools for people and groups working on liberatory social change.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.virustotal.com/#/home/upload&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;VirusTotal&lt;/strong&gt;&lt;/a&gt; - analyze suspicious files and URLs to detect types of malware.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Privacy&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.privacytools.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;privacytools.io&lt;/strong&gt;&lt;/a&gt; - provides knowledge and tools to protect your privacy against global mass surveillance.&lt;br/&gt;  🔸 &lt;a href=&quot;https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNS Privacy Test Servers&lt;/strong&gt;&lt;/a&gt; - DNS privacy recursive servers list (with a 'no logging' policy).&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Code parsers/playgrounds&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.shellcheck.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ShellCheck&lt;/strong&gt;&lt;/a&gt; - finds bugs in your shell scripts.&lt;br/&gt;  🔸 &lt;a href=&quot;https://explainshell.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;explainshell&lt;/strong&gt;&lt;/a&gt; - get interactive help texts for shell commands.&lt;br/&gt;  🔸 &lt;a href=&quot;https://jsbin.com/?html,output&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;jsbin&lt;/strong&gt;&lt;/a&gt; - live pastebin for HTML, CSS &amp;amp; JavaScript and more.&lt;br/&gt;  🔸 &lt;a href=&quot;https://codepen.io/pen&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CodePen&lt;/strong&gt;&lt;/a&gt; - a social development environment for front-end designers and developers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://codesandbox.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CodeSandbox&lt;/strong&gt;&lt;/a&gt; - online code editor for web application development. Supports React, Vue, Angular, CxJS, Dojo, etc.&lt;br/&gt;  🔸 &lt;a href=&quot;http://sandbox.onlinephpfunctions.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PHP Sandbox&lt;/strong&gt;&lt;/a&gt; - test your PHP code with this code tester.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.repl.it/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Repl.it&lt;/strong&gt;&lt;/a&gt; - an instant IDE to learn, build, collaborate, and host all in one place.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Performance&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://gtmetrix.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;GTmetrix&lt;/strong&gt;&lt;/a&gt; - analyze your site’s speed and make it faster.&lt;br/&gt;  🔸 &lt;a href=&quot;https://performance.sucuri.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Sucuri loadtimetester&lt;/strong&gt;&lt;/a&gt; - test here the performance of any of your sites from across the globe.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tools.pingdom.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pingdom Tools&lt;/strong&gt;&lt;/a&gt; - analyze your site’s speed around the world.&lt;br/&gt;  🔸 &lt;a href=&quot;https://pingme.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PingMe.io&lt;/strong&gt;&lt;/a&gt; - run website latency tests across multiple geographic regions.&lt;br/&gt;  🔸 &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PageSpeed Insights&lt;/strong&gt;&lt;/a&gt; - analyze your site’s speed and make it faster.&lt;br/&gt;  🔸 &lt;a href=&quot;https://web.dev/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;web.dev&lt;/strong&gt;&lt;/a&gt; - helps developers like you learn and apply the web's modern capabilities to your own sites and apps.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Mass scanners (search engines)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://censys.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Censys&lt;/strong&gt;&lt;/a&gt; - platform that helps information security practitioners discover, monitor, and analyze devices.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.shodan.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Shodan&lt;/strong&gt;&lt;/a&gt; - the world's first search engine for Internet-connected devices.&lt;br/&gt;  🔸 &lt;a href=&quot;https://2000.shodan.io/#/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Shodan 2000&lt;/strong&gt;&lt;/a&gt; - do you use Shodan for everyday work? This tool looks for randomly generated data from Shodan.&lt;br/&gt;  🔸 &lt;a href=&quot;https://viz.greynoise.io/table&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;GreyNoise&lt;/strong&gt;&lt;/a&gt; - mass scanner such as Shodan and Censys.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.zoomeye.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ZoomEye&lt;/strong&gt;&lt;/a&gt; - search engine for cyberspace that lets the user find specific network components.&lt;br/&gt;  🔸 &lt;a href=&quot;https://fofa.so/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;FOFA&lt;/strong&gt;&lt;/a&gt; - is a cyberspace search engine.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.onyphe.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;onyphe&lt;/strong&gt;&lt;/a&gt; - is a search engine for open-source and cyber threat intelligence data collected.&lt;br/&gt;  🔸 &lt;a href=&quot;https://app.binaryedge.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;binaryedge&lt;/strong&gt;&lt;/a&gt; - it scan the entire internet space and create real-time threat intelligence streams and reports.&lt;br/&gt;  🔸 &lt;a href=&quot;https://hunter.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;hunter&lt;/strong&gt;&lt;/a&gt; - lets you find email addresses in seconds and connect with the people that matter for your business.&lt;br/&gt;  🔸 &lt;a href=&quot;https://wigle.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;wigle&lt;/strong&gt;&lt;/a&gt; - is a submission-based catalog of wireless networks. All the networks. Found by Everyone.&lt;br/&gt;  🔸 &lt;a href=&quot;https://publicwww.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PublicWWW&lt;/strong&gt;&lt;/a&gt; - find any alphanumeric snippet, signature or keyword in the web pages HTML, JS and CSS code.&lt;br/&gt;  🔸 &lt;a href=&quot;https://inteltechniques.com/menu.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;IntelTechniques&lt;/strong&gt;&lt;/a&gt; - this repository contains hundreds of online search utilities.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ghostproject.fr/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;GhostProject?&lt;/strong&gt;&lt;/a&gt; - search by full email address or username.&lt;br/&gt;  🔸 &lt;a href=&quot;https://buckets.grayhatwarfare.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Buckets by Grayhatwarfar&lt;/strong&gt;&lt;/a&gt; - database with public search for Open Amazon S3 Buckets and their contents.&lt;br/&gt;  🔸 &lt;a href=&quot;https://vigilante.pw/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Vigilante.pw&lt;/strong&gt;&lt;/a&gt; - the breached database directory.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.databreaches.live/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;databreaches&lt;/strong&gt;&lt;/a&gt; - was my email affected by data breach?&lt;br/&gt;  🔸 &lt;a href=&quot;https://builtwith.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;builtwith&lt;/strong&gt;&lt;/a&gt; - find out what websites are built with.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.mmnt.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Mamont's open FTP Index&lt;/strong&gt;&lt;/a&gt; - if a target has an open FTP site with accessible content it will be listed here.&lt;br/&gt;  🔸 &lt;a href=&quot;http://index-of.es/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;index-of&lt;/strong&gt;&lt;/a&gt; - contains great stuff like: security, hacking, reverse engineering, cryptography, programming etc.&lt;br/&gt;  🔸 &lt;a href=&quot;https://osintframework.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OSINT Framework&lt;/strong&gt;&lt;/a&gt; - focused on gathering information from free tools or resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://pipl.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;pipl&lt;/strong&gt;&lt;/a&gt; - is the place to find the person behind the email address, social username or phone number.&lt;br/&gt;  🔸 &lt;a href=&quot;https://abuse.ch/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;abuse.ch&lt;/strong&gt;&lt;/a&gt; - is operated by a random swiss guy fighting malware for non-profit.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Passwords&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://gotcha.pw/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Gotcha?&lt;/strong&gt;&lt;/a&gt; - list of 1.4 billion accounts circulates around the Internet.&lt;br/&gt;  🔸 &lt;a href=&quot;https://haveibeenpwned.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;have i been pwned?&lt;/strong&gt;&lt;/a&gt; - check if you have an account that has been compromised in a data breach.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ CVE/Exploits databases&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://cve.mitre.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CVE Mitre&lt;/strong&gt;&lt;/a&gt; - list of publicly known cybersecurity vulnerabilities.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.cvedetails.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CVE Details&lt;/strong&gt;&lt;/a&gt; - CVE security vulnerability advanced database.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.exploit-db.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Exploit DB&lt;/strong&gt;&lt;/a&gt; - CVE compliant archive of public exploits and corresponding vulnerable software.&lt;br/&gt;  🔸 &lt;a href=&quot;https://0day.today/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;0day.today&lt;/strong&gt;&lt;/a&gt; - exploits market provides you the possibility to buy zero-day exploits and also to sell 0day exploits.&lt;br/&gt;  🔸 &lt;a href=&quot;https://sploitus.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;sploitus&lt;/strong&gt;&lt;/a&gt; - the exploit and tools database.&lt;br/&gt;  🔸 &lt;a href=&quot;https://cxsecurity.com/exploit/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;cxsecurity&lt;/strong&gt;&lt;/a&gt; - free vulnerability database.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Mobile apps scanners&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.htbridge.com/mobile/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;ImmuniWeb® Mobile App Scanner&lt;/strong&gt;&lt;/a&gt; - test security and privacy of mobile apps (iOS &amp;amp; Android).&lt;br/&gt;  🔸 &lt;a href=&quot;https://vulnerabilitytest.quixxi.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Quixxi&lt;/strong&gt;&lt;/a&gt; - free Mobile App Vulnerability Scanner for Android &amp;amp; iOS.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.ostorlab.co/scan/mobile/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Ostorlab&lt;/strong&gt;&lt;/a&gt; - analyzes mobile application to identify vulnerabilities and potential weaknesses.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Private Search Engines&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.startpage.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Startpage&lt;/strong&gt;&lt;/a&gt; - the world's most private search engine.&lt;br/&gt;  🔸 &lt;a href=&quot;https://searx.me/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;searX&lt;/strong&gt;&lt;/a&gt; - a privacy-respecting, hackable metasearch engine.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Secure WebMail Providers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://countermail.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CounterMail&lt;/strong&gt;&lt;/a&gt; - is a secure and easy to use online email service, designed to provide maximum security and privacy.&lt;br/&gt;  🔸 &lt;a href=&quot;http://mail2tor.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Mail2Tor&lt;/strong&gt;&lt;/a&gt; - is a Tor Hidden Service that allows anyone to send and receive emails anonymously.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tutanota.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Tutanota&lt;/strong&gt;&lt;/a&gt; - is the world's most secure email service and amazingly easy to use.&lt;br/&gt;  🔸 &lt;a href=&quot;https://protonmail.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Protonmail&lt;/strong&gt;&lt;/a&gt; - is the world's largest secure email service, developed by CERN and MIT scientists.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.startmail.com/en/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Startmail&lt;/strong&gt;&lt;/a&gt; - private &amp;amp; encrypted email made easy.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Crypto&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://keybase.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Keybase&lt;/strong&gt;&lt;/a&gt; - it's open source and powered by public-key cryptography.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ PGP Keyservers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://keyserver.ubuntu.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SKS OpenPGP Key server&lt;/strong&gt;&lt;/a&gt; - includes a highly-efficient reconciliation algorithm for keeping the keyservers synchronized.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Other&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://thispersondoesnotexist.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;thispersondoesnotexist&lt;/strong&gt;&lt;/a&gt; - generate fake faces in one click - endless possibilities.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Systems/Services  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Operating Systems&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://www.slackware.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Slackware&lt;/strong&gt;&lt;/a&gt; - the most &quot;Unix-like&quot; Linux distribution.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.openbsd.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OpenBSD&lt;/strong&gt;&lt;/a&gt; - multi-platform 4.4BSD-based UNIX-like operating system.&lt;br/&gt;  🔸 &lt;a href=&quot;https://hardenedbsd.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HardenedBSD&lt;/strong&gt;&lt;/a&gt; - HardenedBSD aims to implement innovative exploit mitigation and security solutions.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.kali.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Kali Linux&lt;/strong&gt;&lt;/a&gt; - Linux distribution used for Penetration Testing, Ethical Hacking and network security assessments.&lt;br/&gt;  🔸 &lt;a href=&quot;https://backbox.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Backbox Linux&lt;/strong&gt;&lt;/a&gt; - penetration test and security assessment oriented Ubuntu-based Linux distribution.&lt;br/&gt;  🔸 &lt;a href=&quot;https://blackarch.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;BlackArch&lt;/strong&gt;&lt;/a&gt; - is an Arch Linux-based penetration testing distribution for penetration testers and security researchers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://securityonion.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Security Onion&lt;/strong&gt;&lt;/a&gt; - Linux distro for intrusion detection, enterprise security monitoring, and log management.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tails.boum.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Tails&lt;/strong&gt;&lt;/a&gt; - is a live system that aims to preserve your privacy and anonymity.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ HTTP(s) Services&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://varnish-cache.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Varnish Cache&lt;/strong&gt;&lt;/a&gt; - HTTP accelerator designed for content-heavy dynamic web sites.&lt;br/&gt;  🔸 &lt;a href=&quot;https://nginx.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Nginx&lt;/strong&gt;&lt;/a&gt; - open source web and reverse proxy server that is similar to Apache, but very light weight.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.haproxy.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HAProxy&lt;/strong&gt;&lt;/a&gt; - the reliable, high performance TCP/HTTP load balancer.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Security/hardening&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://emeraldonion.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Emerald Onion&lt;/strong&gt;&lt;/a&gt; - seattle-based encrypted-transit internet service provider.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.unbound.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Unbound&lt;/strong&gt;&lt;/a&gt; - validating, recursive, and caching DNS resolver (with TLS).&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.knot-resolver.cz/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Knot Resolver&lt;/strong&gt;&lt;/a&gt; - caching full resolver implementation, including both a resolver library and a daemon.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/pi-hole/pi-hole&quot;&gt;&lt;strong&gt;pi-hole&lt;/strong&gt;&lt;/a&gt; - the Pi-hole® is a DNS sinkhole that protects your devices from unwanted content.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/stamparm/maltrail&quot;&gt;&lt;strong&gt;maltrail&lt;/strong&gt;&lt;/a&gt; - malicious traffic detection system.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Netflix/security_monkey&quot;&gt;&lt;strong&gt;security_monkey&lt;/strong&gt;&lt;/a&gt; - monitors AWS, GCP, OpenStack, and GitHub orgs for assets and their changes over time.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Networks  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Tools&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.capanalysis.net/ca/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CapAnalysis&lt;/strong&gt;&lt;/a&gt; - web visual tool to analyze large amounts of captured network traffic (PCAP analyzer).&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Labs&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://labs.networkreliability.engineering/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;NRE Labs&lt;/strong&gt;&lt;/a&gt; - learn automation by doing it. Right now, right here, in your browser.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Manuals/Howtos/Tutorials  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Shells/Command line&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/dylanaraps/pure-bash-bible&quot;&gt;&lt;strong&gt;pure-bash-bible&lt;/strong&gt;&lt;/a&gt; - a collection of pure bash alternatives to external processes.&lt;br/&gt;  🔸 &lt;a href=&quot;http://wiki.bash-hackers.org/start&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The Bash Hackers Wiki&lt;/strong&gt;&lt;/a&gt; - hold documentation of any kind about GNU Bash.&lt;br/&gt;  🔸 &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Shell &amp;amp; Utilities&lt;/strong&gt;&lt;/a&gt; - describes the commands and utilities offered to application programs by POSIX-conformant systems.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line&quot;&gt;&lt;strong&gt;the-art-of-command-line&lt;/strong&gt;&lt;/a&gt; - master the command line, in one page.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Python&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://awesome-python.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Awesome Python&lt;/strong&gt;&lt;/a&gt; - a curated list of awesome Python frameworks, libraries, software and resources.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Sed &amp;amp; Awk &amp;amp; Other&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://posts.specterops.io/fawk-yeah-advanced-sed-and-awk-usage-parsing-for-pentesters-3-e5727e11a8ad?gi=c8f9506b26b6&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;F’Awk Yeah!&lt;/strong&gt;&lt;/a&gt; - advanced sed and awk usage (Parsing for Pentesters 3).&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ *nix &amp;amp; Network&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.cyberciti.biz/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;nixCraft&lt;/strong&gt;&lt;/a&gt; - linux and unix tutorials for new and seasoned sysadmin.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.tecmint.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;TecMint&lt;/strong&gt;&lt;/a&gt; - the ideal Linux blog for Sysadmins &amp;amp; Geeks.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.omnisecu.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Omnisecu&lt;/strong&gt;&lt;/a&gt; - free Networking, System Administration and Security tutorials.&lt;br/&gt;  🔸 &lt;a href=&quot;http://cb.vu/unixtoolbox.xhtml&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Unix Toolbox&lt;/strong&gt;&lt;/a&gt; - collection of Unix/Linux/BSD commands and tasks which are useful for IT work or for advanced users.&lt;br/&gt;  🔸 &lt;a href=&quot;https://linuxguideandhints.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Linux Guide and Hints&lt;/strong&gt;&lt;/a&gt; - tutorials on system administration in Fedora® and CentOS®, including OpenLDAP and FreeIPA.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/bagder/http2-explained&quot;&gt;&lt;strong&gt;http2-explained&lt;/strong&gt;&lt;/a&gt; - a detailed document explaining and documenting HTTP/2.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/bagder/http3-explained&quot;&gt;&lt;strong&gt;http3-explained&lt;/strong&gt;&lt;/a&gt; - a document describing the HTTP/3 and QUIC protocols.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Large-scale systems&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/donnemartin/system-design-primer&quot;&gt;&lt;strong&gt;The System Design Primer&lt;/strong&gt;&lt;/a&gt; - learn how to design large-scale systems.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/binhnguyennus/awesome-scalability&quot;&gt;&lt;strong&gt;Awesome Scalability&lt;/strong&gt;&lt;/a&gt; - best practices in building High Scalability, High Availability, High Stability and more.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ System hardening&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://highon.coffee/blog/security-harden-centos-7/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Security Harden CentOS 7&lt;/strong&gt;&lt;/a&gt; - this walks you through the steps required to security harden CentOS.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.lisenet.com/2017/centos-7-server-hardening-guide/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CentOS 7 Server Hardening Guide&lt;/strong&gt;&lt;/a&gt; - great guide for hardening CentOS; familiar with OpenSCAP.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Security &amp;amp; Privacy&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/Main_Page&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP&lt;/strong&gt;&lt;/a&gt; - worldwide not-for-profit charitable organization focused on improving the security of software.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP ASVS 3.0.1&lt;/strong&gt;&lt;/a&gt; - OWASP Application Security Verification Standard Project.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Santandersecurityresearch/asvs&quot;&gt;&lt;strong&gt;OWASP ASVS 3.0.1 Web App&lt;/strong&gt;&lt;/a&gt; - simple web app that helps developers understand the ASVS requirements.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Testing_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP Testing Guide v4&lt;/strong&gt;&lt;/a&gt; - includes a &quot;best practice&quot; penetration testing framework.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.hackingarticles.in/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hacking Articles&lt;/strong&gt;&lt;/a&gt; - LRaj Chandel's Security &amp;amp; Hacking Blog.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/toniblyx/my-arsenal-of-aws-security-tools&quot;&gt;&lt;strong&gt;AWS security tools&lt;/strong&gt;&lt;/a&gt; - make your AWS cloud environment more secure.&lt;br/&gt;  🔸 &lt;a href=&quot;https://inventory.rawsec.ml/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Rawsec's CyberSecurity Inventory&lt;/strong&gt;&lt;/a&gt; - an inventory of tools and resources about CyberSecurity.&lt;br/&gt;  🔸 &lt;a href=&quot;https://appsecwiki.com/#/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Application Security Wiki&lt;/strong&gt;&lt;/a&gt; - is an initiative to provide all application security related resources at one place.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tls.ulfheim.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The Illustrated TLS Connection&lt;/strong&gt;&lt;/a&gt; - every byte of a TLS connection explained and reproduced.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices&quot;&gt;&lt;strong&gt;SSL Research&lt;/strong&gt;&lt;/a&gt; - SSL and TLS Deployment Best Practices by SSL Labs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://smallstep.com/blog/everything-pki.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Certificates and PKI&lt;/strong&gt;&lt;/a&gt; - everything you should know about certificates and PKI but are too afraid to ask.&lt;br/&gt;  🔸 &lt;a href=&quot;https://appsecco.com/books/subdomain-enumeration/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The Art of Subdomain Enumeration&lt;/strong&gt;&lt;/a&gt; - a reference for subdomain enumeration techniques.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/GrrrDog/weird_proxies/wiki&quot;&gt;&lt;strong&gt;Weird Proxies&lt;/strong&gt;&lt;/a&gt; - reverse proxy related attacks; it is a result of analysis of various reverse proxies, cache proxies, etc.&lt;br/&gt;  🔸 &lt;a href=&quot;https://lifehacker.com/the-comprehensive-guide-to-quitting-google-1830001964&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Quitting Google&lt;/strong&gt;&lt;/a&gt; - the comprehensive guide to quitting Google.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Web Apps&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://infosec.mozilla.org/guidelines/web_security.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Mozilla Web Security&lt;/strong&gt;&lt;/a&gt; - help operational teams with creating secure web applications.&lt;br/&gt;  🔸 &lt;a href=&quot;https://enable-cors.org/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Enable CORS&lt;/strong&gt;&lt;/a&gt; - enable cross-origin resource sharing.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Other&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://bitvijays.github.io/LFC-VulnerableMachines.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CTF Series : Vulnerable Machines&lt;/strong&gt;&lt;/a&gt; - the steps below could be followed to find vulnerabilities and exploits.&lt;br/&gt;  🔸 &lt;a href=&quot;https://hshrzd.wordpress.com/how-to-start/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;How to start RE/malware analysis?&lt;/strong&gt;&lt;/a&gt; - collection of some hints and useful links for the beginners.&lt;br/&gt;  🔸 &lt;a href=&quot;https://lzone.de/cheat-sheet/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;LZone Cheat Sheets&lt;/strong&gt;&lt;/a&gt; - all cheat sheets.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rstacruz/cheatsheets&quot;&gt;&lt;strong&gt;Dan’s Cheat Sheets’s&lt;/strong&gt;&lt;/a&gt; - massive cheat sheets documentation.&lt;br/&gt;  🔸 &lt;a href=&quot;https://devhints.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Rico's cheatsheets&lt;/strong&gt;&lt;/a&gt; - this is a modest collection of cheatsheets.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.kegel.com/c10k.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The C10K problem&lt;/strong&gt;&lt;/a&gt; - it's time for web servers to handle ten thousand clients simultaneously, don't you think?&lt;br/&gt;  🔸 &lt;a href=&quot;https://bankgradesecurity.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Bank Grade Security&lt;/strong&gt;&lt;/a&gt; - when companies say they have &quot;Bank Grade Security&quot; they imply that it is a good thing.&lt;strong&gt;*&lt;/strong&gt;&lt;br/&gt;  🔸 &lt;a href=&quot;https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HTTPS on Stack Overflow&lt;/strong&gt;&lt;/a&gt; - this is the story of a long journey regarding the implementation of SSL.&lt;br/&gt;  🔸 &lt;a href=&quot;https://drawings.jvns.ca/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Julia's Drawings&lt;/strong&gt;&lt;/a&gt; - some drawings about programming and unix world, zines about systems &amp;amp; debugging tools.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/corkami/collisions&quot;&gt;&lt;strong&gt;Hash collisions&lt;/strong&gt;&lt;/a&gt; - this great repository is focused on hash collisions exploitation.&lt;br/&gt;  🔸 &lt;a href=&quot;https://labs.ripe.net/Members/cteusche/bgp-meets-cat&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;BGP Meets Cat&lt;/strong&gt;&lt;/a&gt; - after 3072 hours of manipulating BGP, Job Snijders has succeeded in drawing a Nyancat.&lt;br/&gt;  🔸 &lt;a href=&quot;https://robertheaton.com/2018/11/28/https-in-the-real-world/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HTTPS in the real world&lt;/strong&gt;&lt;/a&gt; - great tutorial explain how HTTPS works in the real world.&lt;br/&gt;  🔸 &lt;a href=&quot;https://about.gitlab.com/2018/11/14/how-we-spent-two-weeks-hunting-an-nfs-bug/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Gitlab and NFS bug&lt;/strong&gt;&lt;/a&gt; - how we spent two weeks hunting an NFS bug in the Linux kernel.&lt;br/&gt;  🔸 &lt;a href=&quot;https://medium.com/@_bl4de/hidden-directories-and-files-as-a-source-of-sensitive-information-about-web-application-84e5c534e5ad&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hidden directories and files&lt;/strong&gt;&lt;/a&gt; - as a source of sensitive information about web application.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.catb.org/esr/faqs/hacker-howto.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;How To Become A Hacker&lt;/strong&gt;&lt;/a&gt; - if you want to be a hacker, keep reading.&lt;br/&gt;  🔸 &lt;a href=&quot;http://ithare.com/infographics-operation-costs-in-cpu-clock-cycles/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Operation Costs in CPU&lt;/strong&gt;&lt;/a&gt; - an infographics which should help to estimate costs of certain operations in CPU clocks.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Inspiring Lists  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ SysOps/DevOps&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/kahun/awesome-sysadmin&quot;&gt;&lt;strong&gt;Awesome Sysadmin&lt;/strong&gt;&lt;/a&gt; - amazingly awesome open source sysadmin resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/alebcay/awesome-shell&quot;&gt;&lt;strong&gt;Awesome Shell&lt;/strong&gt;&lt;/a&gt; - awesome command-line frameworks, toolkits, guides and gizmos.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/learnbyexample/Command-line-text-processing&quot;&gt;&lt;strong&gt;Command-line-text-processing&lt;/strong&gt;&lt;/a&gt; - from finding text to search and replace, from sorting to beautifying text and more.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/caesar0301/awesome-pcaptools&quot;&gt;&lt;strong&gt;Awesome Pcaptools&lt;/strong&gt;&lt;/a&gt; - collection of tools developed by other researchers to process network traces.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/leandromoreira/linux-network-performance-parameters&quot;&gt;&lt;strong&gt;Linux Network Performance&lt;/strong&gt;&lt;/a&gt; - learn where some of the network sysctl variables fit into the Linux/Kernel network flow.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/dhamaniasad/awesome-postgres&quot;&gt;&lt;strong&gt;Awesome Postgres&lt;/strong&gt;&lt;/a&gt; - list of awesome PostgreSQL software, libraries, tools and resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Kickball/awesome-selfhosted&quot;&gt;&lt;strong&gt;Awesome-Selfhosted&lt;/strong&gt;&lt;/a&gt; - list of Free Software network services and web applications which can be hosted locally.&lt;br/&gt;  🔸 &lt;a href=&quot;https://wiki.archlinux.org/index.php/List_of_applications&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;List of applications&lt;/strong&gt;&lt;/a&gt; - huge collection of applications sorted by category, as a reference for those looking for packages.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Developers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/thedaviddias/Front-End-Checklist&quot;&gt;&lt;strong&gt;Front-End-Checklist&lt;/strong&gt;&lt;/a&gt; - the perfect Front-End Checklist for modern websites and meticulous developers.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Security/Pentesting&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/qazbnm456/awesome-web-security&quot;&gt;&lt;strong&gt;Awesome Web Security&lt;/strong&gt;&lt;/a&gt; - a curated list of Web Security materials and resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/joe-shenouda/awesome-cyber-skills&quot;&gt;&lt;strong&gt;awesome-cyber-skills&lt;/strong&gt;&lt;/a&gt; - a curated list of hacking environments where you can train your cyber skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/infosecn1nja/Red-Teaming-Toolkit&quot;&gt;&lt;strong&gt;Red-Teaming-Toolkit&lt;/strong&gt;&lt;/a&gt; - a collection of open source and commercial tools that aid in red team operations.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/snoopysecurity/awesome-burp-extensions&quot;&gt;&lt;strong&gt;awesome-burp-extensions&lt;/strong&gt;&lt;/a&gt; - a curated list of amazingly awesome Burp Extensions.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Hack-with-Github/Free-Security-eBooks&quot;&gt;&lt;strong&gt;Free Security eBooks&lt;/strong&gt;&lt;/a&gt; - list of a Free Security and Hacking eBooks.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/wtsxDev/reverse-engineering&quot;&gt;&lt;strong&gt;reverse-engineering&lt;/strong&gt;&lt;/a&gt; - list of awesome reverse engineering resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/k4m4/movies-for-hackers&quot;&gt;&lt;strong&gt;Movies for Hackers&lt;/strong&gt;&lt;/a&gt; - list of movies every hacker &amp;amp; cyberpunk must watch.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/trimstray/technical-whitepapers&quot;&gt;&lt;strong&gt;technical-whitepapers&lt;/strong&gt;&lt;/a&gt; - IT whitepapers; hacking, web app security, db, reverse engineering and more; EN/PL.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Blogs  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Geeky Persons&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://www.brendangregg.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Brendan Gregg's Blog&lt;/strong&gt;&lt;/a&gt; - Brendan Gregg is an industry expert in computing performance and cloud computing.&lt;br/&gt;  🔸 &lt;a href=&quot;http://gynvael.coldwind.pl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Gynvael &quot;GynDream&quot; Coldwind&lt;/strong&gt;&lt;/a&gt; - Gynvael is a IT security engineer at Google.&lt;br/&gt;  🔸 &lt;a href=&quot;http://lcamtuf.coredump.cx/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Michał &quot;lcamtuf&quot; Zalewski&lt;/strong&gt;&lt;/a&gt; - &quot;white hat&quot; hacker, computer security expert.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ma.ttias.be/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Mattias Geniar&lt;/strong&gt;&lt;/a&gt; - developer, Sysadmin, Blogger, Podcaster and Public Speaker.&lt;br/&gt;  🔸 &lt;a href=&quot;https://nickcraver.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Nick Craver&lt;/strong&gt;&lt;/a&gt; - Software Developer and Systems Administrator for Stack Exchange.&lt;br/&gt;  🔸 &lt;a href=&quot;https://robert.penz.name/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Robert Penz&lt;/strong&gt;&lt;/a&gt; - IT security Expert.&lt;br/&gt;  🔸 &lt;a href=&quot;https://scotthelme.co.uk/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Scott Helme&lt;/strong&gt;&lt;/a&gt; - Security Researcher, international speaker and founder of securityheaders.com and report-uri.com.&lt;br/&gt;  🔸 &lt;a href=&quot;https://twitter.com/binitamshah&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Binni Shah&lt;/strong&gt;&lt;/a&gt; - Linux Evangelist. Malwares. Kernel Dev. Security Enthusiast.&lt;br/&gt;  🔸 &lt;a href=&quot;https://security.szurek.pl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Kacper Szurek&lt;/strong&gt;&lt;/a&gt; - Detection Engineer at ESET.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.troyhunt.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Troy Hunt&lt;/strong&gt;&lt;/a&gt; - Microsoft Regional Director and Microsoft Most Valuable Professional for Developer Security.&lt;br/&gt;  🔸 &lt;a href=&quot;https://raymii.org/s/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;raymii.org&lt;/strong&gt;&lt;/a&gt; - Linux/Unix Sysadmin specializing in building high availability cloud environments.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Geeky Blogs&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://linux-audit.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Linux Audit&lt;/strong&gt;&lt;/a&gt; - the Linux security blog about Auditing, Hardening and Compliance by Michael Boelen.&lt;br/&gt;  🔸 &lt;a href=&quot;https://linuxsecurity.expert/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Linux Security Expert&lt;/strong&gt;&lt;/a&gt; - trainings, howtos, checklists, security tools and more.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.grymoire.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The Grymoire&lt;/strong&gt;&lt;/a&gt; - collection of useful incantations for wizards, be you computer wizards, magicians, or whatever.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ A piece of history&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://ftp.arl.army.mil/~mike/howto/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;How to Do Things at ARL&lt;/strong&gt;&lt;/a&gt; - how to configure modems, scan images, record CD-ROMs, and other useful techniques.&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Hacking/Penetration Testing  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ Pentesters arsenal tools&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://www.syhunt.com/sandcat/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Sandcat Browser&lt;/strong&gt;&lt;/a&gt; - a penetration-oriented browser with plenty of advanced functionality already built in.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.metasploit.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Metasploit&lt;/strong&gt;&lt;/a&gt; - tool and framework for pentesting system, web and many more, contains a lot a ready to use exploit.&lt;br/&gt;  🔸 &lt;a href=&quot;https://portswigger.net/burp&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Burp Suite&lt;/strong&gt;&lt;/a&gt; - tool for testing Web application security, intercepting proxy to replay, inject, scan and fuzz HTTP requests.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP Zed Attack Proxy&lt;/strong&gt;&lt;/a&gt; - intercepting proxy to replay, inject, scan and fuzz HTTP requests.&lt;br/&gt;  🔸 &lt;a href=&quot;http://w3af.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;w3af&lt;/strong&gt;&lt;/a&gt; - is a Web Application Attack and Audit Framework.&lt;br/&gt;  🔸 &lt;a href=&quot;https://mitmproxy.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;mitmproxy&lt;/strong&gt;&lt;/a&gt; - an interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://cirt.net/Nikto2&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Nikto2&lt;/strong&gt;&lt;/a&gt; - web server scanner which performs comprehensive tests against web servers for multiple items.&lt;br/&gt;  🔸 &lt;a href=&quot;http://sqlmap.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;sqlmap&lt;/strong&gt;&lt;/a&gt; - tool that automates the process of detecting and exploiting SQL injection flaws.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.faradaysec.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Faraday&lt;/strong&gt;&lt;/a&gt; - an Integrated Multiuser Pentest Environment.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/zardus/ctf-tools&quot;&gt;&lt;strong&gt;ctf-tools&lt;/strong&gt;&lt;/a&gt; - some setup scripts for security research tools.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/bl4de/security-tools&quot;&gt;&lt;strong&gt;security-tools&lt;/strong&gt;&lt;/a&gt; - collection of small security tools created mostly in Python. CTFs, pentests and so on.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/fuzzdb-project/fuzzdb&quot;&gt;&lt;strong&gt;fuzzdb&lt;/strong&gt;&lt;/a&gt; - dictionary of attack patterns and primitives for black-box application fault injection and resource discovery.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/google/syzkaller&quot;&gt;&lt;strong&gt;syzkaller&lt;/strong&gt;&lt;/a&gt; - is an unsupervised, coverage-guided kernel fuzzer.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/longld/peda&quot;&gt;&lt;strong&gt;GDB PEDA&lt;/strong&gt;&lt;/a&gt; - Python Exploit Development Assistance for GDB.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.hex-rays.com/products/ida/index.shtml&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;IDA&lt;/strong&gt;&lt;/a&gt; - multi-processor disassembler and debugger useful for reverse engineering malware.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/radare/radare2&quot;&gt;&lt;strong&gt;radare2&lt;/strong&gt;&lt;/a&gt; - framework for reverse-engineering and analyzing binaries.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/salesforce/vulnreport&quot;&gt;&lt;strong&gt;Vulnreport&lt;/strong&gt;&lt;/a&gt; - open-source pentesting management and automation platform by Salesforce Product Security.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/sc0tfree/mentalist&quot;&gt;&lt;strong&gt;Mentalist&lt;/strong&gt;&lt;/a&gt; - is a graphical tool for custom wordlist generation.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Pentests bookmarks collection&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;http://www.pentest-standard.org/index.php/Main_Page&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PTES&lt;/strong&gt;&lt;/a&gt; - the penetration testing execution standard.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.amanhardikar.com/mindmaps/Practice.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pentests MindMap&lt;/strong&gt;&lt;/a&gt; - amazing mind map with vulnerable apps and systems.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.amanhardikar.com/mindmaps/webapptest.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;WebApps Security Tests MindMap&lt;/strong&gt;&lt;/a&gt; - incredible mind map for WebApps security tests.&lt;br/&gt;  🔸 &lt;a href=&quot;https://brutelogic.com.br/blog/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Brute XSS&lt;/strong&gt;&lt;/a&gt; - master the art of Cross Site Scripting.&lt;br/&gt;  🔸 &lt;a href=&quot;https://jivoi.github.io/2015/07/03/offensive-security-bookmarks/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Offensive Security Bookmarks&lt;/strong&gt;&lt;/a&gt; - security bookmarks collection, all that things I need to pass OSCP.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/coreb1t/awesome-pentest-cheat-sheets&quot;&gt;&lt;strong&gt;Awesome Pentest Cheat Sheets&lt;/strong&gt;&lt;/a&gt; - collection of the cheat sheets useful for pentesting.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/Hack-with-Github/Awesome-Hacking&quot;&gt;&lt;strong&gt;Awesome Hacking by HackWithGithub&lt;/strong&gt;&lt;/a&gt; - awesome lists for hackers, pentesters and security researchers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/carpedm20/awesome-hacking&quot;&gt;&lt;strong&gt;Awesome Hacking by carpedm20&lt;/strong&gt;&lt;/a&gt; - a curated list of awesome hacking tutorials, tools and resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/vitalysim/Awesome-Hacking-Resources&quot;&gt;&lt;strong&gt;Awesome Hacking Resources&lt;/strong&gt;&lt;/a&gt; - collection of hacking/penetration testing resources to make you better.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/enaqx/awesome-pentest&quot;&gt;&lt;strong&gt;Awesome Pentest&lt;/strong&gt;&lt;/a&gt; - collection of awesome penetration testing resources, tools and other shiny things.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/ksanchezcld/Hacking_Cheat_Sheet&quot;&gt;&lt;strong&gt;Hacking Cheat Sheet&lt;/strong&gt;&lt;/a&gt; - author hacking and pentesting notes.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/The-Art-of-Hacking/h4cker&quot;&gt;&lt;strong&gt;Cyber Security Resources&lt;/strong&gt;&lt;/a&gt; - includes thousands of cybersecurity-related references and resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/jhaddix/pentest-bookmarks&quot;&gt;&lt;strong&gt;Pentest Bookmarks&lt;/strong&gt;&lt;/a&gt; - there are a LOT of pentesting blogs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings&quot;&gt;&lt;strong&gt;PayloadsAllTheThings&lt;/strong&gt;&lt;/a&gt; - a list of useful payloads and bypass for Web Application Security and Pentest/CTF.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/foospidy/payloads&quot;&gt;&lt;strong&gt;payloads&lt;/strong&gt;&lt;/a&gt; - git all the Payloads! A collection of web attack payloads.&lt;br/&gt;  🔸 &lt;a href=&quot;https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pentesting Tools Cheat Sheet&lt;/strong&gt;&lt;/a&gt; - a quick reference high level overview for typical penetration testing engagements.&lt;br/&gt;  🔸 &lt;a href=&quot;https://media.defcon.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DEF CON Media Server&lt;/strong&gt;&lt;/a&gt; - great stuff from DEFCON.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rshipp/awesome-malware-analysis&quot;&gt;&lt;strong&gt;Awesome Malware Analysis&lt;/strong&gt;&lt;/a&gt; - a curated list of awesome malware analysis tools and resources.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SQL Injection Cheat Sheet&lt;/strong&gt;&lt;/a&gt; - detailed technical information about the many different variants of the SQL Injection.&lt;br/&gt;  🔸 &lt;a href=&quot;http://kb.entersoft.co.in/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Entersoft Knowledge Base&lt;/strong&gt;&lt;/a&gt; - great and detailed reference about vulnerabilities.&lt;br/&gt;  🔸 &lt;a href=&quot;http://html5sec.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;HTML5 Security Cheatsheet&lt;/strong&gt;&lt;/a&gt; - a collection of HTML5 related XSS attack vectors.&lt;br/&gt;  🔸 &lt;a href=&quot;http://evuln.com/tools/xss-encoder/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;XSS String Encoder&lt;/strong&gt;&lt;/a&gt; - for generating XSS code to check your input validation filters against XSS.&lt;br/&gt;  🔸 &lt;a href=&quot;https://gtfobins.github.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;GTFOBins&lt;/strong&gt;&lt;/a&gt; - list of Unix binaries that can be exploited by an attacker to bypass local security restrictions.&lt;br/&gt;  🔸 &lt;a href=&quot;https://guif.re/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Guifre Ruiz Notes&lt;/strong&gt;&lt;/a&gt; - collection of security, system, network and pentest cheatsheets.&lt;br/&gt;  🔸 &lt;a href=&quot;http://blog.safebuff.com/2016/07/03/SSRF-Tips/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;SSRF Tips&lt;/strong&gt;&lt;/a&gt; - a collection of SSRF Tips.&lt;br/&gt;  🔸 &lt;a href=&quot;http://shell-storm.org/repo/CTF/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;shell-storm repo CTF&lt;/strong&gt;&lt;/a&gt; - great archive of CTFs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/bl4de/ctf&quot;&gt;&lt;strong&gt;ctf&lt;/strong&gt;&lt;/a&gt; - CTF (Capture The Flag) writeups, code snippets, notes, scripts.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/OWASP/owasp-mstg&quot;&gt;&lt;strong&gt;MSTG&lt;/strong&gt;&lt;/a&gt; - The Mobile Security Testing Guide (MSTG) is a comprehensive manual for mobile app security testing.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Wordlists and Weak passwords&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://weakpass.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Weakpass&lt;/strong&gt;&lt;/a&gt; - for any kind of bruteforce find wordlists or unleash the power of them all at once!&lt;br/&gt;  🔸 &lt;a href=&quot;https://hashes.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hashes.org&lt;/strong&gt;&lt;/a&gt; - is a free online hash resolving service incorporating many unparalleled techniques.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/danielmiessler/SecLists&quot;&gt;&lt;strong&gt;SecLists&lt;/strong&gt;&lt;/a&gt; - collection of multiple types of lists used during security assessments, collected in one place.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/berzerk0/Probable-Wordlists&quot;&gt;&lt;strong&gt;Probable-Wordlists&lt;/strong&gt;&lt;/a&gt; - sorted by probability originally created for password generation and testing.&lt;br/&gt;  🔸 &lt;a href=&quot;https://wiki.skullsecurity.org/index.php?title=Passwords&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;skullsecurity passwords&lt;/strong&gt;&lt;/a&gt; - password dictionaries and leaked passwords repository.&lt;br/&gt;  🔸 &lt;a href=&quot;https://bezpieka.org/polski-slownik-premium-polish-wordlist&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Polish PREMIUM Dictionary&lt;/strong&gt;&lt;/a&gt; - official dictionary created by the team on the forum bezpieka.org.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Bounty programs&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://bountyfactory.io/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Bounty Factory&lt;/strong&gt;&lt;/a&gt; - European bug bounty platform based on the legislation and rules in force in European countries.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.openbugbounty.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Openbugbounty&lt;/strong&gt;&lt;/a&gt; - allows any security researcher reporting a vulnerability on any website.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.hackerone.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;hackerone&lt;/strong&gt;&lt;/a&gt; - global hacker community to surface the most relevant security issues.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.bugcrowd.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;bugcrowd&lt;/strong&gt;&lt;/a&gt; - crowdsourced cybersecurity for the enterprise.&lt;br/&gt;  🔸 &lt;a href=&quot;https://crowdshield.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Crowdshield&lt;/strong&gt;&lt;/a&gt; - crowdsourced Security &amp;amp; Bug Bounty Management.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Web Training Apps (local installation)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Vulnerable_Web_Applications_Directory_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP-VWAD&lt;/strong&gt;&lt;/a&gt; - comprehensive and well maintained registry of all known vulnerable web applications.&lt;br/&gt;  🔸 &lt;a href=&quot;https://metasploit.help.rapid7.com/docs/metasploitable-2&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Metasploitable 2&lt;/strong&gt;&lt;/a&gt; - vulnerable web application amongst security researchers.&lt;br/&gt;  🔸 &lt;a href=&quot;http://www.dvwa.co.uk/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DVWA&lt;/strong&gt;&lt;/a&gt; - PHP/MySQL web application that is damn vulnerable.&lt;br/&gt;  🔸 &lt;a href=&quot;https://sourceforge.net/projects/mutillidae/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP Mutillidae II&lt;/strong&gt;&lt;/a&gt; - free, open source, deliberately vulnerable web-application.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/OWASP_Juice_Shop_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP Juice Shop Project&lt;/strong&gt;&lt;/a&gt; - the most bug-free vulnerable application in existence.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP WebGoat Project&lt;/strong&gt;&lt;/a&gt; - insecure web application maintained by OWASP designed to teach web app security.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/opendns/Security_Ninjas_AppSec_Training&quot;&gt;&lt;strong&gt;Security Ninjas&lt;/strong&gt;&lt;/a&gt; - open source application security training program.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rapid7/hackazon&quot;&gt;&lt;strong&gt;hackazon&lt;/strong&gt;&lt;/a&gt; - a modern vulnerable web app.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/appsecco/dvna&quot;&gt;&lt;strong&gt;dvna&lt;/strong&gt;&lt;/a&gt; - damn vulnerable NodeJS application.&lt;br/&gt;  🔸 &lt;a href=&quot;https://google-gruyere.appspot.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Google Gruyere&lt;/strong&gt;&lt;/a&gt; - web application exploits and defenses.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/amolnaik4/bodhi&quot;&gt;&lt;strong&gt;Bodhi&lt;/strong&gt;&lt;/a&gt; - is a playground focused on learning the exploitation of client-side web vulnerabilities.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Labs (ethical hacking platforms/trainings/CTFs)&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://www.offensive-security.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Offensive Security&lt;/strong&gt;&lt;/a&gt; - true performance-based penetration testing training for over a decade.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.hackthebox.eu/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hack The Box&lt;/strong&gt;&lt;/a&gt; - online platform allowing you to test your penetration testing skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.hacking-lab.com/index.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Hacking-Lab&lt;/strong&gt;&lt;/a&gt; - online ethical hacking, computer network and security challenge platform.&lt;br/&gt;  🔸 &lt;a href=&quot;http://pwnable.kr/index.php&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;pwnable.kr&lt;/strong&gt;&lt;/a&gt; - non-commercial wargame site which provides various pwn challenges regarding system exploitation.&lt;br/&gt;  🔸 &lt;a href=&quot;https://pwnable.tw/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pwnable.tw&lt;/strong&gt;&lt;/a&gt; - is a wargame site for hackers to test and expand their binary exploiting skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://picoctf.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;picoCTF&lt;/strong&gt;&lt;/a&gt; - is a free computer security game targeted at middle and high school students.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ctflearn.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;CTFlearn&lt;/strong&gt;&lt;/a&gt; - is an online platform built to help ethical hackers learn and practice their cybersecurity knowledge and skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://silesiasecuritylab.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Silesia Security Lab&lt;/strong&gt;&lt;/a&gt; - high quality security testing services.&lt;br/&gt;  🔸 &lt;a href=&quot;https://practicalpentestlabs.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Practical Pentest Labs&lt;/strong&gt;&lt;/a&gt; - pentest lab, take your Hacking skills to the next level.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.root-me.org/?lang=en&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Root Me&lt;/strong&gt;&lt;/a&gt; - the fast, easy, and affordable way to train your hacking skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://rozwal.to/login&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;rozwal.to&lt;/strong&gt;&lt;/a&gt; - a great platform to train your pentesting skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://tryhackme.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;TryHackMe&lt;/strong&gt;&lt;/a&gt; - learning Cyber Security made easy.&lt;br/&gt;  🔸 &lt;a href=&quot;https://hackxor.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;hackxor&lt;/strong&gt;&lt;/a&gt; - is a realistic web application hacking game, designed to help players of all abilities develop their skills.&lt;br/&gt;  🔸 &lt;a href=&quot;http://overthewire.org/wargames/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OverTheWire&lt;/strong&gt;&lt;/a&gt; - can help you to learn and practice security concepts in the form of fun-filled games.&lt;br/&gt;  🔸 &lt;a href=&quot;https://labs.wizard-security.net/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Wizard Labs&lt;/strong&gt;&lt;/a&gt; - is an online Penetration Testing Lab.&lt;br/&gt;  🔸 &lt;a href=&quot;https://pentesterlab.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;PentesterLab&lt;/strong&gt;&lt;/a&gt; - provides vulnerable systems that can be used to test and understand vulnerabilities.&lt;br/&gt;  🔸 &lt;a href=&quot;https://ringzer0ctf.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;RingZer0&lt;/strong&gt;&lt;/a&gt; - tons of challenges designed to test and improve your hacking skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.ubeeri.com/preconfig-labs&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Ubeeri&lt;/strong&gt;&lt;/a&gt; - preconfigured lab environments.&lt;br/&gt;  🔸 &lt;a href=&quot;https://lab.pentestit.ru/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Pentestit&lt;/strong&gt;&lt;/a&gt; - emulate IT infrastructures of real companies for legal pen testing and improving penetration testing skills.&lt;br/&gt;  🔸 &lt;a href=&quot;https://microcorruption.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Microcorruption&lt;/strong&gt;&lt;/a&gt; - reversal challenges done in the web interface.&lt;br/&gt;  🔸 &lt;a href=&quot;https://crackmes.one/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Crackmes&lt;/strong&gt;&lt;/a&gt; - download crackmes to help improve your reverse engineering skills.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Other resources&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/bugcrowd/bugcrowd_university&quot;&gt;&lt;strong&gt;Bugcrowd University&lt;/strong&gt;&lt;/a&gt; - open source education content for the researcher community.&lt;br/&gt;  🔸 &lt;a href=&quot;https://github.com/rewardone/OSCPRepo&quot;&gt;&lt;strong&gt;OSCPRepo&lt;/strong&gt;&lt;/a&gt; - a list of resources and scripts that I have been gathering in preparation for the OSCP.&lt;br/&gt;  🔸 &lt;a href=&quot;https://medium.com/@cxosmo/owasp-top-10-real-world-examples-part-1-a540c4ea2df5&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OWASP Top 10: Real-World Examples&lt;/strong&gt;&lt;/a&gt; - test your web apps with real-world examples (two-part series).&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Your daily knowledge and news  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;▪️ RSS Readers&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://feedly.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Feedly&lt;/strong&gt;&lt;/a&gt; - organize, read and share what matters to you.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ IRC Channels&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://wiki.hackerspaces.org/IRC_Channel&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;#hackerspaces&lt;/strong&gt;&lt;/a&gt; - hackerspace IRC channels.&lt;br/&gt;&lt;/p&gt;
&lt;h5&gt;▪️ Security&lt;/h5&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://thehackernews.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;The Hacker News&lt;/strong&gt;&lt;/a&gt; - leading news source dedicated to promoting awareness for security experts and hackers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://latesthackingnews.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Latest Hacking News&lt;/strong&gt;&lt;/a&gt; - provides the latest hacking news, exploits and vulnerabilities for ethical hackers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://securitynewsletter.co/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Security Newsletter&lt;/strong&gt;&lt;/a&gt; - security news as a weekly digest (email notifications).&lt;br/&gt;  🔸 &lt;a href=&quot;https://security.googleblog.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Google Online Security Blog&lt;/strong&gt;&lt;/a&gt; - the latest news and insights from Google on security and safety on the Internet.&lt;br/&gt;  🔸 &lt;a href=&quot;https://blog.qualys.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Qualys Blog&lt;/strong&gt;&lt;/a&gt; - expert network security guidance and news.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.darkreading.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DARKReading&lt;/strong&gt;&lt;/a&gt; - connecting the Information Security Community.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.darknet.org.uk/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Darknet&lt;/strong&gt;&lt;/a&gt; - latest hacking tools, hacker news, cybersecurity best practices, ethical hacking &amp;amp; pen-testing.&lt;br/&gt;  🔸 &lt;a href=&quot;https://twitter.com/disclosedh1&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;publiclyDisclosed&lt;/strong&gt;&lt;/a&gt; - public disclosure watcher who keeps you up to date about the recently disclosed bugs.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.reddit.com/r/hacking/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Reddit - Hacking&lt;/strong&gt;&lt;/a&gt; - a subreddit dedicated to hacking and hackers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://packetstormsecurity.com/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Packet Storm&lt;/strong&gt;&lt;/a&gt; - information security services, news, files, tools, exploits, advisories and whitepapers.&lt;br/&gt;  🔸 &lt;a href=&quot;https://sekurak.pl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Sekurak&lt;/strong&gt;&lt;/a&gt; - about security, penetration tests, vulnerabilities and many others (PL/EN).&lt;br/&gt;  🔸 &lt;a href=&quot;https://nfsec.pl/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;nf.sec&lt;/strong&gt;&lt;/a&gt; - basic aspects and mechanisms of Linux operating system security (PL).&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;Other Cheat Sheets  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h6&gt;Build your own DNS Servers&lt;/h6&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://calomel.org/unbound_dns.html&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Unbound DNS Tutorial&lt;/strong&gt;&lt;/a&gt; - a validating, recursive, and caching DNS server.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.ctrl.blog/entry/knot-dns-resolver-tutorial&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Knot Resolver on Fedora&lt;/strong&gt;&lt;/a&gt; - how to get faster and more secure DNS resolution with Knot Resolver on Fedora.&lt;br/&gt;  🔸 &lt;a href=&quot;https://www.aaflalo.me/2018/10/tutorial-setup-dns-over-https-server/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNS-over-HTTPS&lt;/strong&gt;&lt;/a&gt; - tutorial to setup your own DNS-over-HTTPS (DoH) server.&lt;br/&gt;  🔸 &lt;a href=&quot;https://zwischenzugs.com/2018/01/26/how-and-why-i-run-my-own-dns-servers/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;DNS Servers&lt;/strong&gt;&lt;/a&gt; - how (and why) i run my own DNS Servers.&lt;br/&gt;&lt;/p&gt;
&lt;h6&gt;Build your own Certificate Authority&lt;/h6&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://jamielinux.com/docs/openssl-certificate-authority/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;OpenSSL Certificate Authority&lt;/strong&gt;&lt;/a&gt; - build your own certificate authority (CA) using the OpenSSL command-line tools.&lt;br/&gt;&lt;/p&gt;
&lt;h6&gt;Build your own System/Virtual Machine&lt;/h6&gt;
&lt;p&gt;  🔸 &lt;a href=&quot;https://github.com/cfenollosa/os-tutorial&quot;&gt;&lt;strong&gt;os-tutorial&lt;/strong&gt;&lt;/a&gt; - how to create an OS from scratch.&lt;br/&gt;  🔸 &lt;a href=&quot;https://justinmeiners.github.io/lc3-vm/&quot; rel=&quot;nofollow&quot;&gt;&lt;strong&gt;Write your Own Virtual Machine&lt;/strong&gt;&lt;/a&gt; - how to write your own virtual machine (VM).&lt;br/&gt;&lt;/p&gt;
&lt;h6&gt;DNS Servers list (privacy)&lt;/h6&gt;
&lt;h6&gt;TOP Browser extensions&lt;/h6&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Extension name&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;IPvFoo&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Display the server IP address and HTTPS information across all page elements.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;FoxyProxy&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Simplifies configuring browsers to access proxy-servers.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;HTTPS Everywhere&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Automatically use HTTPS security on many sites.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;uMatrix&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Point &amp;amp; click to forbid/allow any class of requests made by your browser.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;uBlock Origin&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;An efficient blocker: easy on memory and CPU footprint.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Session Buddy&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Manage browser tabs and bookmarks with ease.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;SuperSorter&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Sort bookmarks recursively, delete duplicates, merge folders and more.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Clear Cache&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Clear your cache and browsing data.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;d3coder&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Encoding/Decoding plugin for various types of encoding.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Web Developer&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Adds a toolbar button with various web developer tools.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;ThreatPinch Lookup&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Add threat intelligence hover tool tips.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h6&gt;TOP Burp extensions&lt;/h6&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Extension name&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Autorize&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Automatically detects authorization enforcement.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Reflection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;An efficient blocker: easy on memory and CPU footprint.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Logger++&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Logs requests and responses for all Burp tools in a sortable table.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Bypass WAF&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Adds headers useful for bypassing some WAF devices.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;JSON Beautifier&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Beautifies JSON content in the HTTP message viewer.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;JSON Web Tokens&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Enables Burp to decode and manipulate JSON web tokens.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;CSP Auditor&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Displays CSP headers for responses, and passively reports CSP weaknesses.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;CSP-Bypass&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Passively scans for CSP headers that contain known bypasses..&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Hackvertor&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Converts data using a tag-based configuration to apply various encoding.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Active Scan++&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Extends Burp's active and passive scanning capabilities.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;HTML5 Auditor&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Scans for usage of risky HTML5 features.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;strong&gt;&lt;code&gt;Software Vulnerability Scanner&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Software vulnerability scanner based on Vulners.com audit API.&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4&gt;One-liners  &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#anger-table-of-contents&quot;&gt;&lt;sup&gt;[TOC]&lt;/sup&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;h5&gt;Table of Contents&lt;/h5&gt;
&lt;p&gt;&lt;a name=&quot;user-content-system&quot;&gt;&lt;strong&gt;System&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_console&quot; rel=&quot;nofollow&quot;&gt;terminal&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Reload shell without exit&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$SHELL&lt;/span&gt; -l
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Close shell keeping all subprocess running&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;disown&lt;/span&gt; -a &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Exit without saving shell history&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;kill&lt;/span&gt; -9 &lt;span class=&quot;pl-smi&quot;&gt;$$&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;unset&lt;/span&gt; HISTFILE &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Perform a branching conditional&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; success
&lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; failed
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Pipe stdout and stderr to separate commands&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
some_command &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;(&lt;/span&gt;/bin/cmd_for_stdout&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;2&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;gt;(&lt;/span&gt;/bin/cmd_for_stderr&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Redirect stdout and stderr each to separate files and print both to the screen&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
(some_command &lt;span class=&quot;pl-k&quot;&gt;2&amp;gt;&amp;amp;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&amp;amp;3&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tee errorlog ) &lt;span class=&quot;pl-k&quot;&gt;3&amp;gt;&amp;amp;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&amp;amp;2&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tee stdoutlog
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;List of commands you use most often&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] &quot; &quot; CMD[a]/count*100 &quot;% &quot; a;}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
grep -v &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
column -c3 -s &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -t &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sort -nr &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; nl &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;  head -n 20
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Quickly backup a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cp filename{,.orig}
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Empty a file (truncate to 0 size)&lt;/h6&gt;

&lt;h6&gt;Delete all files in a folder that don't match a certain file extension&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
rm &lt;span class=&quot;pl-k&quot;&gt;!&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;.foo&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;.bar&lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;.baz)
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Pass multi-line string to a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; cat  &amp;gt;filename ... - overwrite file&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; cat &amp;gt;&amp;gt;filename ... - append to file&lt;/span&gt;
cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; filename &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;data data data&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Edit a file on a remote host using vim&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
vim scp://user@host//etc/fstab
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Create a directory and change into it at the same time&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;mkd&lt;/span&gt;() { mkdir -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; }
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Convert uppercase files to lowercase files&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
rename &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;y/A-Z/a-z/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Print a row of characters across the terminal&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;tput cols&lt;span class=&quot;pl-pds&quot;&gt;`&lt;/span&gt;&lt;/span&gt;s&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tr &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;#&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show shell history without line numbers&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; cut -c 8-
&lt;span class=&quot;pl-c1&quot;&gt;fc&lt;/span&gt; -l -n 1 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sed &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/^\s*//&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Run command(s) after exit session&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; /etc/profile &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;_after_logout() {&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;  username=$(whoami)&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;  for _pid in $(ps afx | grep sshd | grep &quot;$username&quot; | awk '{print $1}') ; do&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    kill -9 $_pid&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;  done&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;trap _after_logout EXIT&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate a sequence of numbers&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;((&lt;/span&gt;i&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;; i&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;; i&lt;span class=&quot;pl-k&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;))&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; alternative: seq 1 2 10&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;((&lt;/span&gt;i&lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;; i&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;; &lt;span class=&quot;pl-k&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;pl-pds&quot;&gt;))&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;%02d\n&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; alternative: seq -w 5 10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Mount_(Unix)&quot; rel=&quot;nofollow&quot;&gt;mount&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Mount a temporary ram partition&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mount -t tmpfs tmpfs /mnt -o size=64M
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - filesystem type&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; - mount options&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Remount a filesystem as read/write&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
mount -o remount,rw /
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Fuser_(Unix)&quot; rel=&quot;nofollow&quot;&gt;fuser&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Kills a process that is locking a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fuser -k filename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show what PID is listening on specific port&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
fuser -v 53/udp
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Ps_(Unix)&quot; rel=&quot;nofollow&quot;&gt;ps&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show a 4-way scrollable process tree with full details&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ps awwfux &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; less -S
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Processes per user counter&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ps hax -o user &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq -c &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort -r
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Find_(Unix)&quot; rel=&quot;nofollow&quot;&gt;find&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Find files that have been modified on your system in the past 60 minutes&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find / -mmin 60 -type f
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Find all files larger than 20M&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find / -type f -size +20M
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Find duplicate files (based on MD5 hash)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find -type f -exec md5sum &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq --all-repeated=separate -w 33
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Change permission only for files&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /var/www/site &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type f -exec chmod 766 {} &lt;span class=&quot;pl-cce&quot;&gt;\;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /var/www/site &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type f -exec chmod 664 {} +
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Change permission only for directories&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /var/www/site &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type d -exec chmod g+x {} &lt;span class=&quot;pl-cce&quot;&gt;\;&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /var/www/site &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type d -exec chmod g+rwx {} +
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Find files and directories for specific user&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -user &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;username&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -print
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Find files and directories for all without specific user&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;pl-cce&quot;&gt;\!&lt;/span&gt;-user &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;username&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -print
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Delete older files than 60 days&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type f -mtime +60 -delete
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Recursively remove all empty sub-directories from a directory&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -depth  -type d  -empty -exec rmdir {} &lt;span class=&quot;pl-cce&quot;&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;How to find all hard links to a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;/path/to/dir&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -xdev -samefile filename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Recursively find the latest modified files&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -type f -exec stat --format &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;%Y :%y %n&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;{}&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-cce&quot;&gt;\;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort -nr &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; cut -d: -f2- &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; head
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Recursively find/replace of a string with sed&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
find &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -not -path &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;*/\.git*&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; -type f -print0 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; xargs -0 sed -i &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/foo/bar/g&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Top_(software)&quot; rel=&quot;nofollow&quot;&gt;top&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Use top to monitor only all processes with the specific string&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
top -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;pgrep -d , &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;str&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;lt;str&amp;gt;&lt;/code&gt; - process containing str (eg. nginx, worker)&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Strace&quot; rel=&quot;nofollow&quot;&gt;strace&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Track child process&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
strace -f -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;pidof glusterfsd&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Track process after 30 seconds&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
timeout 30 strace &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; /var/run/zabbix/zabbix_agentd.pid&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Track child process and redirect output to a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ps auxw &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sbin/[a]pache&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{print &quot; -p &quot; $2}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; xargs strace -o /tmp/strace-apache-proc.out
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Track the open request of a network port&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
strace -f -e trace=bind nc -l 80
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Track the open request of a network port (show TCP/UDP)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
strace -f -e trace=network nc -lu 80
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Kill_(command)&quot; rel=&quot;nofollow&quot;&gt;kill&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Kill a process running on port&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;kill&lt;/span&gt; -9 &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;lsof -i :&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;port&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{l=$2} END {print l}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Diff&quot; rel=&quot;nofollow&quot;&gt;diff&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Compare two directory trees&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
diff &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;(&lt;/span&gt;cd directory1 &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;(&lt;/span&gt;cd directory2 &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; find &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tail_(Unix)&quot; rel=&quot;nofollow&quot;&gt;tail&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Annotate tail -f with timestamps&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tail -f file &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%T.%N&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$REPLY&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Analyse an Apache access log for the most common IP addresses&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tail -10000 access_log &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{print $1}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq -c &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort -n &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tail
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Analyse web server log and show only 5xx http codes&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tail -n 100 -f /path/to/logfile &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTTP/[1-2].[0-1]&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; [5]&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot; rel=&quot;nofollow&quot;&gt;tar&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;System backup with exclude specific directories&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /
tar -czvpf /mnt/system&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%d%m%Y%s&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.tgz --directory=/ \
--exclude=proc/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=sys/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=dev/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=mnt/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;System backup with exclude specific directories (pigz)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /
tar cvpf /backup/snapshot-&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%d%m%Y%s&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.tgz --directory=/ \
--exclude=proc/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=sys/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=dev/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; \
--exclude=mnt/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --exclude=tmp/&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; --use-compress-program=pigz &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Dump_(program)&quot; rel=&quot;nofollow&quot;&gt;dump&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;System backup to file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dump -y -u -f /backup/system&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%d%m%Y%s&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.lzo /
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Restore system from lzo file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; /
restore -rf /backup/system&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%d%m%Y%s&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.lzo
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://cpulimit.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;cpulimit&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Limit the cpu usage of a process&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cpulimit -p pid -l 50
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://www.cyberciti.biz/faq/unix-linux-pwdx-command-examples-usage-syntax/&quot; rel=&quot;nofollow&quot;&gt;pwdx&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show current working directory of a process&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
pwdx &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;pid&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://www.cyberciti.biz/faq/taskset-cpu-affinity-command/&quot; rel=&quot;nofollow&quot;&gt;taskset&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Start a command on only one CPU core&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
taskset -c 0 &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;command&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Tr_(Unix)&quot; rel=&quot;nofollow&quot;&gt;tr&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show directories in the PATH, one per line&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tr &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;\n&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-smi&quot;&gt;$PATH&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Chmod&quot; rel=&quot;nofollow&quot;&gt;chmod&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Remove executable bit from all files in the current directory&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
chmod -R -x+X &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Restore permission for /bin/chmod&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; 1:&lt;/span&gt;
cp /bin/ls chmod.01
cp /bin/chmod chmod.01
./chmod.01 700 file

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; 2:&lt;/span&gt;
/bin/busybox chmod 0700 /bin/chmod

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; 3:&lt;/span&gt;
setfacl --set u::rwx,g::---,o::--- /bin/chmod
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Who_(Unix)&quot; rel=&quot;nofollow&quot;&gt;who&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Find last reboot time&lt;/h6&gt;

&lt;h6&gt;Detect a user sudo-su'd into the current shell&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
[[ &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;who -m &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ print $1 }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; ]] &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;You are su-ed to &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://www.howtoforge.com/linux-last-command/&quot; rel=&quot;nofollow&quot;&gt;last&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Was the last reboot a panic?&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
(last -x -f &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;ls -1t /var/log/wtmp&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; head -2 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tail -1&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; last -x -f /var/log/wtmp) &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep -A1 reboot &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; head -2 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep -q shutdown &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Expected reboot&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;Panic reboot&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Screen&quot; rel=&quot;nofollow&quot;&gt;screen&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Start screen in detached mode&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
screen -d -m [&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;command&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Screen&quot; rel=&quot;nofollow&quot;&gt;du&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show 20 biggest directories with 'K M G'&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
du &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sort -r -n &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{split(&quot;K M G&quot;,v); s=1; while($1&amp;gt;1024){$1/=1024; s++} print int($1)&quot; &quot;v[s]&quot;\t&quot;$2}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
head -n 20
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Screen&quot; rel=&quot;nofollow&quot;&gt;inotifywait&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Init tool everytime a file in a directory is modified&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; inotifywait -r -e MODIFY dir/ &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ls dir/ &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://www.openssl.org/&quot; rel=&quot;nofollow&quot;&gt;openssl&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Testing connection to remote host&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; openssl s_client -connect google.com:443 -showcerts
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Testing connection to remote host (with SNI support)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; openssl s_client -showcerts -servername google.com -connect google.com:443
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Testing connection to remote host with specific ssl version&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
openssl s_client -tls1_2 -connect google.com:443
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Testing connection to remote host with specific ssl cipher&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
openssl s_client -cipher &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;AES128-SHA&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; -connect google.com:443
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _len: 2048, 4096&lt;/span&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _len=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;4096&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl genrsa -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;${_len}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate private key with passphrase&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _ciph: des3, aes128, aes256&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _len: 2048, 4096&lt;/span&gt;
( _ciph=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;aes128&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _len=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;4096&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl genrsa -&lt;span class=&quot;pl-smi&quot;&gt;${_ciph}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;${_len}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Remove passphrase from private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_unp=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private_unp.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl rsa -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_unp}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Encrypt existing private key with a passphrase&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _ciph: des3, aes128, aes256&lt;/span&gt;
( _ciph=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;aes128&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_pass=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private_pass.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl rsa -&lt;span class=&quot;pl-smi&quot;&gt;${_ciph}&lt;/span&gt; -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_pass}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Check private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl rsa -check -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Get public key from private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_pub=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;public.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl rsa -pubout -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_pub}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate private key + csr&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_csr=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;request.csr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _len=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;4096&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl req -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_csr}&lt;/span&gt; -new -newkey rsa:&lt;span class=&quot;pl-smi&quot;&gt;${_len}&lt;/span&gt; -nodes -keyout &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate csr&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_csr=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;request.csr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl req -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_csr}&lt;/span&gt; -new -key &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate csr (metadata from exist certificate)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_csr=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;request.csr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_crt=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cert.crt&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl x509 -x509toreq -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd_crt}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_csr}&lt;/span&gt; -signkey &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate csr with -config param&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_csr=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;request.csr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl req -new -sha256 -key &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_csr}&lt;/span&gt; \
-config &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&amp;lt;(&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;cat &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;-&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;[req]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;default_bits = 2048&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;prompt = no&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;default_md = sha256&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;req_extensions = req_ext&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;distinguished_name = dn&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;[ dn ]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;C=&amp;lt;two-letter ISO abbreviation for your country&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;ST=&amp;lt;state or province where your organization is legally located&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;L=&amp;lt;city where your organization is legally located&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;O=&amp;lt;legal name of your organization&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;OU=&amp;lt;section of the organization&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;CN=&amp;lt;fully qualified domain name&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;[ req_ext ]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;subjectAltName = @alt_names&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;[ alt_names ]&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;DNS.1 = &amp;lt;fully qualified domain name&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;DNS.2 = &amp;lt;next domain&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;DNS.3 = &amp;lt;next domain&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;List available EC curves&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
openssl ecparam -list_curves
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate ECDSA private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _curve: prime256v1, secp521r1, secp384r1&lt;/span&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _curve=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;prime256v1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl ecparam -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -name &lt;span class=&quot;pl-smi&quot;&gt;${_curve}&lt;/span&gt; -genkey )

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _curve: X25519&lt;/span&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _curve=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x25519&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl genpkey -algorithm &lt;span class=&quot;pl-smi&quot;&gt;${_curve}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Print ECDSA private and public keys&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl ec -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -noout -text )

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; For x25519 only extracting public key&lt;/span&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;private.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_pub=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;public.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl pkey -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -pubout -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_pub}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate private key with csr (ECC)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; _curve: prime256v1, secp521r1, secp384r1&lt;/span&gt;
( _fd=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;domain.com.key&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_csr=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;domain.com.csr&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _curve=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;prime256v1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; openssl ecparam -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -name &lt;span class=&quot;pl-smi&quot;&gt;${_curve}&lt;/span&gt; -genkey &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; openssl req -new -key &lt;span class=&quot;pl-smi&quot;&gt;${_fd}&lt;/span&gt; -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_csr}&lt;/span&gt; -sha256 )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Convert DER to PEM&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd_der=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cert.crt&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_pem=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cert.pem&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl x509 -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd_der}&lt;/span&gt; -inform der -outform pem -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_pem}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Convert PEM to DER&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
( _fd_der=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cert.crt&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _fd_pem=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cert.pem&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; \
openssl x509 -in &lt;span class=&quot;pl-smi&quot;&gt;${_fd_pem}&lt;/span&gt; -outform der -out &lt;span class=&quot;pl-smi&quot;&gt;${_fd_der}&lt;/span&gt; )
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Checking whether the private key and the certificate match&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
(openssl rsa -noout -modulus -in private.key &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; openssl md5 &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; openssl x509 -noout -modulus -in certificate.crt &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; openssl md5) &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://wiki.archlinux.org/index.php/Securely_wipe_disk&quot; rel=&quot;nofollow&quot;&gt;secure-delete&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Secure delete with shred&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
shred -vfuz -n 10 file
shred --verbose --random-source=/dev/urandom -n 1 /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Secure delete with scrub&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
scrub -p dod /dev/sda
scrub -p dod -r file
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Secure delete with badblocks&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
badblocks -s -w -t random -v /dev/sda
badblocks -c 10240 -s -w -t random -v /dev/sda
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Secure delete with secure-delete&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
srm -vz /tmp/file
sfill -vz /local
sdmem -v
swapoff /dev/sda5 &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sswap -vz /dev/sda5
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Dd_(Unix)&quot; rel=&quot;nofollow&quot;&gt;dd&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show dd status every so often&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dd &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;dd_params&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; status=progress
watch --interval 5 killall -USR1 dd
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Redirect output to a file with dd&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; dd of=filename
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name=&quot;user-content-http-https&quot;&gt;&lt;strong&gt;HTTP/HTTPS&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tool: &lt;a href=&quot;https://curl.haxx.se&quot; rel=&quot;nofollow&quot;&gt;curl&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -Iks https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; - show response headers only&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; - insecure connection when using ssl&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; - silent mode (not display body)&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -Iks --location -X GET -A &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x-agent&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--location&lt;/code&gt; - follow redirects&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-X&lt;/code&gt; - set method&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; - set user-agent&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
curl -Iks --location -X GET -A &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x-agent&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; --proxy http://127.0.0.1:16379 https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--proxy [socks5://|http://]&lt;/code&gt; - set proxy server&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Check DNS and HTTP trace with headers for specific domains&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## Set domains and external dns servers.&lt;/span&gt;
_domain_list=(google.com) &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; _dns_list=(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;8.8.8.8&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;1.1.1.1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)

&lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;_domain&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_domain_list[@]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;=%.0s&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; {1..48}

  &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt;

  &lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;[&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;e[1;32m+&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;e[m] resolve: %s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;n&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_domain&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

  &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;_dns&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_dns_list[@]}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Resolve domain.&lt;/span&gt;
    host &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_domain}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_dns}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt;

  &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;

  &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;_proto&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; http https &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;[&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;e[1;32m+&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;e[m] trace + headers: %s://%s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;n&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_proto&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_domain&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Get trace and http headers.&lt;/span&gt;
    curl -Iks -A &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;x-agent&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; --location &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_proto}&lt;/span&gt;://&lt;span class=&quot;pl-smi&quot;&gt;${_domain}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt;

  &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;unset&lt;/span&gt; _domain_list _dns_list
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://httpie.org/&quot; rel=&quot;nofollow&quot;&gt;httpie&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
http -p Hh https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - print request and response headers
&lt;ul&gt;&lt;li&gt;&lt;code&gt;H&lt;/code&gt; - request headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B&lt;/code&gt; - request body&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; - response headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt; - response body&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
http -p Hh --follow --max-redirects 5 --verify no https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-F, --follow&lt;/code&gt; - follow redirects&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-redirects N&lt;/code&gt; - maximum for &lt;code&gt;--follow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--verify no&lt;/code&gt; - skip SSL verification&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
http -p Hh --follow --max-redirects 5 --verify no --proxy http:http://127.0.0.1:16379 https://www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--proxy [http:]&lt;/code&gt; - set proxy server&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a name=&quot;user-content-network&quot;&gt;&lt;strong&gt;Network&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tool: &lt;a href=&quot;https://www.openssh.com/&quot; rel=&quot;nofollow&quot;&gt;ssh&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Escape Sequence&lt;/h6&gt;
&lt;pre&gt;
&lt;code&gt;# Supported escape sequences:
~.  - terminate connection (and any multiplexed sessions)
~B  - send a BREAK to the remote system
~C  - open a command line
~R  - Request rekey (SSH protocol 2 only)
~^Z - suspend ssh
~#  - list forwarded connections
~&amp;amp;  - background ssh (when waiting for connections to terminate)
~?  - this message
~~  - send the escape character by typing it twice
&lt;/code&gt;
&lt;/pre&gt;
&lt;h6&gt;Compare a remote file with a local file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh user@host cat /path/to/remotefile &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; diff /path/to/localfile -
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;SSH connection through host in the middle&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh -t reachable_host ssh unreachable_host
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Run command over ssh on remote host&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; cmd.txt &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;cat /etc/hosts&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;

ssh host -l user &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;cmd.txt&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Get public key from private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-keygen -y -f &lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt;/.ssh/id_rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Get all fingerprints&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh-keygen -l -f .ssh/known_hosts
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Ssh authentication with user password&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no user@remote_host
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Ssh authentication with publickey&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes -i id_rsa user@remote_host
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Simple recording SSH session&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;_ssh_sesslog()&lt;/span&gt; {

  _sesdir=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;lt;path/to/session/logs&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

  mkdir -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_sesdir}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; \
  ssh &lt;span class=&quot;pl-smi&quot;&gt;$@&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;2&amp;gt;&amp;amp;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tee -a &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;${_sesdir}&lt;/span&gt;/&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date +%Y%m%d&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.log&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Alias:&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;alias&lt;/span&gt; ssh=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;_ssh_sesslog&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Using Keychain for SSH logins&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## Delete all of ssh-agent's keys.&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;_scl()&lt;/span&gt; {

  /usr/bin/keychain --clear

}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## Add key to keychain.&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;_scg()&lt;/span&gt; {

  /usr/bin/keychain /path/to/private-key
  &lt;span class=&quot;pl-c1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$HOME&lt;/span&gt;/.keychain/&lt;span class=&quot;pl-smi&quot;&gt;$HOSTNAME&lt;/span&gt;-sh&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

}
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;SSH login without processing any login scripts&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ssh -tt user@host bash
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;SSH local port forwarding&lt;/h6&gt;
&lt;p&gt;Example 1:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Forwarding our local 2250 port to nmap.org:443 from localhost through localhost&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&lt;/span&gt; ssh -L 2250:nmap.org:443 localhost

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Connect to the service:&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&lt;/span&gt; curl -Iks --location -X GET https://localhost:2250
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example 2:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Forwarding our local 9051 port to db.d.x:5432 from localhost through node.d.y&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&lt;/span&gt; ssh -nNT -L 9051:db.d.x:5432 node.d.y

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Connect to the service:&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&lt;/span&gt; psql -U db_user -d db_dev -p 9051 -h localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - redirects stdin from &lt;code&gt;/dev/null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; - do not execute a remote command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt; - disable pseudo-terminal allocation&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;SSH remote port forwarding&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Forwarding our local 9051 port to db.d.x:5432 from host2 through node.d.y&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;1&amp;gt;&lt;/span&gt; ssh -nNT -R 9051:db.d.x:5432 node.d.y

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Connect to the service:&lt;/span&gt;
host&lt;span class=&quot;pl-k&quot;&gt;2&amp;gt;&lt;/span&gt; psql -U postgres -d postgres -p 8000 -h localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://www.tldp.org/LDP/abs/html/devref1.html&quot; rel=&quot;nofollow&quot;&gt;linux-dev&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Testing remote connection to port&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
timeout 1 bash -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&amp;lt;/dev/&amp;lt;proto&amp;gt;/&amp;lt;host&amp;gt;/&amp;lt;port&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;/dev/null &lt;span class=&quot;pl-k&quot;&gt;2&amp;gt;&amp;amp;1&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;$?&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;lt;proto&lt;/code&gt; - set protocol (tcp/udp)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; - set remote host&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;port&amp;gt;&lt;/code&gt; - set destination port&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Read and write to TCP or UDP sockets with common bash tools&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c1&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;5&amp;lt;&amp;gt;&lt;/span&gt;/dev/tcp/&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;host&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;/&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;port&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; cat &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;5 &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt; cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&amp;amp;5&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;5&amp;gt;&amp;amp;&lt;/span&gt;-
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://www.tcpdump.org/&quot; rel=&quot;nofollow&quot;&gt;tcpdump&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Filter incoming (on interface) traffic (specific ip:port)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ne -i eth0 -Q &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; host 192.168.252.1 and port 443
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - don't convert addresses (&lt;code&gt;-nn&lt;/code&gt; will not resolve hostnames or ports)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; - print the link-level headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i [iface|any]&lt;/code&gt; - set interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Q|-D [in|out|inout]&lt;/code&gt; - choose send/receive direction (&lt;code&gt;-D&lt;/code&gt; - for old tcpdump versions)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;host [ip|hostname]&lt;/code&gt; - set host, also &lt;code&gt;[host not]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[and|or]&lt;/code&gt; - set logic&lt;/li&gt;
&lt;li&gt;&lt;code&gt;port [1-65535]&lt;/code&gt; - set port number, also &lt;code&gt;[port not]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Filter incoming (on interface) traffic (specific ip:port) and write to a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ne -i eth0 -Q &lt;span class=&quot;pl-k&quot;&gt;in&lt;/span&gt; host 192.168.252.1 and port 443 -c 5 -w tcpdump.pcap
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-c [num]&lt;/code&gt; - capture only num number of packets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w [filename]&lt;/code&gt; - write packets to file, &lt;code&gt;-r [filename]&lt;/code&gt; - reading from file&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Capture all ICMP packets&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -nei eth0 icmp
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Check protocol used (TCP or UDP) for service&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -nei eth0 tcp port 22 -vv -X &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; egrep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;TCP|UDP&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Display ASCII text (to parse the output using grep or other)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -i eth0 -A -s0 port 443
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Grab everything between two keywords&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -i eth0 port 80 -X &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sed -n -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/username/,/=ldap/ p&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Grab user and pass ever plain http&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -i eth0  port http -l -A &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; egrep -i &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user &lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; --color=auto --line-buffered -B20
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Extract HTTP User Agent from HTTP request header&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ei eth0 -nn -A -s1500 -l &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;User-Agent:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Capture only HTTP GET and POST packets&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ei eth0 -s 0 -A -vv &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x47455420&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; or &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;tcp[((tcp[12:1] &amp;amp; 0xf0) &amp;gt;&amp;gt; 2):4] = 0x504f5354&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or simply:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ei eth0 -s 0 -v -n -l &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; egrep -i &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;POST /|GET /|Host:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Rotate capture files&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ei eth0 -w /tmp/capture-%H.pcap -G 3600 -C 200
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-G &amp;lt;num&amp;gt;&lt;/code&gt; - pcap will be created every &lt;code&gt;&amp;lt;num&amp;gt;&lt;/code&gt; seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C &amp;lt;size&amp;gt;&lt;/code&gt; - close the current pcap and open a new one if is larger than &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Top hosts by packets&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
tcpdump -ei enp0s25 -nnn -t -c 200 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; cut -f 1,2,3,4 -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;.&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq -c &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; sort -nr &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; head -n 20
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://tcpick.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;tcpick&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Analyse packets in real-time&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; tcpick -a -C -r dump.pcap &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; sleep 2 &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; clear &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://ngrep.sourceforge.net/usage.html&quot; rel=&quot;nofollow&quot;&gt;ngrep&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ngrep -d eth0 &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;www.google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; port 443
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-d [iface|any]&lt;/code&gt; - set interface&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[domain]&lt;/code&gt; - set hostname&lt;/li&gt;
&lt;li&gt;&lt;code&gt;port [1-65535]&lt;/code&gt; - set port number&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ngrep -d eth0 &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;www.google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; (host 10.240.20.2) and (port 443)
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;(host [ip|hostname])&lt;/code&gt; - filter by ip or hostname&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(port [1-65535])&lt;/code&gt; - filter by port number&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ngrep -d eth0 -qt -O ngrep.pcap &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;www.google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; port 443
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-q&lt;/code&gt; - quiet mode (only payloads)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - added timestamps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O [filename]&lt;/code&gt; - save output to file, &lt;code&gt;-I [filename]&lt;/code&gt; - reading from file&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ngrep -d eth0 -qt &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;HTTP&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;tcp&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;HTTP&lt;/code&gt; - show http headers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tcp|udp&lt;/code&gt; - set protocol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[src|dst] host [ip|hostname]&lt;/code&gt; - set direction for specific node&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
ngrep -l -q -d eth0 -i &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;User-Agent: curl*&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - stdout line buffered&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; - case-insensitive search&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://www.hping.org/&quot; rel=&quot;nofollow&quot;&gt;hping3&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
hping3 -V -p 80 -s 5050 &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;scan_type&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-V|--verbose&lt;/code&gt; - verbose mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p|--destport&lt;/code&gt; - set destination port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s|--baseport&lt;/code&gt; - set source port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;scan_type&amp;gt;&lt;/code&gt; - set scan type
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-F|--fin&lt;/code&gt; - set FIN flag, port open if no reply&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S|--syn&lt;/code&gt; - set SYN flag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-P|--push&lt;/code&gt; - set PUSH flag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A|--ack&lt;/code&gt; - set ACK flag (use when ping is blocked, RST response back if the port is open)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-U|--urg&lt;/code&gt; - set URG flag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Y|--ymas&lt;/code&gt; - set Y unused flag (0x80 - nullscan), port open if no reply&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-M 0 -UPF&lt;/code&gt; - set TCP sequence number and scan type (URG+PUSH+FIN), port open if no reply&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
hping3 -V -c 1 -1 -C 8 www.google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-c [num]&lt;/code&gt; - packet count&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt; - set ICMP mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-C|--icmptype [icmp-num]&lt;/code&gt; - set icmp type (default icmp-echo = 8)&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
hping3 -V -c 1000000 -d 120 -S -w 64 -p 80 --flood --rand-source &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;remote_host&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;--flood&lt;/code&gt; - sent packets as fast as possible (don't show replies)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rand-source&lt;/code&gt; - random source address mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d --data&lt;/code&gt; - data size&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w|--win&lt;/code&gt; - winsize (default 64)&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://nmap.org/&quot; rel=&quot;nofollow&quot;&gt;nmap&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Ping scans the network&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nmap -sP 192.168.0.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show only open ports&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nmap -F --open 192.168.0.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Full TCP port scan using with service version detection&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nmap -p 1-65535 -sV -sS -T4 192.168.0.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Nmap scan and pass output to Nikto&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nmap -p80,443 192.168.0.0/24 -oG - &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; nikto.pl -h -
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Recon specific ip:service with Nmap NSE scripts stack&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Set variables:&lt;/span&gt;
_hosts=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;192.168.250.10&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
_ports=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;80,443&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Set Nmap NSE scripts stack:&lt;/span&gt;
_nmap_nse_scripts=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;+dns-brute,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-auth-finder,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-chrono,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-cookie-flags,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-cors,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-cross-domain-policy,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-csrf,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-dombased-xss,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-enum,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-errors,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-git,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-grep,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-internal-ip-disclosure,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-jsonp-detection,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-malware-host,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-methods,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-passwd,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-phpself-xss,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-php-version,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-robots.txt,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-sitemap-generator,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-shellshock,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-stored-xss,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-title,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-unsafe-output-escaping,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-useragent-tester,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-vhosts,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-waf-detect,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-waf-fingerprint,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +http-xssed,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +traceroute-geolocation.nse,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +ssl-enum-ciphers,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +whois-domain,&lt;span class=&quot;pl-cce&quot;&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;                   +whois-ip&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Set Nmap NSE script params:&lt;/span&gt;
_nmap_nse_scripts_args=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dns-brute.domain=&lt;span class=&quot;pl-smi&quot;&gt;${_hosts}&lt;/span&gt;,http-cross-domain-policy.domain-lookup=true,http-waf-detect.aggro,http-waf-detect.detectBodyChanges,http-waf-fingerprint.intensive=1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Perform scan:&lt;/span&gt;
nmap --script=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_nmap_nse_scripts&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; --script-args=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_nmap_nse_scripts_args&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_ports&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_hosts&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://netcat.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;netcat&lt;/a&gt;&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nc -kl 5000
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - listen for an incoming connection&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k&lt;/code&gt; - listening after client has disconnected&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;filename.out&lt;/code&gt; - save receive data to file (optional)&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nc 192.168.0.1 5051 &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt; filename.in
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;lt; filename.in&lt;/code&gt; - send data to remote host&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nc -vz 10.240.30.3 5000
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - verbose output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; - scan for listening daemons&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
nc -vzu 10.240.30.3 1-65535
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; - scan only udp ports&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Transfer data file (archive)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
server&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; nc -l 5000 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tar xzvfp -
client&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; tar czvfp - /path/to/dir &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; nc 10.240.30.3 5000
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Launch remote shell&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
server&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; nc -l 5000 -e /bin/bash
client&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; nc 10.240.30.3 5000
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Simple file server&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; nc -l 5000 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tar -xvf - &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Simple minimal HTTP Server&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; nc -l -p 1500 -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;echo -e &quot;HTTP/1.1 200 OK\n\n $(date)&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Simple HTTP Server&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;Restarts web server after each request - remove &lt;code&gt;while&lt;/code&gt; condition for only single connection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
cat &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; index.html &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        &amp;lt;meta name=&quot;description&quot; content=&quot;&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;      Hello! It's a site.&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;    &amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-k&quot;&gt;__EOF__&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
server&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; \
(echo -ne &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;HTTP/1.1 200 OK\r\nContent-Length: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;wc -c &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;index.html&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;\r\n\r\n&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; cat index.html&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
nc -l -p 5000 \
&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - port number&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Simple HTTP Proxy (single connection)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#!&lt;/span&gt;/usr/bin/env bash&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;pl-smi&quot;&gt;$#&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;!=&lt;/span&gt; 2 ]] &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;%s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;n&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; \
         &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;usage: ./nc-proxy listen-port bk_host:bk_port&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;fi&lt;/span&gt;

_listen_port=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
_bk_host=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;echo &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; cut -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -f1&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
_bk_port=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;echo &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; cut -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -f2&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;  lport: %s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;nbk_host: %s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;nbk_port: %s&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;n&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;n&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; \
       &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_listen_port&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_bk_host&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_bk_port&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

_tmp=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;mktemp -d&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
_back=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_tmp&lt;/span&gt;/pipe.back&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
_sent=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_tmp&lt;/span&gt;/pipe.sent&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
_recv=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_tmp&lt;/span&gt;/pipe.recv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c1&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;rm -rf &quot;$_tmp&quot;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; EXIT

mkfifo -m 0600 &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_back&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_sent&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_recv&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

sed &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;s/^/=&amp;gt; /&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_sent&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;
sed &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;s/^/&amp;lt;=  /&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_recv&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&lt;/span&gt;

nc -l -p &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_listen_port&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_back&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
tee &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_sent&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
nc &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_bk_host&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_bk_port&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
tee &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_recv&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;$_back&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
server&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; chmod +x nc-proxy &lt;span class=&quot;pl-k&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./nc-proxy 8080 192.168.252.10:8000
  lport: 8080
bk_host: 192.168.252.10
bk_port: 8000

client&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; http -p h 10.240.30.3:8080
HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: max-age=31536000
Content-Length: 2748
Content-Type: text/html&lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; charset=utf-8
Date: Sun, 01 Jul 2018 20:12:08 GMT
Last-Modified: Sun, 01 Apr 2018 21:53:37 GMT
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Create a single-use TCP or UDP proxy&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## TCP -&amp;gt; TCP&lt;/span&gt;
nc -l -p 2000 -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nc [ip|hostname] 3000&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## TCP -&amp;gt; UDP&lt;/span&gt;
nc -l -p 2000 -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nc -u [ip|hostname] 3000&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## UDP -&amp;gt; UDP&lt;/span&gt;
nc -l -u -p 2000 -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nc -u [ip|hostname] 3000&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;## UDP -&amp;gt; TCP&lt;/span&gt;
nc -l -u -p 2000 -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;nc [ip|hostname] 3000&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://gnutls.org/manual/html_node/gnutls_002dcli-Invocation.html&quot; rel=&quot;nofollow&quot;&gt;gnutls-cli&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Testing connection to remote host (with SNI support)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
gnutls-cli -p 443 google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Testing connection to remote host (without SNI support)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
gnutls-cli --disable-sni -p 443 google.com
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://www.dest-unreach.org/socat/doc/socat.html&quot; rel=&quot;nofollow&quot;&gt;socat&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Testing remote connection to port&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
socat - TCP4:10.240.30.3:22
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;-&lt;/code&gt; - standard input (STDIO)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TCP4:&amp;lt;params&amp;gt;&lt;/code&gt; - set tcp4 connection with specific params
&lt;ul&gt;&lt;li&gt;&lt;code&gt;[hostname|ip]&lt;/code&gt; - set hostname/ip&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[1-65535]&lt;/code&gt; - set port number&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h6&gt;Redirecting TCP-traffic to a UNIX domain socket under Linux&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
socat TCP-LISTEN:1234,bind=127.0.0.1,reuseaddr,fork,su=nobody,range=127.0.0.0/8 UNIX-CLIENT:/tmp/foo
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;TCP-LISTEN:&amp;lt;params&amp;gt;&lt;/code&gt; - set tcp listen with specific params
&lt;ul&gt;&lt;li&gt;&lt;code&gt;[1-65535]&lt;/code&gt; - set port number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bind=[hostname|ip]&lt;/code&gt; - set bind hostname/ip&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reuseaddr&lt;/code&gt; - allows other sockets to bind to an address&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fork&lt;/code&gt; - keeps the parent process attempting to produce more connections&lt;/li&gt;
&lt;li&gt;&lt;code&gt;su=nobody&lt;/code&gt; - set user&lt;/li&gt;
&lt;li&gt;&lt;code&gt;range=[ip-range]&lt;/code&gt; - ip range&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNIX-CLIENT:&amp;lt;params&amp;gt;&lt;/code&gt; - communicates with the specified peer socket
&lt;ul&gt;&lt;li&gt;&lt;code&gt;filename&lt;/code&gt; - define socket&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Lsof&quot; rel=&quot;nofollow&quot;&gt;lsof&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Show process that use internet connection at the moment&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -P -i -n
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show process that use specific port number&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -i tcp:443
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Lists all listening ports together with the PID of the associated process&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -Pan -i tcp -i udp
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;List all open ports and their owning executables&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -i -P &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep -i &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;listen&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show all open ports&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -Pnl -i
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show open ports (LISTEN)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -Pni4 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; grep LISTEN &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; column -t
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;List all files opened by a particular command&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -c &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;process&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;View user activity per directory&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof -u username -a +D /etc
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show 10 largest open files&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
lsof / &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ if($7 &amp;gt; 1048576) print $7/1048576 &quot;MB&quot; &quot; &quot; $9 &quot; &quot; $1 }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sort -n -u &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; tail &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; column -t
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Netstat&quot; rel=&quot;nofollow&quot;&gt;netstat&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Graph # of connections for each hosts&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
netstat -an &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
grep ESTABLISHED &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{print $5}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk -F: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{print $1}&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
grep -v -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;^[[:space:]]*$&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sort &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; uniq -c &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{ printf(&quot;%s\t%s\t&quot;,$2,$1) ; for (i = 0; i &amp;lt; $1; i++) {printf(&quot;*&quot;)}; print &quot;&quot; }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Monitor open connections for specific port including listen, count and sort it per IP&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
watch &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;netstat -plan | grep :443 | awk {'print &lt;span class=&quot;pl-cce&quot;&gt;\$&lt;/span&gt;5'} | cut -d: -f 1 | sort | uniq -c | sort -nk 1&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Rsync&quot; rel=&quot;nofollow&quot;&gt;rsync&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Rsync remote data as root using sudo&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
rsync --rsync-path &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;sudo rsync&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; username@hostname:/path/to/dir/ /local/
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Host_(Unix)&quot; rel=&quot;nofollow&quot;&gt;host&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Resolves the domain name (using external dns server)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
host google.com 9.9.9.9
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Checks the domain administrator (SOA record)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
host -t soa google.com 9.9.9.9
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://en.wikipedia.org/wiki/Dig_(command)&quot; rel=&quot;nofollow&quot;&gt;dig&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Resolves the domain name (short output)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig google.com +short
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Lookup NS record for specific domain&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig @9.9.9.9 google.com NS
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Query only answer section&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig google.com +nocomments +noquestion +noauthority +noadditional +nostats
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Query ALL DNS Records&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig google.com ANY +noall +answer
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;DNS Reverse Look-up&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
dig -x 172.217.16.14 +short
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://certbot.eff.org/&quot; rel=&quot;nofollow&quot;&gt;certbot&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Generate multidomain certificate&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
certbot certonly -d example.com -d www.example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate wildcard certificate&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
certbot certonly --manual --preferred-challenges=dns -d example.com -d &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;.example.com
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Generate certificate with 4096 bit private key&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
certbot certonly -d example.com -d www.example.com --rsa-key-size 4096
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;https://github.com/trimstray/the-book-of-secret-knowledge#tool-network-other&quot;&gt;network-other&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Get all subnets for specific AS (Autonomous system)&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
AS=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;AS32934&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
whois -h whois.radb.net -- &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;-i origin &lt;span class=&quot;pl-smi&quot;&gt;${AS}&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
grep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;^route:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
cut -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -f2 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sed -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/^[ \t]//&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sort -n -t &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; -k 1,1 -k 2,2 -k 3,3 -k 4,4 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
cut -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; -f2 &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sed -e &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/^[ \t]/allow /&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sed &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/$/;/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; \
sed &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;s/allow  */subnet -&amp;gt; /g&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Resolves domain name from dns.google.com with curl and jq&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
_dname=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;google.com&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;;&lt;/span&gt; curl -s &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://dns.google.com/resolve?name=&lt;span class=&quot;pl-smi&quot;&gt;${_dname}&lt;/span&gt;&amp;amp;type=A&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;|&lt;/span&gt; jq &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name=&quot;user-content-programming&quot;&gt;&lt;strong&gt;Programming&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tool: &lt;a href=&quot;https://www.python.org/&quot; rel=&quot;nofollow&quot;&gt;python&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Static HTTP web server&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3.x&lt;/span&gt;
python3 -m http.server 8000 --bind 127.0.0.1

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 2.x&lt;/span&gt;
python -m SimpleHTTPServer 8000
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Static HTTP web server with SSL support&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Python 3.x&lt;/span&gt;
from http.server import HTTPServer, BaseHTTPRequestHandler
import ssl


httpd = HTTPServer&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;((&lt;/span&gt;'localhost'&lt;span class=&quot;pl-k&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;4443&lt;/span&gt;)&lt;span class=&quot;pl-k&quot;&gt;,&lt;/span&gt; BaseHTTPRequestHandler)&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;httpd.socket = ssl.wrap_socket (httpd.socket,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        keyfile=&quot;path/to/key.pem&quot;,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        certfile='path/to/cert.pem', server_side=True)&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;httpd.serve_forever()&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;# Python &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;.x&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;import BaseHTTPServer, SimpleHTTPServer&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;import ssl&lt;/span&gt;


&lt;span class=&quot;pl-s&quot;&gt;httpd = BaseHTTPServer.HTTPServer(('localhost', &lt;span class=&quot;pl-c1&quot;&gt;4443&lt;/span&gt;),&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        SimpleHTTPServer.SimpleHTTPRequestHandler)&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;httpd.socket = ssl.wrap_socket (httpd.socket,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        keyfile=&quot;path/tp/key.pem&quot;,&lt;/span&gt;
&lt;span class=&quot;pl-s&quot;&gt;        certfile='path/to/cert.pem', server_side=True)&lt;/span&gt;

&lt;span class=&quot;pl-s&quot;&gt;httpd.serve_forever()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Tool: &lt;a href=&quot;http://www.grymoire.com/Unix/Awk.html&quot; rel=&quot;nofollow&quot;&gt;awk&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Remove duplicate entries in a file without sorting&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;!x[$0]++&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; filename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Exclude multiple columns using AWK&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;{$1=$3=&quot;&quot;}1&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; filename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Get the last hour of Apache logs&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
awk &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date -d &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;1 hours ago&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;+%d&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;/%b&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;/%Y:%H:%M&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/,/&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;date &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;+%d&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;/%b&lt;span class=&quot;pl-cce&quot;&gt;\\&lt;/span&gt;/%Y:%H:%M&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;/ { print $0 }&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; /var/log/httpd/access_log
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://www.grymoire.com/Unix/Sed.html&quot; rel=&quot;nofollow&quot;&gt;sed&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;To print a specific line from a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sed -n 10p /path/to/file
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Remove a specific line from a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sed -i 10d /path/to/file
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; alternative (BSD): sed -i'' 10d /path/to/file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Remove a range of lines from a file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
sed -i &lt;span class=&quot;pl-k&quot;&gt;&amp;lt;&lt;/span&gt;file&lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; -re &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&amp;lt;start&amp;gt;,&amp;lt;end&amp;gt;d&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;&lt;h5&gt;Tool: &lt;a href=&quot;http://www.grymoire.com/Unix/Grep.html&quot; rel=&quot;nofollow&quot;&gt;grep&lt;/a&gt;&lt;/h5&gt;
&lt;h6&gt;Search for a &quot;pattern&quot; inside all files in the current directory&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grep -rn &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pattern&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
grep -RnisI &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pattern&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;
fgrep &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;pattern&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; -R
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Remove blank lines from a file and save output to new file&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grep &lt;span class=&quot;pl-c1&quot;&gt;.&lt;/span&gt; filename &lt;span class=&quot;pl-k&quot;&gt;&amp;gt;&lt;/span&gt; newfilename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Except multiple patterns&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grep -vE &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;(error|critical|warning)&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; filename
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show data from file without comments&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
grep -v ^[[:space:]]&lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Show data from file without comments and new lines&lt;/h6&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
egrep -v &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;#|^$&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; filename
&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Sun, 17 Feb 2019 17:17:53 +0000</pubDate>
<dc:creator>trimstray</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/31127917?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>trimstray/the-book-of-secret-knowledge</og:title>
<og:url>https://github.com/trimstray/the-book-of-secret-knowledge</og:url>
<og:description>:star: A collection of awesome lists, manuals, blogs, hacks, one-liners, cli/web tools and more. - trimstray/the-book-of-secret-knowledge</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/trimstray/the-book-of-secret-knowledge</dc:identifier>
</item>
<item>
<title>You probably don&amp;#039;t need a single-page app</title>
<link>https://journal.plausible.io/you-probably-dont-need-a-single-page-app</link>
<guid isPermaLink="true" >https://journal.plausible.io/you-probably-dont-need-a-single-page-app</guid>
<description>&lt;time datetime=&quot;2019-01-29&quot; class=&quot;article_time&quot;&gt;January 29, 2019&lt;/time&gt;&lt;p&gt;The meteoric rise of front-end frameworks like React, Angular, Vue.js, Elm, etc. has made single-page applications ubiquitous on the web. For many developers, these have become part of their ‘default’ toolset. When they start a new project, they grab the tools they know already: a REST API on the backend, and a React/Angular/Vue/Elm frontend.&lt;/p&gt;
&lt;p&gt;Is there something wrong with these tools? Absolutely not. In fact, I love working with them. However, I would only choose this architecture when an actual requirement is pushing me in that direction. If there are no specific reasons to build a single-page application, I will go with a traditional server-rendered architecture every day of the week. It is simpler and allows you to move faster:&lt;/p&gt;
&lt;ul readability=&quot;15.299712849964&quot;&gt;&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Stateless requests&lt;/strong&gt;&lt;br/&gt;Traditional web servers are built to be stateless. This means that each endpoint can be reasoned about and tested in isolation. SPAs, by contrast, have to explicitly define how all state is loaded, refreshed, and discarded by the frontend during the whole session. This introduces new caching/synchronization problems that just don’t exist in the server-rendered world.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;The browser knows how to deal with a traditional architecture&lt;/strong&gt;&lt;br/&gt;If you go with the SPA route, you’ll always need extra code to emulate trivial browser features. I’ve spent many hours making sure that browser history is managed just right, that the loading animation looks smooth, restoring the scroll position when the user navigates through history, etc. It’s a mess.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;10.507462686567&quot;&gt;
&lt;p&gt;&lt;strong&gt;Fewer, more mature tools&lt;/strong&gt;&lt;br/&gt;Frameworks like Rails, Phoenix, Laravel, etc. have been around for a while and they are very stable. I learned Rails about 5 years ago and my knowledge is still completely relevant. Around the same time, I also learned Gulp, CoffeeScript, BackboneJS, and SASS, all of which have been superseded by newer tools. Avoid the &lt;a href=&quot;https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4&quot;&gt;Javascript fatigue&lt;/a&gt; by not relying so much on Javascript!&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;SEO for free&lt;/strong&gt;&lt;br/&gt;Single-page apps have to add extra infrastructure and code to make sure they can be indexed by crawlers. If you need SEO on your dynamic pages, it’s much easier to accomplish with a server-rendered architecture.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;All of this means that single-page applications impose more complexity and cognitive load on the developers. In my experience as a developer, complexity and cognitive load are the single biggest factors in software bugs and development slowdown.&lt;/p&gt;
&lt;h3 id=&quot;when-to-go-for-the-single-page-app_3&quot;&gt;&lt;a class=&quot;head_anchor&quot; href=&quot;https://journal.plausible.io/you-probably-dont-need-a-single-page-app#when-to-go-for-the-single-page-app_3&quot;&gt; &lt;/a&gt;When to go for the single page app&lt;/h3&gt;
&lt;p&gt;As I said, the default choice in most cases should be the traditional server-rendered application. However, there are some requirements that might &lt;em&gt;force&lt;/em&gt; you to opt for the single-page application architecture:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core functionality is real-time (e.g Slack)&lt;/li&gt;
&lt;li&gt;Rich UI interactions are core to the product (e.g Trello)&lt;/li&gt;
&lt;li&gt;Lots of state shared between screens (e.g. Spotify)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These products absolutely have to use a single-page architecture to work properly. This is why it’s the right choice for these companies. However, many web-based products do not have these requirements and this complexity can be avoided.&lt;/p&gt;
&lt;h3 id=&quot;hybrid-solutions_3&quot;&gt;&lt;a class=&quot;head_anchor&quot; href=&quot;https://journal.plausible.io/you-probably-dont-need-a-single-page-app#hybrid-solutions_3&quot;&gt; &lt;/a&gt;Hybrid solutions&lt;/h3&gt;
&lt;p&gt;Even if your app needs some real-time capabilities or rich interactions, you don’t need to use the SPA paradigm for your whole app. A great approach is to embed small frontend applications into a traditional architecture.&lt;/p&gt;
&lt;p&gt;Github uses this hybrid approach. The backbone of their website is a traditional rails app but some areas, like the projects tab, are built as embedded frontend applications. It’s a beautiful solution that combines the best of both worlds. The great thing is that you can start simple and gradually add more complex UI interactions with this approach.&lt;/p&gt;
&lt;p&gt;I believe that my current project, &lt;a href=&quot;https://plausible.io/&quot;&gt;Plausible&lt;/a&gt;, will evolve in this direction. The main UI of the app will need rich interactions in the future, but the rest of the app can stay with the server-rendered architecture.&lt;/p&gt;
&lt;h3 id=&quot;it-all-comes-down-to-tradeoffs_3&quot;&gt;&lt;a class=&quot;head_anchor&quot; href=&quot;https://journal.plausible.io/you-probably-dont-need-a-single-page-app#it-all-comes-down-to-tradeoffs_3&quot;&gt; &lt;/a&gt;It all comes down to tradeoffs&lt;/h3&gt;
&lt;p&gt;As with everything in programming, there isn’t a single answer in the SPA vs traditional architecture dilemma. There are cases where it makes sense to go with a SPA because you need a snappy, real-time UI. However, we should recognize that this comes at a cost to the development speed. And if a single-page app is not a requirement, we can avoid the additional complexity and move much quicker by going the traditional route.&lt;/p&gt;
&lt;p&gt;Picking the right architecture for the job makes a huge difference in productivity, and ultimately, success. We should aim to have both architectures in our toolbox, so we can use the optimal solution in each case.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;This blog documents the journey of building &lt;a href=&quot;https://plausible.io/&quot;&gt;Plausible&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://www.subscribepage.com/plausible&quot;&gt;&lt;strong&gt;Get notified of new posts →&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;1,040&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;


&lt;p&gt;1,040&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;
</description>
<pubDate>Sun, 17 Feb 2019 14:03:26 +0000</pubDate>
<dc:creator>ukutaht</dc:creator>
<og:title>You probably don't need a single-page application • The Plausible journal</og:title>
<og:type>article</og:type>
<og:description>The meteoric rise of front-end frameworks like React, Angular, Vue.js, Elm, etc. has made single-page applications ubiquitous on the web. For many developers, these have become part of their ‘default’ toolset. When they start a new project, they... | The Plausible journal | The journey of building plausible.io</og:description>
<og:image>[]</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://journal.plausible.io/you-probably-dont-need-a-single-page-app</dc:identifier>
</item>
<item>
<title>Hexagonal Grids (2013)</title>
<link>https://www.redblobgames.com/grids/hexagons/</link>
<guid isPermaLink="true" >https://www.redblobgames.com/grids/hexagons/</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;h2 id=&quot;coordinates&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates&quot;&gt;#&lt;/a&gt;Coordinate Systems&lt;/h2&gt;
&lt;p&gt;Now let's assemble hexagons into a grid. With square grids, there's one obvious way to do it. With hexagons, there are multiple approaches. I like cube coordinates for algorithms and axial or doubled for storage.&lt;/p&gt;
&lt;h3 id=&quot;coordinates-offset&quot;&gt;Offset coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates-offset&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The most common approach is to offset every other column or row. Columns are named &lt;code&gt;col&lt;/code&gt; (&lt;code class=&quot;q&quot;&gt;q&lt;/code&gt;). Rows are named &lt;code&gt;row&lt;/code&gt; (&lt;code class=&quot;r&quot;&gt;r&lt;/code&gt;). You can either offset the odd or the even column/rows, so the horizontal and vertical hexagons each have two variants.&lt;/p&gt;
&lt;p&gt;0, 00, 10, 20, 30, 40, 50, 61, 01, 11, 21, 31, 41, 51, 62, 02, 12, 22, 32, 42, 52, 63, 03, 13, 23, 33, 43, 53, 64, 04, 14, 24, 34, 44, 54, 65, 05, 15, 25, 35, 45, 55, 66, 06, 16, 26, 36, 46, 56, 6 “odd-r” horizontal layout&lt;br/&gt;shoves odd rows right0, 00, 10, 20, 30, 40, 50, 61, 01, 11, 21, 31, 41, 51, 62, 02, 12, 22, 32, 42, 52, 63, 03, 13, 23, 33, 43, 53, 64, 04, 14, 24, 34, 44, 54, 65, 05, 15, 25, 35, 45, 55, 66, 06, 16, 26, 36, 46, 56, 6 “even-r” horizontal layout&lt;br/&gt;shoves even rows right0, 00, 10, 20, 30, 40, 51, 01, 11, 21, 31, 41, 52, 02, 12, 22, 32, 42, 53, 03, 13, 23, 33, 43, 54, 04, 14, 24, 34, 44, 55, 05, 15, 25, 35, 45, 56, 06, 16, 26, 36, 46, 57, 07, 17, 27, 37, 47, 5 “odd-q” vertical layout&lt;br/&gt;shoves odd columns down0, 00, 10, 20, 30, 40, 51, 01, 11, 21, 31, 41, 52, 02, 12, 22, 32, 42, 53, 03, 13, 23, 33, 43, 54, 04, 14, 24, 34, 44, 55, 05, 15, 25, 35, 45, 56, 06, 16, 26, 36, 46, 57, 07, 17, 27, 37, 47, 5 “even-q” vertical layout&lt;br/&gt;shoves even columns down&lt;/p&gt;
&lt;h3 id=&quot;coordinates-cube&quot;&gt;Cube coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates-cube&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;float-container&quot; readability=&quot;17.874647887324&quot;&gt;
&lt;div readability=&quot;30.885880077369&quot;&gt;
&lt;p&gt;Another way to look at hexagonal grids is to see that there are &lt;em&gt;three&lt;/em&gt; primary axes, unlike the &lt;em&gt;two&lt;/em&gt; we have for square grids. There's an elegant symmetry with these.&lt;/p&gt;
&lt;p&gt;Let's take a cube grid and &lt;strong&gt;slice&lt;/strong&gt; out a diagonal plane at &lt;code&gt;&lt;span class=&quot;q&quot;&gt;x&lt;/span&gt; + &lt;span class=&quot;s&quot;&gt;y&lt;/span&gt; + &lt;span class=&quot;r&quot;&gt;z&lt;/span&gt; = 0&lt;/code&gt;. This is a &lt;em&gt;weird&lt;/em&gt; idea but it helps us make hex grid algorithms simpler. In particular, we can reuse standard operations from cartesian coordinates: adding coordinates, subtracting coordinates, multiplying or dividing by a scalar, and distances.&lt;/p&gt;
&lt;p&gt;Notice the three six hex grid directions are halfway between two of the cube axes. We'll see this in the &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors&quot;&gt;neighbors&lt;/a&gt; section, where moving along one of the six hex grid directions involves changing &lt;em&gt;two&lt;/em&gt; of the coordinates.&lt;/p&gt;
&lt;p&gt;Because we already have algorithms for square and cube grids, using cube coordinates allows us to adapt those algorithms to hex grids. I will be using this system for most of the algorithms on the page. To use the algorithms with another coordinate system, I'll &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#conversions&quot;&gt;convert to cube coordinates&lt;/a&gt;, run the algorithm, and convert back.&lt;/p&gt;
&lt;/div&gt;
+z-x+y-z+x-y&lt;br/&gt;&lt;button&gt;Switch to hexagons&lt;/button&gt;&lt;/div&gt;
&lt;div class=&quot;float-container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;Study how the cube coordinates work on the hex grid. Selecting the hexes will highlight the cube coordinates corresponding to the three axes.&lt;/p&gt;
-30+3-3+1+2-3+2+1-3+30-2-1+3-20+2-2+1+1-2+20-2+3-1-1-2+3-1-1+2-10+1-1+10-1+2-1-1+3-20-3+30-2+20-1+1xzy0+1-10+2-20+3-3+1-3+2+1-2+1+1-10+10-1+1+1-2+1+2-3+2-3+1+2-20+2-1-1+20-2+2+1-3+3-30+3-2-1+3-1-2+30-3 +x +z +y -x -z -y flat pointy&lt;ol&gt;&lt;li&gt;Each direction on the cube grid corresponds to a &lt;em&gt;line&lt;/em&gt; on the hex grid. Try highlighting a hex with &lt;code class=&quot;z-axis&quot;&gt;z&lt;/code&gt; at 0, 1, 2, 3 to see how these are related. The row is marked in blue. Try the same for &lt;code class=&quot;q&quot;&gt;x&lt;/code&gt; (green) and &lt;code class=&quot;s&quot;&gt;y&lt;/code&gt; (purple).&lt;/li&gt;
&lt;li&gt;Each direction on the hex grid is a combination of &lt;em&gt;two&lt;/em&gt; directions on the cube grid. For example, &lt;span class=&quot;orientation-northwest-north&quot;&gt;northwest&lt;/span&gt; on the hex grid lies between the &lt;code class=&quot;y-axis&quot;&gt;+y&lt;/code&gt; and &lt;code class=&quot;z-axis&quot;&gt;-z&lt;/code&gt;, so every step &lt;span class=&quot;orientation-northwest-north&quot;&gt;northwest&lt;/span&gt; involves adding 1 to &lt;code class=&quot;y-axis&quot;&gt;y&lt;/code&gt; and subtracting 1 from &lt;code class=&quot;z-axis&quot;&gt;z&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;p&gt;The cube coordinates are a reasonable choice for a hex grid coordinate system. The constraint is that &lt;code&gt;x + y + z = 0&lt;/code&gt; so the algorithms must preserve that. The constraint also ensures that there's a canonical coordinate for each hex.&lt;/p&gt;
&lt;p&gt;There are &lt;em&gt;many&lt;/em&gt; different valid cube hex coordinate systems. Some of them have constraints other than &lt;code&gt;x + y + z = 0&lt;/code&gt;. I've shown only one of the many systems. You can also construct cube coordinates with &lt;code&gt;x-y, y-z, z-x&lt;/code&gt;, and that has its own set of interesting properties, which I don't explore here.&lt;/p&gt;
&lt;p&gt;&quot;But Amit!&quot; you say, &quot;I don't want to store 3 numbers for coordinates. I don't know how to store a map that way.&quot;&lt;/p&gt;
&lt;div class=&quot;float-container&quot; readability=&quot;23.790087463557&quot;&gt;
&lt;div readability=&quot;14.96062992126&quot;&gt;
&lt;h3 id=&quot;coordinates-axial&quot;&gt;Axial coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates-axial&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The axial coordinate system, sometimes called “trapezoidal” or “oblique” or “skewed”, is built by taking two of the three coordinates from a cube coordinate system. Since we have a constraint &lt;code&gt;&lt;span class=&quot;q&quot;&gt;x&lt;/span&gt; + &lt;span class=&quot;s&quot;&gt;y&lt;/span&gt; + &lt;span class=&quot;r&quot;&gt;z&lt;/span&gt; = 0&lt;/code&gt;, there's some redundancy, and we don't need to store all three coordinates. This diagram is the same as the previous one, except I don't show &lt;code class=&quot;s&quot;&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
-30-3+1-3+2-3+3-2-1-20-2+1-2+2-2+3-1-2-1-1-10-1+1-1+2-1+30-30-20-1qr0+10+20+3+1-3+1-2+1-1+10+1+1+1+2+2-3+2-2+2-1+20+2+1+3-3+3-2+3-1+30 +q +r -q -r flat pointy&lt;div readability=&quot;26.642599277978&quot;&gt;
&lt;p&gt;There are many choices of cube coordinate system, and many choices of axial coordinate system. I'm not going to show all of the combinations in this guide. I've chosen &lt;code class=&quot;q&quot;&gt;q&lt;/code&gt; for &quot;column&quot; = &lt;code class=&quot;q&quot;&gt;x&lt;/code&gt; and &lt;code class=&quot;r&quot;&gt;r&lt;/code&gt; as &quot;row&quot; = &lt;code class=&quot;r&quot;&gt;z&lt;/code&gt;. This choice is arbitary, as you can rotate and flip the diagrams to make many different assignments of ±x,±y,±z to q,r.&lt;/p&gt;
&lt;p&gt;The advantage of this system over offset grids is that the algorithms are cleaner when you can use add, subtract, multiply, and divide on hex coordinates. The disadvantage of this system is that storing a rectangular map is a little weird; see the &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#map-storage&quot;&gt;map storage&lt;/a&gt; section for ways to handle that. In my projects, I name the axes &lt;code class=&quot;q&quot;&gt;q&lt;/code&gt;, &lt;code class=&quot;r&quot;&gt;r&lt;/code&gt;, &lt;code class=&quot;s&quot;&gt;s&lt;/code&gt; so that I have the constraint &lt;code&gt;q + r + s = 0&lt;/code&gt;, and then I can calculate &lt;code&gt;s = -q - r&lt;/code&gt; when I need the third coordinate for algorithms that work better with cube coordinates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;coordinates-doubled&quot;&gt;Doubled coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates-doubled&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;float-container&quot; readability=&quot;122.21254355401&quot;&gt;
&lt;p&gt;Although I recommend axial/cube coordinates, if you are sticking to offset coordinates, consider the doubled variant. It makes many of the algorithms easier to implement. Instead of alternation, the doubled coordinates &lt;em&gt;double&lt;/em&gt; either the horizontal or vertical step size. It has a constraint &lt;code&gt;(&lt;span class=&quot;q&quot;&gt;col&lt;/span&gt; + &lt;span class=&quot;r&quot;&gt;row&lt;/span&gt;) % 2 == 0&lt;/code&gt;. In the horizontal (pointy top hex) layout it increases the column by 2 each hex; in the vertical (flat top hex) layout it increases the row by 2 each hex. This allows the in-between values for the hexes that are halfway in between:&lt;/p&gt;
&lt;p&gt;0, 02, 04, 06, 08, 010, 012, 01, 13, 15, 17, 19, 111, 113, 10, 22, 24, 26, 28, 210, 212, 21, 33, 35, 37, 39, 311, 313, 30, 42, 44, 46, 48, 410, 412, 41, 53, 55, 57, 59, 511, 513, 50, 62, 64, 66, 68, 610, 612, 6 “double-width” horizontal layout&lt;br/&gt;doubles column values0, 00, 20, 40, 60, 80, 101, 11, 31, 51, 71, 91, 112, 02, 22, 42, 62, 82, 103, 13, 33, 53, 73, 93, 114, 04, 24, 44, 64, 84, 105, 15, 35, 55, 75, 95, 116, 06, 26, 46, 66, 86, 107, 17, 37, 57, 77, 97, 11 “double-height” horizontal layout&lt;br/&gt;doubles row values&lt;/p&gt;
&lt;p&gt;I haven't found much information about this system — tri-bit.com called it &lt;a href=&quot;http://web.archive.org/web/20090205120106/http://sc.tri-bit.com/Hex_Grids&quot;&gt;interlaced&lt;/a&gt;&lt;sup class=&quot;print-endnote&quot;&gt;[5]&lt;/sup&gt;, rot.js calls it &lt;a href=&quot;http://ondras.github.io/rot.js/manual/#hex/indexing&quot;&gt;double width&lt;/a&gt;&lt;sup class=&quot;print-endnote&quot;&gt;[6]&lt;/sup&gt;, and &lt;a href=&quot;https://www.researchgate.net/publication/235779843_Storage_and_addressing_scheme_for_practical_hexagonal_image_processing?_sg=flKEA6rk1KmOpC4LBjQJN_-NBuiR1KJtJt-XeYRXnd0z_MNUrB2gjb2FKV3iBoKg988P2xHCpQ&quot;&gt;this paper&lt;/a&gt;&lt;sup class=&quot;print-endnote&quot;&gt;[7]&lt;/sup&gt; calls it rectangular. Other possible names: brick or checkerboard. I'm not sure what to call it. Tamás Kenéz sent me the core algorithms (neighbors, distances, etc.). If you have any references, please send them to me.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;coordinates-comparison&quot;&gt;Comparison&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#coordinates-comparison&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What do I recommend?&lt;/p&gt;
&lt;table class=&quot;grid-comparison&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th/&gt;
&lt;th&gt;Offset&lt;/th&gt;
&lt;th&gt;Doubled&lt;/th&gt;
&lt;th&gt;Axial&lt;/th&gt;
&lt;th&gt;Cube&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Pointy rotation&lt;/th&gt;
&lt;td&gt;evenr, oddr&lt;/td&gt;
&lt;td&gt;doublewidth&lt;/td&gt;
&lt;td rowspan=&quot;2&quot;&gt;axial&lt;/td&gt;
&lt;td rowspan=&quot;2&quot;&gt;cube&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Flat rotation&lt;/th&gt;
&lt;td&gt;evenq, oddq&lt;/td&gt;
&lt;td&gt;doubleheight&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Other rotations&lt;/th&gt;
&lt;td colspan=&quot;2&quot;&gt;no&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;yes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Vector operations (add, subtract, scale)&lt;/th&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Array storage&lt;/th&gt;
&lt;td&gt;rectangular&lt;/td&gt;
&lt;td&gt;no&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;rhombus&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;no&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Hash storage&lt;/th&gt;
&lt;td colspan=&quot;2&quot;&gt;any shape&lt;/td&gt;
&lt;td colspan=&quot;2&quot;&gt;any shape&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Hexagonal symmetry&lt;/th&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;yes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;Easy algorithms&lt;/th&gt;
&lt;td&gt;few&lt;/td&gt;
&lt;td&gt;some&lt;/td&gt;
&lt;td&gt;most&lt;/td&gt;
&lt;td&gt;all&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt; rectangular maps require an adapter, shown in the &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#map-storage&quot;&gt;map storage section&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My recommendation: if you are only going to use rectangular maps, and never rotate the map, consider the doubled or offset coordinates, as they will line up with your map better than axial or cube. In all other cases, use axial as the primary system, and calculate the third cube coordinate only for those algorithms where cube is easier to work with.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;h2 id=&quot;neighbors&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors&quot;&gt;#&lt;/a&gt;Neighbors&lt;/h2&gt;
&lt;p&gt;Given a hex, which 6 hexes are neighboring it? As you might expect, the answer is simplest with cube coordinates, still pretty simple with axial coordinates, and slightly trickier with offset coordinates. We might also want to calculate the 6 “diagonal” hexes.&lt;/p&gt;
&lt;h3 id=&quot;neighbors-cube&quot;&gt;Cube coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors-cube&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div id=&quot;diagram-neighbors-cube&quot; class=&quot;float-container&quot; readability=&quot;23&quot;&gt;
&lt;div readability=&quot;37&quot;&gt;
&lt;p&gt;Moving one space in hex coordinates involves changing one of the 3 cube coordinates by +1 and changing another one by -1 (the sum must remain 0). There are 3 possible coordinates to change by +1, and 2 remaining that could be changed by -1. This results in 6 possible changes. Each corresponds to one of the hexagonal directions. The simplest and fastest approach is to precompute the permutations and put them into a table of &lt;code&gt;Cube(dx, dy, dz)&lt;/code&gt; at compile time:&lt;/p&gt;
&lt;pre class=&quot;neighbors-code&quot;&gt;
var cube_directions = [
    &lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(+1, -1, 0)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(+1, 0, -1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(0, +1, -1)&lt;/span&gt;, &lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(-1, +1, 0)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(-1, 0, +1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(0, -1, +1)&lt;/span&gt;, &lt;/span&gt;
]

function cube_direction(direction):
    return cube_directions[direction]

function cube_neighbor(cube, direction):
    return cube_add(cube, cube_direction(direction))
&lt;/pre&gt;&lt;/div&gt;
-10+1-1+100-1+1xzy0+1-1+1-10+10-1 flat pointy&lt;/div&gt;
&lt;h3 id=&quot;neighbors-axial&quot;&gt;Axial coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors-axial&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div id=&quot;diagram-neighbors-axial&quot; class=&quot;float-container&quot; readability=&quot;26.5&quot;&gt;
&lt;div readability=&quot;30&quot;&gt;
&lt;p&gt;As before, we'll use the cube system as a starting point. Take the table of &lt;code&gt;Cube(dx, dy, dz)&lt;/code&gt; and convert into a table of &lt;code&gt;Hex(dq, dr)&lt;/code&gt;:&lt;/p&gt;
&lt;pre id=&quot;neighbors-axial-code&quot; class=&quot;neighbors-code&quot;&gt;
var axial_directions = [
    &lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(+1, 0)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(+1, -1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(0, -1)&lt;/span&gt;, &lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(-1, 0)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(-1, +1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Hex(0, +1)&lt;/span&gt;, &lt;/span&gt;
]

function hex_direction(direction):
    return axial_directions[direction]

function hex_neighbor(hex, direction):
    var dir = hex_direction(direction)
    return Hex(hex.q + dir.q, hex.r + dir.r)
&lt;/pre&gt;&lt;/div&gt;
-1, 0-1, +10, -1q, r0, +1+1, -1+1, 0 flat pointy&lt;/div&gt;
&lt;h3 id=&quot;neighbors-offset&quot;&gt;Offset coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors-offset&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With offset coordinates, the change depends on where in the grid we are. If we're on an offset column/row then the rule is different than if we're on a non-offset column/row.&lt;/p&gt;
&lt;p&gt;As above, we'll build a table of the numbers we need to add to &lt;code&gt;col&lt;/code&gt; and &lt;code&gt;row&lt;/code&gt;. However offset coordinates can't be safely added and subtracted. Instead, the results are different for odd and even columns/rows, so we will need two separate lists of neighbors. Look at &lt;code&gt;(1,1)&lt;/code&gt; on the grid map above and see how &lt;code&gt;col&lt;/code&gt; and &lt;code&gt;row&lt;/code&gt; change as you move in each of the six directions. Then do this again for &lt;code&gt;(2,2)&lt;/code&gt;. The tables and code are different for each of the four offset grid types, so &lt;strong&gt;pick a grid type&lt;/strong&gt; to see the corresponding code.&lt;/p&gt;
&lt;div id=&quot;diagram-neighbors-offset&quot; class=&quot;float-container&quot; readability=&quot;50&quot;&gt;
&lt;pre id=&quot;neighbors-offset-code&quot; class=&quot;column neighbors-code&quot;&gt;
var oddr_directions = [&lt;span&gt;&lt;br/&gt;[&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1,  0]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[ 0, -1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1, -1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;br/&gt;&lt;span&gt;     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1,  0]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1, +1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[ 0, +1]&lt;/span&gt;&lt;/span&gt;],&lt;/span&gt;&lt;span&gt;&lt;br/&gt;[&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1,  0]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1, -1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[ 0, -1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;br/&gt;&lt;span&gt;     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1,  0]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[ 0, +1]&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1, +1]&lt;/span&gt;&lt;/span&gt;],&lt;/span&gt;
]

function &lt;strong&gt;oddr&lt;/strong&gt;_offset_neighbor(hex, direction):
    var parity = hex.row &amp;amp; 1
    var dir = oddr_directions[parity][direction]
    return OffsetCoord(hex.col + dir[0], hex.row + dir[1])
&lt;/pre&gt;
&lt;strong&gt;Pick a grid type:&lt;/strong&gt; &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;odd_r&quot;/&gt; odd-r &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;even_r&quot;/&gt; even-r &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;odd_q&quot;/&gt; odd-q &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;even_q&quot;/&gt; even-q &lt;/label&gt;&lt;br/&gt;-1, 0-1, +1-1, -1EVEN rowALL cols 0, +1 0, -1+1, 0-1, 0 0, +1 0, -1ODD rowALL cols+1, +1+1, -1+1, 0&lt;/div&gt;
&lt;p&gt;Using the above lookup tables is the easiest way to to calculate neighbors. It's also possible to &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/derive-hex-neighbor-formula.html&quot;&gt;derive these numbers&lt;/a&gt;, for those of you who are curious.&lt;/p&gt;
&lt;h3 id=&quot;neighbors-doubled&quot;&gt;Doubled coordinates&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors-doubled&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unlike offset coordinates, the neighbors for doubled coordinates do &lt;em&gt;not&lt;/em&gt; depend on which column/row we're on. They're the same everywhere, like axial and cube coordinates. Also unlike offset coordinates, we can safely add and subtract doubled coordinates, which makes them easier to work with than offset coordinates.&lt;/p&gt;
&lt;div id=&quot;diagram-neighbors-doubled&quot; class=&quot;float-container&quot; readability=&quot;32&quot;&gt;
&lt;pre id=&quot;neighbors-doubled-code&quot; class=&quot;column neighbors-code&quot;&gt;
var doublewidth_directions = [
    &lt;span&gt;&lt;span class=&quot;&quot;&gt;[+2,  0]&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1, -1]&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1, -1]&lt;/span&gt;, &lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-2,  0]&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[-1, +1]&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;[+1, +1]&lt;/span&gt;, &lt;/span&gt;
]

function doublewidth_neighbor(hex, direction):
    var dir = doublewidth_directions[direction]
    return DoubledCoord(hex.col + dir.col, hex.col + dir.col)
&lt;/pre&gt;
&lt;strong&gt;Pick a grid type:&lt;/strong&gt; &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;width&quot;/&gt; double width &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;height&quot;/&gt; double height &lt;/label&gt;&lt;br/&gt;-2, 0-1, +1-1, -1 0, 0+1, +1+1, -1+2, 0 &lt;/div&gt;
&lt;h3 id=&quot;neighbors-diagonal&quot;&gt;Diagonals&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#neighbors-diagonal&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;div id=&quot;diagram-neighbors-diagonal&quot; class=&quot;float-container&quot; readability=&quot;23&quot;&gt;
&lt;div readability=&quot;37&quot;&gt;
&lt;p&gt;Moving to a “diagonal” space in hex coordinates changes one of the 3 cube coordinates by ±2 and the other two by ∓1 (the sum must remain 0).&lt;/p&gt;
&lt;pre class=&quot;neighbors-code&quot;&gt;
var cube_diagonals = [
    &lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(+2, -1, -1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(+1, +1, -2)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(-1, +2, -1)&lt;/span&gt;, &lt;br/&gt;&lt;span&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(-2, +1, +1)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(-1, -1, +2)&lt;/span&gt;, &lt;/span&gt;&lt;span&gt;&lt;span class=&quot;&quot;&gt;Cube(+1, -2, +1)&lt;/span&gt;, &lt;/span&gt;
]

function cube_diagonal_neighbor(cube, direction):
    return cube_add(cube, cube_diagonals[direction])
&lt;/pre&gt;
&lt;p&gt;As before, you can convert these into axial by dropping one of the three coordinates, or convert to offset/doubled by precalculating the results.&lt;/p&gt;
&lt;/div&gt;
-10+1-1+100-1+1xzy0+1-1+1-10+10-1+2-1-1+1-2+1-1-1+2-2+1+1-1+2-1+1+1-2 flat pointy&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;h2 id=&quot;pixel-to-hex&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#pixel-to-hex&quot;&gt;#&lt;/a&gt;Pixel to Hex&lt;/h2&gt;
&lt;div id=&quot;diagram-pixel-to-hex&quot; class=&quot;float-container&quot; readability=&quot;266.71226570207&quot;&gt;
&lt;p&gt;One of the most common questions is, how do I take a pixel location (such as a mouse click) and convert it into a hex grid coordinate? I'll show how to do this for axial or cube coordinates. For offset coordinates, the simplest thing to do is to convert the cube to offset at the end.&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;First we &lt;em&gt;invert&lt;/em&gt; the hex to pixel conversion. This will give us a &lt;em&gt;fractional&lt;/em&gt; hex coordinate, shown as a small red circle in the diagram.&lt;/li&gt;
&lt;li&gt;Then we find the hex containing the fractional hex coordinate, shown as the highlighted hex in the diagram.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;To convert from &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#hex-to-pixel&quot;&gt;hex coordinates to pixel coordinates&lt;/a&gt;, we multiplied &lt;code&gt;q, r&lt;/code&gt; by &lt;em&gt;basis vectors&lt;/em&gt; to get &lt;code&gt;x, y&lt;/code&gt;. This was a matrix multiply:&lt;/p&gt;

&lt;p&gt;To invert the hex-to-pixel process into a pixel-to-hex process we &lt;a href=&quot;http://www.wolframalpha.com/input/?i=inv+%7B%7Bsqrt%283%29%2C+sqrt%283%29%2F2%7D%2C+%7B0%2C+3%2F2%7D%7D&quot;&gt;invert the pointy-top hex-to-pixel matrix&lt;/a&gt;&lt;sup class=&quot;print-endnote&quot;&gt;[30]&lt;/sup&gt;&lt;sup class=&quot;print-endnote&quot;&gt;[31]&lt;/sup&gt; into a pixel-to-hex matrix:&lt;/p&gt;
&lt;pre class=&quot;matrix float-right&quot;&gt;
⎡q⎤     ⎡ &lt;span class=&quot;q&quot;&gt;sqrt(3)/3     -1/3&lt;/span&gt; ⎤   ⎡x⎤
⎢ ⎥  =  ⎢                    ⎥ × ⎢ ⎥ ÷ size
⎣r⎦     ⎣     &lt;span class=&quot;r&quot;&gt;0          2/3&lt;/span&gt; ⎦   ⎣y⎦
&lt;/pre&gt;
&lt;p&gt;This calculation will give us fractional axial coordinates (floats) for &lt;code&gt;q&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt;. The &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/#rounding&quot;&gt;hex_round()&lt;/a&gt; function will convert the fractional axial coordinates into integer axial hex coordinates. Here's the code:&lt;/p&gt;
&lt;pre&gt;
function pixel_to_pointy_hex(point):
    var q = (&lt;span class=&quot;q&quot;&gt;sqrt(3)/3&lt;/span&gt; * point.x  -  &lt;span class=&quot;q&quot;&gt;1./3&lt;/span&gt; * point.y) / size
    var r = (                        &lt;span class=&quot;r&quot;&gt;2./3&lt;/span&gt; * point.y) / size
    return hex_round(Hex(q, r))
&lt;/pre&gt;
&lt;p&gt;Code for: &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;flat&quot;/&gt;flat top&lt;/label&gt; or &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;pointy&quot;/&gt;pointy top&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;That's three lines of code to convert a pixel location into an axial hex coordinate. If you use offset coordinates, use &lt;code&gt;return cube_to_{odd,even}{r,q}(cube_round(Cube(q, -q-r, r)))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are many other ways to convert pixel to hex; see &lt;a href=&quot;https://www.redblobgames.com/grids/hexagons/more-pixel-to-hex.html&quot;&gt;this page&lt;/a&gt; for the ones I know of.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;h2 id=&quot;map-storage&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://www.redblobgames.com/grids/hexagons/#map-storage&quot;&gt;#&lt;/a&gt;Map storage in axial coordinates&lt;/h2&gt;
&lt;p&gt;One of the common complaints about the axial coordinate system is that it leads to wasted space when using a rectangular map; that's one reason to favor an offset coordinate system. However all the hex coordinate systems lead to wasted space when using a triangular or hexagonal map. We can use the same strategies for storing all of them.&lt;/p&gt;
&lt;div id=&quot;diagram-map-storage&quot; class=&quot;wide-container&quot; readability=&quot;100&quot;&gt;0, 30, 40, 50, 61, 21, 31, 41, 51, 62, 12, 22, 32, 42, 52, 63, 03, 13, 23, 33, 43, 53, 64, 04, 14, 24, 34, 44, 55, 05, 15, 25, 35, 46, 06, 16, 26, 3r = 00, 01, 02, 03, 04, 05, 06, 0r = 10, 11, 12, 13, 14, 15, 16, 1r = 20, 21, 22, 23, 24, 25, 26, 2r = 30, 31, 32, 33, 34, 35, 36, 3r = 40, 41, 42, 43, 44, 45, 46, 4r = 50, 51, 52, 53, 54, 55, 56, 5r = 60, 61, 62, 63, 64, 65, 66, 6q = 0q = 1q = 2q = 3q = 4q = 5q = 6
&lt;p&gt;Shape: &lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;rectangle&quot;/&gt;rectangle &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;triangle&quot;/&gt;triangle &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;hexagon&quot;/&gt;hexagon &lt;/label&gt;&lt;label&gt;&lt;input type=&quot;radio&quot; value=&quot;rhombus&quot;/&gt;rhombus &lt;/label&gt;&lt;br/&gt;&lt;code&gt;array[&lt;span class=&quot;r&quot;&gt;r&lt;/span&gt;][&lt;span class=&quot;q&quot;&gt;q&lt;/span&gt;&lt;span&gt; - max(0, N-r)&lt;/span&gt;]&lt;/code&gt; → &lt;code&gt;array[&lt;span class=&quot;r&quot;&gt;2&lt;/span&gt;][q - &lt;span class=&quot;q&quot;&gt;1&lt;/span&gt;]&lt;/code&gt; → &lt;code&gt;array[&lt;span class=&quot;r&quot;&gt;2&lt;/span&gt;][&lt;span class=&quot;q&quot;&gt;2&lt;/span&gt;]&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Notice in the diagram that the wasted space is on the left and right sides of each row (except for rhombus maps) This gives us three strategies for storing the map:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Ignore&lt;/strong&gt; the problem. Use a dense array with nulls or some other sentinel at the unused spaces. At most there's a factor of two for these common shapes; it may not be worth using a more complicated solution.&lt;/li&gt;
&lt;li&gt;Use a &lt;strong&gt;hash table&lt;/strong&gt; instead of dense array. This allows arbitrarily shaped maps, including ones with holes. When you want to access the hex at &lt;code&gt;q,r&lt;/code&gt; you access &lt;code&gt;hash_table(hash(&lt;span class=&quot;q&quot;&gt;q&lt;/span&gt;,&lt;span class=&quot;r&quot;&gt;r&lt;/span&gt;))&lt;/code&gt; instead. Encapsulate this into the getter/setter in a map class so that the rest of the game doesn't need to know about it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slide&lt;/strong&gt; the rows to the left, by starting the arrays at the leftmost column instead of at 0. This removes the waste on the left. Optionally, use variable sized rows. In many languages a 2D array is an array of arrays; there's no reason the arrays have to be the same length. This removes the waste on the right.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Let's take a closer look at how to use an array of arrays. There's an array for each row, but we need to know the first column of that row. Map hex &lt;code&gt;&lt;span class=&quot;q&quot;&gt;q&lt;/span&gt;,&lt;span class=&quot;r&quot;&gt;r&lt;/span&gt;&lt;/code&gt; is stored at &lt;code&gt;array[&lt;span class=&quot;r&quot;&gt;r&lt;/span&gt; - first_row][&lt;span class=&quot;q&quot;&gt;q&lt;/span&gt; - first_column(r)]&lt;/code&gt;. Encapsulate this into the getter/setter in a map class so that the rest of the game doesn't need to know about it.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For the rectangle shaped map shown here, &lt;code&gt;first_column(r) == -floor(r/2)&lt;/code&gt;, so &lt;code&gt;Hex(q, r)&lt;/code&gt; is stored at &lt;code&gt;array[r][q + floor(r/2)]&lt;/code&gt;. This turns out to be equivalent to converting the coordinates into odd-r offset grid coordinates.&lt;/li&gt;
&lt;li&gt;For the triangle shaped map shown here, &lt;code&gt;first_column(r) == 0&lt;/code&gt;, so you'd access &lt;code&gt;array[r][q]&lt;/code&gt; — how convenient! For triangle shaped maps that are oriented the other way (not shown in the diagram), it's &lt;code&gt;array[r][q+r]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For hexagon shaped maps of radius &lt;code&gt;N&lt;/code&gt; centered at Hex(N, N, -2*N), &lt;code&gt;first_column(r) == max(0, N-r)&lt;/code&gt;, so you'd access &lt;code&gt;array[r][q - max(0, N-r)]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For the rhombus shaped map here, everything matches nicely, so you can use &lt;code&gt;array[r][q]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Your maps won't look exactly like the ones here so you'll need to adapt &lt;code&gt;first_row&lt;/code&gt; and &lt;code&gt;first_column(r)&lt;/code&gt; to your own maps. If you are using flat-topped hexes, it will be easier to swap the roles of the rows and columns, and use &lt;code&gt;array[&lt;span class=&quot;q&quot;&gt;q&lt;/span&gt; - first_column][&lt;span class=&quot;r&quot;&gt;r&lt;/span&gt; - first_row(q)]&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Sun, 17 Feb 2019 13:44:59 +0000</pubDate>
<dc:creator>skilled</dc:creator>
<og:url>https://www.redblobgames.com/grids/hexagons/</og:url>
<og:title>Red Blob Games: Hexagonal Grids</og:title>
<og:description>Guide to math, algorithms, and code for hexagonal grids in games</og:description>
<og:image>https://www.redblobgames.com/thumbnail/hexagons.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.redblobgames.com/grids/hexagons/</dc:identifier>
</item>
</channel>
</rss>