<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>A Short Story for Engineers</title>
<link>https://userweb.cs.txstate.edu/~br02/cs1428/ShortStoryForEngineers.htm</link>
<guid isPermaLink="true" >https://userweb.cs.txstate.edu/~br02/cs1428/ShortStoryForEngineers.htm</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;title&gt;A Short Story for Engineers&lt;/title&gt;&lt;link href=&quot;body.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;57&quot;&gt;


&lt;p&gt;&lt;strong&gt;Money well spent??&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;A Short&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Story for Engineers&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;You don’t have to be an engineer to appreciate this story.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A toothpaste factory had a problem: Due to the way the production line was set up, sometimes empty boxes were shipped without the tube inside. People with experience in designing production lines will tell you how difficult it is to have everything happen with timings so precise that every single unit coming off of it is perfect 100% of the time. Small variations in the environment (which cannot be controlled in a cost-effective fashion) mean quality assurance checks must be smartly distributed across the production line so that customers all the way down to the supermarket won’t get frustrated and purchase another product instead.&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt; &lt;strong&gt;Understanding how important that was, the CEO of the toothpaste factory gathered the top people in the company together. Since their own engineering department was already stretched too thin, they decided to hire an external engineering company to solve their empty boxes problem.&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt; &lt;strong&gt;The project followed the usual process: budget and project sponsor allocated, RFP (request for proposal), third-parties selected, and six months (and $8 million) later a fantastic solution was delivered — on time, on budget, high quality and everyone in the project had a great time. The problem was solved by using high-tech precision scales that would sound a bell and flash lights whenever a toothpaste box would weigh less than it should. The line would stop, and someone had to walk over and yank the defective box off the line, then press another button to re-start the line.&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt; &lt;strong&gt;A short time later, the CEO decided to have a look at the ROI (return on investment) of the project: amazing results! No empty boxes ever shipped out of the factory after the scales were put in place. There were very few customer complaints, and they were gaining market share. “That was some money well spent!” he said, before looking closely at the other statistics in the report. &lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt; &lt;strong&gt;The number of defects picked up by the scales was 0 after three weeks of production use. How could that be? It should have been picking up at least a dozen a day, so maybe there was something wrong with the report. He filed a bug against it, and after some investigation, the engineers indicated the statistics were indeed correct. The scales were NOT picking up any defects, because all boxes that got to that point in the conveyor belt were good.&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt; &lt;strong&gt;Perplexed, the CEO traveled down to the factory and walked up to the part of the line where the precision scales were installed. A few feet before the scale, a $20 desk fan was blowing any empty boxes off the belt and into a bin. Puzzled, the CEO turned to one of the workers who stated, “Oh, that…One of the guys put it there ’cause he was tired of walking over every time the bell rang!”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;$8 million vs $20    Hmmm! Money well spent?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;author unknown&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sat, 26 Sep 2020 18:26:37 +0000</pubDate>
<dc:creator>cvs268</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://userweb.cs.txstate.edu/~br02/cs1428/ShortStoryForEngineers.htm</dc:identifier>
</item>
<item>
<title>Stop Asking Me to “Sign Up” (2014)</title>
<link>https://www.gkogan.co/blog/stop-asking-me-to-sign-up/</link>
<guid isPermaLink="true" >https://www.gkogan.co/blog/stop-asking-me-to-sign-up/</guid>
<description>&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/6682ce0e9be9292fb093d16e4b89a6cbec481554/1fe8d/images/uploads/sign-up-buttons.png&quot; alt=&quot;SaaS Startups Using Sign Up Buttons&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The fate of many startups depends almost entirely on one conversion point: When a visitor becomes a user.&lt;/p&gt;
&lt;p&gt;All too often, this pivotal role falls on the shoulders of a pitifully generic “sign up” button that’s lucky to get even a minute of consideration during development.&lt;/p&gt;
&lt;p&gt;If you take a moment to consider the wording of your signup button, you can drastically increase how many of your visitors turn into users.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(What happens after the conversion is important, too, but things get significantly easier once you have someone’s email and opt-in.)&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Why &quot;Sign Up&quot; buttons don't work.&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;They're ignored. &lt;/strong&gt;When visitors see common elements repeated on many sites, they begin unconsciously ignoring those elements (aka &quot;habituation&quot;). Doesn't matter if they're blue or green or hell-fire-orange.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You're asking for blind commitment.&lt;/strong&gt; Don't assume visitors know what you're asking them to sign up for. People don't read pages, they skim. They could've easily missed the part where you mention a free trial or key benefits.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You're not offering any value.&lt;/strong&gt; Asking someone to &quot;sign up&quot; offers no help in changing the visitor's thinking from &quot;Why should I?&quot; to &quot;I want this!&quot;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;How to get more signups from your signup button:&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Tie it to your product.&lt;/strong&gt; If you have a SaaS for trading bitcoins: &quot;Start Trading Bitcoins.&quot; If you have a marketplace for artists: &quot;Start Selling Art.&quot; This helps prevent the button from being overlooked.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Give, don't take.&lt;/strong&gt; &quot;Get Access&quot; and &quot;Sign Up&quot; both lead to the same thing, but one makes the visitor feel they're getting something, while the other doesn't.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compel people to act.&lt;/strong&gt; Use action verbs such as &lt;em&gt;get&lt;/em&gt;, &lt;em&gt;start&lt;/em&gt;, and &lt;em&gt;try&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Examples from startups that get it right:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/a5e786dc725cdf0d2cc7d265cf2130fd5e785f5e/09f83/images/uploads/sign-up-buttons-2.png&quot; alt=&quot;Startups with Good Signup Buttons&quot;/&gt;&lt;/p&gt;
&lt;p&gt;(I especially like gliffy’s “Start Drawing,” which implies how quickly you can get started, and directly relates to their product: &lt;a href=&quot;http://www.gliffy.com&quot;&gt;an app for easily drawing diagrams&lt;/a&gt;.)&lt;/p&gt;
&lt;h2&gt;Case study: Getting 3x more clicks by changing two words.&lt;/h2&gt;
&lt;p&gt;Take this example from one of my clients. Like many software companies, Scalyr—a &lt;a href=&quot;https://www.scalyr.com&quot;&gt;log aggregation and monitoring tool&lt;/a&gt;—asked its visitors to “sign up.” I suggested that we test a version of the button that &lt;em&gt;gives&lt;/em&gt; and &lt;em&gt;compels&lt;/em&gt;: “Try it Free”. Here’s what happened:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Asking visitors to &lt;em&gt;Try it Free&lt;/em&gt; &lt;span&gt;increased clicks by 212%&lt;/span&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Complete obliteration of the old “Sign Up” button, and a huge win for a test that took two minutes to set up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/7562f9ce9e08b024e6c838126e1d6f54e24e07ed/7465d/images/uploads/scalyr-test-result.png&quot; alt=&quot;A/B test on Scalyr resulted in 212% increase in clicks.&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;Now try it yourself...&lt;/h2&gt;
&lt;p&gt;Test a variation of your “sign up” button with something that &lt;em&gt;gives&lt;/em&gt;, &lt;em&gt;compels&lt;/em&gt;, and is &lt;em&gt;tied to your product&lt;/em&gt;. It’s one of the easiest things to test, and could have a huge effect on your conversion rates. If you follow my advice then you’re almost certain to do better than asking visitors to “sign up.”&lt;/p&gt;
&lt;p&gt;◼&lt;/p&gt;
&lt;p&gt;PS - Liked this article? I write one every month or so, covering lessons learned on B2B startup growth. Don't miss the next one:&lt;/p&gt;

&lt;p&gt;If you need help with marketing and revenue growth, &lt;a href=&quot;https://www.gkogan.co/contact/&quot;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Sat, 26 Sep 2020 15:47:39 +0000</pubDate>
<dc:creator>jeremylevy</dc:creator>
<og:title>Stop Asking Me to “Sign Up”</og:title>
<og:description>Engineer-turned-marketing-consultant for B2B and enterprise software startups.</og:description>
<og:url>https://www.gkogan.co/blog/stop-asking-me-to-sign-up/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.gkogan.co/blog/stop-asking-me-to-sign-up/</dc:identifier>
</item>
<item>
<title>LEd: Open-Source 2D Level Editor</title>
<link>https://deepnight.net/tools/led-2d-level-editor/</link>
<guid isPermaLink="true" >https://deepnight.net/tools/led-2d-level-editor/</guid>
<description>&lt;a href=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/fullLevelEdit.gif&quot; data-lbwps-width=&quot;1428&quot; data-lbwps-height=&quot;1115&quot;&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1428&quot; height=&quot;1115&quot; src=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/fullLevelEdit.gif&quot; alt=&quot;&quot; class=&quot;wp-image-4971&quot;/&gt;&lt;/p&gt;
&lt;/a&gt;&lt;h3&gt;Why another editor?&lt;/h3&gt;
&lt;p&gt;LEd is based on my personal experience creating &lt;strong&gt;Dead Cells&lt;/strong&gt; and making &lt;strong&gt;game jams&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;My goal is to &lt;strong&gt;provide an editor that have all the important &lt;em&gt;core&lt;/em&gt; features and to do them &lt;em&gt;right&lt;/em&gt;&lt;/strong&gt;, with a modern user interface/experience.&lt;/p&gt;
&lt;h3&gt;Advanced level editing&lt;/h3&gt;
&lt;h3&gt;Optional Haxe API fully supported in VScode&lt;/h3&gt;
&lt;ul class=&quot;blocks-gallery-grid&quot;&gt;&lt;li class=&quot;blocks-gallery-item&quot;&gt;&lt;a href=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-fieldCompletion.gif&quot; data-lbwps-width=&quot;1824&quot; data-lbwps-height=&quot;839&quot;&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1824&quot; height=&quot;839&quot; src=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-fieldCompletion.gif&quot; alt=&quot;&quot; data-id=&quot;4895&quot; data-full-url=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-fieldCompletion.gif&quot; data-link=&quot;https://deepnight.net/tools/led-2d-level-editor/attachment/vscode-fieldcompletion/&quot; class=&quot;wp-image-4895&quot;/&gt;&lt;/p&gt;
&lt;/a&gt;Explore your fully-typed JSON&lt;/li&gt;
&lt;li class=&quot;blocks-gallery-item&quot;&gt;&lt;a href=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-typeCompletion.gif&quot; data-lbwps-width=&quot;1930&quot; data-lbwps-height=&quot;839&quot;&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; width=&quot;1930&quot; height=&quot;839&quot; src=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-typeCompletion.gif&quot; alt=&quot;&quot; data-id=&quot;4897&quot; data-full-url=&quot;https://deepnight.net/wordpress/wp-content/uploads/2020/09/vscode-typeCompletion.gif&quot; data-link=&quot;https://deepnight.net/tools/led-2d-level-editor/attachment/vscode-typecompletion/&quot; class=&quot;wp-image-4897&quot;/&gt;&lt;/p&gt;
&lt;/a&gt;Types are created automatically by Haxe macros&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;All features&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: modern UI with a strong focus on ease-of-use and quality-of-life features.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Universal and agnostic&lt;/strong&gt;: compatible with all languages (not only Haxe) and game frameworks in the world&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON&lt;/strong&gt;: easy to parse &lt;a href=&quot;https://deepnight.net/docs/led/json/&quot; data-type=&quot;docs&quot; data-id=&quot;4666&quot;&gt;file format&lt;/a&gt; for any game-engine out there (I promise it’s actually really easy). Haxe isn’t required.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customizable layers&lt;/strong&gt;: &lt;a href=&quot;https://deepnight.net/docs/led/tutorials/working-with-intgrid-layers/&quot; data-type=&quot;docs&quot; data-id=&quot;4634&quot;&gt;Integer grid&lt;/a&gt; layers, &lt;a href=&quot;https://deepnight.net/docs/led/tutorials/working-with-tiles/&quot; data-type=&quot;docs&quot; data-id=&quot;4635&quot;&gt;Tile&lt;/a&gt; layers and &lt;a href=&quot;https://deepnight.net/docs/led/project-components/entities/&quot; data-type=&quot;docs&quot; data-id=&quot;4662&quot;&gt;Entity&lt;/a&gt; layers support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto-layers&lt;/strong&gt;: paint your collision map and see the grass, textures and all the small details being &lt;a href=&quot;https://deepnight.net/docs/led/tutorials/working-with-auto-layers/&quot; data-type=&quot;docs&quot; data-id=&quot;4762&quot;&gt;drawn automatically&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entities&lt;/strong&gt;: fully customizable &lt;a href=&quot;https://deepnight.net/docs/led/project-components/entities/&quot; data-type=&quot;docs&quot; data-id=&quot;4662&quot;&gt;Entity&lt;/a&gt; with custom properties (ex: you can have a “Mob” entity, with a “hitPoints” field, which is an Integer limited to [0,10] bounds).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enums&lt;/strong&gt;: you can define an &lt;a href=&quot;https://deepnight.net/docs/led/project-components/enumerations-enums/&quot; data-type=&quot;docs&quot; data-id=&quot;4664&quot;&gt;enumeration&lt;/a&gt; (ex: an “ItemType” enum with “Money”, “Ammo”, “Gun” values) and use this enum in your entity custom fields.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;External enums&lt;/strong&gt;: enums can be imported and synced directly from Haxe source code files (HX file)!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML5&lt;/strong&gt;: LEd is built around modern web standards.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Auto update&lt;/strong&gt;: you get notified as soon as a stable update is released and it’s up to you to install it when you’re ready, with a &lt;em&gt;single&lt;/em&gt; click.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LEd loves Haxe&lt;/strong&gt;: a powerful &lt;a href=&quot;https://deepnight.net/docs/led/haxe-api/&quot; data-type=&quot;docs&quot; data-id=&quot;4857&quot;&gt;Haxe API&lt;/a&gt; which gives you access to fully &lt;em&gt;typed&lt;/em&gt; values from your levels. It avoids mistakes like mistyping, renaming or removals: you see errors during compilation, not at runtime. For example, having &lt;code&gt;var p = new MyLedProject()&lt;/code&gt;, you can do things like &lt;code&gt;p.all_levels.MyIntroLevel.all_enemies[0].f_hitPoints&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Roadmap&lt;/h3&gt;
&lt;p&gt;The following features are planned in a quite short term, in no particular order. See &lt;a href=&quot;https://github.com/deepnight/led/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+feature%22&quot; data-type=&quot;URL&quot; data-id=&quot;https://github.com/deepnight/led/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+feature%22&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;official issue tracker&lt;/a&gt; fore more.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Auto-tiling (see: &lt;a rel=&quot;noreferrer noopener&quot; href=&quot;https://blog.rpgmakerweb.com/tutorials/tutorial-how-autotiles-work/&quot; data-type=&quot;URL&quot; data-id=&quot;https://blog.rpgmakerweb.com/tutorials/tutorial-how-autotiles-work/&quot; target=&quot;_blank&quot;&gt;How Autotiles work?&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;World editor (&lt;a href=&quot;https://github.com/deepnight/led/issues/47&quot; data-type=&quot;URL&quot; data-id=&quot;https://github.com/deepnight/led/issues/47&quot;&gt;issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Freely positioned tiles (&lt;a href=&quot;https://github.com/deepnight/led/issues/32&quot; data-type=&quot;URL&quot; data-id=&quot;https://github.com/deepnight/led/issues/32&quot;&gt;issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Parallax layers (&lt;a href=&quot;https://github.com/deepnight/led/issues/28&quot; data-type=&quot;URL&quot; data-id=&quot;https://github.com/deepnight/led/issues/28&quot;&gt;issue&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;References in entity fields (ie. having a Button entity that refers to another entity, like a Door) (&lt;a href=&quot;https://github.com/deepnight/led/issues/33&quot; data-type=&quot;URL&quot; data-id=&quot;https://github.com/deepnight/led/issues/33&quot;&gt;issue&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Sat, 26 Sep 2020 14:52:33 +0000</pubDate>
<dc:creator>ArtWomb</dc:creator>
<og:title>LEd – 2D level editor</og:title>
<og:type>article</og:type>
<og:url>https://deepnight.net/tools/led-2d-level-editor/</og:url>
<og:description>LEd LEd is an open-source 2D level editor, with a strong focus on user-friendliness. Why another editor? LEd is based on my personal experience creating Dead Cells and making game jams. My goal is to provide an editor that have all the important core features and to do them right , with a modern user …</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://deepnight.net/tools/led-2d-level-editor/</dc:identifier>
</item>
<item>
<title>Ora2Pg – Oracle to PostgreSQL database schema converter</title>
<link>https://www.ora2pg.com/</link>
<guid isPermaLink="true" >https://www.ora2pg.com/</guid>
<description>&lt;img src=&quot;https://www.ora2pg.com/images/ora2pg-logo.png&quot; alt=&quot;Ora2Pg&quot;/&gt;&lt;p&gt;
                    Moves Oracle and MySQL database to PostgreSQL&lt;br/&gt;&lt;/p&gt;

                &lt;p&gt;
                    &lt;a class=&quot;btn btn-primary btn-large btn-jumbo&quot; href=&quot;https://www.ora2pg.com/start.html&quot;&gt;Start with Ora2Pg &lt;i class=&quot;fa fa-database&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;

                &lt;p id=&quot;latest&quot;&gt;
		    &lt;strong&gt;Latest release:&lt;/strong&gt;
                    &lt;a href=&quot;https://sourceforge.net/projects/ora2pg/&quot;&gt;SF Download v20.0&lt;/a&gt; -
                    &lt;a href=&quot;https://github.com/darold/ora2pg/releases&quot;&gt;GitHub Download v20.0&lt;/a&gt; -
                    &lt;a href=&quot;https://github.com/darold/ora2pg/blob/master/changelog&quot;&gt;Release Notes&lt;/a&gt; -
                &lt;/p&gt;

                &lt;p id=&quot;social&quot;&gt;
		&lt;a href=&quot;https://twitter.com/ora2pg&quot; class=&quot;twitter-follow-button&quot; data-show-count=&quot;false&quot;&gt;Follow @ora2pg&lt;/a&gt;
&lt;/p&gt;

                
		&lt;p&gt;
		    Copyright (c) 2000-2020 Gilles Darold 
		&lt;/p&gt;
            </description>
<pubDate>Sat, 26 Sep 2020 13:41:57 +0000</pubDate>
<dc:creator>jka</dc:creator>
<og:title>Ora2Pg - Moves Oracle database to PostgreSQL</og:title>
<og:type>product</og:type>
<og:url>http://ora2pg.darold.net/</og:url>
<og:image>http://ora2pg.darold.net/images/ora2pg-logo-300.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ora2pg.com/</dc:identifier>
</item>
<item>
<title>Boeing cuts flight training pilots, will outsource jobs overseas</title>
<link>https://www.thestand.org/2020/09/boeing-cuts-flight-training-pilots-will-outsource-jobs-overseas/</link>
<guid isPermaLink="true" >https://www.thestand.org/2020/09/boeing-cuts-flight-training-pilots-will-outsource-jobs-overseas/</guid>
<description>&lt;div class=&quot;printfriendly&quot;&gt;&lt;a href=&quot;https://www.thestand.org/2020/09/boeing-cuts-flight-training-pilots-will-outsource-jobs-overseas/#&quot; rel=&quot;nofollow&quot; onclick=&quot;window.print(); return false;&quot; class=&quot;noslimstat&quot; title=&quot;Printer Friendly, PDF &amp;amp; Email&quot;&gt;&lt;img src=&quot;https://cdn.printfriendly.com/buttons/printfriendly-pdf-button.png&quot; alt=&quot;Print Friendly, PDF &amp;amp; Email&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h2&gt;&lt;em&gt;SPEEA’s Goforth: “I cannot believe Boeing chose this moment to fire their highly experienced training pilots and outsource their work to contractors they don’t even control.”&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;The following is from the Society of Professional Engineering Employees in Aerospace (SPEEA/IFPTE 2001):&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;SEATTLE (Sept. 21, 2020) &lt;strong&gt;–&lt;/strong&gt; On Friday Sept. 18, The Boeing Company delivered layoff notices to its remaining seven Flight Training Airplane (FTA) pilots and will instead send the critical work of providing on-site training to airline customers to an overseas contract house. The 60-day notices of layoff eliminate all direct Boeing FTA pilots by the end of November – a critical moment in Boeing’s plan to return the 737MAX to service and start delivering the roughly 400 airplanes now parked around the West Coast.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter wp-image-91884 size-full&quot; src=&quot;https://www.thestand.org/wp-content/uploads/2020/09/Boeing-flight-training.jpg&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;314&quot; srcset=&quot;https://www.thestand.org/wp-content/uploads/2020/09/Boeing-flight-training.jpg 600w, https://www.thestand.org/wp-content/uploads/2020/09/Boeing-flight-training-300x157.jpg 300w, https://www.thestand.org/wp-content/uploads/2020/09/Boeing-flight-training-469x245.jpg 469w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;The move comes just days after the U.S. House Committee on Transportation and Infrastructure released its report on the “Design, Development and Certification of the Boeing 737MAX.” Based on a year-long investigation, the report, along with citing a “culture of concealment” in Boeing management,  calls on the company to provide additional training specific to the 737MAX upgrades to every airline pilot flying the plane after it returns to service.&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;Instead of using its own highly experienced pilots, Boeing is expanding its use of contract pilots from Cambridge Communications Limited (CCL), a contract house incorporated in the Isle of Mann. According to union officials, CCL’s ownership structure is a company within a nest of shell companies. Once hired and working for Boeing, the contract pilots are provided Boeing uniforms and business cards making them indistinguishable from Boeing’s own flight training pilots when they work with airlines and regulatory agencies. Boeing currently uses some contract pilots but has genuine Boeing pilots to ensure quality control over the contractors.  Eliminating the Boeing training pilots ends the decades long Boeing practice of using its own specialists to ensure airline customers operate Boeing aircraft safely.&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;During a meeting with union leaders last week, Boeing representatives said CCL contract pilots will do nearly all simulator and in-flight training involved in the 737MAX return to service.&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;“I was gobsmacked to hear company officials admit that Boeing will exercise zero quality control over these contractor pilots despite costuming them in Boeing uniforms,” said SPEEA Executive Director Ray Goforth.  “The entire fate of The Boeing Company depends upon a smooth re-entry into service of the 737 MAX. I cannot believe Boeing chose this moment to fire their highly experienced training pilots and outsource their work to contractors they don’t even control.”&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;Regardless of the extensive workload ahead to prepare 737MAX pilots, Boeing told union officials there is no work for the seven FTA pilots – all of whom are protected military veterans with a combined total of more than 225 years of experience flying a wide range of commercial and military aircraft.  Unlike most pilots who are type rated to fly a single aircraft model, the Boeing FTA pilots are all rated to fly multiple different aircraft models and qualified to instruct other pilots how to fly those aircraft models.  The union noted FTA pilots have regular interaction with Boeing’s other pilot groups, including its Flight Test Pilots, Technical Pilots and Safety Pilots. Additionally, Boeing FTA pilots interact and are respected by the engineers and technical workers who design and are involved in the certification and service of Boeing products.&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;“The loss of this critical coordinating function between the Boeing employees who design and manufacture aircraft and the customer air crews who fly them is incalculable,” Goforth said.  “The face of The Boeing Company to customers and regulators will now be foreign contractors masquerading as genuine Boeing pilots.”&lt;/p&gt;
&lt;p class=&quot;x_MsoNormal&quot;&gt;&lt;a href=&quot;https://www.speea.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignright wp-image-13478&quot; src=&quot;https://www.thestand.org/wp-content/uploads/2012/05/SPEEA-12.jpg&quot; alt=&quot;&quot; width=&quot;260&quot; height=&quot;86&quot; srcset=&quot;https://www.thestand.org/wp-content/uploads/2012/05/SPEEA-12.jpg 337w, https://www.thestand.org/wp-content/uploads/2012/05/SPEEA-12-300x99.jpg 300w&quot; sizes=&quot;(max-width: 260px) 100vw, 260px&quot;/&gt;&lt;/a&gt;A local of the International Federation of Professional and Technical Engineers (IFPTE), SPEEA represents more than 17,600 aerospace engineers, technical workers, professionals and pilots at Boeing, Spirit AeroSystems and Triumph Composite Systems in Washington, Kansas, Oregon, Utah, and California. &lt;a href=&quot;https://www.speea.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Learn more here.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 26 Sep 2020 07:57:05 +0000</pubDate>
<dc:creator>playeren</dc:creator>
<og:type>article</og:type>
<og:title>Boeing cuts flight training pilots, will outsource jobs overseas | The Stand</og:title>
<og:description>SPEEA’s Goforth: “I cannot believe Boeing chose this moment to fire their highly experienced training pilots and outsource their work to contractors they don’t even control.”   The following is from the Society of Professional Engineering Employees in Aerospace (SPEEA/IFPTE 2001): SEATTLE (Sept. 21, 2020) – On Friday Sept. 18, The Boeing Company delivered layoff …</og:description>
<og:url>https://www.thestand.org/2020/09/boeing-cuts-flight-training-pilots-will-outsource-jobs-overseas/</og:url>
<og:image>https://www.thestand.org/wp-content/uploads/2020/09/Boeing-flight-training.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.thestand.org/2020/09/boeing-cuts-flight-training-pilots-will-outsource-jobs-overseas/</dc:identifier>
</item>
<item>
<title>Toward a “modern” Emacs</title>
<link>https://lwn.net/SubscriberLink/832311/03910e26a3f3e814/</link>
<guid isPermaLink="true" >https://lwn.net/SubscriberLink/832311/03910e26a3f3e814/</guid>
<description>&lt;center&gt;
&lt;table width=&quot;90%&quot; cellspacing=&quot;5&quot; readability=&quot;4.1829745596869&quot;&gt;&lt;tr readability=&quot;11.154598825832&quot;&gt;&lt;td valign=&quot;top&quot; readability=&quot;9&quot;&gt;
&lt;h3&gt;Welcome to LWN.net&lt;/h3&gt;
&lt;p&gt;The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider accepting the trial offer on the right. Thank you for visiting LWN.net!&lt;/p&gt;
&lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;
&lt;table class=&quot;Form&quot; width=&quot;100%&quot; readability=&quot;1.2016574585635&quot;&gt;&lt;tr readability=&quot;3.6049723756906&quot;&gt;&lt;td readability=&quot;4.8066298342541&quot;&gt;
&lt;h3&gt;Free trial subscription&lt;/h3&gt;
&lt;p&gt;Try LWN for free for 1 month: no payment or credit card required. &lt;a href=&quot;https://lwn.net/Promo/slink-trial2-3/claim&quot;&gt;Activate your trial subscription now&lt;/a&gt; and see why thousands of readers subscribe to LWN.net.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;
&lt;p&gt;By &lt;strong&gt;Jonathan Corbet&lt;/strong&gt;&lt;br /&gt;September 25, 2020&lt;/p&gt;
It has only been a few months since the Emacs community went through &lt;a href=&quot;https://lwn.net/Articles/819452/&quot;&gt;an extended discussion&lt;/a&gt; on how to make the &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot;&gt;Emacs editor&lt;/a&gt; &quot;popular again&quot;. As the community gears up for the Emacs 28 development cycle, (after the &lt;a href=&quot;https://lists.gnu.org/archive/html/emacs-devel/2020-08/msg00237.html&quot;&gt;Emacs 27.1 release&lt;/a&gt; in August) that discussion has returned with a vengeance. The themes of this discussion differ somewhat from the last; developers are concerned about making Emacs — an editor with decades of history — seem &quot;modern&quot; to attract new users.
&lt;p&gt;The May 2020 discussion focused on restoring the popularity that Emacs is felt to have enjoyed in the past. It could well be that there are more Emacs users now than at any time in the past but the editor's share of the total computing user base has clearly shrunk over time. The current discussion has a similar but different focus: attracting new users to Emacs, an editor that is widely seen as being outdated and as having a difficult and intimidating learning curve.&lt;/p&gt;
&lt;h4&gt;A more modern Emacs&lt;/h4&gt;
&lt;p&gt;The initial thread was &lt;a href=&quot;https://lwn.net/ml/emacs-devel/20200906133719.cu6yaldvenxubcqq@Ergus/&quot;&gt;started&lt;/a&gt; by &quot;Ergus&quot; on September 6 as a request to consider some changes for the Emacs 28 release. Rather than focus on new features, though, Ergus proposed making some existing features more accessible:&lt;/p&gt;
&lt;p&gt;These are mainly &quot;visible&quot; changes that will benefit new users and first impressions because I don't understand why we hide the best functionalities until the user learns how to configure them (and some lisp).&lt;/p&gt;
&lt;p&gt;Many of the suggestions reverberated through the following discussions, starting with the idea that the default theme for Emacs should be improved. In particular, Ergus suggested the adoption of a dark theme by default &quot;&lt;span&gt;to make Emacs feel more modern&lt;/span&gt;&quot;. The discussion often returned to the idea that Emacs needs a more &quot;modern&quot; look and feel, though there was, understandably, some difference of opinion over what &quot;modern&quot; means.&lt;/p&gt;
&lt;p&gt;A default dark theme may not be in the future, leading one to think that there may yet be hope for the world in general. But there does seem to be general agreement that Emacs could benefit from a better, more centralized approach to color themes, rather than having color names hard-coded throughout various Elisp packages. From that, a proper theme engine could be supported, making dark themes and such easily available to those who want them.&lt;/p&gt;
&lt;p&gt;There was some discussion of adopting the &lt;a href=&quot;https://ethanschoonover.com/solarized/&quot;&gt;Solarized&lt;/a&gt; color palette in particular. As Dmitry Gutov &lt;a href=&quot;https://lwn.net/ml/emacs-devel/d034fcb1-0073-1038-273c-f5bd714799c1@yandex.ru/&quot;&gt;pointed out&lt;/a&gt;, though, Solarized makes for a rather low-contrast experience; a look at &lt;a href=&quot;https://lists.gnu.org/archive/html/emacs-devel/2020-09/pngv6rhszodiH.png&quot;&gt;this screenshot&lt;/a&gt; of Emacs with Solarized colors makes that clear enough.&lt;/p&gt;
&lt;p&gt;Another area where Emacs is insufficiently &quot;modern&quot;, it seems, has to do with keyboard and mouse bindings. On the keyboard side, users have come to expect certain actions from certain keystrokes; &lt;tt&gt;^X&lt;/tt&gt; to cut a selection, &lt;tt&gt;^V&lt;/tt&gt; to paste it, etc. These bindings are easily had by turning on the &lt;a href=&quot;https://www.emacswiki.org/emacs/CuaMode&quot;&gt;Cua mode&lt;/a&gt;, but new users tend not to know about this mode or how to enable it. Many participants in the discussion said that this mode should be on by default.&lt;/p&gt;
&lt;p&gt;That, of course, would break the finger memory of large numbers of existing Emacs users, who would be unlikely to appreciate the disruption. Or, as Richard Stallman &lt;a href=&quot;https://lwn.net/ml/emacs-devel/E1kFr8s-0006KM-5c@fencepost.gnu.org/&quot;&gt;put it&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;It is not an option to change these basic key bindings to imitate other, newer editors. It would create a different editor that we Emacs users would never switch to. It is unfortunate that the people who implemented the newer editors chose incompatibility with Emacs.&lt;/p&gt;
&lt;p&gt;For better or worse, though, the &quot;newer editors&quot; appear to have won out in this regard. The default bindings in Emacs may not change anytime soon, but that doesn't mean Emacs can't provide a way for users to get that behavior without needing to learn Lisp first.&lt;/p&gt;
&lt;p&gt;The situation with mouse behavior is similar; as several participants in the discussion pointed out, users of graphical interfaces have come to expect that a right-button click will produce a menu of available actions. In Emacs, instead, that button marks a region (&quot;selection&quot;), with a second click in the same spot yanking (&quot;cutting&quot;) the selected text. Many experienced Emacs users &lt;a href=&quot;https://lwn.net/ml/emacs-devel/eccb22bb-1ef0-405f-a844-82f3f4eeefd0@default/&quot;&gt;have come to like&lt;/a&gt; this behavior, but it is surprising to newcomers. The right mouse button with the control key held down &lt;em&gt;does&lt;/em&gt; produce a menu defined by the current major mode, but that is evidently not what is being requested here; that menu, some say, should present global actions rather mode-specific ones.&lt;/p&gt;
&lt;p&gt;Stallman &lt;a href=&quot;https://lwn.net/ml/emacs-devel/E1kHJHZ-0003n2-0j@fencepost.gnu.org/&quot;&gt;suggested&lt;/a&gt; offering a &quot;&lt;span&gt;reshuffled mode&lt;/span&gt;&quot; that would bring the context menu to an unadorned right-button click, and which would add some of the expected basic editing commands there as well. This would be relatively easy to do, he said, since mouse bindings are separate from everything else. Besides, as he &lt;a href=&quot;https://lwn.net/ml/emacs-devel/E1kHJB9-0007rt-Ea@fencepost.gnu.org/&quot;&gt;noted&lt;/a&gt;, the current mouse behavior was derived from &quot;&lt;span&gt;what was the standard in X Windows around 1990&lt;/span&gt;&quot;; while one wouldn't want to act in haste, it might just be about time for an update.&lt;/p&gt;
&lt;h4&gt;Discoverability&lt;/h4&gt;
&lt;p&gt;In general, Emacs has all of the capabilities that new users might wish to have (and more), but those capabilities can be difficult to discover and use. So a number of the proposed changes had to do with easing discovery. This came as an apparent surprise to some Emacs developers, who have long thought of the menu bar at the top of each window as being an easy way for users to discover features. But evidently it is common to disable the menu bar for Emacs; as Gregory Heytings &lt;a href=&quot;https://lwn.net/ml/emacs-devel/alpine.NEB.2.22.394.2009102307230453.22593@sdf.lonestar.org/&quot;&gt;put it&lt;/a&gt;, &quot;&lt;span&gt;menus are not 'modern'&lt;/span&gt;&quot;. To be &quot;modern&quot;, an application must either attach its menus to the right mouse button or, at most, provide a &quot;hamburger menu&quot; from a single button.&lt;/p&gt;
&lt;p&gt;Emacs could certainly move to that mode, at least until menu bars are fashionable again. But there are other ideas for improving discoverability circulating as well. One of those would be to offer a &quot;guided tour&quot; to new users upon the first invocation of the editor that would quickly introduce core Emacs features; this would be an enhancement of the tutorial that exists now. There was also a discussion of producing a series of videos, or perhaps just making use of the many videos that exist now. Stefan Monnier &lt;a href=&quot;https://lwn.net/ml/emacs-devel/jwvy2ljx6yc.fsf-monnier+emacs@gnu.org/&quot;&gt;suggested&lt;/a&gt; short videos to match the perceived attention span of young users, &quot;&lt;span&gt;ideally funny and sexy, maybe with a cat&lt;/span&gt;&quot;.&lt;/p&gt;
&lt;p&gt;A step beyond the guided tour would be some sort of &quot;configuration assistant&quot; that would run on the first invocation of Emacs. It could offer tours, but it would also give the user the opportunity to configure the editor in ways that might better match their expectations. Features like Cua mode could be enabled, for example, mouse bindings adjusted, and a depressing dark theme selected without the need to type a single parenthesis. That might be enough to overcome the initial shock of exposure to Emacs for many new users.&lt;/p&gt;
&lt;p&gt;One other suggestion that was raised frequently is to enable various modes that are not turned on by default in Emacs; indeed, several of them are not shipped with Emacs at all. For example, &lt;a href=&quot;https://www.emacswiki.org/emacs/IbufferMode&quot;&gt;Ibuffer&lt;/a&gt; is generally seen as superior to the standard Emacs buffer list, so many think it should replace the standard list. The Emacs &quot;undo&quot; mechanism is more capable than what is provided in many other editors, but it is also seen as difficult to use; some users think that the &lt;a href=&quot;https://elpa.gnu.org/packages/undo-tree.html&quot;&gt;undo-tree mode&lt;/a&gt; makes undo easier and should be shipped with Emacs and enabled by default. There are several modes that enhance the editor's command-search and autocompletion capabilities, including &lt;a href=&quot;https://github.com/abo-abo/swiper&quot;&gt;Ivy&lt;/a&gt;, &lt;a href=&quot;https://emacs-helm.github.io/helm/&quot;&gt;Helm&lt;/a&gt;, and &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_mono/ido.html&quot;&gt;Ido&lt;/a&gt;, among others. Many of these, it is argued, provide behavior more in line with current expectations and improve discoverability; one of them should be adopted and made the default.&lt;/p&gt;
&lt;h4&gt;Attracting developers&lt;/h4&gt;
&lt;p&gt;One problem with many of these packages is that they are not actually a part of GNU Emacs. Changing that would often require the author to sign copyrights over to the Free Software Foundation, which is not something all authors are willing to do. Similar problems arise with many of the derivative Emacs &quot;distributions&quot;, such as &lt;a href=&quot;https://www.spacemacs.org/&quot;&gt;spacemacs&lt;/a&gt; or &lt;a href=&quot;https://github.com/hlissner/doom-emacs&quot;&gt;Doom&lt;/a&gt;, which have clearly &lt;a href=&quot;https://lwn.net/ml/emacs-devel/87y2lkb6kb.fsf@gmail.com/&quot;&gt;eased the path into Emacs for some users&lt;/a&gt;. Some of the ideas found in these distributions may well merit inclusion in Emacs, but that does not happen. Emacs maintainer Eli Zaretskii &lt;a href=&quot;https://lwn.net/ml/emacs-devel/83363todcc.fsf@gnu.org/&quot;&gt;complained&lt;/a&gt; that the creators of these distributions do not contribute their work back.&lt;/p&gt;
&lt;p&gt;This points to one idea that did not really come up in the discussion, but which should be considered: part of the key to making Emacs more attractive to users might be making its development community more attractive to contributors. Adopting some of the more forge-oriented tools favored by younger developers might help in this regard, as might a less centralized governance model. Emacs remains an old-style GNU project, a fact which clearly &lt;a href=&quot;https://lwn.net/ml/emacs-devel/87mu1fb8kb.fsf@gnus.org/&quot;&gt;grates&lt;/a&gt; on its developers at times. Increasing the relevance of Emacs in the coming years is going to require more than new key bindings and some cat videos; it is likely to require attention to improving the experience at all levels.&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;br clear=&quot;all&quot; /&gt;&lt;blockquote&gt;
&lt;table class=&quot;Form&quot; readability=&quot;1.2534246575342&quot;&gt;&lt;tr readability=&quot;2.5068493150685&quot;&gt;&lt;td&gt;&lt;strong&gt;Did you like this article?&lt;/strong&gt; Please accept our &lt;a href=&quot;https://lwn.net/Promo/slink-trial2-3/claim&quot;&gt;trial subscription offer&lt;/a&gt; to be able to see more content like it and to participate in the discussion.&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/blockquote&gt;
&lt;hr width=&quot;60%&quot; align=&quot;left&quot; /&gt;
(&lt;a href=&quot;https://lwn.net/Login/?target=/Articles/832311/&quot;&gt;Log in&lt;/a&gt; to post comments)</description>
<pubDate>Fri, 25 Sep 2020 20:06:34 +0000</pubDate>
<dc:creator>lukastyrychtr</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://lwn.net/SubscriberLink/832311/03910e26a3f3e814/</dc:identifier>
</item>
<item>
<title>Ruby 3.0 Preview 1</title>
<link>https://www.ruby-lang.org/en/news/2020/09/25/ruby-3-0-0-preview1-released/?hn=t</link>
<guid isPermaLink="true" >https://www.ruby-lang.org/en/news/2020/09/25/ruby-3-0-0-preview1-released/?hn=t</guid>
<description>&lt;p class=&quot;post-info&quot;&gt;Posted by naruse on 25 Sep 2020&lt;/p&gt;
&lt;p&gt;We are pleased to announce the release of Ruby 3.0.0-preview1.&lt;/p&gt;
&lt;p&gt;It introduces a number of new features and performance improvements.&lt;/p&gt;
&lt;h2&gt;RBS&lt;/h2&gt;
&lt;p&gt;RBS is a language to describe the types of Ruby programs. Type checkers including type-profiler and other tools supporting RBS will understand Ruby programs much better with RBS definitions.&lt;/p&gt;
&lt;p&gt;You can write down the definition of classes and modules: methods defined in the class, instance variables and their types, and inheritance/mix-in relations. The goal of RBS is to support commonly seen patterns in Ruby programs and it allows writing advanced types including union types, method overloading, and generics. It also supports duck typing with &lt;em&gt;interface types&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ruby 3.0 ships with &lt;code class=&quot;highlighter-rouge&quot;&gt;rbs&lt;/code&gt; gem, which allows parsing and processing type definitions written in RBS.&lt;/p&gt;
&lt;p&gt;The following is a small example of RBS.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rbs&quot; data-lang=&quot;rbs&quot;&gt;module ChatApp
  VERSION: String

  class Channel
    attr_reader name: String
    attr_reader messages: Array[Message]
    attr_reader users: Array[User | Bot]              # `|` means union types, `User` or `Bot`.

    def initialize: (String) -&amp;gt; void

    def post: (String, from: User | Bot) -&amp;gt; Message   # Method overloading is supported.
            | (File, from: User | Bot) -&amp;gt; Message
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/rbs&quot;&gt;README of rbs gem&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;h2&gt;Ractor (experimental)&lt;/h2&gt;
&lt;p&gt;Ractor is an Actor-model like concurrent abstraction designed to provide a parallel execution feature without thread-safety concerns.&lt;/p&gt;
&lt;p&gt;You can make multiple ractors and you can run them in parallel. Ractor enables to make thread-safe parallel programs because ractors can not share normal objects. Communication between ractors are supported by message passing.&lt;/p&gt;
&lt;p&gt;To limit sharing objects, Ractor introduces several restrictions to the Ruby’s syntax (without multiple Ractors, there is no changes).&lt;/p&gt;
&lt;p&gt;The specification and implmentation are not matured and changed in future, so this feature is marked as experimental and show the experimental feature warning if Ractor is created.&lt;/p&gt;
&lt;p&gt;The following small program calculates &lt;code class=&quot;highlighter-rouge&quot;&gt;prime?&lt;/code&gt; in parallel with two ractors and about x2 times faster with two or more cores than sequential program.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'prime'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# n.prime? with sent integers in r1, r2 run in parallel&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Ractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;recv&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prime?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# send parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# wait for the results of expr1, expr2&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; true&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;see &lt;a href=&quot;https://github.com/ruby/ruby/blob/master/doc/ractor.md&quot;&gt;doc/ractor.md&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;h2&gt;Scheduler (Experimental)&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread#scheduler&lt;/code&gt; is introduced for intercepting blocking operations. This allows for light-weight concurrency without changing existing code.&lt;/p&gt;
&lt;p&gt;Currently supported classes/methods:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mutex#lock&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Mutex#unlock&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Mutex#sleep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ConditionVariable#wait&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Queue#pop&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;SizedQueue#push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread#join&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Kernel#sleep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IO#wait&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;IO#read&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;IO#write&lt;/code&gt; and related methods (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;#wait_readable&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#gets&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#puts&lt;/code&gt; and so on).&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IO#select&lt;/code&gt; is &lt;em&gt;not supported&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The current entry point for concurrency is &lt;code class=&quot;highlighter-rouge&quot;&gt;Fiber.schedule{...}&lt;/code&gt; however this is subject to change by the time Ruby 3 is released.&lt;/p&gt;
&lt;p&gt;Currently, there is a test scheduler available in &lt;a href=&quot;https://github.com/socketry/async/pull/56&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Async::Scheduler&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://github.com/ruby/ruby/blob/master/doc/scheduler.md&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;doc/scheduler.md&lt;/code&gt;&lt;/a&gt; for more details. [Feature #16786]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;: This feature is strongly experimental. Both the name and feature will change in next preview release.&lt;/p&gt;
&lt;h2&gt;Other Notable New Features&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Rightward assignment statement is added.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 55&lt;/span&gt;
  &lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Endless method definition is added.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
  &lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;Find pattern is added.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [&quot;a&quot;, 1]&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;b&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;c&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [2, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, 3]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hash#except&lt;/code&gt; is now built-in.&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;a: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;b: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;c: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; {:b=&amp;gt;2, :c=&amp;gt;3}&lt;/span&gt;
  &lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Performance improvements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Many improvements were implemented in MJIT. See NEWS in detail.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Other notable changes since 2.7&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Keyword arguments are separated from other arguments.
&lt;ul&gt;&lt;li&gt;In principle, code that prints a warning on Ruby 2.7 won’t work. See the &lt;a href=&quot;https://www.ruby-lang.org/en/news/2019/12/12/separation-of-positional-and-keyword-arguments-in-ruby-3-0/&quot;&gt;document&lt;/a&gt; in detail.&lt;/li&gt;
&lt;li&gt;By the way, arguments forwarding now supports leading arguments.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;do_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meth&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;
&lt;/pre&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The feature of &lt;code class=&quot;highlighter-rouge&quot;&gt;$SAFE&lt;/code&gt; was completely removed; now it is a normal global variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The order of backtrace had been reversed at Ruby 2.5, but it was cancelled. Now it behaves like Ruby 2.4; an error message and the line number where the exception occurs are printed first, and its callers are printed later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Some standard libraries are updated.
&lt;ul&gt;&lt;li&gt;RubyGems 3.2.0.rc.1&lt;/li&gt;
&lt;li&gt;Bundler 2.2.0.rc.1&lt;/li&gt;
&lt;li&gt;IRB 1.2.6&lt;/li&gt;
&lt;li&gt;Reline 0.1.5&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The following libraries are no longer bundled gems. Install corresponding gems to use these features.
&lt;ul&gt;&lt;li&gt;net-telnet&lt;/li&gt;
&lt;li&gt;xmlrpc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Promote default gems to bundled gems.
&lt;/li&gt;
&lt;li&gt;Promote stdlib to default gems. The following default gems were published on rubygems.org
&lt;ul&gt;&lt;li&gt;abbrev&lt;/li&gt;
&lt;li&gt;base64&lt;/li&gt;
&lt;li&gt;English&lt;/li&gt;
&lt;li&gt;erb&lt;/li&gt;
&lt;li&gt;find&lt;/li&gt;
&lt;li&gt;io-nonblock&lt;/li&gt;
&lt;li&gt;io-wait&lt;/li&gt;
&lt;li&gt;net-ftp&lt;/li&gt;
&lt;li&gt;net-http&lt;/li&gt;
&lt;li&gt;net-imap&lt;/li&gt;
&lt;li&gt;net-protocol&lt;/li&gt;
&lt;li&gt;nkf&lt;/li&gt;
&lt;li&gt;open-uri&lt;/li&gt;
&lt;li&gt;optparse&lt;/li&gt;
&lt;li&gt;resolv&lt;/li&gt;
&lt;li&gt;resolv-replace&lt;/li&gt;
&lt;li&gt;rinda&lt;/li&gt;
&lt;li&gt;securerandom&lt;/li&gt;
&lt;li&gt;set&lt;/li&gt;
&lt;li&gt;shellwords&lt;/li&gt;
&lt;li&gt;tempfile&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;tmpdir&lt;/li&gt;
&lt;li&gt;tsort&lt;/li&gt;
&lt;li&gt;weakref&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/ruby/blob/v3_0_0/NEWS&quot;&gt;NEWS&lt;/a&gt; or &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_7_0...v3_0_0&quot;&gt;commit logs&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;With those changes, &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_7_0...v3_0_0&quot;&gt;3385 files changed, 150159 insertions(+), 124949 deletions(-)&lt;/a&gt; since Ruby 2.7.0!&lt;/p&gt;
&lt;p&gt;Please try Ruby 3.0.0-preview1, and give us any feedback!&lt;/p&gt;
&lt;h2&gt;Download&lt;/h2&gt;
&lt;ul readability=&quot;0.80397936624908&quot;&gt;&lt;li readability=&quot;-0.8&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.bz2&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.bz2&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 15538340
SHA1: 032697f3ace0a697cd72f68bac0032c31a8328d4
SHA256: 013bdc6e859d76d67a6fcd990d401ed57e6e25896bab96d1d0648a877f556dbb
SHA512: 3a6a6458d9c5f06555ab8705160f6b071f4dbe9d2a91cd7848852633657b495c480d74e4b2ff2cebddda556118d26bbb271160c989bc970bb1b5cb234e868d2f
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.8023598820059&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.gz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 17747808
SHA1: 2842d2af2568d74c8d4071f5f536889a6b149202
SHA256: ce8bd7534e7ec2a870b24d2145ea20e9bbe5b2d76b7dfa1102dbee5785253105
SHA512: b94892951f842a1538f4b99022606ac2c0b5031f1ede7eef3833a8caa9ed63e9b22868509173bfefb406f263c65211db75597b152b61f49e5ba2a875fce63a27
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.8023598820059&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.xz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.tar.xz&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 12703060
SHA1: 91d9fbe87504924148deeec90199d6ff4d7dcf56
SHA256: aa7cce0c99f4ea2145fef9b78d74a44857754396790cd23bad75d759811e7a2a
SHA512: dca5dcc965c434371947c100864090e29e649e19ae24b8bb2e88a534ebd8220c5a086035a999b1e8b1cd5ec154a6985a8d8dfea56095d712d62aeea7a2054f7d
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.80952380952381&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.zip&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0-preview1.zip&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 22002645
SHA1: 4b5b61066373daf0a947d3fafe2645788504a164
SHA256: a39a48ed9a8ca2c83d65d225a1bb3db331c6587a77ba156c20e630c1b4bfc23b
SHA512: 10f6f28715a52093d7d9da82d1678147091b45e2f279e463626adea8efbf181485daa42565e5086057ffb45a097ffb8ff395c572b247b6b5da27d85933cf58a8
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;3.0.0-preview2 trailer&lt;/h2&gt;
&lt;p&gt;We plan to include &lt;a href=&quot;https://github.com/mame/ruby-type-profiler&quot;&gt;“type-profiler”&lt;/a&gt; that is a static type analysis feature. Stay tuned!&lt;/p&gt;
&lt;h2&gt;What is Ruby&lt;/h2&gt;
&lt;p&gt;Ruby was first developed by Matz (Yukihiro Matsumoto) in 1993, and is now developed as Open Source. It runs on multiple platforms and is used all over the world especially for web development.&lt;/p&gt;
</description>
<pubDate>Fri, 25 Sep 2020 19:08:24 +0000</pubDate>
<dc:creator>polysaturate</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ruby-lang.org/en/news/2020/09/25/ruby-3-0-0-preview1-released/?hn=t</dc:identifier>
</item>
<item>
<title>Swift System Is Now Open Source</title>
<link>https://swift.org/blog/swift-system/</link>
<guid isPermaLink="true" >https://swift.org/blog/swift-system/</guid>
<description>&lt;header readability=&quot;1.7872340425532&quot;&gt;
&lt;time pubdate=&quot;&quot; datetime=&quot;2020-09-25T05:00:00-04:00&quot;&gt;September 25, 2020&lt;/time&gt;
&lt;p&gt;Michael Ilseman is an engineer on the Swift Standard Library team at Apple.&lt;/p&gt;
&lt;/header&gt;&lt;p&gt;In June, Apple introduced Swift System, a new library for Apple platforms that provides idiomatic interfaces to system calls and low-level currency types. Today, I’m excited to announce that we’re open-sourcing &lt;a href=&quot;https://github.com/apple/swift-system&quot;&gt;System&lt;/a&gt; and adding Linux support! Our vision is for System to eventually act as the single home for low-level system interfaces for all supported Swift platforms.&lt;/p&gt;&lt;h2 id=&quot;goodbye-imported-c-interfaces&quot;&gt;Goodbye Imported C Interfaces&lt;/h2&gt;
&lt;p&gt;Most operating systems today support some flavor of system interfaces written in C that have existed for decades. While it is possible to use these APIs directly from Swift, these weakly-typed system interfaces imported from C can be error-prone and unwieldy. For example, the &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; system call (available on UNIX-like operating systems such as Linux and Apple platforms) imports as a pair of global functions:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UnsafePointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CChar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;oflag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int32&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UnsafePointer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;CChar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;oflag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int32&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These weakly-typed functions suffer from several shortcomings and fail to utilize the expressivity and type safety of Swift:&lt;/p&gt;
&lt;ul readability=&quot;9.5&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;File descriptors, alongside options, commands, errno, and other values, are imported as ordinary &lt;code class=&quot;highlighter-rouge&quot;&gt;Int32&lt;/code&gt;s.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;oflag&lt;/code&gt; argument is actually a logical OR-ing of exactly one file access mode and any number of flags, but this is not captured in the type of &lt;code class=&quot;highlighter-rouge&quot;&gt;oflag&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;Callers of &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; have to remember to check for a negative return value indicating an error, and if so check the value of the global variable &lt;code class=&quot;highlighter-rouge&quot;&gt;errno&lt;/code&gt; to know what error occurred. Additionally, some system calls may be canceled if a signal occurred, requiring callers to remember to write a loop around such calls checking for &lt;code class=&quot;highlighter-rouge&quot;&gt;EINTR&lt;/code&gt; errors.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;File paths are unmanaged pointers, and if they are derived from a managed object (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&amp;lt;CChar&amp;gt;&lt;/code&gt;), then callers must ensure that array is always null-terminated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;None of these semantic rules are captured in the API’s signature, preventing the programming language from guiding the user towards correct usage of the API.&lt;/p&gt;
&lt;h2 id=&quot;hello-idiomatic-swift-interfaces&quot;&gt;Hello Idiomatic Swift Interfaces&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt; module brings various language features to bear to improve expressivity and eliminate these opportunities for error. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt; defines the &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; system call as a static function with defaulted arguments in the &lt;code class=&quot;highlighter-rouge&quot;&gt;FileDescriptor&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// Opens or creates a file for reading or writing.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// - Parameters:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///  - path: The location of the file to open.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///  - mode: The read and write access to use.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///  - options: The behavior for opening the file.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///  - permissions: The file permissions to use for created files.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///  - retryOnInterrupt: Whether to retry the open operation&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///    if it throws `Errno.interrupted`.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///    The default is `true`.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///    Pass `false` to try only once and throw an error upon interruption.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// - Returns: A file descriptor for the open file&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;///&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;/// The corresponding C function is `open`.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FilePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;AccessMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;OpenOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;OpenOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FilePermissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nv&quot;&gt;retryOnInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When one compares this version of &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; to the original version from C, several significant differences stand out:&lt;/p&gt;
&lt;ul readability=&quot;4&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt; pervasively uses raw representable structs and option sets. These strong types help catch mistakes at compile time and are trivial to convert to and from the weaker C types.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Errors are thrown using the standard language mechanism and cannot be missed. Further, all system calls interruptible by a signal take a defaulted-true &lt;code class=&quot;highlighter-rouge&quot;&gt;retryOnInterrupt&lt;/code&gt; argument, causing them to retry on failure. When combined, these two changes dramatically simplify error and signal handling.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FilePath&lt;/code&gt; is a managed, null-terminated bag-of-bytes that conforms to &lt;code class=&quot;highlighter-rouge&quot;&gt;ExpressibleByStringLiteral&lt;/code&gt; — far safer to work with than a &lt;code class=&quot;highlighter-rouge&quot;&gt;UnsafePointer&amp;lt;CChar&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The result is code that reads and behaves like idiomatic Swift. For example, this code creates a file path from a string literal and uses it to open and append to a log file:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FilePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/tmp/log&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;permissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ownerReadWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;closeAfter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;writeAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;a-multi-platform-library&quot;&gt;A Multi-platform Library&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt; is a multi-platform library, not a cross-platform one. It provides a separate set of APIs and behaviors on every supported platform, closely reflecting the underlying OS interfaces. A single &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; will pull in the native platform interfaces specific for the targeted OS.&lt;/p&gt;
&lt;p&gt;Our immediate goal is to simplify building cross-platform libraries and applications such as &lt;a href=&quot;https://github.com/apple/swift-nio&quot;&gt;SwiftNIO&lt;/a&gt; and the &lt;a href=&quot;https://github.com/apple/swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;System&lt;/code&gt; does not eliminate the need for &lt;code class=&quot;highlighter-rouge&quot;&gt;#if os()&lt;/code&gt; conditionals to implement cross-platform abstractions, but it does make it safer and more expressive to fill out the platform-specific parts.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What’s Next?&lt;/h2&gt;
&lt;p&gt;System is only in its infancy—it currently includes a small number of system calls, currency types, and convenience functionality. As part of the effort to increase the API coverage, we’ll be working to adopt System in the Swift Package Manager. This will include &lt;a href=&quot;https://github.com/apple/swift-system/pull/2&quot;&gt;enhancements to FilePath&lt;/a&gt; and adding support for the recently announced &lt;a href=&quot;https://swift.org/blog/swift-on-windows/&quot;&gt;Swift on Windows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There’s a ton of exciting work left to do. System (especially the forthcoming Windows support!) is a fantastic opportunity to get involved in the Swift project and help it grow into a strong, vibrant, cross-platform ecosystem.&lt;/p&gt;
&lt;h2 id=&quot;get-involved&quot;&gt;Get Involved&lt;/h2&gt;
&lt;p&gt;Your experience, feedback, and contributions are greatly encouraged!&lt;/p&gt;
&lt;h2 id=&quot;questions&quot;&gt;Questions?&lt;/h2&gt;
&lt;p&gt;Please feel free to ask questions about this post in the &lt;a href=&quot;https://forums.swift.org/t/swift-system-is-now-open-source&quot;&gt;associated thread&lt;/a&gt; on the &lt;a href=&quot;https://forums.swift.org/&quot;&gt;Swift forums&lt;/a&gt;.&lt;/p&gt;
&lt;footer&gt;&lt;nav&gt;&lt;a href=&quot;https://swift.org/blog/swift-on-windows/&quot; rel=&quot;prev&quot; title=&quot;Previous: Introducing Swift on Windows&quot;&gt;Introducing Swift on Windows&lt;/a&gt;&lt;/nav&gt;&lt;/footer&gt;</description>
<pubDate>Fri, 25 Sep 2020 19:00:54 +0000</pubDate>
<dc:creator>NobodyNada</dc:creator>
<og:image>https://swift.org/touch-icon-ipad-180x180.png</og:image>
<og:type>article</og:type>
<og:title>Swift System is Now Open Source</og:title>
<og:url>https://swift.org/blog/swift-system/</og:url>
<og:description>In June, Apple introduced Swift System, a new library for Apple platforms that provides idiomatic interfaces to system calls and low-level currency types. Today, I’m excited to announce that we’re open-sourcing System and adding Linux support! Our vision is for System to eventually act as the single home for low-level system interfaces for all supported Swift platforms.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://swift.org/blog/swift-system/</dc:identifier>
</item>
<item>
<title>Pijul: A intuitive VCS unlike Git that&amp;#039;s based on sound theory of patches</title>
<link>https://pijul.org/</link>
<guid isPermaLink="true" >https://pijul.org/</guid>
<description>&lt;p&gt;Pijul is a free and open source (GPL2) &lt;strong&gt;distributed version control system&lt;/strong&gt;. Its distinctive feature is to be based on a &lt;strong&gt;sound theory of patches&lt;/strong&gt;, which makes it easy to learn and use, and &lt;em&gt;really&lt;/em&gt; distributed.&lt;/p&gt;
&lt;p&gt;Since April 2017, Pijul is &lt;strong&gt;bootstrapped&lt;/strong&gt;, meaning that we use it for its own development. See its repository there:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nest.pijul.com/pijul_org/pijul&quot;&gt;https://nest.pijul.com/pijul_org/pijul&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;section group&quot; readability=&quot;10.558823529412&quot;&gt;
&lt;div class=&quot;col span_1_of_3&quot; readability=&quot;9.2857142857143&quot;&gt;&lt;a href=&quot;https://pijul.org/model/#why-care-about-patch-theory&quot;&gt;&lt;img src=&quot;https://pijul.org/img/accessibility.png&quot;/&gt;&lt;/a&gt;
&lt;h3&gt;Simple&lt;/h3&gt;
&lt;p&gt;Because Pijul is based on a sound model of collaborative editing, its behavior matches intuition, every time.&lt;/p&gt;
&lt;a href=&quot;https://pijul.org/model/#why-care-about-patch-theory&quot;&gt;Read More&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;col span_1_of_3&quot; readability=&quot;8.325&quot;&gt;&lt;a href=&quot;https://pijul.org/model/#pushouts-and-distributed-algorithms&quot;&gt;&lt;img src=&quot;https://pijul.org/img/sharing.png&quot;/&gt;&lt;/a&gt;
&lt;h3&gt;Truly Distributed&lt;/h3&gt;
&lt;p&gt;Means no more downtime,&lt;br/&gt;no possibilities of censorship, be it from states or from companies.&lt;/p&gt;
&lt;a href=&quot;https://pijul.org/model/#pushouts-and-distributed-algorithms&quot;&gt;Read More&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;col span_1_of_3&quot; readability=&quot;8.1188811188811&quot;&gt;&lt;a href=&quot;https://pijul.org/model/#efficient-algorithms&quot;&gt;&lt;img src=&quot;https://pijul.org/img/power.png&quot;/&gt;&lt;/a&gt;
&lt;h3&gt;Fast&lt;/h3&gt;
&lt;p&gt;Pijul started as an attempt to fix the performance of &lt;a href=&quot;http://darcs.net&quot;&gt;darcs&lt;/a&gt;, and ended up among the fastest distributed version control systems.&lt;/p&gt;
&lt;a href=&quot;https://pijul.org/model/#efficient-algorithms&quot;&gt;Read More&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 25 Sep 2020 18:14:24 +0000</pubDate>
<dc:creator>pcr910303</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://pijul.org/</dc:identifier>
</item>
<item>
<title>Be skeptical of Ring&amp;#039;s indoor security drone</title>
<link>https://spectrum.ieee.org/automaton/robotics/drones/ring-indoor-security-drone</link>
<guid isPermaLink="true" >https://spectrum.ieee.org/automaton/robotics/drones/ring-indoor-security-drone</guid>
<description>&lt;!-- Google Tag Manager (noscript) --&gt;&amp;#13;
&lt;noscript&gt;&amp;#13;
	&amp;#13;
&lt;/noscript&gt;&amp;#13;
&amp;#13;
&lt;noscript&gt;&amp;#13;
	&amp;#13;
&lt;/noscript&gt;&amp;#13;
&lt;!-- End Google Tag Manager (noscript) --&gt;&amp;#13;
&amp;#13;
&amp;#13;
	&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
 &amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
	&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
 &amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
	&lt;!-- 	&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/static/js/splash.js&quot;&gt;&lt;/script&gt; --&gt;&lt;header id=&quot;header&quot;&gt;&lt;div id=&quot;ieee-metanav&quot;&gt;
			&lt;div class=&quot;common-wrap&quot;&gt;
				&lt;ul class=&quot;inline-list col-md-9 col-sm-6 col-xs-6 left-nav&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://spectrum.ieee.org/static/enhance-your-spectrum-experience-become-an-ieee-member&quot;&gt;Join IEEE&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;sep hide-mobile&quot;&gt;|&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;hide-mobile&quot;&gt;&lt;a href=&quot;http://www.ieee.org&quot; target=&quot;_blank&quot;&gt;IEEE.org&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;sep hide-mobile&quot;&gt;|&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;hide-mobile&quot;&gt;&lt;a href=&quot;http://ieeexplore.ieee.org&quot; target=&quot;_blank&quot;&gt;IEEE &lt;em&gt;Xplore&lt;/em&gt; Digital Library&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;sep hide-mobile&quot;&gt;|&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;hide-mobile&quot;&gt;&lt;a href=&quot;http://standards.ieee.org&quot; target=&quot;_blank&quot;&gt;IEEE Standards&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;sep hide-mobile&quot;&gt;|&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;spec-link hide-mobile&quot;&gt;&lt;a href=&quot;https://spectrum.ieee.org/&quot;&gt;&lt;span&gt;IEEE Spectrum&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;sep hide-mobile&quot;&gt;|&lt;/li&gt;&amp;#13;
					&lt;li class=&quot;hide-mobile&quot;&gt;&lt;a href=&quot;http://www.ieee.org/sitemap&quot; target=&quot;_blank&quot;&gt;More Sites&lt;/a&gt;&lt;/li&gt;&amp;#13;
					&amp;#13;
				&lt;/ul&gt;&lt;div class=&quot;col-md-3 col-sm-4 col-xs-4 right-nav&quot;&gt;
				&lt;ul class=&quot;inline-list right-nav-elem&quot;&gt;&lt;li&gt;&lt;a class=&quot;create-account&quot; href=&quot;https://www.ieee.org/profile/public/createwebaccount/showCreateAccount.html?sourceCode=spectrum&amp;amp;signinurl=&amp;#13;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;https://spectrum.ieee.org/user/login&amp;amp;url=https://spectrum.ieee.org/automaton/robotics/drones/ring-indoor-security-drone&amp;amp;autoSignin=Y&amp;amp;car=IEEE-Spectrum&quot;&gt;Create&amp;#13;
											Account&lt;/a&gt;&lt;/li&gt;&amp;#13;
									&amp;#13;
											&amp;#13;
								&amp;#13;
								&lt;li class=&quot;sep&quot;&gt;|&lt;/li&gt;&amp;#13;
								&amp;#13;
									&amp;#13;
									&lt;li&gt;&lt;a class=&quot;sign-in&quot; href=&quot;https://spectrum.ieee.org/user/login&quot;&gt;Sign In&lt;/a&gt;&lt;/li&gt;&amp;#13;
									&amp;#13;
									&amp;#13;
									&amp;#13;
							&amp;#13;
							&amp;#13;
						&amp;#13;
					&amp;#13;
					&lt;/ul&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;&amp;#13;
&amp;#13;
    &lt;/header&gt;&lt;!--/header--&gt;&lt;section class=&quot;col-med-12columns col-xs-12columns&quot;&gt;&lt;app-root&gt;&amp;#13;
			&lt;/app-root&gt;&lt;/section&gt;&lt;!-- END Parsely Include --&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.css&quot;/&gt;</description>
<pubDate>Fri, 25 Sep 2020 16:37:22 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://spectrum.ieee.org/automaton/robotics/drones/ring-indoor-security-drone</dc:identifier>
</item>
</channel>
</rss>