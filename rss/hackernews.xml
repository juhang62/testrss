<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Wavve: making $76k a month turning podcasts into videos</title>
<link>https://www.failory.com/interview/wavve</link>
<guid isPermaLink="true" >https://www.failory.com/interview/wavve</guid>
<description>&lt;div class=&quot;interview-rich-text w-richtext&quot; readability=&quot;133.79679144385&quot;&gt;
&lt;h4&gt;Hi Baird! What's your background, and what are you currently working on?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;Howdy! üëãü§†¬† I‚Äôm Baird. I‚Äôm 33 and based in Charleston, SC. I am a founder at &lt;a href=&quot;http://wavve.co&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Wavve&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;http://zubtitle.com&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Zubtitle&lt;/strong&gt;&lt;/a&gt;, and a founding partner at &lt;a href=&quot;http://lofi.ventures&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Lofi Ventures&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe allowfullscreen=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://www.youtube.com/embed/P8v2kAxelsE&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Most of my day job is running Wavve alongside &lt;a href=&quot;https://twitter.com/nickfogle&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Nick Fogle&lt;/strong&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://twitter.com/robmoo_re&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Rob Moore&lt;/strong&gt;&lt;/a&gt;. Wavve is a SaaS product that helps podcasters, musicians, and other audio creators to promote their content on social media. Here are a few examples:&lt;/p&gt;

&lt;p&gt;‚Äç&lt;/p&gt;
&lt;p&gt;Our business model is typical SaaS. We offer monthly and annual subscriptions that range between $8 and $60 per month. We currently have about 6,000 active subscribers.&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;What's your backstory and how did you come up with the idea?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;My first job out of college after studying communications was with a large software company in Charleston answering Tier 1 support calls. We supported an enterprise CRM product for non-profits. Then I moved into sales as an early employee at a local startup (also in non-profit tech), so most of my background is in support &amp;amp; sales/marketing.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;I was pretty lucky to have opportunities in tech and work with a growing startup to learn skills. The support job taught me how to work with existing customers and how to listen properly to help them solve a problem. As a sales-engineer, I was able to work between the sales &amp;amp; engineering team to help them with demos, scopes, technical evaluations, etc.,¬†&lt;/p&gt;
&lt;p&gt;I got married in January 2015 and in February, I told my wife I wanted to quit my job and start a company. It was the first she had heard of this üò¨üò¨&lt;/p&gt;
&lt;p&gt;I kept telling her about all my ideas and she finally forced me to meetup with one of her close friend‚Äôs husband, Nick, who was also driving his wife crazy. We were both getting the entrepreneurial itch. Our wives got tired of hearing all about our ideas and forced us to go get coffee and talk to each other about them.¬†&lt;/p&gt;
&lt;p&gt;We started in 2015 with an attempt to build a new kind of social network. One where you followed radio shows, podcasts, topics, and other subjects and &lt;em&gt;verbally&lt;/em&gt; talked with other fans about them instead of typing. Think Reddit crossed with audio &amp;amp; Twitter.¬†&lt;/p&gt;
&lt;p&gt;Long story short, we launched the product in 2015. It took on a few different iterations as we pivoted around looking for product market fit. We found it with consumers but never actually built a business around it.¬†&lt;/p&gt;
&lt;p&gt;I had already left my job and was working on this full time hoping to raise money, which never happened. Trying to simultaneously bootstrap the product, gain initial traction, and fundraise was really stressful. It felt like we were grasping for straws with any partnership we could find or feature we could build. We lost about 2 years of our time and $30k of my savings (which was most of it).¬†&lt;/p&gt;
&lt;p&gt;We held on to the dream way too long. We kept chasing the next feature, the next business model idea, the next big partnership, etc., until we ran out of time &amp;amp; money.¬†&lt;/p&gt;

&lt;h4&gt;How did you build Wavve?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;We actually built Wavve as an internal marketing tool just before we sold the codebase and IP of the previous company (even with the sale, we were still way in the hole).¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We wanted to share audio from our social network on social media but realized very quickly that it isn‚Äôt possible to do that. Nick built the initial version of a weekend but it was only used internally. I had to commit images &amp;amp; design specs to Github to update the hard coded templates that were in place. It was a pretty manual process but I was able to navigate it fairly well and use it for social media marketing.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Once we realized the original company wasn‚Äôt going to work out, we started creating ‚Äòaudiograms‚Äô for podcasters and showing them how it works. We got interested on social media pretty quickly and realized there was a market for this product.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;The original web app was built using angular.js, node.js, and mongoDB. We used a few open source libraries including FFMEG to create the animations. The original infrastructure wasn‚Äôt extremely efficient as it relied on large EC2 instances behind a load balancer. However, our usage was fairly predictable so we were able to scale it up and down manually as needed.¬†&lt;br/&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9b9217ca534caf13d5/5e7c0aa6d9703e5793490cbb_mAFC9T1SUQwD2IRd8jEYnb2vyNuozbN2l-Tx8W3wOGenRhSGpzDajxOkWc9M6A-F-J36QS0Xszd2tNC_StfCydfqQNJOuZ4iiOUgBewFoJ9vYOk3X1urxEYj7Erxs2pUfAaG4ZQx.gif&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Getting those first 10/100+ customers was really hard. We relied primarily on direct outreach via cold email and social media messaging to obtain those first customers. Taking the time to reach out directly to customers for a $7/month plan was painful but the insights we gained from those conversations was invaluable. We learned why customers purchased the product and that helped inform our content marketing strategy which started working after about 6 months.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We never did an official launch of any kind. We just pushed the app live and used direct emailing, social media outreach, and constant product development based on feedback. We also learned pretty quickly that podcasters don‚Äôt have large budgets (if any), and needed a price point around the $10-20 per month range for this type of product. That meant that we needed to go for a large number of customers to make this a full time gig for us.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block-ad-div&quot; readability=&quot;9.6753246753247&quot;&gt;
&lt;h3 class=&quot;black-text&quot;&gt;Do you want to focus on your business instead of on your marketing channels?&lt;br/&gt;&lt;/h3&gt;
&lt;p class=&quot;black-text&quot;&gt;Tuff was created by startup founders who experienced the same pain around marketing that you're feeling. There was no affordable service for growth marketing for startups, so Tuff‚Äôs founders decided to start their own.&lt;br/&gt;&lt;/p&gt;
&lt;a href=&quot;https://tuffgrowth.com/startups/?utm_source=failory&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=adblock&quot; target=&quot;_blank&quot; class=&quot;ad-block-button-tuff w-button&quot;&gt;Learn More&lt;/a&gt;&lt;/div&gt;
&lt;a href=&quot;https://www.failory.com/get/genm&quot; target=&quot;_blank&quot; class=&quot;between-ad-div w-inline-block w-clearfix&quot;&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd0c30e47857f5459cf92_GenM%20Icon.png&quot; width=&quot;40&quot; srcset=&quot;https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd0c30e47857f5459cf92_GenM%20Icon-p-500.png 500w, https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd0c30e47857f5459cf92_GenM%20Icon.png 512w&quot; sizes=&quot;100vw&quot; alt=&quot;&quot; class=&quot;between-ad-image&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;between-ad-text&quot;&gt;&lt;span class=&quot;between-ad-bold&quot;&gt;Hire digital marketing interns.&lt;/span&gt; 40 hours for $49/month.&lt;/p&gt;
&lt;p&gt;Learn More!&lt;/p&gt;
&lt;p class=&quot;between-ad-ad&quot;&gt;AD&lt;/p&gt;
&lt;div class=&quot;morningbrew-block-ad&quot; readability=&quot;9.4181818181818&quot;&gt;
&lt;h3 class=&quot;black-text&quot;&gt;&lt;strong&gt;From Wall Street to Silicon Valley...&lt;/strong&gt;&lt;br/&gt;&lt;/h3&gt;
&lt;p class=&quot;black-text&quot;&gt;Are you busy? Sure you are ‚Äî that's why you need Morning Brew. It's a free daily email that gives a quick 5-minute rundown of the day's top business news. Join the 925,000+ people who start their day with Morning Brew!&lt;br/&gt;&lt;/p&gt;
&lt;a href=&quot;https://www.failory.com/get/morning-brew&quot; target=&quot;_blank&quot; class=&quot;ad-block-button-growthmentor w-button&quot;&gt;üëâ Learn More!&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;place-your-ad-interview w-hidden-main w-hidden-medium w-hidden-small w-hidden-tiny&quot; readability=&quot;41.145038167939&quot;&gt;
&lt;h3 class=&quot;heading-place-your-ad-interview&quot;&gt;&lt;strong&gt;Reach +20,000 Startup Founders!&lt;/strong&gt;&lt;br/&gt;&lt;/h3&gt;
&lt;p class=&quot;paragraph-place-yur-ad-interview&quot;&gt;If you are looking to get your product in front of founders, CEOs, VPs, web and mobile developers, makers, consultants, marketers, bloggers, product managers, and many other thought leaders, then we can help you.&lt;br/&gt;&lt;/p&gt;
&lt;a href=&quot;https://www.failory.com/sponsors&quot; target=&quot;_blank&quot; class=&quot;button-place-your-ad-interview w-button&quot;&gt;üëâ Sponsorships&lt;/a&gt;&lt;/div&gt;
&lt;div class=&quot;interview-rich-text w-richtext&quot; readability=&quot;94.417007597896&quot;&gt;
&lt;h4&gt;Which were your marketing strategies to grow your business?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;When we launched the first version of Wavve we didn‚Äôt have an audience and thanks to our failed startup the year before, we didn‚Äôt have any funds. The only real resource we had was time (outside of freelancing to pay the bills) so we started with direct sales. Direct sales was a great way to validate the product and ensure that we people would pay for the product.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;It seems obvious now but podcasting was really starting to hit its stride in 2016 &amp;amp; 17 so we decided early on to double down on podcasters. We built some scraping tools to build a list of podcasters and began reaching out to them personally via email. The results came in slowly but this was a great strategy to test our messaging, pricing, and packaging.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Once we realized our price point was going to fall between the $10-$30 range, we knew we had to find something more scalable. We then started focusing on content marketing through our blog. We started with simple how-to pieces and then graduated to more podcast focused content. Our approach wasn‚Äôt very scientific. We simply put ourselves in the shoes of our target customers (podcasters that also have a related business) and wrote content around how to start, launch, and grow a podcast.¬†&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9b9217ca534caf13d5/5e7c0b6ef7fc3c82555fb083_3m5rVciG8oR7QRu3zf_rHFQuOeF8WjPzFHeXON6_8sr2VuS_I3JN-yx4qRZb-LmxMuANGYwAi311OzaQkYg7T5dScBTZi56U6nqthKSSWKvwEKMldD5RYP0PY0rm9dhZU9VljgTV.png&quot; alt=&quot;Wavve Analytics&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Traction has always been slow and linear for us. We never really hit any specific inflection point that made us feel like the business was going to ‚Äúmake it‚Äù. Rather, we just keep being consistent with content marketing and social media. With every month of growth, our monthly recurring revenue began to grow&lt;/p&gt;
&lt;p&gt;We have been lucky in that our product creates shareable social content. This naturally encourages &lt;strong&gt;word of mouth growth&lt;/strong&gt;. Once we noticed this happening, we really doubled down on making sure our product made videos stand out on social media. The more we could get people asking ‚ÄúWow. How did you make that video?‚Äù, the more referrals we would get.¬†&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9b9217ca534caf13d5/5e7c0b704149344eddc17e82_IjeKdTfcFxRLt-j26QNaWHo8QiyNyZypprYkI-Zl9kKHJvN5rBKOzZ-T7lEOsoyHG90ZGKzovnsuZizVVd1S5BsQPODdQirsz6qDknldnC6A7JDVs-NmsXZVq9LAaeSwQfc6QB4B.gif&quot; alt=&quot;Wavve GIF&quot;/&gt;&lt;/div&gt;
&lt;p&gt;We focused a lot on creating high-quality, custom audio animations. These animations are a staple of our product and while we had competitors, no one has animations quite like ours. Making sure these animations and other video elements stand out from the rest was key.¬†&lt;/p&gt;
&lt;p&gt;Revenues growth has always been linear and predictable with consistent month over month growth:&lt;/p&gt;
&lt;div&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9b9217ca534caf13d5/5e7c0b6fee55b0a38f5130f2_CphcZC_wiPUas6tcPgbne-6aBsZBjYkBYCjJ2dOehij6HueemX7yL9QFzHCJQfzdE1ilmZ7ra6EDhCTvFQhtHUuwrLn1DdO_fATH4R1fdc7OFfUaLt-6gzWV9Iuzggj1uX_aUpuK.png&quot; alt=&quot;Wavve Revenue&quot;/&gt;&lt;/div&gt;
&lt;p&gt;We have kept the team lean with only 3 equity partners and a small team of contractors that help with support, marketing, and engineering. Running lean has allowed us to really focus on product development to deliver more features to our customers. Most notably, we were able to complete a massive project for supporting subtitles/captions within Wavve videos.&lt;/p&gt;
&lt;p&gt;‚Äç&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;What are&lt;/strong&gt; your &lt;strong&gt;goals for the future?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;For the last year, our north star metric has been 1M ARR. It‚Äôs a bit arbitrary and alone doesn‚Äôt tell the story of a healthy business so we also want to ensure we are keeping our profit margins in the same ballpark they are in now (70% - 80%). We are hoping to hit this by Q3 2020.¬†&lt;/p&gt;
&lt;p&gt;Around the same time, we want to find an operator (or team of operators) to come help continue the business forward. At heart, we are creators and at a certain point it will be time for us to transition the project so we can create other things.¬†&lt;/p&gt;
&lt;p&gt;We also run another SaaS product called &lt;a href=&quot;http://zubtitle.com&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Zubtitle&lt;/strong&gt;&lt;/a&gt; which is growing rapidly and we have a few other concepts we are working on this year under the &lt;a href=&quot;http://lofi.ventures&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Lofi Ventures&lt;/strong&gt;&lt;/a&gt; brands.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;block-ad-div&quot; readability=&quot;13.127725856698&quot;&gt;
&lt;h3 class=&quot;black-text&quot;&gt;&lt;strong&gt;Your one-stop shop for everything dev-related.&lt;/strong&gt;&lt;br/&gt;&lt;/h3&gt;
&lt;p class=&quot;black-text&quot;&gt;Anything you need, our devs can build: complex e-commerce solutions, custom software or SaaS, beautiful WordPress websites‚Ä¶ anything. We‚Äôll fix, upgrade &amp;amp; customize your website, so you never have to worry about troubleshooting web stuff ever again.&lt;br/&gt;&lt;/p&gt;
&lt;a href=&quot;https://nerdpilots.com/?ref=failory&quot; target=&quot;_blank&quot; class=&quot;ad-block-button-nerdpilots w-button&quot;&gt;&lt;strong&gt;Let‚Äôs get to work!&lt;/strong&gt;&lt;/a&gt;&lt;/div&gt;
&lt;a href=&quot;https://www.failory.com/get/growthmentor&quot; target=&quot;_blank&quot; class=&quot;between-ad-div w-inline-block w-clearfix&quot;&gt;&lt;img src=&quot;https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd8cc0e478567d159ea3b_GrowthMentor%20Icon.png&quot; width=&quot;40&quot; srcset=&quot;https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd8cc0e478567d159ea3b_GrowthMentor%20Icon-p-500.png 500w, https://uploads-ssl.webflow.com/5966ea9a9217ca534caf139f/5cfbd8cc0e478567d159ea3b_GrowthMentor%20Icon.png 512w&quot; sizes=&quot;100vw&quot; alt=&quot;&quot; class=&quot;between-ad-image&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;between-ad-text&quot;&gt;&lt;span class=&quot;between-ad-bold&quot;&gt;Grow your business.&lt;/span&gt; Get 1-on-1 calls with +100 mentors.&lt;/p&gt;
&lt;p&gt;Learn More!&lt;/p&gt;
&lt;p class=&quot;between-ad-ad&quot;&gt;AD&lt;/p&gt;
&lt;div class=&quot;newsletter-pop-up w-hidden-main w-hidden-medium w-hidden-small w-hidden-tiny&quot; readability=&quot;33&quot;&gt;

&lt;p class=&quot;paragraph-6&quot;&gt;We‚Äôre always digging for more stories like Wavve. Sign up for our newsletter to keep updated on the latest additions.&lt;/p&gt;

&lt;/div&gt;
&lt;div class=&quot;interview-rich-text w-richtext&quot; readability=&quot;100.2604233483&quot;&gt;
&lt;h4&gt;What were the biggest challenges you faced and obstacles you overcame?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;It‚Äôs funny, our biggest disadvantages have almost become some of our biggest advantages.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;The disadvantages we started with were our price point, time, and our market. Podcasters generally don‚Äôt have much a budget for tools outside of their hosting platform (most podcasters don‚Äôt make any revenue). As a result, we had to set our price fairly low to start. We also didn‚Äôt have an audience and the podcast market is very fragmenting. This made getting started very slow.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;When we started, I had just spent a year with no-pay trying to get our startup off the ground (which failed) and Nick had recently passed the bar (he is a lawyer) and decided to become a software engineer. I didn‚Äôt have much money left and Nick had a mountain of student debt. Becoming a lawyer isn‚Äôt cheap after all.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;These two disadvantages made us build the business slowly while also freelancing on the side. We had to be patient and watch the business grow while constantly re-evaluating whether or not it would be a side project or could become a full time gig.¬†&lt;/p&gt;

&lt;h4&gt;Which are your greatest disadvantages? What were your worst mistakes?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;Our main disadvantages when we got started was a lack of experience and capital and a naivety around building products. We didn‚Äôt understand how to properly evaluate a market, do customer discovery, and make fast decisions while attempting to get the business off the ground.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We made a lot of mistakes along the way. Our biggest mistake before Wavve was relying on feature development to drive traction rather than use marketing &amp;amp; transaction to fill our funnel. We fell into the feature fallacy and thought the next big feature would set us on the right course.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;We also commonly made the mistake of listening to the loud minority. Say 10 users come in the funnel: 4 would convert and one would be upset. We would listen to that one upset user and let them drive product development rather than listening to the happy 4 customers that paid.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;One example of this was all the time we spent supporting social integrations for a small set of very vocal users that wanted to post to social directly from our app when the majority were fine downloading the mp4 video and uploading themselves.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;I sometimes think we might have taken too long to pay ourselves. We were so desperate to get the business to a certain revenue point that we never were able to feel the effect of SaaS revenue in our own pockets. I would suggest founders to pay themselves &lt;strong&gt;something&lt;/strong&gt; as soon as possible.&lt;/p&gt;
&lt;p&gt;‚Äç&lt;/p&gt;
&lt;h4&gt;If you had the chance to do things differently, what would you do?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;The first thing I would tell my former self is to relax. Entrepreneurship is much more of a journey than it is building your first business. I would spend ¬†much time pressuring myself and worrying about making it work that I would cloud my vision when it came to making business decisions.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Instead of forcing that first businesses until the last minute, I wish we would have cut our losses sooner and moved on to the next thing.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;I also spent a lot of time early worrying about what people in our startup community would think if I failed. I felt a lot of pressure from that, which was useless. And as it¬†turns out, we did fail and then became a success that no one has heard about.¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Cutting the cord on the B2C venture-backed play could have saved us a lot of time and money. We also always knew we didn‚Äôt really want to run an investor-backed company but we pressed forward because it was the only option we saw ahead of us at that time.&lt;/p&gt;
&lt;p&gt;‚Äç&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;What are some sources for learning you would recommend for entrepreneurs who are just starting?&lt;br/&gt;&lt;/h4&gt;
&lt;p&gt;I think podcasts are great for when you are just starting out. They give you so much more context around what it is like to start a business. I really enjoy these:&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;There are a few books that I have really enjoyed that helped me think about how to work and how to approach entrepreneurship:&lt;/p&gt;
&lt;p&gt;I also love everything that the &lt;a href=&quot;https://fs.blog/knowledge-project/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Knowledge Project&lt;/strong&gt;&lt;/a&gt; by Shane Parrish does (podcast &amp;amp; blog).¬†&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Try to stay off Twitter.¬†&lt;/p&gt;
&lt;p&gt;‚Äç&lt;/p&gt;
&lt;h4&gt;Where can we go to learn more?&lt;/h4&gt;
&lt;p&gt;You can find our website &lt;a href=&quot;https://wavve.co/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;. You may also want to check &lt;a href=&quot;http://lofi.ventures&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Lofi Ventures&lt;/strong&gt;&lt;/a&gt;, we are launching other products and will blog about our experience.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Here‚Äôre are our Twitters as well: &lt;a href=&quot;https://twitter.com/BairdHall/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;@bairdhall&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/nickfogle&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;@nickfogle&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/robmoore&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;@robmoore&lt;/strong&gt;&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h4 class=&quot;cta-subscribe-blog&quot;&gt;‚úâÔ∏è Subscribe to our newsletter!&lt;/h4&gt;
&lt;p class=&quot;paragraph-subscribe-blog&quot;&gt;Invite us into your inbox and get immense learning and &lt;strong class=&quot;white-text&quot;&gt;80+ deals on tools&lt;/strong&gt; to help you scale your startup (&lt;strong class=&quot;white-text&quot;&gt;worth up to $50,000&lt;/strong&gt;)!&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;div-block-sendinblue-form-content&quot;&gt;
&lt;div class=&quot;w-embed w-script&quot;&gt;
&lt;div class=&quot;sib-form&quot;&gt;
&lt;div id=&quot;sib-form-container&quot; class=&quot;sib-form-container&quot; readability=&quot;7&quot;&gt;
&lt;div id=&quot;error-message&quot; class=&quot;sib-form-message-panel&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;sib-form-message-panel__inner-text&quot;&gt;Your subscription could not be saved. Please try again.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;success-message&quot; class=&quot;sib-form-message-panel&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;sib-form-message-panel__inner-text&quot;&gt;Your subscription has been successful.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



</description>
<pubDate>Thu, 26 Mar 2020 18:13:40 +0000</pubDate>
<dc:creator>richclominson</dc:creator>
<og:title>Wavve: Making $76k a Month Turning Podcasts into Videos</og:title>
<og:description>In 2015, Baird partnered up with Nick to launch a social network that combined Reddit, Twitter and audio. After 2 years and $30k lost, they shut down but decided to convert one of their internal tools into a SaaS. Through word of mouth and content marketing, the startup has grown to $76k in MRR.</og:description>
<og:image>https://uploads-ssl.webflow.com/5966ea9b9217ca534caf13d5/5e7cf5b72e9c4029c7de5262_Wavve%20Social%20Share.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.failory.com/interview/wavve</dc:identifier>
</item>
<item>
<title>Dwarf Fortress: An actual look at graphical improvements</title>
<link>https://steamcommunity.com/games/975370/announcements/detail/2082292794864361478</link>
<guid isPermaLink="true" >https://steamcommunity.com/games/975370/announcements/detail/2082292794864361478</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://steamcommunity.com/games/975370/announcements/detail/2082292794864361478&quot;&gt;https://steamcommunity.com/games/975370/announcements/detail/2082292794864361478&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22695261&quot;&gt;https://news.ycombinator.com/item?id=22695261&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 268&lt;/p&gt;
&lt;p&gt;# Comments: 118&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 16:30:47 +0000</pubDate>
<dc:creator>skibz</dc:creator>
<og:title>Steam :: Dwarf Fortress :: An actual look at graphical improvements</og:title>
<og:description>Hello! Okay, now I can show you what I meant about the graphical improvements last time instead of trying to explain in words, ha ha. For reference, here is a hillside in Classic DF: This is a cutaway view at one altitude. This view has been pretty confusing for new players. All you need to know is that it's a grid of uniform size, and the upward triangles are ramps. Dwarves can walk up those to the next highest level. Here is a similar view in Dwarf Fortress Premium.</og:description>
<og:type>article</og:type>
<og:image>https://steamcdn-a.akamaihd.net/steamcommunity/public/images/clans/34693670/f48fe873f08d38f702b8a20cfd849476cd9f6321.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://steamcommunity.com/games/975370/announcements/detail/2082292794864361478</dc:identifier>
</item>
<item>
<title>Firefox&amp;#039;s low-latency WebAssembly compiler</title>
<link>http://wingolog.org/archives/2020/03/25/firefoxs-low-latency-webassembly-compiler</link>
<guid isPermaLink="true" >http://wingolog.org/archives/2020/03/25/firefoxs-low-latency-webassembly-compiler</guid>
<description>&lt;p&gt;Good day!&lt;/p&gt;
&lt;p&gt;Today I'd like to write a bit about the WebAssembly baseline compiler in Firefox.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;background: throughput and latency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WebAssembly, as you know, is a virtual machine that is present in web browsers like Firefox. An important initial goal for WebAssembly was to be a good target for compiling programs written in C or C++. You can visit a web page that includes a program written in C++ and compiled to WebAssembly, and that WebAssembly module will be downloaded onto your computer and run by the web browser.&lt;/p&gt;
&lt;p&gt;A good virtual machine for C and C++ has to be fast. The &lt;em&gt;throughput&lt;/em&gt; of a program compiled to WebAssembly (the amount of work it can get done per unit time) should be approximately the same as its throughput when compiled to &quot;native&quot; code (x86-64, ARMv7, etc.). WebAssembly meets this goal by defining an instruction set that consists of similar operations to those directly supported by CPUs; WebAssembly implementations use optimizing compilers to translate this portable instruction set into native code.&lt;/p&gt;
&lt;p&gt;There is another dimension of fast, though: not just work per unit time, but also time until first work is produced. If you want to go play &lt;a href=&quot;http://wasm.continuation-labs.com/d3demo/&quot;&gt;Doom 3 on the web&lt;/a&gt;, you care about frames per second but also time to first frame. Therefore, WebAssembly was designed not just for high throughput but also for low latency. This focus on low-latency compilation expresses itself in two ways: binary size and binary layout.&lt;/p&gt;
&lt;p&gt;On the size front, WebAssembly is optimized to encode small files, reducing download time. One way in which this happens is to use a &lt;a href=&quot;https://webassembly.github.io/spec/core/binary/values.html#integers&quot;&gt;variable-length encoding&lt;/a&gt; anywhere an instruction needs to specify an integer. In the usual case where, for example, there are fewer than 128 local variables, this means that a &lt;a href=&quot;https://webassembly.github.io/spec/core/syntax/instructions.html#syntax-instr-variable&quot;&gt;&lt;tt&gt;local.get&lt;/tt&gt; instruction&lt;/a&gt; can refer to a local variable using just one byte. Another strategy is that WebAssembly programs target a stack machine, reducing the need for the instruction stream to explicitly load operands or store results. Note that size optimization only goes so far: it's assumed that the bytes of the encoded module will be compressed by gzip or some other algorithm, so sub-byte entropy coding is out of scope.&lt;/p&gt;
&lt;p&gt;On the layout side, the WebAssembly binary encoding is sorted by design: definitions come before uses. For example, there is a &lt;a href=&quot;https://webassembly.github.io/spec/core/binary/modules.html#binary-typesec&quot;&gt;section of type definitions&lt;/a&gt; that occurs early in a WebAssembly module. Any use of a declared type can only come after the definition. In the case of functions which are of course mutually recursive, function type declarations come before the actual definitions. In theory this allows web browsers to take a one-pass, streaming approach to compilation, starting to compile as functions arrive and before download is complete.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;implementation strategies&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The goals of high throughput and low latency conflict with each other. To get best throughput, a compiler needs to spend time on code motion, register allocation, and instruction selection; to get low latency, that's exactly what a compiler should not do. Web browsers therefore take a two-pronged approach: they have a compiler optimized for throughput, and a compiler optimized for latency. As a WebAssembly file is being downloaded, it is first compiled by the quick-and-dirty low-latency compiler, with the goal of producing machine code as soon as possible. After that &quot;baseline&quot; compiler has run, the &quot;optimizing&quot; compiler works in the background to produce high-throughput code. The optimizing compiler can take more time because it runs on a separate thread. When the optimizing compiler is done, it replaces the baseline code. (&lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmCompile.cpp#270-418&quot;&gt;The actual heuristics about whether to do baseline + optimizing (&quot;tiering&quot;) or just to go straight to the optimizing compiler are a bit hairy&lt;/a&gt;, but this is a summary.)&lt;/p&gt;
&lt;p&gt;This article is about the WebAssembly baseline compiler in Firefox. It's a surprising bit of code and I learned a few things from it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;design questions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Knowing what you know about the goals and design of WebAssembly, how would you implement a low-latency compiler?&lt;/p&gt;
&lt;p&gt;It's a question worth thinking about so I will give you a bit of space in which to do so.&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;After spending a lot of time in Firefox's WebAssembly baseline compiler, I have extracted the following principles:&lt;/p&gt;
&lt;ol readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The function is the unit of compilation&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;One pass, and one pass only&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Lean into the stack machine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No noodling!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In the remainder of this article we'll look into these individual points. Note, although I have done a good bit of hacking on this compiler, its design and original implementation comes mainly from Mozilla hacker Lars Hansen, who also currently maintains it. All errors of exegesis are mine, of course!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;the function is the unit of compilation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As we mentioned, in the binary encoding of a WebAssembly module, all definitions needed by any function come before all function definitions. This naturally leads to a partition between two phases of bytestream parsing: an initial serial phase that collects the set of global type definitions, annotations as to which functions are imported and exported, and so on, and a subsequent phase that compiles individual functions in an essentially independent manner.&lt;/p&gt;
&lt;p&gt;The advantage of this approach is that compiling functions is a natural task unit of parallelism. If the user has a machine with 8 virtual cores, the web browser can keep one or two cores for the browser itself and farm out WebAssembly compilation tasks to the rest. The result is that the compiled code is available sooner.&lt;/p&gt;
&lt;p&gt;Taking functions to be the unit of compilation also allows for an easy &quot;tier-up&quot; mechanism: after the baseline compiler is done, the optimizing compiler can take more time to produce better code, and when it is done, it can swap out the results on a per-function level. All function calls from the baseline compiler go through a jump table indirection, to allow for tier-up. In SpiderMonkey there is no mechanism currently to tier down; if you need to debug WebAssembly code, you need to refresh the page, causing the wasm code to be compiled in debugging mode. For the record, SpiderMonkey can only tier up at function calls (it doesn't do OSR).&lt;/p&gt;
&lt;p&gt;This simple approach does have some down-sides, in that it leaves intraprocedural optimizations on the table (inlining, contification, custom calling conventions, speculative optimizations). This is mitigated in two ways, the most obvious being that LLVM or whatever produced the WebAssembly has ideally already done whatever inlining might be fruitful. The second is that WebAssembly is designed for predictable performance. In JavaScript, an implementation needs to do run-time type feedback and speculative optimizations to get good performance, but the result is that it can be hard to understand why a program is fast or slow. The designers and implementers of WebAssembly in browsers all had first-hand experience with JavaScript virtual machines, and actively wanted to avoid unpredictable performance in WebAssembly. Therefore there is currently a kind of d√©tente among the various browser vendors, that everyone has agreed that they won't do speculative inlining -- yet, anyway. Who knows what will happen in the future, though.&lt;/p&gt;
&lt;p&gt;Digressing, the summary here is that the baseline compiler receives an individual function body as input, and generates code just for that function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;one pass, and one pass only&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The WebAssembly baseline compiler makes one pass through the bytecode of a function. Nowhere in all of this are we going to build an abstract syntax tree or a graph of basic blocks. Let's follow through how that works.&lt;/p&gt;
&lt;p&gt;Firstly, &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#12827&quot;&gt;&lt;tt&gt;emitFunction&lt;/tt&gt;&lt;/a&gt; simply emits a prologue, then the body, then an epilogue. &lt;tt&gt;emitBody&lt;/tt&gt; is basically a &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#11813&quot;&gt;big loop&lt;/a&gt; that consumes opcodes from the instruction stream, dispatching to opcode-specific code emitters (e.g. &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#7440&quot;&gt;&lt;tt&gt;emitAddI32&lt;/tt&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The opcode-specific code emitters are also responsible for validating their arguments; for example, &lt;tt&gt;emitAddI32&lt;/tt&gt; is wrapped in an &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#11821&quot;&gt;assertion that there are two &lt;tt&gt;i32&lt;/tt&gt; values on the stack&lt;/a&gt;. This validation logic is shared by a templatized &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmOpIter.h#549&quot;&gt;codestream iterator&lt;/a&gt; so that it can be re-used by the optimizing compiler, as well as by the publicly-exposed &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/validate&quot;&gt;&lt;tt&gt;WebAssembly.validate&lt;/tt&gt;&lt;/a&gt; function.&lt;/p&gt;
&lt;p&gt;A corollary of this approach is that machine code is emitted in bytestream order; if the WebAssembly instruction stream has an &lt;tt&gt;i32.add&lt;/tt&gt; followed by a &lt;tt&gt;i32.sub&lt;/tt&gt;, then the machine code will have an &lt;tt&gt;addl&lt;/tt&gt; followed by a &lt;tt&gt;subl&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;WebAssembly has a syntactically limited form of non-local control flow; it's not &lt;tt&gt;goto&lt;/tt&gt;. Instead, instructions are contained in a tree of nested &lt;em&gt;control blocks&lt;/em&gt;, and control can only exit nonlocally to a containing control block. There are three kinds of control blocks: jumping to a &lt;tt&gt;block&lt;/tt&gt; or an &lt;tt&gt;if&lt;/tt&gt; will continue at the end of the block, whereas jumping to a &lt;tt&gt;loop&lt;/tt&gt; will continue at its beginning. In either case, as the compiler keeps a stack of nested control blocks, it has the set of valid jump targets and can use the usual assembler logic to patch forward jump addresses when the compiler gets to the block exit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;lean into the stack machine&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the interesting bit! So, WebAssembly instructions target a stack machine. That is to say, there's an abstract stack onto which evaluating &lt;tt&gt;i32.const 32&lt;/tt&gt; pushes a value, and if followed by &lt;tt&gt;i32.const 10&lt;/tt&gt; there would then be &lt;tt&gt;i32(32) | i32(10)&lt;/tt&gt; on the stack (where new elements are added on the right). A subsequent &lt;tt&gt;i32.add&lt;/tt&gt; would pop the two values off, and push on the result, leaving the stack as &lt;tt&gt;i32(42)&lt;/tt&gt;. There is also a fixed set of local variables, declared at the beginning of the function.&lt;/p&gt;
&lt;p&gt;The easiest thing that a compiler can do, then, when faced with a stack machine, is to emit code for a stack machine: as values are pushed on the abstract stack, emit code that pushes them on the machine stack.&lt;/p&gt;
&lt;p&gt;The downside of this approach is that you emit a fair amount of code to do read and write values from the stack. Machine instructions generally take arguments from registers and write results to registers; going to memory is a bit superfluous. We're willing to accept suboptimal code generation for this quick-and-dirty compiler, but isn't there something smarter we can do for ephemeral intermediate values?&lt;/p&gt;
&lt;p&gt;Turns out -- yes! The baseline compiler keeps an abstract &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#2097&quot;&gt;&lt;em&gt;value stack&lt;/em&gt;&lt;/a&gt; as it compiles. For example, compiling &lt;tt&gt;i32.const 32&lt;/tt&gt; pushes nothing on the machine stack: it just adds a &lt;tt&gt;ConstI32&lt;/tt&gt; node to the value stack. When an instruction needs an operand that turns out to be a &lt;tt&gt;ConstI32&lt;/tt&gt;, it can either encode the operand as an immediate argument or &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#3730&quot;&gt;load it into a register&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Say we are evaluating the &lt;tt&gt;i32.add&lt;/tt&gt; discussed above. After the add, where does the result go? For the baseline compiler, the answer is always &quot;in a register&quot; via pushing a new &lt;tt&gt;RegisterI32&lt;/tt&gt; entry on the value stack. The baseline compiler includes a &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#742&quot;&gt;stupid register allocator&lt;/a&gt; that &lt;a href=&quot;https://searchfox.org/mozilla-central/source/js/src/wasm/WasmBaselineCompile.cpp#3456&quot;&gt;spills the value stack to the machine stack if no register is available&lt;/a&gt;, updating value stack entries from e.g. &lt;tt&gt;RegisterI32&lt;/tt&gt; to &lt;tt&gt;MemI32&lt;/tt&gt;. Note, a &lt;tt&gt;ConstI32&lt;/tt&gt; never needs to be spilled: its value can always be reloaded as an immediate.&lt;/p&gt;
&lt;p&gt;The end result is that the baseline compiler avoids lots of stack store and load code generation, which speeds up the compiler, and happens to make faster code as well.&lt;/p&gt;
&lt;p&gt;Note that there is one limitation, currently: control-flow joins can have multiple predecessors and can pass a value (in the current WebAssembly specification), so the allocation of that value needs to be agreed-upon by all predecessors. As in this code:&lt;/p&gt;
&lt;pre&gt;
(func $f (param $arg i32) (result i32)
  (block $b (result i32)
    (i32.const 0)
    (local.get $arg)
    (i32.eqz)
    (br_if $b) ;; return 0 from $b if $arg is zero
    (drop)
    (i32.const 1))) ;; otherwise return 1
;; result of block implicitly returned
&lt;/pre&gt;
&lt;p&gt;When the &lt;tt&gt;br_if&lt;/tt&gt; branches to the block end, where should it put the result value? The baseline compiler effectively punts on this question and just puts it in a well-known register (e.g., &lt;tt&gt;$rax&lt;/tt&gt; on x86-64). Results for block exits are the only place where WebAssembly has &quot;phi&quot; variables, and the baseline compiler allocates all integer phi variables to the same register. A hack, but there we are.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;no noodling!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When I started to hack on the baseline compiler, I did a lot of code reading, and eventually came on code like this:&lt;/p&gt;
&lt;pre&gt;
void BaseCompiler::emitAddI32() {
  int32_t c;
  if (popConstI32(&amp;amp;c)) {
    RegI32 r = popI32();
    masm.add32(Imm32(c), r);
    pushI32(r);
  } else {
    RegI32 r, rs;
    pop2xI32(&amp;amp;r, &amp;amp;rs);
    masm.add32(rs, r);
    freeI32(rs);
    pushI32(r);
  }
}
&lt;/pre&gt;
&lt;p&gt;I said to myself, this is silly, why are we only emitting the add-immediate code if the constant is on top of the stack? What if instead the constant was the deeper of the two operands, why do we then load the constant into a register? I asked on the chat channel if it would be OK if I improved codegen here and got a response I was not expecting: no noodling!&lt;/p&gt;
&lt;p&gt;The reason is, performance of baseline-compiled code essentially doesn't matter. Obviously let's not pessimize things but the reason there's a baseline compiler is to emit code quickly. If we start to add more code to the baseline compiler, the compiler itself will slow down.&lt;/p&gt;
&lt;p&gt;For that reason, changes are only accepted to the baseline compiler if they are necessary for some reason, &lt;em&gt;or&lt;/em&gt; if they improve latency as measured using some real-world benchmark (time-to-first-frame on Doom 3, for example).&lt;/p&gt;
&lt;p&gt;This to me was a real eye-opener: a compiler optimized not for the quality of the code that it generates, but rather for how fast it can produce the code. I had seen this in action before but this example really brought it home to me.&lt;/p&gt;
&lt;p&gt;The focus on compiler throughput rather than compiled-code throughput makes it pretty gnarly to hack on the baseline compiler -- care has to be taken when adding new features not to significantly regress the old. It is much more like hacking on a production JavaScript parser than your traditional SSA-based compiler.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;that's a wrap!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So that's the WebAssembly baseline compiler in SpiderMonkey / Firefox. Until the next time, happy hacking!&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 16:23:33 +0000</pubDate>
<dc:creator>robin_reala</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://wingolog.org/archives/2020/03/25/firefoxs-low-latency-webassembly-compiler</dc:identifier>
</item>
<item>
<title>Zotero: Personal Research Assistant</title>
<link>https://www.zotero.org/</link>
<guid isPermaLink="true" >https://www.zotero.org/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.zotero.org/&quot;&gt;https://www.zotero.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22694891&quot;&gt;https://news.ycombinator.com/item?id=22694891&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 601&lt;/p&gt;
&lt;p&gt;# Comments: 155&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 15:59:45 +0000</pubDate>
<dc:creator>supdatecron</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.zotero.org/</dc:identifier>
</item>
<item>
<title>Show HN: A ‚Äúliving‚Äù Linux process with no memory</title>
<link>https://github.com/izabera/zeromaps</link>
<guid isPermaLink="true" >https://github.com/izabera/zeromaps</guid>
<description>&lt;h2&gt;tl;dr&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;thread1 goes into uninterruptible sleep&lt;/li&gt;
&lt;li&gt;thread2 unmaps everything and segfaults&lt;/li&gt;
&lt;li&gt;segv can't kill the process because of thread1's D state&lt;/li&gt;
&lt;li&gt;/proc/pid/maps is now empty&lt;/li&gt;
&lt;li&gt;???&lt;/li&gt;
&lt;li&gt;PROFIT!!!&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://asciinema.org/a/313677&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/70b525c06afe8b532e7334e20415a1879905bddd/68747470733a2f2f61736369696e656d612e6f72672f612f3331333637372e737667&quot; alt=&quot;asciicast&quot; data-canonical-src=&quot;https://asciinema.org/a/313677.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Implementation details&lt;/h2&gt;
&lt;p&gt;This code gets a list of all memory maps from &lt;code&gt;/proc/self/maps&lt;/code&gt;, then creates a new executable map where it jits some code that calls &lt;code&gt;munmap()&lt;/code&gt; on each of the maps it just got, and finally on the map it's on. This is just a quick example with no portability in mind, so the source code contains the actual bytes that would be emitted by a x64 compiler. After unmapping the final map, where the jit code lies, there's no new instruction to execute and a segfault is raised.&lt;/p&gt;
&lt;p&gt;This segfault can't kill the entire process if one thread is stuck in uninterruptible sleep. To reliably send a thread in such state, we create a simple FUSE filesystem in python, in which doing anything on a particular file will block until a key is pressed.&lt;/p&gt;
&lt;p&gt;This code also does its own &quot;linking&quot; to make sure that the list of maps doesn't get unmapped too early.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;a c compiler&lt;/li&gt;
&lt;li&gt;python2 + fuse&lt;/li&gt;
&lt;li&gt;x64&lt;/li&gt;
&lt;li&gt;a modern Linux with no vsyscall page (this page is too high up and munmap would return EINVAL)&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I don't know. I thought it was funny.&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 14:20:00 +0000</pubDate>
<dc:creator>izabera</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/1572859?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>izabera/zeromaps</og:title>
<og:url>https://github.com/izabera/zeromaps</og:url>
<og:description>A &quot;living&quot; Linux process with no memory. Contribute to izabera/zeromaps development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/izabera/zeromaps</dc:identifier>
</item>
<item>
<title>Zoom iOS app sends data to Facebook even if you don‚Äôt have a Facebook account</title>
<link>https://www.vice.com/en_us/article/k7e599/zoom-ios-app-sends-data-to-facebook-even-if-you-dont-have-a-facebook-account</link>
<guid isPermaLink="true" >https://www.vice.com/en_us/article/k7e599/zoom-ios-app-sends-data-to-facebook-even-if-you-dont-have-a-facebook-account</guid>
<description>&lt;p&gt;As people work and socialize from home, video conferencing software Zoom &lt;a href=&quot;https://www.vice.com/en_us/article/m7qwgx/what-is-the-most-secure-video-conferencing-software&quot; target=&quot;_blank&quot;&gt;has exploded in popularity&lt;/a&gt;. What the company and its privacy policy don't make clear is that the iOS version of the Zoom app is sending some analytics data to Facebook, even if Zoom users don't have a Facebook account, according to a Motherboard analysis of the app.&lt;/p&gt;
&lt;p&gt;This sort of data transfer is not uncommon, &lt;a href=&quot;https://www.wsj.com/articles/you-give-apps-sensitive-personal-information-then-they-tell-facebook-11550851636&quot; target=&quot;_blank&quot;&gt;especially for Facebook&lt;/a&gt;; plenty of apps use Facebook's software development kits (SDK) as a means to implement features into their apps more easily, which also has the effect of sending information to Facebook. But Zoom users may not be aware it is happening, nor understand that when they use one product, they may be providing data to another service altogether.&lt;/p&gt;

&lt;p&gt;&quot;That's shocking. There is nothing in the privacy policy that addresses that,&quot; Pat Walshe, an activist from Privacy Matters who has analyzed Zoom's privacy policy, said in a Twitter direct message.&lt;/p&gt;
&lt;p&gt;Upon downloading and opening the app, Zoom connects to Facebook's Graph API, according to Motherboard's analysis of the app's network activity. The Graph API is the main way developers get data in or out of Facebook.&lt;/p&gt;
&lt;p class=&quot;article__blockquote&quot;&gt;&lt;strong&gt;&lt;em&gt;Do you know anything else about data selling or trading? We'd love to hear from you. Using a non-work phone or computer, you can contact Joseph Cox securely on Signal on +44 20 8133 5190, Wickr on josephcox, OTR chat on&lt;/em&gt; &lt;em&gt;jfcox@jabber.ccc.de, or email joseph.cox@vice.com.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Zoom app notifies Facebook when the user opens the app, details on the user's device such as the model, the time zone and city they are connecting from, which phone carrier they are using, and a &lt;a href=&quot;https://konsole.zendesk.com/hc/en-us/articles/115013349668-Identify-Android-AdIDs-Apple-IDFAs-and-Safari-IDs&quot; target=&quot;_blank&quot;&gt;unique advertiser identifier&lt;/a&gt; created by the user's device which companies can use to &lt;a href=&quot;https://www.singular.net/mobile-tutorial-series-idfa-apple-identifier-advertisers/&quot; target=&quot;_blank&quot;&gt;target a user with advertisements&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;The data being sent is similar to that which activist group the Electronic Frontier Foundation (EFF) found the app for &lt;a href=&quot;https://www.eff.org/deeplinks/2020/01/ring-doorbell-app-packed-third-party-trackers&quot; target=&quot;_blank&quot;&gt;surveillance camera vendor Ring sent to Facebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Will Strafach, an iOS researcher and founder of privacy-focused iOS app Guardian confirmed Motherboard's findings that the Zoom app sent data to Facebook.&lt;/p&gt;
&lt;p&gt;&quot;I think users can ultimately decide how they feel about Zoom and other apps sending beacons to Facebook, even if there is no direct evidence of sensitive data being shared in current versions,&quot; he told Motherboard in a Twitter direct message.&lt;/p&gt;

&lt;p class=&quot;article__pull-quote&quot;&gt;&quot;That's shocking. There is nothing in the privacy policy that addresses that.&quot;&lt;/p&gt;
&lt;p&gt;Zoom is not forthcoming with the data collection or the transfer of it to Facebook. Zoom's policy says the company may collect user's &quot;Facebook profile information (when you use Facebook to log-in to our Products or to create an account for our Products),&quot; but doesn't explicitly mention anything about sending data to Facebook on Zoom users who don't have a Facebook account at all.&lt;/p&gt;
&lt;p&gt;Facebook told Motherboard it requires developers to be transparent with users about the data their apps send to Facebook. Facebook's &lt;a href=&quot;https://www.facebook.com/legal/technology_terms&quot; target=&quot;_blank&quot;&gt;terms say&lt;/a&gt; &quot;If you use our pixels or SDKs, you further represent and warrant that you have provided robust and sufficiently prominent notice to users regarding the Customer Data collection, sharing and usage,&quot; and specifically for apps, &quot;that third parties, including Facebook, may collect or receive information from your app and other apps and use that information to provide measurement services and targeted ads.&quot;&lt;/p&gt;
&lt;p&gt;Zoom's privacy policy says &quot;our third-party service providers, and advertising partners (e.g., Google Ads and Google Analytics) automatically collect some information about you when you use our Products,&quot; but does not link this sort of activity to Facebook specifically.&lt;/p&gt;
&lt;p&gt;Zoom did not respond to a request for comment.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Zoom has a number of other potential &lt;a href=&quot;https://www.vice.com/en_us/article/8xzjj4/zoom-video-conferencing-vulnerability-lets-hackers-turn-on-your-webcam&quot; target=&quot;_blank&quot;&gt;privacy issues too&lt;/a&gt;. As the &lt;a href=&quot;https://www.eff.org/deeplinks/2020/03/what-you-should-know-about-online-tools-during-covid-19-crisis&quot; target=&quot;_blank&quot;&gt;EFF laid out&lt;/a&gt;, hosts of Zoom calls can see if participants have the Zoom window open or not, meaning they can monitor if people are likely paying attention. Administrators can also see the IP address, location data, and device information on each participant, the EFF added.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Subscribe to our cybersecurity podcast, &lt;a href=&quot;https://itunes.apple.com/gb/podcast/cyber/id1441708044?mt=2&quot; target=&quot;_blank&quot;&gt;CYBER&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 14:19:05 +0000</pubDate>
<dc:creator>softwaredoug</dc:creator>
<og:type>article</og:type>
<og:title>Zoom iOS App Sends Data to Facebook Even if You Don‚Äôt Have a Facebook Account</og:title>
<og:image>https://video-images.vice.com/test-uploads/articles/5e7bc17305d4e900987503d0/lede/1585169903573-zoom.jpeg?crop=1xw:0.8432xh;0xw,0.0698xh&amp;resize=1200:*</og:image>
<og:url>https://www.vice.com/en_us/article/k7e599/zoom-ios-app-sends-data-to-facebook-even-if-you-dont-have-a-facebook-account</og:url>
<og:description>Zoom's privacy policy isn't explicit about the data transfer to Facebook at all.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.vice.com/en_us/article/k7e599/zoom-ios-app-sends-data-to-facebook-even-if-you-dont-have-a-facebook-account</dc:identifier>
</item>
<item>
<title>3.28M file for U.S. jobless benefits</title>
<link>https://www.wsj.com/articles/the-long-run-of-american-job-growth-has-ended-11585215000</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/the-long-run-of-american-job-growth-has-ended-11585215000</guid>
<description>&lt;p&gt;WASHINGTON‚ÄîA record 3.28 million workers applied for unemployment benefits last week as the new coronavirus hit the U.S. economy, marking an abrupt end to the nation‚Äôs historic, decadelong run of job growth.&lt;/p&gt; &lt;p&gt;The number of Americans filing for claims was nearly five times the previous record high. The surge was for the week ended March 21 and could rise further. Pennsylvania, Ohio and California were among 10 states reporting more than 100,000 claims, leaving unemployment systems overloaded.&lt;/p&gt;...
  </description>
<pubDate>Thu, 26 Mar 2020 12:36:15 +0000</pubDate>
<dc:creator>treyfitty</dc:creator>
<og:title>Record Rise in Unemployment Claims Halts Historic Run of Job Growth</og:title>
<og:description>More than 3 million workers applied for unemployment benefits last week as the new coronavirus hit the economy. A strong labor market had kept the U.S. economy humming for a decade‚Äîand then, in a matter of days, it stopped.</og:description>
<og:url>https://www.wsj.com/articles/the-long-run-of-american-job-growth-has-ended-11585215000</og:url>
<og:image>https://images.wsj.net/im-169035/social</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/the-long-run-of-american-job-growth-has-ended-11585215000</dc:identifier>
</item>
<item>
<title>Bosch develops rapid test for Covid-19</title>
<link>https://www.bosch.com/stories/vivalytic-rapid-test-for-covid-19/</link>
<guid isPermaLink="true" >https://www.bosch.com/stories/vivalytic-rapid-test-for-covid-19/</guid>
<description>&lt;p&gt;The test provides a fast and conclusive result in under 2,5 hours ‚Äì from sample collection to the result directly at the point of treatment. Infected patients can be isolated quickly to curb the spread of the pandemic and break the chain of infection faster.&lt;/p&gt;
&lt;p&gt;Using the Bosch COVID-19 test, a patient sample can be tested for nine other respiratory viruses such as influenza, which can cause similar clinical symptoms, in addition to SARS-CoV-2.&lt;/p&gt;
&lt;p&gt;The sample is taken from the nose or throat of the patient using a swab and placed in the cartridge without further complex preparation. This saves valuable time.&lt;/p&gt;
&lt;p&gt;The automated processing of the sample in a closed system minimizes the risk of contamination for the personnel.&lt;/p&gt;
&lt;p&gt;No cold chain of reagents or cartridge is required to perform the tests, which supports fast evaluation.&lt;/p&gt;
&lt;p&gt;Vivalytic is easy and intuitive to operate. The system does not require any additionally trained personnel, so that even hospital or doctor‚Äôs practice staff without special laboratory experience can operate Vivalytic.&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 08:53:03 +0000</pubDate>
<dc:creator>doener</dc:creator>
<og:title>Combating the coronavirus pandemic: Bosch develops rapid test for COVID-19</og:title>
<og:url>https://www.bosch.com/stories/vivalytic-rapid-test-for-covid-19/</og:url>
<og:description>Combating the coronavirus pandemic: In just six weeks, Bosch developed a rapid test that can detect a SARS-CoV-2 coronavirus infection in patients in under two and a half hours.</og:description>
<og:image>https://assets.bosch.com/media/global/stories/vivalytic_covid_19_rapid_test/Bosch-Vivalytic-Anwendung-16x9.jpg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bosch.com/stories/vivalytic-rapid-test-for-covid-19/</dc:identifier>
</item>
<item>
<title>Show HN: I made a site that aggregates entry-level positions</title>
<link>https://entrylevel.io</link>
<guid isPermaLink="true" >https://entrylevel.io</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://entrylevel.io&quot;&gt;https://entrylevel.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22691295&quot;&gt;https://news.ycombinator.com/item?id=22691295&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 258&lt;/p&gt;
&lt;p&gt;# Comments: 106&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 07:15:14 +0000</pubDate>
<dc:creator>docoleman36</dc:creator>
<og:type>website</og:type>
<og:url>https://entrylevel.io</og:url>
<og:image>/jumbo.png</og:image>
<og:description>Browse through thousands of entry-level jobs for interns, recent grads, career changers, and individuals with less than 3 years of experience. Hire entry-level workers. Entry Level is the biggest entry-level jobs board on the web to help land your first job.</og:description>
<og:title>Entry Level jobs in tech</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://entrylevel.io/</dc:identifier>
</item>
<item>
<title>What the last few weeks have been like for the CEO of Slack</title>
<link>https://twitter.com/stewart/status/1243000487365861376</link>
<guid isPermaLink="true" >https://twitter.com/stewart/status/1243000487365861376</guid>
<description>&lt;p&gt;Quick introductory note: I‚Äôm a human. I worry about my family and am deeply concerned about the millions whose jobs and health are at risk. But I‚Äôm also a CEO and these tweets are about work: the company, money, markets, customers, earnings, guidance, etc. With that in mind ‚Ä¶&lt;/p&gt;
</description>
<pubDate>Thu, 26 Mar 2020 03:33:57 +0000</pubDate>
<dc:creator>mooreds</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/stewart/status/1243000487365861376</dc:identifier>
</item>
</channel>
</rss>