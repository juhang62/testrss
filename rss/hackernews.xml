<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Linux md maintainer, Shaohua Li, has died</title>
<link>https://www.spinics.net/lists/raid/msg61993.html</link>
<guid isPermaLink="true" >https://www.spinics.net/lists/raid/msg61993.html</guid>
<description>&lt;pre&gt;
Hi,

I've got some very sad news to share with you - over Christmas, Shaohua
Li passed away after battling cancer for most of last year.

As you know, Shaohua acted as the maintainer for md. He remained
dedicated to that through the difficult times. With his passing, we
obviously have a void that needs to be filled.

For now, I'll act as interim maintainer for md until we can find a good
permanent solution. I'll queue up reviewed patches in a separate branch,
in the block tree, and help review fixes. I'm subscribed to linux-raid,
but please do CC me as well.

-- 
Jens Axboe



&lt;/pre&gt;</description>
<pubDate>Thu, 03 Jan 2019 05:11:01 +0000</pubDate>
<dc:creator>cmurf</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.spinics.net/lists/raid/msg61993.html</dc:identifier>
</item>
<item>
<title>China successfully lands Chang&amp;#039;e-4 on far side of Moon</title>
<link>http://www.planetary.org/blogs/jason-davis/change4-success.html</link>
<guid isPermaLink="true" >http://www.planetary.org/blogs/jason-davis/change4-success.html</guid>
<description>&lt;p class=&quot;postedBy notop blog&quot;&gt;&lt;a href=&quot;http://www.planetary.org/about/staff/jason-davis.html&quot;&gt;Jason Davis&lt;/a&gt; • &lt;span class=&quot;utc911873020&quot;&gt;January 2, 2019&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It’s a space feat no nation has accomplished until now: China’s Chang’e-4 spacecraft has successfully landed on the far side of the Moon! Chinese state media announced the combination lander-rover touched down at 10:26 Beijing time on 3 January 2019 (02:26 UTC, 22:26 EST 2 January). &lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;3.4351145038168&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Chang'e-4 has landed successfully on the far side of the Moon! &lt;a href=&quot;https://t.co/3SDAbGp71K&quot;&gt;pic.twitter.com/3SDAbGp71K&lt;/a&gt;&lt;/p&gt;
— Andrew Jones (@AJ_FI) &lt;a href=&quot;https://twitter.com/AJ_FI/status/1080675599331540992?ref_src=twsrc%5Etfw&quot;&gt;January 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;5.9045801526718&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Congratulations to China’s Chang’e-4 team for what appears to be a successful landing on the far side of the Moon. This is a first for humanity and an impressive accomplishment! &lt;a href=&quot;https://t.co/JfcBVsjRC8&quot;&gt;pic.twitter.com/JfcBVsjRC8&lt;/a&gt;&lt;/p&gt;
— Jim Bridenstine (@JimBridenstine) &lt;a href=&quot;https://twitter.com/JimBridenstine/status/1080678873422016513?ref_src=twsrc%5Etfw&quot;&gt;January 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;The targeted landing site was Von Kármán crater:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;6.393063583815&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Yuqi Qian of China University of Geosciences (Wuhan) reports the landing site as 177.6°E, 45.5°S via the Lunar Listserv&lt;/p&gt;
— Emily Lakdawalla (@elakdawalla) &lt;a href=&quot;https://twitter.com/elakdawalla/status/1080678933266231298?ref_src=twsrc%5Etfw&quot;&gt;January 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;h3&gt;News brief&lt;/h3&gt;
&lt;p&gt;Von Kármán crater is located within the South Pole-Aitken basin, where an ancient lunar impact may have exposed the Moon’s mantle. By studying this region directly, Chang’e-4 will learn more about the early solar system and Earth.&lt;/p&gt;
&lt;p&gt;In addition to its value as a scientific exploration target, the Moon’s quiet, airless far side makes it one of the best places in the inner solar system for science applications like radio astronomy. But since the far side never faces Earth, missions there require a relay satellite. China solved that problem by &lt;a href=&quot;http://www.planetary.org/blogs/guest-blogs/2018/20180615-queqiao-orbit-explainer.html&quot;&gt;launching the Queqiao relay satellite&lt;/a&gt; in May 2018.&lt;/p&gt;
&lt;div id=&quot;item-911878535&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;img-caption-box&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://www.planetary.org/multimedia/space-images/charts/change-4-mission-profile.html&quot;&gt;&lt;img alt=&quot;Chang'e 4 mission profile&quot; class=&quot;img840&quot; src=&quot;http://planetary.s3.amazonaws.com/assets/images/charts-diagrams/2018/20180912_6258TPS-TPR-2018Q3-18-09-04-p14legacy_f840.png&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;photo_credit&quot;&gt;&lt;em&gt;Loren Roberts for The Planetary Society&lt;/em&gt;&lt;/p&gt;
&lt;h5&gt;Chang'e 4 mission profile&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Chang’e-4 itself launched on 8 December 2018. It entered lunar orbit four days later, where mission controllers spent 22 days testing the spacecraft’s systems, waiting for the Sun to rise at the landing site. Today, Chang’e-4 successfully de-orbited and landed. One of its first tasks will be to deploy a rover similar to Yutu, which accompanied Chang’e-3 to the Moon in 2013.&lt;/p&gt;
&lt;p&gt;China &lt;a href=&quot;http://www.planetary.org/blogs/emily-lakdawalla/2015/09031006-change-5-t1-maps-future-sample-return.html&quot;&gt;formally announced the mission&lt;/a&gt; in December 2015 as part of its ambitious Chang’e lunar program that started in 2007 and will culminate with a &lt;a href=&quot;http://www.planetary.org/explore/the-planetary-report/china-new-lunar-missions.html&quot;&gt;sample return mission&lt;/a&gt; in 2019. &lt;/p&gt;
&lt;p&gt;The Queqiao relay satellite also brought along two SmallSats named Longjiang-1 and 2 bound for lunar orbit. Only Longjiang-2 was successful, and has sent home some phenomenal pictures, including a new &lt;a href=&quot;http://www.planetary.org/blogs/jason-davis/2018/20180614-longjiang-2-earth-pics.html&quot;&gt;Earthrise image&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&quot;postSection&quot; id=&quot;commenting&quot;&gt;
&lt;h5&gt;Comments &amp;amp; Sharing&lt;/h5&gt;
&lt;p&gt;&lt;em class=&quot;fa fa-comments reveal&quot;&gt;&lt;span class=&quot;fa-stack fa-lg&quot;&gt; &lt;em class=&quot;fa fa-stack-1x fa-inverse numComments&quot;&gt;1&lt;/em&gt;&lt;/span&gt;&lt;/em&gt;   &lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;templatelist-763942370&quot;&gt;
&lt;div class=&quot;postSection related&quot;&gt;
&lt;h5&gt;Related Articles&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;row card&quot; readability=&quot;7.5311355311355&quot;&gt;
&lt;div class=&quot;one-half column&quot; readability=&quot;7.4074074074074&quot;&gt;&lt;img src=&quot;https://planetary.s3.amazonaws.com/sites/planetary/images/card-mars-phobos-art.jpg&quot; alt=&quot;astronaut on Phobos&quot;/&gt;&lt;h5&gt;Let's Change the World&lt;/h5&gt;
&lt;p&gt;Become a member of The Planetary Society and together we will create the future of space exploration.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://planetary.org/join?s_src=card&quot; class=&quot;button button-primary&quot;&gt;Join Today&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;one-half column&quot; readability=&quot;7.6496350364964&quot;&gt;&lt;img alt=&quot;Emily Lakdwalla&quot; src=&quot;https://planetary.s3.amazonaws.com/sites/planetary/images/emily-lakdawalla.jpg&quot;/&gt;&lt;h5&gt;The Planetary Fund&lt;/h5&gt;
&lt;p&gt;Support enables our dedicated journalists to research deeply and bring you original space exploration articles.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;button button-primary&quot; href=&quot;http://planetary.org/donate?s_src=card#support-planetaryfund&quot;&gt;Donate&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 03 Jan 2019 04:41:28 +0000</pubDate>
<dc:creator>docbrown</dc:creator>
<og:image>http://planetary.s3.amazonaws.com/assets/images/spacecraft/2018/20180816_change4-lander-render.png</og:image>
<og:url>http://www.planetary.org/blogs/jason-davis/change4-success.html</og:url>
<og:title>China successfully lands Chang'e-4 on far side of Moon</og:title>
<og:description>It’s a space feat no nation has accomplished until now.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.planetary.org/blogs/jason-davis/change4-success.html</dc:identifier>
</item>
<item>
<title>Ethereum Plans to Cut Its Energy Consumption by 99 Percent</title>
<link>https://spectrum.ieee.org/computing/networks/ethereum-plans-to-cut-its-absurd-energy-consumption-by-99-percent</link>
<guid isPermaLink="true" >https://spectrum.ieee.org/computing/networks/ethereum-plans-to-cut-its-absurd-energy-consumption-by-99-percent</guid>
<description>&lt;section id=&quot;side-module&quot;&gt;&lt;div class=&quot;medium-top-ad&quot;&gt;
&lt;div class=&quot;ad-module&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;recommended-side&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Editor’s Picks&lt;/p&gt;
&lt;div id=&quot;article-rec&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/Mjk1NzQ2Mg&quot; alt=&quot;Photo by The Vorhes&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Blockchains: How They Work and Why They’ll Change the World&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/Mjk2MTgzMg&quot; alt=&quot;Illustration by Greg Mably&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;The Ridiculous Amount of Energy It Takes to Run Bitcoin&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/Mjk1NTE0NQ&quot; alt=&quot;Illustration: Greg Mably&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;How Smart Contracts Work&lt;/h4&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;img alt=&quot;opening illustration&quot; src=&quot;https://spectrum.ieee.org/image/MzE5NzYzOA.jpeg&quot;/&gt; Illustration: Blood Bros.
&lt;div class=&quot;mobileHide&quot;&gt;
&lt;div class=&quot;imgWrapper offsetLeft lt sm&quot;&gt;&lt;a href=&quot;https://spectrum.ieee.org/static/top-tech-2019&quot;&gt;&lt;img alt=&quot;graphic link to special report landing page&quot; src=&quot;https://spectrum.ieee.org/image/MzE5NjU4NA.jpeg&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Bitcoin soaks up&lt;/strong&gt; most of the hype and the opprobrium heaped on cryptocurrencies, leaving its younger and smaller sibling &lt;a href=&quot;https://www.ethereum.org/&quot;&gt;Ethereum&lt;/a&gt; in the shadows. But Ethereum is anything but small. Its market capitalization was roughly &lt;a href=&quot;https://etherscan.io/chart/etherprice&quot;&gt;US $10 billion at press time&lt;/a&gt;, and it has an equally whopping energy footprint.&lt;/p&gt;
&lt;p&gt;Ethereum mining consumes a quarter to half of what &lt;a href=&quot;https://spectrum.ieee.org/tag/Bitcoin&quot;&gt;Bitcoin&lt;/a&gt; mining does, but that still means that for most of 2018 it was &lt;a href=&quot;https://digiconomist.net/ethereum-energy-consumption&quot;&gt;using roughly as much electricity as Iceland&lt;/a&gt;. Indeed, the typical Ethereum transaction gobbles more power than an average U.S. household uses in a day.&lt;/p&gt;
&lt;p&gt;“That’s just a &lt;a href=&quot;https://spectrum.ieee.org/energy/policy/the-ridiculous-amount-of-energy-it-takes-to-run-bitcoin&quot;&gt;huge waste of resources&lt;/a&gt;, even if you don’t believe that pollution and carbon dioxide are an issue. There are real consumers—real people—whose need for electricity is being displaced by this stuff,” says &lt;a href=&quot;https://vitalik.ca/&quot;&gt;Vitalik Buterin&lt;/a&gt;, the 24-year-old Russian-Canadian computer scientist who invented Ethereum when he was just 18.&lt;/p&gt;
&lt;p&gt;Buterin plans to finally start undoing his brainchild’s energy waste in 2019. This year Buterin, the &lt;a href=&quot;https://www.ethereum.org/foundation&quot;&gt;Ethereum Foundation&lt;/a&gt; he cofounded, and the broader open-source movement advancing the cryptocurrency all plan to field-test a long-promised overhaul of Ethereum’s code. If these developers are right, by the end of 2019 Ethereum’s new code could complete transactions using just 1 percent of the energy consumed today.&lt;/p&gt;
&lt;img alt=&quot;img&quot; src=&quot;https://spectrum.ieee.org/image/MzE5ODE4OA.jpeg&quot;/&gt;&lt;p&gt;Photo: Gordon Welters/laif/Redux &lt;strong&gt;Ether Evangelist:&lt;/strong&gt; Vitalik Buterin, inventor of Ethereum, hopes to finally demonstrate the blockchain platform’s low-power format in 2019.&lt;/p&gt;
&lt;p&gt;Ethereum’s attempted rebirth will be one of the year’s “most fascinating technologies to watch,” says &lt;a href=&quot;https://zaki.manian.org/&quot;&gt;Zaki Manian&lt;/a&gt;, who is advising the cryptocurrency upstart Cosmos. Manian says Ethereum’s development process means that multiple coders and organizations must collaborate in the open, converge on specifications, invent all of the technology to implement them, and make them work together seamlessly. “It is by far the most technically ambitious open community project that has ever been attempted,” says Manian.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Like Bitcoin,&lt;/strong&gt; Ethereum relies on a &lt;a href=&quot;https://spectrum.ieee.org/static/special-report-blockchain-world&quot;&gt;blockchain&lt;/a&gt;, which is a digital ledger of transactions maintained by a community of users. (It’s called a blockchain because new transactions are bundled into “blocks” of data and written onto the end of a “chain” of existing blocks that describe all prior transactions.) However, Buterin designed Ethereum to do more than securely maintain a ledger without a central authority. His vision was for Ethereum to become a global computer—one that’s decentralized, accessible to all, and essentially immune to downtime, censorship, and fraud.&lt;/p&gt;
&lt;p&gt;What gives the Ethereum blockchain such potential is its ability to store data, support decisions, and automate the distribution of value. It manages these tasks through &lt;a href=&quot;https://spectrum.ieee.org/computing/networks/how-smart-contracts-work&quot;&gt;smart contracts&lt;/a&gt;, programs written by users or developers in Ethereum’s custom coding language. Smart contracts have obvious business applications, but the long-term hope is that apps built from them will eventually make Ethereum the ultimate cloud- computing platform.&lt;/p&gt;
&lt;p&gt;That lofty vision clashes with Ethereum’s current reality. While there are some multimillion-dollar apps running on it, even Buterin says he suspects that Ethereum is consuming more resources than it returns in societal benefits.&lt;/p&gt;
&lt;p&gt;The problem is all that mining. Like most cryptocurrencies, Ethereum relies on a computational competition called &lt;a href=&quot;https://spectrum.ieee.org/computing/networks/how-blockchains-work&quot;&gt;proof of work (PoW)&lt;/a&gt; . In PoW, all participants race to cryptographically secure transactions and add them to the blockchain’s globally distributed ledger. It’s a winner-takes-all contest, rewarded with newly minted cryptocoins. So the more computational firepower you have, the better your chances to profit.&lt;/p&gt;
&lt;p&gt;PoW mining is difficult by design. The idea is to prevent any one entity from controlling the blockchain. For example, if a bitcoin miner’s computer system had more than half of all the mining power on the network, that miner could perpetrate frauds, such as revising long- completed transactions. Bitcoin users would have little recourse because miners are anonymous.&lt;/p&gt;
&lt;p&gt;In theory, PoW keeps mining a distributed affair. In practice, however, the development of &lt;a href=&quot;https://spectrum.ieee.org/computing/networks/why-the-biggest-bitcoin-mines-are-in-china&quot;&gt;application-specific ICs (ASICs)&lt;/a&gt; that accelerate mining, produced by a handful of chip fabs in China, has concentrated power over many cryptocurrencies.&lt;/p&gt;
&lt;p&gt;Ethereum took the fight against concentrated power one step further by selecting a memory-intensive PoW algorithm for mining “ether,” as its value token is known. This ether-mining algorithm penalizes the use of ASICs.&lt;/p&gt;
&lt;p&gt;What Ethereum’s PoW algorithm has not prevented, however, is explosive growth in the computing resources devoted to ether mining. The computational power directed at that task grew more than 25-fold in 2017, as the token’s value surged from $8 to $862 and mining firms built dedicated data centers full of general-purpose graphics processing units, which are well-suited to ether mining.&lt;/p&gt;
&lt;p&gt;The resultant energy demand has created a backlash from environmentalists. Utilities and communities, meanwhile, see financial risk and opportunity costs if they cater to cryptocurrency miners that gobble up cheap electricity while creating few jobs. Serving miners may require utilities to make equipment upgrades, which could become superfluous if cryptocurrency prices crash and mining operations shut down.&lt;/p&gt;
&lt;p&gt;Recent market dynamics support the utilities’ concerns. The value of ether peaked at $1,385 last January and then began a downward slide. In November it crashed below $120—low enough to erase miners’ profit margin and to prompt some to slow down or turn off mining rigs. According to a projection by the Digiconomist—a site created by Alex de Vries, a senior associate and blockchain specialist at PricewaterhouseCoopers —Ethereum’s miners likely cut their total energy consumption by more than half in less than 20 days.&lt;/p&gt;
&lt;p&gt;No surprise then that some utilities, such as Montreal-based Hydro-Québec , are setting higher electricity rates for miners. Such pushback from utilities and their regulators may further erode the security of PoW-based cryptocurrencies. Restricted access to power and rising energy costs will hinder new miners from joining the game, accelerating the concentration of mining power. As it concentrates, the risk of collusion and fraud increases.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Buterin,&lt;/strong&gt; slashing energy use has been part of the vision from Ethereum’s beginning. Most of Ethereum’s other proponents agree. “It’s widely accepted in the Ethereum community that PoW uses far too much energy. For me it is the No. 1 priority,” says Ethereum contributor Paul Hauner, a cofounder of Australian cybersecurity and blockchain-development firm Sigma Prime.&lt;/p&gt;
&lt;p&gt;Ethereum’s plan is to replace PoW with &lt;a href=&quot;https://spectrum.ieee.org/computing/networks/how-blockchains-work&quot;&gt;proof of stake (PoS)&lt;/a&gt;—an alternative mechanism for distributed consensus that was first applied to a cryptocurrency with the launch of Peercoin in 2012. Instead of millions of processors simultaneously processing the same transactions, PoS randomly picks one to do the job.&lt;/p&gt;
&lt;p&gt;In PoS, the participants are called validators instead of miners, and the key is keeping them honest. PoS does this by requiring each validator to put up a stake—a pile of ether in Ethereum’s case—as collateral. A bigger stake earns a validator proportionately more chances at a turn, but it also means that a validator caught cheating has lots to lose.&lt;/p&gt;
&lt;p&gt;Moving to PoS will cut the energy consumed per Ethereum transaction more than a hundredfold, according to Buterin: “The PoW part is the one that’s consuming these huge amounts of electricity. The blockchain transactions themselves are not super computationally intensive. It’s just verifying digital signatures. It’s not some kind of heavy 3D-matrix map or machine learning on gigabytes of data,” he says.&lt;/p&gt;
&lt;p&gt;Slashing computational power and energy use is not just an ecological move. It also has a financial benefit, because it should reduce the rate at which fresh ether is issued to encourage validators—extra money that dilutes a currency’s value. “Because PoS validators aren’t expending all of this energy, we don’t have to reward them as much,” says &lt;a href=&quot;https://medium.com/@darrenlangley&quot;&gt;Darren Langley&lt;/a&gt;, a senior blockchain developer with &lt;a href=&quot;https://www.rocketpool.net/&quot;&gt;Rocket Pool&lt;/a&gt;, in Brisbane, Australia, which is developing an app that will assemble staking pools, paying interest to ether owners who join the pool.&lt;/p&gt;
&lt;p&gt;Moving to PoS could also boost security. Under PoS, the location of each validator’s account is known and can be destroyed if that validator breaks the rules. &lt;a href=&quot;https://twitter.com/VladZamfir?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor&quot;&gt;Vlad Zamfir&lt;/a&gt;, Ethereum Foundation’s lead PoS developer, likens this to the Bitcoin community gaining the power to incinerate the data centers of a miner who abuses his power.&lt;/p&gt;
&lt;p&gt;By 2015, the advantages of PoS had already convinced the Ethereum community to make the shift, and leaders such as Buterin had expected to do so in just a year or two. To make their intentions clear, Ethereum’s core developers reprogrammed their PoW code to create an exponential rise in mining difficulty. Known as the “Difficulty Bomb,” it began slowing the creation of new transaction blocks in late 2016 and was expected to bring ether mining to a grinding halt a few years thereafter.&lt;/p&gt;
&lt;p&gt;This time bomb has, however, functioned more like an alarm clock with a snooze button. In October 2017, when mining time had already nearly doubled to 30 seconds, the Ethereum team reset the clock, delaying PoW’s doomsday by about 12 months. And they will likely hit snooze again shortly.&lt;/p&gt;
&lt;p&gt;It’s not that Team Ethereum is sleeping in. In fact, Buterin says, Ethereum’s developers have already slain most of the theoretical dragons associated with PoS. But the process of turning those theoretical solutions into efficient software has been moving slower than expected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What provides hope&lt;/strong&gt; for 2019 is a radical new plan adopted by Ethereum’s leaders in June 2018. Before then, they had anticipated building PoS into the existing Ethereum blockchain. In June, they decided to make a clean break and to build an entirely new blockchain—one that operates solely via PoS.&lt;/p&gt;
&lt;p&gt;The two-chain solution—dubbed Ethereum 2.0—makes a world of difference for Ethereum’s programmers because continuing on the original chain would have meant writing the machinery of PoS as a sophisticated set of smart contracts. Hauner, who is leading an effort called Lighthouse to build an Ethereum 2.0 software client, says Ethereum’s smart-contract language is a tough medium for writing complex code. “Writing smart contracts is a very constrained environment for computing. You can’t do complicated things on it,” he says.&lt;/p&gt;
&lt;p&gt;Just a few months after the decision to shift to Ethereum 2.0, its PoS specifications had been sketched out and over half a dozen teams were already working on software implementations using a variety of programming languages. Hauner’s group at Sigma Prime is developing its Ethereum 2.0 client using Rust, for example. He expects this app and others to be running PoS on beta networks, or “testnets,” early in 2019.&lt;/p&gt;
&lt;p&gt;Buterin says public testnets could be handling another Ethereum 2.0 innovation—chains with multiple branches to boost transaction throughput—by the end of 2019. But he warns that there could still be “unknown unknowns” lurking that could set their timeline back.&lt;/p&gt;
&lt;p&gt;As a multibillion-dollar network, Ethereum obviously has a lot to lose if it launches glitchy or insecure technology. To play on Ethereum’s PoS chain, holders of ether will have to deposit a smart contract on the original Ethereum chain that irreversibly transfers ether to the new chain. Any missteps could jeopardize the entire ecosystem of developers and projects that use Ethereum’s smart contracts.&lt;/p&gt;
&lt;p&gt;But Ethereum also has a lot to lose if it delays much longer. An array of well-capitalized projects—&lt;a href=&quot;https://www.cardano.org/en/home/&quot;&gt;Cardano&lt;/a&gt;, &lt;a href=&quot;https://dfinity.org/&quot;&gt;Dfinity&lt;/a&gt;, &lt;a href=&quot;https://eos.io/&quot;&gt;Eosio&lt;/a&gt;, and Manian’s &lt;a href=&quot;https://cosmos.network/&quot;&gt;Cosmos&lt;/a&gt;, to name just a few—are hatching their own PoS-based blockchains. Like Ethereum, they seek to prove that high security and high efficiency are not at odds.&lt;/p&gt;
&lt;p&gt;The first to unleash the potential for blockchain applications may well become the computing platform of the future. The others will probably wither away. “This environment is naturally quite predatory,” Manian says. “There will be a single platform that survives.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article appears in the January 2019 print issue as “Ethereum Will Cut Back Its Absurd Energy Use.”&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;medium-bottom-ad&quot;&gt;
&lt;div class=&quot;ad-module&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 03 Jan 2019 00:48:40 +0000</pubDate>
<dc:creator>sohkamyung</dc:creator>
<og:title>Ethereum Plans to Cut Its Absurd Energy Consumption by 99 Percent</og:title>
<og:url>https://spectrum.ieee.org/computing/networks/ethereum-plans-to-cut-its-absurd-energy-consumption-by-99-percent</og:url>
<og:description>The cryptocurrency is going on an energy diet to compete with more efficient blockchains</og:description>
<og:image>https://spectrum.ieee.org/image/MzE5NzY2Mg.jpeg</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://spectrum.ieee.org/computing/networks/ethereum-plans-to-cut-its-absurd-energy-consumption-by-99-percent</dc:identifier>
</item>
<item>
<title>Letter from Tim Cook to Apple Investors</title>
<link>https://www.apple.com/newsroom/2019/01/letter-from-tim-cook-to-apple-investors/</link>
<guid isPermaLink="true" >https://www.apple.com/newsroom/2019/01/letter-from-tim-cook-to-apple-investors/</guid>
<description>&lt;p&gt;January 2, 2019&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;To Apple investors:&lt;/p&gt;
&lt;p&gt;Today we are revising our guidance for Apple’s fiscal 2019 first quarter, which ended on December 29. We now expect the following:&lt;/p&gt;
&lt;div class=&quot;pagebody-copy&quot;&gt;
&lt;ul&gt;&lt;li&gt;Revenue of approximately $84 billion&lt;/li&gt;
&lt;li&gt;Gross margin of approximately 38 percent&lt;/li&gt;
&lt;li&gt;Operating expenses of approximately $8.7 billion&lt;/li&gt;
&lt;li&gt;Other income/(expense) of approximately $550 million&lt;/li&gt;
&lt;li&gt;Tax rate of approximately 16.5 percent before discrete items&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;We expect the number of shares used in computing diluted EPS to be approximately 4.77 billion.&lt;/p&gt;
&lt;p&gt;Based on these estimates, our revenue will be lower than our original guidance for the quarter, with other items remaining broadly in line with our guidance. &lt;/p&gt;
&lt;p&gt;While it will be a number of weeks before we complete and report our final results, we wanted to get some preliminary information to you now. Our final results may differ somewhat from these preliminary estimates. &lt;/p&gt;
&lt;p&gt;When we discussed our Q1 guidance with you about 60 days ago, we knew the first quarter would be impacted by both macroeconomic and Apple-specific factors. Based on our best estimates of how these would play out, we predicted that we would report slight revenue growth year-over-year for the quarter. As you may recall, we discussed four factors:&lt;/p&gt;
&lt;p&gt;First, we knew the different timing of our iPhone launches would affect our year-over-year compares. Our top models, iPhone X&lt;span class=&quot;all-small-caps&quot;&gt;S&lt;/span&gt; and iPhone X&lt;span class=&quot;all-small-caps&quot;&gt;S&lt;/span&gt; Max, shipped in Q4’18—placing the channel fill and early sales in that quarter, whereas last year iPhone X shipped in Q1’18, placing the channel fill and early sales in the December quarter. We knew this would create a difficult compare for Q1’19, and this played out broadly in line with our expectations.&lt;/p&gt;
&lt;p&gt;Second, we knew the strong US dollar would create foreign exchange headwinds and forecasted this would reduce our revenue growth by about 200 basis points as compared to the previous year. This also played out broadly in line with our expectations.&lt;/p&gt;
&lt;p&gt;Third, we knew we had an unprecedented number of new products to ramp during the quarter and predicted that supply constraints would gate our sales of certain products during Q1. Again, this also played out broadly in line with our expectations. Sales of Apple Watch Series 4 and iPad Pro were constrained much or all of the quarter. AirPods and MacBook Air were also constrained.&lt;/p&gt;
&lt;p&gt;Fourth, we expected economic weakness in some emerging markets. This turned out to have a significantly greater impact than we had projected. &lt;/p&gt;
&lt;p&gt;In addition, these and other factors resulted in fewer iPhone upgrades than we had anticipated. &lt;/p&gt;
&lt;p&gt;These last two points have led us to reduce our revenue guidance. I’d like to go a bit deeper on both. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Emerging Market Challenges&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While we anticipated some challenges in key emerging markets, we did not foresee the magnitude of the economic deceleration, particularly in Greater China. In fact, most of our revenue shortfall to our guidance, and over 100 percent of our year-over-year worldwide revenue decline, occurred in Greater China across iPhone, Mac and iPad.&lt;/p&gt;
&lt;p&gt;China’s economy began to slow in the second half of 2018. The government-reported GDP growth during the September quarter was the second lowest in the last 25 years. We believe the economic environment in China has been further impacted by rising trade tensions with the United States. As the climate of mounting uncertainty weighed on financial markets, the effects appeared to reach consumers as well, with traffic to our retail stores and our channel partners in China declining as the quarter progressed. And market data has shown that the contraction in Greater China’s smartphone market has been particularly sharp.&lt;/p&gt;
&lt;p&gt;Despite these challenges, we believe that our business in China has a bright future. The iOS developer community in China is among the most innovative, creative and vibrant in the world. Our products enjoy a strong following among customers, with a very high level of engagement and satisfaction. Our results in China include a new record for Services revenue, and our installed base of devices grew over the last year. We are proud to participate in the Chinese marketplace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;iPhone&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Lower than anticipated iPhone revenue, primarily in Greater China, accounts for all of our revenue shortfall to our guidance and for much more than our entire year-over-year revenue decline. In fact, categories outside of iPhone (Services, Mac, iPad, Wearables/Home/Accessories) combined to grow almost 19 percent year-over-year. &lt;/p&gt;
&lt;p&gt;While Greater China and other emerging markets accounted for the vast majority of the year-over-year iPhone revenue decline, in some developed markets, iPhone upgrades also were not as strong as we thought they would be. While macroeconomic challenges in some markets were a key contributor to this trend, we believe there are other factors broadly impacting our iPhone performance, including consumers adapting to a world with fewer carrier subsidies, US dollar strength-related price increases, and some customers taking advantage of significantly reduced pricing for iPhone battery replacements. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Many Positive Results in the December Quarter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While it’s disappointing to revise our guidance, our performance in many areas showed remarkable strength in spite of these challenges. &lt;/p&gt;
&lt;p&gt;Our installed base of active devices hit a new all-time high—growing by more than 100 million units in 12 months. There are more Apple devices being used than ever before, and it’s a testament to the ongoing loyalty, satisfaction and engagement of our customers. &lt;/p&gt;
&lt;p&gt;Also, as I mentioned earlier, revenue outside of our iPhone business grew by almost 19 percent year-over-year, including all-time record revenue from Services, Wearables and Mac. Our non-iPhone businesses have less exposure to emerging markets, and the vast majority of Services revenue is related to the size of the installed base, not current period sales. &lt;/p&gt;
&lt;p&gt;Services generated over $10.8 billion in revenue during the quarter, growing to a new quarterly record in every geographic segment, and we are on track to achieve our goal of doubling the size of this business from 2016 to 2020.&lt;/p&gt;
&lt;p&gt;Wearables grew by almost 50 percent year-over-year, as Apple Watch and AirPods were wildly popular among holiday shoppers; launches of MacBook Air and Mac mini powered the Mac to year-over-year revenue growth and the launch of the new iPad Pro drove iPad to year-over-year double-digit revenue growth. &lt;/p&gt;
&lt;p&gt;We also expect to set all-time revenue records in several developed countries, including the United States, Canada, Germany, Italy, Spain, the Netherlands and Korea. And, while we saw challenges in some emerging markets, others set records, including Mexico, Poland, Malaysia and Vietnam.&lt;/p&gt;
&lt;p&gt;Finally, we also expect to report a new all-time record for Apple’s earnings per share.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Looking Ahead&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our profitability and cash flow generation are strong, and we expect to exit the quarter with approximately $130 billion in net cash. As we have stated before, we plan to become net-cash neutral over time.&lt;/p&gt;
&lt;p&gt;As we exit a challenging quarter, we are as confident as ever in the fundamental strength of our business. We manage Apple for the long term, and Apple has always used periods of adversity to re-examine our approach, to take advantage of our culture of flexibility, adaptability and creativity, and to emerge better as a result. &lt;/p&gt;
&lt;p&gt;Most importantly, we are confident and excited about our pipeline of future products and services. Apple innovates like no other company on earth, and we are not taking our foot off the gas.&lt;/p&gt;
&lt;p&gt;We can’t change macroeconomic conditions, but we are undertaking and accelerating other initiatives to improve our results. One such initiative is making it simple to trade in a phone in our stores, finance the purchase over time, and get help transferring data from the current to the new phone. This is not only great for the environment, it is great for the customer, as their existing phone acts as a subsidy for their new phone, and it is great for developers, as it can help grow our installed base. &lt;/p&gt;
&lt;p&gt;This is one of a number of steps we are taking to respond. We can make these adjustments because Apple’s strength is in our resilience, the talent and creativity of our team, and the deeply held passion for the work we do every day.&lt;/p&gt;
&lt;p&gt;Expectations are high for Apple because they should be. We are committed to exceeding those expectations every day.&lt;/p&gt;
&lt;p&gt;That has always been the Apple way, and it always will be.&lt;/p&gt;
&lt;p&gt;Tim&lt;/p&gt;
</description>
<pubDate>Wed, 02 Jan 2019 21:35:33 +0000</pubDate>
<dc:creator>minimaxir</dc:creator>
<og:type>article</og:type>
<og:title>Letter from Tim Cook to Apple investors</og:title>
<og:url>https://www.apple.com/newsroom/2019/01/letter-from-tim-cook-to-apple-investors/</og:url>
<og:image>https://www.apple.com/newsroom/images/defaultog.png.large.png?201901022134</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.apple.com/newsroom/2019/01/letter-from-tim-cook-to-apple-investors/</dc:identifier>
</item>
<item>
<title>Scratch 3.0</title>
<link>https://scratch.mit.edu/discuss/topic/326861/</link>
<guid isPermaLink="true" >https://scratch.mit.edu/discuss/topic/326861/</guid>
<description>Hi folks! It’s here! We are excited to let you know that Scratch 3.0 has launched!&lt;p&gt;As of today, Scratch 3.0 has officially become part of the Scratch Online Community (&lt;a href=&quot;https://scratch.mit.edu/&quot;&gt;scratch.mit.edu&lt;/a&gt;). With the introduction of Scratch 3.0 comes lots of exciting new features. There are dozens of new sprites, backgrounds, and sounds for you to play with. The brand new extension library lets you add new sets of blocks that connect to hardware and software services and do even more with Scratch.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://u.cubeupload.com/christan/ProjectEditor.png&quot; /&gt;&lt;/p&gt;&lt;p&gt;We encourage you to check out the new editor and play around with some of the new features. You can do so here: &lt;a href=&quot;https://scratch.mit.edu/projects/editor/&quot;&gt;https://scratch.mit.edu/projects/editor/&lt;/a&gt;. What will you create?&lt;/p&gt;&lt;p&gt;Things to Try:&lt;br /&gt;+ Check out the sprite library&lt;br /&gt;+ Add an extension&lt;br /&gt;+ Record and edit a sound&lt;br /&gt;+ Create a project for the Design Studio&lt;/p&gt;&lt;p&gt;To learn more about Scratch 3.0, check out the &lt;a href=&quot;https://scratch.mit.edu/info/faq#scratch3&quot;&gt;FAQ page&lt;/a&gt; and answers to some commonly asked questions below.&lt;/p&gt;&lt;p&gt;Scratch (3.0) On!&lt;br /&gt;ceebee, on behalf of the Scratch Team&lt;/p&gt;&lt;p&gt;- - - - -&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Commonly Asked Questions&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;What is Scratch 3.0?&lt;/span&gt;&lt;br /&gt;Scratch 3.0 is the next generation of Scratch – designed to expand how, what, and where you can create with Scratch. It includes dozens of new sprites, a totally new sound editor, and many new programming blocks. And with Scratch 3.0, you are able to create and play projects on your tablet, in addition to your laptop or desk computer.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;When will Scratch 3.0 launch?&lt;/span&gt;&lt;br /&gt;Today! January 2, 2019.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Where are all my old projects?&lt;/span&gt;&lt;br /&gt;Your projects are still in all of the places they were previously. You can see all of your projects at &lt;a href=&quot;https://scratch.mit.edu/mystuff/&quot;&gt;https://scratch.mit.edu/mystuff/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;What are Scratch 3.0 extensions?&lt;/span&gt;&lt;br /&gt;In the Scratch 3.0 programming editor, you can add collections of extra blocks called “extensions.” For example, there will be extensions that enable you to program physical devices (such as micro:bit and LEGO robotics kits) and to translate text within your Scratch projects. We will continue to add new extensions over time, so what you can do with Scratch will continue to grow over time.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Where are the pen blocks? And the play-note blocks?&lt;/span&gt;&lt;br /&gt;These blocks are now contained in Scratch extensions. To add them, click on the extensions button in the bottom left corner of the screen, and then select the extension that you want.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;If I find a bug in Scratch 3.0, where should I report it?&lt;/span&gt;&lt;br /&gt;When you find bugs, please share them in this forum post: &lt;a href=&quot;https://scratch.mit.edu/discuss/3/&quot;&gt;https://scratch.mit.edu/discuss/3/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;If I have suggestions for Scratch 3.0, where I can share them?&lt;/span&gt;&lt;br /&gt;Please share your suggestions in this forum post: &lt;a href=&quot;https://scratch.mit.edu/discuss/1/&quot;&gt;https://scratch.mit.edu/discuss/1/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Is Scratch 3.0 available in multiple languages?&lt;/span&gt;&lt;br /&gt;Yes! Scratch 3.0 is available in many languages, but many more are still being translated by our community of volunteer translators.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Why has the stage moved to the right side of the editor?&lt;/span&gt;&lt;br /&gt;As we tested different prototypes of Scratch 3.0, people found the interface more intuitive and understandable with the blocks palette on the left and the stage on the right (with the scripting area in the middle). Fun fact: This setup is similar to the arrangement of Scratch 1.0, the original version of Scratch.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Where is Scratch 2.0 and can I still use it?&lt;/span&gt;&lt;br /&gt;You can still download the Scratch 2.0 and 1.4 offline editors here: &lt;a href=&quot;https://scratch.mit.edu/download&quot;&gt;https://scratch.mit.edu/download&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;bb-bold&quot;&gt;Where can I learn more about Scratch 3.0?&lt;/span&gt;&lt;br /&gt;We’ve shared a much more detailed FAQ about Scratch 3.0 here: &lt;a href=&quot;https://scratch.mit.edu/info/faq#scratch3&quot;&gt;https://scratch.mit.edu/info/faq#scratch3&lt;/a&gt;&lt;/p&gt;</description>
<pubDate>Wed, 02 Jan 2019 21:09:24 +0000</pubDate>
<dc:creator>tumidpandora</dc:creator>
<og:type>website</og:type>
<og:description>Make games, stories and interactive art with Scratch. (scratch.mit.edu)</og:description>
<og:title>Scratch - Imagine, Program, Share</og:title>
<og:url>https://scratch.mit.edu/discuss/topic/326861/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://scratch.mit.edu/discuss/topic/326861/</dc:identifier>
</item>
<item>
<title>Migrating from Google Analytics</title>
<link>https://thomashunter.name/posts/2018-12-28-migrating-from-google-analytics</link>
<guid isPermaLink="true" >https://thomashunter.name/posts/2018-12-28-migrating-from-google-analytics</guid>
<description>&lt;p&gt;&lt;span class=&quot;read-time&quot;&gt;5 min read&lt;/span&gt; &lt;span class=&quot;published&quot;&gt;&lt;time datetime=&quot;2018-12-28&quot;&gt;Dec 28, 2018&lt;/time&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;In this post we'll explore what happened when I migrated away from Google Analytics (GA) to a self-hosted solution. The tool that I migrated to is an open-source platform called &lt;a href=&quot;https://github.com/Countly/countly-server&quot;&gt;Countly&lt;/a&gt;. It offers a subset of features from what GA offers.&lt;/p&gt;
&lt;p&gt;When creating content for this website my typical flow is to first publish a post, then submit it to sites like Hacker News and Reddit, and keep an eye on analytics for a couple days to see how it does. This helps me figure out what my audience find interesting.&lt;/p&gt;
&lt;p&gt;There are a few questions that I need an analytics solution to be able to answer for me:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What posts are popular this week?&lt;/li&gt;
&lt;li&gt;How is the site doing compared to last week?&lt;/li&gt;
&lt;li&gt;Which pages were featured and on which social media platforms?&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Spoiler: Neither tool can succinctly answer the third question. Ideally an analytics tool would display an “event”, some sort of marker on the timeline when a certain threshold of traffic from a source is met. I.e. I want to know that “Migrating from Wordpress to Static Markdown” was featured on &lt;strong&gt;/r/node&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had already installed Countly on a VPS for keeping track of events generated by a mobile game I published, &lt;a href=&quot;https://thomashunter.name/install-cobalt-dungeon/&quot;&gt;Cobalt Dungeon&lt;/a&gt; (this was a replacement for a massively overpriced event tracking system, &lt;em&gt;Mixpanel&lt;/em&gt;). Having it installed was convenient because the server was already up and listening. I simply needed to create another “application” using their multi-tenant-friendly UI and I was ready to go.&lt;/p&gt;
&lt;h2 id=&quot;whymigrate&quot;&gt;Why Migrate&lt;/h2&gt;
&lt;p&gt;Honestly, it was mostly due to philosophical reasons. The Internet has become increasingly centralized over the years. I really want a website that someone can visit and all the resources are served by domains that I own. With this change I am much closer to that goal (though, most pages have an unobtrusive advertisement, those are still loaded from a third party).&lt;/p&gt;
&lt;h2 id=&quot;themigration&quot;&gt;The Migration&lt;/h2&gt;
&lt;p&gt;The initial installation of Countly isn't &lt;em&gt;too&lt;/em&gt; difficult. They offer a pretty convenient &lt;a href=&quot;https://resources.count.ly/docs/installing-countly-server&quot;&gt;One-Liner Countly Installation&lt;/a&gt; script. According to the documentation they suggest a server with 2GB of RAM. I ran Countly on such a server for several months, but eventually downgraded to a server with 1GB of RAM, and haven't encountered any issues so far.&lt;/p&gt;
&lt;p&gt;The server that I use for Countly is a &lt;a href=&quot;https://www.linode.com/?r=dad2a0703daeae3052230fa111a0ef6cfb7c4130&quot;&gt;Linode 1GB Nanode VPS @ $5/mo&lt;/a&gt;. There's also an equivalent &lt;a href=&quot;https://www.digitalocean.com/?refcode=d95c995e23b2&quot;&gt;Digital Ocean 1GB Droplet VPS @ $5/mo&lt;/a&gt;. Both of these VPS offerings come with 1TB of transfer, 1 vCPU, and 25GB of SSD, all of which is plenty for an analytics service. DO is getting more popular recently but I chose Linode because I already have a VPS with them for hosting the rest of my projects.&lt;/p&gt;
&lt;p&gt;Regardless of where you get your VPS from you should pick the most recent Ubuntu LTS. This will provide maximum compatibility with the install script and should come with plenty of security updates. Run the installer on a fresh installation and everything will be taken care of. You'll also want to go through the usual DNS and Lets Encrypt SSL setup.&lt;/p&gt;
&lt;p&gt;Installing Countly on my site was pretty straightforward. Google Analtyics provides an HTML snippet which can be copied and pasted into the layout of a website. Of course, Countly works the same way.&lt;/p&gt;
&lt;p&gt;Right now I'm running the website with &lt;em&gt;both&lt;/em&gt; GA and Countly. Once I get more traffic and am satisfied that there aren't too many discrepancies I'll shut GA off completely.&lt;/p&gt;
&lt;h2 id=&quot;whatgotbetter&quot;&gt;What got Better?&lt;/h2&gt;
&lt;p&gt;First of all, the Countly interface is much more intuitive than Google Analytics. For example it always takes me a few minutes to find the popular page list in GA.&lt;/p&gt;
&lt;h3 id=&quot;reducedbandwidth&quot;&gt;Reduced bandwidth&lt;/h3&gt;
&lt;p&gt;As far as technical improvements go, the amount of data sent over the wire has decreased. My website already weighs in pretty low, so saving a few KB is a bigger deal with this site than with most sites.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google Analtyics:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/gtag/js&lt;/code&gt; &lt;strong&gt;31.95 KB&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/analtyics.js&lt;/code&gt; &lt;strong&gt;17.49 KB&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;collection event &lt;strong&gt;458 B&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Countly:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;countly.min.js&lt;/code&gt; &lt;strong&gt;8.08 KB&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;collection event #1 &lt;strong&gt;361 B&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;collection event #2 &lt;strong&gt;361 B&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;https://thomashunter.name/media/2018/12/migrate-google-analytics/network-traffic.png&quot; alt=&quot;Network Traffic: Google Analytics vs. Countly&quot;/&gt;Network Traffic: Google Analytics vs. Countly&lt;/p&gt;
&lt;p&gt;As you can see the difference is fairly high; GA usually consumes over 5x the amount of network traffic (about 50 KB vs 9 KB). Some of my pages only take 150 KB to load, sans analytics, so the savings are pretty nice. Another cool thing about Countly is that I'm able to host the analytics script from the main &lt;code&gt;thomashunter.name&lt;/code&gt; domain.&lt;/p&gt;
&lt;h3 id=&quot;increasedeventtracking&quot;&gt;Increased Event Tracking&lt;/h3&gt;
&lt;p&gt;Here are some numbers tracked over the past week, from December 20th to December 26th:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th/&gt;
&lt;th&gt;Countly&lt;/th&gt;
&lt;th&gt;Google Analytics&lt;/th&gt;
&lt;th&gt;Diff&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Total Sessions&lt;/td&gt;
&lt;td&gt;1,633&lt;/td&gt;
&lt;td&gt;1,268&lt;/td&gt;
&lt;td&gt;+27%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Total Visitors&lt;/td&gt;
&lt;td&gt;1,349&lt;/td&gt;
&lt;td&gt;1,120&lt;/td&gt;
&lt;td&gt;+20%&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Countly receives data for at least 20% more users than Google Analytics.&lt;/strong&gt; Why might that be? I suspect both services keep track of sessions different, and both services perform different bot detection.&lt;/p&gt;
&lt;p&gt;But, more likely, the highest contributor is going to be the different ad-blocking tools used by my visitors. These tools usually include a blacklist. Such a blacklist is more likely to contain the ubiquitous &lt;code&gt;googletagmanager.com&lt;/code&gt; than my one-off &lt;code&gt;analytics.phobosrising.co&lt;/code&gt;. And since my blog caters to a mostly technical audience the odds of them running ad-blocking tools is much higher than the average internet user.&lt;/p&gt;
&lt;h2 id=&quot;whatgotworse&quot;&gt;What got Worse?&lt;/h2&gt;
&lt;p&gt;Some features about Countly are completely broken. The Traffic Sources screen is broken (it thinks everything is “direct” traffic, though this is supposedly fixed in an update). The Versions screen isn't useful for web (it's more for application versions). The Devices screen doesn't seem to know what an Android device is.&lt;/p&gt;
&lt;p&gt;Possibly the biggest issue is that it costs more. Google Analytics doesn't have a &lt;em&gt;monetary&lt;/em&gt; fee associated with it. However, the VPS costs $5/month, or $60/year.&lt;/p&gt;
&lt;p&gt;Upgrading Countly is a time-consuming endeavor. GA, or any other SaaS solution, is going to be constantly updating itself behind the scenes. Upgrading Countly requires painful database migrations.&lt;/p&gt;
&lt;p&gt;The issue which bothers me the least is that Countly displays less information. However, I didn't use 90% of the information that GA provides, so I'm not too worried about it.&lt;/p&gt;
&lt;p&gt;If you're considering making the switch from one analytics platform to another then I would recommend writing a list of questions you need answered. Then, when evaluating alternatives, make sure the tool satisfies your needs.&lt;/p&gt;
&lt;h2 id=&quot;interfacescreenshots&quot;&gt;Interface Screenshots&lt;/h2&gt;
&lt;p&gt;Here are a few graphical comparisons between the two tools. I personally find the Countly interface to be a little more modern. It also renders quicker than GA.&lt;/p&gt;
&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This first view is the overview, or dashboard view, of the system, showing some quick details for the selected timescale.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://thomashunter.name/media/2018/12/migrate-google-analytics/overview-countly.png&quot; alt=&quot;Countly Overview&quot;/&gt;Countly Overview&lt;/p&gt;
&lt;p&gt;Note that Countly comes with a Week over Week view. Google Analytics has another screen, containing mostly the same details as in this screenshot, but with a WoW timeline as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://thomashunter.name/media/2018/12/migrate-google-analytics/overview-google-analytics.png&quot; alt=&quot;Google Overview&quot;/&gt;Google Overview&lt;/p&gt;
&lt;h3 id=&quot;pagelisting&quot;&gt;Page Listing&lt;/h3&gt;
&lt;p&gt;These two screens show the highest ranking pages based on popularity for the selected timescale.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://thomashunter.name/media/2018/12/migrate-google-analytics/pages-countly.png&quot; alt=&quot;Countly Page Listing&quot;/&gt;Countly Page Listing&lt;/p&gt;
&lt;p&gt;The two screens show basically the same information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://thomashunter.name/media/2018/12/migrate-google-analytics/pages-google-analytics.png&quot; alt=&quot;Google Page Listing&quot;/&gt;Google Page Listing&lt;/p&gt;

</description>
<pubDate>Wed, 02 Jan 2019 20:49:42 +0000</pubDate>
<dc:creator>gorkemcetin</dc:creator>
<og:title>On Migrating from Google Analytics</og:title>
<og:type>article</og:type>
<og:url>https://thomashunter.name/posts/2018-12-28-migrating-from-google-analytics</og:url>
<og:image>https://thomashunter.name/avatar.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thomashunter.name/posts/2018-12-28-migrating-from-google-analytics</dc:identifier>
</item>
<item>
<title>New Horizons’ first hi-res imagery of Ultima Thule</title>
<link>http://pluto.jhuapl.edu/News-Center/News-Article.php?page=20190102</link>
<guid isPermaLink="true" >http://pluto.jhuapl.edu/News-Center/News-Article.php?page=20190102</guid>
<description>&lt;h2&gt;&lt;span class=&quot;date&quot;&gt;January 2, 2019&lt;/span&gt;NASA's New Horizons Mission Reveals Entirely New Kind of World&lt;/h2&gt;
&lt;p class=&quot;lead&quot;&gt;Images of the Kuiper Belt object Ultima Thule unveil the very first stages of solar system's history&lt;/p&gt;
&lt;div class=&quot;col-md-5 col-sm-12 float-right&quot; readability=&quot;16.034117647059&quot;&gt;
&lt;div class=&quot;col-md-11 mb-3 ml-3 mr-3 p-1&quot; readability=&quot;3.575&quot;&gt;
&lt;div class=&quot;col-md-4 col-sm-12 float-left p-0&quot;&gt;&lt;img src=&quot;http://pluto.jhuapl.edu/News-Center/Press-Conferences/2019-01-02/960x540/Slide01.jpeg&quot; class=&quot;img-fluid&quot;/&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;br clear=&quot;all&quot;/&gt;&lt;div class=&quot;col-md-12 captionBox mt-4&quot; readability=&quot;15&quot;&gt;&lt;a href=&quot;http://pluto.jhuapl.edu/Galleries/Featured-Images/image.php?page=1&amp;amp;gallery_id=2&amp;amp;image_id=577&quot;&gt;&lt;img src=&quot;http://pluto.jhuapl.edu/Galleries/Featured-Images/pics800wide/20190102-pr.png&quot; class=&quot;img-fluid&quot;/&gt;&lt;/a&gt;
&lt;p&gt;This image taken by the Long-Range Reconnaissance Imager (LORRI) is the most detailed of Ultima Thule returned so far by the New Horizons spacecraft. It was taken at 5:01 Universal Time on January 1, 2019, just 30 minutes before closest approach from a range of 18,000 miles (28,000 kilometers), with an original scale of 459 feet (140 meters) per pixel. Credit: NASA/Johns Hopkins University Applied Physics Laboratory/Southwest Research Institute&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;col-md-12 captionBox&quot; readability=&quot;18&quot;&gt;&lt;a href=&quot;http://pluto.jhuapl.edu/Galleries/Featured-Images/image.php?page=1&amp;amp;gallery_id=2&amp;amp;image_id=578&quot;&gt;&lt;img src=&quot;http://pluto.jhuapl.edu/Galleries/Featured-Images/pics800wide/MU69_image_v1%20copy.png&quot; class=&quot;img-fluid float-left&quot;/&gt;&lt;/a&gt;
&lt;p&gt;The first color image of Ultima Thule, taken at a distance of 85,000 miles (137,000 kilometers) at 4:08 Universal Time on January 1, 2019, highlights its reddish surface. At left is an enhanced color image taken by the Multispectral Visible Imaging Camera (MVIC), produced by combining the near infrared, red and blue channels. The center image taken by the Long-Range Reconnaissance Imager (LORRI) has a higher spatial resolution than MVIC by approximately a factor of five. At right, the color has been overlaid onto the LORRI image to show the color uniformity of the Ultima and Thule lobes. Note the reduced red coloring at the neck of the object. Credit: NASA/Johns Hopkins University Applied Physics Laboratory/Southwest Research Institute&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Scientists from NASA's New Horizons mission released the first detailed images of the most distant object ever explored — the Kuiper Belt object nicknamed Ultima Thule. Its remarkable appearance, unlike anything we've seen before, illuminates the processes that built the planets four and a half billion years ago.&lt;/p&gt;
&lt;p&gt;&quot;This flyby is a historic achievement,&quot; said New Horizons Principal Investigator Alan Stern of the Southwest Research Institute in Boulder, Colorado. &quot;Never before has any spacecraft team tracked down such a small body at such high speed so far away in the abyss of space. New Horizons has set a new bar for state-of-the-art spacecraft navigation.&quot;&lt;/p&gt;
&lt;p&gt;The new images — taken from as close as 17,000 miles (27,000 kilometers) on approach — revealed Ultima Thule as a &quot;contact binary,&quot; consisting of two connected spheres. End to end, the world measures 19 miles (31 kilometers) in length. The team has dubbed the larger sphere &quot;Ultima&quot; (12 miles/19 kilometers across) and the smaller sphere &quot;Thule&quot; (9 miles/14 kilometers across).&lt;/p&gt;
&lt;p&gt;The team says that the two spheres likely joined as early as 99 percent of the way back to the formation of the solar system, colliding no faster than two cars in a fender-bender.&lt;/p&gt;
&lt;p&gt;&quot;New Horizons is like a time machine, taking us back to the birth of the solar system. We are seeing a physical representation of the beginning of planetary formation, frozen in time,&quot; said Jeff Moore, New Horizons Geology and Geophysics team lead. &quot;Studying Ultima Thule is helping us understand how planets form — both those in our own solar system and those orbiting other stars in our galaxy.&quot;&lt;/p&gt;
&lt;p&gt;Data from the New Year's Day flyby will continue to arrive over the next weeks and months, with much higher resolution images yet to come.&lt;/p&gt;
&lt;p&gt;&quot;In the coming months, New Horizons will transmit dozens of data sets to Earth, and we'll write new chapters in the story of Ultima Thule — and the solar system,&quot; said Helene Winters, New Horizons Project Manager.&lt;/p&gt;
&lt;p&gt;The Johns Hopkins Applied Physics Laboratory in Laurel, Maryland, designed, built and operates the New Horizons spacecraft, and manages the mission for NASA's Science Mission Directorate. The Southwest Research Institute, based in San Antonio, leads the science team, payload operations and encounter science planning. New Horizons is part of the New Frontiers Program managed by NASA's Marshall Space Flight Center in Huntsville, Alabama.&lt;/p&gt;
&lt;p&gt;Follow the New Horizons mission on &lt;a href=&quot;https://twitter.com/nasanewhorizons&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt; and use the hashtags #UltimaThule, #UltimaFlyby and #askNewHorizons to join the conversation. Live updates and links to mission information are also available on &lt;a href=&quot;http://pluto.jhuapl.edu&quot;&gt;http://pluto.jhuapl.edu&lt;/a&gt; and &lt;a href=&quot;http://www.nasa.gov&quot; target=&quot;_blank&quot;&gt;www.nasa.gov&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Wed, 02 Jan 2019 20:18:24 +0000</pubDate>
<dc:creator>mbrundle</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://pluto.jhuapl.edu/News-Center/News-Article.php?page=20190102</dc:identifier>
</item>
<item>
<title>Monorepos: Please don’t</title>
<link>https://medium.com/@mattklein123/monorepos-please-dont-e9a279be011b</link>
<guid isPermaLink="true" >https://medium.com/@mattklein123/monorepos-please-dont-e9a279be011b</guid>
<description>&lt;div class=&quot;uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup&quot;&gt;
&lt;div class=&quot;u-flex0&quot;&gt;&lt;a class=&quot;link u-baseColor--link avatar&quot; href=&quot;https://medium.com/@mattklein123?source=post_header_lockup&quot; data-action=&quot;show-user-card&quot; data-action-source=&quot;post_header_lockup&quot; data-action-value=&quot;eb3356e408e8&quot; data-action-type=&quot;hover&quot; data-user-id=&quot;eb3356e408e8&quot; dir=&quot;auto&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/fit/c/100/100/1*_wDsWRhPw613x1CX95Dh2w.png&quot; class=&quot;avatar-image u-size50x50&quot; alt=&quot;Go to the profile of Matt Klein&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p name=&quot;c8d1&quot; id=&quot;c8d1&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Here we are at the beginning of 2019 and I’m engaged in yet another discussion on the merits (or lack thereof) of keeping all of an organization’s code in a “&lt;a href=&quot;https://en.wikipedia.org/wiki/Monorepo&quot; data-href=&quot;https://en.wikipedia.org/wiki/Monorepo&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;monorepo&lt;/a&gt;.” For those of you not familiar with this concept, the idea behind a monorepo is to store all code in a single version control system (VCS) repository. The alternative, of course, is to store code split into many different VCS repositories, usually on a service/application/library basis. For the purpose of this post I will call the multiple repository solution a “polyrepo.”&lt;/p&gt;
&lt;p name=&quot;c6a0&quot; id=&quot;c6a0&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Some of tech’s biggest names use a monorepo, including &lt;a href=&quot;https://ai.google/research/pubs/pub45424&quot; data-href=&quot;https://ai.google/research/pubs/pub45424&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;, Facebook, Twitter, and others. Surely if these companies all use a monorepo, the benefits must be tremendous, and we should all do the same, right? Wrong! As the title says: please, do not use a monorepo! Why? Because, &lt;em class=&quot;markup--em markup--p-em&quot;&gt;at scale, a monorepo must solve every problem that a polyrepo must solve, with the downside of encouraging tight coupling, and the additional herculean effort of tackling VCS scalability&lt;/em&gt;. Thus, in the medium to long term, a monorepo provides zero organizational benefits, while inevitably leaving some of an organization’s best engineers with a wicked case of PTSD (manifested via drooling and incoherent mumbling about git performance internals).&lt;/p&gt;
&lt;p name=&quot;c68c&quot; id=&quot;c68c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A quick note: what do I mean by “at scale?” There is no definitive answer to this question, but because I know I will be asked, let’s say for the sake of discussion that at scale means over 100 developers writing code full time.&lt;/p&gt;
&lt;h3 name=&quot;afc5&quot; id=&quot;afc5&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Theoretical monorepo benefits and why they cannot be achieved without polyrepo-style tooling (or are a lie)&lt;/h3&gt;
&lt;h4 name=&quot;2b5c&quot; id=&quot;2b5c&quot; class=&quot;graf graf--h4 graf-after--h3&quot;&gt;&lt;strong class=&quot;markup--strong markup--h4-strong&quot;&gt;Theoretical benefit 1: Easier collaboration and code sharing&lt;/strong&gt;&lt;/h4&gt;
&lt;p name=&quot;bccf&quot; id=&quot;bccf&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Monorepo proponents will argue that when all code is present within a single repository, the likelihood of code duplication is small, and it’s more likely that different teams will collaborate together on shared infrastructure.&lt;/p&gt;
&lt;p name=&quot;fe24&quot; id=&quot;fe24&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Here is the ugly truth about even a medium size monorepo (and this will be a recurring theme throughout this section): it quickly becomes unreasonable for a single developer to have the entire repository on their machine, or to search through it using tools like grep. Thus, any monorepo that hopes to scale must provide two things:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;15af&quot; id=&quot;15af&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Some type of virtual file system (VFS) that allows a portion of the code to be present locally. This might be accomplished via a proprietary VCS like &lt;a href=&quot;https://www.perforce.com/&quot; data-href=&quot;https://www.perforce.com/&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Perforce&lt;/a&gt; which natively operates this way, via &lt;a href=&quot;https://ai.google/research/pubs/pub45424&quot; data-href=&quot;https://ai.google/research/pubs/pub45424&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Google’s “G3” internal tooling&lt;/a&gt;, or Microsoft’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_Virtual_File_System&quot; data-href=&quot;https://en.wikipedia.org/wiki/Git_Virtual_File_System&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;GVFS&lt;/a&gt;.&lt;/li&gt;
&lt;li name=&quot;fa3d&quot; id=&quot;fa3d&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Sophisticated source code indexing/searching/discovery capabilities as a service. Since no individual developer is going to have all code in a searchable state, it’s critical that there exists some capability to perform a search across the entire codebase.&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;a39e&quot; id=&quot;a39e&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Given that a developer will only access small portions of the codebase at a time, is there any real difference between checking out a portion of the tree via a VFS or checking out multiple repositories? &lt;em class=&quot;markup--em markup--p-em&quot;&gt;There is no difference&lt;/em&gt;.&lt;/p&gt;
&lt;p name=&quot;6de7&quot; id=&quot;6de7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In terms of source code indexing/searching/discovery capabilities, a tool can trivially iterate over many repositories and collate the results. In fact, this is how GitHub’s own searching capabilities work as well as newer and more sophisticated indexing and collaboration tools such as &lt;a href=&quot;https://sourcegraph.com/start&quot; data-href=&quot;https://sourcegraph.com/start&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Sourcegraph&lt;/a&gt;.&lt;/p&gt;
&lt;p name=&quot;792f&quot; id=&quot;792f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Thus, in terms of collaboration and code sharing, at scale, developers are exposed to subsections of code through higher layer tooling. Whether the code is in a monorepo or polyrepo is irrelevant; the problem being solved is the same, and &lt;em class=&quot;markup--em markup--p-em&quot;&gt;the efficacy of collaboration and code sharing has everything to do with engineering culture and nothing to do with code storage&lt;/em&gt;.&lt;/p&gt;
&lt;h4 name=&quot;207d&quot; id=&quot;207d&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Theoretical benefit 2: Single build / no dependency management&lt;/h4&gt;
&lt;p name=&quot;1671&quot; id=&quot;1671&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;The next thing that monorepo proponents will typically say is that by having all code in a single repository, there is no need for dependency management because all source code is built at the same time. This is a lie! At scale, there is simply no way to rebuild the entirety of a codebase and run all automated tests when each change is submitted (or, more importantly and more often, in CI when a change is proposed). To deal with this problem, all of the large monorepos have developed sophisticated build systems (see &lt;a href=&quot;https://bazel.build/&quot; data-href=&quot;https://bazel.build/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Bazel&lt;/a&gt;/Blaze from Google and &lt;a href=&quot;https://buckbuild.com/&quot; data-href=&quot;https://buckbuild.com/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Buck&lt;/a&gt; from Facebook as examples) that are designed in such a way as to internally track dependencies and build a directed acyclic graph (DAG) of the source code. This DAG allows for efficient build and test caching such that only code that changes, or code that depends on it, needs to be built and tested.&lt;/p&gt;
&lt;p name=&quot;bf37&quot; id=&quot;bf37&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Furthermore, because code that is built must actually be deployed, and not all software is deployed at the same time, it is essential that build artifacts are carefully tracked so that previously deployed software can be redeployed to new hosts as needed. This reality means that even in a monorepo world, multiple versions of code exist at the same time in the wild, and must be carefully tracked and reconciled.&lt;/p&gt;
&lt;p name=&quot;5dc2&quot; id=&quot;5dc2&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Monorepo proponents will argue that even with the large amount of build/dependency tracking required, there is still substantial benefit because a single commit/SHA describes the entire state of the world. I would argue this benefit is dubious; given the DAG that already exists, it’s a trivial leap to include individual repository SHAs as part of the DAG, and in fact, Bazel can seamlessly work across repositories or within a single repository, abstracting the underlying layout from the developer. Furthermore, automated refactor tooling can trivially be built that automatically bumps dependent library versions across many repositories, thus blurring the difference between a monorepo and polyrepo in this area (more on this below).&lt;/p&gt;
&lt;p name=&quot;c1ba&quot; id=&quot;c1ba&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The end result is that the realities of build/deploy management at scale are largely identical whether using a monorepo or polyrepo. &lt;em class=&quot;markup--em markup--p-em&quot;&gt;The tools don’t care, and neither should the developers writing code&lt;/em&gt;.&lt;/p&gt;
&lt;h4 name=&quot;85f6&quot; id=&quot;85f6&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Theoretical benefit 3: Code refactors are easy / atomic commits&lt;/h4&gt;
&lt;p name=&quot;5461&quot; id=&quot;5461&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;The final benefit that monorepo proponents typically tout is the fact that when all code is in a single repository, it makes code refactors much easier, due to ease of searching and the idea that a single atomic commit can span the entire codebase. This is a fallacy for multiple reasons:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;c5b5&quot; id=&quot;c5b5&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;As described above, at scale, a developer will not be able to easily edit or search the entirety of the codebase on their local machine. Thus, the idea that one can clone all of the code and simply do a grep/replace is not trivial in practice.&lt;/li&gt;
&lt;li name=&quot;220b&quot; id=&quot;220b&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;If we assume that via a sophisticated VFS a developer can clone and edit the entire codebase, the next question is how often does that actually happen? I’m not talking about fixing a bug in an implementation of a shared library, as this type of fix is identically carried out whether using a monorepo or polyrepo (assuming similar build/deploy tooling as described in the previous section). I’m talking about a library API change that has follow-on build breakage effects for other code. In very large code bases, &lt;em class=&quot;markup--em markup--li-em&quot;&gt;it is likely impossible to make a change to a fundamental API and get it code reviewed by every affected team before merge conflicts force the process to start over again&lt;/em&gt;. Developers are faced with two realistic choices. First, they can give up, and work around the API issue (this happens more often than we would like to admit). Second, they can deprecate the existing API, implement a new API, and then go through the laborious process of individual deprecation changes throughout the codebase. Either way, &lt;em class=&quot;markup--em markup--li-em&quot;&gt;this is exactly the same process undertaken in a polyrepo&lt;/em&gt;.&lt;/li&gt;
&lt;li name=&quot;7d7e&quot; id=&quot;7d7e&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;In a service oriented world, applications are now composed of many loosely coupled services that interact with each other using some type of well specified API. Larger organizations inevitably migrate to an IDL such as Thrift or &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot; data-href=&quot;https://developers.google.com/protocol-buffers/&quot; class=&quot;markup--anchor markup--li-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;Protobuf&lt;/a&gt; that allow for type-safe APIs and backwards compatible changes. As described in the previous section on build/deploy management, &lt;em class=&quot;markup--em markup--li-em&quot;&gt;code is not deployed at the same time&lt;/em&gt;. It might be deployed over a period of hours, days, or months. Thus, modern developers &lt;em class=&quot;markup--em markup--li-em&quot;&gt;must&lt;/em&gt; think about backwards compatibility in the wild. This is a simple reality of modern application development that many developers would like to ignore but cannot. Thus, when it comes to services, versus library APIs, developers must use one of the two options described above (give up on changing an API or go through a deprecation cycle), and &lt;em class=&quot;markup--em markup--li-em&quot;&gt;this is no different whether using a monorepo or polyrepo&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;7722&quot; id=&quot;7722&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;In terms of actually making refactor changes across large codebases, many organizations end up developing automated refactor tooling such as &lt;a href=&quot;https://github.com/facebookincubator/fastmod&quot; data-href=&quot;https://github.com/facebookincubator/fastmod&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;fastmod&lt;/a&gt;, recently released by Facebook. As elsewhere, a tool such as this can trivially operate within a single repository or across multiple repositories. Lyft has a tool internally called “refactorator” which does just this. It works like fastmod but automates making changes across our polyrepo, including opening PRs, tracking review status, etc.&lt;/p&gt;
&lt;h3 name=&quot;8d93&quot; id=&quot;8d93&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Unique monorepo downsides&lt;/h3&gt;
&lt;p name=&quot;49fe&quot; id=&quot;49fe&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;In the previous section I laid out all of the theoretical benefits that a monorepo provides, and explained why in order to realize them, extraordinarily complex tooling must be developed that is no different to what is required for a polyrepo. In this section, I’m going to cover two unique downsides to monorepos.&lt;/p&gt;
&lt;h4 name=&quot;6962&quot; id=&quot;6962&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Downside 1: Tight coupling and OSS&lt;/h4&gt;
&lt;p name=&quot;3d66&quot; id=&quot;3d66&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Organizationally, a monorepo encourages tight coupling and development of brittle software. It gives developers the feeling they can easily fix abstraction mistakes, when they actually cannot in the real world due to the realities of staggered build/deploy and the human/organizational/cultural factors inherent in asking developers to make changes across the entire codebase.&lt;/p&gt;
&lt;p name=&quot;68fd&quot; id=&quot;68fd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Polyrepo code layout offers clear team/project/abstraction/ownership boundaries and encourages developers to think carefully about contracts. This is a subtle yet hugely important benefit: it imbues an organization’s developers with a more scalable and long-term way of thinking. Furthermore, the use of a polyrepo does &lt;em class=&quot;markup--em markup--p-em&quot;&gt;not&lt;/em&gt; mean that developers cannot reach across repository boundaries. Whether this happens or not is a function of the engineering culture in place versus whether the organization uses a monorepo or polyrepo.&lt;/p&gt;
&lt;p name=&quot;102d&quot; id=&quot;102d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Tight coupling also has substantial implications with regard to open source. If an organization wishes to create or easily consume OSS, using a polyrepo is required. The contortions that large monorepo organizations undertake (reverse import/export, private/public issue tracking, shim layers to abstract standard library differences, etc.) are not conducive to productive OSS collaboration and community building, and also create substantial overhead for engineers within the organization.&lt;/p&gt;
&lt;h4 name=&quot;8c8c&quot; id=&quot;8c8c&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Downside 2: VCS scalability&lt;/h4&gt;

&lt;p name=&quot;09ca&quot; id=&quot;09ca&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Scaling a single VCS to hundreds of developers, hundreds of millions lines of code, and a rapid rate of submissions is a monumental task. Twitter’s monorepo roll-out about 5 years ago (based on git) was one of the biggest software engineering boondoggles I have ever witnessed in my career. Running simple commands such as &lt;code class=&quot;markup--code markup--p-code&quot;&gt;git status&lt;/code&gt; would take &lt;em class=&quot;markup--em markup--p-em&quot;&gt;minutes.&lt;/em&gt; If an individual clone got too far behind, it took &lt;em class=&quot;markup--em markup--p-em&quot;&gt;hours&lt;/em&gt; to catch up (for a time there was even a practice of shipping hard drives to remote employees with a recent clone to start out with). I bring this up not specifically to make fun of Twitter engineering, but to illustrate how hard this problem is. I’m told that 5 years later, the performance of Twitter’s monorepo is still not what the developer tooling team there would like, and not for lack of trying.&lt;/p&gt;
&lt;p name=&quot;481b&quot; id=&quot;481b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Of course, the past 5 years has also seen development in this area. &lt;a href=&quot;https://github.com/Microsoft/VFSForGit&quot; data-href=&quot;https://github.com/Microsoft/VFSForGit&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Microsoft’s git VFS&lt;/a&gt; which is used internally to develop Windows, has tackled creating a real VFS for git, as I described above, as a requirement for monorepo scalability (and with Microsoft’s acquisition of GitHub it seems likely this level of git scalability will find its way into GitHub’s enterprise offerings). And, of course, Google and Facebook continue to invest tremendous resources into their internal systems to keep them running, although none of this work is publicly available.&lt;/p&gt;
&lt;p name=&quot;9a4e&quot; id=&quot;9a4e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;However, why bother solving the VCS scalability problem at all when, as described in the previous section, tooling will also need to be built that is identical to what is required for a polyrepo?&lt;/em&gt; There is no good reason.&lt;/p&gt;
&lt;h3 name=&quot;4618&quot; id=&quot;4618&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p name=&quot;b353&quot; id=&quot;b353&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;As is often the case in software engineering, we tend to look at tech’s most successful companies for guidance on best practices, without understanding the monumental engineering that has gone into making those companies successful at scale. Monorepos, in my opinion, are an egregious example of this. Google, Facebook, and Twitter have invested extensively in their code storage systems, only to wind up with a solution that is &lt;em class=&quot;markup--em markup--p-em&quot;&gt;no different from what is required when using a polyrepo, yet leads to tight coupling and requires a substantial investment in VCS scalability&lt;/em&gt;.&lt;/p&gt;
&lt;p name=&quot;74d3&quot; id=&quot;74d3&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;The frank reality is that, at scale, how well an organization does with code sharing, collaboration, tight coupling, etc. &lt;em class=&quot;markup--em markup--p-em&quot;&gt;is a direct result of engineering culture and leadership, and has nothing to do with whether a monorepo or a polyrepo is used.&lt;/em&gt; The two solutions end up looking identical to the developer. In the face of this, why use a monorepo in the first place? Please don’t!&lt;/p&gt;
</description>
<pubDate>Wed, 02 Jan 2019 18:57:37 +0000</pubDate>
<dc:creator>Artemis2</dc:creator>
<og:title>Monorepos: Please don’t! – Matt Klein – Medium</og:title>
<og:url>https://medium.com/@mattklein123/monorepos-please-dont-e9a279be011b</og:url>
<og:description>Here we are at the beginning of 2019 and I’m engaged in yet another discussion on the merits (or lack thereof) of keeping all of an…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@mattklein123/monorepos-please-dont-e9a279be011b</dc:identifier>
</item>
<item>
<title>Thunderbird in 2019</title>
<link>https://blog.mozilla.org/thunderbird/2019/01/thunderbird-in-2019/</link>
<guid isPermaLink="true" >https://blog.mozilla.org/thunderbird/2019/01/thunderbird-in-2019/</guid>
<description>&lt;img width=&quot;160&quot; height=&quot;160&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/thunderbird/files/2018/12/ThunderBirdXmasWeb-160x160.jpg&quot; class=&quot;attachment-thumbnail size-thumbnail wp-post-image&quot; alt=&quot;&quot; title=&quot;&quot; srcset=&quot;https://blog.mozilla.org/thunderbird/files/2018/12/ThunderBirdXmasWeb-160x160.jpg 160w, https://blog.mozilla.org/thunderbird/files/2018/12/ThunderBirdXmasWeb-252x252.jpg 252w, https://blog.mozilla.org/thunderbird/files/2018/12/ThunderBirdXmasWeb-768x768.jpg 768w, https://blog.mozilla.org/thunderbird/files/2018/12/ThunderBirdXmasWeb-600x600.jpg 600w&quot; sizes=&quot;(max-width: 160px) 100vw, 160px&quot;/&gt;&lt;p&gt;From the Thunderbird team we wish you a Happy New Year! Welcome to 2019, and in this blog post we’ll look at what we got accomplished in 2018 and look forward to what we’re going to be working on this year.&lt;/p&gt;&lt;h2&gt;Looking Back on 2018&lt;/h2&gt;
&lt;h3&gt;More Eggs in the Nest&lt;/h3&gt;
&lt;p&gt;Our team grew considerably in 2018, to eight staff working full-time on Thunderbird. At the beginning of this year we are going to be adding as many as six new members to our team. Most of these people with the exception of this author (Ryan Sipes, Community Manager) are engineers who will be focused on making Thunderbird more stable, faster, and easier to use (more on this below).&lt;/p&gt;
&lt;p&gt;The primary reason we’ve been able to do this is an increase in donors to the project. We hope that anyone reading this will consider &lt;a href=&quot;https://donate.mozilla.org/thunderbird?utm_source=tb_blog&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tb_2019_post&quot;&gt;giving to Thunderbird&lt;/a&gt; as well. Donations from individual contributors are our primary source of funding, and we greatly appreciate all our supporters who made this year so successful!&lt;/p&gt;
&lt;h3&gt;Thunderbird 60&lt;/h3&gt;
&lt;p&gt;We released the latest ESR, Thunderbird 60 – which saw many improvements in security, stability, and the app’s interface. Beyond big upgrades to core Thunderbird, Thunderbird’s calendar saw many improvements as well.&lt;/p&gt;
&lt;p&gt;For the team this was also a big learning opportunity. We heard from users who upgraded and loved the improvements, and we heard from users who encountered issues with legacy add-ons or other changes that they hurt their workflow.&lt;/p&gt;
&lt;p&gt;We listened, and will continue to listen. We’re going to build upon what made Thunderbird 60 a success, and work to address the concerns of those users who experienced issues with the update. Hiring more staff (as mentioned above) will go a long way to having the manpower needed to build even better releases going forward.&lt;/p&gt;
&lt;h3&gt;A Growing Community&lt;/h3&gt;
&lt;p&gt;Early in the year, a couple of members of the Thunderbird team visited FOSDEM – from then on we worked hard to ensure our users and contributors that Thunderbird was spreading its wings and flying high again.&lt;/p&gt;
&lt;p&gt;That work was rewarded when folks came to help us out. The folks at Ura Design worked on us on a few initiatives, including a &lt;a href=&quot;https://ura.design/2018/07/05/thunderbird-style-guide.html?utm_source=tb_blog&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tb_2019_post&quot;&gt;style guide and user testing&lt;/a&gt;. They’ve also joined us in working on a new UX team, which we very much expect to grow with a dedicated UX designer/developer on staff in the new year. If you are interested in contributing or following along, you can join the &lt;a href=&quot;https://thunderbird.topicbox.com/groups/ux?subscription_form=8c2eaa9a-c0eb-11e8-bb0b-59b48f05e7cf&quot;&gt;UX team mailing list here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We heard from many users who were excited at the new energy that’s been injected into Thunderbird. I received many Emails detailing what our userbase loved about Thunderbird 60 and what they’d like to see in future releases. Some even said they’d like to get involved, so we &lt;a href=&quot;https://www.thunderbird.net/get-involved/?utm_source=tb_blog&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tb_2019_post&quot;&gt;made a page&lt;/a&gt; with information on how to do that.&lt;/p&gt;
&lt;p&gt;We still have some areas to improve on this year, with one of them being onboarding core contributors. Thunderbird is a big, complex project that isn’t easy to jump into. So, as we closed out the year &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1513652&quot;&gt;I opened a bug&lt;/a&gt; where we can detail what documentation needs to be created or updated for new members of the community – to ensure they can dive into the project.&lt;/p&gt;
&lt;h2&gt;Plans for 2019&lt;/h2&gt;
&lt;p&gt;So here we are, in 2019. Looking into the future, this year looks bright for the Thunderbird project. As I pointed out earlier in this post, we start the new year with the hiring of some new staff to the Thunderbird team. Which will put us at as many as 14 full-time members on our staff. This opens up a world of possibilities for what we are able to accomplish, some of those goals I will detail now.&lt;/p&gt;
&lt;h3&gt;Making Thunderbird Fly Faster&lt;/h3&gt;
&lt;p&gt;Our hires are already addressing technical debt and doing a fair bit of plumbing when it comes to Thunderbird’s codebase. Our new hires will also be addressing UI-slowness and general performance issues across the application.&lt;/p&gt;
&lt;p&gt;This is an area where I think we will see some of the best improvements in Thunderbird for 2019, as we look into methods for testing and measuring slowness – and then put our engineers on architecting solutions to these pain points. Beyond that, we will be looking into leveraging new, faster technologies in rewriting parts of Thunderbird as well as working toward a multi-process Thunderbird.&lt;/p&gt;
&lt;h3&gt;A More Beautiful (and Useable) Thunderbird&lt;/h3&gt;
&lt;p&gt;We have received considerable feedback asking for UX/UI improvements and, as teased above, we will work on this in 2019. With the addition of new developers we will see some focus on improving the experience for our users across the board in Thunderbird.&lt;/p&gt;
&lt;p&gt;For instance, one area of useability that we are planning on addresssing in 2019 is integration improvements in various areas. One of those in better GMail support, as one of the biggest Email providers it makes sense to focus some resources on this area. We are looking at addressing GMail label support and ensuring that other features specific to the GMail experience translate well into Thunderbird.&lt;/p&gt;
&lt;p&gt;We are looking at improving notifications in Thunderbird, by better integrating with each operating system’s built-in notification system. By working on this feature Thunderbird will feel more “native” on each desktop and will make managing notifications from the app easier.&lt;/p&gt;
&lt;p&gt;The UX/UI around encryption and settings will get an overhaul in the coming year, whether or not all this work makes it into the next release is an open question – but as we grow our team this will be a focus. It is our hope to make encrypting Email and ensuring your private communication &lt;strong&gt;easier&lt;/strong&gt; in upcoming releases, we’ve even hired an engineer who will be focused primarily on security and privacy. Beyond that, Thunderbird can do a lot so we’ll be looking into improving the experience around settings so that it is easier to find and manage what you’re looking for.&lt;/p&gt;
&lt;h3&gt;So Much More&lt;/h3&gt;
&lt;p&gt;There are a still a few things to work out for a 2019 roadmap. But if you’d like to see a technical overview of our plans, take a look at &lt;a href=&quot;http://lists.thunderbird.net/pipermail/maildev_lists.thunderbird.net/2018-October/001317.html&quot;&gt;this post&lt;/a&gt; on the Thunderbird mailing list.&lt;/p&gt;
&lt;h3&gt;Support Thunderbird&lt;/h3&gt;
&lt;p&gt;If you are excited about the direction that Thunderbird is headed and would like to support the project, please consider &lt;a href=&quot;https://donate.mozilla.org/thunderbird?utm_source=tb_blog&amp;amp;utm_medium=blog&amp;amp;utm_campaign=tb_2019_post&quot;&gt;becoming a donor&lt;/a&gt; to the project. We even have a newsletter that donors receive with news and updates about the project (and awesome Thunderbird art). You can even make a recurring monthly gift to Thunderbird, which is much appreciated. It’s the folks that have given of their time or donated that have made 2018 a success, and it’s your support that makes the future look bright for Thunderbird.&lt;/p&gt;




</description>
<pubDate>Wed, 02 Jan 2019 17:06:11 +0000</pubDate>
<dc:creator>richardboegli</dc:creator>
<og:title>Thunderbird in 2019</og:title>
<og:url>https://blog.mozilla.org/thunderbird/2019/01/thunderbird-in-2019/</og:url>
<og:description>From the Thunderbird team we wish you a Happy New Year! Welcome to 2019, and in this blog post we'll look at what we got ...</og:description>
<og:image>https://blog.mozilla.org/thunderbird/files/2018/12/ThunderBirdXmasWeb-252x252.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.mozilla.org/thunderbird/2019/01/thunderbird-in-2019/</dc:identifier>
</item>
<item>
<title>Non-Euclidean Worlds Engine [video]</title>
<link>https://www.youtube.com/watch?v=kEB11PQ9Eo8</link>
<guid isPermaLink="true" >https://www.youtube.com/watch?v=kEB11PQ9Eo8</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.youtube.com/watch?v=kEB11PQ9Eo8&quot;&gt;https://www.youtube.com/watch?v=kEB11PQ9Eo8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=18807278&quot;&gt;https://news.ycombinator.com/item?id=18807278&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 223&lt;/p&gt;
&lt;p&gt;# Comments: 47&lt;/p&gt;
</description>
<pubDate>Wed, 02 Jan 2019 16:23:27 +0000</pubDate>
<dc:creator>garis</dc:creator>
<og:url>https://www.youtube.com/watch?v=kEB11PQ9Eo8</og:url>
<og:title>Non-Euclidean Worlds Engine</og:title>
<og:image>https://i.ytimg.com/vi/kEB11PQ9Eo8/hqdefault.jpg</og:image>
<og:description>Here's a demo of a rendering engine I've been working on that allows for non-euclidean geometry. Source Code and Executable: https://github.com/HackerPoet/No...</og:description>
<og:type>video.other</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.youtube.com/watch?v=kEB11PQ9Eo8</dc:identifier>
</item>
</channel>
</rss>