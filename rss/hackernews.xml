<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Human speech may have a universal transmission rate: 39 bits per second</title>
<link>https://www.sciencemag.org/news/2019/09/human-speech-may-have-universal-transmission-rate-39-bits-second</link>
<guid isPermaLink="true" >https://www.sciencemag.org/news/2019/09/human-speech-may-have-universal-transmission-rate-39-bits-second</guid>
<description>&lt;div class=&quot;entity entity-paragraphs-item paragraphs-item-image&quot;&gt;
&lt;div class=&quot;figure__head&quot;&gt;&lt;img sizes=&quot;&quot; src=&quot;https://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/language_1280p.jpg?itok=CABoF3-d&quot; srcset=&quot;https://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/language_1280p.jpg?itok=CABoF3-d 1w, https://www.sciencemag.org/sites/default/files/styles/inline__699w__no_aspect/public/language_1280p.jpg?itok=HvMnk1R6 700w&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;caption&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;caption__text&quot; readability=&quot;33&quot;&gt;
&lt;p&gt;A new study of 17 languages—including Vietnamese—suggests humans have a set rate of information transfer in speech.&lt;/p&gt;
&lt;/div&gt;
&lt;span class=&quot;credit&quot;&gt;M2020/shutterstock.com&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;header class=&quot;article__header article__header--inline&quot; readability=&quot;24.675438596491&quot;&gt;
&lt;p class=&quot;byline byline--article&quot;&gt;By &lt;a href=&quot;https://www.sciencemag.org/author/catherine-matacic&quot;&gt;Catherine Matacic&lt;/a&gt;&lt;time&gt;Sep. 4, 2019 , 3:35 PM&lt;/time&gt;&lt;/p&gt;
&lt;/header&gt;&lt;p&gt;Italians are some of the fastest speakers on the planet, chattering at up to nine syllables per second. Many Germans, on the other hand, are slow enunciators, delivering five to six syllables in the same amount of time. Yet in any given minute, Italians and Germans convey roughly the same amount of information, according to a new study. Indeed, no matter how fast or slowly languages are spoken, they tend to transmit information at about the same rate: 39 bits per second, about twice the speed of Morse code.&lt;/p&gt;
&lt;p&gt;“This is pretty solid stuff,” says Bart de Boer, an evolutionary linguist who studies speech production at the Free University of Brussels, but was not involved in the work. Language lovers have long suspected that information-heavy languages—those that pack more information about tense, gender, and speaker into smaller units, for example—move slowly to make up for their density of information, he says, whereas information-light languages such as Italian can gallop along at a much faster pace. But until now, no one had the data to prove it.&lt;/p&gt;
&lt;p&gt;Scientists started with written texts from 17 languages, including English, Italian, Japanese, and Vietnamese. They calculated the information density of each language in bits—the same unit that describes how quickly your cellphone, laptop, or computer modem transmits information. They found that Japanese, which has only 643 syllables, had an information density of about 5 bits per syllable, whereas English, with its 6949 syllables, had a density of just over 7 bits per syllable. Vietnamese, with its complex system of six tones (each of which can further differentiate a syllable), topped the charts at 8 bits per syllable.&lt;/p&gt;
&lt;p&gt;Next, the researchers spent 3 years recruiting and recording 10 speakers—five men and five women—from 14 of their 17 languages. (They used previous recordings for the other three languages.) Each participant read aloud 15 identical passages that had been translated into their mother tongue. After noting how long the speakers took to get through their readings, the researchers calculated an average speech rate per language, measured in syllables/second.&lt;/p&gt;
&lt;p&gt;Some languages were clearly faster than others: no surprise there. But when the researchers took their final step—multiplying this rate by the bit rate to find out how much information moved per second—they were shocked by the consistency of their results. No matter how fast or slow, how simple or complex, &lt;a href=&quot;https://advances.sciencemag.org/content/5/9/eaaw2594&quot;&gt;each language gravitated toward an average rate of 39.15 bits per second&lt;/a&gt;, they report today in &lt;cite&gt;Science Advances&lt;/cite&gt;. In comparison, the world’s first computer modem (which came out in 1959) had a transfer rate of 110 bits per second, and the average home internet connection today has a transfer rate of 100 megabits per second (or 100 million bits).&lt;/p&gt;
&lt;p&gt;“Sometimes interesting facts or rules are hidden in plain sight,” says study co-author François Pellegrino, an evolutionary linguist at the CNRS-sponsored Dynamique Du Langage Laboratory at the University of Lyon in France. Because language science has focused so long on things like grammatical complexity, he says, this information transfer rate has been overlooked. The “crystal clear conclusion,” he adds, is that although languages differ widely in their encoding strategies, no one language is more efficient than another at delivering information.&lt;/p&gt;
&lt;p&gt;But the “why” is another question entirely. Pellegrino and his colleagues suspect that the answer has everything to do with the limits imposed by our fragile biology—how much information our brains can take in—or produce—at any one time. Research in neuroscience supports that idea, with one recent paper suggesting an upper bound to auditory processing of &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3434440/&quot;&gt;9 syllables per second in U.S. English&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;De Boer agrees that our brains are the bottleneck. But, he says, instead of being limited by how quickly we can process information by listening, we’re likely limited by how quickly we can gather our thoughts. That’s because, he says, the average person can listen to audio recordings sped up to about 120%—and still have no problems with comprehension. “It really seems that the bottleneck is in putting the ideas together.”&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 19:54:14 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<og:type>article</og:type>
<og:url>https://www.sciencemag.org/news/2019/09/human-speech-may-have-universal-transmission-rate-39-bits-second</og:url>
<og:title>Human speech may have a universal transmission rate: 39 bits per second</og:title>
<og:description>No matter how quickly you speak, you still share the same amount of information</og:description>
<og:image>https://www.sciencemag.org/sites/default/files/styles/article_main_large/public/language_1280p.jpg?itok=DmEzq0fa</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sciencemag.org/news/2019/09/human-speech-may-have-universal-transmission-rate-39-bits-second</dc:identifier>
</item>
<item>
<title>A database of Facebook users’ phone numbers found online</title>
<link>https://techcrunch.com/2019/09/04/facebook-phone-numbers-exposed/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/09/04/facebook-phone-numbers-exposed/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Hundreds of millions of phone numbers linked to &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/facebook&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;facebook&quot;&gt;Facebook&lt;/a&gt; accounts have been found online.&lt;/p&gt;
&lt;p&gt;The exposed server contained more than 419 million records over several databases on users across geographies, including 133 million records on U.S.-based Facebook users, 18 million records of users in the U.K., and another with more than 50 million records on users in Vietnam.&lt;/p&gt;
&lt;p&gt;But because the server wasn’t protected with a password, anyone could find and access the database.&lt;/p&gt;
&lt;p&gt;Each record contained a user’s unique Facebook ID and the phone number listed on the account. A user’s Facebook ID is typically a long, unique and public number associated with their account, which can be easily used to discern an account’s username.&lt;/p&gt;
&lt;p&gt;But phone numbers have not been public in &lt;a href=&quot;https://newsroom.fb.com/news/2018/04/restricting-data-access/&quot;&gt;more than a year&lt;/a&gt; since Facebook restricted access to users’ phone numbers.&lt;/p&gt;
&lt;p&gt;TechCrunch verified a number of records in the database by matching a known Facebook user’s phone number against their listed Facebook ID. We also checked other records by matching phone numbers against Facebook’s own password reset feature, which can be used to partially reveal a user’s phone number linked to their account.&lt;/p&gt;
&lt;p&gt;Some of the records also had the user’s name, gender and location by country.&lt;/p&gt;
&lt;div id=&quot;attachment_1876916&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-1876916&quot; class=&quot;breakout wp-image-1876916&quot; title=&quot;fb-3&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg&quot; alt=&quot;fb 3 2&quot; width=&quot;900&quot; height=&quot;662&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg 1370w, https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg?resize=150,110 150w, https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg?resize=300,221 300w, https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg?resize=768,565 768w, https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg?resize=680,500 680w, https://techcrunch.com/wp-content/uploads/2019/09/fb-3-2.jpg?resize=50,37 50w&quot; sizes=&quot;(max-width: 900px) 100vw, 900px&quot;/&gt;&lt;p id=&quot;caption-attachment-1876916&quot; class=&quot;wp-caption-text&quot;&gt;A redacted set of records from the U.K. database. The “44” indicates +44, the U.K.’s country code and the “7” indicates a cell phone number.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is the latest security lapse involving Facebook data after a string of incidents since the Cambridge Analytica scandal, which saw &lt;a href=&quot;https://techcrunch.com/2019/07/25/facebook-ignored-staff-warnings-about-sketchy-cambridge-analytica-in-september-2015/&quot;&gt;more than 80 million profiles scraped&lt;/a&gt; to help identify swing voters in the 2016 U.S. presidential election.&lt;/p&gt;
&lt;p&gt;Since then the company has seen several high-profile scraping incidents, including at Instagram, which recently admitted to having &lt;a href=&quot;https://www.businessinsider.com/facebook-review-all-marketing-partners-instagram-data-scraping-2019-8&quot;&gt;profile data scraped&lt;/a&gt; in bulk.&lt;/p&gt;
&lt;p&gt;This latest incident exposed millions of users’ phone numbers just from their Facebook IDs, putting them at risk of &lt;a href=&quot;https://techcrunch.com/2019/04/10/cybersecurity-101-robocalls/&quot;&gt;spam calls&lt;/a&gt; and &lt;a href=&quot;https://techcrunch.com/2019/08/30/someone-hacked-jack-dorseys-own-twitter-account/&quot;&gt;SIM-swapping attacks&lt;/a&gt;, which relies on tricking cell carriers into giving a person’s phone number to an attacker. With someone else’s phone number, an attacker can force-reset the password on any internet account associated with that number.&lt;/p&gt;
&lt;p&gt;Sanyam Jain, a security researcher and member of the GDI Foundation, found the database and contacted TechCrunch after he was unable to find the owner. After a review of the data, neither could we. But after we contacted the web host, the database was pulled offline.&lt;/p&gt;
&lt;p&gt;Jain said he found profiles with phone numbers associated with several celebrities.&lt;/p&gt;
&lt;p&gt;Facebook spokesperson Jay Nancarrow said the data had been scraped before Facebook cut off access to user phone numbers.&lt;/p&gt;
&lt;p&gt;“This data set is old and appears to have information obtained before we made changes last year to remove people’s ability to find others using their phone numbers,” the spokesperson said. “The data set has been taken down and we have seen no evidence that Facebook accounts were compromised.”&lt;/p&gt;
&lt;p&gt;But questions remain as to exactly who scraped the data, when it was scraped from Facebook and why.&lt;/p&gt;
&lt;p&gt;Facebook has &lt;a href=&quot;https://www.theguardian.com/technology/2011/jan/18/facebook-privacy-data&quot;&gt;long restricted developers&lt;/a&gt;‘ access to user phone numbers. The company also made it &lt;a href=&quot;https://newsroom.fb.com/news/2018/04/restricting-data-access/&quot;&gt;more difficult&lt;/a&gt; to search for friends’ phone numbers. But the data appeared to be loaded into the exposed database at the end of last month — though that doesn’t necessarily mean the data is new.&lt;/p&gt;
&lt;p&gt;This latest data exposure is the most recent example of data stored online and publicly without a password. Although often tied to human error rather than a malicious breach, data exposures nevertheless represent an emerging security problem.&lt;/p&gt;
&lt;p&gt;In recent months, financial giant First American left &lt;a href=&quot;https://techcrunch.com/2019/05/24/first-american-millions-sensitive-records/&quot;&gt;data exposed&lt;/a&gt;, as did &lt;a href=&quot;https://techcrunch.com/2019/08/20/moviepass-thousands-data-exposed-leak/&quot;&gt;MoviePass&lt;/a&gt; and &lt;a href=&quot;https://techcrunch.com/2019/08/06/democratic-senate-millions-emails/&quot;&gt;the Senate Democrats&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://medium.com/@zackwhittaker/how-to-contact-me-securely-38dc5c5bc756&quot;&gt;Got a tip?&lt;/a&gt; You can send tips securely over Signal and WhatsApp to +1 646-755–8849. You can also send PGP email with the fingerprint: 4D0E 92F2 E36A EC51 DAAE 5D97 CB8C 15FA EB6C EEA5.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 19:29:20 +0000</pubDate>
<dc:creator>bifrost</dc:creator>
<og:title>A huge database of Facebook users’ phone numbers found online – TechCrunch</og:title>
<og:description>Hundreds of millions of phone numbers linked to Facebook accounts have been found online. The exposed server contained more than 419 million records over several databases on users across geographies, including 133 million records on U.S.-based Facebook users, 18 million records of users in the U.K…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/09/gettyimages-487867268.jpg?w=618</og:image>
<og:url>http://social.techcrunch.com/2019/09/04/facebook-phone-numbers-exposed/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/09/04/facebook-phone-numbers-exposed/</dc:identifier>
</item>
<item>
<title>WeWork CEO gives back $5.9M from &amp;#039;We&amp;#039; trademark after criticism</title>
<link>https://www.businessinsider.com/wework-ceo-gives-back-millions-from-we-trademark-after-criticism-2019-9</link>
<guid isPermaLink="true" >https://www.businessinsider.com/wework-ceo-gives-back-millions-from-we-trademark-after-criticism-2019-9</guid>
<description>&lt;p class=&quot;&quot;&gt;When WeWork filed to go public this summer, we learned an incredible detail about its cofounder Adam Neumann: He was paid a whopping $5.9 million by the company he runs for use of the word &quot;we.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The logic was laid out as such: Ahead of its initial-public-offering filing, WeWork reorganized and rebranded as The We Company. To rebrand itself around the word &quot;We,&quot; the company paid its own CEO nearly $6 million for trademark rights.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The transaction was handled through a private company that Neumann is a managing member of, We Holdings LLC, which owned the trademark rights to the word &quot;we.&quot; Moreover, WeWork characterized the nearly $6 million payment as &quot;fair market value.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-only&quot;&gt;&lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;&lt;a href=&quot;https://www.we.co/&quot;&gt;The We Company&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;In his analysis of the company following its IPO filing, &lt;a href=&quot;https://www.profgalloway.com/wewtf&quot;&gt;the New York University marketing professor Scott Galloway characterized the situation&lt;/a&gt; as such:&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;&quot;Adam also owned the rights to the 'We' trademark, which the firm decided they must own and paid the founder/CEO $5.9 million for the rights. The rights to a name nearly identical to the name of the firm where he's the founder/CEO and largest shareholder. YOU. CAN'T. MAKE. THIS. S---. UP.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;em class=&quot;&quot;&gt;&lt;strong class=&quot;&quot;&gt;Read more:&lt;/strong&gt; &lt;a href=&quot;https://www.businessinsider.com/how-wework-paid-adam-neumann-59-million-to-use-the-name-we-2019-8&quot;&gt;How WeWork paid Adam Neumann $5.9 million to use the name 'We'&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;On Wednesday, in a newly filed Securities and Exchange Commission document, WeWork walked back that arrangement.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&quot;The issuance to We Holdings LLC of the partnership interests was unwound and the partnership interests were returned to the We Company Partnership,&quot; the document said. &quot;The We Company continues to hold all of the assigned rights to the 'we' family trademarks.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-only&quot;&gt;&lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;Michael Kovac/Getty Images for WeWork&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Put more simply: WeWork retrieved the $5.9 million it paid to Neumann and retained the trademark rights to the word &quot;we.&quot;&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;Moreover, the filing said the return of the $5.9 million and retaining of rights was done &quot;at Adam's direction.&quot; Neumann continues to serve as CEO of The We Company.&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 15:46:50 +0000</pubDate>
<dc:creator>cpeterso</dc:creator>
<og:title>WeWork paid its own CEO $5.9 million to use the name 'We,' but now he's giving it back after the deal was criticized</og:title>
<og:description>In what WeWork describes as an &quot;unwinding,&quot; its CEO has agreed to pay back the $5.9 million he was paid for rights to the word &quot;we.&quot;</og:description>
<og:type>article</og:type>
<og:url>https://www.businessinsider.com/wework-ceo-gives-back-millions-from-we-trademark-after-criticism-2019-9</og:url>
<og:image>https://amp.businessinsider.com/images/5d6fb6e02e22af41357e3425-1920-960.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.businessinsider.com/wework-ceo-gives-back-millions-from-we-trademark-after-criticism-2019-9</dc:identifier>
</item>
<item>
<title>Mental-health information &amp;#039;sold to advertisers&amp;#039;</title>
<link>https://www.bbc.co.uk/news/technology-49578500</link>
<guid isPermaLink="true" >https://www.bbc.co.uk/news/technology-49578500</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Woman sitting with head in hands on a park bench&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/ED95/production/_108612806_lonelywoman.gif&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;Sensitive personal information about mental health is routinely being traded to advertisers around the web, a study has suggested.&lt;/p&gt;&lt;p&gt;Privacy International (PI) investigated more than 100 mental health websites in France, Germany and the UK.&lt;/p&gt;&lt;p&gt;It found many shared user data with third parties, including advertisers and large technology companies.&lt;/p&gt;&lt;p&gt;The way information was being sold was &quot;neither transparent nor fair and often lacked a clear legal basis&quot;, it said.&lt;/p&gt;&lt;p&gt;Nearly all the websites investigated had large number of cookies - computer files that download on to a user's device to enable tracking - three-quarters of which were there for marketing or advertising purposes, according to PI.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;'Depression test'&lt;/h2&gt;&lt;p&gt;On average, each mental-health web pages contained:&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;in France, 44 cookies&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;in the UK, 12 cookies&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;in Germany, seven cookies&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Many of the web pages contained cookies that enable targeted advertising from Google, Facebook and Amazon.&lt;/p&gt;&lt;p&gt;And many used Hotjar, a company that provides software that allows everything users type or click on to be logged and played back.&lt;/p&gt;&lt;p&gt;&quot;It is exceedingly difficult for people to seek mental-health information and for example take a 'depression test' without countless third parties watching,&quot; said Frederike Kaltheuner, PI's director of corporate exploitation.&lt;/p&gt;&lt;p&gt;&quot;We visit these sites and reveal so much about ourselves and that should not be used by companies we have never heard of to track you around the internet and use the data in an opaque advertising eco-system.&quot;&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Sensitive data&lt;/h2&gt;&lt;p&gt;The EU's General Data Protection Regulation (GDPR) raised the level of consent required before websites can download cookies on to a user's device. &lt;/p&gt;&lt;p&gt;Its ePrivacy Directive requires users are given clear and comprehensive information about what data is being used and how. &lt;/p&gt;&lt;p&gt;And in the case of particularly sensitive data, such as health information, this consent must be explicit.&lt;/p&gt;&lt;p&gt;But the PI investigation found many cookies were installed on people's devices before any consent had been given.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;Programmatic advertising&lt;/h2&gt;&lt;p&gt;Some websites had no consent form, while those that did ask for consent did so in a very generic way, the report said.&lt;/p&gt;&lt;p&gt;&quot;Most people don't have the time to navigate complicated consent boxes which nudge them towards consent,&quot; said Ms Kaltheuner. &lt;/p&gt;&lt;p&gt;&quot;These sites should not have any more cookies than are strictly needed.&lt;/p&gt;&lt;p&gt;&quot;Users should be able to say that they do not want to be tracked by Google, Facebook and data brokers.&quot;&lt;/p&gt;&lt;p&gt;PI also analysed nine websites that offered visitors quizzes about their mental health.&lt;/p&gt;&lt;p&gt;Three of these had cookies that enabled tracking for programmatic advertising, where hundreds of companies bid in real-time for advertising space, it said.&lt;/p&gt;&lt;p&gt;This was problematic because sensitive information could be broadcast to all of those bidding, PI said. &lt;/p&gt;&lt;p&gt;Programmatic advertising is currently being investigated by the UK's information commissioner.&lt;/p&gt;&lt;p&gt;PI also found Doctissimo.fr sent test answers, together with a unique identifier such as an IP address, to a third party - Player.qualifo.com, which had provided the test form.&lt;/p&gt;
            </description>
<pubDate>Wed, 04 Sep 2019 15:17:08 +0000</pubDate>
<dc:creator>abhi3</dc:creator>
<og:title>Mental-health information 'sold to advertisers'</og:title>
<og:type>article</og:type>
<og:description>Websites offering mental-health tests are selling data to online advertisers, researchers say.</og:description>
<og:url>https://www.bbc.com/news/technology-49578500</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/ED95/production/_108612806_lonelywoman.gif</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.co.uk/news/technology-49578500</dc:identifier>
</item>
<item>
<title>Why Index Funds Are Like Subprime CDOs</title>
<link>https://www.bloomberg.com/news/articles/2019-09-04/michael-burry-explains-why-index-funds-are-like-subprime-cdos</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-09-04/michael-burry-explains-why-index-funds-are-like-subprime-cdos</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-09-04/michael-burry-explains-why-index-funds-are-like-subprime-cdos&quot;&gt;https://www.bloomberg.com/news/articles/2019-09-04/michael-burry-explains-why-index-funds-are-like-subprime-cdos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20877700&quot;&gt;https://news.ycombinator.com/item?id=20877700&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 203&lt;/p&gt;
&lt;p&gt;# Comments: 216&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 14:52:29 +0000</pubDate>
<dc:creator>kgwgk</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=af1d29e0-cf78-11e9-83c6-fbb679f0f0f6&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wOS0wNC9taWNoYWVsLWJ1cnJ5LWV4cGxhaW5zLXdoeS1pbmRleC1mdW5kcy1hcmUtbGlrZS1zdWJwcmltZS1jZG9z</dc:identifier>
</item>
<item>
<title>Google, YouTube to Pay $170M Penalty over Collecting Kids&amp;#039; Personal Info</title>
<link>https://www.npr.org/2019/09/04/757441886/google-youtube-to-pay-170-million-penalty-over-collecting-kids-personal-info</link>
<guid isPermaLink="true" >https://www.npr.org/2019/09/04/757441886/google-youtube-to-pay-170-million-penalty-over-collecting-kids-personal-info</guid>
<description>&lt;div id=&quot;res757447919&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2019/09/04/ap_19242647753886_wide-47a9f661c7700b783c870f04132b6576d8bb88c2-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2019/09/04/ap_19242647753886_wide-47a9f661c7700b783c870f04132b6576d8bb88c2-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;According to a complaint by the Federal Trade Commission, YouTube marketed itself as a top destination for kids in presentations to the makers of popular children's products and brands. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Patrick Semansky/AP&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Patrick Semansky/AP&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2019/09/04/ap_19242647753886_wide-47a9f661c7700b783c870f04132b6576d8bb88c2-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;According to a complaint by the Federal Trade Commission, YouTube marketed itself as a top destination for kids in presentations to the makers of popular children's products and brands.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Patrick Semansky/AP&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Updated at 11:29 a.m. ET&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Google and its YouTube subsidiary will pay $170 million to settle allegations that YouTube collected personal information from children without their parents' consent, the Federal Trade Commission &lt;a href=&quot;https://www.ftc.gov/news-events/press-releases/2019/09/google-youtube-will-pay-record-170-million-alleged-violations&quot;&gt;said Wednesday&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The companies allegedly collected information of children viewing videos on YouTube by tracking users of channels that are directed at kids. YouTube allegedly failed to notify parents or get their consent, violating laws that protect children's privacy, according to &lt;a href=&quot;https://www.ftc.gov/system/files/documents/cases/youtube_complaint.pdf&quot;&gt;a complaint&lt;/a&gt; filed against the companies by the FTC and the New York attorney general.&lt;/p&gt;
&lt;p&gt;YouTube earned millions of dollars by then using this information to target ads to the children, according to the complaint.&lt;/p&gt;
&lt;div id=&quot;res757453201&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage699282111&quot; href=&quot;https://www.npr.org/2019/03/01/699282111/youtube-bans-comments-on-videos-deemed-vulnerable-to-pedophiles&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2019\/03\/01\/699282111\/youtube-bans-comments-on-videos-deemed-vulnerable-to-pedophiles&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2019/03/01/rtx6ntz2_sq-c1158df27924fbbe1aca08e0d858911a85649ec1-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2019/03/01/rtx6ntz2_sq-c1158df27924fbbe1aca08e0d858911a85649ec1-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;YouTube Bans Comments On Videos Deemed Vulnerable To Pedophiles Amid Ad Pullback&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&quot;YouTube touted its popularity with children to prospective corporate clients,&quot; FTC Chairman Joe Simons said in a statement. &quot;Yet when it came to complying with (the children privacy law), the company refused to acknowledge that portions of its platform were clearly directed to kids. There's no excuse for YouTube's violations of the law.&quot;&lt;/p&gt;
&lt;p&gt;According to the complaint, YouTube marketed itself as a top destination for kids in presentations to the makers of popular children's products and brands.&lt;/p&gt;
&lt;p&gt;For example, Google and YouTube told Mattel, maker of Barbie and Monster High toys, that &quot;YouTube is today's leader in reaching children age 6-11 against top TV channels&quot; and told Hasbro, which makes My Little Pony and Play-Doh, that YouTube is the &quot;#1 website regularly visited by kids.&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;div id=&quot;res757454152&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage696430478&quot; href=&quot;https://www.npr.org/2019/02/21/696430478/advocates-ask-ftc-to-investigate-facebook-deception-over-kids-in-game-purchases&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2019\/02\/21\/696430478\/advocates-ask-ftc-to-investigate-facebook-deception-over-kids-in-game-purchases&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2019/02/20/gettyimages-936177628_sq-35aeafdfd2a379d122503799cc9a2f711bd61ced-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2019/02/20/gettyimages-936177628_sq-35aeafdfd2a379d122503799cc9a2f711bd61ced-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Advocates Ask FTC 'To Hold Facebook Accountable' For In-Game Purchases By Kids&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The FTC voted 3-2 to authorize the complaint and the final order in the case.&lt;/p&gt;
&lt;p&gt;In his dissent, FTC Commissioner Rohit Chopra said Google &quot;baited children using nursery rhymes, cartoons, and other kid-directed content on curated YouTube channels to feed its massively profitable behavioral advertising business.&quot;&lt;/p&gt;
&lt;p&gt;He noted that the &quot;terms of the settlement were not even significant enough to make Google issue a warning to its investors.&quot; Chopra said he fears &quot;the Commission brings down the hammer on small firms, while allowing large firms to get off easier.&quot;&lt;/p&gt;
&lt;p&gt;The complaint said the companies' practices violated &lt;a href=&quot;https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/childrens-online-privacy-protection-rule&quot;&gt;the Children's Online Privacy Protection Rule&lt;/a&gt;, known as COPPA, under a 1998 law. Under the settlement, Google and YouTube will pay $136 million to the FTC and $34 million to the state of New York.&lt;/p&gt;
&lt;p&gt;The Campaign for a Commercial-Free Childhood was among several groups that had asked the FTC to investigate whether Google and YouTube violated the children's privacy law. CCFC Executive Director Josh Golin said &lt;a href=&quot;https://www.democraticmedia.org/node/2052&quot;&gt;in a statement&lt;/a&gt; that the group was pleased there will be &quot;considerably less behavioral advertising targeted to children on the number one kids' site in the world.&quot;&lt;/p&gt;
&lt;div id=&quot;res757472953&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage747086462&quot; href=&quot;https://www.npr.org/2019/08/03/747086462/lawmaker-aims-to-curb-social-media-addiction-with-new-bill&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2019\/08\/03\/747086462\/lawmaker-aims-to-curb-social-media-addiction-with-new-bill&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2019/07/31/ap_19121709366841_sq-5f72543b62061acdf24b8a3ebecabf69925c5743-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2019/07/31/ap_19121709366841_sq-5f72543b62061acdf24b8a3ebecabf69925c5743-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Lawmaker Aims To Curb Social Media Addiction With New Bill&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But he added that &quot;it's extremely disappointing that the FTC isn't requiring more substantive changes or doing more to hold Google accountable for harming children through years of illegal data collection.&quot;&lt;/p&gt;
&lt;p&gt;A Google spokeswoman referred NPR to an official YouTube blog post. &lt;a href=&quot;https://youtube.googleblog.com/2019/09/an-update-on-kids.html&quot;&gt;In that post&lt;/a&gt;, YouTube said, &quot;Responsibility is our number one priority at YouTube, and nothing is more important than protecting kids and their privacy.&quot;&lt;/p&gt;
&lt;p&gt;YouTube said that, in about four months, it will begin treating data &quot;from anyone watching children's content on YouTube as coming from a child, regardless of the age of the user&quot; and will stop serving personalized ads on this content and end comments and notifications on it.&lt;/p&gt;
&lt;p&gt;People or companies that post content on YouTube will be required to tell YouTube if their videos represent children's content, YouTube said.&lt;/p&gt;
&lt;p&gt;&quot;In order to identify content made for kids, creators will be required to tell us when their content falls in this category, and we'll also use machine learning to find videos that clearly target young audiences, for example those that have an emphasis on kids characters, themes, toys, or games,&quot; YouTube said.&lt;/p&gt;
&lt;div id=&quot;res757473285&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage506208146&quot; href=&quot;https://www.npr.org/sections/alltechconsidered/2016/12/20/506208146/this-doll-may-be-recording-what-children-say-privacy-groups-charge&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/sections\/alltechconsidered\/2016\/12\/20\/506208146\/this-doll-may-be-recording-what-children-say-privacy-groups-charge&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2016/12/19/img_3809_sq-eb7f95ddedf6e38a8eb5e7e2cb8499067701c518-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2016/12/19/img_3809_sq-eb7f95ddedf6e38a8eb5e7e2cb8499067701c518-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;This Doll May Be Recording What Children Say, Privacy Groups Charge&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The company said the change &quot;will have a significant business impact&quot; on creators of family and children's content and that YouTube will help them in the transition. YouTube said it will set up a $100 million fund &quot;dedicated to the creation of thoughtful, original children's content on YouTube and YouTube Kids globally.&quot;&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://www.ftc.gov/system/files/documents/public_statements/1542922/simons_wilson_google_youtube_statement.pdf&quot;&gt;a separate statement&lt;/a&gt;, Simons and FTC Commissioner Christine Wilson said the settlement will require Google and YouTube to create a system &quot;through which content creators must self-designate if they are child-directed. This obligation exceeds what any third party in the marketplace currently is required to do.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Editor's note:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;Google and YouTube are among NPR's sponsors.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 13:27:12 +0000</pubDate>
<dc:creator>longdefeat</dc:creator>
<og:title>Google, YouTube To Pay $170 Million Penalty Over Collecting Kids' Personal Info</og:title>
<og:url>https://www.npr.org/2019/09/04/757441886/google-youtube-to-pay-170-million-penalty-over-collecting-kids-personal-info</og:url>
<og:type>article</og:type>
<og:description>Google and its YouTube subsidiary are settling allegations that YouTube collected personal information from children without their parents' consent, the Federal Trade Commission said.</og:description>
<og:image>https://media.npr.org/assets/img/2019/09/04/ap_19242647753886_wide-47a9f661c7700b783c870f04132b6576d8bb88c2.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2019/09/04/757441886/google-youtube-to-pay-170-million-penalty-over-collecting-kids-personal-info</dc:identifier>
</item>
<item>
<title>Google accused of secretly feeding personal data to advertisers</title>
<link>https://www.irishtimes.com/business/technology/google-accused-of-secretly-feeding-personal-data-to-advertisers-1.4007629</link>
<guid isPermaLink="true" >https://www.irishtimes.com/business/technology/google-accused-of-secretly-feeding-personal-data-to-advertisers-1.4007629</guid>
<description>&lt;p class=&quot;no_name&quot;&gt;&lt;a class=&quot;search&quot; href=&quot;https://www.irishtimes.com/topics/topics-7.1213540?article=true&amp;amp;tag_company=Google&quot;&gt;Google&lt;/a&gt; is secretly using hidden web pages that feed the personal data of its users to advertisers, undermining its own policies and circumventing EU privacy regulations that require consent and transparency, according to one of its smaller rivals.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;New evidence submitted to an investigation by the Data Protection Commissioner, which oversees Google’s European business, accused the US tech company of “exploiting personal data without sufficient control or concern over data protection”.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;The regulator is investigating whether Google uses sensitive data, such as the race, health and political leanings of its users, to target ads. In his evidence, &lt;a class=&quot;search&quot; href=&quot;https://www.irishtimes.com/topics/topics-7.1213540?article=true&amp;amp;tag_person=Johnny+Ryan&quot;&gt;Johnny Ryan&lt;/a&gt;, chief policy officer of the niche web browser Brave, said he had discovered the secret web pages as he tried to monitor how his data were being traded on Google’s advertising exchange, the business formerly known as DoubleClick.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;The exchange, now called Authorized Buyers, is the world’s largest real-time advertising auction house, selling display space on websites across the internet.&lt;/p&gt;
&lt;h4 class=&quot;crosshead&quot;&gt;Identifying tracker&lt;/h4&gt;
&lt;p class=&quot;no_name&quot;&gt;Mr Ryan found that Google had labelled him with an identifying tracker that it fed to third-party companies that logged on to a hidden web page. The page showed no content but had a unique address that linked it to Mr Ryan’s browsing activity.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;Using the tracker from Google, which is based on the user’s location and time of browsing, companies could match their profiles of Mr Ryan and his web-browsing behaviour with profiles from other companies, to target him with ads.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;Mr Ryan found six separate pages pushing out his identifier after a single hour of looking at websites on Google’s Chrome browser. The identifier contained the phrase “google_push” and was sent to at least eight adtech companies.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;“This practice is hidden in two ways: the most basic way is that Google creates a page that the user never sees, it’s blank, has no content, but allows ... third parties to snoop on the user and the user is none the wiser,” said Mr Ryan. “I had no idea this was happening. If I consulted my browser log, I wouldn’t have had an idea either.”&lt;/p&gt;

&lt;h4 class=&quot;crosshead&quot;&gt;Co-operating&lt;/h4&gt;
&lt;p class=&quot;no_name&quot;&gt;A spokesperson for Google said the company had not seen the details of the information sent by Mr Ryan to the regulator and that it was co-operating with investigations in Ireland and the UK into its advertising business. The spokesperson added: “We do not serve personalised ads or send bid requests to bidders without user consent.”&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;By providing potential buyers with such a granular level of targeting, Google could gain a significant competitive advantage over other companies that run advertising auctions, according to marketing executives.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;Mr Ryan’s experiment was reproduced by adtech analyst &lt;a class=&quot;search&quot; href=&quot;https://www.irishtimes.com/topics/topics-7.1213540?article=true&amp;amp;tag_person=Zach+Edwards&quot;&gt;Zach Edwards&lt;/a&gt;, who runs technical consulting firm Victory Medium, after being commissioned by Brave. He recruited hundreds of people to test Google’s behaviours over a month. They found that the identifier was indeed unique and was shared between multiple advertising companies to enhance their targeting abilities.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;Google’s own rules prohibit ad buyers from matching disparate profiles on the same user. On September 5th, 2018, Google announced it would no longer share encrypted cookie IDs in bid requests with buyers in its Authorized Buyers marketplace, “as part of our ongoing commitment to user privacy”. Mr Ryan’s analysis also found that Google continued to share these with ad firms.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;&lt;a class=&quot;search&quot; href=&quot;https://www.irishtimes.com/topics/topics-7.1213540?article=true&amp;amp;tag_person=Ioannis+Kouvakis&quot;&gt;Ioannis Kouvakis&lt;/a&gt;, legal officer at &lt;a class=&quot;search&quot; href=&quot;https://www.irishtimes.com/topics/topics-7.1213540?article=true&amp;amp;tag_company=Privacy&quot;&gt;Privacy&lt;/a&gt; International, said Google had a dominant position in online advertising and that it should let users know what data the tracking identifier is collecting. “Google needs to lead by example,” he added.&lt;/p&gt;
&lt;p class=&quot;no_name&quot;&gt;– Copyright The Financial Times Limited 2019&lt;/p&gt;

</description>
<pubDate>Wed, 04 Sep 2019 13:01:14 +0000</pubDate>
<dc:creator>drocer88</dc:creator>
<og:title>Google accused of secretly feeding personal data to advertisers</og:title>
<og:type>article</og:type>
<og:url>https://www.irishtimes.com/business/technology/google-accused-of-secretly-feeding-personal-data-to-advertisers-1.4007629</og:url>
<og:description>Evidence submitted to Irish regulator accuses tech giant of ‘exploiting personal data’</og:description>
<og:image>https://www.irishtimes.com/image-creator/?id=1.4007622&amp;origw=1440</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.irishtimes.com/business/technology/google-accused-of-secretly-feeding-personal-data-to-advertisers-1.4007629</dc:identifier>
</item>
<item>
<title>Google’s GDPR Workaround</title>
<link>https://brave.com/google-gdpr-workaround/</link>
<guid isPermaLink="true" >https://brave.com/google-gdpr-workaround/</guid>
<description>&lt;div id=&quot;et-boc&quot; class=&quot;et-boc&quot;&gt;
&lt;div class=&quot;et_builder_inner_content et_pb_gutters3&quot;&gt;

&lt;div class=&quot;et_pb_section et_pb_section_1 et_pb_with_background et_section_regular&quot;&gt;
&lt;div class=&quot;et_pb_row et_pb_row_0&quot;&gt;

&lt;div class=&quot;et_pb_column et_pb_column_3_4 et_pb_column_1 et_pb_css_mix_blend_mode_passthrough&quot;&gt;
&lt;div class=&quot;et_pb_module et_pb_text et_pb_text_1 et_pb_bg_layout_light et_pb_text_align_left&quot;&gt;
&lt;div class=&quot;et_pb_text_inner&quot;&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Brave presents new RTB evidence, and has uncovered a mechanism by which Google appears to be circumventing its purported GDPR privacy protections. &lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Google’s DoubleClick/Authorized Buyers &lt;a href=&quot;https://brave.com/dpc-google/&quot;&gt;ad business is already under investigation&lt;/a&gt; by the Irish Data Protection Commission (DPC) for suspected infringement of the GDPR, as a result of a formal complaint by Brave’s Chief Policy &amp;amp; industry Relations Officer, Dr Johnny Ryan.&lt;/p&gt;
&lt;p&gt;The Irish DPC is Google’s primary GDPR regulator. New evidence gathered by Brave gives the Irish DPC concrete proof that Google’s ad system did broadcast personal data about Dr Ryan, which infringed the GDPR. In addition, Brave has uncovered what appears to be a GDPR workaround that circumvents Google’s own publicly stated GDPR data safeguards.&lt;/p&gt;
&lt;p&gt;“&lt;em&gt;Google’s “DoubleClick/Authorized Buyers” ad system is active on 8.4+ million websites. It broadcasts personal data about visitors to these sites to 2,000+ companies, hundreds of billions of times a day”, &lt;/em&gt;said Dr Johnny Ryan of Brave.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The evidence we have submitted to the Irish Data Protection Commission proves that Google leaked my protected data to an unknown number of companies. &lt;/em&gt;&lt;em&gt;One cannot know what these companies then did with it, because Google loses control over my data once it was sent. Its policies are no protection.&lt;/em&gt;”&lt;/p&gt;
&lt;h2&gt;Google’s GDPR workaround&lt;/h2&gt;
&lt;p&gt;The new evidence reveals a surreptitious mechanism that raises additional data protection concerns about Google’s “DoubleClick/Authorized Buyers” advertising system. This system is active on 8.4 million websites.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn1&quot; name=&quot;_ftnref1&quot;&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google claims to prevent the many companies that use its real-time bidding ad (RTB) system, who receive  sensitive data about website visitors, from combining their profiles about those visitors.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn2&quot; name=&quot;_ftnref2&quot;&gt;[2]&lt;/a&gt; It also announced that it had stopped sharing pseudonymous identifiers that could help these companies more easily identify an individual, apparently in response to the advent of the GDPR.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn3&quot; name=&quot;_ftnref3&quot;&gt;[3]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But in fact, Brave’s new evidence reveals that Google allowed not only one additional party, but many, to match with Google identifiers. The evidence further reveals that Google allowed multiple parties to match their identifiers for the data subject with each other.&lt;/p&gt;
&lt;p&gt;Brave commissioned &lt;a href=&quot;https://twitter.com/thezedwards&quot;&gt;Zach Edwards&lt;/a&gt; to analyze a log of Dr Ryan’s web browsing. The analysis confirmed that Dr Ryan’s personal data was broadcast, confirming &lt;a href=&quot;https://brave.com/rtb-evidence/&quot;&gt;the fears laid out in his complaint to the DPC in September 2018&lt;/a&gt;. The analysis also revealed a mechanism, “Push Pages”, through which Google invites multiple companies to share profile identifiers about a person when they load a web page.&lt;/p&gt;
&lt;p&gt;Google Push Pages are served from a Google domain (https://pagead2.googlesyndication.com) and all have the same name, “cookie_push.html”. Each Push Page is made distinctive by a code of almost two thousand characters, which Google adds at the end to uniquely identify the person that Google is sharing information about. This, combined with other cookies supplied by Google, allows companies to pseudonymously identify the person in circumstances where this would not otherwise be possible.&lt;/p&gt;
&lt;p&gt;All companies that Google invites to access a Push Page receive the same identifier for the person being profiled. This “google_push” identifier allows them to cross-reference their profiles of the person, and they can then trade profile data with each other.&lt;/p&gt;
&lt;p&gt;The Push Pages are not shown to the person visiting a web page, and will display no content if accessed directly. &lt;strong&gt;&lt;a href=&quot;https://brave.com/wp-content/uploads/files_2019-9-2/sample_push_page_from_session.txt&quot; data-cke-saved-href=&quot;https://brave.com/wp-content/uploads/files_2019-9-2/sample_push_page_from_session.txt&quot;&gt;You can download a sample Push Page here.&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The evidence includes a network log of all items (including web pages and their component parts, files, etc.) that Dr Ryan’s device was instructed to load by the web sites that he visited. Analysis of the network log shows that the Data Subject’s personal data has been processed in Google’s Authorized Buyers RTB system. It further shows that Google has also facilitated the sharing of personal data about the Data Subject between other companies.&lt;/p&gt;
&lt;p&gt;Push Pages therefore appear to be a workaround of Google’s own stated policies for how RTB should operate under the GDPR.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://brave.com/wp-content/uploads/explanatory_note_google_RTB_and_push_pages.pdf&quot; data-cke-saved-href=&quot;https://brave.com/wp-content/uploads/explanatory_note_google_RTB_and_push_pages.pdf&quot;&gt;Download the explanatory note submitted with the evidence to the Irish Data Protection Commission&lt;/a&gt;&lt;/strong&gt;&lt;a href=&quot;https://brave.com/wp-content/uploads/explanatory_note_google_RTB_and_push_pages.pdf&quot; data-cke-saved-href=&quot;https://brave.com/wp-content/uploads/explanatory_note_google_RTB_and_push_pages.pdf&quot;&gt;.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also &lt;strong&gt;&lt;a href=&quot;https://brave.com/wp-content/uploads/sequence.pdf&quot; data-cke-saved-href=&quot;https://brave.com/wp-content/uploads/sequence.pdf&quot;&gt;download a sequence chart of the RTB and Push Page process here.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“&lt;em&gt;Real-time bidding in its current form is toxic. The speed and scale of the broadcast is incapable of complying with the GDPR’s security principle&lt;/em&gt;”, said Ravi Naik, a data rights solicitor who is acting for Dr Ryan and Brave.&lt;/p&gt;
&lt;p&gt;“&lt;em&gt;Now our client finds seemingly clandestine profile matching by Google. Deceptive and uncontrolled profile matching is the antithesis of the fairness and transparency principles of data protection. Unfortunately, the lawlessness at the heart of AdTech has begat a culture of data exploitation above data protection. The DPC must act fast to put an end to such practices.&lt;/em&gt;”&lt;/p&gt;
&lt;p&gt;Brave’s evidence shows that Google’s Push Page mechanism undermines Google’s purported data protection measures. They are also vulnerable to abuse by other parties. We are aware that companies other than Google have used the Push Page mechanism to establish their own Push Pages to share data with their own business partners. This appears to happen without Google’s knowledge. The loss of control over personal data in Google’s RTB system is again evident, and it is clear that Google’s policies have provided no protection.&lt;/p&gt;
&lt;h2&gt;Brave’s 12 month campaign to put the RTB data breach on the agenda&lt;/h2&gt;
&lt;p&gt;12 months ago, in September 2018, Brave revealed a massive and ongoing data breach in which Google’s and others’ RTB ad systems leak the online habits of billions of Internet users. Now, Brave’s &lt;a href=&quot;https://brave.com/rtb-updates/&quot;&gt;work to reform the multi billion dollar RTB industry&lt;/a&gt; spans sixteen EU countries, in collaboration with privacy NGOs, academics and others. The primary targets of this campaign are Google and the IAB, which control the RTB system.&lt;/p&gt;
&lt;p&gt;Brave’s submissions and expert evidence to regulators have triggered &lt;a href=&quot;https://brave.com/dpc-google/&quot;&gt;a statutory investigation into suspected infringement of the GDPR by Google’s RTB ad system&lt;/a&gt; by the Irish Data Protection Commission, and a &lt;a href=&quot;https://brave.com/ico-adtech-update-rtb/&quot;&gt;report&lt;/a&gt; &lt;a href=&quot;https://brave.com/ico-adtech-update-rtb/&quot;&gt;and warning&lt;/a&gt; from the UK Information Commissioner.&lt;/p&gt;
&lt;p&gt;“&lt;em&gt;Twelve months ago, I first complained to the Irish Data Protection Commission about this&lt;/em&gt;”, said Dr Ryan of Brave. “&lt;em&gt;I hope that the DPC will accelerate its work to stop this enormous and ongoing data breach&lt;/em&gt;”.&lt;/p&gt;
&lt;p&gt;Every time a person visits a website that uses RTB, data about them is broadcast to tens or hundreds of tracking companies, who let advertisers compete for the opportunity to show them an ad. The data can include the category of what they are reading – which can reveal their sexual orientation,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn4&quot; name=&quot;_ftnref4&quot;&gt;[4]&lt;/a&gt; political views,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn5&quot; name=&quot;_ftnref5&quot;&gt;[5]&lt;/a&gt; their religion,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn6&quot; name=&quot;_ftnref6&quot;&gt;[6]&lt;/a&gt; and health conditions including AIDS,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn7&quot; name=&quot;_ftnref7&quot;&gt;[7]&lt;/a&gt; STDs,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn8&quot; name=&quot;_ftnref8&quot;&gt;[8]&lt;/a&gt; and depression.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn9&quot; name=&quot;_ftnref9&quot;&gt;[9]&lt;/a&gt; It includes what the person is reading, watching, and listening to. It includes their location. And it includes unique, pseudonymous ID codes that are specific to that person,&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn10&quot; name=&quot;_ftnref10&quot;&gt;[10]&lt;/a&gt; so that all of this data can be tied to you, continually, over time.&lt;/p&gt;
&lt;p&gt;This allows companies, who the average Internet user has never heard of, to build and trade intimate profiles about them and what makes them tick. This happens hundreds of billions of times a day.&lt;/p&gt;
&lt;p&gt;Google has no control over what happens to these data once broadcast. Its policy requires only that the thousands of companies that Google shares peoples’ sensitive data with monitor their own compliance, and judge for themselves what they should do.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn11&quot; name=&quot;_ftnref11&quot;&gt;[11]&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Key facts&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Google DoubleClick/Authorized Buyers is installed on 8.4+ million websites.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn12&quot; name=&quot;_ftnref12&quot;&gt;[12]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It broadcasts personal data about visitors to these sites to 2,000+ companies, hundreds of billions of times a day.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn13&quot; name=&quot;_ftnref13&quot;&gt;[13]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The data can include people’s locations, inferred religious, sexual, political characteristics, and what they are reading, watching, and listening to online.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn14&quot; name=&quot;_ftnref14&quot;&gt;[14]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There is no control over what happens to the data once broadcast.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn15&quot; name=&quot;_ftnref15&quot;&gt;[15]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This appears to be by far the largest leakage of personal data ever recorded.&lt;/li&gt;
&lt;li&gt;Google’s sole means of protecting RTB data once broadcast is a weak policy that asks the thousands of companies it shares data with to self-regulate.&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftn16&quot; name=&quot;_ftnref16&quot;&gt;[16]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The campaign for GDPR action to fix the Google and IAB real-time bidding system now includes &lt;strong&gt;Brave, the Open Rights Group, Dr Michael Veale of the Turing Institute, the Panoptykon Foundation, Bits of Freedom, Eticas Foundation, Exigo, Dr Jef Ausloos of the University of Amsterdam, Pierre Dewitte of the University of Leuven, Liberties.eu, the Society for Civil Rights, Digitale courage, Digitale Gesellschaft, Netzwerk Datenschutzexpertise, Deutsche Vereinigung für Datenschutz, the Italian Coalition for Civil Rights and Freedoms, the Bulgarian Helsinki Committee, the Association for the Defense of Human Rights in Romania, the Italian Coalition for Civil Rights and Freedoms, the Estonian Human Rights Centre, the Peace Institute&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;What the GDPR says&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;GDPR Article 5, paragraph 1, point f, of the GDPR requires that personal data be tightly controlled:&lt;br/&gt;&lt;blockquote&gt;
&lt;p&gt;“Personal data shall be processed in a manner that ensures appropriate security of the personal data, including protection against unauthorised or unlawful processing and against accidental loss, destruction or damage, using appropriate technical or organisational measures (‘integrity and confidentiality’).”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Article 5, paragraph 1, point a and point b of the GDPR require that individuals be adequately informed about what will happen to their data:&lt;br/&gt;&lt;blockquote&gt;
&lt;p&gt;“Personal data shall be processed lawfully, fairly and in a transparent manner in relation to the data subject (‘lawfulness, fairness and transparency’);”&lt;/p&gt;
&lt;p&gt;“Personal data shall be collected for specified, explicit and legitimate purposes and not further processed in a manner that is incompatible with those purposes; further processing for archiving purposes in the public interest, scientific or historical research purposes or statistical purposes shall, in accordance with Article 89(1), not be considered to be incompatible with the initial purposes (‘purpose limitation’);”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Thank you&lt;/h2&gt;
&lt;p&gt;Thanks to Zach Edwards of MetaX, and to Luke Mulks and Jimmy Secretan at Brave. Special thanks to our colleagues in the campaign to reform RTB: the Open Rights Group, Dr Michael Veale of the Turing Institute, the Panoptykon Foundation, Bits of Freedom, Eticas Foundation, Exigo, Dr Jef Ausloos of the University of Amsterdam, Pierre Dewitte of the University of Leuven, Liberties.eu, the Society for Civil Rights, Digitale courage, Digitale Gesellschaft, Netzwerk Datenschutzexpertise, Deutsche Vereinigung für Datenschutz, the Italian Coalition for Civil Rights and Freedoms, the Bulgarian Helsinki Committee, the Association for the Defense of Human Rights in Romania, the Italian Coalition for Civil Rights and Freedoms, the Estonian Human Rights Centre, the Peace Institute.&lt;/p&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref1&quot; name=&quot;_ftn1&quot;&gt;[1]&lt;/a&gt;  DoubleClick.Net Usage Statistics, BuildWith (URL: &lt;a href=&quot;https://trends.builtwith.com/ads/DoubleClick.Net&quot;&gt;https://trends.builtwith.com/ads/DoubleClick.Net&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref2&quot; name=&quot;_ftn2&quot;&gt;[2]&lt;/a&gt; Google claims to prohibit companies from “joining their match tables” in “Cookie matching”, Authorized Buyers, 25 June 2019 (URL: &lt;a href=&quot;https://developers.google.com/authorized-buyers/rtb/cookie-guide&quot;&gt;https://developers.google.com/authorized-buyers/rtb/cookie-guide&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref3&quot; name=&quot;_ftn3&quot;&gt;[3]&lt;/a&gt; Google announced that it had “removed encrypted cookie IDs” from RTB bid requests, in “Important changes to data transfer”, Google, last updated 5 September 2018 (URL:&lt;a href=&quot;https://support.google.com/dcm/answer/9006418?hl=en&quot;&gt;https://support.google.com/dcm/answer/9006418?hl=en&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref4&quot; name=&quot;_ftn4&quot;&gt;[4]&lt;/a&gt; See for example Google codes 113 “Lesbian, Gay, Bisexual &amp;amp; Transgender”, 1301 “Same-Sex Marriage” in &lt;a href=&quot;https://developers.google.com/authorized-buyers/rtb/downloads/publisher-verticals&quot;&gt;https://developers.google.com/authorized-buyers/rtb/downloads/publisher-verticals&lt;/a&gt;. As referred to in Google’s Authorized Buyers RTB protocol &lt;a href=&quot;https://developers.google.com/authorized-buyers/rtb/realtime-bidding-guide&quot;&gt;https://developers.google.com/authorized-buyers/rtb/realtime-bidding-guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref5&quot; name=&quot;_ftn5&quot;&gt;[5]&lt;/a&gt; See for example Google codes 409 Right-Wing Politics, 410 Left-Wing Politics, in ibid.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref6&quot; name=&quot;_ftn6&quot;&gt;[6]&lt;/a&gt; See for example Google codes 550 “Jewish Culture”, 1124 “Jewish Holidays”, 864 “Christianity”, 1275 “Islamic Holidays” and 868 “Islam”, in ibid.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref7&quot; name=&quot;_ftn7&quot;&gt;[7]&lt;/a&gt; Google code 625 “AIDS &amp;amp; HIV”, in ibid.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref8&quot; name=&quot;_ftn8&quot;&gt;[8]&lt;/a&gt; Google code 421 “Sexually Transmitted Diseases”, in ibid.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref9&quot; name=&quot;_ftn9&quot;&gt;[9]&lt;/a&gt; Google code 640 “Depression”, in ibid.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref10&quot; name=&quot;_ftn10&quot;&gt;[10]&lt;/a&gt; Recital 30 of the GDPR makes clear that “Natural persons may be associated with online identifiers provided by their devices, applications, tools and protocols, such as internet protocol addresses, cookie identifiers or other identifiers such as radio frequency identification tags. This may leave traces which, in particular when combined with unique identifiers and other information received by the servers, may be used to create profiles of the natural persons and identify them.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref11&quot; name=&quot;_ftn11&quot;&gt;[11]&lt;/a&gt; Google asks that companies it sends data to “will regularly monitor your compliance with this obligation and immediately notify Google in writing if Buyer can no longer meet (or if there is a significant risk that Buyer can no longer meet) this obligation, and in such cases Buyer [data recipient] will either cease processing Personal Information or immediately take other reasonable and appropriate steps to remedy the failure to provide an adequate level of protection.” Authorized Buyers Program Guidelines, Google, last updated on 22 August 2018. (&lt;a href=&quot;https://www.google.com/doubleclick/adxbuyer/guidelines.html&quot;&gt;https://www.google.com/doubleclick/adxbuyer/guidelines.html&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref12&quot; name=&quot;_ftn12&quot;&gt;[12]&lt;/a&gt;  DoubleClick.Net Usage Statistics, BuildWith (URL: &lt;a href=&quot;https://trends.builtwith.com/ads/DoubleClick.Net&quot;&gt;https://trends.builtwith.com/ads/DoubleClick.Net&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref13&quot; name=&quot;_ftn13&quot;&gt;[13]&lt;/a&gt; “Ad Exchange Certified External Vendors”, Google Authorized Buyers (URL: &lt;a href=&quot;https://developers.google.com/third-party-ads/adx-vendors&quot;&gt;https://developers.google.com/third-party-ads/adx-vendors&lt;/a&gt;), last updated 18 April 2019, and “Number of bid requests per day”, evidence submitted to the Irish Data Protection Commission, and UK Information Commissioner’s Office, 20 February 2019 (URL: &lt;a href=&quot;https://brave.com/wp-content/uploads/2019/07/Scale-billions-of-bid-requests-per-day-RAN2019061811075588.pdf&quot;&gt;https://brave.com/wp-content/uploads/2019/07/Scale-billions-of-bid-requests-per-day-RAN2019061811075588.pdf&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref14&quot; name=&quot;_ftn14&quot;&gt;[14]&lt;/a&gt; See “Ryan report on behavioral advertising and personal data” (URL: &lt;a href=&quot;https://brave.com/Behavioural-advertising-and-personal-data.pdf&quot;&gt;https://brave.com/Behavioural-advertising-and-personal-data.pdf&lt;/a&gt;) and “Examples of data in a bid request from IAB OpenRTB and Google Authorized Buyers’ specification documents” (URL: &lt;a href=&quot;http://fixad.tech/wp-content/uploads/2019/02/3-bid-request-examples.pdf&quot;&gt;http://fixad.tech/wp-content/uploads/2019/02/3-bid-request-examples.pdf&lt;/a&gt;); and “Google’s publisher verticals list” (URL: &lt;a href=&quot;https://brave.com/update-rtb-ad-auction-gdpr/Google-publisher-verticals-marked-up.pdf&quot;&gt;https://brave.com/update-rtb-ad-auction-gdpr/Google-publisher-verticals-marked-up.pdf&lt;/a&gt;), evidence submitted to the Irish Data Protection Commission, and UK Information Commissioner’s Office, 12 September 2018 and 20 February 2019.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref15&quot; name=&quot;_ftn15&quot;&gt;[15]&lt;/a&gt; “Ryan report on behavioral advertising and personal data”, evidence submitted to the Irish Data Protection Commission, and UK Information Commissioner’s Office, 12 September 2018 (URL: &lt;a href=&quot;https://brave.com/Behavioural-advertising-and-personal-data.pdf&quot;&gt;https://brave.com/Behavioural-advertising-and-personal-data.pdf&lt;/a&gt;); see also “pubvendors.json v1.0”, an IAB document presented in evidence to the Irish Data Protection Commission, and UK Information Commissioner’s Office, 20 February 2019 (URL: &lt;a href=&quot;https://brave.com/wp-content/uploads/2019/02/2-pubvendors.json-v1.0.pdf&quot;&gt;https://brave.com/wp-content/uploads/2019/02/2-pubvendors.json-v1.0.pdf&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brave.com/google-gdpr-workaround/#_ftnref16&quot; name=&quot;_ftn16&quot;&gt;[16]&lt;/a&gt; Authorized Buyers Program Guidelines, Google, last updated on 22 August 2018.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;et_pb_section et_pb_section_2 et_pb_with_background et_section_regular&quot;&gt;
&lt;div class=&quot;et_pb_row et_pb_row_1&quot;&gt;
&lt;div class=&quot;et_pb_column et_pb_column_4_4 et_pb_column_2 et_pb_css_mix_blend_mode_passthrough et-last-child&quot;&gt;

&lt;div class=&quot;et_pb_module et_pb_blog_0 et_pb_blog_grid_wrapper&quot;&gt;
&lt;div class=&quot;et_pb_blog_grid clearfix et_pb_bg_layout_light&quot;&gt;
&lt;div class=&quot;et_pb_ajax_pagination_container&quot;&gt;
&lt;div class=&quot;et_pb_salvattore_content&quot; data-columns=&quot;&quot;&gt;
&lt;article id=&quot;post-21790&quot; class=&quot;et_pb_post clearfix post-21790 post type-post status-publish format-standard has-post-thumbnail hentry category-brave-insights-category category-fix-adtech category-gdpr-category category-policy-category tag-complaint tag-consent tag-data-protection tag-dpc tag-gdpr tag-helen-dixon tag-iab tag-iab-europe tag-irish-data-protection-commission tag-johnny-ryan tag-simon-mcgarr&quot;&gt;&lt;div class=&quot;et_pb_image_container&quot;&gt;&lt;a href=&quot;https://brave.com/johnny-ryan-response-iab-cookie-wall/&quot; class=&quot;entry-featured-image-url&quot;&gt;&lt;img src=&quot;https://brave.com/wp-content/uploads/2019/08/Screenshot-2019-08-13-at-16.04.10-400x250.png&quot; alt=&quot;Response to IAB Europe statement on its failure to answer the Irish Data Protection Commission&quot; width=&quot;400&quot; height=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div class=&quot;post-content&quot;&gt;
&lt;p&gt;Dr Johnny Ryan responds to a statement from IAB Europe regarding its failure to answer the Irish Data Protection Commission. Four months on, both I and the Data Protection Commission are still waiting for the first explanation of how “IAB Europe is confident that the way it obtains consent for the use of cookies on its website complies with the requirements of the law”.&lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;&lt;article id=&quot;post-21750&quot; class=&quot;et_pb_post clearfix post-21750 post type-post status-publish format-standard has-post-thumbnail hentry category-brave-insights-category category-fix-adtech category-gdpr-category category-policy-category tag-complaint tag-consent tag-data-protection tag-dpc tag-gdpr tag-helen-dixon tag-iab tag-iab-europe tag-irish-data-protection-commission tag-johnny-ryan tag-simon-mcgarr&quot;&gt;&lt;div class=&quot;et_pb_image_container&quot;&gt;&lt;a href=&quot;https://brave.com/iab-cookie-wall-refusal-to-answer-dpc/&quot; class=&quot;entry-featured-image-url&quot;&gt;&lt;img src=&quot;https://brave.com/wp-content/uploads/2019/04/Screenshot-2019-04-01-at-17.34.49-400x250.png&quot; alt=&quot;IAB Europe fails to answer Irish Data Protection Commission&quot; width=&quot;400&quot; height=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div class=&quot;post-content&quot;&gt;
&lt;p&gt;IAB Europe fails to answer questions from Irish Data Protection Commission arising from formal GDPR complaint by Brave’s Dr Ryan against IAB Europe’s “forced consent” and consent walls. &lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;&lt;article id=&quot;post-21131&quot; class=&quot;et_pb_post clearfix post-21131 post type-post status-publish format-standard has-post-thumbnail hentry category-brave-insights-category category-fix-adtech category-gdpr-category category-policy-category tag-dcn tag-digital-content-next tag-gdpr tag-google tag-iab tag-jason-kint tag-non-personal-data tag-personal-data tag-rtb tag-united-states&quot;&gt;&lt;div class=&quot;et_pb_image_container&quot;&gt;&lt;a href=&quot;https://brave.com/ico-adtech-update-rtb/&quot; class=&quot;entry-featured-image-url&quot;&gt;&lt;img src=&quot;https://brave.com/wp-content/uploads/2019/06/Screenshot-2019-06-26-at-16.26.37-400x250.png&quot; alt=&quot;A summary of the ICO report on RTB – and what happens next&quot; width=&quot;400&quot; height=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div class=&quot;post-content&quot;&gt;
&lt;p&gt;This note summarizes the ICO report on real-time bidding, which vindicates the GDPR complaints initiated by Brave, and points toward the solution.&lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;et_pb_section et_pb_section_3 et_pb_with_background et_pb_fullwidth_section et_section_regular&quot;&gt;
&lt;section class=&quot;et_pb_with_border et_pb_module et_pb_fullwidth_header et_pb_fullwidth_header_0 brave-the-web-button et_pb_bg_layout_dark et_pb_text_align_center&quot;&gt;&lt;div class=&quot;et_pb_fullwidth_header_container center&quot;&gt;
&lt;div class=&quot;header-content-container center&quot;&gt;
&lt;div class=&quot;header-content&quot;&gt;
&lt;h2 class=&quot;et_pb_module_header&quot;&gt;Ready to Brave the new internet?&lt;/h2&gt;
&lt;span class=&quot;et_pb_fullwidth_header_subhead&quot;&gt;Brave is built by a team of privacy focused, performance oriented pioneers of the web. Help us fix browsing together.&lt;/span&gt;

&lt;a class=&quot;et_pb_button et_pb_more_button et_pb_button_one&quot; href=&quot;https://brave.com/download&quot;&gt;Download Brave&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;/section&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 04 Sep 2019 11:59:36 +0000</pubDate>
<dc:creator>donohoe</dc:creator>
<og:type>article</og:type>
<og:title>Brave uncovers Google’s GDPR workaround</og:title>
<og:description>Brave presents new RTB evidence, and has uncovered a mechanism by which Google appears to be circumventing its purported GDPR privacy protections.</og:description>
<og:image>https://brave.com/wp-content/uploads/2019/09/Screenshot-2019-09-02-at-11.06.32.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://brave.com/google-gdpr-workaround/</dc:identifier>
</item>
<item>
<title>TypeScript vs. ReasonML</title>
<link>https://blog.dubenko.dev/typescript-vs-reason/</link>
<guid isPermaLink="true" >https://blog.dubenko.dev/typescript-vs-reason/</guid>
<description>&lt;p&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://blog.dubenko.dev/static/80e554d24250978a500a6d41c7f4874f/2f382/car.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;A beautiful car&quot; title=&quot;&quot; src=&quot;https://blog.dubenko.dev/static/80e554d24250978a500a6d41c7f4874f/b9e4f/car.png&quot; srcset=&quot;/static/80e554d24250978a500a6d41c7f4874f/cf440/car.png 148w,/static/80e554d24250978a500a6d41c7f4874f/d2d38/car.png 295w,/static/80e554d24250978a500a6d41c7f4874f/b9e4f/car.png 590w,/static/80e554d24250978a500a6d41c7f4874f/f9b6a/car.png 885w,/static/80e554d24250978a500a6d41c7f4874f/2f382/car.png 1162w&quot; sizes=&quot;(max-width: 590px) 100vw, 590px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yes, adding the types works but it this the best way?&lt;/p&gt;
&lt;p&gt;Both TypeScript and ReasonML claim to offer statically typed language for web developers that compiles to JavaScript. But there are important differences. TypeScript’s best and the worst feature is that is a superset of the JavaScript. And while having that familiarity with JavaScript is nice, it means that every quirkiness that we love and hate about JavaScript is still there in TypeScript. The types are added on top of the JavaScript and that works, kind of.&lt;/p&gt;
&lt;p&gt;What ReasonML offers is a completely different yet familiar language. Different language means it will be hard to learn for JavaScript/TypeScript developers? Well, let’s take a look, shall we?&lt;/p&gt;
&lt;h2&gt;Declaring a variable&lt;/h2&gt;
&lt;p&gt;Let’s start from a variable declaration&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In ReasonML we declare a variable with &lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt; keyword. There’s no const, &lt;code class=&quot;language-text&quot;&gt;let&lt;/code&gt; is immutable by default.&lt;/p&gt;
&lt;p&gt;Both languages inferred type of &lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt; in this situation&lt;/p&gt;
&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; b&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sum &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although I didn’t write any types by hand, the arguments of this function are typed. Why don’t we have to write types in ReasonML? Because of the powerful type system that allows for incredible type inference. What it means is that compiler can deduce types without your help. &lt;code class=&quot;language-text&quot;&gt;(+)&lt;/code&gt; operator in ReasonML works only with integers — the only type that &lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;b&lt;/code&gt; can be, so we don’t have to write them.&lt;/p&gt;
&lt;p&gt;But you always can write types, if you want:&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; sum &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Interfaces, Records&lt;/h2&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;
  id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closest thing to interface in ReasonML is a &lt;a href=&quot;https://reasonml.github.io/docs/en/record&quot;&gt;record&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; string&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Records are like TypeScript objects but are immutable, fixed and a bit more rigidly typed.&lt;/p&gt;
&lt;p&gt;Let’s use defined structures in some function&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; formatName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Name: &quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;product&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;formatName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Product&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Name: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Again, we don’t need to annotate types! In this function, we have an argument &lt;code class=&quot;language-text&quot;&gt;product&lt;/code&gt; that has a property &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; of type string. ReasonML compiler can guess the type of that variable based on usage. As the only type that has &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; property of type string is &lt;code class=&quot;language-text&quot;&gt;product&lt;/code&gt; compiler will infer it.&lt;/p&gt;
&lt;h2&gt;Updating records&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; updateName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;updateName&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ReasonML supports spread operator and punning for name and values just like TypeScript&lt;/p&gt;
&lt;p&gt;It is also interesting to look at what javascript was generated by ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-js&quot;&gt;
&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Records in ReasonML are represented as arrays. And generated code looks like a human wrote it if humans could remember indices of every property of every type like a compiler does.&lt;/p&gt;
&lt;h2&gt;Reducer example&lt;/h2&gt;
&lt;p&gt;This is, in my opinion, is where ReasonML really shines. Let’s compare implementations of the same reducer:&lt;/p&gt;
&lt;p&gt;in TypeScript (following this guide &lt;a href=&quot;https://redux.js.org/recipes/usage-with-typescript&quot;&gt;https://redux.js.org/recipes/usage-with-typescript&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;18&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; defaultState&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; State &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ADD_MOVIE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ADD_MOVIE&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;REMOVE_MOVIE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;REMOVE_MOVIE&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;RESET&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;RESET&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AddMovieAction&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ADD_MOVIE&lt;/span&gt;
  payload&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RemoveMovieAction&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;REMOVE_MOVIE&lt;/span&gt;
  payload&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResetAction&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;RESET&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; ActionTypes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; AddMovieAction &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; RemoveMovieAction &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; ResetAction

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ActionTypes &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ADD_MOVIE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    payload&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;removeMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ActionTypes &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;REMOVE_MOVIE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    payload&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ActionTypes &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;RESET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;reducer&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; State&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Action&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;action&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ADD_MOVIE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;REMOVE_MOVIE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;RESET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; defaultState
    &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; state
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing crazy here, we declared state interface, default state, actions, action creators and finally reducer.&lt;/p&gt;
&lt;p&gt;and now the same thing in ReasonML&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; action &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;RemoveMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Reset&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; defaultState &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reducer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;fun&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;RemoveMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies &lt;span class=&quot;token operator&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;filter&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Reset&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; defaultState&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; someAction &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;The End of Evangelion&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yep, that is it.&lt;/p&gt;
&lt;p&gt;Lets look at what is happening here.&lt;/p&gt;
&lt;p&gt;First, there is a state type declaration.&lt;/p&gt;
&lt;p&gt;After that is action &lt;a href=&quot;#https://reasonml.github.io/docs/en/variant&quot;&gt;Variant&lt;/a&gt; type&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; action &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;RemoveMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Reset&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is means that any variable with the type &lt;code class=&quot;language-text&quot;&gt;action&lt;/code&gt; can have one of the following values: &lt;code class=&quot;language-text&quot;&gt;Reset&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;AddMovie&lt;/code&gt; with some string value and &lt;code class=&quot;language-text&quot;&gt;RemoveMovie&lt;/code&gt; with some string value&lt;/p&gt;
&lt;p&gt;The Variant is a very powerful feature that allows us to define a type that can have values A or B in a very concise way. Yes, TypeScript has union types but it doesn’t have the same level of integration with language because types were kind of patched to the JavaScript to make TypeScript but Variants are an essential part of the ReasonML language and exists side by side with other language features like pattern matching.&lt;/p&gt;
&lt;p&gt;Speaking of pattern matching, let’s look at the reducer.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reducer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;fun&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;RemoveMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies &lt;span class=&quot;token operator&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;filter&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Reset&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; defaultState&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What we see here is a function that accepts the state as a first argument and then matches the second argument to possible values.&lt;/p&gt;
&lt;p&gt;We can also write this function like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; reducer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; action&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;action&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;AddMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;RemoveMovie&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; movies&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;movies &lt;span class=&quot;token operator&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;filter&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; m &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; movie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Reset&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; defaultState&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As matching an argument is a common pattern in ReasonML this kind of functions are written in a shorter format like in the previous code snippet. Parts like this — &lt;code class=&quot;language-text&quot;&gt;{ movies: [movie, ...state.movies] }&lt;/code&gt; look the same as in TypeScript, but what is happening here is not the same! In ReasonML &lt;code class=&quot;language-text&quot;&gt;[1,2,3]&lt;/code&gt; is not an array but an immutable list. Imagine it as having &lt;code class=&quot;language-text&quot;&gt;Immutable.js&lt;/code&gt; built-in into the language itself. In this part, we are taking advantage of the fact that the append operation has constant time in ReasonML lists! Coming from JavaScript or TypeScript you might write something like this without much thought and you’re getting performance improvements for free.&lt;/p&gt;
&lt;p&gt;Now let’s look at the experience of adding a new action to this reducer. How does that look like in TypeScript? Firstly, you add a new action to type definition then write some boilerplate in form of action creators and yeah don’t forget to actually handle that case in the reducer which is who knows where.&lt;/p&gt;
&lt;p&gt;In ReasonML first step is exactly the same but the next steps are anything but. As you hit save after adding a new action to the type definition you are led by the compiler on a gentle stroll across your codebase to handle cases accordingly&lt;/p&gt;
&lt;p&gt;You’ll see a warning like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;plaintext&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-plaintext&quot;&gt;
&lt;code class=&quot;language-plaintext&quot;&gt;Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Sort&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, this is good developer experience. It will point you to the exact place where you need to handle new action and will also tell you exactly which case is missing.&lt;/p&gt;
&lt;h2&gt;Null, undefined vs Option&lt;/h2&gt;
&lt;p&gt;In TypeScript we are burdened with JavaScript legacy of having both &lt;code class=&quot;language-text&quot;&gt;null&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt; for representing almost the same thing - an absence of value.&lt;/p&gt;
&lt;p&gt;In ReasonML there’s no such thing, there’s only &lt;code class=&quot;language-text&quot;&gt;Option&lt;/code&gt; type.&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;'&lt;/span&gt;a&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is an already familiar variant type. But it also has a type parameter &lt;code class=&quot;language-text&quot;&gt;'a&lt;/code&gt;. This is similar to generics in other languages like &lt;code class=&quot;language-text&quot;&gt;Option&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let’s compare more code&lt;/p&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  phone&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Form&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  user&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; User
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getPhone&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;form&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Form&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; undefined &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; undefined&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; undefined
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;phone &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; undefined&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; undefined
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;phone
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing nullable properties is one of the simplest cases where you can shoot in your foot. In TypeScript, we can remedy it by enabling strict null checks and then checking manually for undefined values.&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Belt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constructor variable&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; user &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  phone&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;int&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  user&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; getPhone &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt;
  form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user&lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt;flatMap&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;u &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; u&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;phone&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In ReasonML we can use built-in &lt;code class=&quot;language-text&quot;&gt;option&lt;/code&gt; type and together with helper functions from Belt standard library we can handle possibly empty values in standardized way&lt;/p&gt;
&lt;h2&gt;Labeled arguments&lt;/h2&gt;
&lt;p&gt;I don’t think that anyone will argue that the labeled arguments feature is just plain awesome. Probably everyone has had to look up the order or the meaning of the function’s arguments at some point. Unfortunately, there are no labeled arguments in TypeScript.&lt;/p&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeShadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; spread&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; shadow &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeShadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In ReasonML you put a &lt;code class=&quot;language-text&quot;&gt;~&lt;/code&gt; character before argument’s name and it becomes labeled.&lt;/p&gt;
&lt;p&gt;ReasonML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; makeShadow &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;spread&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; int&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; string&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; shadow &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; makeShadow&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;spread&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;~&lt;/span&gt;color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;black&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And yes, you can try and emulate it with an object as an argument in TypeScript, but then you’re allocating an object at every function call :/&lt;/p&gt;
&lt;p&gt;TypeScript&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeShadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;args&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
  y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
  spread&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
  color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; shadow &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeShadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; spread&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;black&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Module system&lt;/h2&gt;
&lt;p&gt;In TypeScript we explicitly export and import anything from file to file.&lt;/p&gt;
&lt;p&gt;Hello.ts&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; test &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;
&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; test &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./Hello.ts&quot;&lt;/span&gt;

&lt;span class=&quot;token builtin&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In ReasonML &lt;em&gt;every file is a module&lt;/em&gt; with the name of that file.&lt;/p&gt;
&lt;p&gt;Hello.re&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; test &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token class-name&quot;&gt;Js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can &lt;code class=&quot;language-text&quot;&gt;open&lt;/code&gt; modules which makes content available without module name prefix&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;reason&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-reason&quot;&gt;
&lt;code class=&quot;language-reason&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;token constructor variable&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token class-name&quot;&gt;Js&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;test&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Compiling speed&lt;/h2&gt;
&lt;p&gt;To compare compile speed let’s compile TodoMVC, as implementation and therefore project size is roughly comparable. What we are measuring is the time it takes to transpile code to JavaScript. No bundling, minifying, etc. [1]&lt;/p&gt;
&lt;p&gt;TypeScript + React.js&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;plaintext&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;language-plaintext&quot;&gt;
&lt;code class=&quot;language-plaintext&quot;&gt;$ time tsc -p js
tsc -p js  6.18s user 0.24s system 115% cpu 5.572 total&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;6.18&lt;/strong&gt; seconds&lt;/p&gt;
&lt;p&gt;ReasonML + ReasonReact&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;plaintext&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;language-plaintext&quot;&gt;
&lt;code class=&quot;language-plaintext&quot;&gt;$ bsb -clean-world
$ time bsb -make-world
[18/18] Building src/ReactDOMRe.mlast.d
[9/9] Building src/ReactDOMRe.cmj
[6/6] Building src/Fetch.mlast.d
[3/3] Building src/bs_fetch.cmj
[12/12] Building src/Json_encode.mlast.d
[6/6] Building src/Json.cmj
[7/7] Building src/todomvc/App.mlast.d
[3/3] Building src/todomvc/App-ReasonReactExample.cmj
bsb -make-world  0.96s user 0.73s system 161% cpu 1.049 total&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;0.96&lt;/strong&gt; seconds&lt;/p&gt;
&lt;p&gt;Now this also includes compiling ReasonML dependencies, we can measure compiling time of only project files&lt;/p&gt;
&lt;p&gt;ReasonML + ReasonReact, only src/&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;plaintext&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;language-plaintext&quot;&gt;
&lt;code class=&quot;language-plaintext&quot;&gt;$ bsb -clean
$ time bsb -make-world
ninja: no work to do.
ninja: no work to do.
ninja: no work to do.
[7/7] Building src/todomvc/App.mlast.d
[3/3] Building src/todomvc/App-ReasonReactExample.cmj
bsb -make-world  0.33s user 0.27s system 117% cpu 0.512 total&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;0.33&lt;/strong&gt; seconds&lt;/p&gt;
&lt;p&gt;Now that is fast!&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;BuckleScript considers performance at install time, build time and run time as a serious feature&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the quote taken from the BuckleScript documentation. BuckleScript is the tool that transpiles ReasonML to JavaScript.&lt;/p&gt;
&lt;h2&gt;Where TypeScript beats ReasonML (for now)&lt;/h2&gt;
&lt;p&gt;Not everything about ReasonML is flowers and butterflies. It is a fairly new language… Well, actually no it is based on OCaml which is fairly old but the point is that there are still not a lot of resources online. Googling TypeScript question will more likely to yield an answer than a ReasonML one.&lt;/p&gt;
&lt;p&gt;DefinitelyTyped typings amount is just insane and it will take time for ReasonML to match them.&lt;/p&gt;
&lt;h2&gt;Closing remarks&lt;/h2&gt;
&lt;p&gt;ReasonML syntax should be really familiar for front-end developers which means that the beginning of the learning curve is not that steep (But still steeper than TypeScript). ReasonML takes the best things from the other languages and tools like Immutable.js, eslint and brings it to the language level. It doesn’t try to be a completely pure programming language, you can always fallback to mutation and imperative programming when you need it. It is crazy fast which is a big part of great developer experience. ReasonML is everything TypeScript tries to be (and a bit more) without all that JavaScript weirdness. You should try it!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;[1] Compile time tests performed on a Mid-2015 MacBook Pro with Intel(R) Core(TM) i5-5287U CPU @ 2.90GHz&lt;br/&gt;&lt;a href=&quot;https://github.com/tastejs/todomvc/tree/master/examples/typescript-react&quot;&gt;TypeScript + React.js source code&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;https://github.com/reasonml-community/reason-react-example/tree/master/src/todomvc&quot;&gt;ReasonML + ReasonReact source code&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 10:18:54 +0000</pubDate>
<dc:creator>jasim</dc:creator>
<og:title>TypeScript vs ReasonML – A Comparison</og:title>
<og:description>Want some types in your javascript?</og:description>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.dubenko.dev/typescript-vs-reason/</dc:identifier>
</item>
<item>
<title>Amazon AWS had a power failure, their backup generators failed</title>
<link>https://www.twitter.com/PragmaticAndy/status/1168916144121634818</link>
<guid isPermaLink="true" >https://www.twitter.com/PragmaticAndy/status/1168916144121634818</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.twitter.com/PragmaticAndy/status/1168916144121634818&quot;&gt;https://www.twitter.com/PragmaticAndy/status/1168916144121634818&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20875489&quot;&gt;https://news.ycombinator.com/item?id=20875489&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 213&lt;/p&gt;
&lt;p&gt;# Comments: 100&lt;/p&gt;
</description>
<pubDate>Wed, 04 Sep 2019 09:40:59 +0000</pubDate>
<dc:creator>mcenedella</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/PragmaticAndy/status/1168916144121634818</dc:identifier>
</item>
</channel>
</rss>