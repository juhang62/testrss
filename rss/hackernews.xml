<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Why is Apple&amp;#039;s M1 chip so fast?</title>
<link>https://erik-engheim.medium.com/why-is-apples-m1-chip-so-fast-3262b158cba2</link>
<guid isPermaLink="true" >https://erik-engheim.medium.com/why-is-apples-m1-chip-so-fast-3262b158cba2</guid>
<description>&lt;h2 id=&quot;d808&quot; class=&quot;fn cz eq as b fo fp fq fr fs ft fu fv fw fx fy fz ga gb gc gd bq&quot;&gt;Real world experience with the new M1 Macs have started ticking in. They are fast. Real fast. But why? What is the magic?&lt;/h2&gt;
&lt;div class=&quot;ge&quot;&gt;
&lt;div class=&quot;n cc gf gg gh&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;
&lt;div class=&quot;ae gi gj&quot;&gt;

&lt;img alt=&quot;Erik Engheim&quot; class=&quot;s gp gj gi&quot; src=&quot;https://miro.medium.com/fit/c/56/56/0*1Y9ylHZ8csOxgZr7.jpg&quot; width=&quot;28&quot; height=&quot;28&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;p id=&quot;8eb8&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;On Youtube I watched a Mac user who had bought an iMac last year. It was maxed out with 40 GB of RAM costing him about $4000. He watched in disbelief how his hyper expensive iMac was being demolished by his new M1 Mac Mini, which he had paid a measly $700 for.&lt;/p&gt;
&lt;p id=&quot;1408&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;In real world test after test, the M1 Macs are not merely inching past top of the line Intel Macs, they are destroying them. In disbelief people have started asking how on earth this is possible?&lt;/p&gt;
&lt;p id=&quot;71b6&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;If you are &lt;span id=&quot;rmm&quot;&gt;&lt;span id=&quot;rmm&quot;&gt;o&lt;/span&gt;&lt;/span&gt;ne of those people, you have come to the right place. Here I plan to break it down into digestible pieces exactly what it is that Apple has done with the M1. Specifically the questions I think a lot of people have are:&lt;/p&gt;
&lt;ol class=&quot;&quot;&gt;&lt;li id=&quot;89bf&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy fm&quot;&gt;What is the technical reasons this M1 chip is so fast?&lt;/li&gt;
&lt;li id=&quot;c5cb&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv iw ix iy fm&quot;&gt;Has Apple made some really exotic technical choices to make this possible?&lt;/li&gt;
&lt;li id=&quot;03e6&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv iw ix iy fm&quot;&gt;How easy will it be for the competition such as Intel and AMD to pull the same technical tricks?&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;6e93&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Sure you could try to Google this, but if you try to learn what Apple has done beyond the superficial explanations, you will quickly get buried in highly technical jargon such as M1 using very wide instruction decoders, enormous re-order buffer (ROB) etc. Unless you are a CPU hardware geek, a lot of this will simply be gobbledegook.&lt;/p&gt;
&lt;p id=&quot;ecc7&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;To get the most out of this story I advice reading my earlier piece: &lt;a href=&quot;https://medium.com/swlh/what-does-risc-and-cisc-mean-in-2020-7b4d42c9a9de&quot; class=&quot;dh je&quot; rel=&quot;noopener&quot;&gt;RISC and CISC mean in 2020&lt;/a&gt;? There I explain what a microprocessor (CPU) is as well various important concepts such as:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;4638&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv jf ix iy fm&quot;&gt;Instruction Set Architecture (ISA)&lt;/li&gt;
&lt;li id=&quot;e7aa&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Pipelining&lt;/li&gt;
&lt;li id=&quot;69ae&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Load / Store Architecture&lt;/li&gt;
&lt;li id=&quot;f37f&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Microcode vs Micro-operations&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;85a3&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;But if you are impatient, I will do a quick version of the material you need to understand to grasp my explanation of the M1 chip.&lt;/p&gt;
&lt;h2 id=&quot;a207&quot; class=&quot;jg jh eq as ji jj jk fq jl jm jn ft jo fu jp fw jq fx jr fz js ga jt gc ju jv fm&quot;&gt;What is a Microprocessor (CPU)?&lt;/h2&gt;
&lt;p id=&quot;285c&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;Normally when speaking of chips from Intel and AMD we talk about central processing units (CPUs) or microprocessors. As you can read more about in my &lt;a href=&quot;https://medium.com/swlh/what-does-risc-and-cisc-mean-in-2020-7b4d42c9a9de&quot; class=&quot;dh je&quot; rel=&quot;noopener&quot;&gt;RISC vs CISC story&lt;/a&gt;, these pull in instructions from memory. Then each instruction is typically carried out in sequence.&lt;/p&gt;
&lt;div class=&quot;n p ac&quot;&gt;&lt;img alt=&quot;A very basic RISC CPU, not the M1&quot; class=&quot;kg&quot; src=&quot;https://miro.medium.com/proxy/1*3G7uz4l1GnFacxz6InrLLw.png&quot;/&gt;&lt;/div&gt;
A very basic RISC CPU, not the M1. Instructions are moved from memory along &lt;strong class=&quot;as kl&quot;&gt;blue&lt;/strong&gt; arrows into instruction register. There a decoder figures out what the instruction is and enables different parts of the CPU through the &lt;strong class=&quot;as kl&quot;&gt;red&lt;/strong&gt; control lines. The ALU adds and subtracts numbers placed in the registers.
&lt;p id=&quot;5525&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;A CPU at its most basic level is a device with a number of named memory cells called registers and a number of computational units called arithmetic logic units (ALU). The ALUs perform things like addition, subtraction and other basic math operations. However these are only connected to the CPU registers. If you want to add up two numbers, you have to get those two numbers from memory and into two registers in the CPU.&lt;/p&gt;
&lt;p id=&quot;db6e&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Here are some examples of typical instructions that a RISC CPU as found on the M1 carries out.&lt;/p&gt;
&lt;pre class=&quot;kb kc kd ke kf km kn ko&quot;&gt;
&lt;span id=&quot;9500&quot; class=&quot;fm jg jh eq kp b dd kq kr s ks&quot;&gt;load r1, 150&lt;br/&gt;load r2, 200&lt;br/&gt;add  r1, r2&lt;br/&gt;store r1, 310&lt;/span&gt;
&lt;/pre&gt;
&lt;p id=&quot;d5bb&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Here &lt;code class=&quot;hu kt ku kv kp b&quot;&gt;r1&lt;/code&gt; and &lt;code class=&quot;hu kt ku kv kp b&quot;&gt;r2&lt;/code&gt; are the registers I talked about. Modern RISC CPUs cannot do operations on numbers which are not in a register like this. E.g. it cannot add two numbers residing in RAM in two different locations. Instead it has to pull these two numbers into a separate register. That is what we do in this simple example. We pull in the number at memory location 150 in the RAM and put it into register &lt;code class=&quot;hu kt ku kv kp b&quot;&gt;r1&lt;/code&gt; in the CPU. Next we put the contents of address 200 into register &lt;code class=&quot;hu kt ku kv kp b&quot;&gt;r1&lt;/code&gt;. Only then can the numbers be added with the &lt;code class=&quot;hu kt ku kv kp b&quot;&gt;add r1, r2&lt;/code&gt; instruction.&lt;/p&gt;

An old mechanical calculator with two registers: the accumulator and input register. Modern CPUs typically have more than a dozen registers, and they are electronic rather than mechanical.
&lt;p id=&quot;7146&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;The concept of registers is old. E.g. on this old mechanical calculator, the &lt;em class=&quot;ky&quot;&gt;register&lt;/em&gt; is what holds the numbers you are adding. Likely the origin for the word &lt;em class=&quot;ky&quot;&gt;cash register&lt;/em&gt;. The register is where you registered input numbers.&lt;/p&gt;

&lt;p id=&quot;d450&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;But here is a very important thing to understand about the M1:&lt;/p&gt;
&lt;blockquote class=&quot;lo&quot; readability=&quot;7&quot;&gt;
&lt;p id=&quot;777f&quot; class=&quot;lp lq eq as lr ls lt lu lv lw lx iv bq&quot;&gt;The M1 is not a CPU, it is a whole system of multiple chips put into one large silicon package. The CPU is just one of these chips.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;69f0&quot; class=&quot;ia ib eq ic b fo ly ie if fr lz ih ii ij ma il im in mb ip iq ir mc it iu iv db fm&quot;&gt;Basically the M1 is one whole computer onto a chip. The M1 contains CPU, Graphical Processing Unit (GPU), memory, input and output controllers and many more things making up a whole computer. This is what we call a System on a Chip (SoC).&lt;/p&gt;

M1 is a System on a Chip. Meaning all the parts making up a computer is place on one silicon chip.
&lt;p id=&quot;fce1&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Today if you buy a chip whether from Intel or AMD, you actually get what amounts to &lt;em class=&quot;ky&quot;&gt;multiple&lt;/em&gt; microprocessors in one package. In the past computers would have multiple physically separate chips on the motherboard of the computer.&lt;/p&gt;

Example of a computer motherboard. Memory, CPU, graphics cards, IO controllers, network card and many other component can be attached to the motherboard to communicate with each other.
&lt;p id=&quot;9cf5&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;However because we are able to put so many transistors on a silicon die today, companies such as Intel and AMD began putting multiple microprocessors onto one chip. Today we refer to these chips as CPU cores. One core is basically a full independent chip which can read instructions from memory and perform calculations.&lt;/p&gt;

A microchip with multiple CPU cores.
&lt;p id=&quot;18a4&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;This has for a long time been the name of the game in terms of increasing performance: Just add more general purpose CPU cores. But there is a disturbance in the force. There is one player in the CPU market which is deviating from this trend.&lt;/p&gt;
&lt;h2 id=&quot;cff4&quot; class=&quot;jg jh eq as ji jj jk fq jl jm jn ft jo fu jp fw jq fx jr fz js ga jt gc ju jv fm&quot;&gt;Apple’s Not So Secret Heterogenous Computing Strategy&lt;/h2&gt;
&lt;p id=&quot;8feb&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;Instead of adding ever more general purpose CPU cores, Apple has followed another strategy: They have started adding ever more specialized chips doing a few specialized tasks. The benefit of this is that specialized chips tend to be able to perform their tasks significantly faster using much less electric current than a general purpose CPU core.&lt;/p&gt;
&lt;p id=&quot;e379&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;This is not entirely new knowledge. For many years already specialized chips such as the graphical processing units (GPUs) have been sitting in Nvidia and AMD graphics cards performing operations related to graphics much faster than general purpose CPUs.&lt;/p&gt;
&lt;p id=&quot;866e&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;What Apple has done is simply to take a more radical shift towards this direction. Rather than just having general purpose cores and memory, the M1 contains a wide variety of specialized chips:&lt;/p&gt;
&lt;ul class=&quot;&quot;&gt;&lt;li id=&quot;6e0e&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv jf ix iy fm&quot;&gt;Central Processing Unit (CPU) — The “brains” of the SoC. Runs most of the code of the operating system and your apps.&lt;/li&gt;
&lt;li id=&quot;037c&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Graphics Processing Unit (GPU) — Handles graphics-related tasks, such as visualizing an app’s user interface and 2D/3D gaming.&lt;/li&gt;
&lt;li id=&quot;9a44&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Image Processing Unit (ISP) — Can be used to speed up common tasks done by image processing aplications.&lt;/li&gt;
&lt;li id=&quot;c654&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Digital Signal Processor (DSP) — Handles more mathematically intensive functions than a CPU. Includes decompressing music files.&lt;/li&gt;
&lt;li id=&quot;1cac&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Neural Processing Unit (NPU) — Used in high-end smartphones to accelerate machine learning (AI) tasks. These include voice recognition and camera processing.&lt;/li&gt;
&lt;li id=&quot;ce8d&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Video encoder/decoder — Handles the power-efficient conversion of video files and formats.&lt;/li&gt;
&lt;li id=&quot;d9a8&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Secure Enclave — Encryption, authentication and security.&lt;/li&gt;
&lt;li id=&quot;2d2b&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv jf ix iy fm&quot;&gt;Unified memory — Allows the CPU, GPU and other cores to quickly exchange information.&lt;/li&gt;
&lt;/ul&gt;&lt;p id=&quot;967a&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;This is part of the reason why a lot of people working on images and video editing with the M1 Macs are seeing such speed improvements. A lot of the tasks they do, can run directly on specialized hardware. That is what allows a cheap M1 Mac Mini to encode a large video file, without breaking sweat while an expensive iMac has all its fans going full blast and still cannot keep up.&lt;/p&gt;

In &lt;strong class=&quot;as kl&quot;&gt;blue&lt;/strong&gt; you see multiple CPU cores accessing memory, and in &lt;strong class=&quot;as kl&quot;&gt;green&lt;/strong&gt; you see large numbers of GPU cores accessing memory.
&lt;p id=&quot;ba08&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Unified memory may confuse you. How is it different from shared memory? And wasn’t sharing video memory with main memory a terrible idea in the past giving low performance? Yes, shared memory was indeed bad. The reason was that the CPU and GPU had to take turns accessing the memory. Sharing it meant contention to use the databus. Basically the GPUs and CPUs had to take turns using a narrow pipe to push or pull data through.&lt;/p&gt;
&lt;p id=&quot;4cc6&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;That is not the case with Unified memory. In Unified memory the GPU cores and CPU cores can access memory at the same time. Thus in this case there is no overhead in sharing memory. In addition the CPU and GPU can tell each other about where some memory is located. Previously the CPU would have to copy data from its area of the main memory to the area used by the GPU. With unified memory, it is more like saying “Hey Mr. GPU, I got 30 MB of polygon data starting at memory location 2430.” The GPU can then start using that memory without doing any copying.&lt;/p&gt;
&lt;p id=&quot;276f&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;That means you can significant performance gains by the fact that all the various special co-processors on the M1 can rapidly exchange information with each other by using the same memory pool.&lt;/p&gt;

How Mac’s used GPUs before unified memory. There was even an option of having graphics cards outside the computer using a Thunderbolt 3 cable. There is some speculation that this may still be possible in the future.
&lt;h2 id=&quot;d329&quot; class=&quot;jg jh eq as ji jj jk fq jl jm jn ft jo fu jp fw jq fx jr fz js ga jt gc ju jv fm&quot;&gt;Why Don’t Intel and AMD Copy This Strategy?&lt;/h2&gt;
&lt;p id=&quot;f5e0&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;If what Apple is doing is so smart, why are not everybody doing it? To some extent they are. Other ARM chip makers are increasingly putting in specialized hardware.&lt;/p&gt;
&lt;p id=&quot;2bdd&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;AMD has also started putting stronger GPUs on some of their chips and moving gradually towards some form of SoC with the accelerated processing units (APU) which are basically CPU cores and GPU cores placed on the same silicon die.&lt;/p&gt;

AMD Ryzen Accelerated Processing Unit (APU) which combines CPU and GPU (Radeon Vega) on one silicon chip. Does however not contain other co-processors, IO-controllers or unified memory.
&lt;p id=&quot;279e&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Yet there are important reasons why they cannot do this. An SoC is essentially a whole computer on a chip. That makes it a more natural fit for an actual computer maker, such as HP and Dell. Let me clarify with a silly car-analogy: If your business model is to build and sell car engines, it would be an unusual leap to begin manufacturing and selling whole cars.&lt;/p&gt;
&lt;p id=&quot;04e1&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;For ARM Ltd. in contrast this isn’t an issue. Computer makers such as Dell or HP could simply license ARM intellectual property and buy IP for other chips, to add whatever specialized hardware they think their SoC should have. Next they ship the finished design over over to a semiconductor foundry such as &lt;a href=&quot;https://en.wikipedia.org/wiki/GlobalFoundries&quot; class=&quot;dh je&quot; rel=&quot;noopener nofollow&quot;&gt;GlobalFoundries&lt;/a&gt; or &lt;a href=&quot;https://www.tsmc.com/english&quot; class=&quot;dh je&quot; rel=&quot;noopener nofollow&quot;&gt;TSMC&lt;/a&gt;, which manufactures chips for AMD and Apple today.&lt;/p&gt;

TSMC semiconductor foundry in Taiwan. TSMC manufactures chips for other companies such as AMD, Apple, Nvidia and Qualcomm.
&lt;p id=&quot;a601&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Here we get a big problem with the Intel and AMD business model. Their business models are based on selling general purpose CPUs, which people just slot onto a large PC motherboard. Thus computer makers can simply buy motherboards, memory, CPUs and graphics cards from different vendors and integrate them into one solution.&lt;/p&gt;
&lt;p id=&quot;7f77&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;But we are quickly moving away from that world. In the new SoC world you don’t assemble physical components from different vendors. Instead you assemble IP (intellectual property) from different vendors. You buy the design for graphics cards, CPUs, modems, IO controllers and other things from different vendors and use that to design a SoC in-house. Then you get a foundry to manufacture this.&lt;/p&gt;
&lt;p id=&quot;2fba&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Now you got a big problem, because neither Intel, AMD or Nvidia are going to license their intellectual property to Dell or HP for them to make an SoC for their machines.&lt;/p&gt;
&lt;p id=&quot;b24c&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Sure Intel and AMD may simply begin to sell whole finished SoCs. But what are these to contain? PC makers may have different ideas of what they should contain. You potentially get a conflict between Intel, AMD, Microsoft and PC makers about what sort of specialized chips should be included because these will need software support.&lt;/p&gt;
&lt;p id=&quot;558d&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;For Apple this is simple. They control the whole widget. They give you e.g. the Core ML library for developers to write &lt;a href=&quot;https://developer.apple.com/machine-learning/&quot; class=&quot;dh je&quot; rel=&quot;noopener nofollow&quot;&gt;machine learning&lt;/a&gt; stuff. Whether Core ML runs on Apple’s CPU or the Neural Engine is an implementation detail developers don’t have to care about.&lt;/p&gt;
&lt;h2 id=&quot;711f&quot; class=&quot;jg jh eq as ji jj jk fq jl jm jn ft jo fu jp fw jq fx jr fz js ga jt gc ju jv fm&quot;&gt;The Fundamental Challenge of Making Any CPU Run Fast&lt;/h2&gt;
&lt;p id=&quot;f11c&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;So heterogenous computing is part of the reason but not the sole reason. The fast general purpose CPU cores on the M1, called Firestorm are genuinely fast. This is a major deviation from ARM CPU cores in the past which tended to be very weak compared to AMD and Intel cores.&lt;/p&gt;
&lt;p id=&quot;b74c&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Firestorm in contrast beats most Intel cores and almost beats the fastest AMD Ryzen cores. Conventional wisdom said that was not going to happen.&lt;/p&gt;
&lt;p id=&quot;ab49&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Before talking about what makes Firestorm fast it helps to understand what the core idea of making a fast CPU is really about.&lt;/p&gt;
&lt;p id=&quot;92fc&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;In principle you accomplish in a combination of two strategies:&lt;/p&gt;
&lt;ol class=&quot;&quot;&gt;&lt;li id=&quot;68be&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv iw ix iy fm&quot;&gt;Perform more instructions in a sequence faster.&lt;/li&gt;
&lt;li id=&quot;5f98&quot; class=&quot;ia ib eq ic b fo iz ie if fr ja ih ii ij jb il im in jc ip iq ir jd it iu iv iw ix iy fm&quot;&gt;Perform lots of instructions in parallel.&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;bd92&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Back in the 80s, it was easy. Just increase the clock frequency and the instructions would finish faster. Every clock cycle is when the computer does something. But this &lt;em class=&quot;ky&quot;&gt;something&lt;/em&gt; can be quite little. Thus an instruction may require multiple clock cycles to finis because it is made up of several smaller tasks.&lt;/p&gt;
&lt;p id=&quot;905f&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;However today increasing the clock frequency is next to impossible. That is the whole “End of Moore’s Law” that people have been harping on for over a decade now.&lt;/p&gt;
&lt;p id=&quot;2133&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Thus it is really about executing as many instructions as possible in parallel.&lt;/p&gt;
&lt;h2 id=&quot;1f1b&quot; class=&quot;jg jh eq as ji jj jk fq jl jm jn ft jo fu jp fw jq fx jr fz js ga jt gc ju jv fm&quot;&gt;Multi-Core or Out-of-Order Processors?&lt;/h2&gt;
&lt;p id=&quot;9966&quot; class=&quot;ia ib eq ic b fo jw ie if fr jx ih ii ij jy il im in jz ip iq ir ka it iu iv db fm&quot;&gt;There are two approaches to this. One is to add more CPU cores. From the point of view of a software developer it is like adding &lt;em class=&quot;ky&quot;&gt;threads&lt;/em&gt;. Every CPU core is like a hardware thread. If you don’t know what a thread is, then you can think of it as the process of carrying out a task. With two cores, a CPU can carry out two separate tasks concurrently: two threads. The tasks could be described as two separate programs stores in memory or it could actually be the same program performed twice. Each thread needs some book-keeping, such as &lt;em class=&quot;ky&quot;&gt;where&lt;/em&gt; in sequence of program instructions the thread is currently at. Each thread may store temporary results which should be kept separate.&lt;/p&gt;
&lt;p id=&quot;8059&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;In principle a processor can have just one core and run multiple threads. In this case it simply halts one thread and stores current progress before switching to another. Later it switches back. This doesn’t bring much of a performance enhancement and is only used when a thread may frequently halt to wait for input from user, data from a slow network connection etc. These may be called software threads. Hardware threads means you have actual extra physical hardware such as extra cores at your disposal to speed up things.&lt;/p&gt;

&lt;p id=&quot;3d7f&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;The problem with this is that the developer has to write code to take advantage of this. Some tasks such as sever software is easy to write like this. You can imagine processing each connecting user separate. These tasks are so independent from each other that having lots of cores is an excellent choice for servers especially cloud based services.&lt;/p&gt;

The Ampere Altra Max ARM CPU with 128 cores designed for cloud computing, where a lot of hardware threads is a benefit.
&lt;p id=&quot;f30f&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;That is the reason why you see ARM CPUs makers such as Ampere making CPUs such as the &lt;a href=&quot;https://www.networkworld.com/article/3564514/ampere-announces-128-core-arm-server-processor.html&quot; class=&quot;dh je&quot; rel=&quot;noopener nofollow&quot;&gt;Altra Max&lt;/a&gt; which has a crazy 128 cores. This chip is specifically made for the cloud. You don’t need crazy single core performance because in the cloud it is all about having as many threads as possible per watt to handle as many concurrent users as possible.&lt;/p&gt;
&lt;p id=&quot;6ead&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Apple in contrast is in the complete opposite end of the spectrum. Apple makes single user devices. Lots of threads is not an advantage. Their devices are used for gaming, video editing, development etc. They want desktops with beautiful responsive graphics and animations.&lt;/p&gt;
&lt;p id=&quot;e3ca&quot; class=&quot;ia ib eq ic b fo id ie if fr ig ih ii ij ik il im in io ip iq ir is it iu iv db fm&quot;&gt;Desktop software is generally not made to utilize lots of cores. E.g. computer game will likely benefit from 8 cores, but something like 128 cores would be a total waste. Instead you would want fewer but more powerful cores.&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 19:36:26 +0000</pubDate>
<dc:creator>socialdemocrat</dc:creator>
<og:type>article</og:type>
<og:title>Why is Apple’s M1 Chip So Fast</og:title>
<og:description>Real world experience with the new M1 Macs have started ticking in. They are fast. Real fast. But why? What is the magic?</og:description>
<og:url>https://erik-engheim.medium.com/why-is-apples-m1-chip-so-fast-3262b158cba2</og:url>
<og:image>https://miro.medium.com/max/1200/1*thz7gKafCYxWoA0h8aGjcg.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://erik-engheim.medium.com/why-is-apples-m1-chip-so-fast-3262b158cba2</dc:identifier>
</item>
<item>
<title>IRS says its own error sent $1,200 stimulus checks to non-Americans overseas</title>
<link>https://www.npr.org/2020/11/30/938902523/irs-says-its-own-error-sent-1-200-stimulus-checks-to-non-americans-overseas</link>
<guid isPermaLink="true" >https://www.npr.org/2020/11/30/938902523/irs-says-its-own-error-sent-1-200-stimulus-checks-to-non-americans-overseas</guid>
<description>&lt;div id=&quot;res938922036&quot; class=&quot;bucketwrap image large&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/11/25/gettyimages-1214408820_wide-159fe6920e3123fba33fabb293338e60781905f6-s1100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/11/25/gettyimages-1214408820_wide-159fe6920e3123fba33fabb293338e60781905f6-s1100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;An error at the IRS caused thousands of non-Americans living overseas to mistakenly receive $1,200 stimulus checks last spring. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Miami Herald/TNS via Getty Images&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Miami Herald/TNS via Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2020/11/25/gettyimages-1214408820_wide-159fe6920e3123fba33fabb293338e60781905f6-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;An error at the IRS caused thousands of non-Americans living overseas to mistakenly receive $1,200 stimulus checks last spring.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Miami Herald/TNS via Getty Images&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The IRS now acknowledges that its own error caused some citizens of other countries to mistakenly receive $1,200 coronavirus relief payments — and that the mistake is likely to happen again if more stimulus money goes out.&lt;/p&gt;
&lt;p&gt;When &lt;a href=&quot;https://www.npr.org/2020/08/05/898903600/foreign-workers-living-overseas-mistakenly-received-1-200-u-s-stimulus-checks&quot;&gt;reports of the mistake first surfaced&lt;/a&gt;, the U.S government placed the blame on those non-Americans, saying that many noncitizens erroneously received stimulus checks because they had filed incorrect tax returns that made them appear to be American.&lt;/p&gt;
&lt;p&gt;But many non-Americans who received stimulus money do not file U.S. tax returns. One of them is Susanne Wigforss, a 78-year-old Swedish citizen who lives in Stockholm.&lt;/p&gt;
&lt;p&gt;Wigforss was surprised in July to get a $1,200 check in the mail from the U.S. Treasury. It was followed by a letter from the White House signed by President Trump, addressed to &quot;My Fellow American&quot; and informing her that &quot;your economic impact payment has arrived.&quot;&lt;/p&gt;
&lt;div id=&quot;res938923958&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage898903600&quot; href=&quot;https://www.npr.org/2020/08/05/898903600/foreign-workers-living-overseas-mistakenly-received-1-200-u-s-stimulus-checks&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2020\/08\/05\/898903600\/foreign-workers-living-overseas-mistakenly-received-1-200-u-s-stimulus-checks&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/08/04/gettyimages-81027601_sq-634c6a84df6098d9b1ae51996fd5afcb0aac0c36-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/08/04/gettyimages-81027601_sq-634c6a84df6098d9b1ae51996fd5afcb0aac0c36-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Foreign Workers Living Overseas Mistakenly Received $1,200 U.S. Stimulus Checks&quot; loading=&quot;lazy&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;res938924456&quot; class=&quot;bucketwrap internallink insettwocolumn inset2col&quot;&gt;
&lt;div class=&quot;bucket img&quot;&gt;&lt;a id=&quot;featuredStackSquareImage938564215&quot; href=&quot;https://www.npr.org/2020/11/25/938564215/move-fast-push-for-a-big-deal-biden-faces-debate-over-more-covid-aid&quot; data-metrics=&quot;{&amp;quot;category&amp;quot;:&amp;quot;Story to Story&amp;quot;,&amp;quot;action&amp;quot;:&amp;quot;Click Internal Link&amp;quot;,&amp;quot;label&amp;quot;:&amp;quot;https:\/\/www.npr.org\/2020\/11\/25\/938564215\/move-fast-push-for-a-big-deal-biden-faces-debate-over-more-covid-aid&amp;quot;}&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/11/24/gettyimages-1286022656_sq-2002af3805f309a8f04e996386a9c1bc667dce3c-s100-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/11/24/gettyimages-1286022656_sq-2002af3805f309a8f04e996386a9c1bc667dce3c-s100.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;Move Fast? Push For A Big Deal? Biden Faces Debate Over More COVID-19 Aid&quot; loading=&quot;lazy&quot;/&gt;&lt;/a&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&quot;I thought, 'I can't believe it,' &quot; Wigforss recalled. &quot;They're sending it to me. Why? I mean, it's crazy, isn't it?&quot;&lt;/p&gt;
&lt;p&gt;Only U.S. citizens and U.S. &quot;resident aliens&quot; are eligible for stimulus money — &quot;resident alien&quot; is a federal tax classification, and to qualify an individual needs a green card or must have been in the U.S. for a certain amount of time — and Wigforss is neither.&lt;/p&gt;
&lt;p&gt;Asked about this by NPR, the IRS acknowledged it mistakenly sent checks to some noncitizens who receive Social Security and other federal benefits — such as Wigforss, who receives a small Social Security payment from having worked in California for several years.&lt;/p&gt;
&lt;p&gt;&quot;This is so wrong,&quot; Wigforss said, &quot;because I saw that a number of people were being evicted every month in Chicago, for instance, and I thought one of those families would have needed this stimulus check. Why should a Swedish citizen living abroad receive $1,200?&quot;&lt;/p&gt;
&lt;p&gt;&quot;There's no way I'm going to cash this money — it doesn't belong to me,&quot; she added. &quot;But how much money is bleeding out from the Treasury Department because of these [misdirected] stimulus checks, I wonder?&quot;&lt;/p&gt;
&lt;aside id=&quot;ad-backstage-wrap&quot; aria-label=&quot;advertisement&quot;&gt;
&lt;/aside&gt;&lt;p&gt;The U.S. government cannot answer that question. The Treasury Inspector General for Tax Administration did find that, as of late May, $34 million in stimulus money had &lt;a href=&quot;https://www.treasury.gov/tigta/auditreports/2020reports/202046041fr.pdf&quot;&gt;gone to people who filed a tax return with a foreign address&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But that includes eligible people, such as U.S. citizens living abroad, and does not include ineligible foreign citizens who received a check at a U.S. address. For example, &lt;a href=&quot;https://www.npr.org/transcripts/898903600&quot;&gt;NPR interviewed&lt;/a&gt; a citizen of the Dominican Republic who was not eligible yet received a $1,200 economic impact payment at his former address in Massachusetts. That $34 million also does not include people, such as Wigforss, who received a check but did not file a U.S. tax return.&lt;/p&gt;
&lt;div id=&quot;res938923377&quot; class=&quot;bucketwrap image medium&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/11/25/dsc04883-b35c79218535681069b99bbae12bf9f16e7a7217-s800-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/11/25/dsc04883-b35c79218535681069b99bbae12bf9f16e7a7217-s800.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Susanne Wigforss, a Swedish citizen, poses with the letter she received from the White House about the $1,200 economic impact payment she received. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Susanne Wigforss&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Susanne Wigforss&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2020/11/25/dsc04883-b35c79218535681069b99bbae12bf9f16e7a7217-s1200.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;Susanne Wigforss, a Swedish citizen, poses with the letter she received from the White House about the $1,200 economic impact payment she received.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Susanne Wigforss&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Since Congress passed its coronavirus relief package in a hurry in March, the U.S. government has put no mechanisms in place to prevent these mistakes from happening again. As a result, if a new relief plan with more stimulus payments passes in the final weeks of the Trump administration or during the Biden administration, some of that money is likely to mistakenly end up in mailboxes overseas again.&lt;/p&gt;
&lt;p&gt;U.S. Treasury officials said they are &quot;continuing to assess the accuracy of the economic impact payments ... and the recovery efforts for any erroneous payments.&quot; In the meantime, they told NPR, the IRS is &quot;relying on individuals to voluntarily return these payments.&quot;&lt;/p&gt;
&lt;p&gt;&quot;I think the poor folks in the IRS don't have the bandwidth to go chasing this,&quot; said Enda Kelleher, a vice president at Sprintax, which does U.S. tax preparation for nonresidents, &quot;but it would be great if they did, because I believe that there's millions of dollars that have gone to people that weren't entitled to it, or they're certainly not the intended recipients.&quot;&lt;/p&gt;
&lt;p&gt;Kelleher said Sprintax has clients from about 150 countries who mistakenly received stimulus checks, mostly commonly in India, China, South Korea, Vietnam and the United Kingdom, as well as numerous nations in Latin America.&lt;/p&gt;
&lt;p&gt;&quot;It's awful when we hear of millions of dollars going into the wrong hands,&quot; he added, &quot;but it was probably within a somewhat acceptable threshold of error or margin of error&quot; because Congress opted for speed over accuracy when it flooded the U.S. economy with money last spring.&lt;/p&gt;
&lt;p&gt;Many non-Americans who erroneously received a check are trying to return it because they worry it will jeopardize their visa or immigration status, &quot;but there's equally thousands that are saying, 'Well, if they were silly enough to make this mistake, it's their mistake and I'm not going to give it back until they ask for it,' &quot; Kelleher said.&lt;/p&gt;
&lt;div id=&quot;res938925456&quot; class=&quot;bucketwrap image medium&quot;&gt;
&lt;div class=&quot;imagewrap&quot; data-crop-type=&quot;&quot;&gt;&lt;img src=&quot;https://media.npr.org/assets/img/2020/11/25/van-shockley-03-toned_vert-4db0f7772db3c1a5f3c2d37d4f81e85e1f976877-s800-c15.jpg&quot; data-original=&quot;https://media.npr.org/assets/img/2020/11/25/van-shockley-03-toned_vert-4db0f7772db3c1a5f3c2d37d4f81e85e1f976877-s800.jpg&quot; class=&quot;img lazyOnLoad&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;
&lt;/div&gt;
&lt;div class=&quot;credit-caption&quot;&gt;
&lt;div class=&quot;caption-wrap&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;caption&quot; aria-label=&quot;Image caption&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;Van Shockley, who gave up his U.S. citizenship and has been an Australian citizen for about a half-century, mistakenly received a stimulus check and suspects he got it because he receives Social Security from having worked in the U.S. before moving overseas. &lt;strong class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Van Shockley&lt;/strong&gt; &lt;strong class=&quot;hide-caption&quot;&gt;hide caption&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;strong class=&quot;toggle-caption&quot;&gt;toggle caption&lt;/strong&gt;&lt;/div&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Van Shockley&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;enlarge_measure&quot;&gt;
&lt;div class=&quot;img_wrap&quot;&gt;&lt;img data-original=&quot;https://media.npr.org/assets/img/2020/11/25/van-shockley-03-toned_vert-4db0f7772db3c1a5f3c2d37d4f81e85e1f976877-s1400.jpg&quot; alt=&quot;&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;enlarge_html&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;image_data&quot; readability=&quot;11&quot;&gt;
&lt;p class=&quot;caption&quot;&gt;Van Shockley, who gave up his U.S. citizenship and has been an Australian citizen for about a half-century, mistakenly received a stimulus check and suspects he got it because he receives Social Security from having worked in the U.S. before moving overseas.&lt;/p&gt;
&lt;span class=&quot;credit&quot; aria-label=&quot;Image credit&quot;&gt;Van Shockley&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Van Shockley falls in that category. He's 74 and was born in Pennsylvania, but he moved to Australia after becoming disillusioned with U.S. politics in the 1960s.&lt;/p&gt;
&lt;p&gt;&quot;I had always been depressed when JFK was killed,&quot; he explained. &quot;I just couldn't get over that, so I started looking for someplace else [to] start all over.&quot;&lt;/p&gt;
&lt;p&gt;Shockley gave up his U.S. citizenship and has now been an Australian citizen for about a half-century. His last trip to the U.S. was 40 years ago. But he, too, received stimulus money, even though he is not eligible for it and does not file a U.S. tax return.&lt;/p&gt;
&lt;p&gt;&quot;That was the weirdest thing ever,&quot; he recalled. &quot;I checked the mail and I pulled out a check. It had a Federal Reserve/Treasury thingamajig on it with the eagle and all that. It's made out to me. I thought: 'What's it from — America? What the hell's going on here? Why am I getting a check from the government?' &quot;&lt;/p&gt;
&lt;p&gt;Shockley suspects he mistakenly got a check because he receives Social Security from having worked in the U.S. before moving overseas.&lt;/p&gt;
&lt;p&gt;&quot;At first, I thought it was a joke,&quot; he said, &quot;and then I went down to the bank and I said, 'Do you have some way of verifying that this is legal?' And the girl came back after five minutes and said, 'It's legal. You got the money.' &quot;&lt;/p&gt;
&lt;p&gt;&quot;I didn't ask for the money. I didn't expect any money,&quot; Shockley added. &quot;But as soon as I got it, I stuck it in the bank. You ain't getting it back!&quot;&lt;/p&gt;
&lt;p&gt;He attributes the mistake to U.S. government incompetence.&lt;/p&gt;
&lt;p&gt;&quot;Oh, complete stupidity. They're just not doing their job properly,&quot; Shockley said. &quot;But I'm not complaining totally because I was happy with the money!&quot;&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 15:35:23 +0000</pubDate>
<dc:creator>brundolf</dc:creator>
<og:title>IRS Says Its Own Error Sent $1,200 Stimulus Checks To Non-Americans Overseas</og:title>
<og:url>https://www.npr.org/2020/11/30/938902523/irs-says-its-own-error-sent-1-200-stimulus-checks-to-non-americans-overseas</og:url>
<og:type>article</og:type>
<og:description>The IRS now says its own error caused thousands of non-Americans living overseas to mistakenly receive $1,200 stimulus checks — and the mistake could happen again if more stimulus money goes out.</og:description>
<og:image>https://media.npr.org/assets/img/2020/11/25/gettyimages-1214408820_wide-159fe6920e3123fba33fabb293338e60781905f6.jpg?s=1400</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.npr.org/2020/11/30/938902523/irs-says-its-own-error-sent-1-200-stimulus-checks-to-non-americans-overseas</dc:identifier>
</item>
<item>
<title>AlphaFold: a solution to a 50-year-old grand challenge in biology</title>
<link>https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</link>
<guid isPermaLink="true" >https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</guid>
<description>&lt;div class=&quot;dm-section user-content&quot; readability=&quot;43.707652622528&quot;&gt;
&lt;p&gt;&lt;strong&gt;Proteins are essential to life, supporting practically all its functions. They are large complex molecules, made up of chains of amino acids, and &lt;a href=&quot;https://www.youtube.com/watch?v=wvTv8TqWC48&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;what a protein does largely depends on its unique 3D structure&lt;/a&gt;. Figuring out what shapes proteins fold into is known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Protein_folding&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;“protein folding problem”&lt;/a&gt;, and has stood as a grand challenge in biology for the past 50 years. In a major scientific advance, the latest version of our AI system &lt;a href=&quot;https://deepmind.com/research/case-studies/alphafold&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;AlphaFold&lt;/a&gt; has been recognised as a solution to this grand challenge by the organisers of the biennial Critical Assessment of protein Structure Prediction (&lt;a href=&quot;https://predictioncenter.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CASP&lt;/a&gt;). This breakthrough demonstrates the impact AI can have on scientific discovery and its potential to dramatically accelerate progress in some of the most fundamental fields that explain and shape our world.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A protein’s shape is closely linked with its function, and the ability to predict this structure unlocks a greater understanding of what it does and how it works. Many of the world’s greatest challenges, like developing treatments for diseases or finding enzymes that break down industrial waste, are fundamentally tied to proteins and the role they play.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-1&quot; readability=&quot;33&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-1&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-1 ng-star-inserted&quot;&gt;We have been stuck on this one problem – how do proteins fold up – for nearly 50 years. To see DeepMind produce a solution for this, having worked personally on this problem for so long and after so many stops and starts, wondering if we’d ever get there, is a very special moment.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-1 ng-star-inserted&quot;&gt;Professor John Moult&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-1 ng-star-inserted&quot;&gt;Co-Founder and Chair of CASP, University of Maryland&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;29.08547008547&quot;&gt;
&lt;p&gt;This has been a focus of intensive scientific research for many years, using a variety of experimental techniques to examine and determine protein structures, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;nuclear magnetic resonance&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/X-ray_crystallography&quot;&gt;X-ray crystallography&lt;/a&gt;. These techniques, as well as newer methods like &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryogenic_electron_microscopy&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;cryo-electron microscopy&lt;/a&gt;, depend on extensive trial and error, which can &lt;a href=&quot;https://www.youtube.com/watch?v=gLsC4wlrR2A&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;take years of painstaking and laborious work&lt;/a&gt; per structure, and require the use of multi-million dollar &lt;a href=&quot;https://www.youtube.com/watch?v=WJKvDUo3KRk&quot;&gt;specialised equipment&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;38.355029585799&quot;&gt;
&lt;h5&gt;The ‘protein folding problem’&lt;/h5&gt;
&lt;p&gt;In his acceptance speech for the 1972 Nobel Prize in Chemistry, Christian Anfinsen &lt;a href=&quot;https://www.nobelprize.org/uploads/2018/06/anfinsen-lecture.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;famously postulated&lt;/a&gt; that, in theory, a protein’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Protein_primary_structure&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;amino acid sequence&lt;/a&gt; should fully determine its structure. This hypothesis sparked a five decade quest to be able to computationally predict a protein’s 3D structure based solely on its 1D amino acid sequence as a complementary alternative to these expensive and time consuming experimental methods. A major challenge, however, is that the number of ways a protein could theoretically fold before settling into its final 3D structure is astronomical. In 1969 Cyrus Levinthal noted that it would take longer than the age of the known universe to enumerate all possible configurations of a typical protein by brute force calculation – Levinthal estimated &lt;a href=&quot;https://web.archive.org/web/20110523080407/http://www-miller.ch.cam.ac.uk/levinthal/levinthal.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;10^300 possible conformations&lt;/a&gt; for a typical protein. Yet in nature, proteins fold spontaneously, some within milliseconds – a dichotomy sometimes referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Levinthal%27s_paradox&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Levinthal’s paradox&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;

&lt;div class=&quot;video-copy&quot;&gt;
&lt;h3 class=&quot;dm-h3&quot;&gt;Protein folding explained&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;38.302631578947&quot;&gt;
&lt;h5&gt;Results from the CASP14 assessment&lt;/h5&gt;
&lt;p&gt;In 1994, &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/prot.340230303&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Professor John Moult and Professor Krzysztof Fidelis founded CASP&lt;/a&gt; as a biennial blind assessment to catalyse research, monitor progress, and establish the state of the art in protein structure prediction. It is both the gold standard for assessing predictive techniques and a unique global community built on shared endeavour. Crucially, CASP chooses protein structures that have only very recently been experimentally determined (some were still awaiting determination at the time of the assessment) to be targets for teams to test their structure prediction methods against; they are not published in advance. Participants must blindly predict the structure of the proteins, and these predictions are subsequently compared to the ground truth experimental data when they become available. We’re indebted to CASP’s organisers and the whole community, not least the experimentalists whose structures enable this kind of rigorous assessment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;

&lt;div class=&quot;video-copy&quot;&gt;
&lt;h3 class=&quot;dm-h3&quot;&gt;AlphaFold: The making of a scientific breakthrough&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;41.638592750533&quot;&gt;
&lt;p&gt;The main metric used by CASP to measure the accuracy of predictions is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Global_distance_test&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Global Distance Test (GDT)&lt;/a&gt; which ranges from 0-100. In simple terms, GDT can be approximately thought of as the percentage of amino acid residues (beads in the protein chain) within a threshold distance from the correct position. According to &lt;a href=&quot;https://youtu.be/gg7WjuFs8F4?t=144&quot;&gt;Professor Moult&lt;/a&gt;, a score of around 90 GDT is informally considered to be competitive with results obtained from experimental methods.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://predictioncenter.org/casp14/zscores_final.cgi&quot;&gt;the results&lt;/a&gt; from the 14th CASP assessment, released today, our latest AlphaFold system achieves a median score of 92.4 GDT overall across all targets. This means that our predictions have an average error (&lt;a href=&quot;https://en.wikipedia.org/wiki/Root-mean-square_deviation_of_atomic_positions&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;RMSD&lt;/a&gt;) of approximately 1.6 &lt;a href=&quot;https://en.wikipedia.org/wiki/Angstrom&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Angstroms&lt;/a&gt;, which is comparable to the width of an atom (or 0.1 of a nanometer). Even for the very hardest protein targets, those in the most challenging &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/prot.25823&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;free-modelling category&lt;/a&gt;, AlphaFold achieves a median score of 87.0 GDT (&lt;a href=&quot;https://predictioncenter.org/decoysets2019/results.cgi&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;data available here&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/KKbgSsS1qIoesiy2Ws_WDsDSyGhTZgP9W3qZr-xS5ElnafEu80joptKmc2hgz01a6j6yIj5cvCnqz8bBfXG8BND44ZKJ_kv7tTHQAA=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/KKbgSsS1qIoesiy2Ws_WDsDSyGhTZgP9W3qZr-xS5ElnafEu80joptKmc2hgz01a6j6yIj5cvCnqz8bBfXG8BND44ZKJ_kv7tTHQAA=w1440&quot;/&gt; Improvements in the median accuracy of predictions in the free modelling category for the best team in each CASP, measured as best-of-5 GDT. &lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/J5RC0j1DeUWaNc5h6nGwJwsQSLUuTXINP6we2ymLJ_WUg9bH-hvfvI8WVFeghN-_YR69MryNK5O2rFcVNwz9PZePpBtLdwdshCGzLdM=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/J5RC0j1DeUWaNc5h6nGwJwsQSLUuTXINP6we2ymLJ_WUg9bH-hvfvI8WVFeghN-_YR69MryNK5O2rFcVNwz9PZePpBtLdwdshCGzLdM=w1440&quot;/&gt; Two examples of protein targets in the free modelling category. AlphaFold predicts highly accurate structures measured against experimental result. 
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;35.13353115727&quot;&gt;
&lt;p&gt;These exciting results open up the potential for biologists to use computational structure prediction as a core tool in scientific research. Our methods may prove especially helpful for important classes of proteins, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Membrane_protein&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;membrane proteins&lt;/a&gt;, that are very difficult to crystallise and therefore challenging to experimentally determine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-4&quot; readability=&quot;34&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-4&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-4 ng-star-inserted&quot;&gt;This computational work represents a stunning advance on the protein-folding problem, a 50-year-old grand challenge in biology. It has occurred decades before many people in the field would have predicted. It will be exciting to see the many ways in which it will fundamentally change biological research.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-4 ng-star-inserted&quot;&gt;Professor Venki Ramakrishnan&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-4 ng-star-inserted&quot;&gt;Nobel Laureate and President of the Royal Society&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;68.337903582486&quot;&gt;
&lt;h5&gt;Our approach to the protein folding problem&lt;/h5&gt;
&lt;p&gt;We first entered &lt;a href=&quot;https://www.predictioncenter.org/casp13&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CASP13&lt;/a&gt; in 2018 with our &lt;a href=&quot;https://deepmind.com/blog/article/AlphaFold-Using-AI-for-scientific-discovery&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;initial version of AlphaFold&lt;/a&gt;, which achieved the highest accuracy among participants. Afterwards, we &lt;a href=&quot;https://www.nature.com/articles/s41586-019-1923-7.epdf?author_access_token=Z_KaZKDqtKzbE7Wd5HtwI9RgN0jAjWel9jnR3ZoTv0MCcgAwHMgRx9mvLjNQdB2TlQQaa7l420UCtGo8vYQ39gg8lFWR9mAZtvsN_1PrccXfIbc6e-tGSgazNL_XdtQzn1PHfy21qdcxV7Pw-k3htw%3D%3D&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;published&lt;/a&gt; a paper on our CASP13 methods in Nature with associated &lt;a href=&quot;https://github.com/deepmind/deepmind-research/tree/master/alphafold_casp13&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;code&lt;/a&gt;, which has gone on to inspire &lt;a href=&quot;https://www.pnas.org/content/117/3/1496&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;other work&lt;/a&gt; and community-developed open source &lt;a href=&quot;https://github.com/dellacortelab/prospr&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;implementations&lt;/a&gt;. Now, new deep learning architectures we’ve developed have driven changes in our methods for CASP14, enabling us to achieve unparalleled levels of accuracy. These methods draw inspiration from the fields of biology, physics, and machine learning, as well as of course the work of many scientists in the protein folding field over the past half-century.&lt;/p&gt;
&lt;p&gt;A folded protein can be thought of as a “spatial graph”, where residues are the nodes and edges connect the residues in close proximity. This graph is important for understanding the physical interactions within proteins, as well as their evolutionary history. For the latest version of AlphaFold, used at CASP14, we created an attention-based neural network system, trained end-to-end, that attempts to interpret the structure of this graph, while reasoning over the implicit graph that it’s building. It uses evolutionarily related sequences, multiple sequence alignment (MSA), and a representation of amino acid residue pairs to refine this graph.&lt;/p&gt;
&lt;p&gt;By iterating this process, the system develops strong predictions of the underlying physical structure of the protein and is able to determine highly-accurate structures in a matter of days. Additionally, AlphaFold can predict which parts of each predicted protein structure are reliable using an internal confidence measure.&lt;/p&gt;
&lt;p&gt;We trained this system on publicly available data consisting of ~170,000 protein structures from the &lt;a href=&quot;https://www.rcsb.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;protein data bank&lt;/a&gt; together with &lt;a href=&quot;https://www.uniprot.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;large databases&lt;/a&gt; containing protein sequences of unknown structure. It uses approximately 128 &lt;a href=&quot;https://cloud.google.com/tpu/docs/types-zones&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;TPUv3 cores&lt;/a&gt; (roughly  equivalent to ~100-200 GPUs) run over a few weeks, which is a relatively modest amount of compute in the context of most large state-of-the-art models used in machine learning today. As with our CASP13 AlphaFold system, we are preparing a paper on our system to submit to a peer-reviewed journal in due course.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/pL18FAkwzN55iHvMt2W4XRGjueHWe0ILqX1Qm2e4qlPsK3yjDSott3LZIgSg2uqPPn7Zvu3hfxUtYtjDs3bM27zcF8AO_jYnfk8q=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/pL18FAkwzN55iHvMt2W4XRGjueHWe0ILqX1Qm2e4qlPsK3yjDSott3LZIgSg2uqPPn7Zvu3hfxUtYtjDs3bM27zcF8AO_jYnfk8q=w1440&quot;/&gt; An overview of the main neural network model architecture. The model operates over evolutionarily related protein sequences as well as amino acid residue pairs, iteratively passing information between both representations to generate a structure. 
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;63&quot;&gt;
&lt;h5&gt;The potential for real-world impact&lt;/h5&gt;
&lt;p&gt;When DeepMind started a decade ago, we hoped that one day AI breakthroughs would help serve as a platform to advance our understanding of fundamental scientific problems. Now, after 4 years of effort building AlphaFold, we’re starting to see that vision realised, with implications for areas like drug design and environmental sustainability.&lt;/p&gt;
&lt;p&gt;Professor Andrei Lupas, Director of the Max Planck Institute for Developmental Biology and a CASP assessor, let us know that, “AlphaFold’s astonishingly accurate models have allowed us to solve a protein structure we were stuck on for close to a decade, relaunching our effort to understand how signals are transmitted across cell membranes.”&lt;/p&gt;
&lt;p&gt;We’re optimistic about the impact AlphaFold can have on biological research and the wider world, and excited to collaborate with others to learn more about its potential in the years ahead. Alongside working on a peer-reviewed paper, we’re exploring how best to provide broader access to the system in a scalable way.&lt;/p&gt;
&lt;p&gt;In the meantime, we’re also looking into how protein structure predictions could contribute to our understanding of specific diseases with a small number of specialist groups, for example by helping to identify proteins that have malfunctioned and to reason about how they interact. These insights could enable more precise work on drug development, complementing existing experimental methods to find promising treatments faster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-5&quot; readability=&quot;35&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-5&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-5 ng-star-inserted&quot;&gt;AlphaFold is a once in a generation advance, predicting protein structures with incredible speed and precision. This leap forward demonstrates how computational methods are poised to transform research in biology and hold much promise for accelerating the drug discovery process.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-5 ng-star-inserted&quot;&gt;Arthur D. Levinson&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-5 ng-star-inserted&quot;&gt;PhD, Founder &amp;amp; CEO Calico, Former Chairman &amp;amp; CEO, Genentech&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;120.78598629094&quot;&gt;
&lt;p&gt;We’ve also seen signs that protein structure prediction could be useful in future pandemic response efforts, as one of many tools developed by the scientific community. Earlier this year, we &lt;a href=&quot;https://deepmind.com/research/open-source/computational-predictions-of-protein-structures-associated-with-COVID-19&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;predicted several protein structures&lt;/a&gt; of the SARS-CoV-2 virus, including ORF3a, whose structures were previously unknown. At CASP14, we predicted the structure of another coronavirus protein, &lt;a href=&quot;https://predictioncenter.org/casp14/gdtplot.cgi?group=205&amp;amp;models=first&amp;amp;target=T1064-D1&quot;&gt;ORF8&lt;/a&gt;. Impressively quick work by experimentalists has now confirmed the structures of both &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.06.17.156554v2&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ORF3a&lt;/a&gt; and &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.08.27.270637v1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ORF8&lt;/a&gt;. Despite their challenging nature and having very few related sequences, we achieved a high degree of accuracy on both of our predictions when compared to their experimentally determined structures.&lt;/p&gt;
&lt;p&gt;As well as accelerating understanding of known diseases, we’re excited about the potential for these techniques to explore the hundreds of millions of proteins we don’t currently have models for – a vast terrain of unknown biology. Since &lt;a href=&quot;https://www.youtube.com/watch?v=gG7uCskUOrA&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;DNA specifies the amino acid sequences&lt;/a&gt; that comprise protein structures, the &lt;a href=&quot;https://www.genome.gov/About-Genomics/Introduction-to-Genomics&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;genomics revolution&lt;/a&gt; has made it possible to read protein sequences from the natural world at massive scale – with 180 million protein sequences and counting in the Universal Protein database (&lt;a href=&quot;https://www.uniprot.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;UniProt&lt;/a&gt;). In contrast, given the experimental work needed to go from sequence to structure, only around 170,000 protein structures are in the Protein Data Bank (&lt;a href=&quot;http://pdb101.rcsb.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;PDB&lt;/a&gt;). Among the undetermined proteins may be some with new and exciting functions and – just as a telescope helps us see deeper into the unknown universe – techniques like AlphaFold may help us find them.&lt;/p&gt;
&lt;h5&gt;Unlocking new possibilities&lt;/h5&gt;
&lt;p&gt;AlphaFold is one of our most significant advances to date but, as with all scientific research, there are still many questions to answer. Not every structure we predict will be perfect. There’s still much to learn, including how multiple proteins form complexes, how they interact with &lt;a href=&quot;https://en.wikipedia.org/wiki/DNA&quot;&gt;DNA&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/RNA&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;RNA&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Small_molecule&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;small molecules&lt;/a&gt;, and how we can determine the precise location of all amino acid side chains. In collaboration with others, there’s also much to learn about how best to use these scientific discoveries in the development of new medicines, ways to manage the environment, and more.&lt;/p&gt;
&lt;p&gt;For all of us working on computational and machine learning methods in science, systems like AlphaFold demonstrate the stunning potential for AI as a tool to aid fundamental discovery. Just as 50 years ago Anfinsen laid out a challenge far beyond science’s reach at the time, there are many aspects of our universe that remain unknown. The progress announced today gives us further confidence that AI will become one of humanity’s most useful tools in expanding the frontiers of scientific knowledge, and we’re looking forward to the many years of hard work and discovery ahead!&lt;/p&gt;


&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Until we’ve published a paper on this work, please cite:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;High Accuracy Protein Structure Prediction Using Deep Learning&lt;/p&gt;
&lt;p&gt;John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Kathryn Tunyasuvunakool, Olaf Ronneberger, Russ Bates, Augustin Žídek, Alex Bridgland, Clemens Meyer, Simon A A Kohl, Anna Potapenko, Andrew J Ballard, Andrew Cowie, Bernardino Romera-Paredes, Stanislav Nikolov, Rishub Jain, Jonas Adler, Trevor Back, Stig Petersen, David Reiman, Martin Steinegger, Michalina Pacholska, David Silver, Oriol Vinyals, Andrew W Senior, Koray Kavukcuoglu, Pushmeet Kohli, Demis Hassabis.&lt;/p&gt;
&lt;p&gt;In Fourteenth Critical Assessment of Techniques for Protein Structure Prediction (Abstract Book), 30 November - 4 December 2020. Retrieved from &lt;a href=&quot;https://predictioncenter.org/casp14/doc/CASP14_Abstracts.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We’re right at the beginning of exploring how best to enable other groups to use our structure predictions, alongside preparing a peer-reviewed paper for publication. While our team won’t be able to respond to every enquiry, if AlphaFold may be relevant to your work, please submit a few lines about it to &lt;a href=&quot;mailto:alphafold@deepmind.com&quot;&gt;alphafold@deepmind.com&lt;/a&gt;. We’ll be in contact if there’s scope for further exploration. &lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 30 Nov 2020 15:32:25 +0000</pubDate>
<dc:creator>felixr</dc:creator>
<og:type>website</og:type>
<og:title>AlphaFold: a solution to a 50-year-old grand challenge in biology</og:title>
<og:description>In a major scientific advance, the latest version of our AI system AlphaFold has been recognised as a solution to this grand challenge by the organisers of the biennial Critical Assessment of protein Structure Prediction (CASP) assessment. This breakthrough demonstrates the impact AI can have on scientific discovery and its potential to dramatically accelerate progress in some of the most fundamental fields that explain and shape our world.</og:description>
<og:image>https://lh3.googleusercontent.com/NxvP8uqle7ps9_pc42gx-EmqzbcN_cZKu82VuX2XdXdl0toT77YccuxQROhdygQXSElcCy2RRHHzvOOf9pXviEffJ-768DxepKPsZgw</og:image>
<og:url>/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</og:url>
<dc:language>ALL</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</dc:identifier>
</item>
<item>
<title>No one who got Moderna&amp;#039;s vaccine in trial developed severe Covid-19</title>
<link>https://www.sciencemag.org/news/2020/11/absolutely-remarkable-no-one-who-got-modernas-vaccine-trial-developed-severe-covid-19</link>
<guid isPermaLink="true" >https://www.sciencemag.org/news/2020/11/absolutely-remarkable-no-one-who-got-modernas-vaccine-trial-developed-severe-covid-19</guid>
<description>&lt;input type=&quot;hidden&quot; id=&quot;newsletterInterstitial&quot; name=&quot;&quot; value=&quot;5&quot;/&gt;&lt;div class=&quot;entity entity-paragraphs-item paragraphs-item-image&quot;&gt;
&lt;div class=&quot;figure__head&quot;&gt;&lt;img sizes=&quot;&quot; src=&quot;https://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/Moderna%20Trial-9915.jpg?itok=5oF7CkSA&quot; srcset=&quot;https://www.sciencemag.org/sites/default/files/styles/inline__450w__no_aspect/public/Moderna%20Trial-9915.jpg?itok=5oF7CkSA 1w, https://www.sciencemag.org/sites/default/files/styles/inline__699w__no_aspect/public/Moderna%20Trial-9915.jpg?itok=RIjaZz-B 700w, https://www.sciencemag.org/sites/default/files/styles/article_main_image_-_1280w__no_aspect_/public/Moderna%20Trial-9915.jpg?itok=5I8tGdcE 1280w&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;caption&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;caption__text&quot; readability=&quot;33&quot;&gt;
&lt;p&gt;This man in Ohio was among the tens of thousands who received Moderna’s experimental COVID-19 vaccine in a recent trial that demonstrated 94.1% efficacy.&lt;/p&gt;
&lt;/div&gt;
&lt;span class=&quot;credit&quot;&gt;University of Cincinatti Health&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;&lt;header class=&quot;article__header article__header--inline&quot; readability=&quot;27.05223880597&quot;&gt;
&lt;p class=&quot;byline byline--article&quot;&gt;By &lt;a href=&quot;https://www.sciencemag.org/author/jon-cohen&quot;&gt;Jon Cohen&lt;/a&gt;&lt;time&gt;Nov. 30, 2020 , 7:00 AM&lt;/time&gt;&lt;/p&gt;
&lt;/header&gt;&lt;p&gt;&lt;cite&gt;&lt;strong&gt;Science&lt;/strong&gt;&lt;/cite&gt;&lt;strong&gt;’s COVID-19 reporting is supported by the Pulitzer Center and the Heising-Simons Foundation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Continuing the spate of stunning news about COVID-19 vaccines, the biotech company Moderna announced the final results of the 30,000-person efficacy trial for its candidate in a press release today: Only 11 people who received two doses of the vaccine developed COVID-19 symptoms after being infected with the pandemic coronavirus, versus 185 symptomatic cases in a placebo group. That is an efficacy of 94.1%, the company says, far above what many vaccine scientists were expecting just a few weeks ago.&lt;/p&gt;
&lt;p&gt;More impressive still, Moderna’s candidate had 100% efficacy against severe disease. There were zero such COVID-19 cases among those vaccinated, but 30 in the placebo group. The company today plans to file a request for emergency use authorization (EUA) for its vaccine with the U.S. Food and Drug Administration (FDA), and is also seeking a similar green light from the European Medicines Agency.&lt;/p&gt;
&lt;h3 class=&quot;figure__hed&quot;&gt;Related&lt;/h3&gt;

&lt;p&gt;The data released today bolster an interim report from the company &lt;a href=&quot;https://www.sciencemag.org/news/2020/11/just-beautiful-another-covid-19-vaccine-newcomer-moderna-succeeds-large-scale-trial&quot;&gt;two weeks ago&lt;/a&gt; that only analyzed 95 total cases but produced similarly impressive efficacy. “I would still like to see all of the actual data, but what we’ve seen so far is absolutely remarkable,” says Paul Offit, a vaccine researcher at the Children’s Hospital of Philadelphia who is a member of an independent committee of vaccine experts that advises FDA.&lt;/p&gt;
&lt;p&gt;Moderna’s vaccine against SARS-CoV-2, the virus that causes COVID-19, relies on a novel technology that uses messenger RNA (mRNA) to code for a protein called spike that studs the surface of the pathogen. Pfizer and BioNTech have developed a similar mRNA vaccine against COVID-19 and also reported &lt;a href=&quot;https://www.sciencemag.org/news/2020/11/covid-19-vaccine-trial-complete-pfizer-and-biontech-update-their-promising-result&quot;&gt;excellent results&lt;/a&gt;, with an efficacy of 95%, in the final analysis of their 45,000-person trial. In that study, which ended after 170 cases of COVID-19 were identified, only 10 severe cases occurred, and just one was in the vaccinated group.&lt;/p&gt;
&lt;p&gt;Moderna and the Pfizer/BioNTech collaboration say their vaccines worked to about the same degree in all different groups, ethnicities, and genders. (More than 7000 participants in the Moderna trial were over age 65 and more than 5000 were under 65 but had diseases putting them at a higher risk of severe COVID-19; the study also included more than 11,000 people from communities of color.) That equal success is vital information for bodies trying to prioritize the use of the new vaccines, such as an &lt;a href=&quot;https://www.cdc.gov/vaccines/acip/index.html&quot;&gt;advisory panel&lt;/a&gt; to the Centers for Disease Control and Prevention (CDC) that is meeting tomorrow. The committee’s recommendations influence CDC’s decisions about vaccine prioritization, but individual states come up with their own guidelines.&lt;/p&gt;
&lt;p&gt;Moderna received $1 billion from the U.S. government’s Operation Warp Speed to help develop its mRNA vaccine. (Pfizer passed on such development money, but has signed an advanced purchase order for its vaccine with Warp Speed.) Moderna CEO Stéphane Bancel says all of the federal money went toward staging the clinical trials, and that without it, progress surely would have been delayed. Investors in May contributed another $1.3 billion to help the young company, which has no products on the market, build facilities to produce its vaccine.&lt;/p&gt;
&lt;p&gt;Pfizer filed an EUA request for its vaccine last week, which led FDA to announce it will convene a meeting of its &lt;a href=&quot;https://www.fda.gov/advisory-committees/advisory-committee-calendar/vaccines-and-related-biological-products-advisory-committee-december-10-2020-meeting-announcement&quot;&gt;vaccine advisory committee&lt;/a&gt; to discuss the data in depth on 10 December. Bancel says FDA has told the company it might convene the committee again as early as 17 December to review its EUA application. He says the agency could issue an EUA 24 to 72 hours later.&lt;/p&gt;
&lt;p&gt;Bancel imagines the Moderna vaccine, given its high efficacy against both mild and severe disease, will have the most impact if given to people at the greatest risk from SARS-CoV-2. “Give it to health care workers, give it to the elderly, give it to people with diabetes, overweight, heart disease,” he says. “A 25-year-old healthy man? Give him another vaccine.”&lt;/p&gt;
&lt;p&gt;Moderna plans to charge $32 to $37 per dose of the vaccine in developed countries, Bancel says, but will have cheaper pricing for other parts of the world. The company is negotiating with the COVID-19 Vaccines Global Access Facility, a nonprofit that aims to reduce global vaccine inequities by purchasing and distributing approved products. “We want to have this vaccine available at a tiered price for low-income countries,” he says.&lt;/p&gt;
&lt;p&gt;Bancel stresses that he wants other COVID-19 vaccines to succeed as well. “The world needs several manufacturers to make it to the finish line to stop this awful pandemic,” he says. U.K. pharma giant &lt;a href=&quot;https://www.sciencemag.org/news/2020/11/after-dosing-mix-latest-covid-19-vaccine-success-comes-big-question-mark&quot;&gt;AstraZeneca&lt;/a&gt;, in partnership with the University of Oxford, has reported preliminary evidence of efficacy for its COVID-19 vaccine, as has the &lt;a href=&quot;https://www.sciencemag.org/news/2020/11/more-data-its-covid-19-vaccine-russia-institute-offers-new-evidence-success&quot;&gt;Gamaleya&lt;/a&gt; Research Institute of Epidemiology and Microbiology in Russia.&lt;/p&gt;
&lt;p&gt;Moderna hopes to provide the U.S. government with 20 million doses by the end of the year, and Pfizer says it should have 50 million doses to split between the United States and other countries that made advanced purchase agreements.&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 14:00:25 +0000</pubDate>
<dc:creator>jakozaur</dc:creator>
<og:type>article</og:type>
<og:url>https://www.sciencemag.org/news/2020/11/absolutely-remarkable-no-one-who-got-modernas-vaccine-trial-developed-severe-covid-19</og:url>
<og:title>‘Absolutely remarkable’: No one who got Moderna’s vaccine in trial developed severe COVID-19</og:title>
<og:description>Biotech will ask FDA for emergency approval as final results from efficacy trial back up initial claim of vaccine success</og:description>
<og:image>https://www.sciencemag.org/sites/default/files/styles/article_main_large/public/Moderna%20Trial-9915.jpg?itok=mn3tguwR</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sciencemag.org/news/2020/11/absolutely-remarkable-no-one-who-got-modernas-vaccine-trial-developed-severe-covid-19</dc:identifier>
</item>
<item>
<title>Apple Create ML: Creating an Image Classifier Model</title>
<link>https://developer.apple.com/documentation/createml/creating_an_image_classifier_model</link>
<guid isPermaLink="true" >https://developer.apple.com/documentation/createml/creating_an_image_classifier_model</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://developer.apple.com/documentation/createml/creating_an_image_classifier_model&quot;&gt;https://developer.apple.com/documentation/createml/creating_an_image_classifier_model&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25253598&quot;&gt;https://news.ycombinator.com/item?id=25253598&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 232&lt;/p&gt;
&lt;p&gt;# Comments: 52&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 13:46:51 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developer.apple.com/documentation/createml/creating_an_image_classifier_model</dc:identifier>
</item>
<item>
<title>AlphaFold: a solution to a 50-year-old grand challenge in biology</title>
<link>https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</link>
<guid isPermaLink="true" >https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</guid>
<description>&lt;div class=&quot;dm-section user-content&quot; readability=&quot;43.707652622528&quot;&gt;
&lt;p&gt;&lt;strong&gt;Proteins are essential to life, supporting practically all its functions. They are large complex molecules, made up of chains of amino acids, and &lt;a href=&quot;https://www.youtube.com/watch?v=wvTv8TqWC48&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;what a protein does largely depends on its unique 3D structure&lt;/a&gt;. Figuring out what shapes proteins fold into is known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Protein_folding&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;“protein folding problem”&lt;/a&gt;, and has stood as a grand challenge in biology for the past 50 years. In a major scientific advance, the latest version of our AI system &lt;a href=&quot;https://deepmind.com/research/case-studies/alphafold&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;AlphaFold&lt;/a&gt; has been recognised as a solution to this grand challenge by the organisers of the biennial Critical Assessment of protein Structure Prediction (&lt;a href=&quot;https://predictioncenter.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CASP&lt;/a&gt;). This breakthrough demonstrates the impact AI can have on scientific discovery and its potential to dramatically accelerate progress in some of the most fundamental fields that explain and shape our world.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A protein’s shape is closely linked with its function, and the ability to predict this structure unlocks a greater understanding of what it does and how it works. Many of the world’s greatest challenges, like developing treatments for diseases or finding enzymes that break down industrial waste, are fundamentally tied to proteins and the role they play.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-1&quot; readability=&quot;33&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-1&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-1 ng-star-inserted&quot;&gt;We have been stuck on this one problem – how do proteins fold up – for nearly 50 years. To see DeepMind produce a solution for this, having worked personally on this problem for so long and after so many stops and starts, wondering if we’d ever get there, is a very special moment.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-1 ng-star-inserted&quot;&gt;Professor John Moult&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-1 ng-star-inserted&quot;&gt;Co-Founder and Chair of CASP, University of Maryland&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;29.08547008547&quot;&gt;
&lt;p&gt;This has been a focus of intensive scientific research for many years, using a variety of experimental techniques to examine and determine protein structures, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Nuclear_magnetic_resonance&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;nuclear magnetic resonance&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/X-ray_crystallography&quot;&gt;X-ray crystallography&lt;/a&gt;. These techniques, as well as newer methods like &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryogenic_electron_microscopy&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;cryo-electron microscopy&lt;/a&gt;, depend on extensive trial and error, which can &lt;a href=&quot;https://www.youtube.com/watch?v=gLsC4wlrR2A&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;take years of painstaking and laborious work&lt;/a&gt; per structure, and require the use of multi-million dollar &lt;a href=&quot;https://www.youtube.com/watch?v=WJKvDUo3KRk&quot;&gt;specialised equipment&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;38.355029585799&quot;&gt;
&lt;h5&gt;The ‘protein folding problem’&lt;/h5&gt;
&lt;p&gt;In his acceptance speech for the 1972 Nobel Prize in Chemistry, Christian Anfinsen &lt;a href=&quot;https://www.nobelprize.org/uploads/2018/06/anfinsen-lecture.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;famously postulated&lt;/a&gt; that, in theory, a protein’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Protein_primary_structure&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;amino acid sequence&lt;/a&gt; should fully determine its structure. This hypothesis sparked a five decade quest to be able to computationally predict a protein’s 3D structure based solely on its 1D amino acid sequence as a complementary alternative to these expensive and time consuming experimental methods. A major challenge, however, is that the number of ways a protein could theoretically fold before settling into its final 3D structure is astronomical. In 1969 Cyrus Levinthal noted that it would take longer than the age of the known universe to enumerate all possible configurations of a typical protein by brute force calculation – Levinthal estimated &lt;a href=&quot;https://web.archive.org/web/20110523080407/http://www-miller.ch.cam.ac.uk/levinthal/levinthal.html&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;10^300 possible conformations&lt;/a&gt; for a typical protein. Yet in nature, proteins fold spontaneously, some within milliseconds – a dichotomy sometimes referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Levinthal%27s_paradox&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Levinthal’s paradox&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;

&lt;div class=&quot;video-copy&quot;&gt;
&lt;h3 class=&quot;dm-h3&quot;&gt;Protein folding explained&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;38.302631578947&quot;&gt;
&lt;h5&gt;Results from the CASP14 assessment&lt;/h5&gt;
&lt;p&gt;In 1994, &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/prot.340230303&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Professor John Moult and Professor Krzysztof Fidelis founded CASP&lt;/a&gt; as a biennial blind assessment to catalyse research, monitor progress, and establish the state of the art in protein structure prediction. It is both the gold standard for assessing predictive techniques and a unique global community built on shared endeavour. Crucially, CASP chooses protein structures that have only very recently been experimentally determined (some were still awaiting determination at the time of the assessment) to be targets for teams to test their structure prediction methods against; they are not published in advance. Participants must blindly predict the structure of the proteins, and these predictions are subsequently compared to the ground truth experimental data when they become available. We’re indebted to CASP’s organisers and the whole community, not least the experimentalists whose structures enable this kind of rigorous assessment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;

&lt;div class=&quot;video-copy&quot;&gt;
&lt;h3 class=&quot;dm-h3&quot;&gt;AlphaFold: The making of a scientific breakthrough&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;41.638592750533&quot;&gt;
&lt;p&gt;The main metric used by CASP to measure the accuracy of predictions is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Global_distance_test&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Global Distance Test (GDT)&lt;/a&gt; which ranges from 0-100. In simple terms, GDT can be approximately thought of as the percentage of amino acid residues (beads in the protein chain) within a threshold distance from the correct position. According to &lt;a href=&quot;https://youtu.be/gg7WjuFs8F4?t=144&quot;&gt;Professor Moult&lt;/a&gt;, a score of around 90 GDT is informally considered to be competitive with results obtained from experimental methods.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://predictioncenter.org/casp14/zscores_final.cgi&quot;&gt;the results&lt;/a&gt; from the 14th CASP assessment, released today, our latest AlphaFold system achieves a median score of 92.4 GDT overall across all targets. This means that our predictions have an average error (&lt;a href=&quot;https://en.wikipedia.org/wiki/Root-mean-square_deviation_of_atomic_positions&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;RMSD&lt;/a&gt;) of approximately 1.6 &lt;a href=&quot;https://en.wikipedia.org/wiki/Angstrom&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Angstroms&lt;/a&gt;, which is comparable to the width of an atom (or 0.1 of a nanometer). Even for the very hardest protein targets, those in the most challenging &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/abs/10.1002/prot.25823&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;free-modelling category&lt;/a&gt;, AlphaFold achieves a median score of 87.0 GDT (&lt;a href=&quot;https://predictioncenter.org/decoysets2019/results.cgi&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;data available here&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/KKbgSsS1qIoesiy2Ws_WDsDSyGhTZgP9W3qZr-xS5ElnafEu80joptKmc2hgz01a6j6yIj5cvCnqz8bBfXG8BND44ZKJ_kv7tTHQAA=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/KKbgSsS1qIoesiy2Ws_WDsDSyGhTZgP9W3qZr-xS5ElnafEu80joptKmc2hgz01a6j6yIj5cvCnqz8bBfXG8BND44ZKJ_kv7tTHQAA=w1440&quot;/&gt; Improvements in the median accuracy of predictions in the free modelling category for the best team in each CASP, measured as best-of-5 GDT. &lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/J5RC0j1DeUWaNc5h6nGwJwsQSLUuTXINP6we2ymLJ_WUg9bH-hvfvI8WVFeghN-_YR69MryNK5O2rFcVNwz9PZePpBtLdwdshCGzLdM=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/J5RC0j1DeUWaNc5h6nGwJwsQSLUuTXINP6we2ymLJ_WUg9bH-hvfvI8WVFeghN-_YR69MryNK5O2rFcVNwz9PZePpBtLdwdshCGzLdM=w1440&quot;/&gt; Two examples of protein targets in the free modelling category. AlphaFold predicts highly accurate structures measured against experimental result. 
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;35.13353115727&quot;&gt;
&lt;p&gt;These exciting results open up the potential for biologists to use computational structure prediction as a core tool in scientific research. Our methods may prove especially helpful for important classes of proteins, such as &lt;a href=&quot;https://en.wikipedia.org/wiki/Membrane_protein&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;membrane proteins&lt;/a&gt;, that are very difficult to crystallise and therefore challenging to experimentally determine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-4&quot; readability=&quot;34&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-4&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-4 ng-star-inserted&quot;&gt;This computational work represents a stunning advance on the protein-folding problem, a 50-year-old grand challenge in biology. It has occurred decades before many people in the field would have predicted. It will be exciting to see the many ways in which it will fundamentally change biological research.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-4 ng-star-inserted&quot;&gt;Professor Venki Ramakrishnan&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-4 ng-star-inserted&quot;&gt;Nobel Laureate and President of the Royal Society&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;68.337903582486&quot;&gt;
&lt;h5&gt;Our approach to the protein folding problem&lt;/h5&gt;
&lt;p&gt;We first entered &lt;a href=&quot;https://www.predictioncenter.org/casp13&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;CASP13&lt;/a&gt; in 2018 with our &lt;a href=&quot;https://deepmind.com/blog/article/AlphaFold-Using-AI-for-scientific-discovery&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;initial version of AlphaFold&lt;/a&gt;, which achieved the highest accuracy among participants. Afterwards, we &lt;a href=&quot;https://www.nature.com/articles/s41586-019-1923-7.epdf?author_access_token=Z_KaZKDqtKzbE7Wd5HtwI9RgN0jAjWel9jnR3ZoTv0MCcgAwHMgRx9mvLjNQdB2TlQQaa7l420UCtGo8vYQ39gg8lFWR9mAZtvsN_1PrccXfIbc6e-tGSgazNL_XdtQzn1PHfy21qdcxV7Pw-k3htw%3D%3D&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;published&lt;/a&gt; a paper on our CASP13 methods in Nature with associated &lt;a href=&quot;https://github.com/deepmind/deepmind-research/tree/master/alphafold_casp13&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;code&lt;/a&gt;, which has gone on to inspire &lt;a href=&quot;https://www.pnas.org/content/117/3/1496&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;other work&lt;/a&gt; and community-developed open source &lt;a href=&quot;https://github.com/dellacortelab/prospr&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;implementations&lt;/a&gt;. Now, new deep learning architectures we’ve developed have driven changes in our methods for CASP14, enabling us to achieve unparalleled levels of accuracy. These methods draw inspiration from the fields of biology, physics, and machine learning, as well as of course the work of many scientists in the protein folding field over the past half-century.&lt;/p&gt;
&lt;p&gt;A folded protein can be thought of as a “spatial graph”, where residues are the nodes and edges connect the residues in close proximity. This graph is important for understanding the physical interactions within proteins, as well as their evolutionary history. For the latest version of AlphaFold, used at CASP14, we created an attention-based neural network system, trained end-to-end, that attempts to interpret the structure of this graph, while reasoning over the implicit graph that it’s building. It uses evolutionarily related sequences, multiple sequence alignment (MSA), and a representation of amino acid residue pairs to refine this graph.&lt;/p&gt;
&lt;p&gt;By iterating this process, the system develops strong predictions of the underlying physical structure of the protein and is able to determine highly-accurate structures in a matter of days. Additionally, AlphaFold can predict which parts of each predicted protein structure are reliable using an internal confidence measure.&lt;/p&gt;
&lt;p&gt;We trained this system on publicly available data consisting of ~170,000 protein structures from the &lt;a href=&quot;https://www.rcsb.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;protein data bank&lt;/a&gt; together with &lt;a href=&quot;https://www.uniprot.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;large databases&lt;/a&gt; containing protein sequences of unknown structure. It uses approximately 128 &lt;a href=&quot;https://cloud.google.com/tpu/docs/types-zones&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;TPUv3 cores&lt;/a&gt; (roughly  equivalent to ~100-200 GPUs) run over a few weeks, which is a relatively modest amount of compute in the context of most large state-of-the-art models used in machine learning today. As with our CASP13 AlphaFold system, we are preparing a paper on our system to submit to a peer-reviewed journal in due course.&lt;/p&gt;
&lt;/div&gt;
&lt;img alt=&quot;&quot; srcset=&quot;https://lh3.googleusercontent.com/pL18FAkwzN55iHvMt2W4XRGjueHWe0ILqX1Qm2e4qlPsK3yjDSott3LZIgSg2uqPPn7Zvu3hfxUtYtjDs3bM27zcF8AO_jYnfk8q=w2048 2x&quot; src=&quot;https://lh3.googleusercontent.com/pL18FAkwzN55iHvMt2W4XRGjueHWe0ILqX1Qm2e4qlPsK3yjDSott3LZIgSg2uqPPn7Zvu3hfxUtYtjDs3bM27zcF8AO_jYnfk8q=w1440&quot;/&gt; An overview of the main neural network model architecture. The model operates over evolutionarily related protein sequences as well as amino acid residue pairs, iteratively passing information between both representations to generate a structure. 
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;63&quot;&gt;
&lt;h5&gt;The potential for real-world impact&lt;/h5&gt;
&lt;p&gt;When DeepMind started a decade ago, we hoped that one day AI breakthroughs would help serve as a platform to advance our understanding of fundamental scientific problems. Now, after 4 years of effort building AlphaFold, we’re starting to see that vision realised, with implications for areas like drug design and environmental sustainability.&lt;/p&gt;
&lt;p&gt;Professor Andrei Lupas, Director of the Max Planck Institute for Developmental Biology and a CASP assessor, let us know that, “AlphaFold’s astonishingly accurate models have allowed us to solve a protein structure we were stuck on for close to a decade, relaunching our effort to understand how signals are transmitted across cell membranes.”&lt;/p&gt;
&lt;p&gt;We’re optimistic about the impact AlphaFold can have on biological research and the wider world, and excited to collaborate with others to learn more about its potential in the years ahead. Alongside working on a peer-reviewed paper, we’re exploring how best to provide broader access to the system in a scalable way.&lt;/p&gt;
&lt;p&gt;In the meantime, we’re also looking into how protein structure predictions could contribute to our understanding of specific diseases with a small number of specialist groups, for example by helping to identify proteins that have malfunctioned and to reason about how they interact. These insights could enable more precise work on drug development, complementing existing experimental methods to find promising treatments faster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;content-card-body&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;content-wrapper ng-tns-c39-5&quot; readability=&quot;35&quot;&gt;
&lt;blockquote class=&quot;ng-tns-c39-5&quot;&gt;
&lt;h4 class=&quot;dm-h4 ng-tns-c39-5 ng-star-inserted&quot;&gt;AlphaFold is a once in a generation advance, predicting protein structures with incredible speed and precision. This leap forward demonstrates how computational methods are poised to transform research in biology and hold much promise for accelerating the drug discovery process.&lt;/h4&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;caption title ng-tns-c39-5 ng-star-inserted&quot;&gt;Arthur D. Levinson&lt;/p&gt;
&lt;p class=&quot;caption subtitle ng-tns-c39-5 ng-star-inserted&quot;&gt;PhD, Founder &amp;amp; CEO Calico, Former Chairman &amp;amp; CEO, Genentech&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;dm-section user-content&quot; readability=&quot;120.78598629094&quot;&gt;
&lt;p&gt;We’ve also seen signs that protein structure prediction could be useful in future pandemic response efforts, as one of many tools developed by the scientific community. Earlier this year, we &lt;a href=&quot;https://deepmind.com/research/open-source/computational-predictions-of-protein-structures-associated-with-COVID-19&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;predicted several protein structures&lt;/a&gt; of the SARS-CoV-2 virus, including ORF3a, whose structures were previously unknown. At CASP14, we predicted the structure of another coronavirus protein, &lt;a href=&quot;https://predictioncenter.org/casp14/gdtplot.cgi?group=205&amp;amp;models=first&amp;amp;target=T1064-D1&quot;&gt;ORF8&lt;/a&gt;. Impressively quick work by experimentalists has now confirmed the structures of both &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.06.17.156554v2&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ORF3a&lt;/a&gt; and &lt;a href=&quot;https://www.biorxiv.org/content/10.1101/2020.08.27.270637v1&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;ORF8&lt;/a&gt;. Despite their challenging nature and having very few related sequences, we achieved a high degree of accuracy on both of our predictions when compared to their experimentally determined structures.&lt;/p&gt;
&lt;p&gt;As well as accelerating understanding of known diseases, we’re excited about the potential for these techniques to explore the hundreds of millions of proteins we don’t currently have models for – a vast terrain of unknown biology. Since &lt;a href=&quot;https://www.youtube.com/watch?v=gG7uCskUOrA&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;DNA specifies the amino acid sequences&lt;/a&gt; that comprise protein structures, the &lt;a href=&quot;https://www.genome.gov/About-Genomics/Introduction-to-Genomics&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;genomics revolution&lt;/a&gt; has made it possible to read protein sequences from the natural world at massive scale – with 180 million protein sequences and counting in the Universal Protein database (&lt;a href=&quot;https://www.uniprot.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;UniProt&lt;/a&gt;). In contrast, given the experimental work needed to go from sequence to structure, only around 170,000 protein structures are in the Protein Data Bank (&lt;a href=&quot;http://pdb101.rcsb.org/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;PDB&lt;/a&gt;). Among the undetermined proteins may be some with new and exciting functions and – just as a telescope helps us see deeper into the unknown universe – techniques like AlphaFold may help us find them.&lt;/p&gt;
&lt;h5&gt;Unlocking new possibilities&lt;/h5&gt;
&lt;p&gt;AlphaFold is one of our most significant advances to date but, as with all scientific research, there are still many questions to answer. Not every structure we predict will be perfect. There’s still much to learn, including how multiple proteins form complexes, how they interact with &lt;a href=&quot;https://en.wikipedia.org/wiki/DNA&quot;&gt;DNA&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/RNA&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;RNA&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Small_molecule&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;small molecules&lt;/a&gt;, and how we can determine the precise location of all amino acid side chains. In collaboration with others, there’s also much to learn about how best to use these scientific discoveries in the development of new medicines, ways to manage the environment, and more.&lt;/p&gt;
&lt;p&gt;For all of us working on computational and machine learning methods in science, systems like AlphaFold demonstrate the stunning potential for AI as a tool to aid fundamental discovery. Just as 50 years ago Anfinsen laid out a challenge far beyond science’s reach at the time, there are many aspects of our universe that remain unknown. The progress announced today gives us further confidence that AI will become one of humanity’s most useful tools in expanding the frontiers of scientific knowledge, and we’re looking forward to the many years of hard work and discovery ahead!&lt;/p&gt;


&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;Until we’ve published a paper on this work, please cite:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;High Accuracy Protein Structure Prediction Using Deep Learning&lt;/p&gt;
&lt;p&gt;John Jumper, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Kathryn Tunyasuvunakool, Olaf Ronneberger, Russ Bates, Augustin Žídek, Alex Bridgland, Clemens Meyer, Simon A A Kohl, Anna Potapenko, Andrew J Ballard, Andrew Cowie, Bernardino Romera-Paredes, Stanislav Nikolov, Rishub Jain, Jonas Adler, Trevor Back, Stig Petersen, David Reiman, Martin Steinegger, Michalina Pacholska, David Silver, Oriol Vinyals, Andrew W Senior, Koray Kavukcuoglu, Pushmeet Kohli, Demis Hassabis.&lt;/p&gt;
&lt;p&gt;In Fourteenth Critical Assessment of Techniques for Protein Structure Prediction (Abstract Book), 30 November - 4 December 2020. Retrieved from &lt;a href=&quot;https://predictioncenter.org/casp14/doc/CASP14_Abstracts.pdf&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We’re right at the beginning of exploring how best to enable other groups to use our structure predictions, alongside preparing a peer-reviewed paper for publication. While our team won’t be able to respond to every enquiry, if AlphaFold may be relevant to your work, please submit a few lines about it to &lt;a href=&quot;mailto:alphafold@deepmind.com&quot;&gt;alphafold@deepmind.com&lt;/a&gt;. We’ll be in contact if there’s scope for further exploration. &lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 30 Nov 2020 13:31:25 +0000</pubDate>
<dc:creator>momeara</dc:creator>
<og:type>website</og:type>
<og:title>AlphaFold: a solution to a 50-year-old grand challenge in biology</og:title>
<og:description>In a major scientific advance, the latest version of our AI system AlphaFold has been recognised as a solution to this grand challenge by the organisers of the biennial Critical Assessment of protein Structure Prediction (CASP) assessment. This breakthrough demonstrates the impact AI can have on scientific discovery and its potential to dramatically accelerate progress in some of the most fundamental fields that explain and shape our world.</og:description>
<og:image>https://lh3.googleusercontent.com/NxvP8uqle7ps9_pc42gx-EmqzbcN_cZKu82VuX2XdXdl0toT77YccuxQROhdygQXSElcCy2RRHHzvOOf9pXviEffJ-768DxepKPsZgw</og:image>
<og:url>/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</og:url>
<dc:language>ALL</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology</dc:identifier>
</item>
<item>
<title>E Foundation – deGoogled unGoogled smartphone OS and online services</title>
<link>https://e.foundation/</link>
<guid isPermaLink="true" >https://e.foundation/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://e.foundation/&quot;&gt;https://e.foundation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25253129&quot;&gt;https://news.ycombinator.com/item?id=25253129&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 301&lt;/p&gt;
&lt;p&gt;# Comments: 106&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 12:37:34 +0000</pubDate>
<dc:creator>lelf</dc:creator>
<og:url>https://e.foundation/</og:url>
<og:type>website</og:type>
<og:title>e Foundation - deGoogled unGoogled smartphone operating systems and online services - your data is your data</og:title>
<og:description>your data is YOUR data</og:description>
<og:image>https://e.foundation/wp-content/uploads/2019/11/home-main-phone.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://e.foundation/</dc:identifier>
</item>
<item>
<title>Writing Rust the Elixir Way</title>
<link>https://kutt.it/Pq33h1</link>
<guid isPermaLink="true" >https://kutt.it/Pq33h1</guid>
<description>&lt;p&gt;It's not a secret that I'm a big fan of &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt;, so when I started doing Rust development I tried to bring some ideas from Elixir to the world of &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;. This post describes some of the tools I'm building to bring the power of Elixir to Rust.&lt;/p&gt;
&lt;h2&gt; What makes Elixir so great?&lt;/h2&gt;
&lt;p&gt;It's hard to just pick a few of them, but I believe that Elixir's biggest advantage comes from using &lt;a href=&quot;https://www.erlang.org/&quot;&gt;Erlang&lt;/a&gt; as the underlying virtual machine, specially from these 2 properties:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Massive concurrency&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fault tolerance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt; Massive concurrency&lt;/h3&gt;
&lt;p&gt;This is something hard to explain until you experience it yourself. I learned early in my career that you should &lt;strong&gt;never&lt;/strong&gt; create a thread while handling a request. Threads are heavy, expensive and too many of them can bring your whole machine down. In most cases it's enough to use a &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_pool&quot;&gt;thread pool&lt;/a&gt;, but this approach fails once the number of concurrent tasks outgrows the number of threads in the pool.&lt;/p&gt;
&lt;p&gt;Let's look at an example: imagine a rust application that just creates 2000 threads that wake up every 100 ms and go right back to sleep.&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight rust&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2_000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_millis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_secs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Even though the threads don't do anything, just running this on my MacBook forces it to reboot after a few seconds. This makes it impractical to have massive concurrency with threads. There are many solutions to this problem. The one chosen by Elixir is to abstract concurrent tasks with something called &lt;a href=&quot;https://elixir-lang.org/getting-started/processes.html&quot;&gt;Processes&lt;/a&gt;. They are extremely lightweight, so even running &lt;a href=&quot;https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections&quot;&gt;2 million of them&lt;/a&gt; doesn't present a challenge.&lt;/p&gt;
&lt;h3&gt; Massive concurrency in Rust&lt;/h3&gt;
&lt;p&gt;You can achieve &lt;a href=&quot;https://github.com/actix/actix-web&quot;&gt;amazing concurrency and performance&lt;/a&gt; using &lt;strong&gt;async Rust&lt;/strong&gt;, but working with async Rust is not as simple as writing regular Rust code and it just doesn't provide you the same features as Elixir Processes do.&lt;/p&gt;
&lt;p&gt;After thinking for a long time how I could make something that reassembles Elixir Processes in Rust I came up with the idea to introduce an intermediate step, &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt;. WebAssembly is a low level bytecode specification that Rust can target. The idea was simple, instead of compiling Rust for x86-64 you would compile it to the WASM target. From there I would build a set of libraries and a WebAssembly runtime that exposes the concept of &lt;strong&gt;Rust Processes&lt;/strong&gt;. Contrary to operating system processes or threads, they are lightweight with small memory footprints, fast to create and terminate, and the scheduling overhead is low. In other languages they are also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Green_threads&quot;&gt;green threads&lt;/a&gt; and &lt;a href=&quot;https://golangbot.com/goroutines/&quot;&gt;goroutines&lt;/a&gt;, but I will call them processes to stay close to Elixir's naming convention.&lt;/p&gt;
&lt;p&gt;That was the first step towards &lt;a href=&quot;https://github.com/lunatic-lang/lunatic&quot;&gt;Lunatic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's look at the same Rust example, but now implemented with Lunatic. At the same time we will crank up the number of concurrent processes to 20k.&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight rust&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lunatic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Channel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20_000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.receive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;To run this you will need to compile this Rust code to a &lt;code&gt;.wasm&lt;/code&gt; file first:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;
&lt;code&gt;○ →  cargo build --release --target=wasm32-wasi
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then run it with:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;
&lt;code&gt;○ →  lunaticvm example.wasm
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Contrary to the previous example this runs without hiccups on my Late 2013 Macbook and the CPU utilisation is minimal, even if we are using 10x more concurrent tasks. Let's examine what is exactly happening here.&lt;/p&gt;
&lt;p&gt;The processes spawned by Lunatic are actually taking full advantage of the power provided by async Rust. They are scheduled on top of a &lt;a href=&quot;https://docs.rs/smol/1.2.4/smol/struct.Executor.html&quot;&gt;work stealing async executor&lt;/a&gt;, the same used by &lt;a href=&quot;https://github.com/async-rs/async-std&quot;&gt;async-std&lt;/a&gt;. Calling &lt;code&gt;Process::sleep(100)&lt;/code&gt; will actually invoke &lt;a href=&quot;https://docs.rs/smol/1.2.4/smol/struct.Timer.html#method.at&quot;&gt;smol's &lt;code&gt;at&lt;/code&gt; function&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Wait a second! How does this work without the &lt;code&gt;.await&lt;/code&gt; keyword, you may ask yourself. Lunatic takes the same approach as Go, Erlang and the earlier implementation of Rust based on green threads. It creates a tiny stack for executing the process and grows it when your applications needs more. This is a bit less efficient than calculating the exact stack size during compile time as async Rust is doing, but a reasonable tradeoff I would say.&lt;/p&gt;
&lt;p&gt;Now you can write regular &lt;strong&gt;blocking code&lt;/strong&gt;, but the executor will take care of moving your process off the execution thread if you are waiting, so you never block a thread.&lt;/p&gt;
&lt;p&gt;As we saw earlier, scheduling threads is a hard task for the operating system. To replace one thread that's being executed with another one, a lot of work needs to be done (including saving all the registers and some thread state). However, switching between Lunatic Processes does only the minimal amount of work possible. With an idea pioneered by the &lt;a href=&quot;https://github.com/edef1c/libfringe&quot;&gt;libfringe library&lt;/a&gt; and using some &lt;a href=&quot;https://github.com/rust-lang/rust/issues/72016&quot;&gt;asm! macro&lt;/a&gt; magic, Lunatic lets the Rust compiler figure out the minimal number of registers to be preserved during context switches. &lt;strong&gt;This makes scheduling Lunatic processes zero-cost&lt;/strong&gt;. On my machine usually 1ns, equivalent to a function call.&lt;/p&gt;
&lt;p&gt;Another benefit of scheduling the Processes in user space instead of using threads is that other applications will continue running normally on your machine, even if your app misbehaves.&lt;/p&gt;
&lt;p&gt;Now that we saw how Lunatic allows you to create applications with massive concurrency, let's look at fault tolerance.&lt;/p&gt;
&lt;h3&gt; Fault tolerance&lt;/h3&gt;
&lt;p&gt;Maybe the most known Eralng/Elixir philosophy is &lt;a href=&quot;https://medium.com/@vamsimokari/erlang-let-it-crash-philosophy-53486d2a6da&quot;&gt;&quot;let it crash&quot;&lt;/a&gt;. If you are building complex systems it's impossible to predict all failure scenarios. Inevitably something is going to fail in your application, but this failure should not bring down the whole thing.&lt;/p&gt;
&lt;p&gt;Elixir Processes are completely isolated and can only communicate through messages with each other. This allows you to design your application in a way that failure stays contained inside one process and doesn't affect the rest of them.&lt;/p&gt;
&lt;p&gt;Lunatic provides even stronger guarantees than Erlang here.&lt;br/&gt;&lt;strong&gt;Each Lunatic process gets their own heap, stack and syscalls.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's look at an example of a simple TCP echo server in Lunatic:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;14&quot;&gt;
&lt;pre class=&quot;highlight rust&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lunatic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Once WASI gets networking support you will be able to use Rust's `std::net::TcpStream` instead.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BufRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;TcpListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;127.0.0.1:1337&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listener&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf_reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;BufReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;buf_reader&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.read_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.as_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This application listens on &lt;code&gt;localhost:1337&lt;/code&gt; for tcp connections, spawns a process to handle each incoming connection and just echoes incoming lines.&lt;/p&gt;
&lt;p&gt;You can test it using &lt;code&gt;telnet&lt;/code&gt;:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;
&lt;code&gt;○ → telnet 127.0.0.1 1337
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
Hello world
Hello world
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The first thing you will notice is that we don't use any &lt;code&gt;async&lt;/code&gt; or &lt;code&gt;.await&lt;/code&gt; keywords, even though this application will fully utilise Rust's async IO under the hood.&lt;/p&gt;
&lt;p&gt;Also, the tcp connection becomes fully encapsulated in the Process,&lt;br/&gt;even if we called into unsafe C code that crashes:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight rust&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;crashing_c_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The crash is only contained to one connection in this case. It's not possible to implement something like this in Elixir, because if a call to a C function crashes it will take the whole virtual machine with it.&lt;/p&gt;
&lt;p&gt;Another feature exclusive to Lunatic is the possibility to limit processes' syscall access. If we replaced the previous &lt;code&gt;spawn&lt;/code&gt; call with:&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;highlight js-code-highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight rust&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// Process::spawn_without_fs is not implemented yet.&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spawn_without_fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tcp_stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;any code called from inside the &lt;code&gt;handle&lt;/code&gt; function would be forbidden from using syscalls for filesystem access. This works also for C dependencies, because the enforcement is happening at such a low level. It allows you to express the sandboxing requirements of a Process and to use any dependency without fear. I'm not aware of any other runtime that allows you to do this.&lt;/p&gt;
&lt;h3&gt; The future&lt;/h3&gt;
&lt;p&gt;This is just a teaser of the capabilities that &lt;a href=&quot;https://github.com/lunatic-lang/lunatic&quot;&gt;Lunatic&lt;/a&gt; will provide. There are many more features coming. Once you have this foundation, a new world of possibilities opens up. Some of the features I'm excited about:&lt;/p&gt;
&lt;ul readability=&quot;3&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The ability to transparently move Processes from one machine to another. The programming model relies on processes communicating through messages and if these messages are sent locally or between different computers on a network it doesn't really matter.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Hot reloading. Now that we have the WASM bytecode as an in-between step it becomes possible to just generate new JIT machine code from it and replace it while the whole system is still running.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Running complete applications compiled to WASM as a process. One example would be redirecting file read/writes from the application to tcp streams, as we are in complete charge of syscalls. The advantage here is that you are modelling the execution environment with code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Lunatic is still in its early days, so there is a lot of development left to do. If you are excited about it or have some ideas you would like to use Lunatic for, reach out to me over email &lt;a href=&quot;https://mailto:me@kolobara.com/&quot;&gt;me@kolobara.com&lt;/a&gt; or on twitter &lt;a href=&quot;https://twitter.com/bkolobara&quot;&gt;@bkolobara&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also want to use this opportunity to say a big thank you to the teams working on Rust, &lt;a href=&quot;https://wasmer.io/&quot;&gt;Wasmer&lt;/a&gt;, &lt;a href=&quot;https://wasmtime.dev/&quot;&gt;Wasmtime&lt;/a&gt;, &lt;a href=&quot;https://github.com/bytecodealliance/lucet&quot;&gt;Lucet&lt;/a&gt; and &lt;a href=&quot;https://wascc.dev/&quot;&gt;waSCC&lt;/a&gt;. It would be impossible to build Lunatic without all the hard work put into this projects.&lt;/p&gt;
&lt;p&gt;P.S. If you would like to learn more about the magic of Erlang and Elixir, this is one of my favorite talks about it by &lt;a href=&quot;https://www.youtube.com/watch?v=JvBT4XBdoUE&quot;&gt;Saša Jurić: The Soul of Erlang and Elixir&lt;/a&gt;. Seriously, go and watch it!&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 12:29:18 +0000</pubDate>
<dc:creator>bkolobara</dc:creator>
<og:type>article</og:type>
<og:url>https://dev.to/bkolobara/writing-rust-the-elixir-way-2lm8</og:url>
<og:title>Writing Rust the Elixir way</og:title>
<og:description>It's not a secret that I'm a big fan of Elixir, so when I started doing Rust development I tried to b...</og:description>
<og:image>https://res.cloudinary.com/practicaldev/image/fetch/s--ZnHq5PIr--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/hs9lk9l14bd2ayet6iu3.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://dev.to/bkolobara/writing-rust-the-elixir-way-2lm8</dc:identifier>
</item>
<item>
<title>A free-as-in-freedom re-implementation of Google’s Android user space</title>
<link>https://microg.org/</link>
<guid isPermaLink="true" >https://microg.org/</guid>
<description>&lt;div class=&quot;jumbotron&quot;&gt;


&lt;h3&gt;A free-as-in-freedom re-implementation of Google’s proprietary Android user space apps and libraries.&lt;/h3&gt;
&lt;/div&gt;

&lt;h2&gt;About&lt;/h2&gt;
&lt;p&gt;The linux-based open-source mobile operating system Android is not only the most popular mobile operating system in the world, it’s also on the way to becoming a proprietary operating system. How is that?&lt;/p&gt;
&lt;p&gt;While the core operating system is still released as part of the Android Open Source Project, the majority of core apps are not. It gets worse: More and more libraries and APIs are only available on phones that run various Google apps pre-installed, effectively locking third-party apps to the Google ecosystem. For these reasons Android is &lt;a href=&quot;http://arstechnica.com/gadgets/2013/10/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/4/&quot;&gt;described as being&lt;/a&gt; a “&lt;em&gt;look but don’t touch&lt;/em&gt;” kind of open.&lt;/p&gt;
&lt;p&gt;At this point, several popular open-source applications already require some of Google’s proprietary libraries to be installed. Increasing demand in the free software community in addition to severe problems in Google’s proprietary software discovered by the Android modding community, have led to the development of a free software clone of Google’s proprietary core libraries and applications - the microG Project was born.&lt;/p&gt;
&lt;p&gt;Although most microG components are far from complete, users are amazed by the results. Free software users got extended application support, privacy-caring users can reduce or monitor data that is sent to Google and especially older phones can expect some battery life improvements. microG is not only used on real devices, but also replaces Google tools in test emulators and is even used in virtual mobile infrastructure.&lt;/p&gt;

&lt;h2&gt;Components&lt;/h2&gt;
&lt;ul readability=&quot;7.6446280991736&quot;&gt;&lt;li readability=&quot;2.3538461538462&quot;&gt;
&lt;p&gt;&lt;strong&gt;Service Core (GmsCore)&lt;/strong&gt; is a library app, providing the functionality required to run apps that use Google Play Services or Google Maps Android API (v2).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microg/android_packages_apps_GmsCore/wiki&quot;&gt;More details and installation instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.5327868852459&quot;&gt;
&lt;p&gt;&lt;strong&gt;Services Framework Proxy (GsfProxy)&lt;/strong&gt; is a small helper utility to allow apps developed for Google Cloud to Device Messaging (C2DM) to use the compatible Google Cloud Messaging service included with GmsCore.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microg/android_packages_apps_GmsCore/wiki&quot;&gt;Read GmsCore documentation for details&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.5813953488372&quot;&gt;
&lt;p&gt;&lt;strong&gt;Unified Network Location Provider (UnifiedNlp)&lt;/strong&gt; is a library that provides Wi-Fi- and Cell-tower-based geolocation to applications that use Google’s network location provider. It is included in GmsCore but can also run independently on most Android systems.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microg/android_packages_apps_UnifiedNlp/blob/master/README.md&quot;&gt;More details and installation instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2.1818181818182&quot;&gt;
&lt;p&gt;&lt;strong&gt;Maps API (mapsv1)&lt;/strong&gt; is a system library, providing the same functionality as now deprecated Google Maps API (v1).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/microg/android_frameworks_mapsv1&quot;&gt;More details and installation instructions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Store (Phonesky)&lt;/strong&gt; is a frontend application providing access to the Google Play Store to download and update applications. Development is in early stage and there is no usable application yet.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Since 2020, &lt;a href=&quot;https://e.foundation/&quot;&gt;/e/ Foundation&lt;/a&gt; supports the development of microG.&lt;br/&gt;&lt;a href=&quot;https://e.foundation&quot;&gt;&lt;img src=&quot;https://microg.org/img/efoundation.png&quot; height=&quot;150&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In 2019, microG was supported by &lt;a href=&quot;https://prototypefund.de/project/microg/&quot;&gt;PrototypeFund&lt;/a&gt;, sponsored by the Federal Ministry of Education and Research.&lt;br/&gt;&lt;a href=&quot;https://prototypefund.de/project/microg/&quot;&gt;&lt;img src=&quot;https://microg.org/img/protofund.jpg&quot; height=&quot;150&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 30 Nov 2020 11:05:26 +0000</pubDate>
<dc:creator>doener</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://microg.org/</dc:identifier>
</item>
<item>
<title>GNU Octave 6.1.0</title>
<link>https://www.gnu.org/software/octave/NEWS-6.1.html</link>
<guid isPermaLink="true" >https://www.gnu.org/software/octave/NEWS-6.1.html</guid>
<description>&lt;div id=&quot;&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intersect&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setdiff&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setxor&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;union&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unique&lt;/code&gt; functions accept a new sorting option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;stable&quot;&lt;/code&gt; which will return output values in the same order as the input, rather than in ascending order.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Complex RESTful web services can now be accessed by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webread&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webwrite&lt;/code&gt; functions alongside with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weboptions&lt;/code&gt; structure. One major feature is the support for cookies to enable RESTful communication with the web service.&lt;/p&gt;
&lt;p&gt;Additionally, the system web browser can be opened by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;web&lt;/code&gt; function.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linspace&lt;/code&gt; function now produces symmetrical sequences when the endpoints are symmetric. This is more intuitive and also compatible with recent changes made in Matlab R2019b.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;6.8529411764706&quot;&gt;
&lt;p&gt;The underlying algorithm of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rand&lt;/code&gt; function has been changed. For single precision outputs, the algorithm has been fixed so that it produces values strictly in the range (0, 1). Previously, it could occasionally generate the right endpoint value of 1 (See &lt;a href=&quot;https://savannah.gnu.org/bugs/?41742&quot;&gt;bug #41742&lt;/a&gt;). In addition, the new implementation uses a uniform interval between floating point values in the range (0, 1) rather than targeting a uniform density (# of random integers / length along real number line).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Numerical integration has been improved. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quadv&lt;/code&gt; function has been re-written so that it can compute integrands of periodic functions. At the same time, performance is better with ~3.5X fewer function evaluations required. A bug in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quadgk&lt;/code&gt; that caused complex path integrals specified with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Waypoints&quot;&lt;/code&gt; to occasionally be calculated in the opposite direction was fixed.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;edit&lt;/code&gt; function option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;editinplace&quot;&lt;/code&gt; now defaults to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; and the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;home&quot;&lt;/code&gt; now defaults to the empty matrix &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[]&lt;/code&gt;. Files will no longer be copied to the user’s HOME directory for editing. The old behavior can be restored by setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;editinplace&quot;&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;home&quot;&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;~/octave&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;19&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; command supports two new options: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uppercase&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lowercase&lt;/code&gt; (default). With the default, print a lowercase ‘e’ for the exponent character in scientific notation and lowercase ‘a-f’ for the hex digits representing 10-15. With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uppercase&lt;/code&gt;, print ‘E’ and ‘A-F’ instead. The previous uppercase formats, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;G&lt;/code&gt;, no longer control the case of the output.&lt;/p&gt;
&lt;p&gt;Additionally, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt; command can be called with multiple options for controlling the format, spacing, and case in arbitrary order. For example:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;  format long e uppercase loose
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note, in the case of multiple competing format options the rightmost one is used, and, in case of an error, the previous format remains unchanged.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;7&quot;&gt;
&lt;p&gt;L-value references (e.g., increment (++), decrement (–), and all in-place assignment operators (+=, -=, *=, /=, etc.)) are no longer allowed in anonymous functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;New warnings have been added about questionable uses of the colon ‘:’ range operator. Each has a new warning ID so that it can be disabled if desired.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Octave:colon-complex-argument&lt;/code&gt; : when any arg is complex&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Octave:colon-nonscalar-argument&lt;/code&gt; : when any arg is non-scalar&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;regexp&lt;/code&gt; and related functions now correctly handle and &lt;em&gt;require&lt;/em&gt; strings in UTF-8 encoding. As with any other function that requires strings to be encoded in Octave’s native encoding, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;native2unicode&lt;/code&gt; to convert from your preferred locale. For example, the copyright symbol in UTF-8 is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;native2unicode (169, &quot;latin1&quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;The startup file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;octaverc&lt;/code&gt; can now be located in the platform dependent location for user local configuration files (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${XDG_CONFIG_HOME}/octave/octaverc&lt;/code&gt; on Unix-like operating systems or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%APPDATA%\octave\octaverc&lt;/code&gt; on Windows).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The command&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;dbstop in CLASS at METHOD
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;now works to set breakpoints in classdef constructors and methods.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The use of Qt4 for graphics and the GUI is deprecated in Octave version 6 and no further bug fixes will be made. Qt4 support will be removed completely in Octave version 7.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;legend&lt;/code&gt; function has been entirely rewritten. This fixes a number of historical bugs, and also implements new properties such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;AutoUpdate&quot;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;NumColumns&quot;&lt;/code&gt;. The gnuplot toolkit—which is no longer actively maintained—still uses the old legend function.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;axis&lt;/code&gt; function was updated which resolved 10 bugs affecting axes to which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;equal&quot;&lt;/code&gt; had been applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;Graphic primitives now accept a color property value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;none&quot;&lt;/code&gt; which is useful when a particular primitive needs to be hidden (for example, the Y-axis of an axes object with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;ycolor&quot; = &quot;none&quot;&lt;/code&gt;) without hiding the entire primitive &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;visibility&quot; = &quot;off&quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;A new property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;FontSmoothing&quot;&lt;/code&gt; has been added to text and axes objects that controls whether anti-aliasing is used during the rendering of characters. The default is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;on&quot;&lt;/code&gt; which produces smooth, more visually appealing text.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The figure property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;windowscrollwheelfcn&quot;&lt;/code&gt;is now implemented. This makes it possible to provide a callback function to be executed when users manipulate the mouse wheel on a given figure.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The figure properties &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;pointer&quot;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;pointershapecdata&quot;&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;pointershapehotspot&quot;&lt;/code&gt; are now implemented. This makes it possible to change the shape of the cursor (pointer in Matlab-speak) displayed in a plot window.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The figure property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;paperpositionmode&quot;&lt;/code&gt; now has the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;auto&quot;&lt;/code&gt; rather than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;manual&quot;&lt;/code&gt;. This change is more intuitive and is Matlab compatible.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The appearance of patterned lines &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;LineStyle&quot; = &quot;:&quot;|&quot;--&quot;|&quot;-.&quot;&lt;/code&gt; has been improved for small widths (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;LineWidth&quot;&lt;/code&gt; less than 1.5 pixels) which is a common scenario.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Printing to EPS files now uses a tight bounding box (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;-tight&quot;&lt;/code&gt; argument to print) by default. This makes more sense for EPS files which are normally embedded within other documents, and is Matlab compatible. If necessary use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;-loose&quot;&lt;/code&gt; option to reproduce figures as they appeared in previous versions of Octave.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;The following print devices are no longer officially supported: cdr, corel, aifm, ill, cgm, hpgl, mf and dxf. A warning will be thrown when using those devices, and the code for supporting those formats will eventually be removed from a future version of Octave.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The placement of text subscripts and superscripts has been re-engineered and now produces visually attractive results similar to Latex.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;div id=&quot;&quot;&gt;&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;The function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unique&lt;/code&gt; now returns column index vectors for the second and third outputs. When duplicate values are present, the default index to return is now the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;first&quot;&lt;/code&gt; occurrence. The previous Octave behavior, or Matlab behavior from releases prior to R2012b, can be obtained by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;legacy&quot;&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setdiff&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;rows&quot;&lt;/code&gt; argument now returns Matlab compatible results. The previous Octave behavior, or Matlab behavior from releases prior to R2012b, can be obtained by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;legacy&quot;&lt;/code&gt; flag.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;The functions &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intersect&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setxor&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;union&lt;/code&gt; now accept a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;legacy&quot;&lt;/code&gt; flag which changes the index values (second and third outputs) as well as the orientation of all outputs to match Matlab releases prior to R2012b.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;The function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;streamtube&lt;/code&gt; is Matlab compatible and plots tubes along streamlines which are scaled by the vector field divergence. The Octave-only extension &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ostreamtube&lt;/code&gt; can be used to visualize the flow expansion and contraction of the vector field due to the local crossflow divergence.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The interpreter now supports handles to nested functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;The graphics properties &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;LineWidth&quot;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;MarkerSize&quot;&lt;/code&gt; are now measured in points, &lt;em&gt;not&lt;/em&gt; pixels. Compared to previous versions of Octave, some lines and markers will appear 4/3 larger.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;The meta.class property “SuperClassList” has been renamed “Superclasslist” for Matlab compatibility. The original name will exist as an alias until Octave version 8.1.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Inline functions created by the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inline&lt;/code&gt; are now of type “inline” when interrogated with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class&lt;/code&gt; function. In previous versions of Octave, the class returned was “function_handle”. This change is Matlab compatible. Inline functions are deprecated in both Matlab and Octave and support may eventually be removed. Anonymous functions can be used to replace all instances of inline functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;The function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javaaddpath&lt;/code&gt; now prepends new directories to the existing dynamic classpath by default. To append them instead, use the new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;-end&quot;&lt;/code&gt; argument. Multiple directories may now be specified in a cell array of strings.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;An undocumented function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gui_mainfcn&lt;/code&gt; has been added, for compatibility with figures created with Matlab’s GUIDE.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Several validator functions of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mustBe*&lt;/code&gt; have been added. See the list of new functions below.&lt;/p&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;p&gt;The following functions and properties have been deprecated in Octave 6 and will be removed from Octave 8 (or whatever version is the second major release after 6):&lt;/p&gt;&lt;p&gt;The following functions and properties were deprecated in Octave 4.4 and have been removed from Octave 6.&lt;/p&gt;</description>
<pubDate>Mon, 30 Nov 2020 10:55:16 +0000</pubDate>
<dc:creator>freddypaulo</dc:creator>
<og:title>GNU Octave Version 6</og:title>
<og:description>GNU Octave is a programming language for scientific computing.</og:description>
<og:image>https://www.gnu.org/software/octave/img/octave-logo.png</og:image>
<og:type>website</og:type>
<og:url>https://www.gnu.org/software/octave/NEWS-6.1.html</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.gnu.org/software/octave/NEWS-6.1.html</dc:identifier>
</item>
</channel>
</rss>