<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How Qualcomm shook down the cell phone industry for almost 20 years</title>
<link>https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/</link>
<guid isPermaLink="true" >https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/qualcomm-enforcer-800x450.jpg&quot; alt=&quot;How Qualcomm shook down the cell phone industry for almost 20 years&quot;/&gt;&lt;div class=&quot;caption-credit&quot;&gt;Getty / Aurich Lawson&lt;/div&gt;
&lt;aside id=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;94 posters participating, including story author&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;94 posters participating, including story author&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;140&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 94 posters participating, including story author&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;In 2005, Apple contacted Qualcomm as a potential supplier for modem chips in the first iPhone. Qualcomm's response was unusual: a letter demanding that Apple sign a patent licensing agreement before Qualcomm would even consider supplying chips.&lt;/p&gt;
&lt;p&gt;&quot;I'd spent 20 years in the industry, I had never seen a letter like this,&quot; said Tony Blevins, Apple's vice president of procurement.&lt;/p&gt;
&lt;p&gt;Most suppliers are eager to talk to new customers—especially customers as big and prestigious as Apple. But Qualcomm wasn't like other suppliers; it enjoyed a dominant position in the market for cellular chips. That gave Qualcomm a lot of leverage, and the company wasn't afraid to use it.&lt;/p&gt;
&lt;p&gt;Blevins' comments came when he &lt;a href=&quot;https://www.eetimes.com/document.asp?doc_id=1334169#&quot;&gt;testified earlier this year&lt;/a&gt; in the Federal Trade Commission's blockbuster antitrust case against Qualcomm. The FTC &lt;a href=&quot;https://arstechnica.com/tech-policy/2017/01/feds-sue-qualcomm-for-anti-competitive-patent-licensing/&quot;&gt;filed this lawsuit in 2017&lt;/a&gt; partly at the urging of Apple, which had chafed under Qualcomm's wireless chip dominance for a decade.&lt;/p&gt;
&lt;p&gt;Last week, a California federal judge provided the FTC and Apple with sweet vindication. In a &lt;a href=&quot;https://www.courtlistener.com/recap/gov.uscourts.cand.306945/gov.uscourts.cand.306945.1490.0.pdf&quot;&gt;scathing 233-page opinion&lt;/a&gt; [PDF], Judge Lucy Koh ruled that Qualcomm's aggressive licensing tactics had violated American antitrust law.&lt;/p&gt;
&lt;p&gt;I read every word of Judge Koh's book-length opinion, which portrays Qualcomm as a ruthless monopolist. The legal document outlines a nearly 20-year history of overcharging smartphone makers for cellular chips. Qualcomm structured its contracts with smartphone makers in ways that made it almost impossible for other chipmakers to challenge Qualcomm's dominance. Customers who didn't go along with Qualcomm's one-sided terms were threatened with an abrupt and crippling loss of access to modem chips.&lt;/p&gt;
&lt;p&gt;&quot;Qualcomm has monopoly power over certain cell phone chips, and they use that monopoly power to charge people too much money,&quot; says Charles Duan, a patent expert at the free-market R Street Institute. &quot;Instead of just charging more for the chips themselves, they required people to buy a patent license and overcharged for the patent license.&quot;&lt;/p&gt;
&lt;p&gt;Now, all of that dominance might be coming to an end. In her ruling, Koh ordered Qualcomm to stop threatening customers with chip cutoffs. Qualcomm must now re-negotiate all of its agreements with customers and license its patents to competitors on reasonable terms. And if Koh's ruling survives the appeals process, it could produce a truly competitive market for wireless chips for the first time in this century.&lt;/p&gt;
&lt;h2&gt;Qualcomm’s perfect profit machine&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/3592008599_2153558597_o.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;960&quot; data-width=&quot;1280&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/3592008599_2153558597_o-640x480.jpg&quot; width=&quot;640&quot; height=&quot;480&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/3592008599_2153558597_o-1280x960.jpg 2x&quot;/&gt;&lt;/a&gt;


&lt;p&gt;Different cellular networks operate on different wireless networking standards, and these standards change every few years. For much of the last 20 years, Qualcomm has enjoyed a lead—and in some cases a stranglehold—on chips that support major cellular standards. So if a smartphone company aspired to sell its wares around the world, it had little choice but to do business with Qualcomm.&lt;/p&gt;
&lt;p&gt;For example, in the early 2010s Qualcomm enjoyed a big lead on chips for the CDMA standards favored by Verizon and Sprint in the US and some other carriers overseas. Qualcomm Chief Technology Officer James Thompson bluntly explained in an internal 2014 email to CEO Steve Mollenkopf how this gave the company leverage over Apple.&lt;/p&gt;
&lt;p&gt;&quot;We are the only supplier today that can give them a global launch,&quot; Thompson wrote, according to court documents. &quot;In fact, without us they would lose big parts of North America, Japan and China. That would really hurt them.&quot;&lt;/p&gt;
&lt;p&gt;It wasn't just Apple. BlackBerry was in a similar predicament around 2010. In a deposition, BlackBerry executive John Grubbs stated that without access to Qualcomm's chips, &quot;30 percent of our device sales would have gone away overnight if we couldn't have supplied CDMA devices.&quot;&lt;/p&gt;
&lt;p&gt;Over the last two decades, Qualcomm has had deals in place with most of the leading cell phone makers, including LG, Sony, Samsung, Huawei, Motorola, Lenovo, ZTE, and Nokia. These deals gave Qualcomm enormous leverage over these companies—leverage that allowed Qualcomm to extract patent royalty rates that were far higher than those earned by other companies with similar patent portfolios.&lt;/p&gt;
&lt;p&gt;Qualcomm's patent licensing fees were calculated based on the value of the entire phone, not just the value of chips that embodied Qualcomm's patented technology. This effectively meant that Qualcomm got a cut of every component of a smartphone—most of which had nothing to do with Qualcomm's cellular patents.&lt;/p&gt;
&lt;p&gt;&quot;Qualcomm charges us more than everybody else put together,&quot; Apple executive Jeff Williams said. &quot;We've never seen such a significant licensing fee tied to any other IP we license,&quot; said Motorola's Todd Madderom.&lt;/p&gt;
&lt;p&gt;Internal Qualcomm documents supported these claims. One showed that Qualcomm's patent licensing operation brought in $7.7 billion in 2016—more than the combined patent licensing revenue of 12 other companies with significant patent portfolios.&lt;/p&gt;
&lt;h2&gt;No license, no chips&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/snapdragon-8cx-compute-platform-chip-front.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;2266&quot; data-width=&quot;3654&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/snapdragon-8cx-compute-platform-chip-front-640x397.jpg&quot; width=&quot;640&quot; height=&quot;397&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/snapdragon-8cx-compute-platform-chip-front-1280x794.jpg 2x&quot;/&gt;&lt;/a&gt;


&lt;p&gt;These high royalties reflected an unusual negotiating tactic called &quot;no license, no chips.&quot; No one could buy Qualcomm's cellular chips unless they first signed a license to Qualcomm's patent portfolio. And the terms of these patent deals were heavily tilted in Qualcomm's favor.&lt;/p&gt;
&lt;p&gt;Once a phone maker had signed its first deal with Qualcomm, Qualcomm gained even more leverage. Qualcomm had the right to unilaterally terminate a smartphone maker's chip supply once the patent licensing deal expired.&lt;/p&gt;
&lt;p&gt;&quot;If we are unable to source the modem, we are unable to ship the handset,&quot; said Motorola executive Todd Madderom in a deposition. &quot;It takes many months of engineering work to design a replacement solution, if there is even a viable one on the market that supports the need.&quot;&lt;/p&gt;
&lt;p&gt;That made Qualcomm's customers extremely vulnerable as they neared the expiration of a patent licensing deal. If a customer tried to negotiate more favorable terms—to say nothing of formally challenging Qualcomm's patent claims in court—Qualcomm could abruptly cut off the company's chip supply.&lt;/p&gt;
&lt;p&gt;&quot;We explained that we were contemplating terminating the license,&quot; Lenovo executive Ira Blumberg testified during the trial. A senior Qualcomm executive &quot;was very calm about it, and said we should feel free to do that, but if we did, we would no longer be able to purchase Qualcomm chips.&quot;&lt;/p&gt;
&lt;p&gt;&quot;You're looking at months and months, if not a year or more, without supply,&quot; Blumberg said in a deposition. That &quot;would be, if not fatal, then nearly fatal to almost any company in this business.&quot;&lt;/p&gt;
&lt;p&gt;Judge Koh found that Qualcomm used this tactic over and over again over the last 20 years: Qualcomm threatened to cut off Samsung's chip supply in 2001, LG's chip supply in 2004, Sony and ZTE's chip supplies in 2012, Huawei and Lenovo's chip supplies in 2013, and Motorola's chip supply in 2015.&lt;/p&gt;
&lt;h2&gt;Qualcomm’s chip deals boxed out competitors&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/01/getty-phone-encryption.jpg&quot; class=&quot;enlarge&quot; data-height=&quot;1414&quot; data-width=&quot;2121&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/01/getty-phone-encryption-640x427.jpg&quot; width=&quot;640&quot; height=&quot;427&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2018/01/getty-phone-encryption-1280x853.jpg 2x&quot;/&gt;&lt;/a&gt;


&lt;p&gt;An obvious question is how Qualcomm maintained its stranglehold over the supply of modem chips. Partly, Qualcomm employed talented engineers and spent billions of dollars keeping its chips on the cutting edge.&lt;/p&gt;
&lt;p&gt;Qualcomm also bolstered its dominant position by selling systems on a chip that included a CPU and other functions as well as modem functionality. This yielded significant cost and power savings, and it was hard for smaller chipmakers to compete with.&lt;/p&gt;
&lt;p&gt;But besides these technical reasons, Qualcomm also structured its agreements with customers to make it difficult for other companies to break into the cellular modem chip business.&lt;/p&gt;
&lt;p&gt;Qualcomm's first weapon against competitors: patent licensing terms requiring customers to pay a royalty on every phone sold—not just phones that contained Qualcomm's wireless chips. This gave Qualcomm an inherent advantage in competition with other chipmakers. If another chipmaker tried to undercut Qualcomm's chips on price, Qualcomm could easily afford to cut the price of its own chips, knowing that the customer would still be paying Qualcomm a hefty patent licensing fee on every phone.&lt;/p&gt;
&lt;p&gt;Judge Koh draws a direct parallel to licensing behavior that got Microsoft in legal trouble in the 1990s. Microsoft would offer PC makers a discount if they agreed to pay Microsoft a licensing fee for every PC sold—whether or not the PC shipped with a copy of MS-DOS. This effectively meant that a PC maker had to pay twice if it shipped a PC running a non-Microsoft operating system. In 1999, a federal judge &lt;a href=&quot;https://law.justia.com/cases/federal/district-courts/FSupp2/87/1244/2307586/&quot;&gt;ruled&lt;/a&gt; that a reasonable jury could conclude this arrangement violated antitrust law by making it difficult for Microsoft's competitors to break into the market.&lt;/p&gt;

&lt;p&gt;And some of Qualcomm's licensing deals included terms that explicitly discouraged companies from using non-Qualcomm wireless chips. Qualcomm would offer cell phone makers rebates on every Qualcomm chip they sold. But cell phone makers would only get those rebates if they used Qualcomm chips for at least 85 percent—or in some cases even 100 percent—of the phones they sold.&lt;/p&gt;
&lt;p&gt;For example, Apple signed a deal with Qualcomm in 2013 that effectively guaranteed that Apple would exclusively use Qualcomm's wireless chips. Under the deal, Qualcomm paid Apple hundreds of millions of dollars in rebates and marketing incentives between 2013 and 2016. However, Qualcomm would stop making those payments if Apple started selling an iPhone or iPad with a non-Qualcomm cellular chip.&lt;/p&gt;
&lt;p&gt;Apple was even required to pay back some of those funds if it used non-Qualcomm cellular chips before February 2016. One internal Qualcomm email calculated that Apple would owe $645 million if it launched an iPhone with a non-Qualcomm cellular chip in 2015.&lt;/p&gt;
&lt;p&gt;Qualcomm made similar deals with other major cell phone makers. In 2003, Qualcomm signed a 10-year deal granting Huawei a reduced royalty rate of 2.65 percent if Huawei purchased 100 percent of its CDMA chips for the Chinese market from Qualcomm. If Huawei bought non-Qualcomm CDMA chips, the royalty rate jumped to five percent or more.&lt;/p&gt;
&lt;p&gt;A 2004 deal gave LG rebates if LG purchased at least 85 percent of its CDMA chips from Qualcomm. The deal also required LG to pay a higher patent royalty rate when it sold phones with non-Qualcomm cellular chips. A 2018 deal makes incentive payments to Samsung if the company buys 100 percent of its &quot;premium&quot; cellular chips from Qualcomm—as well as lower thresholds (the exact percentages are redacted) for lower-tier chips.&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 20:21:35 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<og:url>https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/</og:url>
<og:title>How Qualcomm shook down the cell phone industry for almost 20 years</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2019/05/qualcomm-enforcer-760x380.jpg</og:image>
<og:description>We did a deep-dive into the 233-page ruling declaring Qualcomm a monopolist.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/tech-policy/2019/05/how-qualcomm-shook-down-the-cell-phone-industry-for-almost-20-years/</dc:identifier>
</item>
<item>
<title>SaaS CTO Security Checklist</title>
<link>https://www.sqreen.com/checklists/saas-cto-security-checklist</link>
<guid isPermaLink="true" >https://www.sqreen.com/checklists/saas-cto-security-checklist</guid>
<description>&lt;p&gt;Your office may be secured, but you will eventually have to receive external people for a party or a meeting. Someone with physical access to an employee computer can do a lot of harm in a very short amount of time, so locking all computers is a great habit. If you get in the habit of locking your machine at the office, you’ll be unlikely to forget to also do it in a Starbucks or at a meetup.&lt;/p&gt;
&lt;p&gt;Many organizations make it a game to catch fellow employees’ computers unlocked. This is a good way to reinforce the habit of locking your computer for everyone. At Sqreen, for example, if someone catches another person’s laptop unlocked while they’re AFK, they can type “Cookies!” in that person’s Slack. That person will then have to bring in cookies for the office!&lt;/p&gt;
&lt;p&gt;Read more:&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 20:13:16 +0000</pubDate>
<dc:creator>vinnyglennon</dc:creator>
<og:url>https://www.sqreen.com/checklists/saas-cto-security-checklist.html</og:url>
<og:title>SaaS CTO Security Checklist | Sqreen</og:title>
<og:image>https://www.sqreen.com/img/NEW/share/share-cto.jpg</og:image>
<og:description>Learn how to protect your SaaS applications with the SaaS CTO security checklist. Select your startup stage and use these rules to improve your application security, infrastructure security and more.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sqreen.com/checklists/saas-cto-security-checklist</dc:identifier>
</item>
<item>
<title>Block Fingerprinting with Firefox</title>
<link>https://blog.mozilla.org/firefox/how-to-block-fingerprinting-with-firefox/</link>
<guid isPermaLink="true" >https://blog.mozilla.org/firefox/how-to-block-fingerprinting-with-firefox/</guid>
<description>&lt;p&gt;If you wonder why you keep seeing the same ad, over and over, the answer could be fingerprinting.&lt;/p&gt;
&lt;p&gt;Fingerprinting is a type of online tracking that’s different from cookies or ordinary trackers. This digital fingerprint is created when a company makes a unique profile of your computer, software, add-ons, and even preferences. Your settings like the screen you use, the fonts installed on your computer, and even your choice of a web browser can all be used to create a fingerprint.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-1418&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/firefox/files/2019/05/fingerprinting.png&quot; alt=&quot;&quot; width=&quot;1200&quot; height=&quot;660&quot; srcset=&quot;https://blog.mozilla.org/firefox/files/2019/05/fingerprinting.png 1200w, https://blog.mozilla.org/firefox/files/2019/05/fingerprinting-300x165.png 300w, https://blog.mozilla.org/firefox/files/2019/05/fingerprinting-768x422.png 768w, https://blog.mozilla.org/firefox/files/2019/05/fingerprinting-600x330.png 600w, https://blog.mozilla.org/firefox/files/2019/05/fingerprinting-1000x550.png 1000w&quot; sizes=&quot;(max-width: 1200px) 100vw, 1200px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;If you have commonly used settings and programs, it becomes harder to tie your fingerprint to your computer, but, if you install unique add-ons, you’ll be easier to find. Marketers can use it to bombard you with annoying ads.&lt;/p&gt;
&lt;p&gt;You don’t want to stop using the internet to escape the ads, and you don’t have to.&lt;/p&gt;
&lt;p&gt;The latest &lt;a href=&quot;https://www.mozilla.org/firefox/new/?utm_source=blog.mozilla.org&amp;amp;utm_campaign=firefox_frontier&amp;amp;utm_medium=referral&quot;&gt;Firefox&lt;/a&gt; has a new feature that can help you block fingerprinting coming from many ad trackers. Here’s how:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;At the top left of your &lt;a&gt;Firefox&lt;/a&gt; browser, you will see an icon that looks like an i inside a circle. Click on it and then click on Content Blocking.&lt;/li&gt;
&lt;li&gt;Go to the Custom section. You’ll see boxes you can click to block trackers, cookies, fingerprinting, and cryptocurrencies.&lt;/li&gt;
&lt;li&gt;Click the box next to Fingerprinters, and you’re done.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-1380&quot; src=&quot;https://ffp4g1ylyit3jdyti1hqcvtb-wpengine.netdna-ssl.com/firefox/files/2019/05/Fingerprinting-settings-screen_EN-600x469.png&quot; alt=&quot;&quot; width=&quot;600&quot; height=&quot;469&quot; srcset=&quot;https://blog.mozilla.org/firefox/files/2019/05/Fingerprinting-settings-screen_EN-600x469.png 600w, https://blog.mozilla.org/firefox/files/2019/05/Fingerprinting-settings-screen_EN-300x235.png 300w, https://blog.mozilla.org/firefox/files/2019/05/Fingerprinting-settings-screen_EN.png 720w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that blocking fingerprinting may cause some sites to break. The website might look strange, or the layout will be different. Besides tracking you without your permission, fingerprinting can slow down your online experience.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“A lot of the scripts that are run to enable tracking delay webpage load times while all these tracking scripts fire and run in the background,” said Peter Dolanjski, Firefox Product Lead.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You probably wouldn’t appreciate someone tracking your moves in real life. There’s no reason to accept it online. If you don’t already have Firefox, &lt;a href=&quot;https://www.mozilla.org/firefox/new/&quot;&gt;click here to download&lt;/a&gt; and protect yourself from digital fingerprinting.&lt;/p&gt;
&lt;p class=&quot;wpml-ls-statics-post_translations wpml-ls&quot;&gt;This post is also available in: &lt;span class=&quot;wpml-ls-slot-post_translations wpml-ls-item wpml-ls-item-de wpml-ls-first-item wpml-ls-item-legacy-post-translations&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/firefox/de/loesche-deinen-digitalen-fingerabdruck-in-firefox/&quot; class=&quot;wpml-ls-link&quot;&gt;&lt;span class=&quot;wpml-ls-native&quot;&gt;Deutsch&lt;/span&gt; &lt;span class=&quot;wpml-ls-display&quot;&gt;&lt;span class=&quot;wpml-ls-bracket&quot;&gt;(&lt;/span&gt;German&lt;span class=&quot;wpml-ls-bracket&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&quot;wpml-ls-slot-post_translations wpml-ls-item wpml-ls-item-fr wpml-ls-last-item wpml-ls-item-legacy-post-translations&quot;&gt;&lt;a href=&quot;https://blog.mozilla.org/firefox/fr/comment-bloquer-le-fingerprinting-avec-firefox/&quot; class=&quot;wpml-ls-link&quot;&gt;&lt;span class=&quot;wpml-ls-native&quot;&gt;Français&lt;/span&gt; &lt;span class=&quot;wpml-ls-display&quot;&gt;&lt;span class=&quot;wpml-ls-bracket&quot;&gt;(&lt;/span&gt;French&lt;span class=&quot;wpml-ls-bracket&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 19:07:58 +0000</pubDate>
<dc:creator>rendall</dc:creator>
<og:url>https://blog.mozilla.org/firefox/how-to-block-fingerprinting-with-firefox</og:url>
<og:title>How to block fingerprinting with Firefox – The Firefox Frontier</og:title>
<og:description>Fingerprinting is a type of online tracking that’s different from cookies or ordinary trackers. Now you can block fingerprinting with Firefox.</og:description>
<og:image>https://blog.mozilla.org/firefox/files/2019/05/fingerprinting.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.mozilla.org/firefox/how-to-block-fingerprinting-with-firefox/</dc:identifier>
</item>
<item>
<title>Better Bash History (2012)</title>
<link>https://sanctum.geek.nz/arabesque/better-bash-history/</link>
<guid isPermaLink="true" >https://sanctum.geek.nz/arabesque/better-bash-history/</guid>
<description>&lt;p&gt;By default, the Bash shell keeps the history of your most recent session in the &lt;code&gt;.bash_history&lt;/code&gt; file, and the commands you’ve issued in your current session are also available with a &lt;code&gt;history&lt;/code&gt; call. These defaults are useful for keeping track of what you’ve been up to in the shell on any given machine, but with disks much larger and faster than they were when Bash was designed, a little tweaking in your &lt;code&gt;.bashrc&lt;/code&gt; file can record history more permanently, consistently, and usefully.&lt;/p&gt;
&lt;h2&gt;Append history instead of rewriting it&lt;/h2&gt;
&lt;p&gt;You should start by setting the &lt;code&gt;histappend&lt;/code&gt; option, which will mean that when you close a session, your history will be &lt;em&gt;appended&lt;/em&gt; to the &lt;code&gt;.bash_history&lt;/code&gt; file rather than overwriting what’s in there.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;shopt -s histappend
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Allow a larger history file&lt;/h2&gt;
&lt;p&gt;The default maximum number of commands saved into the &lt;code&gt;.bash_history&lt;/code&gt; file is a rather meager 500. If you want to keep history further back than a few weeks or so, you may as well bump this up by explicitly setting &lt;code&gt;$HISTSIZE&lt;/code&gt; to a much larger number in your &lt;code&gt;.bashrc&lt;/code&gt;. We can do the same thing with the &lt;code&gt;$HISTFILESIZE&lt;/code&gt; variable.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HISTFILESIZE=1000000
HISTSIZE=1000000
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;man&lt;/code&gt; page for Bash says that &lt;code&gt;HISTFILESIZE&lt;/code&gt; can be &lt;code&gt;unset&lt;/code&gt; to stop truncation entirely, but unfortunately this &lt;a href=&quot;https://lists.gnu.org/archive/html/bug-bash/2009-02/msg00108.html&quot;&gt;doesn’t work&lt;/a&gt; in &lt;code&gt;.bashrc&lt;/code&gt; files due to the order in which variables are set; it’s therefore more straightforward to simply set it to a very large number.&lt;/p&gt;
&lt;p&gt;If you’re on a machine with resource constraints, it might be a good idea to occasionally archive old &lt;code&gt;.bash_history&lt;/code&gt; files to speed up login and reduce memory footprint.&lt;/p&gt;
&lt;h2&gt;Don’t store specific lines&lt;/h2&gt;
&lt;p&gt;You can prevent commands that start with a space from going into history by setting &lt;code&gt;$HISTCONTROL&lt;/code&gt; to &lt;code&gt;ignorespace&lt;/code&gt;. You can also ignore duplicate commands, for example repeated &lt;code&gt;du&lt;/code&gt; calls to watch a file grow, by adding &lt;code&gt;ignoredups&lt;/code&gt;. There’s a shorthand to set both in &lt;code&gt;ignoreboth&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HISTCONTROL=ignoreboth
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You might also want to remove the use of certain commands from your history, whether for privacy or readability reasons. This can be done with the &lt;code&gt;$HISTIGNORE&lt;/code&gt; variable. It’s common to use this to exclude &lt;code&gt;ls&lt;/code&gt; calls, &lt;a href=&quot;https://sanctum.geek.nz/arabesque/bash-job-control/&quot;&gt;job control&lt;/a&gt; builtins like &lt;code&gt;bg&lt;/code&gt; and &lt;code&gt;fg&lt;/code&gt;, and calls to &lt;code&gt;history&lt;/code&gt; itself:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HISTIGNORE='ls:bg:fg:history'
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Record timestamps&lt;/h2&gt;
&lt;p&gt;If you set &lt;code&gt;$HISTTIMEFORMAT&lt;/code&gt; to something useful, Bash will record the timestamp of each command in its history. In this variable you can specify the format in which you want this timestamp displayed when viewed with &lt;code&gt;history&lt;/code&gt;. I find the full date and time to be useful, because it can be sorted easily and works well with tools like &lt;code&gt;cut&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;HISTTIMEFORMAT='%F %T '
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Use one command per line&lt;/h2&gt;
&lt;p&gt;To make your &lt;code&gt;.bash_history&lt;/code&gt; file a little easier to parse, you can force commands that you entered on more than one line to be adjusted to fit on only one with the &lt;code&gt;cmdhist&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;shopt -s cmdhist
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Store history immediately&lt;/h2&gt;
&lt;p&gt;By default, Bash only records a session to the &lt;code&gt;.bash_history&lt;/code&gt; file on disk when the session terminates. This means that if you crash or your session terminates improperly, you lose the history up to that point. You can fix this by recording each line of history as you issue it, through the &lt;code&gt;$PROMPT_COMMAND&lt;/code&gt; variable:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;PROMPT_COMMAND='history -a'
&lt;/code&gt;
&lt;/pre&gt;
&lt;div class=&quot;related-posts&quot;&gt;
&lt;div id=&quot;related-posts-MRP_all&quot; class=&quot;related-posts-type&quot;&gt;
&lt;h2&gt;Related Posts&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 30 May 2019 17:56:19 +0000</pubDate>
<dc:creator>Pete_D</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://sanctum.geek.nz/arabesque/better-bash-history/</dc:identifier>
</item>
<item>
<title>Switch from Chrome to Firefox</title>
<link>https://www.mozilla.org/en-US/firefox/switch/</link>
<guid isPermaLink="true" >https://www.mozilla.org/en-US/firefox/switch/</guid>
<description>&lt;header readability=&quot;6&quot;&gt;
&lt;p class=&quot;tagline&quot;&gt;Switching to Firefox is fast, easy and risk-free. Firefox imports your bookmarks, autofills, passwords and preferences from Chrome.&lt;/p&gt;
&lt;/header&gt;&lt;ol&gt;&lt;li&gt;Select what to take from Chrome.&lt;/li&gt;
&lt;li&gt;Let Firefox do the rest.&lt;/li&gt;
&lt;li&gt;Enjoy the web faster, all set up for you.&lt;/li&gt;
&lt;/ol&gt;&lt;div id=&quot;download-button-desktop-release&quot; class=&quot;download-button mzp-c-button-download-container&quot; readability=&quot;6.0452418096724&quot;&gt;
&lt;div class=&quot;nojs-download&quot; readability=&quot;2.2429906542056&quot;&gt;
&lt;div class=&quot;download download-dumb&quot; readability=&quot;2.6168224299065&quot;&gt;
&lt;p role=&quot;heading&quot; class=&quot;download-heading&quot;&gt;Download Firefox — English (US)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;unrecognized-download&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;Your system may not meet the requirements for Firefox, but you can try one of these versions:&lt;/p&gt;
&lt;div class=&quot;download download-dumb&quot; readability=&quot;2.6168224299065&quot;&gt;
&lt;p role=&quot;heading&quot; class=&quot;download-heading&quot;&gt;Download Firefox — English (US)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;unsupported-download&quot;&gt;Your system doesn't meet the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/system-requirements/&quot;&gt;requirements&lt;/a&gt; to run Firefox.&lt;/p&gt;
&lt;p class=&quot;unsupported-download-osx&quot;&gt;Your system doesn't meet the &lt;a href=&quot;https://support.mozilla.org/kb/firefox-osx&quot;&gt;requirements&lt;/a&gt; to run Firefox.&lt;/p&gt;
&lt;p class=&quot;linux-arm-download&quot;&gt;Please follow &lt;a href=&quot;https://support.mozilla.org/kb/install-firefox-linux&quot;&gt;these instructions&lt;/a&gt; to install Firefox.&lt;/p&gt;
&lt;small class=&quot;fx-privacy-link mzp-c-button-download-privacy-link&quot;&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/privacy/firefox/&quot;&gt;Firefox Privacy Notice&lt;/a&gt;&lt;/small&gt;&lt;/div&gt;
&lt;footer readability=&quot;3.9558232931727&quot;&gt;&lt;p&gt;You can use Firefox and still have Chrome. Chrome won’t change on your machine one bit. Share with your friends how to switch to Firefox&lt;/p&gt;
&lt;p&gt;Still not convinced that switching to Firefox is easy? &lt;a href=&quot;https://support.mozilla.org/kb/switching-chrome-firefox&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;
&lt;/footer&gt;</description>
<pubDate>Thu, 30 May 2019 16:09:19 +0000</pubDate>
<dc:creator>WisNorCan</dc:creator>
<og:type>website</og:type>
<og:url>https://www.mozilla.org/en-US/firefox/switch/</og:url>
<og:image>https://www.mozilla.org/media/img/firefox/template/page-image.4b108ed0b8d8.png</og:image>
<og:title>Switch from Chrome to Firefox in just a few minutes</og:title>
<og:description>Switching to Firefox is fast, easy and risk-free, because Firefox imports your bookmarks, autofills, passwords and preferences from Chrome.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.mozilla.org/en-US/firefox/switch/</dc:identifier>
</item>
<item>
<title>Pi-hole: A black hole for Internet advertisements</title>
<link>https://pi-hole.net/</link>
<guid isPermaLink="true" >https://pi-hole.net/</guid>
<description>&lt;div class=&quot;features-coloured-icon-boxes-featurecol cp3cols color6&quot; readability=&quot;9&quot;&gt;

&lt;h4 class=&quot;&quot;&gt;Network-wide protection&lt;/h4&gt;
&lt;p class=&quot;&quot;&gt;Instead of browser plugins or other software on each computer, &lt;strong&gt;install Pi-hole in one place&lt;/strong&gt; and your entire network is protected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;features-coloured-icon-boxes-featurecol cp3cols&quot; readability=&quot;9&quot;&gt;

&lt;h4 class=&quot;&quot;&gt;Block in-app advertisements&lt;/h4&gt;
&lt;p class=&quot;&quot;&gt;Network-level blocking allows you to &lt;strong&gt;block ads in non-traditional places&lt;/strong&gt; such as mobile apps and smart TVs, regardless of hardware or OS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;features-coloured-icon-boxes-featurecol cp3cols&quot; readability=&quot;9&quot;&gt;

&lt;h4 class=&quot;&quot;&gt;Improve network performance&lt;/h4&gt;
&lt;p class=&quot;&quot;&gt;Since &lt;strong&gt;advertisements are blocked &lt;em&gt;before&lt;/em&gt; they are downloaded&lt;/strong&gt;, network performance is improved and will feel faster.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;features-coloured-icon-boxes-featurecol cp3cols&quot; readability=&quot;8&quot;&gt;

&lt;h4 class=&quot;&quot;&gt;Monitor statistics&lt;/h4&gt;
&lt;p class=&quot;&quot;&gt;Our Web interface offers control of your Pi-hole and a central place to view statistics.  We also include an API for extending these stats.&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 30 May 2019 13:49:01 +0000</pubDate>
<dc:creator>DanielRibeiro</dc:creator>
<og:type>website</og:type>
<og:title>Pi-hole®: A black hole for Internet advertisements</og:title>
<og:description>curl -sSL https://install.pi-hole.net | bash</og:description>
<og:url>https://pi-hole.net/</og:url>
<og:image>https://i2.wp.com/pi-hole.net/wp-content/uploads/2018/12/2018-02-high.png?zoom=1.75&amp;w=3840&amp;ssl=1</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://pi-hole.net/</dc:identifier>
</item>
<item>
<title>Google – My Activity</title>
<link>https://myactivity.google.com/myactivity</link>
<guid isPermaLink="true" >https://myactivity.google.com/myactivity</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://myactivity.google.com/myactivity&quot;&gt;https://myactivity.google.com/myactivity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=20050764&quot;&gt;https://news.ycombinator.com/item?id=20050764&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 252&lt;/p&gt;
&lt;p&gt;# Comments: 228&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 13:08:34 +0000</pubDate>
<dc:creator>shawndumas</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://myactivity.google.com/</dc:identifier>
</item>
<item>
<title>Terry Pratchett warns Bill Gates about fake news (1995)</title>
<link>https://twitter.com/20thcenturymarc/status/1133395241837506561</link>
<guid isPermaLink="true" >https://twitter.com/20thcenturymarc/status/1133395241837506561</guid>
<description>&lt;p&gt;(Confession time: I still have not read &quot;The Shepherd's Crown&quot;. I looked at the title, thought back to &quot;Hat Full of Sky&quot; and realized what it *probably* meant-saw the symbolism on the cover and knew what it DEFINITELY meant, and went &quot;NOPE, NOPE, I CANNOT HANDLE THAT YET.&quot;)&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 12:58:45 +0000</pubDate>
<dc:creator>DyslexicAtheist</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/20thcenturymarc/status/1133395241837506561</dc:identifier>
</item>
<item>
<title>Boden – Native mobile cross-platform applications</title>
<link>https://www.boden.io/</link>
<guid isPermaLink="true" >https://www.boden.io/</guid>
<description>&lt;h2&gt;Build purely native cross-platform user experiences with Boden&lt;/h2&gt;&lt;p&gt;With Boden you can create native mobile cross-platform applications from one codebase. Boden uses the real user interface controls of the target platform, so users won't recognize any difference to the look and feel they are already used to.&lt;/p&gt;
&lt;h2&gt;Compile native apps from a single C++17 codebase&lt;/h2&gt;
&lt;p&gt;Write your mobile apps in modern C++17 and compile 100% native Android and iOS apps from a single statically typed codebase. No need for scripting. No overhead introduced by virtual machines. Using Boden is straight forward:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;// MainViewController.cpp&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;bdn/ui.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;bdn/ui/yoga.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;MainViewController.h&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MainViewController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AwesomeApp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geometry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yoga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contentView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visible&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Lay out your user interface with Flexbox layouts&lt;/h2&gt;
&lt;p&gt;With Boden laying out your UI is a breeze. Just define your layouts using Flexbox stylesheets directly in C++. Boden uses &lt;a target=&quot;_blank&quot; href=&quot;https://yogalayout.com&quot;&gt;Facebook's Yoga Layout&lt;/a&gt; engine accross all platforms.&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;// MainViewController.cpp&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;bdn/ui.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&amp;lt;bdn/ui/yoga.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include&lt;/span&gt; &lt;span class=&quot;cpf&quot;&gt;&quot;MainViewController.h&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bdn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;MainViewController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AwesomeApp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geometry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setLayout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yoga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stylesheet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;FlexJsonStringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                                      &lt;span class=&quot;s&quot;&gt;&quot;justifyContent&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Center&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                                      &lt;span class=&quot;s&quot;&gt;&quot;alignItems&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Center&quot;&lt;/span&gt;
                                  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shared_ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_shared&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contentView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visible&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Reuse your existing programming skills&lt;/h2&gt;
&lt;p&gt;Boden builds upon well-established technologies and best practices where possible. A Boden string literally is an &lt;code&gt;std::string&lt;/code&gt;. No custom containers, smart pointers, or reinvented basics. This allows you to reuse your existing knowledge and focus on what's most important: your app.&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 12:10:03 +0000</pubDate>
<dc:creator>nurettin</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.boden.io/</dc:identifier>
</item>
<item>
<title>Chrome extension manifest v3 proposal: comment from uBlock Origin author</title>
<link>https://github.com/uBlockOrigin/uBlock-issues/issues/338#issuecomment-496009417</link>
<guid isPermaLink="true" >https://github.com/uBlockOrigin/uBlock-issues/issues/338#issuecomment-496009417</guid>
<description>&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;It's still not set in stone&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The fact that they are planning to remove a proper blocking webRequest API with no word of an equivalent replacement is a sign of &lt;em&gt;intent&lt;/em&gt;, that is, reducing the level of user agency in their user agent (aka Google Chrome).&lt;/p&gt;
&lt;p&gt;How to do this? Use privacy/performance as Trojan arguments to rationalize reducing user agency over what all bloated web sites throw at people's user agents. That new declarativeNetRequest API seriously reduces what blockers can do, to the point they will become distinguishable only by their UI, not their capabilities. As a user, I personally wouldn't accept browsing the world wild web without the advanced features in uBO, I find this unthinkable.&lt;/p&gt;
&lt;p&gt;There are no issue of privacy/performance with uBO, rather the opposite by giving back to users the power of clamping down on what web sites throw at them, so that argument is just plain fallacious as far as uBO is concerned.&lt;/p&gt;
&lt;p&gt;Chromium got its webRequest API at a time it was trying to gain &lt;a href=&quot;https://en.wikipedia.org/wiki/File:Usage_Share_of_browsers_(updated_August_2018).png&quot; rel=&quot;nofollow&quot;&gt;market share against Firefox&lt;/a&gt; (Sep 2011), where Adblock Plus, Ghostery, Disconnect, NoScript, and other such extensions were the most or among the most popular extensions on Firefox.&lt;/p&gt;
&lt;p&gt;I don't expect Firefox to follow suit and also deprecate its own webRequest API.&lt;sup&gt;[1]&lt;/sup&gt; I am confident uBO will still exist on Firefox.&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;[1] Actually Firefox's own webRequest API is better designed as it's possible to return a Promise, which makes it possible to defer returning an answer to some point in the future.&lt;/p&gt;
&lt;p&gt;[2] Which is already better equipped than Chromium's version of uBO -- &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#html-filters&quot;&gt;example&lt;/a&gt;, &lt;a href=&quot;https://github.com/gorhill/uBlock/wiki/Dashboard:-Settings#important-note&quot;&gt;example&lt;/a&gt; -- (and also better equipped than the Firefox legacy version).&lt;/p&gt;
</description>
<pubDate>Thu, 30 May 2019 11:43:04 +0000</pubDate>
<dc:creator>fanf2</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/18120975?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>Chrome extension manifest v3 proposal · Issue #338 · uBlockOrigin/uBlock-issues</og:title>
<og:url>https://github.com/uBlockOrigin/uBlock-issues/issues/338</og:url>
<og:description>Description This issue is a heads-up on the proposed Chrome extension manifest version 3, which will have a significant impact on ad-blockers. There is a tracking bug at: https://bugs.chromium.org/...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/uBlockOrigin/uBlock-issues/issues/338</dc:identifier>
</item>
</channel>
</rss>