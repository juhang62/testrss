<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>OpenStreetMap proven to be a highly accurate map in top US cities</title>
<link>https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec</link>
<guid isPermaLink="true" >https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec</guid>
<description>&lt;div class=&quot;&quot;&gt;

&lt;div class=&quot;eq&quot;&gt;
&lt;div class=&quot;n er es et eu&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://medium.com/@clarecorthell?source=post_page-----a7a41bf92ec--------------------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Clare Corthell&quot; class=&quot;s ev ew ex&quot; src=&quot;https://miro.medium.com/fit/c/96/96/1*2VzpXNsFLR-er4UkO6_wfw@2x.jpeg&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;8626&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he dm bx&quot;&gt;&lt;em class=&quot;hf&quot;&gt;Mark Huberty &amp;amp; Clare Corthell,&lt;/em&gt; &lt;a href=&quot;https://medium.com/u/54708edc644b?source=post_page-----a7a41bf92ec--------------------------------&quot; class=&quot;hg as fu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em class=&quot;hf&quot;&gt;Lyft&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;hf&quot;&gt;Mapping&lt;/em&gt;&lt;/p&gt;

Roads to the new terminal at LaGuardia Airport opened in July 2020, evidenced by aggregate Lyft traffic (left). OpenStreetMap data had been updated (right) shortly after opening, faster than many other maps.
&lt;blockquote class=&quot;ij&quot; readability=&quot;6.7602739726027&quot;&gt;
&lt;p id=&quot;6174&quot; class=&quot;ik il dt du b im in io ip iq ir he co&quot;&gt;Lyft Mapping &lt;a href=&quot;http://bit.ly/lyftosmqualitystudy&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;study&lt;/a&gt; shows crucial OpenStreetMap road attributes are fresh and high quality in 30 North American cities, as compared to groundtruth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;98e2&quot; class=&quot;gh gi dt gj b gk it gm gn go iu gq gr gs iv gu gv gw iw gy gz ha ix hc hd he dm bx iy&quot;&gt;&lt;span class=&quot;s iz ja jb jc jd je jf jg jh hq&quot;&gt;L&lt;/span&gt;yft moves people — from home to work, work to play, play to rest, through cities and &lt;a href=&quot;https://www.cnet.com/news/lyft-reveals-disneyland-happy-hour-stats-to-celebrate-1-billion-rides/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;beyond&lt;/a&gt;. Maps play a critical role, helping Lyft figure out &lt;a class=&quot;cr is&quot; rel=&quot;noopener&quot; href=&quot;https://eng.lyft.com/a-new-real-time-map-matching-algorithm-at-lyft-da593ab7b006&quot;&gt;where&lt;/a&gt; drivers and riders are, how best to connect them, and estimate how long it will take to get to the destination.&lt;/p&gt;
&lt;p id=&quot;81e8&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he dm bx&quot;&gt;Lyft Mapping is built on top of &lt;a href=&quot;https://www.openstreetmap.org/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;OpenStreetMap&lt;/a&gt;. This global map database is used by millions of people around the world, for &lt;a href=&quot;https://osm.earth/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;combatting climate change&lt;/a&gt;, &lt;a href=&quot;https://osmlanduse.org/#12/8.7/49.4/0/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;tracking agricultural land use&lt;/a&gt;, &lt;a href=&quot;https://www.missingmaps.org/blog/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;disaster recovery&lt;/a&gt;, &lt;a href=&quot;https://www.hotosm.org/what-we-do&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;refugee response&lt;/a&gt;, academic research, and much more. After 16 years of growth, OSM is now commonly used by many &lt;a href=&quot;https://www.mdpi.com/2220-9964/8/5/232/htm&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;companies&lt;/a&gt; to power applications like logistics platforms, &lt;a href=&quot;https://techcrunch.com/2019/07/23/facebook-and-openstreetmaps-empower-the-mapping-community-with-ai-enhanced-tools/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;social media&lt;/a&gt;, and &lt;a href=&quot;https://www.huffingtonpost.in/2018/11/23/the-strange-story-of-how-pokemon-go-put-lakes-and-parks-in-peoples-homes_a_23593466/&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;gaming&lt;/a&gt;. OSM is now the biggest crowdsourced repository of human geospatial knowledge. But is this map suitable for supporting the rideshare experience? Is it the best option available? Can Lyft support the OSM community and contribute to making the map better? Though we had a &lt;a class=&quot;cr is&quot; rel=&quot;noopener&quot; href=&quot;https://eng.lyft.com/how-lyft-creates-hyper-accurate-maps-from-open-source-maps-and-real-time-data-8dcf9abdd46a&quot;&gt;strong intuition&lt;/a&gt; that OSM offered a complete road network, we didn’t know how well the map matched the real world — so we ran a study.&lt;/p&gt;
&lt;h2 id=&quot;d67c&quot; class=&quot;ji jj dt bm bn jk jl jm jn jo jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke bx&quot;&gt;tl;dr&lt;/h2&gt;
&lt;p id=&quot;e314&quot; class=&quot;gh gi dt gj b gk kf gm gn go kg gq gr gs kh gu gv gw ki gy gz ha kj hc hd he dm bx&quot;&gt;After three months, thousands of miles driven, and a lot of skilled work from our data curation team, we’re happy to report positive findings:&lt;/p&gt;
&lt;ol class=&quot;&quot;&gt;&lt;li id=&quot;1caa&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he kk kl km bx&quot;&gt;OpenStreetMap has a very &lt;strong class=&quot;gj kn&quot;&gt;high-quality road network&lt;/strong&gt; in 30 large North American cities.&lt;/li&gt;
&lt;li id=&quot;500b&quot; class=&quot;gh gi dt gj b gk ko gm gn go kp gq gr gs kq gu gv gw kr gy gz ha ks hc hd he kk kl km bx&quot;&gt;The OpenStreetMap &lt;strong class=&quot;gj kn&quot;&gt;community&lt;/strong&gt; can be credited with maintaining the map at a reliably fresh standard in these areas.&lt;/li&gt;
&lt;li id=&quot;b42a&quot; class=&quot;gh gi dt gj b gk ko gm gn go kp gq gr gs kq gu gv gw kr gy gz ha ks hc hd he kk kl km bx&quot;&gt;This &lt;strong class=&quot;gj kn&quot;&gt;survey design&lt;/strong&gt; is potentially valuable for any study of map quality relative to groundtruth.&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;3a43&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he dm bx&quot;&gt;In this post, we’ll review how we did this (see the &lt;a href=&quot;http://bit.ly/lyftosmqualitystudy&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;paper&lt;/a&gt;), the findings, and takeaways for Lyft and the mapping community.&lt;/p&gt;

&lt;p id=&quot;3438&quot; class=&quot;gh gi dt gj b gk kf gm gn go kg gq gr gs kh gu gv gw ki gy gz ha kj hc hd he dm bx&quot;&gt;Measuring the entire map — whether a road exists, is annotated correctly, is up-to-date — is simply hard. Lyft operates in over 300 markets in the United States and Canada, from dense, old urban areas like New York City, to sprawling suburban metropolises like Phoenix or Los Angeles. To get the ground truth required to assess map quality, we might send a surveyor to every intersection and record whether something is correct. The US Census Bureau does exactly this — in fact, it hires so many people every 10 years that it &lt;a href=&quot;https://www.census.gov/newsroom/blogs/research-matters/2020/06/the_impact_of_2010c.html&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;singlehandedly changes the unemployment rate&lt;/a&gt;. But this approach could be incredibly slow and expensive. We needed a survey design that balanced our desire for regional specificity with cost and logistical feasibility.&lt;/p&gt;

An example of our sampling plan in Greater New York City. Mapillary dispatched cars to each of the S2 polygons and collected imagery along all driveable roads in each.
&lt;h2 id=&quot;8587&quot; class=&quot;ji jj dt bm bn jk jl jm jn jo jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke bx&quot;&gt;Sampling + Remote Sensing = Feasible Study&lt;/h2&gt;
&lt;p id=&quot;8d4e&quot; class=&quot;gh gi dt gj b gk kf gm gn go kg gq gr gs kh gu gv gw ki gy gz ha kj hc hd he dm bx&quot;&gt;We knew that we needed a sampling-based approach to make this tractable. But a pure random sample wouldn’t work; sending people to randomly-sampled intersections around a city would be incredibly time consuming. Instead, we looked to public health and remote sensing for a solution. Health researchers often face a similar problem of how to send a limited number of survey workers to homes for evaluation of disease prevalence or health outcomes. They solve this with &lt;a href=&quot;https://ij-healthgeographics.biomedcentral.com/articles/10.1186/1476-072X-11-12&quot; class=&quot;cr is&quot; rel=&quot;noopener&quot;&gt;cluster sampling&lt;/a&gt;:&lt;/p&gt;
&lt;ol class=&quot;&quot;&gt;&lt;li id=&quot;add2&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he kk kl km bx&quot;&gt;Sample &lt;strong class=&quot;gj kn&quot;&gt;spatial units&lt;/strong&gt;, such as a city block&lt;/li&gt;
&lt;li id=&quot;4caf&quot; class=&quot;gh gi dt gj b gk ko gm gn go kp gq gr gs kq gu gv gw kr gy gz ha ks hc hd he kk kl km bx&quot;&gt;Sample &lt;strong class=&quot;gj kn&quot;&gt;households&lt;/strong&gt; from that block&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;6022&quot; class=&quot;gh gi dt gj b gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz ha hb hc hd he dm bx&quot;&gt;This two-stage process simplifies life for survey workers. A survey taker can go to one city block and visit multiple households at a time, maximizing the information they get from one trip. This sort of survey design isn’t as statistically efficient as a pure random sample, but &lt;strong class=&quot;gj kn&quot;&gt;what it lacks in purity it makes up for in logistical simplicity and cost effectiveness&lt;/strong&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 09 Feb 2021 21:11:46 +0000</pubDate>
<dc:creator>clarecorthell</dc:creator>
<og:type>article</og:type>
<og:title>How Lyft discovered OpenStreetMap is the Freshest Map for Rideshare</og:title>
<og:description>Mark Huberty &amp; Clare Corthell, Lyft Mapping</og:description>
<og:url>https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec</og:url>
<og:image>https://miro.medium.com/max/1200/0*fuDU1vIj1ASqSiFs</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec?gi=ed78f9a0974</dc:identifier>
</item>
<item>
<title>Cops are playing music while citizens are filming to trigger copyright filters</title>
<link>https://twitter.com/jason_koebler/status/1359213426740895744</link>
<guid isPermaLink="true" >https://twitter.com/jason_koebler/status/1359213426740895744</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/jason_koebler/status/1359213426740895744&quot;&gt;https://twitter.com/jason_koebler/status/1359213426740895744&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=26082303&quot;&gt;https://news.ycombinator.com/item?id=26082303&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 408&lt;/p&gt;
&lt;p&gt;# Comments: 217&lt;/p&gt;
</description>
<pubDate>Tue, 09 Feb 2021 20:58:02 +0000</pubDate>
<dc:creator>edward</dc:creator>
<og:type>article</og:type>
<og:title>How Lyft discovered OpenStreetMap is the Freshest Map for Rideshare</og:title>
<og:description>Mark Huberty &amp; Clare Corthell, Lyft Mapping</og:description>
<og:url>https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec</og:url>
<og:image>https://miro.medium.com/max/1200/0*fuDU1vIj1ASqSiFs</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://eng.lyft.com/how-lyft-discovered-openstreetmap-is-the-freshest-map-for-rideshare-a7a41bf92ec?gi=ed78f9a0974</dc:identifier>
</item>
<item>
<title>Creeping as a Service</title>
<link>https://every.to/divinations/creeping-as-a-service-craas</link>
<guid isPermaLink="true" >https://every.to/divinations/creeping-as-a-service-craas</guid>
<description>&lt;p&gt;&lt;em&gt;Hey, Nathan here! Remember a few months ago when we published a wonderful essay on &lt;/em&gt;&lt;a href=&quot;https://every.to/divinations/linkedins-alternate-universe-21780381&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;LinkedIn’s ridiculousness&lt;/em&gt;&lt;/a&gt;&lt;em&gt;? It was one of Divinations most popular posts ever, and it was written by&lt;/em&gt; &lt;a href=&quot;https://twitter.com/fadeke_adegbuyi&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Fadeke Adegbuyi&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, a brilliant observer of internet culture who also is a senior marketing manager at Doist. Today I’m thrilled to share with you Fadeke’s latest work—this time examining our obsession with identity through the lens of a Twitter bio tracking app called Spoonbill. Enjoy!&lt;/em&gt;&lt;/p&gt;
&lt;hr class=&quot;quill-line&quot;/&gt;&lt;p&gt;Elon Musk updated his Twitter bio 23 times in 2020. He last changed it on February 4, 2021 at 6:31 AM PST. A few versions include “Born 69 days after 4/20,” “SoundCloud Rockstar,” “Budgie Smuggler,” and “#bitcoin.” I didn’t spend months stalking Musk’s page, developing an encyclopedic knowledge of his time spent in the Twitterverse. I looked it up on &lt;a href=&quot;http://spoonbill.io/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Spoonbill&lt;/a&gt;. &lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_1.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_1.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_1.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_1.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
I could use the app to give you similar information on any celebrity or public figure with a Twitter account. Or I could use it on you. If I wanted to, I could see all the changes you’ve made to your profile since you first signed up: your name, your location, your website, your pinned tweets.
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_2.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_2.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_2.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
Spoonbill’s creator, &lt;a href=&quot;https://twitter.com/justinmduke&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Justin M. Duke&lt;/a&gt;, describes the app, which has nearly 93 thousand users, as a “tracking tool for online metadata.” Over 45K of those users have signed up to receive daily emails that aggregate updates across all the Twitter profiles they follow. The open rate for these daily emails hovers around 55%, &lt;a href=&quot;https://www.campaignmonitor.com/resources/knowledge-base/what-are-the-average-click-and-read-rates-for-email-campaigns/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;well above average&lt;/a&gt; for email campaigns.
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_3.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_3.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_3.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_3.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;I asked &lt;a href=&quot;https://twitter.com/hunterwalk&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hunter Walk&lt;/a&gt;, a Partner at the seed-stage venture capital firm Homebrew and an avid Spoonbiller, why he uses the app :&lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;It's fun to see people wordsmithing their bios, changing the order of the portfolio companies they list based on startup performance, subtly announcing personal life changes...Instead of letting Twitter decide what's worthy of notification, I get to see&lt;/em&gt; every &lt;em&gt;change and decide for myself what's interesting, often with context that the algorithm is unaware of.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The tracked changes that Twitter’s algorithm might register as neutral additions and subtractions can indeed be revealing to onlookers. Spoonbill captures what the people we follow are changing their bios to express; an investment exit, a tongue-in-cheek joke, or the end of an internet cult affiliation.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Social apps have made creepers out of all of us. Whether it’s scrolling to the start of someone’s Instagram feed or &lt;a href=&quot;https://sarajbenincasa.medium.com/confessions-of-a-venmo-voyeur-cb0e4c23d04a&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;looking through Venmo transactions&lt;/a&gt;, we’re constantly peering into others’ online lives. Spoonbill not only satisfies our tendency for online lurking, but pushes it into voyeur territory; surfacing what’s meant to be hidden is intimate in a way that scrolling a timeline isn’t. The tool provides a glimpse into the specific ways we represent ourselves to the world, the unseen effort with which we express our identities, and how the uncanny feeling of being watched informs our sense of self.&lt;/p&gt;

&lt;p&gt;Twitter is an interesting observation ground for online identity. Snapshots at Big Sur are meant for Instagram’s photogenic feed, while professional milestones belong on &lt;a href=&quot;https://divinations.every.to/p/linkedins-alternate-universe&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;LinkedIn’s alternate universe&lt;/a&gt;. But in the Twitterverse, life and work converge. People are just as likely to share career news as they are to live-tweet a Netflix binge; professional gripes commingle with criticism of political leaders; snark and sincerity live side-by-side.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_4.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_4.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_4.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_4.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Twitter’s bio section, then, is a tall order: &lt;em&gt;compress your entire identity into a single line item&lt;/em&gt;. Many use the space to convey their own complexity––smart yet funny, accomplished but approachable. Society has progressed past the need for the phrase “works hard, plays hard,” but that’s what we’re trying to convey in our own personalized way: we contain multitudes. We are real.&lt;/p&gt;
&lt;p&gt;Spoonbill reveals the way that people play with their latest positioning of self, carving out character space for their newly important aspects of identity.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_7.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_7.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_7.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_7.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
Hustle culture looms large and professional accomplishments convey worth. In turn, notable work, career highlights, and impressive affiliations take center stage in our Twitter bios, the structure and grammar of which are heavily coded. Freelance journalists add and shuffle their bylines, arranged in order of prestige –– @nytimes is meant to come first. In my corner of Tech Twitter, where optionality is king, it’s now effectively a meme to be &lt;em&gt;“starting something new,”&lt;/em&gt; marked increasingly by the addition of “Substack:”, “Scout:”, or “Side project:” to one’s bio. Users adding “&lt;em&gt;permanent student&lt;/em&gt;” or “&lt;em&gt;forever learning&lt;/em&gt;” to their bios aren’t pupils at cruel and unusual institutions, they’re signalling intellectual curiosity. 
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_8.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_8.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_8.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_8.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The ability to see Twitter bio updates across hundreds or thousands of profiles over time make Spoonbill updates insightful in aggregate. Certain patterns and conventions emerge. &lt;/p&gt;
&lt;p&gt;Spoonbill’s creator has observed interesting trends in his app:&lt;/p&gt;
&lt;blockquote readability=&quot;10.412921348315&quot;&gt;
&lt;p&gt;&lt;em&gt;&quot;On an individual/corporate basis, a particularly fun one is seeing angels and investors tinker with the parts of the portfolio they&lt;/em&gt; &lt;a href=&quot;http://spoonbill.io/twitter/data/Jason/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;choose to highlight&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. A very classic example of this was the sheer number of firms and investors who removed things mentioning WeWork during, well, the period of time that you didn’t want your name associated with WeWork.&quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;WeWork reached a $47 billion valuation in 2019, but cancelled their plans to go public &lt;a href=&quot;https://www.businessinsider.com/wework-ipo-timeline-delayed-ceo-adam-neumann-scandals-explained-2019-9&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;after their IPO filing drew questions and concerns&lt;/a&gt;. In a bio block that’s meant for selling ourselves to a potential follower, a failed investment takes up valuable real estate. But while WeWork investors might wish we would all forget their involvement as quickly as they hit “save” on their new bio, Spoonbill always knows.&lt;/p&gt;
&lt;p&gt;In that same 160-character space, we’re also meant to declare our commitment to cause: political, social, or economic. Often, emojis will do:&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_9.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_9.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_9.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_9.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;If you watch Spoonbill updates closely enough, they suggest that the labels and descriptors we choose to signal our allegiances can be fleeting, our attention spans short. As COVID-19 spread throughout the world in early 2020, many updated their bios with their own messages about the virus, encouraging their followers to take some form of action:&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_10.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_10.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_10.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_10.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;But almost as quickly as these bio changes were made, they were unmade, individuals returning to their regular profiles. Less charitably, people just got bored; short-term vigilance surrounding the virus eventually led to a return to normal life for many. More charitably, the longer the pandemic wore on, identities once swaddled in concern for the virus eventually needed some wiggle room. &lt;/p&gt;
&lt;p&gt;Last year, as racial tensions bubbled to a boil throughout the United States and set off an international cascade, Spoonbill revealed how Twitter bios were used to show support for what was top of mind––or a stance on what was top of the fold:&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_11.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_11.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_11.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_11.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;As time went on, it was jarring but predictable to see lines through phrases like “Black lives matter” across swaths of profile updates in my inbox.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_12.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_12.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_12.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_12.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Politics similarly finds its way into our descriptions of self. With the 2020 U.S. presidential election, many translated their desired vote on the ballot to their bio:&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_13.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_13.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_13.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_13.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The story has already been written, and you know what comes next: dashed presidential dreams translated to crossed-out candidates. Adding presidential hopefuls or even political parties to how we identify can be an exercise in disappointment. Disappointment is inevitable (after all, there can only be one). But seeing how long people hold on to their hopefuls was interesting; some still signalling long after their candidate had dropped out.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_14.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_14.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_14.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_14.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;These tracked changes of our online selves provide a glimpse into the specific ways we represent ourselves to the world, how society manages to infect our identities, and, what we value—or what we want to be seen as valuing.&lt;/p&gt;

&lt;p&gt;Spoonbill uncovers the tacit labor involved in our quest for the perfect personal positioning. In describing the way online influencers take effortless-looking selfies that are actually quite effortful, &lt;a href=&quot;https://twitter.com/wishcrys&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Dr. Crystal Abidin (aka wishcrys)&lt;/a&gt;, a researcher and “anthropologist of influencer cultures” (according to her own Twitter bio), &lt;a href=&quot;https://journals.sagepub.com/doi/full/10.1177/2056305116641342&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;coined the term “tacit labor”&lt;/a&gt; as: &lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;em&gt;“A collective practice of work that is understated and under-visibilized from being so thoroughly rehearsed that it appears as effortless and subconscious.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You don’t need to be an influencer to know the labor involved in taking and selecting a selfie. Getting the right light, angle, and expression are just some of the considerations made while snapping and choosing from the photos that fill our camera rolls. After selecting the winning shot, we leave behind a stream of rejected selfies, never to see the light of day; the tacit labor stays hidden. After a photo has been cropped, filtered, and face-tuned, a refined “self”-ie joins the feed, adding to our curated online image––polished, carefree, or somewhere in between.&lt;/p&gt;
&lt;p&gt;Just like we strain for the perfect selfie, we tinker to find the perfect bio, treating it as a personal sales pitch and making micro edits to what we represent and “who we are.” Spoonbill catalogues every time-stamped keystroke and tracked change––from the removal of a single stuffy period to self-consciously swapping “Marketer” for “Storyteller” and reverting back again.  Like the photos in your camera roll, your current Twitter bio has left––for Spoonbill users to see––a wake of rejected selves.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_5.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_5.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_5.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_5.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Spoonbill reveals the surprising scale and frenzying frequency with which all kinds of people make these online edits. We add in emojis, expand and shrink our past affiliations, and flirt briefly with humor, adding clever one-liners before eventually reverting to something more serious. It’s effortfulness on display. Seeing people iterate on their identities in Spoonbill, switching too-formal uppercase for carefree lowercase characters, makes our desire to control how we’re perceived clearly legible.&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_6.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_6.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_6.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_6.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
The time spent laboring over this minutiae can appear silly and perhaps a bit sad: &lt;em&gt;who cares?&lt;/em&gt; But tools like Spoonbill are irrefutable proof that people &lt;em&gt;are&lt;/em&gt; watching. Even at the most minuscule of levels, people indeed care––if not about &lt;em&gt;you&lt;/em&gt;, then at least your &lt;em&gt;presentation of you&lt;/em&gt;. The underlying fear driving some of this status line anxiety, that people will point and laugh if we don’t get it &lt;em&gt;just&lt;/em&gt; right, is unlikely but not unfounded. Nearly as bad is the idea that nobody might care at all, disinterested in our personal pitch. But if we get the words just right, people might think we’re interesting––worth the follow. 
&lt;p&gt;If this all feels exhausting, it’s probably because it is. It’s likely best to opt out, and some very much do. They leave their Twitter bios the same indefinitely or don’t have one at all. Not playing beats the game of constant reinvention. Existing in a digital space comes with a particular pressure to maintain an online identity that lives up to the bios we so carefully craft. After some time, this can be burdensome. &lt;/p&gt;
&lt;p&gt;A common catchphrase on Twitter is “I can’t believe this website is free.” &lt;/p&gt;
&lt;div class=&quot;quill-tweet&quot; data-url=&quot;https://twitter.com/alyssalimp/status/1047296154986147845&quot; data-tweet=&quot;{&amp;quot;data&amp;quot;:{&amp;quot;text&amp;quot;:&amp;quot;you have cost me my twenties https://t.co/GpAtaWE6nB&amp;quot;,&amp;quot;referenced_tweets&amp;quot;:[{&amp;quot;type&amp;quot;:&amp;quot;quoted&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;1046852972221620224&amp;quot;}],&amp;quot;public_metrics&amp;quot;:{&amp;quot;retweet_count&amp;quot;:1527,&amp;quot;reply_count&amp;quot;:26,&amp;quot;like_count&amp;quot;:15633,&amp;quot;quote_count&amp;quot;:13},&amp;quot;id&amp;quot;:&amp;quot;1047296154986147845&amp;quot;,&amp;quot;created_at&amp;quot;:&amp;quot;2018-10-03T01:23:55.000Z&amp;quot;,&amp;quot;author_id&amp;quot;:&amp;quot;370308968&amp;quot;},&amp;quot;includes&amp;quot;:{&amp;quot;users&amp;quot;:[{&amp;quot;name&amp;quot;:&amp;quot;Alyssa Limperis&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;370308968&amp;quot;,&amp;quot;profile_image_url&amp;quot;:&amp;quot;https://pbs.twimg.com/profile_images/916469867880075265/d9cC1LlQ_normal.jpg&amp;quot;,&amp;quot;username&amp;quot;:&amp;quot;alyssalimp&amp;quot;},{&amp;quot;name&amp;quot;:&amp;quot;Twitter&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;783214&amp;quot;,&amp;quot;profile_image_url&amp;quot;:&amp;quot;https://pbs.twimg.com/profile_images/1354479643882004483/Btnfm47p_normal.jpg&amp;quot;,&amp;quot;username&amp;quot;:&amp;quot;Twitter&amp;quot;}],&amp;quot;tweets&amp;quot;:[{&amp;quot;text&amp;quot;:&amp;quot;We can't believe this website is free&amp;quot;,&amp;quot;public_metrics&amp;quot;:{&amp;quot;retweet_count&amp;quot;:25431,&amp;quot;reply_count&amp;quot;:7373,&amp;quot;like_count&amp;quot;:95314,&amp;quot;quote_count&amp;quot;:13710},&amp;quot;id&amp;quot;:&amp;quot;1046852972221620224&amp;quot;,&amp;quot;created_at&amp;quot;:&amp;quot;2018-10-01T20:02:52.000Z&amp;quot;,&amp;quot;author_id&amp;quot;:&amp;quot;783214&amp;quot;}]}}&quot; readability=&quot;8&quot;&gt;

&lt;p&gt;you have cost me my twenties&lt;/p&gt;
&lt;div class=&quot;quoted-tweet&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span class=&quot;quote-tweet-name&quot;&gt;Twitter&lt;/span&gt;&lt;span class=&quot;quote-tweet-username&quot;&gt;@Twitter&lt;/span&gt;&lt;/p&gt;
We can't believe this website is free&lt;/div&gt;

&lt;/div&gt;
But there’s a cost to maintaining our online avatars and for some the price feels too high from time to time, leaving them running for the exits, from the online work of it all, a reprieve from our unpaid performance jobs. Signalling isn’t free. Unsurprisingly, the bios tell the tale:
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_15.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_15.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_15.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_15.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;And yet, as abruptly as the exit comes the return. Many people don’t cross the 48 hour mark before they’ve reverted to their old bio, back for their regularly scheduled programming. To steal a fitting &lt;a href=&quot;https://dansheehan.substack.com/p/i-hate-it-here-see-you-tomorrow&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;phrase&lt;/a&gt;, “I hate it here, see you tomorrow.”&lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New1.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New1.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New1.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_New1.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;Nearly a decade ago, &lt;a href=&quot;https://twitter.com/nathanjurgenson&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Nathan Jurgenson&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/pjrey&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;PJ Rey&lt;/a&gt; penned a piece on the &lt;a href=&quot;https://thesocietypages.org/cyborgology/2011/11/01/frictionless-sharing-and-the-digital-paparazzi/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;online phenomenon of frictionless sharing&lt;/a&gt;. They make an interesting and seemingly prescient argument that the internet is full of “digital paparazzi” invisibly collecting data, tracking users, and surveilling us all. In turn, this shapes how we act in front of the glare of the cameras. &lt;/p&gt;
&lt;p&gt;In 2021, data collection has only gotten more sophisticated and discussions surrounding online privacy are ubiquitous––our online monitoring no longer comes as a shock: &lt;/p&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;em&gt;“Of course, the subject of invisible digital-paparazzi documentation is not always completely inactive in the documentation process. Many of us know, to some degree or another, that we are being tracked. Celebrities know that paparazzi might be present at any time and place and learn to behave as if they are always being watched...we are increasingly aware that we are being documented, and thus increasingly calibrate our behaviors as such.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the wrong hands, this metadata could be dangerous––a Spoonbill user might be an internet anthropologist, a journalist, a casual creeper, or an obsessed ex. Tools that surface personal data should be thinking through worst case scenarios involving the most nefarious actors––what starts as &lt;a href=&quot;https://www.forbes.com/sites/simonchandler/2019/10/11/social-media-proves-itself-to-be-the-perfect-tool-for-stalkers/?sh=50280c223d79&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;internet creeping can descend into real-life stalking&lt;/a&gt;. I asked Duke about any safety concerns regarding the location change tracking in Spoonbill:&lt;/p&gt;
&lt;blockquote readability=&quot;18&quot;&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;“&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;Yes! While Spoonbill purposely doesn’t track tweet-level location data, I think there are concerns around tracking&lt;/em&gt; any &lt;em&gt;sort of change, location, and all the others included (though in my experience location is actually overly noisy — I’ve had more removal requests for name changes than location changes)...I think a lot of people are very angry at [the EU’s General Data Protection Regulation] because, frankly, it is annoying — yes, the cookie consent banners are old hat, I get it, but data is an important and sacred thing. It’s extremely important to own your own data! I think laws, not best intentions, are the right mechanism to dictate how apps like mine need to behave with regards to any sort of safety or privacy concern.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While these are Big-P Privacy concerns, there are the little-p privacy concerns, too. In Spoonbill, the little changes we make to our Twitter profiles, seemingly hidden from view, are actually tracked, made public, and delivered to people’s inboxes. While I tend to think this is mostly benign, it’s interesting to ponder on Jurgenson and Rey’s thesis of how our behaviours are increasingly dictated by the erosion of our privacy and our knowledge of being watched. Some Spoonbill users, aware of being observed, acknowledge and take part in the game of it all: &lt;/p&gt;
&lt;div class=&quot;quill-block-image&quot; id=&quot;undefined&quot; data-source=&quot;{&amp;quot;link&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_16.png&amp;quot;,&amp;quot;image&amp;quot;:&amp;quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_16.png&amp;quot;}&quot;&gt;&lt;a href=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_16.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://d24ovhgu8s7341.cloudfront.net/uploads/editor/posts/1495/optimized_16.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Not everyone has quite the same humorous response to the uncanny feeling of being seen. In defining ourselves online, we draw from the influence of the internet, often contorting in ways we anticipate will be acceptable to an online gaze. But at a certain point, our online self drives our personhood IRL too. Plastic surgeons have been inundated with clients asking them for what &lt;a href=&quot;https://twitter.com/jiatolentino&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Jia Tolentino&lt;/a&gt; calls “&lt;a href=&quot;https://www.newyorker.com/culture/decade-in-review/the-age-of-instagram-face&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Instagram Face&lt;/a&gt;,” a look based on the effects of FaceTune filters. &lt;/p&gt;
&lt;p&gt;It’s not hard to imagine how our social media identities affect other aspects of our selves, especially in the increasingly irrelevant real world. As both work and life moves “remote,” the most we see of even our loved ones is online. As more and more of who we are exists only on the internet, we alter our offline lives with the anticipation that the highlights will be uploaded, photos and statuses that confirm who we say we are, and that we’re still here. And as we grow more socially aware, in part because of what comes to us through our feeds, we become more anxious and exacting, refining our internet identity and A/B testing our selves, in search for the fit that feels––or looks––like us. We treat our identities like software, continuously debugging in order to avoid obsolescence in an online world that’s increasingly difficult to differentiate from the real one. We’re in constant iteration, finding the best way to describe ourselves in our own words.&lt;/p&gt;
&lt;hr class=&quot;quill-line&quot;/&gt;&lt;p&gt;&lt;em&gt;This piece was edited by&lt;/em&gt; &lt;a href=&quot;https://twitter.com/DidYouWriteThat&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Rachel Jepsen&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, with help from&lt;/em&gt; &lt;a href=&quot;https://twitter.com/NatalieToren&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Natalie Toren&lt;/em&gt;&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;https://twitter.com/danshipper&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Dan Shipper&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;


</description>
<pubDate>Tue, 09 Feb 2021 19:45:23 +0000</pubDate>
<dc:creator>dshipper</dc:creator>
<og:title>Creeping as a Service (CraaS)</og:title>
<og:description>How Spoonbill reveals our obsession with identity</og:description>
<og:image>https://d24ovhgu8s7341.cloudfront.net/uploads/post/social_media_image/1495/Social_1200x628.png</og:image>
<og:url>https://every.to/divinations/creeping-as-a-service-craas</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://every.to/divinations/creeping-as-a-service-craas</dc:identifier>
</item>
<item>
<title>Pattern matching accepted for Python</title>
<link>https://lwn.net/Articles/845480/</link>
<guid isPermaLink="true" >https://lwn.net/Articles/845480/</guid>
<description>The Python steering council has, after some discussion, accepted the controversial &lt;a href=&quot;https://lwn.net/Articles/838600/&quot;&gt;proposal to add a pattern-matching primitive&lt;/a&gt; to the language. &quot;&lt;span&gt;We acknowledge that Pattern Matching is an extensive change to Python and that reaching consensus across the entire community is close to impossible. Different people have reservations or concerns around different aspects of the semantics and the syntax (as does the Steering Council). In spite of this, after much deliberation, reviewing all conversations around these PEPs, as well as competing proposals and existing poll results, and after several in-person discussions with the PEP authors, we are confident that Pattern Matching as specified in PEP 634, et al, will be a great addition to the Python language.&lt;/span&gt;&quot;
&lt;hr /&gt;&lt;table readability=&quot;8.864224137931&quot;&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;From&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;Python Steering Council &amp;lt;steering-council-AT-python.org&amp;gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;To&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;Python-Dev &amp;lt;python-dev-AT-python.org&amp;gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;5&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;Subject&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;[Python-Dev] Acceptance of Pattern Matching PEPs 634, 635, 636, Rejection of PEPs 640 and 642&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;3&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;Date&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;Mon, 08 Feb 2021 12:07:22 -0800&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;2&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;Message-ID&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;&amp;lt;61D540B9-2FE5-4CC8-8038-5654B1D325C7@python.org&amp;gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;Cc&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;python-committers &amp;lt;python-committers-AT-python.org&amp;gt;, Python Steering Council &amp;lt;steering-council-AT-python.org&amp;gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;strong&gt;Archive-link&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td valign=&quot;top&quot;&gt;&lt;a href=&quot;https://lwn.net/ml/python-dev/61D540B9-2FE5-4CC8-8038-5654B1D325C7@python.org/&quot;&gt;Article&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;pre&gt;
After much deliberation, the Python Steering Council is happy to announce
that we have chosen to accept PEP 634, and its companion PEPs 635 and 636,
collectively known as the Pattern Matching PEPs. We acknowledge that
Pattern Matching is an extensive change to Python and that reaching
consensus across the entire community is close to impossible.  Different
people have reservations or concerns around different aspects of the
semantics and the syntax (as does the Steering Council). In spite of this,
after much deliberation, reviewing all conversations around these PEPs, as
well as competing proposals and existing poll results, and after several
in-person discussions with the PEP authors, we are confident that Pattern
Matching as specified in PEP 634, et al, will be a great addition to the
Python language.

We also recognize that such a large new feature needs to be accompanied by
comprehensive documentation and specification, both in the tutorial section
of the documentation and in the language reference. We consider that the
presence of such high-quality documentation must be present on the first
release of Python 3.10, and therefore its absence should be considered a
release blocker.  We do not consider the PEPs or any possible external
documentation to be sufficient.

At the same time, we’re rejecting PEPs 640 and 642. Both PEPs have received
little support from core developers. PEP 642’s proposed syntax does not
seem like the right way to solve the jagged edges in PEP 634’s syntax,
although the SC understands the desire to improve those aspects of the
Pattern Matching proposal.

Regarding that, we would also like to mention that changes building on top
of PEP 634 (even PEPs 640 and 642 if they now gain support) can still be
submitted via the PEP process for review using the regular channels
(discussions in python-dev or the &lt;a href=&quot;https://discuss.python.org/&quot;&gt;https://discuss.python.org/&lt;/a&gt; server),
followed by a formal submission to the Steering Council for consideration,
taking into account that backwards-incompatible changes can only be made
before the feature freeze point of Python 3.10.  See PEP 619
(&lt;a href=&quot;https://www.python.org/dev/peps/pep-0619/&quot;&gt;https://www.python.org/dev/peps/pep-0619/&lt;/a&gt;)
for details on the release schedule for Python 3.10.

We know that Pattern Matching has been a challenging feature that has
sparked considerable discussions and design conversations, leading to
several revisions from feedback stemming from the community, core devs, and
the Steering Council. We are very happy to see that the Python developer
community remains passionate and respectful, and we are sure that the
result has benefited a lot because of it.

Congratulations to the PEP(s) authors: Guido, Brandt, Tobias, Daniel,
Talin, and everyone that participated in the discussion and implementation
of this important new feature!

-The Python Steering Council


_______________________________________________
Python-Dev mailing list -- python-dev@python.org
To unsubscribe send an email to python-dev-leave@python.org
&lt;a href=&quot;https://mail.python.org/mailman3/lists/python-dev.python.org/&quot;&gt;https://mail.python.org/mailman3/lists/python-dev.python....&lt;/a&gt;
Message archived at
&lt;a href=&quot;https://mail.python.org/archives/list/python-dev@python.org/message/SQC2FTLFV5A7DV7RCEAR2I2IKJKGK7W3/&quot;&gt;https://mail.python.org/archives/list/python-dev@python.o...&lt;/a&gt;
Code of Conduct: &lt;a href=&quot;http://python.org/psf/codeofconduct/&quot;&gt;http://python.org/psf/codeofconduct/&lt;/a&gt;
&lt;/pre&gt;&lt;br clear=&quot;all&quot; /&gt;&lt;hr width=&quot;60%&quot; align=&quot;left&quot; /&gt;
(&lt;a href=&quot;https://lwn.net/Login/?target=/Articles/845480/&quot;&gt;Log in&lt;/a&gt; to post comments)</description>
<pubDate>Tue, 09 Feb 2021 18:16:51 +0000</pubDate>
<dc:creator>eplanit</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://lwn.net/Articles/845480/</dc:identifier>
</item>
<item>
<title>Facebook sued for ‘losing control’ of users’ data</title>
<link>https://www.bbc.com/news/technology-55998588</link>
<guid isPermaLink="true" >https://www.bbc.com/news/technology-55998588</guid>
<description>&lt;p&gt;A Facebook spokesman said: &quot;The Information Commissioner's Office investigation into these issues, which included seizing and interrogating Cambridge Analytica's servers, found no evidence that any UK or EU users' data was transferred by [app developer] Dr [Aleksandr] Kogan to Cambridge Analytica.&quot;&lt;/p&gt;
</description>
<pubDate>Tue, 09 Feb 2021 15:07:42 +0000</pubDate>
<dc:creator>bmcn2020</dc:creator>
<og:description>The alleged data breach was revealed in the wake of the Cambridge Analytica scandal.</og:description>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/13B39/production/_116879608_hi065358355.jpg</og:image>
<og:title>Facebook sued for 'losing control' of users’ data</og:title>
<og:type>article</og:type>
<og:url>https://www.bbc.com/news/technology-55998588</og:url>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/technology-55998588</dc:identifier>
</item>
<item>
<title>Haskell: The Bad Parts, part 2 (2020)</title>
<link>https://www.snoyman.com/blog/2020/11/haskell-bad-parts-2</link>
<guid isPermaLink="true" >https://www.snoyman.com/blog/2020/11/haskell-bad-parts-2</guid>
<description>&lt;p class=&quot;text-center&quot;&gt;&lt;a class=&quot;btn&quot; href=&quot;https://www.beginrust.com/&quot;&gt;New: The &quot;Begin Rust&quot; book&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;share-bar-wrapper&quot;&gt;
&lt;p&gt;&lt;strong&gt;Share this&lt;/strong&gt;    &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;See a typo? Have a suggestion? &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://github.com/snoyberg/snoyman.com/edit/master/content/blog/haskell-bad-parts-2.md&quot;&gt;Edit this page on Github&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you didn't see it, please check out &lt;a href=&quot;https://www.snoyman.com/blog/2020/10/haskell-bad-parts-1&quot;&gt;part 1 of this series&lt;/a&gt; to understand the purpose of this. Now, for more bad parts!&lt;/p&gt;
&lt;h2 id=&quot;partial-functions-in-general&quot;&gt;Partial functions (in general)&lt;/h2&gt;
&lt;p&gt;Laziness very likely belongs in this list. My favorite part of criticizing laziness is how quickly people jump to defend it based on edge cases. So let's be a bit more nuanced before I later get far &lt;em&gt;less&lt;/em&gt; nuanced. Laziness is &lt;strong&gt;obviously&lt;/strong&gt; a good thing. Strictness is &lt;strong&gt;obviously&lt;/strong&gt; a good thing. They also both suck. It depends on context and purpose. Each of them introduce different kinds of issues. The real question is: what's a more sensible default? We'll get to that another time.&lt;/p&gt;
&lt;p&gt;I called this section partial functions. Am I having a senior moment? Maybe, but I intentionally started with laziness. In a strict language, function calls can result in exceptions being thrown, segfaulting occurring, or panicking. (And if I write a &quot;Rust: The Bad Parts&quot;, believe me, I'll be mentioning panicking.) The fact that a function &lt;em&gt;acts&lt;/em&gt; like it can successfully perform something, but in fact fails in a predictable way (like failing a &lt;code&gt;HashMap&lt;/code&gt; lookup), it should be reflected at the type level. If not, ya dun goofed.&lt;/p&gt;
&lt;p&gt;Also, if you have a language that doesn't let you reflect this information at the type level: ya dun goofed.&lt;/p&gt;
&lt;p&gt;Partial functions are the antithesis of this concept. They allow you to say &quot;yeah dude, I can &lt;em&gt;totally&lt;/em&gt; give you the first value in an empty list.&quot; Partial functions are like politicians: you can tell they're lying because their lips are moving. (&quot;But Michael,&quot; you say. &quot;Functions don't have lips!&quot; Whatever, I'm waxing poetical.)&lt;/p&gt;
&lt;p&gt;Alright, so plenty of languages screw this up. Haskell tells those languages &quot;hold my beer.&quot;&lt;/p&gt;
&lt;img src=&quot;https://www.snoyman.com/static/images/holdmybeer.jpg&quot;/&gt;&lt;p&gt;Haskell screws up partial functions way, way worse than other languages:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It promotes a whole bunch of them in the standard libraries and &lt;code&gt;Prelude&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Some libraries, like &lt;code&gt;vector&lt;/code&gt; (I'm getting to you, don't worry) make it &lt;em&gt;really&lt;/em&gt; confusing by providing an &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;unsafeIndex&lt;/code&gt; function. Hint: &lt;code&gt;index&lt;/code&gt; isn't really safe, it's just less unsafe.&lt;/li&gt;
&lt;li&gt;There's no obvious way to search for usages of these partial functions.&lt;/li&gt;
&lt;li&gt;And, by far, the worst...&lt;/li&gt;
&lt;/ol&gt;&lt;h3 id=&quot;values-are-partial-too&quot;&gt;Values are partial too!&lt;/h3&gt;
&lt;p&gt;Only in a lazy language does this exist. You call a function. You get a result. You continue working. In any other non-lazy language, that means you have a value. If I have a &lt;code&gt;u32&lt;/code&gt; in Rust, I actually have a &lt;code&gt;u32&lt;/code&gt; in Rust. Null pointers in languages like C and Java somewhat muddy this situation, but at least primitive types are really there if they say they're there.&lt;/p&gt;
&lt;p&gt;No, not Haskell. &lt;code&gt;x :: Int&lt;/code&gt; may in fact not exist. It's a lie. &lt;code&gt;let x = head [] :: [Int]&lt;/code&gt; is a box waiting to explode. And you find out &lt;em&gt;much&lt;/em&gt; later. And it's even worse than that. &lt;code&gt;let alice = Person { name = &quot;Alice&quot;, age = someAge }&lt;/code&gt; may give you a valid &lt;code&gt;Person&lt;/code&gt; value. You can evaluate it. But Cthulhu help you if you evaluate &lt;code&gt;age alice&lt;/code&gt;. Maybe, just maybe, &lt;code&gt;someAge&lt;/code&gt; is a bottom value. Boom! You've smuggled a dirty bomb out.&lt;/p&gt;
&lt;p&gt;I'm not advocating for removing laziness in Haskell. In fact I'm not really advocating for much of anything in this series. I'm just complaining, because I like complaining.&lt;/p&gt;
&lt;p&gt;But &lt;em&gt;if&lt;/em&gt; I was to advocate some changes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Deprecate partial functions&lt;/li&gt;
&lt;li&gt;Introduce a naming scheme for partial functions to be more obvious&lt;/li&gt;
&lt;li&gt;Introduce a compiler warning to note partial function use (with a pragma to turn off specific usages)&lt;/li&gt;
&lt;li&gt;Warn by default on partial pattern matches&lt;/li&gt;
&lt;li&gt;Advocate strict data fields by default&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;but-ackshualllly-infinite-loops&quot;&gt;But ackshualllly, infinite loops&lt;/h3&gt;
&lt;p&gt;Someone's gonna say it. So I'll say it. Yes, without major language changes, you can't prevent partial functions. You can't even detect them, unless Turing was wrong (and I have my suspicions.) But Haskell community, please, please learn this lesson:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DON'T LET THE PERFECT BE THE ENEMY OF THE GOOD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We can get rid of many of the most common partial functions trivially. We can detect many common cases by looking for partial pattern matches and usage of &lt;code&gt;throw&lt;/code&gt; (again, horribly named function). &quot;But we can't get everything&quot; doesn't mean &quot;don't try to get something.&quot;&lt;/p&gt;
&lt;h2 id=&quot;hubris&quot;&gt;Hubris&lt;/h2&gt;
&lt;p&gt;Given what I just said, we Haskellers have a lot of hubris. Each time you say &quot;if it compiles it works,&quot; a thunk dies and collapses into a blackhole. We've got plenty of messes in Haskell that don't sufficiently protect us from ourselves. The compiler can only do as good a job as our coding standards and our libraries allow.&lt;/p&gt;
&lt;p&gt;&quot;But Haskell's at least better than languages like PHP.&quot; I mean, obviously I agree with this, or I'd be writing PHP. But since I'm being ridiculously hyperbolic here, let me make a ridiculous claim:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;&lt;strong&gt;PHP is better than Haskell, since at least you don't get a false sense of security&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;- Michael Snoyman, totally 100% what he actually believes, you should totally quote this out of context&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've said this so many times. So I'll say it again. Using a great language with safety features is one tiny piece of the puzzle.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Did you get the software requirements right?&lt;/li&gt;
&lt;li&gt;Did you leverage the type system to prevent the bugs you're trying to prevent?&lt;/li&gt;
&lt;li&gt;Do your underlying libraries have bugs?&lt;/li&gt;
&lt;li&gt;Did you find a way to implement a function with correct types but incorrect semantics?&lt;/li&gt;
&lt;li&gt;Did you host the thing on a dinky server sitting under your desk and forget that you have power outages on a daily basis?&lt;/li&gt;
&lt;li&gt;Did you forget to write a single test case?&lt;/li&gt;
&lt;li&gt;Do your test cases actually test anything meaningful?&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There are &lt;em&gt;so many ways&lt;/em&gt; for software to fail outside the purview of the type system. We've got to stop thinking that somehow Haskell (or, for that matter, Rust, Scala, and other strongly typed languages) are some kind of panacea. Seriously: the PHP people at least know their languages won't protect them from anything. We should bring some of that humility back to Haskell.&lt;/p&gt;
&lt;p&gt;Haskell provides me tools to help prevent certain classes of bugs, so I can spend more of my time catching a bunch of other bugs that I'm absolutely going to write. Because I'm dumb. And we need to remember: we're all dumb.&lt;/p&gt;
&lt;h2 id=&quot;more-partial-functions&quot;&gt;More partial functions!&lt;/h2&gt;
&lt;p&gt;You know what's worse than partial functions? Insidiously partial functions. We've all been screaming about &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; for years. My hackles rise every time I see a &lt;code&gt;read&lt;/code&gt; instead of &lt;code&gt;readMaybe&lt;/code&gt;. I can't remember the last time I saw the &lt;code&gt;!!&lt;/code&gt; operator in production code.&lt;/p&gt;
&lt;p&gt;But there are plenty of other functions that are just as dangerous, if not more so. More dangerous because they aren't well known to be partial. They are commonly used. People don't understand why they're dangerous. And they fail only in edge cases that people aren't thinking about.&lt;/p&gt;
&lt;p&gt;Exhibit A: I present &lt;code&gt;decodeUtf8&lt;/code&gt;. (Thanks &lt;a href=&quot;https://twitter.com/kerckhove_ts/status/1321390954172063745?s=20&quot;&gt;Syd&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Go ahead, search your codebase. Be dismayed that you've found it present.&lt;/p&gt;
&lt;p&gt;What's wrong with &lt;code&gt;decodeUtf8&lt;/code&gt;? As we established last time, character encoding crap breaks stuff in production. UTF-8 works about 99% of the time, especially for people in Western countries. You'll probably forget to even test for it. And that function looks so benign: &lt;code&gt;decodeUtf8 :: ByteString -&amp;gt; Text&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DO NOT BE FOOLED&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This function is a ticking time bomb. Use &lt;code&gt;decodeUtf8'&lt;/code&gt; (yes, it's named that badly, just like &lt;code&gt;foldl'&lt;/code&gt;) and explicitly handle error cases. Or use I/O functions that explicitly handle UTF-8 decoding errors and throw a runtime exception.&lt;/p&gt;
&lt;p&gt;&quot;I can't believe Michael still thinks runtime exceptions are a good idea.&quot; I'll get to that another time. I don't really believe they're a good idea. I believe they are omnipresent, better than bottom values, and our least-bad-option.&lt;/p&gt;
&lt;h2 id=&quot;law-abiding-type-classes&quot;&gt;Law-abiding type classes&lt;/h2&gt;
&lt;p&gt;Now I've truly lost it. What in tarnation could be wrong with law-abiding type classes? They're good, right? Yes, they are! The section heading is complete clickbait. Haha, fooled you!&lt;/p&gt;
&lt;p&gt;There's a concept in the Haskell community that all type classes should be law-abiding. I've gone to the really bad extreme opposing this in the past with early versions of &lt;code&gt;classy-prelude&lt;/code&gt;. In my defense: it was an experiment. But it was a bad idea. I've mostly come around to the idea of type classes being lawful. (Also, the original namespacing issues that led to &lt;code&gt;classy-prelude&lt;/code&gt; really point out a much bigger bad part of Haskell, which I'll get to later. Stay tuned! Hint: Rust beat us again.)&lt;/p&gt;
&lt;p&gt;Oh, right. Speaking of Rust: they do &lt;em&gt;not&lt;/em&gt; believe in law-abiding type classes. There are plenty of type classes over there (though they call them &lt;code&gt;trait&lt;/code&gt;s) that are completely ad-hoc. I'm looking at you, &lt;code&gt;FromIterator&lt;/code&gt;. This is Very, Very Bad of course. Or so my Haskell instincts tell me. And yet, it makes code Really, Really Good. So now I'm just confused.&lt;/p&gt;
&lt;p&gt;Basically: I think we need much more nuanced on this in the Haskell community. I'm leaning towards my &lt;em&gt;very&lt;/em&gt; original instincts having been spot on. So:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Law abiding type classes: great&lt;/li&gt;
&lt;li&gt;Flippantly non-law-abiding type classes ala the original &lt;code&gt;classy-prelude&lt;/code&gt;: bad&lt;/li&gt;
&lt;li&gt;&quot;You know what I meant&quot; typeclasses like &lt;code&gt;ToContent&lt;/code&gt; in Yesod: also great&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This isn't exactly in line with a &quot;bad part&quot; of Haskell. Up until now I've been giving a nuanced reflection on my journeys in Haskell. Let me try something better then. Ahem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DON'T LECTURE ME ON LAW ABIDING TYPE CLASSES AND FLAGRANTLY VIOLATE LAWS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm staring at you, &lt;code&gt;Eq Double&lt;/code&gt;. No, you cannot do equality on a &lt;code&gt;Double&lt;/code&gt;. (And thanks again to Syd for this idea.) Rust, again, Got It Right. See &lt;code&gt;PartialEq&lt;/code&gt; vs &lt;code&gt;Eq&lt;/code&gt;. Floating point values do not allow for total equality. This makes things like &lt;code&gt;Map Double x&lt;/code&gt; dangerous. Like, super dangerous. Though maybe not as dangerous as &lt;code&gt;HashMap Double x&lt;/code&gt;, which deserves its own rant later.&lt;/p&gt;
&lt;p&gt;So come down from your high horses. We don't have law abiding type classes. We have &quot;if I close my eyes and pretend enough then maybe I have law abiding type classes.&quot;&lt;/p&gt;
&lt;h2 id=&quot;unused-import-warnings&quot;&gt;Unused import warnings&lt;/h2&gt;
&lt;p&gt;Haskell has a dumb set of default warnings enabled. (&quot;I think you mean GHC, one implementation of Haskell, not Haskell the language itself.&quot; Uh-huh.) How can we &lt;em&gt;not&lt;/em&gt; generate a warning for a partial pattern match? Come on! ADTs and pattern matching is &lt;em&gt;the&lt;/em&gt; killer feature to first expose people to. And it's a total lie: the compiler by default doesn't protect us from ourselves.&lt;/p&gt;
&lt;p&gt;So of course, we all turn on &lt;code&gt;-Wall&lt;/code&gt;. Because we're good kids. We want to do the right thing. And this, of course, turns on unused import warnings. And because each new release of GHC and every library on Hackage likes to mess with us, we are &lt;em&gt;constantly&lt;/em&gt; exporting new identifiers from different modules.&lt;/p&gt;
&lt;p&gt;The amount of time I have spent adding weird hacks to account for the fact that &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; is suddenly exposed from &lt;code&gt;Prelude&lt;/code&gt;, and therefore my &lt;code&gt;import Data.Monoid ((&amp;lt;&amp;gt;))&lt;/code&gt; isn't necessary, is obscene. The introduction of fiddly CPP to work around this sucks. In fact, this all sucks. It's horrible.&lt;/p&gt;
&lt;p&gt;I didn't realize how bad it was until I spent more time writing Rust. It reminded me that I never had these problems back as a Java developer. Or C++. This has been a Haskell-only problem for me. Maybe I'll get into this later.&lt;/p&gt;
&lt;p&gt;Side note: I'm trying to avoid turning this series into &quot;Rust is better than Haskell.&quot; But the fact is that many of the problems we face in Haskell &lt;em&gt;don't&lt;/em&gt; exist in Rust, for one reason or another. This specific issue is due to a better crate/module system, and object syntax. As long as we're getting our cards on the table, I also think Rust demonstrates what a good freeze/unfreeze story would look like (I'm looking at you &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;HashMap&lt;/code&gt;), what a good standard library would be, and what a regular release schedule with backwards compat should look like. Oh, and of course good community processes.&lt;/p&gt;
&lt;h2 id=&quot;the-vector-package&quot;&gt;The vector package&lt;/h2&gt;
&lt;p&gt;Did I just mention that Rust can show us what a good standard library is? Yes I did! I'm only going to begin to scratch the surface on how bad &lt;code&gt;vector&lt;/code&gt; is here. It's really bad. &lt;code&gt;vector&lt;/code&gt; is at the level of being &lt;em&gt;just bad enough&lt;/em&gt; that no one wants to use it, but being &lt;em&gt;just barely serviceable enough&lt;/em&gt; and &lt;em&gt;just wide spread enough&lt;/em&gt; that no one wants to replace it. There are two Haskellers I deeply trust who have taken on efforts to do just that, and even I haven't moved over.&lt;/p&gt;
&lt;p&gt;Firstly, the &lt;code&gt;vector&lt;/code&gt; package is a package. It shouldn't be. Packed arrays should be in the standard library. Rust got this right. &lt;code&gt;Vec&lt;/code&gt; is completely core to the language. And it ties in nicely with built-in syntax for arrays and slices, plus the &lt;code&gt;vec!&lt;/code&gt; macro. Haskell's got lists. You can turn on &lt;code&gt;OverloadedLists&lt;/code&gt;, but I don't know if anyone does. And besides, you've gotta reach outside of &lt;code&gt;base&lt;/code&gt; to get a &lt;code&gt;Vector&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt; is slow to compile. Dog slow. Sloth-recovery-from-Thanksgiving-dinner slow. I'm peeved by this right now because I had to compile it recently.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vector&lt;/code&gt; seems to have a litany of runtime performance issues. I haven't tested these myself. But people regularly complain to me about them. Enough people, with enough Haskell experience, that I believe them. (And &lt;code&gt;text&lt;/code&gt;: you're in this list too.)&lt;/p&gt;
&lt;p&gt;Oh, right, &lt;code&gt;text&lt;/code&gt;. &lt;code&gt;vector&lt;/code&gt; is completely different from &lt;code&gt;bytestring&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt;. And there's the pinned-vs-unpinned memory issue that screws things up. I'm unaware of any other language needing to make that distinction. (If there &lt;em&gt;are&lt;/em&gt; examples, please let me know. I'd love to read about it.)&lt;/p&gt;
&lt;p&gt;Stream fusion is dumb. I mean, it's not dumb, I love it. &quot;Stream fusion should be a default when performing array operations so that you magically mostly fuse away intermediate buffers but sometimes it doesn't work because rewrite rules are really fiddly and then my program consumes 8GB of memory whoopsie daisy&quot; is dumb. Really, really dumb.&lt;/p&gt;
&lt;p&gt;The API for &lt;code&gt;vector&lt;/code&gt; is lacking. Sure, for what it does, it's fine. But every time I use &lt;code&gt;.push()&lt;/code&gt; in Rust, I'm reminded that it could and should be better. I don't want to work with lists all the time. I want to have a mutable vector API that I'm happy to use. I want to sprinkle more &lt;code&gt;runST&lt;/code&gt; throughout my code. I want phrases like &quot;freeze&quot; and &quot;thaw&quot; to be common place, much like &lt;code&gt;mut&lt;/code&gt; is regularly used in Rust.&lt;/p&gt;
&lt;p&gt;Oh, and there's no such thing as a strict, boxed vector. Boo.&lt;/p&gt;
&lt;p&gt;So in sum:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;vector&lt;/code&gt; tries to do two things (streaming library and packed buffers)&lt;/li&gt;
&lt;li&gt;It does neither particularly well&lt;/li&gt;
&lt;li&gt;There are enough friction points that people don't use it where it should be used, making lists overused&lt;/li&gt;
&lt;li&gt;It's not core to the language and libraries, but it's &quot;kinda core,&quot; preventing better options from succeeding&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&quot;Michael, you're not being very nice to the maintainers of this library.&quot; I mean these comments in complete respect. I've &lt;em&gt;advocated&lt;/em&gt; for many of the things I'm now saying are bad. We learn new stuff and move on. If I had a vision for how to make &lt;code&gt;vector&lt;/code&gt; better, I'd propose it. I'm just airing my concerns. I have a vague idea on a nicer library, where you have a typeclass and associated type determining the preferred storage format for each type that can be stored, growable storage, an easy-to-use freeze/thaw, minimal dependencies, quick compile, and associated but separate stream fusion library. But I think working on it would be like &lt;a href=&quot;https://xkcd.com/927/&quot;&gt;adding a new standard&lt;/a&gt;, so I'm not jumping into the fray.&lt;/p&gt;
&lt;h2 id=&quot;next-time&quot;&gt;Next time...&lt;/h2&gt;
&lt;p&gt;I've dropped plenty of hints for future parts in this series. But I'd really love to hear ideas from others. Thanks to Syd for providing some of the fodder this round. And thanks to a number of people for mentioning partial functions.&lt;/p&gt;
&lt;p&gt;I kind of think I owe some attacks on async exceptions. Stay tuned!&lt;/p&gt;
&lt;h2 id=&quot;clarification&quot;&gt;Clarification&lt;/h2&gt;
&lt;p&gt;Someone's gonna get upset about my Turing comment above. No, I'm not challenging Turing on the halting problem. I only wanted to imply I was for poops and giggles.&lt;/p&gt;
&lt;div class=&quot;text-center&quot;&gt;&lt;a href=&quot;https://www.snoyman.com/blog/&quot; class=&quot;btn btn-primary&quot;&gt;Read more blog posts&lt;/a&gt;&lt;/div&gt;

&lt;p class=&quot;alert alert-primary&quot;&gt;Note that, due to privacy concerns, I have removed the Disqus comments section of this blog.&lt;/p&gt;
&lt;div class=&quot;share-bar-wrapper&quot;&gt;
&lt;p&gt;&lt;strong&gt;Share this&lt;/strong&gt;    &lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Tue, 09 Feb 2021 14:27:26 +0000</pubDate>
<dc:creator>anuragsoni</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.snoyman.com/blog/2020/11/haskell-bad-parts-2/</dc:identifier>
</item>
<item>
<title>José Valim Reveals “Project Nx” (Numerical Elixir) [audio]</title>
<link>https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx/</link>
<guid isPermaLink="true" >https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx/</guid>
<description>
&lt;p&gt;José Valim visits and finally publicly reveals what Project Nx is! He and others have been working on it for 3 months and he’s finally ready to unveil it. José will speak more about it at the LambdaDays conference, demonstrating it with code and announcing the release and availability of the OpenSource code. This is an exciting development that brings Elixir into areas it hasn’t been used before. We also talk about what this means for Elixir and the community going forward. A must listen!&lt;/p&gt;
&lt;p&gt;Show Notes online – &lt;a href=&quot;https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx&quot;&gt;https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Elixir Community News&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do you know some Elixir news we don’t? Tell us at &lt;a href=&quot;https://twitter.com/ThinkingElixir&quot;&gt;@ThinkingElixir&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Discussion Resources&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guest Information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Find us online&lt;/strong&gt;&lt;/p&gt;

&lt;p class=&quot;powerpress_links powerpress_links_mp3&quot;&gt;Podcast: &lt;a href=&quot;https://media.blubrry.com/thinkingelixir/s/thinkingelixir-podcast.s3.amazonaws.com/034-project-nx-with-jose-valim.mp3&quot; class=&quot;powerpress_link_d&quot; title=&quot;Download&quot; rel=&quot;nofollow&quot; download=&quot;034-project-nx-with-jose-valim.mp3&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 09 Feb 2021 12:26:21 +0000</pubDate>
<dc:creator>thibaut_barrere</dc:creator>
<og:type>article</og:type>
<og:title>#034 José Valim reveals Project Nx - Thinking Elixir</og:title>
<og:description>José Valim visits and finally publicly reveals what Project Nx is! He and others have been working on it for 3 months and he's finally ready to unveil it.</og:description>
<og:url>https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx/</og:url>
<og:image>https://thinkingelixir.com/wp-content/uploads/2020/05/podcast-graphic_3000px.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thinkingelixir.com/podcast-episodes/034-jose-valim-reveals-project-nx/</dc:identifier>
</item>
<item>
<title>Man to pay £25,000 ($34,000) damages over negative TrustPilot review</title>
<link>https://www.bbc.com/news/technology-55981600</link>
<guid isPermaLink="true" >https://www.bbc.com/news/technology-55981600</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bbc.com/news/technology-55981600&quot;&gt;https://www.bbc.com/news/technology-55981600&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=26076391&quot;&gt;https://news.ycombinator.com/item?id=26076391&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 270&lt;/p&gt;
&lt;p&gt;# Comments: 240&lt;/p&gt;
</description>
<pubDate>Tue, 09 Feb 2021 11:47:56 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:description>The man left a negative review of a law firm, which then took legal action over his comment.</og:description>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/11C53/production/_116878727_gettyimages-1221327322.jpg</og:image>
<og:title>Man to pay £25,000 damages over negative TrustPilot review</og:title>
<og:type>article</og:type>
<og:url>https://www.bbc.com/news/technology-55981600</og:url>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/technology-55981600</dc:identifier>
</item>
<item>
<title>No support Linux hosting shutting down from hack</title>
<link>https://www.nosupportlinuxhosting.com/</link>
<guid isPermaLink="true" >https://www.nosupportlinuxhosting.com/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;title&gt;No Support Linux Hosting is Shutting Down&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;36.481409001957&quot;&gt;

&lt;p&gt;On February 8, 2021, a hacker successfully compromised all the servers we use to operate our business including the No Support Linux Hosting web site, Admin section, and our customer database. We can no longer operate the No Support Linux Hosting business.&lt;/p&gt;
&lt;p&gt;All customers should immediately download backups of their websites and databases through cPanel.&lt;/p&gt;
&lt;p&gt;Thank you to all our customers for the many years of business. We appreciate it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:support@nosupportlinuxhosting.com&quot;&gt;support@nosupportlinuxhosting.com&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 09 Feb 2021 11:01:13 +0000</pubDate>
<dc:creator>ourmandave</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nosupportlinuxhosting.com/</dc:identifier>
</item>
<item>
<title>A Statement on Recent Events Between Signal and the Anti-Censorship Community</title>
<link>https://github.com/net4people/bbs/issues/63</link>
<guid isPermaLink="true" >https://github.com/net4people/bbs/issues/63</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-rF3cnLJE5IkKUWFkw54emxUMV82DhbZ9aJun83zhvBgJ7J7ZXC20bEFVuLY9RRRC60Ig+pHQO57DuYBrYO+cAA==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-ac5ddc9cb244e4890a516164c39e1e9b.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-COVYh+U7Losyf4/43AlKX9VlGHpb8dafa1BDCjySztH9fDfPtG/JKujmF8qxqvCFtQ52wEF5h/CT3xd9MRo0JA==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-08e55887e53b2e8b327f8ff8dc094a5f.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-QbKgFXj+JoU12QsMYLRWqW9sWAzGHCCMC7FlsHunxzfLL4jGwfsmyAtbn4F/deHyBtQOmEQLz5mPljNOKjwErw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/behaviors-41b2a01578fe268535d90b0c60b456a9.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-2QYLOTG1Aa/Nq1CKgmlPElI1RfCFxxTHzoci3iVz8x9x8Q/oYsPTjeACbyE/5wa1kvmSiJ4z50ZUKOmkiZA7Fg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-d9060b3931b501afcdab508a82694f12.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community · Issue #63 · net4people/bbs · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community Sorry to bother you all, but in light of recent events that have happened between Signal and some of our ...&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=1477376905&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://avatars.githubusercontent.com/u/33761262?s=400&amp;amp;v=4&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community · Issue #63 · net4people/bbs&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community Sorry to bother you all, but in light of recent events that have ...&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars.githubusercontent.com/u/33761262?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community · Issue #63 · net4people/bbs&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/net4people/bbs/issues/63&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community Sorry to bother you all, but in light of recent events that have ...&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;B183:04EE:317AE9F:449F29D:60233063&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;4681ee709a9c6515d659484eab2ef6560b8c076eef7d1fa172f95dbe0b6fadd7&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiQjE4MzowNEVFOjMxN0FFOUY6NDQ5RjI5RDo2MDIzMzA2MyIsInZpc2l0b3JfaWQiOiI4ODgyNTg3Nzk4MjM3MDMyNTQ3IiwicmVnaW9uX2VkZ2UiOiJpYWQiLCJyZWdpb25fcmVuZGVyIjoiaWFkIn0=&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;36e0be093439c5ea1c2cee576d1bfb3e03e0815727165fa17cce8ca8cb9af78a&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;issue:804309810&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository,issues&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_issues&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/issues/show&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;optimizely-datafile&quot; content=&quot;{&amp;quot;version&amp;quot;: &amp;quot;4&amp;quot;, &amp;quot;rollouts&amp;quot;: [], &amp;quot;typedAudiences&amp;quot;: [], &amp;quot;anonymizeIP&amp;quot;: true, &amp;quot;projectId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;variables&amp;quot;: [], &amp;quot;featureFlags&amp;quot;: [], &amp;quot;experiments&amp;quot;: [], &amp;quot;audiences&amp;quot;: [{&amp;quot;conditions&amp;quot;: &amp;quot;[\&amp;quot;or\&amp;quot;, {\&amp;quot;match\&amp;quot;: \&amp;quot;exact\&amp;quot;, \&amp;quot;name\&amp;quot;: \&amp;quot;$opt_dummy_attribute\&amp;quot;, \&amp;quot;type\&amp;quot;: \&amp;quot;custom_attribute\&amp;quot;, \&amp;quot;value\&amp;quot;: \&amp;quot;$opt_dummy_value\&amp;quot;}]&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;$opt_dummy_audience&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Optimizely-Generated Audience for Backwards Compatibility&amp;quot;}], &amp;quot;groups&amp;quot;: [], &amp;quot;attributes&amp;quot;: [{&amp;quot;id&amp;quot;: &amp;quot;16822470375&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;user_id&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;17143601254&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;spammy&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18175660309&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;organization_plan&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18813001570&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;is_logged_in&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;19073851829&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;geo&amp;quot;}], &amp;quot;botFiltering&amp;quot;: false, &amp;quot;accountId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;events&amp;quot;: [{&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;17911811441&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;hydro_click.dashboard.teacher_toolbox_cta&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18124116703&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organizations.complete_sign_up&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18145892387&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;no_metric.tracked_outside_of_optimizely&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18178755568&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.add_repo&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18180553241&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.repository_imports.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18186103728&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.help.learn_more_about_repository_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18188530140&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;test_event.do_not_use_in_production&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18191963644&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.transfer_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18195612788&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.import_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18210945499&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.invite_members&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18211063248&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.create_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18215721889&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.update_profile&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18224360785&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.dismiss&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18234832286&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_activation.complete&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18252392383&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_repository.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18257551537&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_member_invitation.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18259522260&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_profile.update&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18564603625&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18568612016&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_sign_in_click&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18572592540&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_name&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18574203855&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18582053415&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18589463420&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591323364&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_first_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591652321&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_grant_access&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18607131425&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18831680583&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;upgrade_account_plan&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19064064515&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19075373687&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.view_account_billing_page&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19077355841&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.dismiss_signup_prompt&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19079713938&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.contact_sales&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19120963070&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.compare_account_plans&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19151690317&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.upgrade_account_cta&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19424193129&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.open_account_switcher&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19520330825&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.visit_account_profile&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19540970635&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.switch_account_context&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19730198868&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.homepage_signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19820830627&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.homepage_signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19988571001&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.create_enterprise_trial&amp;quot;}], &amp;quot;revision&amp;quot;: &amp;quot;420&amp;quot;}&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_PENDING_INSTALLATIONS,ACTIONS_SHORT_SHA_WARNING&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;99fd5639eb54009546f22ce0af3613c84f5b4090b211229257a9f6a5719f4474&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/net4people/bbs git https://github.com/net4people/bbs.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;33761262&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;net4people&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;111136393&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;net4people/bbs&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;111136393&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;net4people/bbs&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;meta name=&quot;browser-optimizely-client-errors-url&quot; content=&quot;https://api.github.com/_private/browser/optimizely_client/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;alternate icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/png&quot; href=&quot;https://github.githubassets.com/favicons/favicon.png&quot;/&gt;&lt;link rel=&quot;icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/svg+xml&quot; href=&quot;https://github.githubassets.com/favicons/favicon.svg&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;18.551601423488&quot;&gt;


&lt;div data-pjax-replace=&quot;&quot; id=&quot;js-flash-container&quot;&gt;
&lt;div class=&quot;flash flash-full {{ className }}&quot;&gt;
&lt;div class=&quot; px-2&quot;&gt;
&lt;p&gt;{{ message }}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/net4people/bbs/issues/63&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/net4people/bbs/issues/63&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;
&lt;/body&gt;</description>
<pubDate>Tue, 09 Feb 2021 10:02:02 +0000</pubDate>
<dc:creator>1una</dc:creator>
<og:image>https://avatars.githubusercontent.com/u/33761262?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community · Issue #63 · net4people/bbs</og:title>
<og:url>https://github.com/net4people/bbs/issues/63</og:url>
<og:description>-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 A Joint Statement on Recent Events Between Signal and the Anti-Censorship Community Sorry to bother you all, but in light of recent events that have ...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/net4people/bbs/issues/63</dc:identifier>
</item>
</channel>
</rss>