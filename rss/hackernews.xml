<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Why isn&amp;#039;t the internet more fun and weird?</title>
<link>https://jarredsumner.com/codeblog/</link>
<guid isPermaLink="true" >https://jarredsumner.com/codeblog/</guid>
<description>&lt;p code=&quot;By mistake, MySpace inspired a generation of teenagers to learn how to code. From [_Stealing MySpace_](https://www.amazon.com/dp/B001VT3L3C):&quot;&gt;By mistake, MySpace inspired a generation of teenagers to learn how to code. From &lt;a href=&quot;https://www.amazon.com/dp/B001VT3L3C&quot; code=&quot;[_Stealing MySpace_](https://www.amazon.com/dp/B001VT3L3C)&quot; target=&quot;_blank&quot;&gt;&lt;em code=&quot;_Stealing MySpace_&quot;&gt;Stealing MySpace&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote code=&quot;&amp;gt; But Nguyen forgot to block Web markup language in user submissions. &amp;gt; &amp;gt; His mistake allowed users to build colorful backgrounds and wallpapers and load them onto their MySpace pages.&quot; readability=&quot;8&quot;&gt;
&lt;p code=&quot;But Nguyen forgot to block Web markup language in user submissions.&quot;&gt;But Nguyen forgot to block Web markup language in user submissions.&lt;/p&gt;
&lt;p code=&quot;His mistake allowed users to build colorful backgrounds and wallpapers and load them onto their MySpace pages.&quot;&gt;His mistake allowed users to build colorful backgrounds and wallpapers and load them onto their MySpace pages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p code=&quot;![](/static/myspace2.jpg)&quot;&gt;&lt;img src=&quot;https://jarredsumner.com/static/myspace2.jpg&quot; code=&quot;![](/static/myspace2.jpg)&quot;/&gt;&lt;/p&gt;
&lt;h3 code=&quot;### The internet used to be fun and weird.&quot;&gt;The internet used to be fun and weird.&lt;/h3&gt;
&lt;p code=&quot;During the internet of 2006, consumer products let anyone edit CSS. It was a beautiful mess. As the internet grew up, consumer products stopped trusting their users, and the internet lost its soul.&quot;&gt;During the internet of 2006, consumer products let anyone edit CSS. It was a beautiful mess. As the internet grew up, consumer products stopped trusting their users, and the internet lost its soul.&lt;/p&gt;
&lt;p code=&quot;When's the last time a consumer product let you do this?&quot;&gt;When's the last time a consumer product let you do this?&lt;/p&gt;
&lt;div code=&quot;&amp;lt;StyleEditor /&amp;gt;&quot; class=&quot;jsx-716083552 StyleEditor SystemFont Theme--light&quot;&gt;
&lt;div class=&quot;jsx-3668997571 Presets Presets--light&quot;&gt;
&lt;p&gt;Normal&lt;/p&gt;
&lt;p&gt;üì´ gmail invite code&lt;/p&gt;
&lt;p&gt;ü¶âO RLY?&lt;/p&gt;
&lt;p&gt;‚ùóÔ∏èSHOUTING!!&lt;/p&gt;
&lt;p&gt;‚Üí Tilt this&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p code=&quot;We have Dark Mode now...&quot;&gt;We have Dark Mode now...&lt;/p&gt;

&lt;p code=&quot;But where did &amp;lt;Glitter&amp;gt;all the glitter go?&amp;lt;/Glitter&amp;gt;&quot;&gt;But where did&lt;span class=&quot;jsx-3603730418 Glitter&quot;&gt;all the glitter go?&lt;/span&gt;&lt;/p&gt;
&lt;h3 code=&quot;### Today's internet is Serious Business.&quot;&gt;Today's internet is Serious Business.&lt;/h3&gt;
&lt;p code=&quot;When MySpace was a thing, the internet was just [a series of tubes](https://en.wikipedia.org/wiki/Series_of_tubes). People used it to buy beanie babies and play Runescape.&quot;&gt;When MySpace was a thing, the internet was just &lt;a href=&quot;https://en.wikipedia.org/wiki/Series_of_tubes&quot; code=&quot;[a series of tubes](https://en.wikipedia.org/wiki/Series_of_tubes)&quot; target=&quot;_blank&quot;&gt;a series of tubes&lt;/a&gt;. People used it to buy beanie babies and play Runescape.&lt;/p&gt;
&lt;p code=&quot;That changed. The internet of 2019 is vital societal infrastructure. We depend on it to keep in touch with family, to pay for things, and so much more.&quot;&gt;That changed. The internet of 2019 is vital societal infrastructure. We depend on it to keep in touch with family, to pay for things, and so much more.&lt;/p&gt;
&lt;p code=&quot;Just because it got serious doesn't mean it can't be fun and weird.&quot;&gt;Just because it got serious doesn't mean it can't be fun and weird.&lt;/p&gt;
&lt;h3 code=&quot;### Three things MySpace got right&quot;&gt;Three things MySpace got right&lt;/h3&gt;
&lt;ol code=&quot;1. To make a page on MySpace, all it took was text in a textbox. 2. The text could be words or code. 3. Anyone could read the words and see the code.&quot;&gt;&lt;li code=&quot;- To make a page on MySpace, all it took was text in a textbox.&quot;&gt;To make a page on MySpace, all it took was text in a textbox.&lt;/li&gt;
&lt;li code=&quot;- The text could be words or code.&quot;&gt;The text could be words or code.&lt;/li&gt;
&lt;li code=&quot;- Anyone could read the words and see the code.&quot;&gt;Anyone could read the words and see the code.&lt;/li&gt;
&lt;/ol&gt;&lt;p code=&quot;![](/static/myspace.png)&quot;&gt;&lt;img src=&quot;https://jarredsumner.com/static/myspace.png&quot; code=&quot;![](/static/myspace.png)&quot;/&gt;&lt;/p&gt;
&lt;p code=&quot;MySpace's simplicity enabled teenagers to make silly things like &amp;lt;Glitter link=&amp;quot;https://www.stylemyprofile.net/generators/glitter&amp;quot;&amp;gt;glitter text&amp;lt;/Glitter&amp;gt;, [custom layouts](http://www.layoutgeneratormyspace.com/) and [more](https://mashable.com/2007/11/05/20-editors-myspace-profiles/#t5p4gjoccsq5). MySpace profiles were a canvas for self-expression and code was the paint.&quot;&gt;MySpace's simplicity enabled teenagers to make silly things like&lt;a href=&quot;https://www.stylemyprofile.net/generators/glitter&quot; target=&quot;_blank&quot; class=&quot;jsx-691844454 Glitter&quot;&gt;glitter text&lt;/a&gt;, &lt;a href=&quot;http://www.layoutgeneratormyspace.com/&quot; code=&quot;[custom layouts](http://www.layoutgeneratormyspace.com/)&quot; target=&quot;_blank&quot;&gt;custom layouts&lt;/a&gt; and &lt;a href=&quot;https://mashable.com/2007/11/05/20-editors-myspace-profiles/#t5p4gjoccsq5&quot; code=&quot;[more](https://mashable.com/2007/11/05/20-editors-myspace-profiles/#t5p4gjoccsq5)&quot; target=&quot;_blank&quot;&gt;more&lt;/a&gt;. MySpace profiles were a canvas for self-expression and code was the paint.&lt;/p&gt;
&lt;p code=&quot;MySpace showed the world that if you make powerful and complicated tools (like coding) accessible to anyone, people are smart enough to figure out how to use them.&quot;&gt;MySpace showed the world that if you make powerful and complicated tools (like coding) accessible to anyone, people are smart enough to figure out how to use them.&lt;/p&gt;
&lt;h3 code=&quot;### The lesson the internet learned? No thanks.&quot;&gt;The lesson the internet learned? No thanks.&lt;/h3&gt;
&lt;p code=&quot;[![](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)&quot;&gt;&lt;a href=&quot;https://imgs.xkcd.com/comics/exploits_of_a_mom.png&quot; code=&quot;[![](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/exploits_of_a_mom.png&quot; code=&quot;![](https://imgs.xkcd.com/comics/exploits_of_a_mom.png)&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p code=&quot;We started sanitizing inputs. This remains a huge win for security. But, that means sticking code and words in the same place doesn't work anymore. The code becomes ordinary words...or nothing at all.&quot;&gt;We started sanitizing inputs. This remains a huge win for security. But, that means sticking code and words in the same place doesn't work anymore. The code becomes ordinary words...or nothing at all.&lt;/p&gt;
&lt;p code=&quot;Nobody ever talks about why this was bad for the world.&quot;&gt;Nobody ever talks about why this was bad for the world.&lt;/p&gt;
&lt;h3 code=&quot;### Coding became a privilege, instead of a right.&quot;&gt;Coding became a privilege, instead of a right.&lt;/h3&gt;
&lt;p code=&quot;[The internet is the great equalizer (1996)](https://www.bloomberg.com/news/articles/1996-10-20/the-internet-is-the-great-equalizer). People used to believe that. Today, it sounds sarcastic.&quot;&gt;&lt;a href=&quot;https://www.bloomberg.com/news/articles/1996-10-20/the-internet-is-the-great-equalizer&quot; code=&quot;[The internet is the great equalizer (1996)](https://www.bloomberg.com/news/articles/1996-10-20/the-internet-is-the-great-equalizer)&quot; target=&quot;_blank&quot;&gt;The internet is the great equalizer (1996)&lt;/a&gt;. People used to believe that. Today, it sounds sarcastic.&lt;/p&gt;
&lt;p code=&quot;We ‚Äî the programmers, designers, product people ‚Äî collectively decided that users don't deserve the right to code in everyday products. Users are too stupid. They'd break stuff. Coding is too complicated for ordinary people. Besides, we can just do the coding...so why does it matter?&quot;&gt;We ‚Äî the programmers, designers, product people ‚Äî collectively decided that users don't deserve the right to code in everyday products. Users are too stupid. They'd break stuff. Coding is too complicated for ordinary people. Besides, we can just do the coding...so why does it matter?&lt;/p&gt;
&lt;p code=&quot;The internet added&amp;lt;canvas /&amp;gt;, but the internet stopped being one.&quot;&gt;The internet added&lt;code code=&quot;&amp;lt;canvas /&amp;gt;&quot;&gt;&amp;lt;canvas /&amp;gt;&lt;/code&gt;, but the internet stopped being one.&lt;/p&gt;

&lt;h3 code=&quot;### 2019, a world where all the apps are the same.&quot;&gt;2019, a world where all the apps are the same.&lt;/h3&gt;
&lt;p code=&quot;Facebook, WhatsApp, Messenger, and Instagram [are merging](https://www.nytimes.com/2019/01/25/technology/facebook-instagram-whatsapp-messenger.html). [Instagram cloned Snapchat](https://techcrunch.com/2017/05/16/to-clone-or-not-to-clone/), and Twitter is just [screenshots on Instagram](https://www.theverge.com/2018/6/21/17442028/instagram-twitter-meme-accounts-screenshots-text).&quot;&gt;Facebook, WhatsApp, Messenger, and Instagram &lt;a href=&quot;https://www.nytimes.com/2019/01/25/technology/facebook-instagram-whatsapp-messenger.html&quot; code=&quot;[are merging](https://www.nytimes.com/2019/01/25/technology/facebook-instagram-whatsapp-messenger.html)&quot; target=&quot;_blank&quot;&gt;are merging&lt;/a&gt;. &lt;a href=&quot;https://techcrunch.com/2017/05/16/to-clone-or-not-to-clone/&quot; code=&quot;[Instagram cloned Snapchat](https://techcrunch.com/2017/05/16/to-clone-or-not-to-clone/)&quot; target=&quot;_blank&quot;&gt;Instagram cloned Snapchat&lt;/a&gt;, and Twitter is just &lt;a href=&quot;https://www.theverge.com/2018/6/21/17442028/instagram-twitter-meme-accounts-screenshots-text&quot; code=&quot;[screenshots on Instagram](https://www.theverge.com/2018/6/21/17442028/instagram-twitter-meme-accounts-screenshots-text)&quot; target=&quot;_blank&quot;&gt;screenshots on Instagram&lt;/a&gt;.&lt;/p&gt;
&lt;p code=&quot;The everyday consumer products are converging. They ran out of good ideas for helping people express themselves, so all that's left is to monopolize.&quot;&gt;The everyday consumer products are converging. They ran out of good ideas for helping people express themselves, so all that's left is to monopolize.&lt;/p&gt;

&lt;p code=&quot;[Codeblog](https://codeblog.app) makes coding as easy as blogging. It's an open-source blogging platform where, instead of just words, you can also write code that runs in the blog post.&quot;&gt;&lt;a href=&quot;https://codeblog.app&quot; code=&quot;[Codeblog](https://codeblog.app)&quot; target=&quot;_blank&quot;&gt;Codeblog&lt;/a&gt; makes coding as easy as blogging. It's an open-source blogging platform where, instead of just words, you can also write code that runs in the blog post.&lt;/p&gt;
&lt;p code=&quot;For example, even though HTML lacks a&amp;lt;Glitter /&amp;gt;tag, Codeblog lets me write &amp;lt;Glitter&amp;gt;&amp;lt;Glitter&amp;gt;text&amp;lt;/Glitter&amp;gt;&amp;lt;/Glitter&amp;gt;.&quot;&gt;For example, even though HTML lacks a&lt;code code=&quot;&amp;lt;Glitter /&amp;gt;&quot;&gt;&amp;lt;Glitter /&amp;gt;&lt;/code&gt;tag, Codeblog lets me write&lt;span class=&quot;jsx-3603730418 Glitter&quot;&gt;&lt;code code=&quot;&amp;lt;Glitter&amp;gt;&quot;&gt;&amp;lt;Glitter&amp;gt;&lt;/code&gt;text&lt;code code=&quot;&amp;lt;/Glitter&amp;gt;&quot;&gt;&amp;lt;/Glitter&amp;gt;&lt;/code&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;p code=&quot;HTML doesn't have a&amp;lt;ConfettiButton /&amp;gt;tag either, but Codeblog makes it easy to add it to my post.&quot;&gt;HTML doesn't have a&lt;code code=&quot;&amp;lt;ConfettiButton /&amp;gt;&quot;&gt;&amp;lt;ConfettiButton /&amp;gt;&lt;/code&gt;tag either, but Codeblog makes it easy to add it to my post.&lt;/p&gt;
&lt;div class=&quot;jsx-1076953090 Button SystemFont&quot; code=&quot;&amp;lt;ConfettiButton /&amp;gt;&quot;&gt;

üéâ Confetti me&lt;/div&gt;
&lt;p code=&quot;**You're reading a codeblog now**.&quot;&gt;&lt;strong code=&quot;**You're reading a codeblog now**&quot;&gt;You're reading a codeblog now&lt;/strong&gt;.&lt;/p&gt;
&lt;p code=&quot;Posts are written in a flavor of Markdown that renders React components inline. This makes writing words feel natural and writing JavaScript feel like HTML.&quot;&gt;Posts are written in a flavor of Markdown that renders React components inline. This makes writing words feel natural and writing JavaScript feel like HTML.&lt;/p&gt;
&lt;p code=&quot;You can write and publish posts directly on [codeblog.app](https://codeblog.app) without downloading anything, or you can use your text editor. Host your codeblog for free on codeblog.app, or you can host it yourself.&quot;&gt;You can write and publish posts directly on &lt;a href=&quot;https://codeblog.app&quot; code=&quot;[codeblog.app](https://codeblog.app)&quot; target=&quot;_blank&quot;&gt;codeblog.app&lt;/a&gt; without downloading anything, or you can use your text editor. Host your codeblog for free on codeblog.app, or you can host it yourself.&lt;/p&gt;
&lt;p code=&quot;Even this&amp;lt;RequestAccessForm /&amp;gt;is part of the post:&quot;&gt;Even this&lt;code code=&quot;&amp;lt;RequestAccessForm /&amp;gt;&quot;&gt;&amp;lt;RequestAccessForm /&amp;gt;&lt;/code&gt;is part of the post:&lt;/p&gt;

&lt;p code=&quot;Codeblog is powered by [MDX](https://mdxjs.com), a new flavor of Markdown that supports JSX. With MDX, words look like words, and code looks like HTML.&quot;&gt;Codeblog is powered by &lt;a href=&quot;https://mdxjs.com&quot; code=&quot;[MDX](https://mdxjs.com)&quot; target=&quot;_blank&quot;&gt;MDX&lt;/a&gt;, a new flavor of Markdown that supports JSX. With MDX, words look like words, and code looks like HTML.&lt;/p&gt;
&lt;ul code=&quot;- **Post online**. Write &amp;amp; publish posts on codeblog.app or write from your text editor. - **Social coding**. Post comments with words or code and follow codeblogs. It's the easiest way to show stuff you're working on. Or just rant. - **Plugins**. Auto-install npm packages as you use them. Through npm, Codeblog will support hundreds of thousands of plugins from day one. - **Free** hosting via codeblog.app, or you can self-host.&quot;&gt;&lt;li code=&quot;- **Post online**. Write &amp;amp; publish posts on codeblog.app or write from your text editor.&quot;&gt;&lt;strong code=&quot;**Post online**&quot;&gt;Post online&lt;/strong&gt;. Write &amp;amp; publish posts on codeblog.app or write from your text editor.&lt;/li&gt;
&lt;li code=&quot;- **Social coding**. Post comments with words or code and follow codeblogs. It's the easiest way to show stuff you're working on. Or just rant.&quot;&gt;&lt;strong code=&quot;**Social coding**&quot;&gt;Social coding&lt;/strong&gt;. Post comments with words or code and follow codeblogs. It's the easiest way to show stuff you're working on. Or just rant.&lt;/li&gt;
&lt;li code=&quot;- **Plugins**. Auto-install npm packages as you use them. Through npm, Codeblog will support hundreds of thousands of plugins from day one.&quot;&gt;&lt;strong code=&quot;**Plugins**&quot;&gt;Plugins&lt;/strong&gt;. Auto-install npm packages as you use them. Through npm, Codeblog will support hundreds of thousands of plugins from day one.&lt;/li&gt;
&lt;li code=&quot;- **Free** hosting via codeblog.app, or you can self-host.&quot;&gt;&lt;strong code=&quot;**Free**&quot;&gt;Free&lt;/strong&gt; hosting via codeblog.app, or you can self-host.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 code=&quot;### &amp;lt;InspectElementIcon height=&amp;quot;17&amp;quot; /&amp;gt;&amp;lt;/CodeContainer&amp;gt;One more thing.&quot;&gt;One more thing.&lt;/h3&gt;
&lt;p code=&quot;Examples are great teachers. That's why on Codeblog, the original source code for every post, comment, and plugin will be readily available and remixable. **With one click, remixing gives you a live, running website with a copy of the post**, comment, or plugin that you are free to modify and make your own.&quot;&gt;Examples are great teachers. That's why on Codeblog, the original source code for every post, comment, and plugin will be readily available and remixable. &lt;strong code=&quot;**With one click, remixing gives you a live, running website with a copy of the post**&quot;&gt;With one click, remixing gives you a live, running website with a copy of the post&lt;/strong&gt;, comment, or plugin that you are free to modify and make your own.&lt;/p&gt;
&lt;p code=&quot;You can view the source code for this post:&quot;&gt;You can view the source code for this post:&lt;/p&gt;
&lt;div code=&quot;&amp;lt;ViewPostSource /&amp;gt;&quot; class=&quot;jsx-2592623126 Source Source--light&quot;&gt;
&lt;div class=&quot;jsx-2592623126 FilenameContainer&quot;&gt;
&lt;p&gt;&lt;span class=&quot;jsx-2592623126&quot;&gt;codeblog.mdx&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;12 imports hidden&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;jsx-2592623126 ViewSource SystemFont&quot;&gt;
&lt;p&gt;View source&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p code=&quot;What do you think? Codeblog isn't ready for everyone yet, but if you [request access](https://tinyletter.com/codeblog), I'll let you know when it's ready.&quot;&gt;What do you think? Codeblog isn't ready for everyone yet, but if you &lt;a href=&quot;https://tinyletter.com/codeblog&quot; code=&quot;[request access](https://tinyletter.com/codeblog)&quot; target=&quot;_blank&quot;&gt;request access&lt;/a&gt;, I'll let you know when it's ready.&lt;/p&gt;
&lt;div class=&quot;jsx-1974870498 Container&quot;&gt;

&lt;h2 class=&quot;jsx-1974870498&quot;&gt;Thanks for reading!&lt;/h2&gt;
&lt;/div&gt;
</description>
<pubDate>Wed, 30 Jan 2019 19:23:30 +0000</pubDate>
<dc:creator>firloop</dc:creator>
<og:url>https://jarredsumner.com/codeblog/</og:url>
<og:title>Why isn't the internet more fun and weird?</og:title>
<og:description>MySpace inspired a generation of teenagers to learn how to code. We have Dark Mode now, but where did all the glitter go?</og:description>
<og:image>https://jarredsumner.com/static/myspace2.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://jarredsumner.com/codeblog/</dc:identifier>
</item>
<item>
<title>Google‚Äôs also peddling a data collector through Apple‚Äôs back door</title>
<link>https://techcrunch.com/2019/01/30/googles-also-peddling-a-data-collector-through-apples-back-door/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/01/30/googles-also-peddling-a-data-collector-through-apples-back-door/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;It looks like &lt;a href=&quot;https://techcrunch.com/2019/01/29/facebook-project-atlas/&quot;&gt;Facebook&lt;/a&gt; was not the only one abusing Apple‚Äôs system for distributing employee-only apps to sidestep the App Store and collect extensive data on users.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/google&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;google&quot;&gt;Google&lt;/a&gt; has been running an app called &lt;a href=&quot;https://support.google.com/audiencemeasurement/answer/7573812?hl=en&amp;amp;amp;ref_topic=7574346&quot;&gt;Screenwise Meter&lt;/a&gt;, which bears a strong resemblance to the app distributed by Facebook Research that has now been barred by Apple, TechCrunch has learned.&lt;/p&gt;
&lt;p&gt;In its app, Google invites users aged 18 and up (or 13 if part of a family group) to download the app by way of a special code and registration process using an Enterprise Certificate. That‚Äôs the same type of policy violation that led Apple to &lt;a href=&quot;https://techcrunch.com/2019/01/30/apple-bans-facebook-vpn/&quot;&gt;shut down Facebook‚Äôs similar Research VPN iOS app&lt;/a&gt;, which had the knock-on effect of also disabling usage of Facebook‚Äôs legitimate employee-only apps ‚Äî which run on the same Facebook Enterprise Certificate ‚Äî and making Facebook look very iffy in the process.&lt;/p&gt;
&lt;div id=&quot;attachment_1776676&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;breakout wp-image-1776676 size-full&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;511&quot; srcset=&quot;https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png 1400w, https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png?resize=150,75 150w, https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png?resize=300,150 300w, https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png?resize=768,383 768w, https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png?resize=680,339 680w, https://techcrunch.com/wp-content/uploads/2019/01/google-certs1.png?resize=50,25 50w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Google‚Äôs Screenwise Meter app for iPhones (Images: Google)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;After we asked Google whether its app violated Apple policy, Google announced it will remove Screenwise Meter from Apple‚Äôs Enterprise Certificate program and disable it on iOS devices.&lt;/p&gt;
&lt;p&gt;The company said in a statement to TechCrunch:&lt;/p&gt;
&lt;p&gt;‚ÄúThe Screenwise Meter iOS app should not have operated under Apple‚Äôs developer enterprise program ‚Äî this was a mistake, and we apologize. We have disabled this app on iOS devices. This app is completely voluntary and always has been. We‚Äôve been upfront with users about the way we use their data in this app, we have no access to encrypted data in apps and on devices, and users can opt out of the program at any time.‚Äù&lt;/p&gt;
&lt;h2&gt;Screen(un)wise&lt;/h2&gt;
&lt;p&gt;First &lt;a href=&quot;https://techcrunch.com/2012/02/08/google-offers-to-pay-for-people-to-have-their-web-use-tracked-minutely/&quot;&gt;launched in 2012&lt;/a&gt;, Screenwise lets users &lt;a href=&quot;https://support.google.com/audiencemeasurement/answer/7689542?hl=en&amp;amp;ref_topic=7648088&quot;&gt;earn gift cards&lt;/a&gt; for sideloading an Enterprise Certificate-based VPN app that allows Google to monitor and analyze their traffic and data. Google has rebranded the program as part of the Cross Media Panel and &lt;a href=&quot;https://surveys.google.com/google-opinion-rewards/audience-measurement/&quot;&gt;Google Opinion Rewards programs&lt;/a&gt; that reward users for installing tracking systems on their mobile phone, PC web browser, router and TV. In fact, &lt;a href=&quot;https://support.google.com/audiencemeasurement/answer/7574391?hl=en&quot;&gt;Google actually sends participants a special router&lt;/a&gt; that it can monitor.&lt;/p&gt;
&lt;p&gt;Originally, Screenwise was open to users as young as 13, just like Facebook‚Äôs Research app that‚Äôs now been shut down on iOS but remains on Android. Now, according to the site‚Äôs &lt;a href=&quot;https://support.google.com/audiencemeasurement/answer/7566134?hl=en&amp;amp;ref_topic=7563962&quot;&gt;Panelist Eligibility&lt;/a&gt;¬†rules, Google requires the primary users of its Opinion Rewards to be 18 or older, but still allows secondary panelists as young as 13 in the same household to join the program and have their devices tracked, as demonstrated in this video below (which was created in August of last year, underscoring that the program is still active).&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;embed-youtube embed breakout embed--video&quot;&gt;&lt;iframe class=&quot;youtube-player&quot; type=&quot;text/html&quot; width=&quot;640&quot; height=&quot;360&quot; src=&quot;https://www.youtube.com/embed/uikWgn5MswY?version=3&amp;amp;rel=1&amp;amp;fs=1&amp;amp;autohide=2&amp;amp;showsearch=0&amp;amp;showinfo=1&amp;amp;iv_load_policy=1&amp;amp;wmode=transparent&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Unlike Facebook, Google is much more upfront about how its research data collection programs work, what‚Äôs collected and that it‚Äôs directly involved. It also gives users the option of ‚Äú&lt;a href=&quot;https://support.google.com/audiencemeasurement/answer/7568157?hl=en&amp;amp;ref_topic=7648088&quot;&gt;guest mode&lt;/a&gt;‚Äù for when they don‚Äôt want traffic monitored, or someone younger than 13 is using the device.&lt;/p&gt;
&lt;p&gt;Putting the not-insignificant issues of privacy aside ‚Äî in short, many people lured by financial rewards may not fully take in what it means to have a company fully monitoring all your screen-based activity ‚Äî and the implications of what extent tech businesses are willing to go to to amass more data about users to get an edge on competitors, Google Screenwise Meter for iOS appears to violate Apple‚Äôs policy.&lt;/p&gt;
&lt;p&gt;This states, in essence, that the Enterprise Certificate program for distributing apps without the App Store or Apple‚Äôs oversight is only for internal employee-only apps.&lt;/p&gt;
&lt;p&gt;Google walks users through how to install the Enterprise Certificate and VPN on their phone. Developers seeking to do external testing on iOS are supposed to use the TestFlight system that sees apps reviewed and limits their distribution to 10,000 people.&lt;/p&gt;

&lt;p&gt;We‚Äôve yet to hear back from Apple, but Google moving quickly to cancel its iOS Screenwise Meter might save it from further punishment. We‚Äôll see if Apple still invalidates the certifications for all of Google‚Äôs legitimate employee-only apps that run using the same certificate the way it did to Facebook. That would throw a wrench into Google‚Äôs product development and daily work flow that could be more damaging than just removing one way it gathers competitive intelligence.&lt;/p&gt;
&lt;p&gt;But rather than taking seven hours to respond as backlash swelled like Facebook, Google managed to get things sorted in a little under three.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We‚Äôve updated this post throughout in response to Google‚Äôs statement that it will shut down the iOS version of Screenwise Meter.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Wed, 30 Jan 2019 19:17:03 +0000</pubDate>
<dc:creator>minimaxir</dc:creator>
<og:title>Google will stop peddling a data collector through Apple‚Äôs back door</og:title>
<og:description>It looks like Facebook was not the only one abusing Apple‚Äôs system for distributing employee-only apps to sidestep the App Store and collect extensive data on users. Google has been running an app called Screenwise Meter, which bears a strong resemblance to the app distributed by Facebook Res‚Ä¶</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/01/google-paying-users.jpg?w=711</og:image>
<og:url>http://social.techcrunch.com/2019/01/30/googles-also-peddling-a-data-collector-through-apples-back-door/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/01/30/googles-also-peddling-a-data-collector-through-apples-back-door/</dc:identifier>
</item>
<item>
<title>Use DuckDuckGo to improve your privacy online (2018)</title>
<link>https://spreadprivacy.com/privacy-simplified/</link>
<guid isPermaLink="true" >https://spreadprivacy.com/privacy-simplified/</guid>
<description>&lt;h2&gt;DuckDuckGo moves beyond search to also protect you while browsing.&lt;/h2&gt;
&lt;p&gt;Over the years, DuckDuckGo has offered millions of people a private alternative to Google, serving over &lt;a href=&quot;https://duckduckgo.com/traffic.html&quot;&gt;16 billion anonymous searches&lt;/a&gt;. Today we're excited to launch fully revamped versions of our browser extension and mobile app, extending DuckDuckGo's protection beyond the search box to wherever the Internet takes you.&lt;/p&gt;
&lt;p&gt;It‚Äôs hard to use the Internet without it feeling a bit creepy ‚Äì like there‚Äôs a nosey neighbor watching everything you do from across the street. Except, instead of a nosey neighbor, it‚Äôs a vast array of highly sophisticated tracker networks, run by big companies like Google and Facebook, &lt;a href=&quot;https://myactivity.google.com/myactivity&quot;&gt;recording everything you do online&lt;/a&gt;, often without your knowledge, and &lt;a href=&quot;https://www.theverge.com/2017/10/2/16405974/facebook-russian-election-ads-10-million-viewers&quot;&gt;selling their findings&lt;/a&gt; to the highest bidder via targeted ads. While closing the blinds at home can put a stop to your neighbors, there isn‚Äôt something that simple that can work online. Until now.&lt;/p&gt;
&lt;p&gt;Today we‚Äôre taking a major step to simplify online privacy with the launch of fully revamped versions of our browser extension and mobile app, now with built-in tracker network blocking, smarter encryption, and, of course, private search ‚Äì all designed to operate seamlessly together while you search and browse the web. Our updated app and extension are now available across all major platforms ‚Äì &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/duckduckgo-for-firefox/&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;https://safari-extensions.apple.com/details/?id=com.duckduckgo.safari-HKE973VLUW&quot;&gt;Safari&lt;/a&gt;, &lt;a href=&quot;https://chrome.google.com/webstore/detail/duckduckgo-for-chrome/bkdgflcldnnnapblkhphbgpggdiikppg&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/app/id663592361?mt=8&quot;&gt;iOS&lt;/a&gt;, and &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.duckduckgo.mobile.android&quot;&gt;Android&lt;/a&gt; ‚Äì so that you can easily get all the privacy essentials you need on any device with just one download.&lt;/p&gt;
&lt;p&gt;The DuckDuckGo browser extension and mobile app will also now show you a Privacy Grade rating (A-F) when you visit a website. This rating lets you see at a glance how protected you are, dig into the details to see who we caught trying to track you, and learn how we enhanced the underlying website's privacy measures. The Privacy Grade is scored automatically based on the prevalence of hidden tracker networks, encryption availability, and website privacy practices.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://spreadprivacy.com/content/images/2018/01/creepy-site_devices-3.jpg&quot; alt=&quot;Screenshot of the DuckDuckGo app and extension showing how a site's privacy has been improved.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To date, cobbling together an effective privacy solution has required researching complicated technologies, installing multiple add-ons and apps on each device, and often worsening your Internet experience. Others have been unfortunately misled by supposed simple solutions. Think ‚ÄúIncognito‚Äù mode blocks Google from watching what you‚Äôre doing? Think again. Private browsing modes are marketed to make you think that if it's not in your device‚Äôs browser history, it never happened. Sadly, that &lt;a href=&quot;https://spreadprivacy.com/is-private-browsing-really-private/&quot;&gt;couldn't be further from the truth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the new DuckDuckGo browser extension or mobile app, you are now able to seamlessly:&lt;/p&gt;
&lt;h2 id=&quot;tracking&quot;&gt;Expose and Block Tracker Networks Watching You&lt;/h2&gt;
&lt;p&gt;The vast majority of websites across the Internet &lt;a href=&quot;https://spreadprivacy.com/followed-by-ads/&quot;&gt;contain hidden tracker networks&lt;/a&gt;, with Google trackers now lurking behind 76% of pages, Facebook‚Äôs trackers on 24% of pages, and countless others soaking up your personal information to follow you with ads around the Web, or worse. Our Privacy Protection will block all the hidden trackers we can find, exposing the major advertising networks tracking you over time, so that you can track who's trying to track you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://spreadprivacy.com/content/images/2018/01/creepy-site_iphone.jpg&quot; alt=&quot;Screenshot of the DuckDuckGo app showing how many trackers have been blocked.&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;https&quot;&gt;Increase Encryption Protection&lt;/h2&gt;
&lt;p&gt;While not all sites offer an encrypted version, thankfully &lt;a href=&quot;https://letsencrypt.org/stats/#percent-pageloads&quot;&gt;this has been rapidly changing&lt;/a&gt;. If we discover a site offers an encrypted version but does not send you to it automatically, DuckDuckGo will. This encryption protects you from eavesdroppers, like ISPs, grabbing up your personal information as it travels across the Internet between you and the websites you visit.&lt;/p&gt;
&lt;h2 id=&quot;tosdr&quot;&gt;Decode a Website‚Äôs Privacy Policy&lt;/h2&gt;
&lt;p&gt;Most privacy policies are difficult to understand, and aren‚Äôt reviewed closely enough. Even if we block all the tracker networks we find, and even if we upgrade encryption, a website could still be using your data for nefarious purposes, such as selling it to third parties.&lt;/p&gt;
&lt;p&gt;We‚Äôve partnered with &lt;a href=&quot;https://tosdr.org/&quot;&gt;Terms of Service Didn't Read&lt;/a&gt; (TOSDR) to include their scores of website terms of service and privacy policies, where available. However, because most privacy policies still remain unstudied, we‚Äôre working with TOSDR to help them to rate and label as many websites as possible.&lt;/p&gt;
&lt;h2 id=&quot;search&quot;&gt;Search Privately&lt;/h2&gt;
&lt;p&gt;Of course, our app and extension also include DuckDuckGo private search! You share your most personal information with your search engine, like your financial, medical, and political questions. What you search for is your own business, which is why DuckDuckGo search doesn‚Äôt track you. Ever.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Once you start using the new app and browser extension, you‚Äôll quickly notice something: hardly any website currently gets an &quot;A&quot; on privacy. That‚Äôs because hardly any website out there truly prioritizes your privacy.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because of these widespread poor privacy practices, too many people believe you simply can‚Äôt expect privacy on the Internet. We disagree, and have made it our mission to set a new standard of trust online. We want privacy to be the default, not the exception, and this launch is a major step in that direction.&lt;/p&gt;
&lt;p&gt;For the last decade, DuckDuckGo has been giving you the ability to search privately, but that privacy was only limited to our search box. Now, when you also use the DuckDuckGo browser extension or mobile app, we will provide you with seamless privacy protection on the websites you visit. Our goal is to expand this privacy protection over time by adding even more privacy features into this single package. While not all privacy protection can be as seamless, the essentials available today and those that we will be adding will go a long way to protecting your privacy online, without compromising your Internet experience.&lt;/p&gt;
&lt;p&gt;As more people start taking their privacy back online, the companies who make money off our personal information will be put on more notice and we‚Äôll collectively raise the Internet‚Äôs privacy grade, ending the widespread use of invasive tracking. True to the collective nature of this effort, we‚Äôre also building our extension and app in the open with all of the code &lt;a href=&quot;https://github.com/duckduckgo/&quot;&gt;available on GitHub&lt;/a&gt;, so we invite you to join us.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://duckduckgo.com/app&quot;&gt;Install DuckDuckGo on any device to take back your privacy!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For more privacy advice, &lt;a href=&quot;https://twitter.com/duckduckgo&quot;&gt;follow us on Twitter&lt;/a&gt; &amp;amp; get our &lt;a href=&quot;https://duckduckgo.com/newsletter&quot;&gt;privacy crash course&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 19:05:31 +0000</pubDate>
<dc:creator>rbjorklin</dc:creator>
<og:type>article</og:type>
<og:title>Privacy, simplified.</og:title>
<og:description>We're excited to launch a new browser extension and mobile app, extending DuckDuckGo's protection beyond the search box to wherever the Internet takes you.</og:description>
<og:url>https://spreadprivacy.com/privacy-simplified/</og:url>
<og:image>https://spreadprivacy.com/content/images/2018/01/hero_cropped_updated.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://spreadprivacy.com/privacy-simplified/</dc:identifier>
</item>
<item>
<title>Apple blocks Facebook from running its internal iOS apps</title>
<link>https://www.theverge.com/2019/1/30/18203551/apple-facebook-blocked-internal-ios-apps</link>
<guid isPermaLink="true" >https://www.theverge.com/2019/1/30/18203551/apple-facebook-blocked-internal-ios-apps</guid>
<description>&lt;p id=&quot;0Gbpbr&quot;&gt;Apple has shut down Facebook‚Äôs ability to distribute internal iOS apps, from early releases of the Facebook app to basic tools like a lunch menu. A person familiar with the situation tells &lt;em&gt;The Verge&lt;/em&gt; that early versions of Facebook, Instagram, Messenger, and other pre-release ‚Äúdogfood‚Äù (beta) apps have stopped working, as have other employee apps, like one for transportation. Facebook is treating this as a critical problem internally, we‚Äôre told, as the affected apps simply don‚Äôt launch on employees‚Äô phones anymore.&lt;/p&gt;
&lt;p id=&quot;aP7Sej&quot;&gt;The shutdown comes in response to news that Facebook has been using Apple‚Äôs program for internal app distribution to track teenage customers with a ‚Äúresearch‚Äù app.&lt;/p&gt;
&lt;div class=&quot;c-float-right&quot;&gt;
&lt;aside id=&quot;6WuBku&quot;&gt;&lt;q&gt;‚ÄúA clear breach of [Facebook‚Äôs] agreement with Apple‚Äù&lt;/q&gt;&lt;/aside&gt;&lt;/div&gt;
&lt;p id=&quot;r90gFB&quot;&gt;That app, &lt;a href=&quot;https://techcrunch.com/2019/01/29/facebook-project-atlas/&quot;&gt;revealed yesterday by &lt;em&gt;TechCrunch&lt;/em&gt;&lt;/a&gt;, was distributed outside of the App Store using Apple‚Äôs enterprise program, which allows developers to use special certificates to install more powerful apps onto iPhones. Those apps are only supposed to be used by a company‚Äôs employees, however, and Facebook had been distributing its tracking app to customers. Facebook later said &lt;a href=&quot;https://www.theverge.com/facebook/2019/1/30/18203349/facebook-research-app-apple-shutdown&quot;&gt;it would shut down the app&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;Mqgngb&quot;&gt;This poses a huge issue for Facebook. While Apple provides other tools a company can use to install apps internally, Apple‚Äôs enterprise program is the main solution for widely distributing internal apps and services. In an email, a Facebook spokesperson said ‚ÄúI can confirm that this affects our internal apps.‚Äù&lt;/p&gt;
&lt;p id=&quot;KKdVjW&quot;&gt;In a statement &lt;a href=&quot;https://www.recode.net/2019/1/30/18203231/apple-says-its-banning-facebooks-research-that-collected-users-personal-information&quot;&gt;given to &lt;em&gt;Recode&lt;/em&gt;&lt;/a&gt;, Apple said that Facebook was in ‚Äúclear breach of their agreement with Apple.‚Äù Any developer that breaches that agreement, Apple said, has their distribution certificates revoked, ‚Äúwhich is what we did in this case to protect our users and their data.‚Äù Apple declined to comment on shutting down all of Facebook‚Äôs internal apps in an email to &lt;em&gt;The Verge&lt;/em&gt;.&lt;/p&gt;
&lt;p id=&quot;isfmUR&quot;&gt;Revoking a certificate not only stops apps from being distributed on iOS, but it also stops apps from working. And because internal apps by the same organization or developer may be connected to a single certificate, it can lead to immense headaches like the one Facebook now finds itself in where a multitude of internal apps have been shut down.&lt;/p&gt;
&lt;p id=&quot;7yWslv&quot;&gt;Apple and Facebook have already been bickering over privacy, but this is the first instance of Apple taking an action that directly shuts down some of Facebook‚Äôs activities. Last March, Apple CEO Tim Cook &lt;a href=&quot;https://www.recode.net/2018/3/28/17172212/apple-facebook-revolution-tim-cook-interview-privacy-data-mark-zuckerberg&quot;&gt;criticized Facebook‚Äôs handling&lt;/a&gt; of the Cambridge Analytica data sharing scandal, saying, ‚ÄúI wouldn‚Äôt be in this situation‚Äù if he were running the company. Facebook CEO Mark Zuckerberg &lt;a href=&quot;https://www.theverge.com/2018/4/2/17188660/mark-zuckerberg-tim-cook-comments-facebook-extremely-glib&quot;&gt;later said&lt;/a&gt; the comments were ‚Äúextremely glib‚Äù and spoke of Apple as a company that ‚Äúwork[s] hard to charge you more.‚Äù&lt;/p&gt;
&lt;p id=&quot;ZVw0IE&quot;&gt;&lt;em&gt;&lt;strong&gt;Update January 30th, 2:17PM ET:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;Facebook confirmed that its internal apps are affected by Apple revoking its enterprise certificate.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 15:32:40 +0000</pubDate>
<dc:creator>epaga</dc:creator>
<og:description>Facebook‚Äôs internal iOS apps simply don‚Äôt launch anymore.</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/XvVt25j7b4dci2iG5s3LjXFnEe4=/0x215:3000x1786/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/13177665/acastro_180928_1777_facebook_hack_0001.jpg</og:image>
<og:title>Apple blocks Facebook from running its internal iOS apps</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2019/1/30/18203551/apple-facebook-blocked-internal-ios-apps</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2019/1/30/18203551/apple-facebook-blocked-internal-ios-apps</dc:identifier>
</item>
<item>
<title>Boeing 787 Suffers Rare Dual Engine Failure on Landing</title>
<link>https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/</link>
<guid isPermaLink="true" >https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;link rel=&quot;profile&quot; href=&quot;http://gmpg.org/xfn/11&quot;/&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;https://thepointsguy.com/wp-content/themes/tpg-2016/favicon.ico?v=3&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;Ljof3Duwtracp116XX76hDeY-IZn3TnvmYX8PMQIFIw&quot;/&gt;&lt;title&gt;Boeing 787 Suffers Rare Dual Engine Failure on Landing&lt;/title&gt;&lt;meta name=&quot;msvalidate.01&quot; content=&quot;72370BF646E221E40058DAF36285E2A7&quot;/&gt;&lt;meta name=&quot;yandex-verification&quot; content=&quot;80de4edf152c0d7d&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//thepointsguy.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//cdn.optimizely.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//s.skimresources.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//assets.adobedtm.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//s.w.org&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;The Points Guy ¬ª Feed&quot; href=&quot;https://thepointsguy.com/feed/&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;The Points Guy ¬ª Comments Feed&quot; href=&quot;https://thepointsguy.com/comments/feed/&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;The Points Guy ¬ª Boeing 787 Suffers Rare Dual Engine Failure on Landing Comments Feed&quot; href=&quot;https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/feed/&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;ANA flight NH985 suffered a dual engine failure when it touched down at Osaka Itami (ITM) on Jan. 17.&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; id=&quot;tpg_2016-screen-css&quot; href=&quot;https://thepointsguy.com/wp-content/themes/tpg-2016/static/css/global.d43a66a8bbf46161d1f0.min.css?ver=1.1.1&quot; type=&quot;text/css&quot; media=&quot;all&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; id=&quot;wp-parsely-style-css&quot; href=&quot;https://thepointsguy.com/wp-content/mu-plugins/wp-parsely/wp-parsely.css?ver=1548890553&quot; type=&quot;text/css&quot; media=&quot;all&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; id=&quot;social-logos-css&quot; href=&quot;https://thepointsguy.com/wp-content/plugins/jetpack/_inc/social-logos/social-logos.min.css?ver=1&quot; type=&quot;text/css&quot; media=&quot;all&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; id=&quot;jetpack_css-css&quot; href=&quot;https://thepointsguy.com/wp-content/plugins/jetpack/css/jetpack.css?ver=6.7&quot; type=&quot;text/css&quot; media=&quot;all&quot;/&gt;&lt;link rel=&quot;https://api.w.org/&quot; href=&quot;https://thepointsguy.com/wp-json/&quot;/&gt;&lt;link rel=&quot;EditURI&quot; type=&quot;application/rsd+xml&quot; title=&quot;RSD&quot; href=&quot;https://thepointsguy.com/xmlrpc.php?rsd&quot;/&gt;&lt;link rel=&quot;wlwmanifest&quot; type=&quot;application/wlwmanifest+xml&quot; href=&quot;https://thepointsguy.com/wp-includes/wlwmanifest.xml&quot;/&gt;&lt;link rel=&quot;prev&quot; title=&quot;11 Travel Gadgets From CES We Can‚Äôt Stop Thinking About&quot; href=&quot;https://thepointsguy.com/news/ces-travel-gadgets/&quot;/&gt;&lt;link rel=&quot;next&quot; title=&quot;Delta Amex Cards Are Offering Elevated Referral Bonuses, Up to 20k Miles per Referral&quot; href=&quot;https://thepointsguy.com/news/delta-amex-elevated-referral-bonuses/&quot;/&gt;&lt;meta name=&quot;generator&quot; content=&quot;WordPress 4.9.9&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/&quot;/&gt;&lt;link rel=&quot;shortlink&quot; href=&quot;https://thepointsguy.com/?p=626658&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;application/json+oembed&quot; href=&quot;https://thepointsguy.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fthepointsguy.com%2Fnews%2Fboeing-787-suffers-rare-dual-engine-failure-on-landing%2F&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;text/xml+oembed&quot; href=&quot;https://thepointsguy.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fthepointsguy.com%2Fnews%2Fboeing-787-suffers-rare-dual-engine-failure-on-landing%2F&amp;amp;format=xml&quot;/&gt;&lt;meta name=&quot;wp-parsely_version&quot; id=&quot;wp-parsely_version&quot; content=&quot;1.14&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//i0.wp.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//i1.wp.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//i2.wp.com&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;ANA flight NH985 suffered a dual engine failure when it touched down at Osaka Itami (ITM) on Jan. 17.&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://i2.wp.com/thepointsguy.com/wp-content/uploads/2018/10/GettyImages-453149542.jpg?fit=3568%2C2466px&amp;amp;ssl=1&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;The Points Guy&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Boeing 787 Suffers Rare Dual Engine Failure on Landing&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/&quot;/&gt;&lt;meta property=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;/&gt;&lt;meta property=&quot;twitter:creator&quot; content=&quot;@JSCTravels&quot;/&gt;&lt;meta property=&quot;twitter:site&quot; content=&quot;@thepointsguy&quot;/&gt;&lt;link rel=&quot;amphtml&quot; href=&quot;https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/amp/&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;post-template-default single single-post postid-626658 single-format-standard&quot; data-preamp=&quot;&quot; id=&quot;readabilityBody&quot; readability=&quot;55.960244648318&quot;&gt;
&lt;noscript&gt;

&lt;/noscript&gt;

&lt;section class=&quot;advertiser-disclosure-body&quot; readability=&quot;39.558103975535&quot;&gt;&lt;p&gt;
&lt;h3&gt;Advertiser Disclosure&lt;/h3&gt;
&lt;/p&gt;
&lt;span class=&quot;icon icon-x-close&quot;/&gt;
&lt;p&gt;The credit card offers that appear on the website are from credit card companies from which ThePointsGuy.com receives compensation. This compensation may impact how and where products appear on this site (including, for example, the order in which they appear). This site does not include all credit card companies or all available credit card offers. Please view our &lt;a href=&quot;https://thepointsguy.com/advertising-policy/&quot;&gt;advertising policy page&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;Editorial Note: Opinions expressed here are the author‚Äôs alone, not those of any bank, credit card issuer, airlines or hotel chain, and have not been reviewed, approved or otherwise endorsed by any of these entities.&lt;/p&gt;
&lt;/section&gt;
&lt;/body&gt;</description>
<pubDate>Wed, 30 Jan 2019 15:31:05 +0000</pubDate>
<dc:creator>georgecmu</dc:creator>
<og:description>ANA flight NH985 suffered a dual engine failure when it touched down at Osaka Itami (ITM) on Jan. 17.</og:description>
<og:image>https://i2.wp.com/thepointsguy.com/wp-content/uploads/2018/10/GettyImages-453149542.jpg?fit=3568%2C2466px&amp;ssl=1</og:image>
<og:title>Boeing 787 Suffers Rare Dual Engine Failure on Landing</og:title>
<og:type>article</og:type>
<og:url>https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thepointsguy.com/news/boeing-787-suffers-rare-dual-engine-failure-on-landing/</dc:identifier>
</item>
<item>
<title>&amp;#039;Karma&amp;#039;: A hack used by the UAE to break into iPhones of foes</title>
<link>https://www.reuters.com/investigates/special-report/usa-spying-karma/</link>
<guid isPermaLink="true" >https://www.reuters.com/investigates/special-report/usa-spying-karma/</guid>
<description>&lt;section class=&quot;content main&quot; itemprop=&quot;mainContentOfPage&quot;&gt;&lt;nav class=&quot;special-report-nav header navbar navbar-full fixed-top bg-dark navbar-dark navbar-expand-md &quot; role=&quot;navigation&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SiteNavigationElement&quot;&gt;&lt;div class=&quot;navbar-brand&quot;&gt;
            &lt;a class=&quot;logo-container&quot; href=&quot;https://www.reuters.com/&quot;&gt;
                &lt;img class=&quot;logo reuters-investigates&quot; src=&quot;https://www.reuters.com/investigates/static/4-0-0/en/images/reuters-investigates.png?v=534000300119&quot;/&gt;&lt;/a&gt;
            &lt;p&gt;
                
                
                            The Karma Hack
                
                
            &lt;/p&gt;
        &lt;/div&gt;
        &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#Reuters-Main-Nav&quot; aria-controls=&quot;navbarSupportedContent&quot; aria-expanded=&quot;false&quot; aria-label=&quot;Toggle navigation&quot;&gt;
			&lt;span class=&quot;navbar-toggler-icon&quot;/&gt;
		&lt;/button&gt;

        &lt;div class=&quot;collapse navbar-collapse nav-spied&quot; id=&quot;Reuters-Main-Nav&quot;&gt;
            
            
                &lt;div class=&quot;social navbar-nav ml-auto flex-row&quot;&gt;
                    &lt;div class=&quot;nav-item&quot;&gt;
                        &lt;a data-id=&quot;twitter&quot; href=&quot;https://twitter.com/intent/tweet?text=%27Karma%27%3A%20Inside%20the%20hack%20used%20by%20the%20UAE%20to%20break%20into%20iPhones%20of%20foes&amp;amp;via=SpecialReports&amp;amp;url=http%3A//www.reuters.com/investigates/special-report/usa-spying-karma&quot;&gt;
                            &lt;i class=&quot;fa fa-twitter&quot; aria-hidden=&quot;true&quot;/&gt;
                        &lt;/a&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;nav-item&quot;&gt;
                        &lt;a data-id=&quot;facebook&quot; href=&quot;https://www.facebook.com/sharer/sharer.php?u=http%3A//www.reuters.com/investigates/special-report/usa-spying-karma&amp;amp;t=%27Karma%27%3A%20Inside%20the%20hack%20used%20by%20the%20UAE%20to%20break%20into%20iPhones%20of%20foes&quot; onclick=&quot;javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=300,width=600');return false;&quot; target=&quot;_blank&quot; title=&quot;Share on Facebook&quot;&gt;
                            &lt;i class=&quot;fa fa-facebook&quot; aria-hidden=&quot;true&quot;/&gt;
                        &lt;/a&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            
        &lt;/div&gt;
    &lt;/nav&gt;



        &lt;/section&gt;
    
            &lt;nav class=&quot;footer navbar bg-dark navbar-inverse flex-row&quot;&gt;&lt;div class=&quot;navbar-brand&quot;&gt;
                    &lt;a class=&quot;logo-container&quot; href=&quot;https://www.reuters.com/&quot;&gt;
                        &lt;img src=&quot;https://www.reuters.com/investigates/static/4-0-0/en/images/reuters-footer.png?v=524000300119&quot; class=&quot;footer-logo&quot;/&gt;&lt;/a&gt;
                &lt;/div&gt;
                &lt;div class=&quot;mx-auto&quot;&gt;
                    &lt;ul class=&quot;navbar-nav d-block&quot;&gt;&lt;li class=&quot;nav-item&quot;&gt;
                            &lt;a class=&quot;nav-link&quot; href=&quot;http://thomsonreuters.com/&quot;&gt;
                                Thomsonreuters.com
                            &lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;nav-item&quot;&gt;
                            &lt;a class=&quot;nav-link&quot; href=&quot;https://www.reuters.com/privacy-policy&quot;&gt;
                                Privacy Policy
                            &lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;nav-item&quot;&gt;
                            &lt;a class=&quot;nav-link&quot; href=&quot;https://www.reuters.com/terms-of-use&quot;&gt;
                                Terms of Use
                            &lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;nav-item&quot;&gt;
                            &lt;a class=&quot;nav-link&quot; href=&quot;https://thomsonreuters.com/copyright/&quot;&gt;
                                Copyright
                            &lt;/a&gt;
                        &lt;/li&gt;
                        &lt;li class=&quot;nav-item&quot;&gt;
                            &lt;a class=&quot;nav-link&quot; href=&quot;https://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;
                                Trust Principles
                            &lt;/a&gt;
                        &lt;/li&gt;
                    &lt;/ul&gt;&lt;/div&gt;
            &lt;/nav&gt;&lt;!-- Google Analytics --&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/node_modules/jquery/dist/jquery.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/bower_components/underscore/underscore.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/bower_components/backbone/backbone.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/bower_components/pym.js/dist/pym.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/bower_components/moment/moment.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/bower_components/waypoints/lib/noframework.waypoints.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/node_modules/popper.js/dist/umd/popper.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/node_modules/bootstrap/dist/js/bootstrap.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/scripts/vendor/riveted.min.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/scripts/vendor/jquery.scrolldepth.min.js&quot;&gt;&lt;/sc ript&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/scripts/utils.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!-- &lt;scr ipt src=&quot;//www.reuters.com/investigates/static/4-0-0/en/scripts/main.js&quot;&gt;&lt;/scr ipt&gt;--&gt;&lt;!--
            &lt;scr ipt&gt;
                $(document).on('ready', function(){
                    try{
                        Reuters.Graphics.generateGraphic('#ReutersGraphic');
                    }catch(e){
                        console.log('unable to load graphic.');
                    }
                });
            &lt;/scr ipt&gt;
        --&gt;</description>
<pubDate>Wed, 30 Jan 2019 13:33:36 +0000</pubDate>
<dc:creator>MrMetlHed</dc:creator>
<og:url>https://www.reuters.com/investigates/special-report/usa-spying-karma/</og:url>
<og:title>'Karma': Inside the hack used by the UAE to break into iPhones of foes</og:title>
<og:type>article</og:type>
<og:image>https://www.reuters.com/investigates/special-report/assets/usa-spying-karma/mastheads/related-karma.jpg?v=534000300119</og:image>
<og:description>A spying squad based in Abu Dhabi used a hacking tool called Karma to spy on iPhones of opponents. Reuters explains how the exploit worked.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/investigates/special-report/usa-spying-karma/</dc:identifier>
</item>
<item>
<title>Amiga Music Tracker in JavaScript</title>
<link>https://www.stef.be/bassoontracker/</link>
<guid isPermaLink="true" >https://www.stef.be/bassoontracker/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.stef.be/bassoontracker/&quot;&gt;https://www.stef.be/bassoontracker/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19034690&quot;&gt;https://news.ycombinator.com/item?id=19034690&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 310&lt;/p&gt;
&lt;p&gt;# Comments: 73&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 13:06:52 +0000</pubDate>
<dc:creator>baldfat</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.stef.be/bassoontracker/</dc:identifier>
</item>
<item>
<title>Ending our Medium integration</title>
<link>https://write.as/blog/ending-our-medium-integration</link>
<guid isPermaLink="true" >https://write.as/blog/ending-our-medium-integration</guid>
<description>&lt;p&gt;Sometime in the past few weeks, Medium abruptly &lt;a href=&quot;https://twitter.com/macguru17/status/1088387105519255553&quot; rel=&quot;nofollow&quot;&gt;deleted third-party access&lt;/a&gt; to their publishing API. There was no warning before, or notice after, this happened ‚Äî apps just stopped working (including ours).&lt;/p&gt;
&lt;p&gt;When anyone on &lt;a href=&quot;https://write.as&quot; rel=&quot;nofollow&quot;&gt;Write.as&lt;/a&gt; tries to interact with Medium now, the response we get from their API is plain:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;Application not found (6005)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So unfortunately, we've removed our Medium integration. You'll no longer see the option to connect a Medium account or cross-post to one in the editor.&lt;/p&gt;
&lt;p&gt;We contacted Medium's team to see how we could regain API access. But then, after a little more thought, we decided to make this change permanent, and not continue support for their platform, regardless of what their response is.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update 11:33am EST&lt;/strong&gt;: we received a response from Medium, though it's still confusing:&lt;/em&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;We recently experienced an interruption with API, and the ability to generate new oAuth-based applications has been restricted. I have reenabled that feature.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;This doesn't really explain why our 2-year-old integration suddenly stopped working (we didn't need to generate a new application). So I'm asking for more clarification.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Our original goal in supporting the Medium API was to create more bridges between different web silos. That was part of the &lt;a href=&quot;https://medium.com/@ev/welcome-to-medium-9e53ca408c48&quot; rel=&quot;nofollow&quot;&gt;promise of Medium&lt;/a&gt; back when it started, after all ‚Äî a &lt;em&gt;network&lt;/em&gt; of blogs, instead of individual islands. When they opened their API, we knew that would be the perfect chance to help writers connect with more readers.&lt;/p&gt;
&lt;p&gt;We trusted that Medium might not do what many VC-funded platforms have done before: open an API, attract developers and users, grow, then shut it all down. Unfortunately, that's exactly what they did. And unlike their &lt;a href=&quot;http://www.niemanlab.org/2018/05/medium-abruptly-cancels-the-membership-programs-of-its-21-remaining-publisher-partners/&quot; rel=&quot;nofollow&quot;&gt;previous pivots&lt;/a&gt;, they didn't even give the courtesy of a small heads-up.&lt;/p&gt;
&lt;p&gt;It's this pattern of disregard for everyone else, as they clamor for a business model, that is mostly driving our decision to part ways. They've done a lot of good for the web (and indeed helped inspire Write.as). But we believe there's a better way forward, and based on their decisions, they probably won't be a part of it.&lt;/p&gt;
&lt;p&gt;With this change, we'll be honing the focus of our product even more, evolving the &lt;a href=&quot;https://writefreely.org&quot; rel=&quot;nofollow&quot;&gt;open source software behind it all&lt;/a&gt;, and continuing to build a sustainable, human-centric platform for publishing on the web.&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 13:05:07 +0000</pubDate>
<dc:creator>thebaer</dc:creator>
<og:title>Ending our Medium integration</og:title>
<og:description>Sometime in the past few weeks, Medium abruptly deleted third-party access to their publishing API. There was no warning before, or notic...</og:description>
<og:type>article</og:type>
<og:url>https://write.as/blog/ending-our-medium-integration</og:url>
<og:image>https://write.as/img/w-sq-light.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://write.as/blog/ending-our-medium-integration</dc:identifier>
</item>
<item>
<title>Lock-Free Rust: Crossbeam in 2019</title>
<link>https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html</link>
<guid isPermaLink="true" >https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html</guid>
<description>&lt;p&gt;This is a follow-up post to &lt;a href=&quot;https://aturon.github.io/blog/2015/08/27/epoch/&quot;&gt;Lock-freedom without garbage collection&lt;/a&gt; from 2015, which introduced &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam&quot;&gt;Crossbeam&lt;/a&gt;, a Rust library that implements efficient lock-free data structures without relying on a tracing garbage collector.&lt;/p&gt;
&lt;p&gt;Crossbeam has gone through a long list of improvements since then, and it‚Äôs time to showcase where it‚Äôs at today. We‚Äôre aiming to provide a rich set of tools for concurrency akin to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/package-summary.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.concurrent&lt;/code&gt;&lt;/a&gt; and outdo Go channels in &lt;a href=&quot;https://docs.rs/crossbeam-channel&quot;&gt;features&lt;/a&gt; and &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel/benchmarks#results&quot;&gt;performance&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To see what is currently offered by the library, jump to the &lt;a href=&quot;https://docs.rs/crossbeam&quot;&gt;documentation&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;p&gt;The following tour through the history of Crossbeam contains something like 150 links. I encourage interested readers to click on them - you may find hidden treasures of useful resources buried in here! üíé&lt;/p&gt;
&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;p&gt;Before we get started, it‚Äôs helpful to clarify a little bit what exactly Crossbeam is and how it relates to other libraries for concurrency and parallelism.&lt;/p&gt;
&lt;p&gt;A common question I get is how Crossbeam differs from &lt;a href=&quot;https://github.com/rayon-rs/rayon&quot;&gt;Rayon&lt;/a&gt; and &lt;a href=&quot;https://github.com/tokio-rs/tokio&quot;&gt;Tokio&lt;/a&gt;. My answer is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Rayon splits your data into distinct pieces, gives each piece to a thread to do some kind of computation on it, and finally aggregates results. Its goal is to distribute CPU-intensive tasks onto a thread pool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tokio runs tasks which sometimes need to be paused in order to wait for asynchronous events. Handling tons of such tasks is no problem. Its goal is to distribute IO-intensive tasks onto a thread pool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crossbeam is all about low-level concurrency: atomics, concurrent data structures, synchronization primitives. Same idea as the &lt;a href=&quot;https://doc.rust-lang.org/std/sync/index.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::sync&lt;/code&gt;&lt;/a&gt; module, but bigger. Its goal is to provide tools on top of which libraries like Rayon and Tokio can be built.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same year Rust 1.0 was released, &lt;a href=&quot;https://github.com/aturon&quot;&gt;aturon&lt;/a&gt; published the blog post titled &lt;a href=&quot;https://aturon.github.io/blog/2015/08/27/epoch/&quot;&gt;Lock-freedom without garbage collection&lt;/a&gt;, which demonstrates that one doesn‚Äôt need a language with a tracing garbage collector to write fast lock-free programs. The secret sauce is a technique called epoch-based garbage collection, which is much different from traditional garbage collectors and is easily implemented as a library.&lt;/p&gt;
&lt;p&gt;In those &lt;a href=&quot;https://docs.rs/crossbeam/0.3.2/crossbeam/index.html&quot;&gt;early days&lt;/a&gt;, Crossbeam had:&lt;/p&gt;
&lt;p&gt;Then, in 2017, aturon &lt;a href=&quot;https://internals.rust-lang.org/t/crossbeam-request-for-help/4933&quot;&gt;declared he didn‚Äôt have time&lt;/a&gt; to continue working on the project and asked the Rust community to take it over. Many people showed interest in contributing and that is how I got involved, too.&lt;/p&gt;

&lt;p&gt;At that time, we discovered some pieces of Crossbeam like &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicOption&lt;/code&gt;, epoch-based GC, and scoped threads had soundness holes. All of them were easy to fix but difficult to spot. Low-level concurrency is notoriously tricky and scary, so we first made sure those bugs are ironed out before growing the library.&lt;/p&gt;
&lt;p&gt;Organizational changes were put in place. We split the library into multiple subcrates:&lt;/p&gt;
&lt;p&gt;The main &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam&lt;/code&gt; crate re-exported those subcrates. We didn‚Äôt want to split crates any further so MPMC queues and the lock-free stack were kept in the main crate for the time being.&lt;/p&gt;
&lt;p&gt;Next, we created the &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs&quot;&gt;RFCs repository&lt;/a&gt; and begun discussing the overall direction of the project and new features we should implement. A &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/wiki&quot;&gt;wiki&lt;/a&gt; page with learning resources was set up.&lt;/p&gt;
&lt;p&gt;The first RFC we accepted was a &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-04-30-roadmap.md&quot;&gt;roadmap&lt;/a&gt; for the next 3-6 months. In hindsight, that was overly optimistic and should‚Äôve been a plan for the year‚Ä¶&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/epoch/index.html&quot;&gt;epoch-based GC&lt;/a&gt; went through a complete rewrite. The &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-05-02-atomic-api.md&quot;&gt;atomics API&lt;/a&gt; was first revamped - soundness holes got fixed, pointer tagging was added, more efficient atomic operations were introduced.&lt;/p&gt;
&lt;p&gt;Next, we &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-05-23-epoch-gc.md&quot;&gt;redesigned&lt;/a&gt; the core epoch mechanism. Pinning got more than two times faster, garbage collection became incremental in order to reduce pauses, manual garbage flushing was added, and we made it possible to run arbitrary destructors before freeing memory.&lt;/p&gt;
&lt;p&gt;Correctness of memory orderings in the garbage collector was proven in an incredible &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-07-23-relaxed-memory.md&quot;&gt;RFC&lt;/a&gt; written by &lt;a href=&quot;https://github.com/jeehoonkang&quot;&gt;jeehoonkang&lt;/a&gt;. The proof got us more confidence in the implementation and was a big step forward in the maturity of the project.&lt;/p&gt;
&lt;p&gt;He followed up with another &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-10-06-collector-api.md&quot;&gt;RFC&lt;/a&gt; that made it possible to create independent GC instances and use &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-epoch&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;#[no_std]&lt;/code&gt; environments. Memory allocator &lt;a href=&quot;https://github.com/ezrosent/allocators-rs/tree/master/elfmalloc&quot;&gt;elfmalloc&lt;/a&gt; was then able to use it as a dependency.&lt;/p&gt;
&lt;p&gt;Another milestone was when we realized &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-11-02-guards.md&quot;&gt;guards&lt;/a&gt; can be safely used for pinning, so the ugly pin scopes got removed and pinning became more ergonomic.&lt;/p&gt;

&lt;p&gt;In the spring of 2017, I got interested in &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/channel/index.html&quot;&gt;channels&lt;/a&gt; because they‚Äôve become the bread-and-butter synchronization tool in Go, while our channel implementations were lacking in many regards. My observations were:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/std/sync/mpsc/index.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::sync::mpsc&lt;/code&gt;&lt;/a&gt; has a number of flaws. &lt;a href=&quot;https://doc.rust-lang.org/std/sync/mpsc/struct.Sender.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sender&lt;/code&gt;&lt;/a&gt; is not &lt;code class=&quot;highlighter-rouge&quot;&gt;Sync&lt;/code&gt; and &lt;a href=&quot;https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Receiver&lt;/code&gt;&lt;/a&gt; cannot even be cloned. &lt;a href=&quot;https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html&quot;&gt;Bounded channels&lt;/a&gt; are just deques inside mutexes and therefore slow. The &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27800&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select!&lt;/code&gt;&lt;/a&gt; macro isn‚Äôt moving towards stabilization due to insurmountable obstacles in its design. And there are known long-standing bugs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Like our bounded &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt;, Go channels are protected by big mutexes. A promising &lt;a href=&quot;https://docs.google.com/document/d/1yIAYmbvL3JxOKOjuCyon7JhW4cSv1wy5hC0ApeGMV9s/pub&quot;&gt;design proposal&lt;/a&gt; for lock-free channels was published in 2014 and there‚Äôs even a &lt;a href=&quot;https://codereview.appspot.com/12544043&quot;&gt;pull request&lt;/a&gt; for it, but it has been open for years with little progress.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The only way to use channels with select on stable Rust was using &lt;a href=&quot;https://github.com/BurntSushi&quot;&gt;BurntSushi&lt;/a&gt;‚Äôs &lt;a href=&quot;https://github.com/BurntSushi/chan&quot;&gt;chan&lt;/a&gt; crate. It was great but never designed for high performance and was even slower than Go channels, which is unfortunate.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;My goal was to build channels that have cloneable and shareable senders and receivers, are faster than both Go channels and &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt;, have &lt;code class=&quot;highlighter-rouge&quot;&gt;select!&lt;/code&gt;, support dynamic selection, and fix ergonomic warts in &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt;. I had serious doubts that such a thing is even possible, but it was worth giving a shot to see how far we can go.&lt;/p&gt;
&lt;p&gt;After seven months of research and experimentation, I published &lt;a href=&quot;https://docs.rs/crossbeam-channel/0.1&quot;&gt;version 0.1&lt;/a&gt; of &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-channel&lt;/code&gt;&lt;/a&gt;, which delivered on most of the envisioned goals. A &lt;a href=&quot;https://stjepang.github.io/2017/08/13/designing-a-channel.html&quot;&gt;blog post&lt;/a&gt;, an &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/blob/master/text/2017-11-09-channel.md&quot;&gt;RFC&lt;/a&gt;, and &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel/benchmarks#results&quot;&gt;benchmarks&lt;/a&gt; accompanied the release. But it wasn‚Äôt a wild success as much as I hoped. For example, some of the responses were:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I still can‚Äôt get over the select design. I know it‚Äôs performant, and every other part of the library is great, but the conditions seems way too easy to mess up&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I also don‚Äôt like the global state with the threadlocal variable, why can‚Äôt it be a struct with methods?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Not only it is brittle, but I must admit that even after reading the description of the mechanism several times, I am not quite clear on exactly how it works.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Back to the drawing board. After seven more months crafting a &lt;a href=&quot;https://docs.rs/crossbeam-channel/0.2.6/src/crossbeam_channel/internal/select.rs.html#889-1911&quot;&gt;complicated&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;select!&lt;/code&gt; macro, &lt;a href=&quot;https://docs.rs/crossbeam-channel/0.2&quot;&gt;version 0.2&lt;/a&gt; was released, which also simplified the API surface, basing decisions on the received feedback and conclusions of a lengthy &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-channel/issues/39&quot;&gt;discussion&lt;/a&gt; in the issue tracker.&lt;/p&gt;
&lt;p&gt;The release was a significant improvement, but still not perfect. It was &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-channel/issues/63&quot;&gt;not possible&lt;/a&gt; to do dynamic selection and users complained about dropped receivers &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-channel/issues/55&quot;&gt;not closing&lt;/a&gt; channels, which sparked another interesting &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-channel/issues/61&quot;&gt;discussion&lt;/a&gt;, where we dug deeper into the design space of channels and reverted some decisions.&lt;/p&gt;
&lt;p&gt;It took five months to figure out what to do next and rewrite the selection mechanism from scratch. Finally, all pieces somehow &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-channel/pull/106&quot;&gt;fell into the right places&lt;/a&gt; and, with &lt;a href=&quot;https://docs.rs/crossbeam-channel/0.3&quot;&gt;version 0.3&lt;/a&gt;, my dream came true - Crossbeam channels now offer everything one could ask for, and I haven‚Äôt received any major complaints or feature requests so far. They are fast, MPMC, and have a powerful select. This year might be a good time to publish version 1.0 since I don‚Äôt expect API changes anymore.&lt;/p&gt;
&lt;p&gt;Servo &lt;a href=&quot;https://github.com/servo/servo/pull/21325&quot;&gt;switched&lt;/a&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-channel&lt;/code&gt;, which removed a bunch of unsafe code and the dependence on the unstable &lt;a href=&quot;https://github.com/rust-lang/rust/issues/27800&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc_select&lt;/code&gt;&lt;/a&gt; feature. That was an important milestone because it proved &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-channel&lt;/code&gt; is mature and reliable enough for such a big project.&lt;/p&gt;
&lt;p&gt;I‚Äôm also intending to write an RFC with a proposal to give &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt; a desperately needed refresh: improve performance, enrich the interface, and fix bugs. There‚Äôs still a &lt;a href=&quot;https://github.com/rust-lang/rust/issues/39364&quot;&gt;known bug&lt;/a&gt; in it, which is even &lt;a href=&quot;https://doc.rust-lang.org/1.31.0/std/sync/mpsc/struct.Receiver.html#method.recv_timeout&quot;&gt;documented&lt;/a&gt; in the standard library! This is not a good look and we should do something about it as soon as possible. One option is to take a subset of &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-channel&lt;/code&gt; to replace the whole guts of &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt;, just like we‚Äôre replacing mutexes and hash tables with &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56410&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parking_lot&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/rust-lang/rust/pull/56241&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hashbrown&lt;/code&gt;&lt;/a&gt;. But more on that another time‚Ä¶&lt;/p&gt;
&lt;p&gt;Fortunately, &lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-channel&lt;/code&gt; has had very few bugs during its life, and none have ever been reported by users, thanks to the &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel/tests&quot;&gt;extensive suite&lt;/a&gt; of 400 tests, some of which are borrowed from &lt;code class=&quot;highlighter-rouge&quot;&gt;mpsc&lt;/code&gt; and Go‚Äôs channels.&lt;/p&gt;
&lt;p&gt;This is just a summary of how these channels came to be. Given how much interesting research went into producing this crate, it deserves a blog post of its own so I hope to write more sometime!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/thread/index.html&quot;&gt;Scoped threads&lt;/a&gt; are such a simple convenience, yet may be the feature Crossbeam is best known for. In the past year, we fixed &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/36&quot;&gt;soundness issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/28&quot;&gt;bugs&lt;/a&gt;, removed &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/33&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/44&quot;&gt;cruft&lt;/a&gt;, polished up &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/7&quot;&gt;thread&lt;/a&gt; &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/42&quot;&gt;joining&lt;/a&gt;, and added support for &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/47&quot;&gt;nested spawns&lt;/a&gt;. It‚Äôs really just a bunch of small incremental changes.&lt;/p&gt;
&lt;p&gt;Some notable breaking changes were:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;In &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/thread/struct.Scope.html#method.spawn&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scope.spawn(f)&lt;/code&gt;&lt;/a&gt;, closure &lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; now accepts a single argument of type &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/thread/struct.Scope.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;Scope&lt;/code&gt;&lt;/a&gt;, which can be used for spawning nested scoped threads. &lt;a href=&quot;https://docs.rs/rayon/1.0.3/rayon/fn.spawn.html&quot;&gt;Rayon‚Äôs scopes&lt;/a&gt; use a similar pattern.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/fn.scope.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam::scope()&lt;/code&gt;&lt;/a&gt; now returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt; that contains an error if any automatically joined child thread has panicked. Before the change, such panics would get silently ignored.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The set of atomics provided by the &lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/index.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::sync::atomic&lt;/code&gt;&lt;/a&gt; module is not particularly easy to use. In many ways, it feels very low-level:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;There‚Äôs only a restricted set of primitive atomic types like &lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/struct.AtomicBool.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicUsize&lt;/code&gt;&lt;/a&gt;. But what if we want arbitrary types to be atomic?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/struct.AtomicPtr.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicPtr&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; can load and store raw pointers only, forcing us to use &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;/code&gt;. It would be nice to have atomic &lt;code class=&quot;highlighter-rouge&quot;&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Arc&amp;lt;T&amp;gt;&lt;/code&gt; instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every atomic operation needs a memory ordering. Reckless use of &lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html#variant.Relaxed&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Relaxed&lt;/code&gt;&lt;/a&gt; resulting in UB is worryingly common. Even experienced programmers sometimes fall into this trap.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Enter &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/atomic/struct.AtomicCell.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, which works just like &lt;a href=&quot;https://doc.rust-lang.org/std/cell/struct.Cell.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, except it can also be shared among threads. Arbitrary types may be used with &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt;, although some operations only work with &lt;code class=&quot;highlighter-rouge&quot;&gt;Copy&lt;/code&gt; types. Sane defaults are used for memory orderings so one doesn‚Äôt have to worry about them.&lt;/p&gt;
&lt;p&gt;Of course, there must be some magic enabling &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt; to work with arbitrary types:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;When type &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; can be &lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.transmute.html&quot;&gt;transmuted&lt;/a&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicUsize&lt;/code&gt;, we internally pretend that &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; is actually &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicUsize&lt;/code&gt; and perform atomic operations that way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; cannot be transmuted into &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicUsize&lt;/code&gt;, a hidden global array of &lt;a href=&quot;https://en.wikipedia.org/wiki/Spinlock&quot;&gt;spinlocks&lt;/a&gt; is used. To perform an atomic operation, we take the pointer address of the &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt; and pick one of the spinlocks based on it. Then we lock it, pretend the &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt; is just a &lt;code class=&quot;highlighter-rouge&quot;&gt;Cell&amp;lt;T&amp;gt;&lt;/code&gt;, and perform the desired operation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Most implementations of &lt;a href=&quot;https://en.cppreference.com/w/cpp/atomic/atomic&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::atomic&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; in C++ use the same trick, so this is nothing new. However, there is one thing that sets &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicCell&amp;lt;T&amp;gt;&lt;/code&gt; apart: &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/39&quot;&gt;optimistic reads&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our spinlocks are implemented as &lt;a href=&quot;https://en.wikipedia.org/wiki/Seqlock&quot;&gt;sequential locks&lt;/a&gt;, which means every lock has a &lt;em&gt;stamp&lt;/em&gt;, an atomic integer that gets incremented on every write operation. Read operations load the stamp, optimistically read data, and then check whether the stamp has changed. If not, we‚Äôre done, and if it has, we need to retry.&lt;/p&gt;
&lt;p&gt;This way read operations don‚Äôt contend with each other, meaning they are &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-utils/pull/39#issue-205046570&quot;&gt;very fast&lt;/a&gt;. Neat!&lt;/p&gt;

&lt;p&gt;As of recently, Crossbeam also features &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/sync/index.html&quot;&gt;synchronization primitives&lt;/a&gt;. They are tools in the same category as &lt;a href=&quot;https://doc.rust-lang.org/std/sync/struct.Mutex.html&quot;&gt;mutexes&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/std/sync/struct.Condvar.html&quot;&gt;conditional variables&lt;/a&gt;, except a little bit more exotic.&lt;/p&gt;
&lt;p&gt;Currently, we have the following primitives:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/sync/struct.Parker.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Parker&lt;/code&gt;&lt;/a&gt;, the same mechanism behind function &lt;a href=&quot;https://doc.rust-lang.org/std/thread/fn.park.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thread::park()&lt;/code&gt;&lt;/a&gt;, but extracted for implementing custom thread notification. Tokio uses it for parking and unparking threads in its thread pool. Rayon might adopt it in the future, too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/sync/struct.ShardedLock.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ShardedLock&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is like &lt;a href=&quot;https://doc.rust-lang.org/std/sync/struct.RwLock.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RwLock&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, except it has an array of small &lt;code class=&quot;highlighter-rouge&quot;&gt;RwLock&lt;/code&gt;s called &lt;em&gt;shards&lt;/em&gt;. Each thread performing a read operation locks a distinct shard, thus reducing contention and making reads faster. However, writes are slower because they need to lock all shards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/sync/struct.WaitGroup.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WaitGroup&lt;/code&gt;&lt;/a&gt;, which allows threads to synchronize the beginning or end of some computation. It is inspired by Go‚Äôs &lt;a href=&quot;https://golang.org/pkg/sync/#WaitGroup&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WaitGroup&lt;/code&gt;&lt;/a&gt; from its standard library.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost every work-stealing task scheduler has the same setup:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;There is a shared global queue of tasks, usually called &lt;em&gt;injector&lt;/em&gt; and is the entry point for new tasks. For example, if you call &lt;a href=&quot;https://docs.rs/rayon/1.0.3/rayon/fn.spawn.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rayon::spawn(task)&lt;/code&gt;&lt;/a&gt; outside Rayon‚Äôs thread pool, the task will be pushed into the global queue. Any worker thread is then allowed to take tasks from it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each thread in the thread pool has its own &lt;em&gt;worker&lt;/em&gt; queue. Only the thread that owns it is allowed to push and pop tasks, but other threads may &lt;em&gt;steal&lt;/em&gt; tasks, which is a particular operation optimized for task scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The job of each worker thread is to wait for tasks to appear and run them. To find the next task to run, a thread will first look into its worker queue. If empty, it looks into the global queue or attempts to steal tasks from other threads.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This setup is used in Rayon, Tokio, Go, &lt;a href=&quot;https://www.threadingbuildingblocks.org/docs/help/reference/task_scheduler/scheduling_algorithm.html&quot;&gt;Thread Building Blocks&lt;/a&gt;, you name it. The advantage of work stealing is automatic work balancing among all threads even in presence of skewed workloads.&lt;/p&gt;
&lt;p&gt;Crossbeam‚Äôs &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/deque/index.html&quot;&gt;deque&lt;/a&gt; originally started with a basic Chase-Lev for work stealing, but it got beefed up since then:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;We &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-deque/pull/13&quot;&gt;added support&lt;/a&gt; for FIFO worker queues in addition to the classic LIFO queue. LIFO order makes sense for Rayon because it prioritizes tasks for cache utilization, while FIFO makes more sense for Tokio because it prioritizes tasks for fairness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam-deque/pull/15&quot;&gt;Batched steal&lt;/a&gt; operations were added, which significantly reduce the total cost of queue operations. They got us nice &lt;a href=&quot;https://github.com/tokio-rs/tokio/pull/534&quot;&gt;speedups&lt;/a&gt; in Tokio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A special &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/deque/struct.Injector.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Injector&lt;/code&gt;&lt;/a&gt; queue was &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/pull/290&quot;&gt;introduced&lt;/a&gt;, which integrates nicely with &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/deque/struct.Worker.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Worker&lt;/code&gt;&lt;/a&gt; queues and supports similar operations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Every such improvement in &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-deque&lt;/code&gt;&lt;/a&gt; has a ripple effect on the library ecosystem. By bumping dependency versions and leveraging new features, Tokio‚Äôs thread pool &lt;a href=&quot;https://github.com/tokio-rs/tokio/pull/874&quot;&gt;gets faster&lt;/a&gt;, and therefore every application using Tokio gets faster, too!&lt;/p&gt;

&lt;p&gt;Until very recently, there were just two unbounded MPMC queues in Crossbeam:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MsQueue&lt;/code&gt;, the classic lock-free &lt;a href=&quot;http://www.cs.rochester.edu/~scott/papers/1996_PODC_queues.pdf&quot;&gt;Michael-Scott&lt;/a&gt; queue. It allocates on every push operation, putting high pressure on the global allocator. An interesting extra feature it has is blocking pop operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt;, which is like &lt;code class=&quot;highlighter-rouge&quot;&gt;MsQueue&lt;/code&gt;, except it allocates segments of nodes. Even though it‚Äôs not strictly speaking lock-free, fewer allocations and better cache locality make it quite a bit faster than &lt;code class=&quot;highlighter-rouge&quot;&gt;MsQueue&lt;/code&gt; in practically every case.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Since &lt;code class=&quot;highlighter-rouge&quot;&gt;MsQueue&lt;/code&gt; offers almost nothing over &lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt;, we‚Äôve decided to remove it. And if one needs blocking pop operations, channels can be used as an alternative.&lt;/p&gt;
&lt;p&gt;Then we added &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/queue/struct.ArrayQueue.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayQueue&lt;/code&gt;&lt;/a&gt;, which is based on &lt;a href=&quot;https://github.com/dvyukov&quot;&gt;dvyukov&lt;/a&gt;‚Äôs &lt;a href=&quot;http://www.1024cores.net/home/lock-free-algorithms/queues/bounded-mpmc-queue&quot;&gt;bounded MPMC&lt;/a&gt; queue. The original implementation in C++ has two rough edges: it is not &lt;a href=&quot;https://en.wikipedia.org/wiki/Linearizability&quot;&gt;linearizable&lt;/a&gt; and forces the capacity to always be a power of two. We‚Äôve smoothened both.&lt;/p&gt;
&lt;p&gt;A month ago, I had an epiphany and realized the bounded MPMC queue can be generalized to an unbounded queue. By combining segments from &lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt; and turning the &lt;em&gt;sequence&lt;/em&gt; field into something functionally akin to &lt;a href=&quot;https://en.wikipedia.org/wiki/Hazard_pointer&quot;&gt;hazard pointers&lt;/a&gt;, we can replace epoch-based GC with a &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/pull/279#issuecomment-450490718&quot;&gt;different garbage collection scheme&lt;/a&gt;, bringing two benefits:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Garbage collection is entirely eager rather than lazy. Under high concurrency, it can be measured that this new queue uses less memory than the old &lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Epoch-based GC incurs a certain overhead on every operation due to thread pinning and occasional garbage collection. By removing it we get performance wins.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt; was then rewritten from scratch and got us much better &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/pull/291&quot;&gt;benchmark&lt;/a&gt; numbers.&lt;/p&gt;
&lt;p&gt;Both &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayQueue&lt;/code&gt; and the new &lt;code class=&quot;highlighter-rouge&quot;&gt;SegQueue&lt;/code&gt; implementations sprung from the effort of &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/pull/279#issue-241302461&quot;&gt;optimizing&lt;/a&gt; channels, which were the first to use those queues internally, and then we just ripped them out and moved into &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-queue&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-queue&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There‚Äôs an experimental crate &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-skiplist&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crossbeam-skiplist&lt;/code&gt;&lt;/a&gt; featuring maps and sets based on lock-free &lt;a href=&quot;https://en.wikipedia.org/wiki/Skip_list&quot;&gt;skiplists&lt;/a&gt;. They are very similar to &lt;a href=&quot;https://doc.rust-lang.org/std/collections/struct.BTreeMap.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/std/collections/struct.BTreeSet.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeSet&lt;/code&gt;&lt;/a&gt; in functionality and interface, but can be mutated concurrently from multiple threads.&lt;/p&gt;
&lt;p&gt;These maps and sets scale very well, much better than mutex-protected &lt;a href=&quot;https://en.wikipedia.org/wiki/B-tree&quot;&gt;B-tree&lt;/a&gt; based equivalents. However, in single-threaded workloads, skiplists offer rather underwhelming performance, generally three to four times slower in comparison to B-trees.&lt;/p&gt;
&lt;p&gt;The main inspiration here has been Java‚Äôs &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListMap.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. I‚Äôve always been jealous of Java having concurrent skiplists that are straightforward to use, so this is an effort to bring them to Rust as well. The fact that Rust doesn‚Äôt use the JVM to rely on a mature and well-engineered concurrent GC made implementation much more difficult for us. Surely one of my most complex pieces of code!&lt;/p&gt;
&lt;p&gt;The crate has been in a &lt;em&gt;coming soon&lt;/em&gt; state for a long time now. We‚Äôve just been slacking off on writing additional tests and documentation to push it over the finish line and publish the first version. But really, it‚Äôs been completed - you can clone the &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-skiplist&quot;&gt;repository&lt;/a&gt; and play with it.&lt;/p&gt;

&lt;p&gt;There are two &lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/utils/index.html&quot;&gt;utilities&lt;/a&gt; that are difficult to put into any category. While very simple, they are indispensable in low-level concurrency.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/utils/struct.Backoff.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Backoff&lt;/code&gt;&lt;/a&gt; performs exponential backoff in spin loops by executing the &lt;a href=&quot;https://doc.rust-lang.org/std/sync/atomic/fn.spin_loop_hint.html&quot;&gt;&lt;em&gt;PAUSE&lt;/em&gt; or &lt;em&gt;YIELD&lt;/em&gt;&lt;/a&gt; instruction and &lt;a href=&quot;https://doc.rust-lang.org/std/thread/fn.yield_now.html&quot;&gt;yielding&lt;/a&gt; the current thread to the OS scheduler. Here‚Äôs how one might use it to wait for an &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;/code&gt; to become &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;spin_wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AtomicBool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backoff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Backoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SeqCst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;backoff&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.snooze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.rs/crossbeam/0.7.1/crossbeam/utils/struct.CachePadded.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CachePadded&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; wraps a value of type &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt;, padding it and aligning to the length of a cache line. Useful when we want to make sure an atomic variable doesn‚Äôt get &lt;a href=&quot;https://en.wikipedia.org/wiki/False_sharing&quot;&gt;falsely shared&lt;/a&gt;. For example, in a MPMC queue, it‚Äôs a good idea to put the head and tail indices into their own cache lines:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CachePadded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AtomicUsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CachePadded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AtomicUsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Crossbeam has come a long way already, but there is still work to do. In summary, there are two sorely missing features we need as soon as possible, and a list of less critical nice-to-haves.&lt;/p&gt;
&lt;p&gt;In an interesting &lt;a href=&quot;https://morestina.net/blog/784/exploring-lock-free-rust-3-crossbeam&quot;&gt;blog post&lt;/a&gt; comparing concurrency in Java and Rust, &lt;a href=&quot;https://github.com/hniksic&quot;&gt;hniksic&lt;/a&gt; points out we don‚Äôt really have a satisfactory equivalent of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicReference.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicReference&lt;/code&gt;&lt;/a&gt;. The closest one we have today is probably &lt;a href=&quot;https://docs.rs/arc-swap&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arc-swap&lt;/code&gt;&lt;/a&gt;, but there is still room for improvement - for example, in some cases, it is an order of magnitude slower than &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicReference&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Another &lt;a href=&quot;https://github.com/servo/servo/issues/22334&quot;&gt;common request&lt;/a&gt; is a concurrent hash table. While we do have wonderful crates like &lt;a href=&quot;https://docs.rs/evmap&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;evmap&lt;/code&gt;&lt;/a&gt;, they tend to be designed for niche uses and often have non-standard interfaces. I‚Äôd love to also see a generic concurrent hash table that works well enough across a broad set of applications, with few surprises, and is ideally as similar to &lt;a href=&quot;https://doc.rust-lang.org/std/collections/struct.HashMap.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;&lt;/a&gt; as possible.&lt;/p&gt;
&lt;p&gt;So these are the things I‚Äôd like to see in Crossbeam this year: &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicReference.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicReference&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; written in Rust. There is a lot of design and implementation work to do here, but we generally know how to move forward. If you‚Äôre interested, take a peek at discussions on &lt;a href=&quot;https://github.com/crossbeam-rs/crossbeam/issues/160&quot;&gt;atomic references&lt;/a&gt; and &lt;a href=&quot;https://github.com/crossbeam-rs/rfcs/issues/32&quot;&gt;hash tables&lt;/a&gt; in the issue tracker.&lt;/p&gt;
&lt;p&gt;Finally, there is a neverending list of lower-priority features we might want to explore, but are not essential to the project:&lt;/p&gt;

&lt;p&gt;Looking back at the past two years, I‚Äôm thrilled with what we‚Äôve accomplished so far! These days Crossbeam is even &lt;a href=&quot;https://people.mpi-sws.org/~dreyer/papers/rbrlx/paper.pdf&quot;&gt;getting&lt;/a&gt; &lt;a href=&quot;https://dl.acm.org/citation.cfm?id=2926707&quot;&gt;referenced&lt;/a&gt; in &lt;a href=&quot;https://www.microsoft.com/en-us/research/wp-content/uploads/2017/07/snowflake-extended.pdf&quot;&gt;research&lt;/a&gt; &lt;a href=&quot;https://plv.mpi-sws.org/scfix/paper.pdf&quot;&gt;papers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My work on Crossbeam was sponsored by Mozilla and patrons on &lt;a href=&quot;https://www.patreon.com/stjepang&quot;&gt;Patreon&lt;/a&gt;, to which I owe a big thank you! Without your support, it just wouldn‚Äôt be able to happen. Sustainability of open source work is a complicated topic and, instead of going into a ramble, I‚Äôll just say everything &lt;a href=&quot;https://github.com/withoutboats&quot;&gt;withoutboats&lt;/a&gt; wrote about it at the end of their &lt;a href=&quot;https://boats.gitlab.io/blog/post/rust-2019/&quot;&gt;blog post&lt;/a&gt; is spot on and rings true for me personally.&lt;/p&gt;
&lt;p&gt;I‚Äôd also like to thank all contributors who write code, participate in discussions, and share their feedback. This experience made me realize firsthand just how much every single contribution means, even if it‚Äôs as simple as, say, a comment in the issue tracker.&lt;/p&gt;
&lt;p&gt;On a final note, I feel humbled by technical and leadership knowledge of so many people involved with Rust. And Crossbeam has contributors whose grasp of wide ranges of topics is sometimes way over my head. I‚Äôve learned a lot from you and still am!&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 11:28:01 +0000</pubDate>
<dc:creator>gbrown_</dc:creator>
<og:title>Lock-free Rust: Crossbeam in 2019</og:title>
<og:description>This is a follow-up post to Lock-freedom without garbage collection from 2015, which introduced Crossbeam, a Rust library that implements efficient lock-free data structures without relying on a tracing garbage collector.</og:description>
<og:url>/2019/01/29/lock-free-rust-crossbeam-in-2019.html</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://stjepang.github.io/2019/01/29/lock-free-rust-crossbeam-in-2019.html</dc:identifier>
</item>
<item>
<title>Facebook will shut down its controversial market research app for iOS</title>
<link>https://www.theverge.com/facebook/2019/1/30/18203349/facebook-research-app-apple-shutdown</link>
<guid isPermaLink="true" >https://www.theverge.com/facebook/2019/1/30/18203349/facebook-research-app-apple-shutdown</guid>
<description>&lt;p id=&quot;T8xKXG&quot;&gt;Facebook will end a controversial market research program that violated Apple developer guidelines in order to harvest user data from the phones of volunteers. The company said early Wednesday evening that the Facebook Research app, which offers volunteers between the ages of 13 and 35 monthly $20 gift cards in exchange for near-total access to the data on their phones, would no longer be available on iOS. It will apparently continue to be available for Android users.&lt;/p&gt;
&lt;p id=&quot;Ghl22K&quot;&gt;&lt;a href=&quot;https://techcrunch.com/2019/01/29/facebook-project-atlas/&quot;&gt;&lt;em&gt;TechCrunch&lt;/em&gt; reported on Tuesday&lt;/a&gt; that the company has been paying the gift cards to people aged 13 to 35 in exchange for installing an app called Facebook Research on iOS and Android. The app monitors their phone and web activity and sends it back to Facebook for market research purposes.&lt;/p&gt;
&lt;p id=&quot;X6Xnia&quot;&gt;Facebook previously collected similar data using Onavo Protect, a VPN service that it acquired in 2013. The company has used the data to &lt;a href=&quot;https://www.wsj.com/articles/facebooks-onavo-gives-social-media-firm-inside-peek-at-rivals-users-1502622003&quot;&gt;identify up-and-coming competitors, then acquire or clone them&lt;/a&gt;. Facebook &lt;a href=&quot;https://www.theverge.com/2018/8/22/17771298/facebook-onavo-protect-apple-app-store-pulled-privacy-concerns&quot;&gt;removed the app from the App Store last summer&lt;/a&gt; after Apple complained that it violated the App Store‚Äôs guidelines on data collection.&lt;/p&gt;
&lt;p id=&quot;9ZQffE&quot;&gt;The Research app requires that users install a custom root certificate, giving Facebook the ability to see users‚Äô private messages, emails, web searches, and browsing activity. That‚Äôs in apparent violation of Apple‚Äôs system-level functionality, which is intended to grant employers access to employees‚Äô work devices. The policy prohibits developers from installing the certificates on customers‚Äô phones.&lt;/p&gt;
&lt;p id=&quot;bsZMSp&quot;&gt;In a statement, Facebook objected to parts of &lt;em&gt;TechCrunch&lt;/em&gt;‚Äôs report.&lt;/p&gt;
&lt;p id=&quot;7yEFoZ&quot;&gt;‚ÄúKey facts about this market research program are being ignored,‚Äù the company said. ‚ÄúDespite early reports, there was nothing ‚Äòsecret‚Äô about this; it was literally called the Facebook Research App. It wasn‚Äôt ‚Äòspying‚Äô as all of the people who signed up to participate went through a clear on-boarding process asking for their permission and were paid to participate. Finally, less than 5 percent of the people who chose to participate in this market research program were teens. All of them with signed parental consent forms.‚Äù&lt;/p&gt;
&lt;p id=&quot;bFknAX&quot;&gt;The company also denied that Facebook Research was intended to replace Onavo, although it did not respond to evidence that the apps shared similar code.&lt;/p&gt;
</description>
<pubDate>Wed, 30 Jan 2019 08:00:16 +0000</pubDate>
<dc:creator>flylib</dc:creator>
<og:description>Facebook Research paid users $20 gift cards for near total access to data on their phones</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/txZ4Du7GimmHSX7f4LH1CxgUGpM=/0x146:2040x1214/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/10622599/jbareham_180409_2445_0001_01.jpg</og:image>
<og:title>Facebook will shut down its controversial market research app for iOS</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/facebook/2019/1/30/18203349/facebook-research-app-apple-shutdown</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/facebook/2019/1/30/18203349/facebook-research-app-apple-shutdown</dc:identifier>
</item>
</channel>
</rss>