<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>I wasted $40k on a fantastic startup idea</title>
<link>https://tjcx.me/p/i-wasted-40k-on-a-fantastic-startup-idea</link>
<guid isPermaLink="true" >https://tjcx.me/p/i-wasted-40k-on-a-fantastic-startup-idea</guid>
<description>&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;Y&lt;/span&gt;ou have a mind-shattering headache. You're standing in the aisle of your local CVS, massaging your temples while scanning the shelves for something—&lt;em&gt;anything&lt;/em&gt;—to make make the pain stop.&lt;/p&gt;
&lt;p&gt;What do you reach for? Tylenol? Advil? Aleve?&lt;/p&gt;
&lt;p&gt;Most people, I imagine, grab whatever's cheapest, or closest, or whatever they &lt;em&gt;always&lt;/em&gt; use. But if you're scrupulous enough to ask Google for the best painkiller, here's how your friendly neighborhood tech behemoth would answer:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBDQT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--692ad5fb57e820714ca1dc70e3b05260aae65913/image-1601262407690.jpg&quot; alt=&quot;Most effective painkillers&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Oh thanks Google that's just &lt;em&gt;all of them&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you're among the &lt;a href=&quot;https://www.pewresearch.org/fact-tank/2013/02/01/majority-of-adults-look-online-for-health-information/&quot;&gt;77% of Americans&lt;/a&gt; that Google their health problems, insipid answers like this won't surprise you. But we should be surprised, because researchers carry out &lt;a href=&quot;https://bmjopen.bmj.com/content/5/9/e008932&quot;&gt;tens of thousands&lt;/a&gt; of clinical trials every year. And hundreds of clinical trials have examined the effectiveness of painkillers. So why can't I Google those results?&lt;/p&gt;
&lt;p&gt;And so in the year of our lord 2017 I had a &lt;strong&gt;Brilliant Startup Idea&lt;/strong&gt;: use a structured database of clinical trials to provide simple, practical answers to common medical questions.&lt;/p&gt;
&lt;p&gt;As a proof-of-concept I tried this by hand: I made a &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1xIx25J54JifJ8qliGnMBlKWn3PdB5sn852blOBfKfJk/&quot;&gt;spreadsheet&lt;/a&gt; with every OTC painkiller trial I could find and used &lt;a href=&quot;https://www.r-project.org/&quot;&gt;R&lt;/a&gt; to run a &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5386629/&quot;&gt;network meta-analysis&lt;/a&gt;, the &lt;a href=&quot;https://link.springer.com/article/10.1007/s00406-016-0715-4&quot;&gt;gold standard&lt;/a&gt; of evidence-based medicine.&lt;/p&gt;
&lt;p&gt;The results were pretty interesting, and &lt;em&gt;exactly&lt;/em&gt; the kind of thing I was looking for back in the sad sterile aisles of CVS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBEZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b560c1e2bdbe33d8ddd1f10436432d3658d62c1b/image-1601347817059.jpg&quot; alt=&quot;Most effective painkillers&quot;/&gt;&lt;/p&gt;
&lt;p&gt;A wave of exhiliration washed over me. Here was a problem that&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Was interesting&lt;/li&gt;
&lt;li&gt;Could help people&lt;/li&gt;
&lt;li&gt;I knew how to solve&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;A perfect bullseye. After a few hours searching domains I came up with a name for my project: &lt;strong&gt;GlacierMD&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Over the next nine months I would quit my job, write over 200,000 lines of code, hire five contractors, create a Delaware C-Corp, add four doctors to my advisory board, and demo GlacierMD for twelve Bay Area medical practices. I would spend $40K of my own savings buying clinical trials and paying contractors to enter said trials into the GlacierMD database.&lt;/p&gt;
&lt;p&gt;On July 2, 2018, GlacierMD powered the world's largest depression meta-analysis, using data from 846 trials, beating &lt;a href=&quot;https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(17)32802-7/fulltext&quot;&gt;Cipriani's previous record&lt;/a&gt; of 522.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBEdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f65968deef4b6b7b836a90d2eee15119b5583f8c/image-1601347863747.jpg&quot; alt=&quot;GlacierMD's evidence graph for depression treatments.&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Choirs of angels sang in my ears. Here I was, living the Silicon Valley dream: making the world a better place through technology.&lt;/p&gt;
&lt;p&gt;Two weeks later GlacierMD was dead.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;&quot;T&lt;/span&gt;hat's an awesome idea,&quot; said Carl. &quot;It sounds like something worth working on.&quot;&lt;/p&gt;&lt;p&gt;Carl was my boss. We worked at a startup that leveraged autonomous blockchains to transfer money from naïve investors to slightly less naïve twenty-somethings. There are worse gigs.&lt;/p&gt;
&lt;p&gt;And here was Carl telling me that my startup idea would bring such benefit to humanity that I simply &lt;em&gt;had&lt;/em&gt; to quit, his roadmap be damned. I nodded knowingly, feeling the weight of this responsibility resting on my proud shoulders.&lt;/p&gt;
&lt;p&gt;&quot;Thanks Carl,&quot; I said. &quot;I'll try to mention you when I accept my Nobel.&quot;&lt;/p&gt;
&lt;p&gt;I quit two weeks later and started coding at a blistering pace. I drew all sorts of inscrutable diagrams with dry-erase pens on my parents' windows. I hired a motley crew of Egyptian contractors to start entering clinical trials into my database. I commissioned a logo, registered my domain, and started obsessing over color schemes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFQT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--da9ab4b5da5f08cc26afe10e0531b89321ff5a24/image-1601347898563.jpg&quot; alt=&quot;Data extraction portal for GlacierMD&quot;/&gt;&lt;/p&gt;
&lt;p&gt;When I finally finished the MVP I showed it to the head of product at the company I'd just left. I watched him as he watched my demo, waiting for his eyes to melt with the glory of it all. Instead he just sorta shrugged.&lt;/p&gt;
&lt;p&gt;&quot;Lots of people make medical claims on the internet,&quot; he said. &quot;Why should I trust yours?&quot;&lt;/p&gt;
&lt;p&gt;I started babbling about network meta-analyses, statistical power, and p-values, but he cut me off.&lt;/p&gt;
&lt;p&gt;&quot;Yeah okay that's great but nobody cares about this math crap. You need doctors.&quot;&lt;/p&gt;
&lt;p&gt;Goddamnit he was right. If nobody could be bothered with the math, then I was no better than Gwyneth Paltrow hawking &lt;a href=&quot;https://www.bbc.com/news/world-us-canada-45426332&quot;&gt;vagina eggs&lt;/a&gt;. To build trust I needed to get endorsements from trustworthy people.&lt;/p&gt;
&lt;p&gt;So I called up some friends, some buddies, some friends-of-friends. &quot;Would you like to be an advisor for my cutting-edge health-tech startup?&quot; I'd ask, while eating Dominos in my parents' laundry room. I'd give them 1% of this extermely valuable, high-growth startup and in exchange I could plaster their faces all over my website.&lt;/p&gt;
&lt;p&gt;Four of these doctors agreed. This is called &lt;em&gt;making deals&lt;/em&gt; ladies and gentlemen and I was like the lovechild of Warren Buffet and Dr. Oz.&lt;/p&gt;
&lt;p&gt;Things are going great. My friends and family all tell me they love the site. Even some strangers on the internet love it. &quot;I know right,&quot; I tell them. &quot;So how much would you pay for this?&quot;&lt;/p&gt;
&lt;p&gt;&quot;Hahahahahahah,&quot; they say in unison. &quot;Good one!&quot;&lt;/p&gt;
&lt;p&gt;I forgot that the the first law of consumer tech is &lt;em&gt;nobody pays for consumer tech&lt;/em&gt;. But no problemo, I say to myself. This is why &lt;a href=&quot;https://en.wikipedia.org/wiki/Eric_Schmidt&quot;&gt;Eric Schmidt&lt;/a&gt; invented ads. I'll just plaster a few banners on GlacierMD and &lt;em&gt;bing bang boom&lt;/em&gt; I'll be &lt;a href=&quot;https://www.seasteading.org/&quot;&gt;seasteading&lt;/a&gt; with &lt;a href=&quot;https://en.wikipedia.org/wiki/Peter_Thiel&quot;&gt;Peter Thiel&lt;/a&gt; before &lt;a href=&quot;https://burningman.org/&quot;&gt;Burning Man&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But then I look at WebMD's &lt;a href=&quot;https://www.sec.gov/Archives/edgar/data/1326583/000119312517247147/d391943d10q.htm&quot;&gt;10-Qs&lt;/a&gt; and start to spiral. Turns out the world's biggest health website makes about $0.50/year &lt;em&gt;per user&lt;/em&gt;. That is...not enough money to bootstrap GlacierMD. I'm pouring money into my rent, into my Egyptian contractors, into AWS—I need some cash soon.&lt;/p&gt;
&lt;p&gt;What I need are people willing to pay for this thing. What about doctors? Doctors have money, right? Maybe doctors, or practices, or whatever—someone in the medical industry—maybe they would shell out some cash for my on-demand meta-analyses.&lt;/p&gt;
&lt;p&gt;So I listened to a few podcasts and became a sales expert. I started cold calling people using scripts from the internet and tried to convince them to sit through a GlacierMD demo.&lt;/p&gt;
&lt;p&gt;In the meantime I receive some worrying messages from my Egyptian contractors.&lt;/p&gt;
&lt;p&gt;&quot;I think it's time to talk about a raise,&quot; one of them says.&lt;/p&gt;
&lt;p&gt;&quot;I feel that I have become exceptional at my job,&quot; says another. &quot;Please consider a raise or I will stop working.&quot;&lt;/p&gt;
&lt;p&gt;&quot;Please increase my pay,&quot; says the third, including helpful screenshots demonstrating how to give said raise through the Upwork website.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Are my contractors unionizing?&lt;/em&gt; I wonder. I glance obliquely at my shrinking bank account statement, grit my teeth, and approve the raises. At this rate I'll hit zero in a matter of weeks.&lt;/p&gt;
&lt;p&gt;But my sales calls start paying off. Miraculously I find some doctors that are willing to talk to me. So I borrow my parents' car and drive out to the burbs to meet a doctor I'll call Susan.&lt;/p&gt;
&lt;p&gt;Susan has a small practice in downtown Redwood City, a Silicon Valley town that looks 3-D printed from the Google Image results for &lt;em&gt;&lt;a href=&quot;https://www.google.com/search?q=main+street&amp;amp;tbm=isch&quot;&gt;main street&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Susan is a bit chatty (she's a psychiatrist) but eventually I demo GlacierMD. I show her how you can filter studies based on the demographic data of the patient, how you can get treatment recommendations based on a preferred side effect profile, how you can generate a dose-response curve. She &lt;em&gt;oohs&lt;/em&gt; and &lt;em&gt;aahs&lt;/em&gt; at all the right points. By the end of the interview she's practically drooling.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--927e2748d8adb987b5d491746fcbb3691f186d1b/image-1601347948152.jpg&quot; alt=&quot;Comparing the efficacy of two antidepressants over time&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hook, line, and sinker&lt;/em&gt; I think to myself. I'm already contemplating what color &lt;a href=&quot;https://www.awaytravel.com/&quot;&gt;Away bags&lt;/a&gt; would look best in the back of my &lt;a href=&quot;https://www.tesla.com/cybertruck&quot;&gt;Cybertruck&lt;/a&gt; when Susan interrupts my train of thought.&lt;/p&gt;
&lt;p&gt;&quot;What a fun project!&quot; she says enthusiastically.&lt;/p&gt;
&lt;p&gt;Something in her tone makes me pause. &quot;Uh, yeah,&quot; I say. &quot;So what would you imagine a product like this—one that could change the very &lt;em&gt;practice&lt;/em&gt; of medicine—how much would you pay for such a service?&quot;&lt;/p&gt;
&lt;p&gt;&quot;Oh, uh—hmmmm,&quot; she said. &quot;I don't know if we can spare the budget here, to be honest. It's very fun...but I'm not sure if our practice can justify this cost.&quot;&lt;/p&gt;
&lt;p&gt;If you read enough sales books most of them tell you that when people say your product is &lt;em&gt;too expensive&lt;/em&gt; what they really mean is your product &lt;em&gt;isn't valuable enough&lt;/em&gt;. Susan acted like I was offering her Nirvana as a Service so the conversation has taken quite a wild turn.&lt;/p&gt;
&lt;p&gt;&quot;So you don't think this product is useful?&quot;&lt;/p&gt;
&lt;p&gt;&quot;Oh sure! I mean, I think in many cases I'll just prescribe what I normally do, since I'm comfortable with it. But you know it's possible that sometimes I'll prescribe something different, based on your metastudies.&quot;&lt;/p&gt;
&lt;p&gt;&quot;And that isn't worth something? Prescribing better treatments?&quot;&lt;/p&gt;
&lt;p&gt;&quot;Hmmmm,&quot; she said, picking at her fingernails. &quot;Not directly. Of course I always have the best interests of my patients in mind, but, you know, it's not like they'll pay more if I prescribe Lexapro instead of Zoloft. They won't come back more often or refer more friends. So I'd sorta just be, like, &lt;em&gt;donating&lt;/em&gt; this money if I paid you for this thing, right?&quot;&lt;/p&gt;
&lt;p&gt;I had literally nothing to say to that. It had been a bit of a working assumption of mine over the past few weeks that if you could improve the health of the patients then, you know, the doctors or the hospitals or whatever would pay for that. There was this giant thing called &lt;em&gt;healthcare&lt;/em&gt; right, and its main purpose is &lt;em&gt;improving health&lt;/em&gt;—trillions of dollars are spent trying to do this. So if I built a thing that improves health someone should pay me, right?&lt;/p&gt;
&lt;p&gt;I said goodbye to Susan and tried to cheer myself up. I had ten more meetings with doctors all over the Bay Area—surely not all of them were ruthless capitalists like Susan. Maybe they would see the the towering genius of GlacierMD and shell out some cash.&lt;/p&gt;
&lt;p&gt;But in fact everyone gave me some version of Susan's answer. &quot;We just can't justify the cost,&quot; a pediatrician told me. &quot;I'm not sure it's in the budget,&quot; said a primary care physician. &quot;It's awesome,&quot; said a hospitalist. &quot;You should try to sell this!&quot; &lt;em&gt;Ugh&lt;/em&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;span class=&quot;dropcap&quot;&gt;S&lt;/span&gt;o in July 2018, nine months and $40K after starting GlacierMD, I shut it down. I fired my contractors, archived the database, and shut down the servers. GlacierMD was dead.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Make something people want&lt;/em&gt;. It's Y-Combinator's motto and a maxim of aspiring internet entrepreneurs. The idea is that if you build something truly awesome, you'll figure out a way to make some money off of it.&lt;/p&gt;
&lt;p&gt;So I built something people wanted. Consumers wanted it, doctors wanted it, &lt;em&gt;I&lt;/em&gt; wanted it. Where did I go wrong?&lt;/p&gt;
&lt;p&gt;Occassionally I like to disconnect from the IV drip of internet pseudoknowledge and learn stuff from books. I know, it's weird—maybe even a bit hipster. But recently I read Wharton's introductory marketing textbook, &lt;em&gt;Strategic Marketing Management&lt;/em&gt;. The very first chapter has this to say:&lt;/p&gt;
&lt;blockquote readability=&quot;9.1034482758621&quot;&gt;
&lt;p&gt;&quot;To succeed, an offering must create value for all entities involved in the exchange—target customers, the company, and its collaborators.&quot;&lt;/p&gt;
&lt;p&gt;- &lt;a href=&quot;https://www.amazon.com/Strategic-Marketing-Management-Alexander-Chernev/dp/1936572192&quot;&gt;&lt;em&gt;Strategic Marketing Management&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All stakeholders. You can't just create value for the user: that's a charity. You also can't just create value for your company: that's a scam. Your goal is to set up some kind of positive-sum exchange, where everyone benefits, including you. A business plan, according to this textbook, starts with this simple question: how will you create value for yourself &lt;em&gt;and&lt;/em&gt; the company?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cringle.io/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--38e710f2dad2b34ec1a71f8206e1e3f25d44f38c/image-1601347980820.jpg&quot; alt=&quot;What they teach you in business school&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I winced audibly when I read this. How much time I could've saved! If I'd articulated at the beginning how I expected to extract value from GlacierMD, maybe I would've researched the economics of an ad-based model, or I would've validated that doctors were willing to pay, or hospitals, or insurance companies.&lt;/p&gt;
&lt;p&gt;A few months after shuttering GlacierMD and returning to corporate life my buddy pitched me a new startup idea.&lt;/p&gt;
&lt;p&gt;&quot;It's called Doppelganger,&quot; he said. &quot;It's super simple—you upload a selfie to the database, and then it uses AI or whatver to instantly find everyone in the database who—&quot;&lt;/p&gt;
&lt;p&gt;&quot;Looks like you,&quot; I finished for him.&lt;/p&gt;
&lt;p&gt;&quot;Exactly,&quot; he said, grinning ear to ear. &quot;How awesome would that be? You should build it!&quot;&lt;/p&gt;
&lt;p&gt;I mean, I dunno, it sounds like something fun to do at parties. In a narrow sense, it's something I want, but there's no way in hell I'm going to devote any time to this. Doppelganger has created value for the customer but not for the company.&lt;/p&gt;
&lt;p&gt;&quot;Call me when you have a business plan,&quot; I said, lacing up my Allbirds and riding my Lime scooter into the sunset.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 20:01:15 +0000</pubDate>
<dc:creator>swyx</dc:creator>
<og:title>I wasted $40k on a fantastic startup idea</og:title>
<og:description>When good ideas make bad business</og:description>
<og:image>https://tjcx.me/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBHUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3b585647f7bf3b12efce25b576b05d8a3d340c12/dollars.jpg</og:image>
<og:url>https://tjcx.me/p/i-wasted-40k-on-a-fantastic-startup-idea</og:url>
<og:type>blog</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tjcx.me/p/i-wasted-40k-on-a-fantastic-startup-idea</dc:identifier>
</item>
<item>
<title>Software effort estimation is mostly fake research</title>
<link>http://shape-of-code.coding-guidelines.com/2021/01/17/software-effort-estimation-is-mostly-fake-research/</link>
<guid isPermaLink="true" >http://shape-of-code.coding-guidelines.com/2021/01/17/software-effort-estimation-is-mostly-fake-research/</guid>
<description>&lt;p&gt;Effort estimation is an important component of any project, software or otherwise. While effort estimation is something that everybody in industry is involved with on a regular basis, it is a niche topic in software engineering research. The problem is &lt;a href=&quot;http://shape-of-code.coding-guidelines.com/2020/11/29/software-research-is-200-years-behind-biology-research/&quot;&gt;researcher attitude&lt;/a&gt; (e.g., they are unwilling to venture into the wilds of industry), which has stopped them acquiring the estimation data needed to build realistic models. A few intrepid people have risked an assault on their ego and talked to people in industry, the outcome has been, until very recently, a small collection of tiny estimation datasets.&lt;/p&gt;
&lt;p&gt;In a research context the term effort estimation is actually a hang over from the 1970s; &lt;em&gt;effort correction&lt;/em&gt; more accurately describes the behavior of most models since the 1990s. In the 1970s models took various quantities (e.g., estimated lines of code) and calculated an effort estimate. Later models have included an estimate as input to the model, producing a corrected estimate as output. For the sake of appearances I will use existing terminology.&lt;/p&gt;
&lt;p&gt;Which effort estimation datasets do researchers tend to use?&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;http://romisatriawahono.net/lecture/rm/survey/software%20engineering/Software%20Cost%20Effort%20Estimation/Wen%20-%20software%20development%20effort%20estimation%20models%20-%202012.pdf&quot;&gt;2012 review of datasets used for effort estimation using machine learning&lt;/a&gt; between 1991-2010, found that the top three were: Desharnias with 24 papers (29%), &lt;a href=&quot;http://shape-of-code.coding-guidelines.com/2016/05/19/cocomo-how-not-to-fit-a-model-to-data/&quot;&gt;COCOMO&lt;/a&gt; with 19 papers (23%) and ISBSG with 17. A &lt;a href=&quot;https://www.semanticscholar.org/paper/A-systematic-literature-review-of-software-effort-Ali-Gravino/d8633c5ee70181f14dd06ee0980137115a05a003&quot;&gt;2019 review&lt;/a&gt; of datasets used for effort estimation using machine learning between 1991 and 2017, found the top three to be NASA with 17 papers (23%), the COCOMO data and ISBSG were joint second with 16 papers (21%), and Desharnais was third with 14. The 2012 review included more sources in its search than the 2019 review, and subjectively your author has noticed a greater use of the NASA dataset over the last five years or so.&lt;/p&gt;
&lt;p&gt;How large are these datasets that have attracted so many research papers?&lt;/p&gt;
&lt;p&gt;The NASA dataset contains 93 rows (that is not a typo, there is no power-of-ten missing), COCOMO 63 rows, Desharnais 81 rows, and ISBSG is licensed by the International Software Benchmarking Standards Group (academics can apply for a limited time use for research purposes, i.e., not pay the $3,000 annual subscription). The China dataset contains 499 rows, and is sometimes used (there is no mention of a supercomputer being required for this amount of data ;-).&lt;/p&gt;
&lt;p&gt;Why are researchers involved in software effort estimation feeding tiny datasets from the &lt;ins datetime=&quot;2021-01-17T20:53:19+00:00&quot;&gt;1980s-&lt;/ins&gt;1990s into machine learning algorithms?&lt;/p&gt;
&lt;p&gt;Grant money. Research projects are more likely to be funded if they use a trendy technique, and for the last decade machine learning has been the trendiest technique in software engineering research. What data is available to learn from? Those estimation datasets that were flogged to death in the 1990s using non-machine learning techniques, e.g., regression.&lt;/p&gt;
&lt;p&gt;Use of machine learning also has the advantage of not needing to know anything about the details of estimating software effort. Everything can be reduced to a discussion of the machine learning algorithms, with performance judged by a chosen error metric. Nobody actually looks at the predicted estimates to discover that the models are essentially producing the same answer, e.g., one learner predicts 43 months, 2 weeks, 4 days, 6 hours, 47 minutes and 11 seconds, while a ‘better’ fitting one predicts 43 months, 2 weeks, 2 days, 6 hours, 27 minutes and 51 seconds.&lt;/p&gt;
&lt;p&gt;How many ways are there to do machine learning on datasets containing less than 100 rows?&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;http://menzies.us/pdf/11comba.pdf&quot;&gt;paper from 2012&lt;/a&gt; evaluated the possibilities using 9-learners times 10 data-prerocessing options (e.g., log transform or discretization) times 7-error estimation metrics giving 630 possible final models; they picked the top 10 performers.&lt;/p&gt;
&lt;p&gt;This 2012 study has not stopped researchers continuing to twiddle away on the option’s nobs available to them; anything to keep the paper mills running.&lt;/p&gt;
&lt;p&gt;To quote the authors of one review paper: &lt;a href=&quot;https://bura.brunel.ac.uk/bitstream/2438/1076/3/04027147.pdf&quot;&gt;“Unfortunately, we found that very few papers (including most of our own) paid any attention at all to properties of the data set.”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Agile techniques are widely used these days, and datasets from the 1990s are not applicable. What datasets do researchers use to build Agile effort estimation models?&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://ieeexplore.ieee.org/ielx7/6287639/6514899/09186107.pdf&quot;&gt;2020 review of Agile development effort estimation&lt;/a&gt; found 73 papers. The most popular data set, &lt;a href=&quot;https://www.researchgate.net/publication/268186219_An_Effort_Estimation_Model_for_Agile_Software_Development&quot;&gt;containing 21 rows&lt;/a&gt;, was used by nine papers. Three papers used simulated data! At least some authors were going out and finding data, even if it contains fewer rows than the NASA dataset.&lt;/p&gt;
&lt;p&gt;As &lt;a href=&quot;http://shape-of-code.coding-guidelines.com/2018/09/11/business-school-research-in-software-engineering-is-some-of-the-best/&quot;&gt;researchers in business schools&lt;/a&gt; have shown, large datasets can be obtained from industry; ISBSG actively solicits data from industry and now has data on 9,500+ projects (as far as I can tell a small amount for each project, but that is still a lot of projects).&lt;/p&gt;
&lt;p&gt;Are there any estimates on Github? Some Open source projects use &lt;a href=&quot;https://en.wikipedia.org/wiki/Jira_(software)&quot;&gt;JIRA&lt;/a&gt;, which includes support for making estimates. Some &lt;a href=&quot;https://ezequielscott.github.io/files/ICSSP2018-47-author.pdf&quot;&gt;story point estimates can be found on Github&lt;/a&gt;, but the actuals are missing.&lt;/p&gt;
&lt;p&gt;A handful of researchers have obtained and released estimation datasets containing thousands of rows, e.g., the &lt;a href=&quot;https://arxiv.org/abs/1901.01621&quot;&gt;SiP dataset&lt;/a&gt; contains 10,100 rows and the &lt;a href=&quot;https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=528467&quot;&gt;CESAW dataset&lt;/a&gt; contains over 40,000 rows. These datasets are generally ignored, perhaps because when presented with lots of real data researchers have no idea what to do with it.&lt;/p&gt;

</description>
<pubDate>Mon, 18 Jan 2021 19:02:53 +0000</pubDate>
<dc:creator>walterclifford</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://shape-of-code.coding-guidelines.com/2021/01/17/software-effort-estimation-is-mostly-fake-research/</dc:identifier>
</item>
<item>
<title>Show HN: Compare prices that US hospitals charge patients, insurance companies</title>
<link>https://turquoise.health/</link>
<guid isPermaLink="true" >https://turquoise.health/</guid>
<description>&lt;p class=&quot;mb-0&quot;&gt;Starting this year, all hospitals are required to list their prices for&lt;br/&gt;elective services. Whether you have insurance or plan to pay cash -&lt;br/&gt;find and compare prices below.&lt;/p&gt;
&lt;div class=&quot;banner-form&quot;&gt;
&lt;form action=&quot;/service_offerings&quot;&gt;
&lt;div class=&quot;form-group&quot;&gt;&lt;img src=&quot;https://turquoise.health/static/images/search.a53ce3c84b93.svg&quot; alt=&quot;search&quot;/&gt;&lt;input name=&quot;q&quot; class=&quot;form-control&quot; type=&quot;text&quot; placeholder=&quot;Enter service name or code…&quot; value=&quot;&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;form-group&quot;&gt;&lt;img src=&quot;https://turquoise.health/static/images/location.50b247cc24e3.svg&quot; alt=&quot;search&quot;/&gt;&lt;input class=&quot;form-control&quot; name=&quot;location&quot; type=&quot;text&quot; placeholder=&quot;Enter zip code…&quot; value=&quot;85281&quot;/&gt;&lt;/div&gt;
&lt;p&gt;&lt;button type=&quot;submit&quot; class=&quot;banner-submit-btn&quot;&gt;Search&lt;/button&gt;&lt;/p&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;p class=&quot;mb-0 beta-message&quot;&gt;&lt;strong&gt;Turquoise Health is in Beta.&lt;/strong&gt;&lt;br/&gt;We are adding prices as quickly as hospitals are&lt;br/&gt;publishing them and we'll have more exciting news soon.&lt;br/&gt;&lt;a href=&quot;https://stayintouch.turquoise.health/turquoise-health&quot;&gt;Sign up to hear first about everything we're launching!&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;beta-message-bottom-url&quot;&gt;&lt;a href=&quot;https://turquoise.health/claim_provider&quot;&gt;Are you a transparent provider?&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 14:04:01 +0000</pubDate>
<dc:creator>ageitgey</dc:creator>
<og:title>Turquoise Health</og:title>
<og:description>A healthcare marketplace built on transparency.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://turquoise.health/</dc:identifier>
</item>
<item>
<title>That XOR Trick (2020)</title>
<link>https://florian.github.io/xor-trick</link>
<guid isPermaLink="true" >https://florian.github.io/xor-trick</guid>
<description>&lt;p&gt;There are a whole bunch of popular interview questions that can be solved in one of two ways: Either using common data structures and algorithms in a sensible manner, or by using some properties of XOR in a seemingly hard to understand way.&lt;/p&gt;&lt;p&gt;While it seems unreasonable to expect the XOR solutions in interviews, it is quite fun to figure out how they work. As it turns out, they are all based on the same fundamental trick, which we will derive in a bottom-up way in this post. Afterwards we will look at a bunch of applications of &lt;em&gt;that XOR trick&lt;/em&gt; ™, such as solving this popular interview question:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;You are given an array of n - 1 integers which are in the range between 1 and n. All numbers appear exactly once, except one number, which is missing. Find this missing number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, there are a number of straightforward ways to solve this problem, but there is also a perhaps surprising one using XOR.&lt;/p&gt;
&lt;h3 id=&quot;xor&quot;&gt;XOR&lt;/h3&gt;
&lt;p&gt;XOR is a logical operator that works on bits. Let’s denote it by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;. If the two bits it takes as input are the same, the result is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;, otherwise it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;. This implements an &lt;em&gt;exclusive or&lt;/em&gt; operation, i.e. exactly one argument has to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; for the final result to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;. We can show this using a truth table:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Most programming languages implement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; as a bitwise operator, meaning XOR is individually applied to each bit in a string of bits (e.g. a byte).&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;0011 ^ 0101 = 0110
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;since&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;0 ^ 0 = 0
0 ^ 1 = 1
1 ^ 0 = 1
1 ^ 1 = 0
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Because of this, we can apply XOR to anything, not just booleans.&lt;/p&gt;
&lt;h3 id=&quot;deducing-some-useful-properties&quot;&gt;Deducing Some Useful Properties&lt;/h3&gt;
&lt;p&gt;We can derive a bunch of properties from the previous definition. Let’s go through them one by one, and then compose them to solve the interview questions previously mentioned.&lt;/p&gt;
&lt;h4 id=&quot;xor-and-0-x--0--x&quot;&gt;XOR and 0: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ 0 = x&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If one of the two arguments to XOR is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;, then the remaining argument is the result. This directly follows from the truth table by checking the rows where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y = 0&lt;/code&gt;, namely the first and third row.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4 id=&quot;xor-on-the-same-argument-x--x--0&quot;&gt;XOR on the same argument: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ x = 0&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;If the two arguments are the same, the result is always &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;. Again, we can convince ourselves that this is true by inspecting the truth table. This time we have to check the rows where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x = y&lt;/code&gt;, i.e. the first and last row.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Intuitively, this means that if we apply XOR to the same arguments, they cancel each other out.&lt;/p&gt;
&lt;h4 id=&quot;commutativity-x--y--y--x&quot;&gt;Commutativity: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y = y ^ x&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;XOR is commutative, meaning we can change the order in which we apply XOR. To prove this, we can check the truth table for both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y ^ x&lt;/code&gt;:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y ^ x&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;As we can see, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y ^ x&lt;/code&gt; always end up with the same value.&lt;/p&gt;
&lt;h4 id=&quot;sequences-of-xor-operations&quot;&gt;Sequences of XOR operations&lt;/h4&gt;
&lt;p&gt;By combining all of this, we can deduce the central insight behind everything that is about to follow:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;strong&gt;The XOR trick&lt;/strong&gt;: If we have a sequence of XOR operations &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a ^ b ^ c ^ ...&lt;/code&gt;, then we can remove all pairs of duplicated values without affecting the result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Commutativity allows us to re-order the applications of XOR so that the duplicated elements are next to each other. Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ x = 0&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a ^ 0 = a&lt;/code&gt;, each pair of duplicated values has no effect on the outcome.&lt;/p&gt;
&lt;p&gt;Let’s go through an example of this:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;  a ^ b ^ c ^ a ^ b     # Commutativity
= a ^ a ^ b ^ b ^ c     # Using x ^ x = 0
= 0 ^ 0 ^ c             # Using x ^ 0 = x (and commutativity)
= c
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; is a bitwise operator, this will work regardless of what kind of values &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c&lt;/code&gt; are. This idea is really at the heart of how XOR can be used seemingly magically in many situations.&lt;/p&gt;
&lt;h3 id=&quot;application-1-in-place-swapping&quot;&gt;Application 1: In-Place Swapping&lt;/h3&gt;
&lt;p&gt;Before we solve the problem of finding the missing number, let’s start with this simpler &lt;a href=&quot;https://www.geeksforgeeks.org/swap-two-numbers-without-using-temporary-variable/&quot;&gt;problem&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Swap two values x and y in-place, i.e. without using any helper variables.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It turns out that one can easily solve this problem using the following three XOR instructions:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;x ^= y
y ^= x
x ^= y
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That seems a bit mysterious. Why do we end up swapping &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; if we do this?&lt;/p&gt;
&lt;p&gt;To see how it works, let’s go through this step by step. The comment after each instruction shows the current values of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(x, y)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;34&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;x ^= y # =&amp;gt;                      (x ^ y, y)
y ^= x # =&amp;gt; (x ^ y, y ^ x ^ y) = (x ^ y, x)
x ^= y # =&amp;gt; (x ^ y ^ x, x)     = (y, x)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We can see that this is really just using the properties derived earlier.&lt;/p&gt;
&lt;p&gt;The fundamental insight here is that having &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt; in one register and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; in the other, allows us to perfectly reconstruct &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt;. Once &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt; is stored (instruction 1), we can just put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; into the other register (instruction 2), and then use it to change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x ^ y&lt;/code&gt; to just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;y&lt;/code&gt; (instruction 3).&lt;/p&gt;
&lt;h3 id=&quot;application-2-finding-the-missing-number&quot;&gt;Application 2: Finding the Missing Number&lt;/h3&gt;
&lt;p&gt;Let’s finally solve the problem posed in the beginning of this post:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;You are given an array &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; of n - 1 integers which are in the range between 1 and n. All numbers appear exactly once, except one number, which is missing. Find this missing number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course, there are many straightforward ways of solving this, but we did set out to do it using XOR.&lt;/p&gt;
&lt;p&gt;From the XOR trick we know that having a sequence of XOR statements means we can remove all duplicated arguments. If we just XOR all values in the given list, however, we cannot apply this trick because there are no duplicates:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;A[0] ^ A[1] ^ ... ^ A[n - 2]
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A[n - 2]&lt;/code&gt; is the last index of a list of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n - 1&lt;/code&gt; elements.&lt;/p&gt;
&lt;p&gt;What we can do additionally is to also XOR all values between 1 and n:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;1 ^ 2 ^ ... ^ n ^ A[0] ^ A[1] ^ ... ^ A[n - 2]
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This will give us a sequence of XOR statements where elements appear as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All values in the given list now appear twice:
&lt;ul&gt;&lt;li&gt;once from taking all the values between 1 and n&lt;/li&gt;
&lt;li&gt;once because they were in the original list&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The missing value appears exactly once:
&lt;ul&gt;&lt;li&gt;once from taking all the values between 1 and n&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If we XOR all of this, we essentially remove all values that appear twice, thanks to the XOR trick. This means that we are left with the missing value, which happens to be exactly what we were looking for in the first place.&lt;/p&gt;
&lt;p&gt;Coded up, it looks something like this:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# XOR of all the values from 1 to n
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# XOR of all values in the given array
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Just looking at the code, this seems to be a difficult to understand algorithm. When knowing how the XOR trick works, however, it becomes fairly trivial. I think that also shows why it is unreasonable to expect this solution in an interview: It requires knowledge of a very specific trick but not much algorithmic thinking beyond that.&lt;/p&gt;
&lt;p&gt;Before we move on to the next application, let me follow up with two remarks.&lt;/p&gt;
&lt;h4 id=&quot;generalizing-this-beyond-integers&quot;&gt;Generalizing this beyond integers&lt;/h4&gt;
&lt;p&gt;While we worked on integers from 1 to n so far, this is not required. In fact, the previous algorithm works in any situation where there is (1) some set of potential elements and (2) a set of elements actually appearing. The sets may only differ in the one missing element. This worked out nicely for integers because the set of potential elements just corresponds to the elements from 1 to n.&lt;/p&gt;
&lt;p&gt;One could imagine applications where the elements are not integers from 1 to n:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The set of potential elements are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt; objects and we ought to find the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Person&lt;/code&gt; missing from a list of values&lt;/li&gt;
&lt;li&gt;The set of potential elements are all nodes in a graph and we are looking for a missing node&lt;/li&gt;
&lt;li&gt;The set of potential elements are integers in general (not necessarily from 1 to n) and we want to find a missing integer&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;arithmetic-operators-instead-of-xor&quot;&gt;Arithmetic operators instead of XOR&lt;/h4&gt;
&lt;p&gt;If the algorithm still seems a bit magical – which I hope it does not – it might help to think about how one could achieve the same result using arithmetic operators. This is actually fairly straightforward:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Add all the values from 1 to n
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Subtract all values in the given array
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We add all potential integers and then subtract the ones actually appearing. The solution is not as nice because one would need to handle overflows and because it requires the type of the elements to support &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; with certain properties. It, however, has the same logic of elements canceling each other out because they appear a certain number of times (once positive, once negative).&lt;/p&gt;
&lt;h3 id=&quot;application-3-finding-the-duplicate-number&quot;&gt;Application 3: Finding the Duplicate Number&lt;/h3&gt;
&lt;p&gt;Here’s where it gets fun: We can apply the &lt;em&gt;exact&lt;/em&gt; same solution to a similar interview question:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;You are given an array &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; of &lt;strong&gt;n + 1&lt;/strong&gt; integers which are in the range between 1 and n. All numbers appear exactly once, except one number, which is &lt;strong&gt;duplicated&lt;/strong&gt;. Find this duplicated number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s think about what happens if we just apply the exact same algorithm as in the previous solution. We would get a sequence of XOR statements where elements appear as follows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The duplicated value appears three times:
&lt;ul&gt;&lt;li&gt;once from taking all the values between 1 and n&lt;/li&gt;
&lt;li&gt;twice because it was duplicated in the original list&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;All other values in the given list appear twice:
&lt;ul&gt;&lt;li&gt;once from taking all the values between 1 and n&lt;/li&gt;
&lt;li&gt;once because they were unique in the original list&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As previously, all the duplicated elements cancel each other out. This means we are left with exactly what we are looking for: the element that was duplicated in the original array. This element appearing three times, combined with XOR, reduces to that very element:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;  x ^ x ^ x
= x ^ 0
= x
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All other elements cancel each other out because they appear exactly twice.&lt;/p&gt;
&lt;h3 id=&quot;application-4-finding-two-missingduplicate-numbers&quot;&gt;Application 4: Finding Two Missing/Duplicate Numbers&lt;/h3&gt;
&lt;p&gt;It turns out we can take this even further. Consider the following, slightly more difficult, problem:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;You are given an array &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; of &lt;strong&gt;n - 2&lt;/strong&gt; integers which are in the range between 1 and n. All numbers appear exactly once, except &lt;strong&gt;two&lt;/strong&gt; numbers, which are missing. Find these two missing numbers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As before, the problem is completely equivalent when looking for two &lt;em&gt;duplicated&lt;/em&gt; numbers, instead of two &lt;em&gt;missing&lt;/em&gt; numbers.&lt;/p&gt;
&lt;p&gt;And I am sure you guessed it, but we will stick with what worked before and start exactly the same way: Let’s consider what happens if we use the previous XOR algorithm. If we do that, we again end up with a sequence of XOR statements where all elements cancel each other out, except the two we are looking for.&lt;/p&gt;
&lt;p&gt;We will denote these elements by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;, mostly because we have not used those letters before. After applying the previous algorithm, we are thus left with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u ^ v&lt;/code&gt;. What can we do with that? We somehow need to extract &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; from this value, but it is not immediately clear to do that.&lt;/p&gt;
&lt;h4 id=&quot;partitioning-based-on-inspecting-u--v&quot;&gt;Partitioning based on inspecting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u ^ v&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Luckily, we can figure out what to do by using what we already stated earlier. Let’s think about this:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;If the two bits XOR takes as input are the same, the result is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;, otherwise it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If we analyze the individual bits in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u ^ v&lt;/code&gt;, then every &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; means that the bit had the same value in both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt;. Every &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; means that the bits differed.&lt;/p&gt;
&lt;p&gt;Using this, we find the first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u ^ v&lt;/code&gt;, i.e. the first position &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; have to differ. Then we partition &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; as well as the numbers from 1 to n according to that bit. We end up with two partitions, each of which contains two sets:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Partition &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;
&lt;ol&gt;&lt;li&gt;The set of all values from 1 to n where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;-th bit is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The set of all values from A where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;-th bit is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Partition &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;
&lt;ol&gt;&lt;li&gt;The set of all values from 1 to n where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;-th bit is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The set of all values from A where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;-th bit is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; differ in position &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt;, we know that they have to be in different partitions.&lt;/p&gt;
&lt;h4 id=&quot;reducing-the-problem&quot;&gt;Reducing the problem&lt;/h4&gt;
&lt;p&gt;Next, we can use another insight described earlier:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;While we worked on integers from 1 to n so far, this is not required. In fact, the previous algorithm works in any situation where there is (1) some set of potential elements and (2) a set of elements actually appearing. The sets may only differ in the one missing (or duplicated) element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two sets correspond exactly to the sets we have in each partition. We can thus search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt; by applying this idea to one of the partitions and finding the missing element, and then find &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; by applying it to the other partition.&lt;/p&gt;
&lt;p&gt;This is actually a pretty nice way of solving it: We effectively reduce this new problem to the more general version of the problem we solved earlier.&lt;/p&gt;
&lt;h3 id=&quot;reaching-the-limit&quot;&gt;Reaching the Limit&lt;/h3&gt;
&lt;p&gt;One might try to take this further and aim to solve the problem for more than two missing values. I did not give this an abundance of thought, but I think this is where we stop succeeding with XOR. If more than two elements are missing (or duplicated), then analyzing the individual bits fails because there are several combinations possible for both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; as results.&lt;/p&gt;
&lt;p&gt;The problem then seems to require &lt;a href=&quot;https://www.youtube.com/watch?v=pKO9UjSeLew&quot;&gt;more complex&lt;/a&gt; solutions, which are not based on XOR anymore.&lt;/p&gt;
&lt;h3 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;As mentioned before, interview questions based on this trick do not seem like a great idea. They require knowing a slightly obscure trick, but once that trick is known, there is not much left to solve (except maybe for application 4). There is also barely a way to show algorithmic thinking (other than reduction) and no good way to make use of data structures.&lt;/p&gt;
&lt;p&gt;However, I found it pretty cool to find out how this trick actually work. XOR seems to have just the right properties for all of this to work out. It is also kind of beautiful that something as fundamental as XOR can be used to build up all the things described here.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Thanks to Eugen for the discussions that lead to this post. It was fun to figure out together how all of this works.&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 13:49:23 +0000</pubDate>
<dc:creator>wagslane</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://florian.github.io/xor-trick/</dc:identifier>
</item>
<item>
<title>A bot that converts Reddit threads into ace attorney scenes</title>
<link>https://github.com/micah5/ace-attorney-reddit-bot</link>
<guid isPermaLink="true" >https://github.com/micah5/ace-attorney-reddit-bot</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-gBr/mkLRcMBDvy1dbDtXf5dgqQaRjIyytK8WYJH+a3w4ITzGUOctCq+cqA9ug1XSOJdAeeWI//Gq+KAIWXklPg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-801aff9a42d170c043bf2d5d6c3b577f.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-Zrh2qZLKjc7XNDOthVIVvLOmnKsZHV/n+pygA708rHTjSanbinZY0pHm9gWhQ57pcKfzI+KH0wVxZHAvZY8kcw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-66b876a992ca8dced73433ad855215bc.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-QuSh6xffe92oeSRoMO3BzOUS1VxBwb8FfW0h0Ik6EirwMWbBDJ4/a7dt+NngTo0EVGsJubG2K0tlxUmyZ1RCRA==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/behaviors-42e4a1eb17df7bdda879246830edc1cc.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-o+Kcb710+p99djOS0ZZDX2YVpSrK6DP3lhe6OVWQSLx651ZAIJYfl71l2WetYoCzCCR1Sa9NjdzZB7tzzkbTNQ==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-a3e29c6fbd74fa9f7d763392d196435f.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;GitHub - micah5/ace-attorney-reddit-bot: Reddit bot that turns comment chains into ace attorney scenes.&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;Reddit bot that turns comment chains into ace attorney scenes. - micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=1477376905&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://avatars2.githubusercontent.com/u/40206415?s=400&amp;amp;v=4&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Reddit bot that turns comment chains into ace attorney scenes. - micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars2.githubusercontent.com/u/40206415?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Reddit bot that turns comment chains into ace attorney scenes. - micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;E55E:134C:43B53F:62C86A:60062F5F&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;7639317d37d955836ac56b4611a26f7a2a900e16f3e0f8ed73403a4c4aebff68&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiRTU1RToxMzRDOjQzQjUzRjo2MkM4NkE6NjAwNjJGNUYiLCJ2aXNpdG9yX2lkIjoiMTAxNjI4NjM5NDUzMDAxNzExOSIsInJlZ2lvbl9lZGdlIjoiaWFkIiwicmVnaW9uX3JlbmRlciI6ImlhZCJ9&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;9e266ca08e42caf29be61aa1b247f75530c6409bd41001e99479a4369f8e5951&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;repository:330430799&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_source&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;optimizely-datafile&quot; content=&quot;{&amp;quot;version&amp;quot;: &amp;quot;4&amp;quot;, &amp;quot;rollouts&amp;quot;: [], &amp;quot;typedAudiences&amp;quot;: [], &amp;quot;anonymizeIP&amp;quot;: true, &amp;quot;projectId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;variables&amp;quot;: [], &amp;quot;featureFlags&amp;quot;: [], &amp;quot;experiments&amp;quot;: [{&amp;quot;status&amp;quot;: &amp;quot;Running&amp;quot;, &amp;quot;audienceIds&amp;quot;: [], &amp;quot;variations&amp;quot;: [{&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19460063326&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;header_context&amp;quot;}, {&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19433924756&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;control&amp;quot;}], &amp;quot;id&amp;quot;: &amp;quot;19408234268&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;account_settings_context&amp;quot;, &amp;quot;layerId&amp;quot;: &amp;quot;19516330675&amp;quot;, &amp;quot;trafficAllocation&amp;quot;: [{&amp;quot;entityId&amp;quot;: &amp;quot;19433924756&amp;quot;, &amp;quot;endOfRange&amp;quot;: 1500}, {&amp;quot;entityId&amp;quot;: &amp;quot;19433924756&amp;quot;, &amp;quot;endOfRange&amp;quot;: 2500}, {&amp;quot;entityId&amp;quot;: &amp;quot;19460063326&amp;quot;, &amp;quot;endOfRange&amp;quot;: 3500}, {&amp;quot;entityId&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;endOfRange&amp;quot;: 5000}, {&amp;quot;entityId&amp;quot;: &amp;quot;19460063326&amp;quot;, &amp;quot;endOfRange&amp;quot;: 6500}, {&amp;quot;entityId&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;endOfRange&amp;quot;: 10000}], &amp;quot;forcedVariations&amp;quot;: {&amp;quot;2028a3925ba8b1b72aa300cb93a28d84&amp;quot;: &amp;quot;header_context&amp;quot;, &amp;quot;1238720267648ea2c88a74b410aa3c5c&amp;quot;: &amp;quot;header_context&amp;quot;, &amp;quot;411debc027894d9d9b48b9ddc1405acb&amp;quot;: &amp;quot;header_context&amp;quot;}}], &amp;quot;audiences&amp;quot;: [{&amp;quot;conditions&amp;quot;: &amp;quot;[\&amp;quot;or\&amp;quot;, {\&amp;quot;match\&amp;quot;: \&amp;quot;exact\&amp;quot;, \&amp;quot;name\&amp;quot;: \&amp;quot;$opt_dummy_attribute\&amp;quot;, \&amp;quot;type\&amp;quot;: \&amp;quot;custom_attribute\&amp;quot;, \&amp;quot;value\&amp;quot;: \&amp;quot;$opt_dummy_value\&amp;quot;}]&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;$opt_dummy_audience&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Optimizely-Generated Audience for Backwards Compatibility&amp;quot;}], &amp;quot;groups&amp;quot;: [], &amp;quot;attributes&amp;quot;: [{&amp;quot;id&amp;quot;: &amp;quot;16822470375&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;user_id&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;17143601254&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;spammy&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18175660309&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;organization_plan&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18813001570&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;is_logged_in&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;19073851829&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;geo&amp;quot;}], &amp;quot;botFiltering&amp;quot;: false, &amp;quot;accountId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;events&amp;quot;: [{&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;17911811441&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;hydro_click.dashboard.teacher_toolbox_cta&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18124116703&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organizations.complete_sign_up&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18145892387&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;no_metric.tracked_outside_of_optimizely&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18178755568&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.add_repo&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18180553241&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.repository_imports.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18186103728&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.help.learn_more_about_repository_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18188530140&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;test_event.do_not_use_in_production&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18191963644&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.transfer_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18195612788&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.import_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18210945499&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.invite_members&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18211063248&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.create_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18215721889&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.update_profile&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18224360785&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.dismiss&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18234832286&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_activation.complete&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18252392383&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_repository.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18257551537&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_member_invitation.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18259522260&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_profile.update&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18564603625&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18568612016&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_sign_in_click&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18572592540&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_name&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18574203855&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18582053415&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18589463420&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591323364&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_first_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591652321&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_grant_access&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18607131425&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18831680583&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;upgrade_account_plan&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19064064515&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19075373687&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.view_account_billing_page&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19077355841&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.dismiss_signup_prompt&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19079713938&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.contact_sales&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19120963070&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.compare_account_plans&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19151690317&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.upgrade_account_cta&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [&amp;quot;19408234268&amp;quot;], &amp;quot;id&amp;quot;: &amp;quot;19424193129&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.open_account_switcher&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [&amp;quot;19408234268&amp;quot;], &amp;quot;id&amp;quot;: &amp;quot;19520330825&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.visit_account_profile&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [&amp;quot;19408234268&amp;quot;], &amp;quot;id&amp;quot;: &amp;quot;19540970635&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.switch_account_context&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19730198868&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.homepage_signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19820830627&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.homepage_signup&amp;quot;}], &amp;quot;revision&amp;quot;: &amp;quot;401&amp;quot;}&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_PENDING_INSTALLATIONS&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;4c7bf7f656a0ab822169f5bfb7016fd433bb0b2c57ee33fb5881fa86827c5621&quot;/&gt;&lt;link href=&quot;https://github.com/micah5/ace-attorney-reddit-bot/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to ace-attorney-reddit-bot:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/micah5/ace-attorney-reddit-bot git https://github.com/micah5/ace-attorney-reddit-bot.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;40206415&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;micah5&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;330430799&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;330430799&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;micah5/ace-attorney-reddit-bot&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://github.com/micah5/ace-attorney-reddit-bot&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;meta name=&quot;browser-optimizely-client-errors-url&quot; content=&quot;https://api.github.com/_private/browser/optimizely_client/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;alternate icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/png&quot; href=&quot;https://github.githubassets.com/favicons/favicon.png&quot;/&gt;&lt;link rel=&quot;icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/svg+xml&quot; href=&quot;https://github.githubassets.com/favicons/favicon.svg&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;33.902362204724&quot;&gt;


&lt;div data-pjax-replace=&quot;&quot; id=&quot;js-flash-container&quot;&gt;
&lt;div class=&quot;flash flash-full {{ className }}&quot;&gt;
&lt;div class=&quot; px-2&quot;&gt;
&lt;p&gt;{{ message }}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;application-main&quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
&lt;div class=&quot;bg-gray-light pt-3 hide-full-screen mb-5&quot; readability=&quot;1.9393939393939&quot;&gt;

&lt;div class=&quot;d-block d-md-none mb-2 px-3 px-md-4 px-lg-5&quot; readability=&quot;4.4245283018868&quot;&gt;
&lt;p class=&quot;f4 mb-3&quot;&gt;Reddit bot that turns comment chains into ace attorney scenes.&lt;/p&gt;



&lt;/div&gt;
&lt;nav aria-label=&quot;Repository&quot; data-pjax=&quot;#js-repo-pjax-container&quot; class=&quot;js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5 bg-gray-light&quot;&gt;
&lt;/nav&gt;&lt;/div&gt;
&lt;div class=&quot;container-xl clearfix new-discussion-timeline px-3 px-md-4 px-lg-5&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;

&lt;div class=&quot;gutter-condensed gutter-lg flex-column flex-md-row d-flex&quot;&gt;
&lt;div class=&quot;flex-shrink-0 col-12 col-md-9 mb-4 mb-md-0&quot; readability=&quot;4.1124780316344&quot;&gt;

&lt;div class=&quot;Box mb-3&quot; readability=&quot;3.841155234657&quot;&gt;

&lt;h2 id=&quot;files&quot; class=&quot;sr-only&quot;&gt;Files&lt;/h2&gt;
&lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;https://github.com/micah5/ace-attorney-reddit-bot/tree/d72a89bf8aaf2cff1586603e457b42f801cc7043&quot;&gt;Permalink&lt;/a&gt;
&lt;p&gt;Failed to load latest commit information.&lt;/p&gt;
&lt;div class=&quot;js-details-container Details&quot;&gt;
&lt;div role=&quot;grid&quot; aria-labelledby=&quot;files&quot; class=&quot;Details-content--hidden-not-important js-navigation-container js-active-navigation-container d-md-block&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;sr-only&quot; role=&quot;row&quot;&gt;
&lt;p&gt;Type&lt;/p&gt;
&lt;p&gt;Name&lt;/p&gt;
&lt;p&gt;Latest commit message&lt;/p&gt;
&lt;p&gt;Commit time&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Jan 18, 2021&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Jan 18, 2021&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Jan 17, 2021&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Jan 18, 2021&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;readme&quot; class=&quot;Box md js-code-block-container Box--responsive&quot;&gt;


&lt;div class=&quot;Box-body px-5 pb-5&quot; readability=&quot;29.619691119691&quot;&gt;
&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot; readability=&quot;28.293436293436&quot;&gt;&lt;p&gt;Reddit bot that turns comment chains into ace attorney scenes.&lt;/p&gt;
&lt;p&gt;You'll need to sign up for streamable and reddit and set the appropriate env vars to use the bot.&lt;/p&gt;
&lt;p&gt;Also, you'll need to download the sprites from &lt;a href=&quot;http://www.court-records.net/sprites1.htm&quot; rel=&quot;nofollow&quot;&gt;court-records&lt;/a&gt; and the music from &lt;a href=&quot;https://downloads.khinsider.com/game-soundtracks/album/phoenix-wright-ace-attorney-ost&quot; rel=&quot;nofollow&quot;&gt;khinsider&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rvFk8hapDZY&quot; rel=&quot;nofollow&quot;&gt;See demo&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;flex-shrink-0 col-12 col-md-3&quot;&gt;
&lt;div class=&quot;BorderGrid BorderGrid--spacious&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;BorderGrid-row hide-sm hide-md&quot; readability=&quot;4.9345794392523&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot; readability=&quot;5.7570093457944&quot;&gt;
&lt;h2 class=&quot;mb-3 h4&quot;&gt;About&lt;/h2&gt;
&lt;p class=&quot;f4 mt-3&quot;&gt;Reddit bot that turns comment chains into ace attorney scenes.&lt;/p&gt;
&lt;h3 class=&quot;sr-only&quot;&gt;Resources&lt;/h3&gt;

&lt;h3 class=&quot;sr-only&quot;&gt;License&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;BorderGrid-row&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot;&gt;

&lt;p&gt;No releases published&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;BorderGrid-row&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot;&gt;

&lt;p&gt;No packages published&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/micah5/ace-attorney-reddit-bot&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/micah5/ace-attorney-reddit-bot&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 18 Jan 2021 13:42:54 +0000</pubDate>
<dc:creator>rvieira</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/40206415?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>micah5/ace-attorney-reddit-bot</og:title>
<og:url>https://github.com/micah5/ace-attorney-reddit-bot</og:url>
<og:description>Reddit bot that turns comment chains into ace attorney scenes. - micah5/ace-attorney-reddit-bot</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/micah5/ace-attorney-reddit-bot</dc:identifier>
</item>
<item>
<title>We are sending more foster kids to prison than to college</title>
<link>https://www.kansascity.com/news/special-reports/article238206754.html</link>
<guid isPermaLink="true" >https://www.kansascity.com/news/special-reports/article238206754.html</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.kansascity.com/news/special-reports/article238206754.html&quot;&gt;https://www.kansascity.com/news/special-reports/article238206754.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25821637&quot;&gt;https://news.ycombinator.com/item?id=25821637&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 427&lt;/p&gt;
&lt;p&gt;# Comments: 301&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 13:39:10 +0000</pubDate>
<dc:creator>aminozuur</dc:creator>
<dc:identifier>https://www.kansascity.com/news/special-reports/article238206754.html</dc:identifier>
</item>
<item>
<title>Patient Regains Sight Following Artificial Cornea Implantation</title>
<link>https://www.prnewswire.com/il/news-releases/corneat-visions-first-patient-regains-sight-following-artificial-cornea-implantation-at-rabin-medical-center-ending-a-decade-of-blindness-301205312.html</link>
<guid isPermaLink="true" >https://www.prnewswire.com/il/news-releases/corneat-visions-first-patient-regains-sight-following-artificial-cornea-implantation-at-rabin-medical-center-ending-a-decade-of-blindness-301205312.html</guid>
<description>&lt;p&gt;RA'ANANA, &lt;span class=&quot;xn-location&quot;&gt;Israel&lt;/span&gt;, &lt;span class=&quot;xn-chron&quot;&gt;Jan. 11, 2021&lt;/span&gt; /PRNewswire/ -- The CorNeat KPro, the first artificial cornea which completely integrates with the eye wall with no reliance on donor tissue, was successfully implanted in a human. The surgery was performed on a bilaterally blind, 78-year-old male at Rabin Medical Center, &lt;span class=&quot;xn-location&quot;&gt;Israel&lt;/span&gt;, by Professor &lt;span class=&quot;xn-person&quot;&gt;Irit Bahar&lt;/span&gt;, Director of the Ophthalmology Department. Upon removal of bandages, the CorNeat KPro immediately enabled the patient to read text and recognize family members. This exciting moment can be viewed in the following &lt;a href=&quot;https://www.corneat.com/corneat-vision-primetime-news&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Professor &lt;span class=&quot;xn-person&quot;&gt;Irit Bahar&lt;/span&gt; commented:&lt;/p&gt;
&lt;div class=&quot;continue-reading text-center mt-xl visible-xs-block&quot;&gt;&lt;span&gt;&lt;a class=&quot;smooth-scroll&quot; href=&quot;https://www.prnewswire.com/il/news-releases/corneat-visions-first-patient-regains-sight-following-artificial-cornea-implantation-at-rabin-medical-center-ending-a-decade-of-blindness-301205312.html#continue-jump&quot;&gt;Continue Reading&lt;br/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div class=&quot;pull-right inline-gallery-container col-md-8 col-sm-7 col-xs-12&quot;&gt;
&lt;div class=&quot;gallery inline-gallery&quot;&gt;
&lt;div class=&quot;row&quot; readability=&quot;7.5&quot;&gt;

&lt;div class=&quot;col-sm-12 clearfix&quot; readability=&quot;10&quot;&gt;
&lt;div tabindex=&quot;0&quot; class=&quot;image lightbox-item&quot; data-src=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=publish&quot; data-asset-type=&quot;photo&quot; data-asset-id=&quot;Life_After_Debt_Aug_17_Event.jpg&quot; data-asset-label=&quot;General&quot; data-sub-html=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; data-tweet-text=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; data-facebook-share-text=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; data-linkedin-text=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; data-download-url=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=publish&quot; data-pinterest-text=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; data-twitter-share-url=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=twitter&quot; data-linkedin-share-url=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=linkedin&quot; data-facebook-share-url=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=facebook&quot; data-pinterest-share-url=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=facebook&quot; onclick=&quot;omniture_corousal('Carousel Page','Photo Open','https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=publish','General');&quot;&gt;&lt;img title=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; src=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=publish&amp;amp;w=650&quot; id=&quot;imageid_2&quot; alt=&quot;Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)&quot; class=&quot;gallery-thumb img-responsive&quot; rel=&quot;newsImage&quot; itemprop=&quot;contentUrl&quot;/&gt;&lt;/div&gt;
Prof. Irit Bahar and Dr. Gilad Litvin, together with the first-in-human KPro patient and his daughter, the moment his sight returned. (PRNewsfoto/CorNeat Vision)

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&quot;&lt;em&gt;The surgical procedure was straight forward and the result exceeded all of our expectations.&lt;/em&gt; &lt;em&gt;The moment we took off the bandages was an emotional and significant moment. Moments like these are the fulfillment of our calling as doctors. We are proud of being at the forefront of this exciting and meaningful project which will undoubtedly impact the lives of millions.&lt;/em&gt;&quot;&lt;/p&gt;
&lt;p&gt;Dr. &lt;span class=&quot;xn-person&quot;&gt;Gilad Litvin&lt;/span&gt;, CorNeat Vision's Co-Founder, Chief Medical Officer, and the inventor of the CorNeat KPro, noted:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&quot;Unveiling this first implanted eye and being in that room, in that moment, was surreal. After years of hard work, seeing a colleague implant the CorNeat KPro with ease and witnessing a fellow human being regain his sight the following day was electrifying and emotionally moving, there were a lot of tears in the room. This is an extremely important milestone for CorNeat Vision, key in our journey to enable people around the world to fully enjoy their vision potential. I am grateful and honored to work with an outstanding group of people whose hard work, diligence and creativity, made this moment possible.&quot;&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;xn-person&quot;&gt;Almog Aley-Raz&lt;/span&gt;, CorNeat Vision's Co-Founder, Chief Executive Officer &amp;amp; VP R&amp;amp;D, noted:&lt;/p&gt;
&lt;p&gt;&quot;&lt;em&gt;The CorNeat KPro's first-in-human implantation is just the first step in a multi-national clinical trial, geared toward attaining CE Mark, FDA Clearance and China NMPA approval&lt;/em&gt;. &lt;em&gt;A total of 10 patients are approved for the trial at Rabin Medical Center in &lt;span class=&quot;xn-location&quot;&gt;Israel&lt;/span&gt; with two additional sites planned to open this January in &lt;span class=&quot;xn-location&quot;&gt;Canada&lt;/span&gt; and six others at different stages in the approval process in &lt;span class=&quot;xn-location&quot;&gt;France&lt;/span&gt;, the US, and &lt;span class=&quot;xn-location&quot;&gt;the Netherlands&lt;/span&gt;. Our first trial includes blind patients who are not suitable candidates for- or have failed one or more corneal transplantations. Given the exceptional visual performance of our device, the expected healing time and retention, and the fact that it cannot carry disease, we plan to initiate a second study later this year with broader indications to approve our artificial cornea as a first line treatment, displacing the use of donor tissue used in full thickness corneal transplantations&lt;/em&gt;.&quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About the CorNeat KPro&lt;/strong&gt;: The CorNeat KPro implant is designed to replace deformed, scarred or opacified corneas and is expected to fully and immediately rehabilitate the vision of corneally blind patients following a relatively simple implantation procedure. The CorNeat KPro will transform global corneal therapy and provide, for the first time, a reliable and scalable synthetic substitute to the human cornea, significantly impacting the lives of millions of people with cornea-related visual impairments and blindness. Click &lt;a href=&quot;https://www.corneat.com/kpro-animation&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;HERE&lt;/a&gt; to view an animated implantation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;About CorNeat Vision&lt;/strong&gt;: CorNeat Vision is a clinical-stage, biomimetic implant technology company. CorNeat Vision's platform is a 100% synthetic, non-degradable porous material, which mimics the micro-structure of the Extracellular Matrix (ECM) - the natural biological collagen mesh providing structural and biochemical support to surrounding cells. When implanted, this material stimulates cellular proliferation, leading to progressive tissue integration. This fully validated &lt;em&gt;in-vivo&lt;/em&gt; platform enables the bio-mechanical integration of permanent implants with live tissue and does not trigger an adverse immune system response. Click &lt;a href=&quot;http://www.corneat.com/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;HERE&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;CorNeat Vision will be featured as an Innovator's Pitch Challenge Finalist at the RESI Conference, during JPM Week, taking place &lt;span class=&quot;xn-chron&quot;&gt;January 11-13&lt;/span&gt;. You are welcome to &lt;a href=&quot;https://resiconference.com/digital-resi-january-2021-agenda/innovators-pitch-challenge/corneat-vision/&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;view our pitch&lt;/a&gt; and vote for us!&lt;/p&gt;
&lt;p&gt;Photo - &lt;a href=&quot;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg&lt;/a&gt;  &lt;br class=&quot;dnr&quot;/&gt;
Logo - &lt;a href=&quot;https://mma.prnewswire.com/media/972189/CorNeat_Logo.jpg&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://mma.prnewswire.com/media/972189/CorNeat_Logo.jpg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SOURCE CorNeat Vision&lt;/p&gt;
&lt;img alt=&quot;&quot; src=&quot;https://rt.prnewswire.com/rt.gif?NewsItemId=LN44316&amp;amp;Transmission_Id=202101110900PR_NEWS_USPR_____LN44316&amp;amp;DateId=20210111&quot;/&gt;</description>
<pubDate>Mon, 18 Jan 2021 13:10:39 +0000</pubDate>
<dc:creator>muskminion</dc:creator>
<og:title>CorNeat Vision's First Patient Regains Sight Following Artificial Cornea Implantation at Rabin Medical Center, Ending a Decade of Blindness</og:title>
<og:type>website</og:type>
<og:description>/PRNewswire/ -- The CorNeat KPro, the first artificial cornea which completely integrates with the eye wall with no reliance on donor tissue, was successfully...</og:description>
<og:image>https://mma.prnewswire.com/media/1417851/CorNeat_Vision.jpg?p=facebook</og:image>
<og:url>https://www.prnewswire.com/il/news-releases/corneat-visions-first-patient-regains-sight-following-artificial-cornea-implantation-at-rabin-medical-center-ending-a-decade-of-blindness-301205312.html</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.prnewswire.com/il/news-releases/corneat-visions-first-patient-regains-sight-following-artificial-cornea-implantation-at-rabin-medical-center-ending-a-decade-of-blindness-301205312.html</dc:identifier>
</item>
<item>
<title>GitHub Stale Bots – A False Economy</title>
<link>https://blog.benwinding.com/github-stale-bots/</link>
<guid isPermaLink="true" >https://blog.benwinding.com/github-stale-bots/</guid>
<description>&lt;p&gt;&lt;em&gt;Stale Bot’s&lt;/em&gt; are a type of automated bot on Github, which locks issues which are “stale” (as in have no recent activity). This seems like a helpful tool at first, but in reality it’s terrible for all parties involved.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;https://github.com/angular/angular/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Angular has a popular repository&lt;/a&gt; on github which receives hundreds of issues every day. They use the stale bot to lock old issues, which have no activity in order to reduce the amount of issues in the repository. On the surface the Stale Bot is doing great work, reducing the number of active issues in the repo, but in reality it’s a bit insane.&lt;/p&gt;
&lt;h2 id=&quot;Maintainer’s-perspective&quot;&gt;Maintainer’s perspective&lt;/h2&gt;
&lt;p&gt;Issues are being automatically locked, new users can’t add to issue so they create a duplicate issue, or even worse, just don’t report that the issue still exists!&lt;/p&gt;
&lt;h2 id=&quot;User’s-perspective&quot;&gt;User’s perspective&lt;/h2&gt;
&lt;p&gt;A user of Angular will &lt;em&gt;Google&lt;/em&gt; the error text and will usually find the corresponding github issue. But more often than not, the issue is locked, by the heroic &lt;em&gt;lock bot&lt;/em&gt;. So they have a few options, continue searching for another more recent (less SEO’d issue) OR either create another issue, effectively duplicating the bug.&lt;/p&gt;
&lt;p&gt;If they decide to create a duplicate issue, it will often not be linked it to the original issue… Now there are 2 issues duplicating the same bug in the Angular repo, so what did “Stale Bot” achieve?&lt;/p&gt;
&lt;p&gt;Well the stale bot has had the following effects on the repository:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Reduce the metric of &lt;em&gt;Open Issues&lt;/em&gt; in github&lt;/li&gt;
&lt;li&gt;Made duplicate issues far more likely&lt;/li&gt;
&lt;li&gt;Increased friction of users reporting that the issue still exists&lt;/li&gt;
&lt;li&gt;Ultimately decreased the quality of the software, as the issues don’t accurately reflect reality&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For a moment, imagine that Stack Overflow did this. If there’s no interaction on a question, then the question should be locked… Well questions that don’t get consistent interaction are inevitably duplicated, or not updated with correct information, or people get frustrated and don’t ask the question again.&lt;/p&gt;

&lt;p&gt;The best repo’s in my opinion, don’t prevent users from contributing to older issues. This gives a much better user experience, as friction to contribute to issues is much lower. It also lets the maintainers ensure that old issues aren’t needlessly duplicated. Finally, the community feels like the maintainers actually care about their input, which doesn’t feel that way when an automated &lt;em&gt;stale bot&lt;/em&gt; locks and closes your inactive issue without any input from a human…&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 12:28:43 +0000</pubDate>
<dc:creator>gitgud</dc:creator>
<og:type>article</og:type>
<og:title>Github Stale Bots: A False Economy</og:title>
<og:url>https://blog.benwinding.com/github-stale-bots/index.html</og:url>
<og:description>Stale Bot’s are a type of automated bot on Github, which locks issues which are “stale” (as in have no recent activity). This seems like a helpful tool at first, but in reality it’s terrible for all p</og:description>
<og:image>https://i.imgur.com/OOBT9Ta.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.benwinding.com/github-stale-bots/</dc:identifier>
</item>
<item>
<title>I made Deskreen, open source app to make any device a second screen for computer</title>
<link>https://www.deskreen.com</link>
<guid isPermaLink="true" >https://www.deskreen.com</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.deskreen.com&quot;&gt;https://www.deskreen.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25820533&quot;&gt;https://news.ycombinator.com/item?id=25820533&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 209&lt;/p&gt;
&lt;p&gt;# Comments: 80&lt;/p&gt;
</description>
<pubDate>Mon, 18 Jan 2021 11:13:29 +0000</pubDate>
<dc:creator>pavlobu</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.deskreen.com/</dc:identifier>
</item>
<item>
<title>Julia adoption keeps climbing</title>
<link>https://www.hpcwire.com/2021/01/13/julia-update-adoption-keeps-climbing-is-it-a-python-challenger/</link>
<guid isPermaLink="true" >https://www.hpcwire.com/2021/01/13/julia-update-adoption-keeps-climbing-is-it-a-python-challenger/</guid>
<description>&lt;p&gt;The rapid adoption of Julia, the open source, high level programing language with roots at MIT, shows no sign of slowing according to data from Julialang.org. In 2020, the number of downloads jumped 87 percent to more than 24 million (2020 v. 2019) and the number of available packages rose 73 percent to roughly 4800. Last year (2019 v. 2018) the number of downloads jumped 77 percent. In the most recent &lt;a href=&quot;https://www.tiobe.com/tiobe-index/&quot;&gt;TIOBE index&lt;/a&gt;, Julia jumped from #47 to #23 and TIOBE CEO Paul Jansen said Julia is the top candidate to jump into the top 20 (used languages) next year.&lt;/p&gt;
&lt;p&gt;Julia is hot.&lt;/p&gt;
&lt;p&gt;One prominent Julia user, Rick Stevens, associate director of Argonne National Laboratory, told &lt;em&gt;HPCwire&lt;/em&gt;, “I saw the 87 percent increase and think it is wonderful to see Julia growing. I think that Julia has great potential to replace C/C++/Python (and of course Fortran) in scientific and technical computing as it matures. The low level performance is excellent. It will be important for it to be adopted as a first-class target language by CPU/GPU vendors.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106326&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption.png&quot; alt=&quot;&quot; width=&quot;449&quot; height=&quot;310&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption.png 916w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption-300x207.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption-150x104.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Adoption-768x531.png 768w&quot; sizes=&quot;(max-width: 449px) 100vw, 449px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Launched roughly in the 2012 timeframe by four computer scientists including Alan Edelman of MIT, the number of Julia users has more than doubled in the past three years. Julia was intended to provide a powerful but easier-to-use programming language for scientific computing. Julia is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dynamic_programming_language&quot;&gt;dynamic&lt;/a&gt; language and the tension between the high performance delivered by so-called static programming languages and the lesser performance delivered by high-level dynamic programming languages, which emphasize abstraction, speed of development, and portability, hasn’t gone away.&lt;/p&gt;
&lt;p&gt;Edelman, who won the 2019 IEEE Sidney Fernbach Award, in part for his work on Julia, argued in his SC19 Fernbach talk that convenience with sufficient performance is winning out in the programming wars. Moreover, the rise of heterogeneous computing and the complications it presents to programmers, he said, has increased the tilt away from static programming towards dynamic languages. Here’s a brief snippet from his SC2019 &lt;a href=&quot;https://www.youtube.com/watch?v=nwdGsz4rc3Q&amp;amp;feature=emb_logo&quot;&gt;talk&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;“When you’re writing various algorithms, you don’t necessarily want to think about whether you’re on a GPU, or whether you’re on a distributed computer. You don’t necessarily want to think about how you’ve implemented the specific data structure. What you want to do is talk about what you want to compute, not how you want to compute it, right? That is the big problem, to get people to talk about what you want to compute, and not how you want to compute it. Because if you put in your software, how you’re going to compute it, and if your software is filled with that muck, I promise you, nobody’s ever going to change it. No one’s going to innovate on it. When the person who wrote it is no longer in the project, no one’s ever going to touch it.&lt;/p&gt;
&lt;p&gt;“[S]ome of the reasons why Julia is working very well is because we have particularly well-designed abstractions. We have something called multiple dispatch and we have a very careful balance between the static and dynamic. It interfaces with LLVM. It plays nicely with Python. We also have had lots of people take legacy codes in MPI, and plug them into Julia – you don’t get all the benefits, but what you do have, which might be the most important benefit, is other people can now run your code once it’s inside of Julia. So it’s much easier for other people. You can actually give your old code new life when you plug it into a higher level language.”&lt;/p&gt;
&lt;p&gt;During his talk, Edelman presented an example in which a group of researchers decided to scrap their legacy climate code in Fortran and write it from scratch in Julia. There was some discussion around performance tradeoffs they might encounter in the move to a high level programming language. The group was willing to accept a 3x slowdown for the flexibility of the language. Instead, said Edelman, the switch produced 3x speedup. (See &lt;em&gt;HPCwire&lt;/em&gt; coverage of Edelman’s talk, &lt;a href=&quot;https://www.hpcwire.com/2020/01/14/julia-programmings-dramatic-rise-in-hpc-and-elsewhere/&quot;&gt;Julia Programming’s Dramatic Rise in HPC and Elsewhere&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106327&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community.png&quot; alt=&quot;&quot; width=&quot;475&quot; height=&quot;263&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community.png 974w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community-300x166.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community-150x83.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-User-Community-768x425.png 768w&quot; sizes=&quot;(max-width: 475px) 100vw, 475px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106340&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description.png&quot; alt=&quot;&quot; width=&quot;475&quot; height=&quot;226&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description.png 972w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description-300x143.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description-150x71.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Description-768x366.png 768w&quot; sizes=&quot;(max-width: 475px) 100vw, 475px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Julia organization hasn’t been shy about tackling the perceived performance shortcomings of dynamic versus static languages. Here’s an &lt;a href=&quot;https://docs.julialang.org/en/v1/&quot;&gt;excerpt&lt;/a&gt; from Julia’s introductory documentation on performance and differentiation from other dynamic languages:&lt;/p&gt;
&lt;p&gt;“Scientific computing has traditionally required the highest performance, yet domain experts have largely moved to slower dynamic languages for daily work. We believe there are many good reasons to prefer dynamic languages for these applications, and we do not expect their use to diminish. Fortunately, modern language design and compiler techniques make it possible to mostly eliminate the performance trade-off and provide a single environment productive enough for prototyping and efficient enough for deploying performance-intensive applications. The Julia programming language fills this role: it is a flexible dynamic language, appropriate for scientific and numerical computing, with performance comparable to traditional statically-typed languages.&lt;/p&gt;
&lt;p&gt;“Because Julia’s compiler is different from the interpreters used for languages like Python or R, you may find that Julia’s performance is unintuitive at first. If you find that something is slow, we highly recommend reading through the &lt;a href=&quot;https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-tips&quot;&gt;Performance Tips&lt;/a&gt; section before trying anything else. Once you understand how Julia works, it’s easy to write code that’s nearly as fast as C.&lt;/p&gt;
&lt;p&gt;“Julia features optional typing, multiple dispatch, and good performance, achieved using type inference and &lt;a href=&quot;https://en.wikipedia.org/wiki/Just-in-time_compilation&quot;&gt;just-in-time (JIT) compilation&lt;/a&gt;, implemented using &lt;a href=&quot;https://en.wikipedia.org/wiki/Low_Level_Virtual_Machine&quot;&gt;LLVM&lt;/a&gt;. It is multi-paradigm, combining features of imperative, functional, and object-oriented programming. Julia provides ease and expressiveness for high-level numerical computing, in the same way as languages such as R, MATLAB, and Python, but also supports general programming. To achieve this, Julia builds upon the lineage of mathematical programming languages, but also borrows much from popular dynamic languages, including &lt;a href=&quot;https://en.wikipedia.org/wiki/Lisp_(programming_language)&quot;&gt;Lisp&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Perl_(programming_language)&quot;&gt;Perl&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Lua_(programming_language)&quot;&gt;Lua&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Ruby_(programming_language)&quot;&gt;Ruby&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“The most significant departures of Julia from typical dynamic languages are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The core language imposes very little; Julia Base and the standard library are written in Julia itself, including primitive operations like integer arithmetic&lt;/li&gt;
&lt;li&gt;A rich language of types for constructing and describing objects, that can also optionally be used to make type declarations&lt;/li&gt;
&lt;li&gt;The ability to define function behavior across many combinations of argument types via &lt;a href=&quot;https://en.wikipedia.org/wiki/Multiple_dispatch&quot;&gt;multiple dispatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Automatic generation of efficient, specialized code for different argument types&lt;/li&gt;
&lt;li&gt;Good performance, approaching that of statically-compiled languages like C”&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;A Julia user &lt;a href=&quot;https://julialang.org/assets/2020-julia-user-developer-survey.pdf&quot;&gt;survey&lt;/a&gt; conducted last June provides a snapshot of the Julia user community and many of its feature preference and practices. It’s based on 2,565 interviews. Currently most users (60%) work in academia but there is a growing push to expand Julia in industry. Within industry, the biggest user segments are software/IT professionals (12%) and engineering (11%).&lt;/p&gt;
&lt;p&gt;Interestingly, only about half of the Julia currently use hardware accelerators now, although that number is growing. Julia is also not widely used in the cloud. Currently Julia programs are run mostly on local clusters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106328&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users.png&quot; alt=&quot;&quot; width=&quot;509&quot; height=&quot;283&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users.png 982w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users-300x167.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users-150x83.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Academic-Users-768x427.png 768w&quot; sizes=&quot;(max-width: 509px) 100vw, 509px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106329&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs.png&quot; alt=&quot;&quot; width=&quot;510&quot; height=&quot;340&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs.png 900w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs-300x200.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs-150x100.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-on-GPUs-768x512.png 768w&quot; sizes=&quot;(max-width: 510px) 100vw, 510px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106330&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use.png&quot; alt=&quot;&quot; width=&quot;506&quot; height=&quot;262&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use.png 972w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use-300x156.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use-150x78.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Cloud-Use-768x398.png 768w&quot; sizes=&quot;(max-width: 506px) 100vw, 506px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Performance, ease-of-use, and the open source nature of Julia were top choices for popular technical features. No surprise, the lack of licensing fees was the top non-tech feature. Among top technical challenges cited were slow compile times and the relative immaturity of packages. Juno and VS Code with Julia plug-in were top rates editors for 2020.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106331&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked.png&quot; alt=&quot;&quot; width=&quot;508&quot; height=&quot;256&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked.png 976w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked-300x151.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked-150x76.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Features-Liked-768x387.png 768w&quot; sizes=&quot;(max-width: 508px) 100vw, 508px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;alignnone wp-image-106332&quot; src=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases.png&quot; alt=&quot;&quot; width=&quot;505&quot; height=&quot;258&quot; srcset=&quot;https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases.png 912w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases-300x153.png 300w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases-150x77.png 150w, https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2021/01/Julia-Use-Cases-768x392.png 768w&quot; sizes=&quot;(max-width: 505px) 100vw, 505px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At JuliaCon held (virtually) in late July, one particularly active BOF tackled efforts to have industry share code with the Julia community. Greater involvement of industry seems generally seems to be on Julia’s agenda and represents another step towards building its popularity. There’s a &lt;a href=&quot;https://julialang.org/blog/2020/08/juliacon-2020-wrapup/&quot;&gt;recap&lt;/a&gt; of JuliaCon posted on the Julia website.&lt;/p&gt;
&lt;p&gt;It will be interesting to monitor Julia’s traction going forward; making it into the top 20 of the TIOBE Index next year would be a strong indicator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slides source:&lt;/strong&gt; Julia June 2020 survey: &lt;a href=&quot;https://julialang.org/assets/2020-julia-user-developer-survey.pdf&quot;&gt;https://julialang.org/assets/2020-julia-user-developer-survey.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2020 stats source:&lt;/strong&gt; Julia newsletter, &lt;a href=&quot;https://juliacomputing.com/blog/2021/01/newsletter-january/&quot;&gt;https://juliacomputing.com/blog/2021/01/newsletter-january/&lt;/a&gt;&lt;/p&gt;
&lt;input class=&quot;fooboxshare_post_id&quot; type=&quot;hidden&quot; value=&quot;106324&quot;/&gt;</description>
<pubDate>Mon, 18 Jan 2021 10:59:12 +0000</pubDate>
<dc:creator>newswasboring</dc:creator>
<og:type>article</og:type>
<og:title>Julia Update: Adoption Keeps Climbing; Is It a Python Challenger?</og:title>
<og:description>The rapid adoption of Julia, the open source, high level programing language with roots at MIT, shows no sign of slowing according to data from</og:description>
<og:url>https://www.hpcwire.com/2021/01/13/julia-update-adoption-keeps-climbing-is-it-a-python-challenger/</og:url>
<og:image>https://6lli539m39y3hpkelqsm3c2fg-wpengine.netdna-ssl.com/wp-content/uploads/2020/01/Julia-colorful-pixel-packing_800x.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.hpcwire.com/2021/01/13/julia-update-adoption-keeps-climbing-is-it-a-python-challenger/</dc:identifier>
</item>
</channel>
</rss>