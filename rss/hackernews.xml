<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>‘Re-education’, forced labour and surveillance beyond Xinjiang</title>
<link>https://www.aspi.org.au/report/uyghurs-sale</link>
<guid isPermaLink="true" >https://www.aspi.org.au/report/uyghurs-sale</guid>
<description>&lt;p&gt;Since 2017, more than a million Uyghurs and members of other Turkic Muslim minorities have disappeared into a vast network of ‘re-education camps’ in the far west region of Xinjiang,&lt;sup&gt;11&lt;/sup&gt; in what some experts call a systematic, government-led program of cultural genocide.&lt;sup&gt;12&lt;/sup&gt; Inside the camps, detainees are subjected to political indoctrination, forced to renounce their religion and culture and, in some instances, reportedly subjected to torture.&lt;sup&gt;13&lt;/sup&gt; In the name of combating ‘religious extremism’,&lt;sup&gt;14&lt;/sup&gt; Chinese authorities have been actively remoulding the Muslim population in the image of China’s Han ethnic majority.&lt;/p&gt;
&lt;p&gt;The ‘re-education’ campaign appears to be entering a new phase, as government officials now claim that all ‘trainees’ have ‘graduated’.&lt;sup&gt;15&lt;/sup&gt; There is mounting evidence that many Uyghurs are now being forced to work in factories within Xinjiang.&lt;sup&gt;16&lt;/sup&gt; This report reveals that Chinese factories outside Xinjiang are also sourcing Uyghur workers under a revived, exploitative government-led labour transfer scheme.&lt;sup&gt;17&lt;/sup&gt; Some factories appear to be using Uyghur workers sent directly from ‘re-education camps’.&lt;/p&gt;
&lt;p&gt;The Australian Strategic Policy Institute (ASPI) has identified 27 factories in nine Chinese provinces that are using Uyghur labour transferred from Xinjiang since 2017. Those factories claim to be part of the supply chain of 83 well-known global brands.&lt;sup&gt;18&lt;/sup&gt; Between 2017 and 2019, we estimate that at least 80,000 Uyghurs were transferred out of Xinjiang and assigned to factories through labour transfer programs under a central government policy known as ‘Xinjiang Aid’ (援疆).&lt;sup&gt;19&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;It is extremely difficult for Uyghurs to refuse or escape these work assignments, which are enmeshed with the apparatus of detention and political indoctrination both inside and outside of Xinjiang.&lt;sup&gt;20&lt;/sup&gt; In addition to constant surveillance, the threat of arbitrary detention hangs over minority citizens who refuse their government-sponsored work assignments.&lt;sup&gt;21&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Most strikingly, local governments and private brokers are paid a price per head by the Xinjiang provincial government to organise the labour assignments.&lt;sup&gt;22&lt;/sup&gt; The job transfers are now an integral part of the ‘re-education’ process, which the Chinese government calls ‘vocational training’.&lt;sup&gt;23&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;A local government work report from 2019 reads: ‘For every batch [of workers] that is trained, a batch of employment will be arranged and a batch will be transferred. Those employed need to receive thorough ideological education and remain in their jobs.’&lt;sup&gt;24&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;This report examines three case studies in which Uyghur workers appear to be employed under forced labour conditions by factories in China that supply major global brands. In the first case study, a factory in eastern China that manufactures shoes for US company Nike is equipped with watchtowers, barbed-wire fences and police guard boxes. The Uyghur workers, unlike their Han counterparts, are reportedly unable to go home for holidays (see page 8). In the second case study of another eastern province factory claiming to supply sportswear multinationals Adidas and Fila, evidence suggests that Uyghur workers were transferred directly from one of Xinjiang’s ‘re-education camps’ (see page 18). In the third case study, we identify several Chinese factories making components for Apple or their suppliers using Uyghur labour. Political indoctrination is a key part of their job assignments (see page 21).&lt;/p&gt;
&lt;p&gt;This research report draws on open-source Chinese-language documents, satellite imagery analysis, academic research and on-the-ground media reporting. It analyses the politics and policies behind the new phase of the Chinese government’s ongoing repression of Uyghurs and other Muslim minorities. It provides evidence of the exploitation of Uyghur labour and the involvement of foreign and Chinese companies, possibly unknowingly, in human rights abuses.&lt;/p&gt;
&lt;p&gt;In all, ASPI’s research has identified 83 foreign and Chinese companies directly or indirectly benefiting from the use of Uyghur workers outside Xinjiang through potentially abusive labour transfer programs as recently as 2019: Abercrombie &amp;amp; Fitch, Acer, Adidas, Alstom, Amazon, Apple, ASUS, BAIC Motor, BMW, Bombardier, Bosch, BYD, Calvin Klein, Candy, Carter’s, Cerruti 1881, Changan Automobile, Cisco, CRRC, Dell, Electrolux, Fila, Founder Group, GAC Group (automobiles), Gap, Geely Auto, General Electric, General Motors, Google, H&amp;amp;M, Haier, Hart Schaffner Marx, Hisense, Hitachi, HP, HTC, Huawei, iFlyTek, Jack &amp;amp; Jones, Jaguar, Japan Display Inc., L.L.Bean, Lacoste, Land Rover, Lenovo, LG, Li-Ning, Mayor, Meizu, Mercedes-Benz, MG, Microsoft, Mitsubishi, Mitsumi, Nike, Nintendo, Nokia, The North Face, Oculus, Oppo, Panasonic, Polo Ralph Lauren, Puma, Roewe, SAIC Motor, Samsung, SGMW, Sharp, Siemens, Skechers, Sony, TDK, Tommy Hilfiger, Toshiba, Tsinghua Tongfang, Uniqlo, Victoria’s Secret, Vivo, Volkswagen, Xiaomi, Zara, Zegna, ZTE. Some brands are linked with multiple factories.&lt;/p&gt;
&lt;p&gt;The data is based on published supplier lists, media reports, and the factories’ claimed suppliers. ASPI reached out to these 83 brands to confirm their relevant supplier details. Where companies responded before publication, we have included their relevant clarifications in this report. If any company responses are made available after publication of the report, we will address these online.&lt;/p&gt;
&lt;p&gt;ASPI notes that a small number of brands including Abercrombie &amp;amp; Fitch advised they have instructed their vendors to terminate their relationships with these suppliers in 2020. Others, including Adidas, Bosch and Panasonic, said they had no direct contractual relationships with the suppliers implicated in the labour schemes, but no brands were able to rule out a link further down their supply chain.&lt;/p&gt;
&lt;p&gt;The report includes an &lt;a href=&quot;https://s3-ap-southeast-2.amazonaws.com/ad-aspi/2020-03/Uyghurs%20for%20sale_Final.pdf&quot;&gt;appendix&lt;/a&gt; that details the factories involved and the brands that appear to have elements of forced Uyghur labour in their supply chains. It also makes specific recommendations for the Chinese government, companies, foreign governments and civil society organisations.&lt;/p&gt;

&lt;h3&gt;Citations and notes&lt;/h3&gt;
&lt;p&gt;Readers are encouraged to &lt;a href=&quot;https://s3-ap-southeast-2.amazonaws.com/ad-aspi/2020-03/Uyghurs%20for%20sale_Final.pdf&quot;&gt;download the PDF&lt;/a&gt; to access the full and extensive citations and notes that accompany this report.&lt;/p&gt;
</description>
<pubDate>Sun, 01 Mar 2020 16:02:18 +0000</pubDate>
<dc:creator>hardmaru</dc:creator>
<og:type>article</og:type>
<og:url>https://www.aspi.org.au/report/uyghurs-sale</og:url>
<og:title>Uyghurs for sale</og:title>
<og:image>https://s3-ap-southeast-2.amazonaws.com/ad-aspi/2020-02/Uyghurs-for-sale_PB26.2020-banner.jpg?dfmeCJ5UxXx9.o2fpQqvxoTHFN3ZWokh</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.aspi.org.au/report/uyghurs-sale</dc:identifier>
</item>
<item>
<title>NymphCast: Casual attempt at open alternative to Chromecast</title>
<link>https://mayaposch.blogspot.com/2020/03/nymphcast-casual-attempt-at-open.html</link>
<guid isPermaLink="true" >https://mayaposch.blogspot.com/2020/03/nymphcast-casual-attempt-at-open.html</guid>
<description>For the past half year or thereabouts I have been working on a little project of mine that I call 'NymphCast' [1]. The initial idea for it originated at the beginning of 2019, when I found myself perplexed at the usability and compatibility issues that exist with streaming solutions like ChromeCast (Google proprietary) and AirPlay (Apple proprietary). Also how this was not improved much with PulseAudio (Linux-exclusive). It should be possible to have an open standard that would just work on any platform for streaming audio and video across a network.&lt;p&gt;First step was scraping together existing software solutions for handling the boring parts like shovelling bytes across the network and decoding and playing back audio and video. For the network communication part between server and client I was happy to use my own NymphRPC [2] remote procedure call library, as this provided the required functionality to transfer data between client and server in a light-weight library, which I also know to have been used in production environments. For the video and audio decoding, and the playback I settled on Ffmpeg [3] with LibSDL [4]. I also tried the gstreamer and LibVLC libraries, but could not make either of them work for the project.&lt;/p&gt;&lt;p&gt;It's interesting to essentially rebuild an existing system. The requirements for NymphCast were rather obvious: same as for ChromeCast, Roku and Amazon's dongle. That 'just' left implementing it. Playing back audio and video from a memory buffer and keeping that memory buffer filled while also allowing for efficient seek operations on the remote file gives one a lot of insight in where the bottlenecks lie on a computer and a network, but is mostly tedious work. Most of the work probably went into the other aspect of ChromeCast and kin: custom apps that add functionality, such as streaming from online services like YouTube, Netflix and SoundCloud.&lt;/p&gt;&lt;p&gt;Since ChromeCast's server solution (what runs on a ChromeCast dongle) is essentially a Chrome browser instance, these ChromeCast apps are simply HTML pages with JavaScript that get loaded from a remote server. Because NymphCast is a native C++ application it's free to use whatever approach it wants for NymphCast apps. Here I wanted a scripting language that's easy to integrate with C++ and both easy and powerful enough to be used for whatever such a custom app might require. Having embedded both Lua and Python in the past, I wanted something less clunky and ideally statically typed, which led me to AngelScript [5].&lt;/p&gt;&lt;p&gt;AngelScript has essentially C++ syntax and supports most C++ concepts directly, allowing it to be embedded in a C++ application without any jumping through hoops and with no overhead. What it also shares with C++ is that it is statically typed, meaning that when the script file is compiled, the AngelScript compiler will perform type and syntax checks, informing you where you made a mistake instead of the runtime throwing an error and bailing out while the app is running. I really appreciated this feature while developing the SoundCloud demonstration app.&lt;/p&gt;&lt;p&gt;As an aside, people have asked me over the past months why I didn't just implement the AirPlay or ChromeCast protocols (both of which have been more or less reverse engineered). The primary reason is that both are proprietary protocols which have been altered by the companies behind them and very likely will be changed again in the future. There is also limited use in supporting those protocols, as one isn't simply going to support ChromeCast apps or such, as these have been cryptographically locked away so unless you'll crack those AES or similar keys, it'd be at best a half-hearted kludge and a worst a massive waste of time and effort.&lt;/p&gt;&lt;p&gt;Considering that I managed to implement a basic SoundCloud NymphCast app within an hour using the public (HTTP) API, it would seem to me that it would be a more productive approach to get NymphCast into a state where I could contact SoundCloud and similar companies on whether they'd want to produce an official NymphCast app (hosted on their own servers) and thus get NymphCast on a level playing field with the competition, rather than acting like a trojan and constantly having to fix things whenever Google or Apple change something on their end. That's not the kind of 'competing' which I am into.&lt;/p&gt;&lt;p&gt;This leads me to the current state of NymphCast: I have used the NymphCast server on Windows, Linux x86 and Linux ARM on Raspberry Pi SBCs and other ARM-based SBCs. The client runs on all desktop platforms and on Android (Qt-based). While I would definitely call it Alpha-level software, with some features such as seeking support still being implemented, I am rapidly running out of missing features to implement. Leaving seeking support as one of the final features to implement for the first release was mostly because it is less essential than stabilising the other features.&lt;/p&gt;&lt;p&gt;One interesting thing which I have found during testing is that even if one were to never want to skip through an audio track or film, seeking support is still needed, as the MP4 container format for one has this nice feature where by default it puts the 'header' with the container details at the end of the file. This means that the player has to first seek to the end of the file, read the 'header', set the configuration, seek back to the file beginning and then start playing.&lt;/p&gt;&lt;p&gt;All taken together, this seeking support and some functions to get real-time playback information in the client are the only things that still need to be implemented before the first NymphCast release goes into Beta, meaning the shaking out of bugs and any other issues that may pop up during testing. Here I want to make it as easy as possible for people to help with testing, by providing an easy way to get NymphCast on a few supported platforms, such as the Raspberry Pi for the server, and for the client desktop platforms as well as Android devices. Compiling the client for iOS smartphones is harder, as this requires one to have a Mac system, which I do not, but this can be solved as well.&lt;/p&gt;&lt;p&gt;So what is it that I want to accomplish with NymphCast? Most of all to have a nice platform that I can use myself for streaming audio and video to any (powered) speakers and displays that I have standing around, along with the extensibility offered by NymphCast apps. I also hope that others will start using it, even adding NymphCast support to their (smartphone) apps. It would be wonderful to see private companies embrace it and release official apps that would allow people to use their services from NymphCast, cutting out proprietary ChromeCast, Airplay, Sonos and various SmartTV platforms.&lt;/p&gt;&lt;p&gt;The open nature of NymphCast (3-clause BSD licenced) is one big benefit, but also the ability to install the server on any Raspberry Pi board or equivalent without any hardware devices having to be produced, shipped, purchased and eventually tossed away, like the dongles for Google and Amazon's solutions, or entire speakers and devices as in the case of Sonos and Roku. NymphCast will work with any general purpose system, whether it is a Raspberry Pi, OrangePi, Intel NUC, some AMD APU-based board or a full-blown gaming PC.&lt;/p&gt;&lt;p&gt;Call me nuts, but I think that it might just be crazy enough to work.&lt;/p&gt;&lt;p&gt;Maya&lt;/p&gt;&lt;p&gt;[1] &lt;a href=&quot;https://github.com/MayaPosch/NymphCast&quot;&gt;https://github.com/MayaPosch/NymphCast&lt;/a&gt;&lt;br/&gt;[2] &lt;a href=&quot;https://github.com/MayaPosch/NymphRPC&quot;&gt;https://github.com/MayaPosch/NymphRPC&lt;/a&gt;&lt;br/&gt;[3] &lt;a href=&quot;http://www.ffmpeg.org/&quot;&gt;http://www.ffmpeg.org/&lt;/a&gt;&lt;br/&gt;[4] &lt;a href=&quot;http://www.libsdl.org/&quot;&gt;http://www.libsdl.org/&lt;/a&gt;&lt;br/&gt;[5] &lt;a href=&quot;http://www.angelcode.com/angelscript/&quot;&gt;http://www.angelcode.com/angelscript/&lt;/a&gt;&lt;br/&gt;[6] &lt;a href=&quot;https://github.com/MayaPosch/NymphCast/blob/master/src/server/apps/soundcloud/soundcloud.as&quot;&gt;https://github.com/MayaPosch/NymphCast/blob/master/src/server/apps/soundcloud/soundcloud.as&lt;/a&gt;
&lt;/p&gt;</description>
<pubDate>Sun, 01 Mar 2020 15:56:11 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<og:url>http://mayaposch.blogspot.com/2020/03/nymphcast-casual-attempt-at-open.html</og:url>
<og:title>NymphCast: a casual attempt at an open alternative to ChromeCast and kin</og:title>
<og:description>For the past half year or thereabouts I have been working on a little project of mine that I call 'NymphCast' [1]. The initial idea for it o...</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://mayaposch.blogspot.com/2020/03/nymphcast-casual-attempt-at-open.html</dc:identifier>
</item>
<item>
<title>Better Business Bureau rejects Molekule’s air purifier claims</title>
<link>https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/</link>
<guid isPermaLink="true" >https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/</guid>
<description>&lt;p&gt;You may have heard of the Molekule air purifier. It pops up in ads left and right, design-minded businesses such as &lt;a href=&quot;https://www.nytimes.com/2019/02/12/travel/air-quality-hotel-air-purifiers.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;InterContinental Hotels&lt;/a&gt; and the &lt;a href=&quot;https://store.moma.org/for-the-home/home/home-electronics/molekule-air-purifier/516-126389.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;MoMA Design Store&lt;/a&gt; have embraced it, and influential media outlets including &lt;a href=&quot;https://www.wired.com/gallery/best-air-purifiers/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Wired&lt;/a&gt;, &lt;a href=&quot;https://time.com/5023212/best-inventions-of-2017/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Time&lt;/a&gt;, &lt;a href=&quot;https://www.popsci.com/10-greatest-home-innovations-year/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Popular Science&lt;/a&gt;, &lt;a href=&quot;https://www.architecturaldigest.com/story/what-i-learned-about-the-air-in-my-apartment-by-testing-the-molekule&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Architectural Digest&lt;/a&gt;, &lt;a href=&quot;https://www.townandcountrymag.com/style/beauty-products/a19435075/air-quality-affect-health-skin/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Town &amp;amp; Country&lt;/a&gt;, &lt;a href=&quot;https://nymag.com/strategist/article/elechomes-uc3101-air-purifier-review-2019.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;New York Magazine&lt;/a&gt;, and The New York Times’s own &lt;a href=&quot;https://www.nytimes.com/2018/12/21/t-magazine/gifts-for-people-in-the-news.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;T Magazine&lt;/a&gt; have sung its praises.&lt;sup&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Those places bought into the company’s claims, but the only two publications to actually test it—Wirecutter and &lt;a href=&quot;https://www.consumerreports.org/air-purifiers/molekule-air-purifier-review/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Consumer Reports&lt;/a&gt;—found it to be abysmal, or, as we put it in our &lt;a href=&quot;https://thewirecutter.com/reviews/best-air-purifier/&quot;&gt;air purifier guide&lt;/a&gt;, “&lt;a href=&quot;https://thewirecutter.com/reviews/best-air-purifier/#molekule-the-worst-air-purifier-weve-ever-tested&quot;&gt;the worst air purifier we’ve ever tested&lt;/a&gt;.” Now the company is back in the news making some big promises: Founders say they’re “&lt;a href=&quot;https://www.wtsp.com/article/news/health/tampa-bay-researcher-might-have-the-answer-to-stopping-coronavirus/67-e91c5592-cc39-47b5-a4d9-aa1365c370a7&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;very confident that this technology will destroy Coronavirus&lt;/a&gt;” and that the virus is “&lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-02-23/this-air-purifier-maker-is-accelerating-tests-on-coronavirus&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;a rather simple structure for us to be able to be destroy&lt;/a&gt;.” And the company just got &lt;a href=&quot;https://www.bizjournals.com/sanfrancisco/news/2020/02/25/s-f-maker-of-air-purifiers-captures-58m-series-c.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;$58 million in new funding&lt;/a&gt;. So is everyone getting duped by simply taking Molekule’s word for it?&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Yes, according to an independent report we received from the &lt;a href=&quot;https://bbbprograms.org/programs/nad/nad-contact-us&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;National Advertising Division&lt;/a&gt; (a &lt;a href=&quot;https://bbbprograms.org/home&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Better Business Bureau National Program&lt;/a&gt;), which &lt;a href=&quot;https://thewirecutter.com/wp-content/uploads/2020/02/Molekule-Case-Report-6314.pdf&quot;&gt;overwhelmingly found Molekule’s advertising claims to be unsubstantiated&lt;/a&gt; (PDF). Rival manufacturer Dyson challenged many of Molekule’s claims about Molekule’s air purifier, the Molekule Air (formerly known as the Molekule Home One or MH1). In an analysis of Molekule’s own testing and other evidence that Molekule submitted in its defense, NAD found that every explicit advertising claim of Molekule’s that Dyson challenged was unsubstantiated. Dyson challenged 26 claims; NAD upheld all 26 challenges.&lt;/p&gt;
&lt;p&gt;This isn’t Dyson simply being litigious. NAD handles about 90 cases of this kind each year. Participation is voluntary, and more than 90 percent of manufacturers that agree to let NAD arbitrate these cases comply with NAD’s findings. A challenger (Dyson, here) pays a filing fee and makes a detailed argument against claims made by an advertiser, which is typically a competitor (Molekule, in this case). Each side presents evidence to NAD in support of its position. NAD examines this evidence and does additional investigations of its own. Then it issues recommendations about the validity of the advertiser’s claims. When NAD finds that an advertiser’s claims are invalid or otherwise inaccurate, it recommends that the claims be withdrawn. If a case is not settled by this process, NAD typically refers it to the Federal Trade Commission, whose judgment is legally binding.&lt;/p&gt;
&lt;p&gt;Molekule is appealing some of NAD’s recommendations; a second judgment is expected in the coming weeks.&lt;/p&gt;
&lt;p&gt;But Molekule has already agreed to make a breathtaking retreat from many of its long-held claims.&lt;/p&gt;
&lt;p&gt;At NAD’s recommendation, Molekule has agreed to withdraw the entirety of its quantified pollution-elimination claims—meaning it no longer stands by the numbers it long touted as “proof” of the Molekule purifier’s “destruction” of VOCs and biological particles. NAD found that the company’s testing comprehensively failed to back up its claims.&lt;/p&gt;
&lt;p&gt;Molekule has also agreed to withdraw all of its claims to have been independently tested, after NAD’s investigation found that much of the research was done either at a lab where Molekule’s founder is a director or at a lab that the company sponsors.&lt;/p&gt;
&lt;p&gt;And Molekule has agreed to withdraw its claims that the Molekule purifier relieves allergy and asthma symptoms. NAD found both that Molekule’s two small studies of patients were unscientific and vulnerable to bias and that testimonials from doctors in support of the Molekule purifier were unsupported by evidence.&lt;/p&gt;
&lt;p&gt;Those are the steps Molekule has already taken in response; NAD’s recommendations go much further. And the NAD case report contains copious evidence of why.&lt;/p&gt;
&lt;p&gt;Among the more eye-opening points:&lt;/p&gt;
&lt;p&gt;It is recommending that Molekule withdraw all of the challenged claims (not just the quantified ones) about the Molekule purifier’s ability to eliminate pollution. “In sum,” NAD concludes, “the evidence provided by the advertiser was insufficiently reliable to provide a reasonable basis for its impactful pollution elimination performance/efficacy claims.”&lt;/p&gt;
&lt;p&gt;It is recommending that Molekule withdraw all of the challenged claims of its performance superiority over HEPA purifiers, after finding that “[n]one of Molekule’s testing provides reliable data against all or a significant portion of competitive products on the market.” (Perhaps because Molekule “did not compare the performance of the MH1 device to even a single competing HEPA air purifier.”)&lt;/p&gt;
&lt;p&gt;And NAD is recommending that Molekule withdraw all of its challenged claims that HEPA purifiers can harbor and spread pathogens, finding that the literature Molekule supplied was irrelevant, insufficient, or cherry-picked. (NAD further notes that “a few of the documents submitted were actually supportive of HEPA.”)&lt;/p&gt;
&lt;p&gt;For anyone considering buying a Molekule, the &lt;a href=&quot;https://thewirecutter.com/wp-content/uploads/2020/02/Molekule-Case-Report-6314.pdf&quot;&gt;entire report&lt;/a&gt; (PDF) is worth a read. Skip to the “Decision” section, beginning on page 14, where NAD reveals its point-by-point analysis of Molekule’s own tests and other arguments the company voluntarily submitted—and rejects them point by point.&lt;/p&gt;
&lt;p&gt;Highlights include Molekule’s position that its claims weren’t referring to the Molekule purifier itself—weren’t referring to the product it was selling—but rather were referring only to the underlying PECO “and other” technology.&lt;sup&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; In fact, Molekule based many of its claims on tests of prototypes, or of the PECO filter alone (not of the actual purifier it has been selling since 2017). And Molekule conducted most of its tests in small chambers that bore no relation to real-world home use (that were not, in NAD’s words, “consumer relevant”), and it based claims on comparisons to “devices that are not air filters.”&lt;sup&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The other takeaway of the report is how clearly it shows Molekule’s willingness to change its claims when they’re exposed as false—an issue Wirecutter observed firsthand &lt;a href=&quot;https://thewirecutter.com/reviews/best-air-purifier/#molekule-the-worst-air-purifier-weve-ever-tested&quot;&gt;after the publication of our test results&lt;/a&gt;. A report this comprehensive makes it hard to take any of Molekule’s claims seriously.&lt;/p&gt;
&lt;h3&gt;Footnotes&lt;/h3&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn1-body&quot;&gt;1.&lt;/a&gt; The New York Times is Wirecutter’s parent company.&lt;br/&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn1-body&quot;&gt;Jump back.&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn2-body&quot;&gt;2.&lt;/a&gt; “The advertiser maintains that its advertising claims concern the &lt;em&gt;PECO (and other) technology&lt;/em&gt; [emphasis original] underpinning its MH1 air purifier, not the MH1 unit itself. NAD did not agree. It is well established that (in addition to any express claims) an advertiser is obligated to support all reasonable interpretations of claims made in its advertising, including messages it may not have intended to convey. The advertiser’s claims are directed to consumers and appear on Molekule’s website, YouTube videos, social media ads, and other online advertisements. Although the advertising explains the PECO technology, the advertising ties the PECO technology directly to the benefit of using the Molekule air purifier – ‘finally an air purifier that delivers on the promise of clean air.’ Other advertising claims explain the PECO technology and contrasts it with HEPA filters, and explains the difference as tied to the products as used by consumers. The language of the claims and the accompanying imagery, which depicts the Molecule Air Purifier intaking pollutants with images of them being destroyed inside the unit, juxtaposed with images of HEPA filters saturated with dust, expressly and impliedly convey the overarching messages that the MH1 Air Purifier as used in the home destroys or eliminates airborne pollutants to provide meaningful health benefits to allergy and asthma sufferers, and is superior to HEPA-based air purifiers, including those sold by Dyson.” (p. 16)&lt;br/&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn2-body&quot;&gt;Jump back.&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn3-body&quot;&gt;3.&lt;/a&gt; “Air purification devices are intended for use in a room. Molekule submitted several tests, but only one tested the MH1 device in a consumer relevant chamber employing the device according to instructions. NAD’s concerns with that test are discussed below. Other tests evaluated the PECO filters used in chambers that were smaller than a room, applied the challenge pollutants directly to the filter material but did not evaluate the elimination of pollutants as the air purifier would be operated as consumers used the product, according to the manufacturer’s instructions, tested a prototype rather than the MH1, and tests compared the MH1 to devices that are not air filters.” (p. 17)&lt;br/&gt;&lt;a href=&quot;https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/#fn3-body&quot;&gt;Jump back.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 01 Mar 2020 15:50:40 +0000</pubDate>
<dc:creator>prostoalex</dc:creator>
<og:type>article</og:type>
<og:url>https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/</og:url>
<og:title>This Advertising Watchdog Just Rejected Basically All of Molekule’s Air Purifier Claims</og:title>
<og:description>Independent analysis by the Better Business Bureau’s National Advertising Division rejected over two dozen of Molekule’s advertising claims.</og:description>
<og:image>https://cdn.thewirecutter.com/wp-content/uploads/2020/02/molekule-lowres-2542-570x380.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://thewirecutter.com/blog/watchdog-rejects-molekule-air-purifier-claims/</dc:identifier>
</item>
<item>
<title>Why Cloudflare Chose AMD EPYC for Gen X Servers</title>
<link>https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/</link>
<guid isPermaLink="true" >https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/</guid>
<description>&lt;p&gt;From the very beginning Cloudflare used Intel CPU-based servers (and, also, Intel components for things like NICs and SSDs). But we're always interested in optimizing the cost of running our service so that we can provide products at a low cost and high gross margin.&lt;/p&gt;
&lt;p&gt;We're also mindful of events like the &lt;a href=&quot;https://blog.cloudflare.com/meltdown-spectre-non-technical/&quot;&gt;Spectre and Meltdown&lt;/a&gt; vulnerabilities and have been working with outside parties on research into mitigation and exploitation which we hope to publish later this year.&lt;/p&gt;
&lt;p&gt;We looked very seriously at &lt;a href=&quot;https://blog.cloudflare.com/arm-takes-wing/&quot;&gt;ARM-based CPUs&lt;/a&gt; and continue to keep our software up to date for the ARM architecture so that we can use ARM-based CPUs when the requests per watt is interesting to us.&lt;/p&gt;
&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/02/gen-x-color-Friday--twitter@2x.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;In the meantime, we've deployed AMD's EPYC processors as part of Gen X server platform and for the first time are not using any Intel components at all. This week, we announced details of this tenth generation of servers. Below is a recap of why we're excited about the design, specifications, and performance of our newest hardware.&lt;/p&gt;

&lt;p&gt;Every server can run every service. This architectural decision has helped us achieve higher efficiency across the Cloudflare network. It has also given us more flexibility to build new software or adopt the newest available hardware.&lt;/p&gt;
&lt;p&gt;Notably, Intel is not inside. We are not using their hardware for any major server components such as the CPU, board, memory, storage, network interface card (or any type of accelerator).&lt;/p&gt;
&lt;p&gt;This time, AMD is inside.&lt;/p&gt;
&lt;p&gt;Compared with our prior server (&lt;a href=&quot;https://blog.cloudflare.com/a-tour-inside-cloudflares-g9-servers/&quot;&gt;Gen 9&lt;/a&gt;), our Gen X server processes as much as 36% more requests while costing substantially less. Additionally, it enables a ~50% decrease in L3 cache miss rate and up to 50% decrease in NGINX p99 latency, powered by a CPU rated at 25% lower TDP (thermal design power) per core.&lt;/p&gt;

&lt;p&gt;To identify the most efficient CPU for our software stack, we ran several benchmarks for key workloads such as cryptography, compression, regular expressions, and LuaJIT. Then, we simulated typical requests we see, before testing servers in live production to measure requests per watt.    &lt;/p&gt;&lt;p&gt;Based on our findings, we selected the single socket 48-core AMD 2nd Gen EPYC 7642.&lt;br/&gt;&lt;/p&gt;
&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/02/pasted-image-0.png&quot; class=&quot;kg-image&quot;/&gt;
&lt;p&gt;The single AMD EPYC 7642 performed very well during our lab testing, beating our &lt;a href=&quot;https://blog.cloudflare.com/a-tour-inside-cloudflares-g9-servers/&quot;&gt;Gen 9&lt;/a&gt; server with dual Intel Xeon Platinum 6162 with the same total number of cores. Key factors we noticed were its large L3 cache, which led to a low L3 cache miss rate, as well as a higher sustained operating frequency.&lt;/p&gt;

&lt;p&gt;Partnering with AMD, we tuned the 2nd Gen EPYC 7642 processor to achieve additional 6% performance. We achieved this by using power determinism and configuring the CPU's Thermal Design Power (TDP).&lt;/p&gt;

&lt;p&gt;Finally, we described how we use Secure Memory Encryption (SME), an interesting security feature within the System on a Chip architecture of the AMD EPYC line. We were impressed by how we could achieve RAM encryption without significant decrease in performance. This reduces the worry that any data could be exfiltrated from a stolen server.&lt;/p&gt;
&lt;p&gt;We enjoy designing hardware that improves the security, performance and reliability of our global network, trusted by over 26 million Internet properties.&lt;/p&gt;
&lt;p&gt;Want to help us evaluate new hardware? &lt;a href=&quot;https://www.cloudflare.com/careers/&quot;&gt;Join us&lt;/a&gt;!&lt;/p&gt;
</description>
<pubDate>Sun, 01 Mar 2020 13:05:17 +0000</pubDate>
<dc:creator>jgrahamc</dc:creator>
<og:type>article</og:type>
<og:title>Technical Details of Why Cloudflare Chose AMD EPYC for Gen X Servers</og:title>
<og:description>Looking back at this week's posts on the design, specifications, and performance of Cloudflare’s Gen X servers using AMD EPYC CPUs.</og:description>
<og:url>https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/</og:url>
<og:image>https://blog-cloudflare-com-assets.storage.googleapis.com/2020/02/gen-x-color-Friday--twitter@2x-2.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/</dc:identifier>
</item>
<item>
<title>Learn Awk by Example (2019)</title>
<link>https://github.com/thewhitetulip/awk-anti-textbook/</link>
<guid isPermaLink="true" >https://github.com/thewhitetulip/awk-anti-textbook/</guid>
<description>&lt;h2&gt;What is this?&lt;/h2&gt;
&lt;p&gt;This is an easy to understand example based tutorial aimed at those who know nothing of awk.&lt;/p&gt;
&lt;h2&gt;Multiversity&lt;/h2&gt;
&lt;p&gt;This guide is a part of the &lt;a href=&quot;https://github.com/thewhitetulip/multiversity&quot;&gt;Multiversity&lt;/a&gt; initiative. The aim is to have high quality open source tutorials along with screencasts.&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome all Pull Requests, please raise an issue before starting your work!&lt;/p&gt;
&lt;h2&gt;Philosophy&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Through this book we want to teach how to write awk scripts. The user is not expected to know awk, but the user is expected to know programming, or at least one programming language.&lt;/li&gt;
&lt;li&gt;The book shall comprise of chapters, if the topic is huge and doesn't fit into one chapter, then we split into multiple chapters, if possible.&lt;/li&gt;
&lt;li&gt;Each chapter should be split into logical parts or sections with a meaningful title which'll teach the reader something.&lt;/li&gt;
&lt;li&gt;Every concept should be accompanied by code (if there is any).&lt;/li&gt;
&lt;li&gt;The code shouldn't be more than 80 characters wide because in the PDF versions of the book the code is invisible.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Brevity is the soul of wit&lt;/em&gt;, please keep the description as small as possible. This doesn't mean we skip it, but try to explain it in as simple words as possible. in such cases do explain the concept.&lt;/li&gt;
&lt;li&gt;The main title should have one #, sections should have 2 #'s sub section should have 4 and notes should have 6 #'s (note should have a title too).&lt;/li&gt;
&lt;li&gt;Multi-line code should use &lt;a href=&quot;https://help.github.com/articles/creating-and-highlighting-code-blocks/&quot;&gt;syntax fencing&lt;/a&gt;, single line of code can be indented using tabs or by backticks.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Written with love in India with help from the Internet.&lt;/p&gt;

&lt;p&gt;Book License: &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot; rel=&quot;nofollow&quot;&gt;CC BY-SA 3.0 License&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Links&lt;/h5&gt;
</description>
<pubDate>Sun, 01 Mar 2020 08:16:08 +0000</pubDate>
<dc:creator>thewhitetulip</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/6261877?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>thewhitetulip/awk-anti-textbook</og:title>
<og:url>https://github.com/thewhitetulip/awk-anti-textbook</og:url>
<og:description>learn awk by example. Contribute to thewhitetulip/awk-anti-textbook development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/thewhitetulip/awk-anti-textbook/</dc:identifier>
</item>
<item>
<title>How many users block Google analytics? (2017)</title>
<link>https://blog.wesleyac.com/posts/google-analytics</link>
<guid isPermaLink="true" >https://blog.wesleyac.com/posts/google-analytics</guid>
<description>&lt;div id=&quot;&quot;&gt;
&lt;p&gt;Comparing Google Analytics with server logs&lt;/p&gt;
&lt;div class=&quot;article-list-footer&quot;&gt;&lt;span class=&quot;article-list-date&quot;&gt;October 23, 2017&lt;/span&gt; &lt;span class=&quot;article-list-divider&quot;&gt;-&lt;/span&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;div readability=&quot;73.916525662719&quot;&gt;
&lt;p&gt;I've been running Google Analytics on my blog for around a year now, and every time I look at the data it provides, I trust it less and less. Frequently, the statistics it provides are misleading, if not flat-out wrong&lt;sup id=&quot;fnref1&quot;&gt;&lt;a href=&quot;https://blog.wesleyac.com/posts/google-analytics#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. And in addition to that, many people block google analytics, so I don't actually know how many views I'm getting.&lt;/p&gt;
&lt;p&gt;A few days ago, I decided to compare my google analytics dashboard with my server logs&lt;sup id=&quot;fnref2&quot;&gt;&lt;a href=&quot;https://blog.wesleyac.com/posts/google-analytics#fn2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; to see how many people actually block google analytics. Here's what I found:&lt;/p&gt;
&lt;p&gt;Out of 1,253 users in my sample, 565 blocked google analytics (≈45%). The breakdown by browser was as follows:&lt;/p&gt;
&lt;center&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Browser&lt;/th&gt;
&lt;th&gt;% Blocking&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Chrome&lt;/td&gt;
&lt;td&gt;37%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Firefox&lt;/td&gt;
&lt;td&gt;70%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Safari&lt;/td&gt;
&lt;td&gt;39%&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;
&lt;p&gt;There were a few other browsers in the sample, but there wasn't enough data about them to be meaningful (There were &amp;lt;10 users of every other browser in my sample). I was expecting Firefox to be the largest, but it was a bit surprising to me that Safari and Chrome were approximately equal - I would have expected Chrome to be higher.&lt;/p&gt;
&lt;p&gt;By operating system, it broke down as follows:&lt;/p&gt;
&lt;center&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Operating System&lt;/th&gt;
&lt;th&gt;% Blocking&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Mac&lt;/td&gt;
&lt;td&gt;48%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;49%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;0%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;17%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Linux (non-Android)&lt;/td&gt;
&lt;td&gt;67%&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ChromeOS&lt;/td&gt;
&lt;td&gt;53%&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;
&lt;p&gt;There was also one BSD user in the sample, who blocked google analytics.&lt;/p&gt;
&lt;p&gt;I think the only really surprising thing about this is how high the percentage on ChromeOS is - I would have expected it to be much lower. This also shows how bad the adblocking situation is on mobile right now - I'd imagine most users who block GA/ads on desktop would also want to on mobile, but can't just because it's so difficult to set up an adblocker on mobile.&lt;/p&gt;
&lt;p&gt;It's worth noting that my blog is absolutely not average, since I attract a much more technical audience, but the numbers should be roughly transferable to other programming blogs.&lt;/p&gt;

&lt;/div&gt;&lt;p&gt;If you're in NYC and want to meet up over lunch/coffee to chat about the future of technology, &lt;a href=&quot;mailto:me@wesleyac.com&quot;&gt;get in touch with me&lt;/a&gt;.&lt;/p&gt;</description>
<pubDate>Sun, 01 Mar 2020 01:39:36 +0000</pubDate>
<dc:creator>luu</dc:creator>
<og:title>How many users block google analytics?</og:title>
<og:type>website</og:type>
<og:url>/posts/google-analytics</og:url>
<og:description>Comparing Google Analytics with server logs</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.wesleyac.com/posts/google-analytics</dc:identifier>
</item>
<item>
<title>Ask HN: Good ways to capture institutional knowledge?</title>
<link>https://news.ycombinator.com/item?id=22454333</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=22454333</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: Good ways to capture institutional knowledge?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;12.32&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;7.92&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;22454333&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22454333&quot; class=&quot;storylink&quot;&gt;Ask HN: Good ways to capture institutional knowledge?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.75949367088608&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_22454333&quot;&gt;465 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=alhirzel&quot; class=&quot;hnuser&quot;&gt;alhirzel&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22454333&quot;&gt;1 day ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_22454333&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=22454333&amp;amp;goto=item%3Fid%3D22454333&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Good%20ways%20to%20capture%20institutional%20knowledge%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20Good%20ways%20to%20capture%20institutional%20knowledge%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=22454333&amp;amp;auth=db1d8c1c20cd62c86825cea08dee9bfcfd77760a&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=22454333&quot;&gt;197 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;Successful companies institutionalize the knowledge of their employees; this leads to better continuity and faster on-boarding. Things like huge monorepos of useful code, internal tools, process manuals, etc. are example products of this. Young companies tend to depend on the dedication and talent of key individuals, and in maturation, must somehow make the jump to institutionalized knowledge (so that &quot;if someone got hit by a bus&quot; things are ok). What are some successful methods you have used or seen used to accomplish this transition? What are problems you faced (skeptics, opponents, etc.)? I am involved with an organization that is slowly growing, is about to lose key personnel, and is looking to prepare.&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.73972602739726&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;a href=&quot;https://www.ycombinator.com/apply/&quot;&gt;Applications are open for YC Summer 2020&lt;/a&gt;&lt;/center&gt;
&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Sun, 01 Mar 2020 00:50:36 +0000</pubDate>
<dc:creator>alhirzel</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=22454333</dc:identifier>
</item>
<item>
<title>Flutter and Dart, or how to quickly build a mobile app without losing your hair</title>
<link>https://altkomsoftware.pl/blog/flutter-dart-quickly-build-mobile-app-without-losing-much-hair/</link>
<guid isPermaLink="true" >https://altkomsoftware.pl/blog/flutter-dart-quickly-build-mobile-app-without-losing-much-hair/</guid>
<description>&lt;div class=&quot;entry-meta ht-post-info&quot;&gt;
&lt;ul id=&quot;breadcrumbs&quot; class=&quot;breadcrumbs&quot;&gt;&lt;li class=&quot;item-home&quot;&gt;&lt;a class=&quot;bread-link bread-home&quot; href=&quot;https://altkomsoftware.pl&quot; title=&quot;Homepage&quot;&gt;Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;separator separator-home&quot;&gt;&amp;gt;&lt;/li&gt;
&lt;li class=&quot;item-cat&quot;&gt;&lt;a href=&quot;https://altkomsoftware.pl/category/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;separator&quot;&gt;&amp;gt;&lt;/li&gt;
&lt;li class=&quot;item-current item-5696&quot;&gt;&lt;strong class=&quot;bread-current bread-5696&quot; title=&quot;Flutter + Dart, or how to quickly build a mobile app without losing (too much of) your hair&quot;&gt;Flutter + Dart, or how to quickly build a mobile app without losing (too much of) your hair&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;ht-blog-date&quot;&gt;27/02/2020&lt;/div&gt;
&lt;/div&gt;
 &lt;a href=&quot;https://altkomsoftware.pl/blog/flutter-dart-quickly-build-mobile-app-without-losing-much-hair/&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img/https://altkomsoftware.pl/wp-content/uploads/2020/02/Blog_400x280px_FlutterDart-400x280.png&quot; alt=&quot;Flutter + Dart, or how to quickly build a mobile app without losing (too much of) your hair&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait/https://altkomsoftware.pl/wp-content/uploads/2020/02/Blog_400x280px_FlutterDart-400x280.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img/https://altkomsoftware.pl/wp-content/uploads/2020/02/Blog_400x280px_FlutterDart-400x280.png&quot; alt=&quot;Flutter + Dart, or how to quickly build a mobile app without losing (too much of) your hair&quot;/&gt;&lt;/a&gt;

&lt;p&gt;In this day and age there’s a steady influx of new, revolutionary frameworks, be it frontend-related or mobile. If one has been active in web development, she or he should be well acquainted with the constant oversupply of fresh, ingenious approaches and lightweight solutions to complex problems. This usually solves one issue and creates another – instead of wondering whether there is a technology that’s viable for us to use, we are currently left with the equally frustrating choice of which one of them we should pick.&lt;/p&gt;
&lt;p&gt;This is why when I stumbled upon &lt;a href=&quot;https://flutter.dev&quot;&gt;Flutter&lt;/a&gt;, I was quite interested in giving it a go – could it be a viable contender, or maybe even serve as a go-to solution that would give this dilemma at least a moment’s pause?&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;What is it?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Flutter&lt;/strong&gt; is a mobile app UI SDK by Google. It utilizes the &lt;strong&gt;&lt;a href=&quot;https://dart.dev&quot;&gt;Dart&lt;/a&gt; VM&lt;/strong&gt; (which boasts to be optimized for UI specifically, also by Google), giving us the opportunity to develop for &lt;strong&gt;both mobile and desktop devices&lt;/strong&gt;. Dart itself &lt;a href=&quot;https://dart.dev/tutorials/web/get-started&quot;&gt;can also be used for web development&lt;/a&gt;, even &lt;a href=&quot;https://angulardart.dev&quot;&gt;in tandem with the all-too-familiar Angular framework&lt;/a&gt;, but that’s a story for another day.&lt;/p&gt;
&lt;p&gt;It provides us with &lt;strong&gt;AoT (ahead-of-time) compilation&lt;/strong&gt; to native machine code, which aims at the fastest possible execution time for the completed app, without too much of an overhead.&lt;/p&gt;
&lt;p&gt;For developers, it offers its &lt;strong&gt;JIT (just-in-time)&lt;/strong&gt; compiler and the &lt;strong&gt;Hot Reload feature&lt;/strong&gt;, which enables one to change the application without losing its state – which is quite nifty, as the pain of changing UI in a ‘deep’ feature and having to navigate to it with each iteration is well known to anyone who has ever worked on UI.&lt;/p&gt;
&lt;p&gt;An important part of the SDK is, of course, its control library. As Flutter aims at developing both for Android and iOS, it gives the option of using either &lt;a href=&quot;https://material.io&quot;&gt;&lt;strong&gt;Material&lt;/strong&gt;&lt;/a&gt; (Google, Android) or &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/ios/overview/themes/&quot;&gt;&lt;strong&gt;Cupertino&lt;/strong&gt;&lt;/a&gt; (Apple, iOS) control set. ‘Does it mean the application switches its looks whether it’s deployed on an Android or iOS phone so it &lt;strong&gt;looks native on both&lt;/strong&gt;? Sweet!’ &lt;strong&gt;Not really&lt;/strong&gt;. You can use either of the libraries, or you can use both – that much is true, but there’s no uniform UI switching functionality. It can, of course, be implemented manually – and I’m not saying that it’s something not to be done ever. Bear in mind though – functionality like that implies managing two different sets of layout controls, which can quickly turn ugly and, therefore, such an approach should be made cautiously.&lt;/p&gt;
&lt;p&gt;Everything in Flutter is, by default, a &lt;strong&gt;widget&lt;/strong&gt;. If you have any experience in Angular 2+, it’s pretty much a fancy Component and should be a pretty familiar concept. This base type contains, by default, a build method which defines the look and feel and can customize it based on passed parameters and context. Widgets can be either &lt;strong&gt;stateless or stateful&lt;/strong&gt;. Stateless widgets don’t undergo any discernible mutations during their lifecycle – they are mostly static. Stateful widgets, on the other hand, are built each time they are triggered to (for example, when a watched variable changes, user performs a specific action – like a click – etc.).&lt;/p&gt;
&lt;p&gt;This would be a good time to mention that &lt;strong&gt;Flutter is reactive&lt;/strong&gt; (akin to React), which means there’s no default ongoing refresh loop like in Angular. Instead once key actions are performed – the UI or part thereof (like one of its widgets) redraws itself, according to changes in state.&lt;/p&gt;
&lt;p&gt;I’ve already mentioned Dart boasts to be optimized for UI – what does that mean, though? In this case, rich collection handling, &lt;a href=&quot;https://dart.dev/guides/language/language-tour#isolates&quot;&gt;isolate-based concurrency&lt;/a&gt; and &lt;a href=&quot;https://dart.dev/codelabs/async-await&quot;&gt;async-await with futures&lt;/a&gt;. I’d say this pretty much tells us that the intended application of the SDK is building business apps, rather than, say, games. It’d be wrong to assume that people won’t explore making &lt;a href=&quot;https://flutterawesome.com/tag/games/&quot;&gt;games using Flutter&lt;/a&gt; though, there’s even a &lt;a href=&quot;https://flame-engine.org&quot;&gt;2D game engine&lt;/a&gt;. The point I’m trying to make is that this mode of application seems like a perfect fit for this specific set of features, and that’s the angle I’ve decided to explore myself.&lt;/p&gt;

&lt;h2&gt;The risks&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Although this all sounds quite good, there’s also a flip side.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Firstly, &lt;strong&gt;Flutter is still a fledgeling SDK&lt;/strong&gt;. It is mature for its age, but it should be noted that it’s alpha launched in May 2017, while 1.0 was released in December 2018. Which means that at the point in time when this post is being written, it’s still just a one year old release. What are the consequences? The community – while sizable – is still not quite up to par with those of currently mainstream technologies. This affects the ability to find solutions for some common problems, and you might hit a dead end on more than one occasion – requiring from you additional work and going through specs. However, Flutter is well documented, and the community is ever-growing, so we might mark it up as a ‘work in progress’ sort of thing, rather than a distinct flaw.&lt;/p&gt;
&lt;p&gt;Secondly (and this can be seen as both a flaw and an advantage), &lt;strong&gt;both Flutter and Dart come from Google. The good part&lt;/strong&gt; of it is that Google is a tech giant, and if they want to maintain something, they have the resources and manpower to do it. &lt;strong&gt;The bad part&lt;/strong&gt; is that while Google is known to introduce useful tech and services, it’s also &lt;a href=&quot;https://en.wikipedia.org/wiki/Orkut&quot;&gt;known&lt;/a&gt; to &lt;a href=&quot;https://en.wikipedia.org/wiki/Google%2B&quot;&gt;kill off&lt;/a&gt; or &lt;a href=&quot;https://arstechnica.com/gadgets/2019/01/the-great-google-hangouts-shutdown-begins-october-2019/&quot;&gt;retire&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Goggles&quot;&gt;them when they’re deemed obsolete. That’s why there’s always the risk that Flutter might eventually end up here&lt;/a&gt;, but that might not happen soon, maybe even not for another couple of years. So yes, it’s a risk, but then again – it’s &lt;strong&gt;the same for any relatively new technology&lt;/strong&gt;, and every tech has its beginnings.&lt;/p&gt;

&lt;h2&gt;What tools do we get?&lt;/h2&gt;
&lt;p&gt;Flutter can be developed from within the most common programming IDEs – we’ve got &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt;, &lt;a href=&quot;https://www.jetbrains.com/idea/download/&quot;&gt;IntelliJ IDEA&lt;/a&gt;, there’s also a &lt;a href=&quot;https://code.visualstudio.com&quot;&gt;Visual Studio Code&lt;/a&gt; plugin – which means that most developers won’t have to stray too far from their default environment. In my case, as recently I’ve been doing more web-oriented work, the choice was VS Code, but this shouldn’t affect the development in any meaningful way as text files are still fortunately just text files. The target platform will be Android (the reasons for this choice are quite down-to-earth – I simply neither own an iPhone, MacBook, nor even an iMac), so it looks like I’ll be installing Android Studio anyway – for its VM.&lt;/p&gt;
&lt;p&gt;Aside from the IDE there are also the &lt;a href=&quot;https://flutter.dev/docs/development/tools/devtools/overview&quot;&gt;Flutter/Dart DevTools&lt;/a&gt;, which are a suite designed to monitor the app’s performance and provide some debugging instruments, like the &lt;a href=&quot;https://flutter.dev/docs/development/tools/devtools/inspector&quot;&gt;Flutter inspector&lt;/a&gt;, which acts pretty similar to its WebTools counterpart. The real-time resource monitor is potentially a huge help in finding the app’s performance bottlenecks and the hierarchical inspector – in seeking out possibly redundant nestings, which plague UIs of many apps and websites alike.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Getting started – our ‘Hello World’ is all business&lt;/h2&gt;
&lt;p&gt;What’s more exciting than writing a mobile application for managing your insurance policies? It’s important to note that I might try to do some things in different ways, resulting in code inconsistencies. The app is supposed to contain some ideas and examples on how to solve common scenarios, without deciding on which one is best.&lt;/p&gt;
&lt;p&gt;A simple overview of the app-to-be:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Has a ‘home’ screen with bought policies summary&lt;/li&gt;
&lt;li&gt;Lets you register a policy&lt;/li&gt;
&lt;li&gt;Policy registration is achieved via a wizard&lt;/li&gt;
&lt;li&gt;Policies can be of different types&lt;/li&gt;
&lt;li&gt;Insurance subjects can be of different types&lt;/li&gt;
&lt;li&gt;User has an account (no anonymous use)&lt;/li&gt;
&lt;li&gt;The app is a ‘light client’ – all dictionaries, data and operations are stored server-side&lt;/li&gt;
&lt;li&gt;Request/response body format is JSON&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Our API will be simulated by &lt;a href=&quot;https://mockoon.com&quot;&gt;Mockoon&lt;/a&gt;, I’ll be using VS Code as the IDE, and the device will be provided by Android Emulator (I’ve settled for a Nexus 6 API 28). As a starting point I’m using &lt;a href=&quot;https://flutter.dev/docs/get-started/install&quot;&gt;the official guide and empty app created according to Flutter’s official website&lt;/a&gt;, followed &lt;a href=&quot;https://flutter.dev/docs/get-started/test-drive?tab=vscode&quot;&gt;up to the point where we have a barebones Flutter project&lt;/a&gt;. In my case it got me the structure on &lt;strong&gt;fig.1&lt;/strong&gt;. &lt;strong&gt;&lt;a href=&quot;https://github.com/asc-lab/personal-insurance-flutter-poc&quot;&gt;You’ll find the complete app code here&lt;/a&gt;&lt;/strong&gt;, and I suggest browsing it alongside this post, as it will be referred to all the time. This part of the post is, after all, mainly about pointing out potentially useful chunks of code and the purpose they could serve.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fig.1&lt;/strong&gt;. &lt;a href=&quot;https://github.com/asc-lab/personal-insurance-flutter-poc&quot;&gt;&lt;strong&gt;You’ll find the complete app code here&lt;/strong&gt;&lt;/a&gt;, and I suggest browsing it alongside this post, as it will be referred to all the time. This part of the post is, after all, mainly about pointing out potentially useful chunks of code and the purpose they could serve.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5708 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_211/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png&quot; alt=&quot;&quot; width=&quot;211&quot; height=&quot;323&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_211/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png 211w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_196/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17-196x300.png 196w&quot; sizes=&quot;(max-width: 211px) 100vw, 211px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5708 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_211,h_323/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_211/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png&quot; alt=&quot;&quot; width=&quot;211&quot; height=&quot;323&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_211/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17.png 211w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_196/https://altkomsoftware.pl/wp-content/uploads/2020/02/image17-196x300.png 196w&quot; data-sizes=&quot;(max-width: 211px) 100vw, 211px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Fig. 1&lt;/strong&gt;: The initial state of the project&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Taking a look around and inspecting the foundations&lt;/h2&gt;
&lt;p&gt;The file &lt;strong&gt;pubspec.yaml&lt;/strong&gt; holds the project’s &lt;strong&gt;dependencies, assets and version number&lt;/strong&gt; – pretty straightforward. It’s also seeded with lots of informative comments, but we won’t be doing much work with it, at least not on a daily basis. What’s most important for us is the lib folder, as there lies the root of our application, the &lt;strong&gt;main.dart&lt;/strong&gt; file, and in it – the &lt;strong&gt;main()&lt;/strong&gt; method. This is the entry point to our application, and no code should go beyond that point. Alright, time for some scaffolding.&lt;/p&gt;
&lt;p&gt;The homepage is the default view, or route, of our application. There’ we’ll be displaying a bunch of policies. So, surely getting the dictionaries from our api would seem appropriate. I’ve built a singleton service that calls the API service and makes the dictionaries available before the application even starts, so that the data is readily available wherever in the application we end up. It’s called &lt;strong&gt;CommonData&lt;/strong&gt;, and the dictionaries API service – &lt;strong&gt;DictionariesService&lt;/strong&gt;. Both are located in the &lt;strong&gt;lib/services&lt;/strong&gt; folder. I’ve also added a helper service (called &lt;strong&gt;Helper&lt;/strong&gt;, another naming masterpiece) for universally used functionality, like a default padding, common conversions etc.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5709 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_487/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png&quot; alt=&quot;&quot; width=&quot;487&quot; height=&quot;501&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_487/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png 487w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_292/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22-292x300.png 292w&quot; sizes=&quot;(max-width: 487px) 100vw, 487px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5709 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_487,h_501/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_487/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png&quot; alt=&quot;&quot; width=&quot;487&quot; height=&quot;501&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_487/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22.png 487w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_292/https://altkomsoftware.pl/wp-content/uploads/2020/02/image22-292x300.png 292w&quot; data-sizes=&quot;(max-width: 487px) 100vw, 487px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 2: commonData.dart&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;CommonData (&lt;strong&gt;fig.2&lt;/strong&gt;) is a singleton with an internal constructor, which stores its only instance within a static field of itself. In the app &lt;strong&gt;we won’t be using the CommonData class definition anywhere else – only its commonData instance&lt;/strong&gt; declared in this file. The &lt;strong&gt;DictionariesService.get()&lt;/strong&gt; method returns a &lt;strong&gt;Future&amp;lt;DictionariesService&amp;gt;&lt;/strong&gt;, which is basically a promise. This means we can either await its result and continue with code execution of &lt;strong&gt;initialize()&lt;/strong&gt; once everything’s ready, or use a .then(…) and return early. We want &lt;strong&gt;initialize()&lt;/strong&gt; to finish once we’ve received a response, so we’ll use await. We’ll get to the implementation of DictionariesService.get() later.&lt;/p&gt;
&lt;p&gt;After a bit of research it turned out hooking commonData.initialize() to run before the UI even gets drawn is quite trivial – it’s enough to place it in our main() (&lt;strong&gt;fig. 3&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5710 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_325/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png&quot; alt=&quot;&quot; width=&quot;325&quot; height=&quot;119&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_325/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png 325w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24-300x110.png 300w&quot; sizes=&quot;(max-width: 325px) 100vw, 325px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5710 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_325,h_119/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_325/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png&quot; alt=&quot;&quot; width=&quot;325&quot; height=&quot;119&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_325/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24.png 325w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image24-300x110.png 300w&quot; data-sizes=&quot;(max-width: 325px) 100vw, 325px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 3: commonData gets initialized before we even run the app itself&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This way wherever we are in the app, we’ll always be sure commonData was initialized, as the app itself is executed AFTER initialize() completes. Such a solution could be useful in many cases, like a server-stored application profile or theme, data staging, application setup etc. In case of asynchronous operations, thought, we should be handling them on the home screen, where we can display some sort of loading indicator (which we’ll see in action as well). This would prevent the user from seeing a blank screen on startup and wondering whether the application crashed. That’s why if we absolutely have to do something before the app properly starts up, it’s probably best to stick to operations with a predictable, negligible execution time or create a separate ‘loading’ screen with some animation and a clear ‘loading’ message to put the user at ease, do it there and navigate home upon completion. I’m leaving this ‘&lt;strong&gt;awkward preload&lt;/strong&gt;’ in the application as a sort of a &lt;strong&gt;UX anti-pattern&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let’s take a look at the &lt;strong&gt;MyApp&lt;/strong&gt; class, located just below &lt;strong&gt;main()&lt;/strong&gt;. Its body is mainly the overridden &lt;strong&gt;build(BuildContext)&lt;/strong&gt; method – which is called every time the MyApp widget is being redrawn. Our app has more than one screen – home and 5 steps of the policy registration wizard (policy type, product, covers, owner, and subject), hence I’ve conducted a careful study of the subject in question (&lt;strong&gt;fig. 4&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5711 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_623/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png&quot; alt=&quot;&quot; width=&quot;623&quot; height=&quot;281&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_623/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png 623w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1-300x135.png 300w&quot; sizes=&quot;(max-width: 623px) 100vw, 623px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5711 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_623,h_281/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_623/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png&quot; alt=&quot;&quot; width=&quot;623&quot; height=&quot;281&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_623/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1.png 623w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image1-300x135.png 300w&quot; data-sizes=&quot;(max-width: 623px) 100vw, 623px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 4: Flutter application navigation research&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So, navigation in Flutter is called ‘routing’. I’ve created some routes according to one of the many tutorials (&lt;strong&gt;fig. 5)&lt;/strong&gt;. A default, initial route – this is our &lt;strong&gt;MyHomePage&lt;/strong&gt; widget – and five wizard steps. We’ll see if we will need to access the build context, but it’s nice to have it on standby.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5712 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_484/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png&quot; alt=&quot;&quot; width=&quot;484&quot; height=&quot;455&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_484/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png 484w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21-300x282.png 300w&quot; sizes=&quot;(max-width: 484px) 100vw, 484px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5712 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_484,h_455/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_484/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png&quot; alt=&quot;&quot; width=&quot;484&quot; height=&quot;455&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_484/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21.png 484w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image21-300x282.png 300w&quot; data-sizes=&quot;(max-width: 484px) 100vw, 484px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 5: basic routing in a Flutter app&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Flutter in a Material world&lt;/h2&gt;
&lt;p&gt;This is a good moment to mention that, because our app uses the Material control set and is a &lt;strong&gt;MaterialApp&lt;/strong&gt; instance, we can quickly change its aesthetics following the &lt;a href=&quot;https://material.io&quot;&gt;&lt;strong&gt;Material Design&lt;/strong&gt;&lt;/a&gt; principles. The &lt;strong&gt;ThemeData&lt;/strong&gt; class contains ‘&lt;strong&gt;color and typography data for a material design theme&lt;/strong&gt;’. It can be accessed within the application via a static method: &lt;strong&gt;Theme.of(BuildContext)&lt;/strong&gt; and hooked up to various properties if we need to change their default, theme-driven value. For now we’ll just set the &lt;strong&gt;primarySwatch&lt;/strong&gt; (the leading color of the application and its various shades) and the &lt;strong&gt;accentColor&lt;/strong&gt; (also an assembly of color shades, the app’s de facto secondary color). If we stick to using the theme’s defaults and/or generated values (which we will try to do), we should end up with a more or less visually appealing UI. If we don’t want to use the default color swatches, we can easily define our own (&lt;strong&gt;fig.6&lt;/strong&gt;). It’s a lot of conceptual work though (unless we’re given a style guide by the client), and I would like to avoid creating some sort of aesthetic abomination, so I’ll keep it simple. There is also a myriad of material color swatch generators on the web that offer the option of generating one if you provide the ‘primary’ shade. There is an option of setting the &lt;strong&gt;errorColor&lt;/strong&gt;, but as a person that has had his toe stuck in the UI/UX field, I advise you to &lt;strong&gt;approach&lt;/strong&gt; it &lt;strong&gt;with caution&lt;/strong&gt; – the standard &lt;strong&gt;red&lt;/strong&gt; is pretty much the error indication &lt;strong&gt;industry standard&lt;/strong&gt;. Avoid changing it if the color scheme allows us to do so, maybe change the shade just a bit?&lt;/p&gt;
&lt;p&gt;This is also a fun way of testing the &lt;strong&gt;Hot Reload&lt;/strong&gt; feature – try changing theme colors, save, and then see the app change before your eyes. For me, it’s quite satisfying.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5713 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_319/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png&quot; alt=&quot;&quot; width=&quot;319&quot; height=&quot;306&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_319/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png 319w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15-300x288.png 300w&quot; sizes=&quot;(max-width: 319px) 100vw, 319px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5713 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_319,h_306/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_319/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png&quot; alt=&quot;&quot; width=&quot;319&quot; height=&quot;306&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_319/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15.png 319w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image15-300x288.png 300w&quot; data-sizes=&quot;(max-width: 319px) 100vw, 319px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 6: an example custom color swatch.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Homepage&lt;/h2&gt;
&lt;p&gt;The homepage is basically a &lt;strong&gt;list of tiles&lt;/strong&gt; which represent individual policies and expand to show their details, there is also an option of registering a new policy. The tile should therefore be stateful, as its look mutates, but the page can remain stateless. Yes, it displays a list of a variable length, but its elements – nor their values – do not change during its lifecycle. Note that if we didn’t separate the tiles into standalone widgets (and instead handled everything in one monster of a class) then it would have to be stateful.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5714 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_379/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png&quot; alt=&quot;&quot; width=&quot;379&quot; height=&quot;133&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_379/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png 379w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10-300x105.png 300w&quot; sizes=&quot;(max-width: 379px) 100vw, 379px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5714 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_379,h_133/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_379/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png&quot; alt=&quot;&quot; width=&quot;379&quot; height=&quot;133&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_379/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10.png 379w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image10-300x105.png 300w&quot; data-sizes=&quot;(max-width: 379px) 100vw, 379px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 7: MyHomePage data initialization&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Let’s start with the data needed for our route (&lt;strong&gt;fig. 7&lt;/strong&gt;). Whatever logic we place here will be executed each time we navigate to ‘/’. In this case it’s convenient – each time we end up on the home screen, we’ll have up-to-date account data and a list of registered policies. That way we’ve already solved a problem we’d be facing in the future: how to refresh the home screen after completing the wizard; Now all we have to do is navigate back.&lt;/p&gt;
&lt;p&gt;Inside &lt;strong&gt;MyHomePage&lt;/strong&gt; (homepage.dart) you can finally see some UI definition. The root of our page is an aptly named &lt;strong&gt;Scaffold&lt;/strong&gt;, which lets us set an app bar, an action button, the body of the document and various other options – effectively a template for a general purpose mobile app. If undefined, the part will be omitted (i.e. no footer = no footer, not an empty footer). The appBar is minimal, there’s a floatingActionButton to initiate the new policy wizard, backgroundColor has been hooked up to the current theme’s backgroundColor (to maintain consistency if we decide to change colors), and there’s of course the meat of the matter – the body.&lt;/p&gt;
&lt;p&gt;The policies, as noted earlier, are wrapped in a &lt;strong&gt;Future&lt;/strong&gt; – they aren’t ready to be passed along to a simple ListView. That’s what &lt;strong&gt;FutureBuilder&amp;lt;&amp;gt;&lt;/strong&gt; is for: It’s in fact a widget, that returns content based on a Future’s internal state. Using the snapshot (&lt;a href=&quot;https://api.flutter.dev/flutter/widgets/AsyncSnapshot-class.html&quot;&gt;AsyncSnapshot&lt;/a&gt;) variable we can return different widgets depending on whether the Future has already finished or is still in progress, or if it contains an error and so on. In our case we’ll return a ListView if it’s done, and a loading indicator if it isn’t – pretty standard stuff. It could probably be a good idea to wrap any possible error handling for this into some sort of a universal method in the Helper class that accepts the snapshot.connectionState and outputs some generic error, there are many options on how to solve borked Futures – here, for the sake of brevity, I’m using none of them. It’s done or it’s loading.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5715 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_781/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png&quot; alt=&quot;&quot; width=&quot;781&quot; height=&quot;305&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_781/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png 781w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9-300x117.png 300w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9-768x300.png 768w&quot; sizes=&quot;(max-width: 781px) 100vw, 781px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5715 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_781,h_305/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_781/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png&quot; alt=&quot;&quot; width=&quot;781&quot; height=&quot;305&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_781/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9.png 781w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9-300x117.png 300w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image9-768x300.png 768w&quot; data-sizes=&quot;(max-width: 781px) 100vw, 781px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 8: FutureBuilder in action&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Moving on to the &lt;strong&gt;HomepageTile&lt;/strong&gt; widget – our first stateful UI part. Every StatefulWidget consists of the &lt;strong&gt;widget declaration&lt;/strong&gt; (&lt;strong&gt;fig. 9&lt;/strong&gt;) and its &lt;strong&gt;state&lt;/strong&gt; – and the state is where the magic happens.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5716 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_448/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png&quot; alt=&quot;&quot; width=&quot;448&quot; height=&quot;153&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_448/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png 448w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4-300x102.png 300w&quot; sizes=&quot;(max-width: 448px) 100vw, 448px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5716 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_448,h_153/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_448/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png&quot; alt=&quot;&quot; width=&quot;448&quot; height=&quot;153&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_448/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4.png 448w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image4-300x102.png 300w&quot; data-sizes=&quot;(max-width: 448px) 100vw, 448px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 9: The StatefulWidget. Not much to look at here – practically a state factory&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The UI of the widget is defined in the state, in its build method. There, every use of &lt;strong&gt;setState(fn)&lt;/strong&gt; tells the framework to rebuild, reevaluating its &lt;strong&gt;build(BuildContext)&lt;/strong&gt; method with updated property values. Here I’m using the &lt;strong&gt;_expanded&lt;/strong&gt; field value as a condition whether I return the mini &lt;strong&gt;_buildMiniTile()&lt;/strong&gt; or verbose &lt;strong&gt;_buildMaxiTile()&lt;/strong&gt; widget version. It could, of course, be a matter of just a simple conditional assignment, but let’s make it look better with an &lt;strong&gt;AnimatedCrossFade&lt;/strong&gt; widget. It does exactly what it says on the tin – it crossfades one child with another according to its crossFadeState (&lt;strong&gt;fig. 10&lt;/strong&gt;). Thanks to the fact that on each setState the widget gets rebuilt it’s possible to juggle between more than two states, but it’s a rather unusual scenario – getting to a state with a specific number of taps sounds a bit like teasing the user or playing a ‘hidden object’ game unless very strongly visually implied.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5717 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_390/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png&quot; alt=&quot;&quot; width=&quot;390&quot; height=&quot;170&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_390/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png 390w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18-300x131.png 300w&quot; sizes=&quot;(max-width: 390px) 100vw, 390px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5717 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_390,h_170/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_390/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png&quot; alt=&quot;&quot; width=&quot;390&quot; height=&quot;170&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_390/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18.png 390w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image18-300x131.png 300w&quot; data-sizes=&quot;(max-width: 390px) 100vw, 390px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 10: AnimatedCrossFade, driven by the _expanded value&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alright, so we know how to create a home screen with generic tiles mapped to user’s policies. The time has come to see how the app is being fed the data we’ve got set up in our Mockoon API. For this purpose we should open up the &lt;strong&gt;DictionariesService&lt;/strong&gt; (fig. 11).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5718 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_681/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png&quot; alt=&quot;&quot; width=&quot;681&quot; height=&quot;532&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_681/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png 681w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6-300x234.png 300w&quot; sizes=&quot;(max-width: 681px) 100vw, 681px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5718 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_681,h_532/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_681/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png&quot; alt=&quot;&quot; width=&quot;681&quot; height=&quot;532&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_681/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6.png 681w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image6-300x234.png 300w&quot; data-sizes=&quot;(max-width: 681px) 100vw, 681px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 11: DictionariesService – not much, but enough&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the &lt;strong&gt;get()&lt;/strong&gt; method is marked as async – this means that whatever we return will be wrapped in a &lt;strong&gt;Future&amp;lt;&amp;gt;&lt;/strong&gt;, to accommodate its promise-like handling. The &lt;strong&gt;http&lt;/strong&gt; client executes our command asynchronously and provides the response, status code and all. Just below we’re mapping json (whose type is by default &lt;strong&gt;Map&amp;lt;String, dynamic&amp;gt;&lt;/strong&gt;) to our DTO objects. Since these are dictionaries, I’ve taken the liberty of creating maps for them so we won’t have to iterate through all the entries when we need to display a name corresponding to a specific code (i.e.: commonData.maps[DictCode.PRODUCT_TYPE][_policy.type]).&lt;/p&gt;
&lt;p&gt;Next, let’s take a look at our DTOs. There’s no ‘default’ option of turning json into objects, but fortunately there are plugins. In my case it’s &lt;a href=&quot;https://pub.dev/packages/json_annotation&quot;&gt;json_annotation&lt;/a&gt; which, once started as a watcher with ‘flutter packages pub run build_runner watch’ will look for the @JsonSerializable annotation and create mapping functions – as we can see on &lt;strong&gt;fig. 12-13&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5719 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_695/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png&quot; alt=&quot;&quot; width=&quot;695&quot; height=&quot;361&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_695/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png 695w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16-300x156.png 300w&quot; sizes=&quot;(max-width: 695px) 100vw, 695px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5719 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_695,h_361/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_695/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png&quot; alt=&quot;&quot; width=&quot;695&quot; height=&quot;361&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_695/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16.png 695w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image16-300x156.png 300w&quot; data-sizes=&quot;(max-width: 695px) 100vw, 695px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 12: policy.dart – our DTO class&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5721 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_622/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png&quot; alt=&quot;&quot; width=&quot;622&quot; height=&quot;573&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_622/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png 622w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5-300x276.png 300w&quot; sizes=&quot;(max-width: 622px) 100vw, 622px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5721 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_622,h_573/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_622/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png&quot; alt=&quot;&quot; width=&quot;622&quot; height=&quot;573&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_622/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5.png 622w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image5-300x276.png 300w&quot; data-sizes=&quot;(max-width: 622px) 100vw, 622px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 13: policy.g.dart – generated by json_annotation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This simplifies things greatly for us and provides an easy way to map our classes both to and from json.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;The Wizard&lt;/h2&gt;
&lt;p&gt;Two important parts of almost every conceivable business app out there are forms and validation. Let’s see what we’re working with while checking out code for the insurance policy wizard. The &lt;strong&gt;first two steps&lt;/strong&gt; (1_newPolicyType, 2_newPolicyProduct) are all &lt;strong&gt;pretty standard stuff&lt;/strong&gt; found in all the other ones so i’ll be skipping them. If you want to see an example &lt;strong&gt;how to asynchronously perform a calculation&lt;/strong&gt; while the use is filling the data in, check out the &lt;strong&gt;3_newPolicyCovers&lt;/strong&gt; step – it contains a dummy implementation for one of life’s greatest mysteries, premium calculation.&lt;br/&gt;&lt;/p&gt;
&lt;h2&gt;Giving our app Form&lt;/h2&gt;
&lt;p&gt;Definition of forms looks pretty standard – we define a &lt;strong&gt;Form&lt;/strong&gt; object, handle it a pre-generated &lt;strong&gt;GlobalKey&amp;lt;FormState&amp;gt;&lt;/strong&gt; key and then define its elements, as seen both in the &lt;strong&gt;4_newPolicyYou.dart&lt;/strong&gt; file and on &lt;strong&gt;fig. 14&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5722 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_573/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png&quot; alt=&quot;&quot; width=&quot;573&quot; height=&quot;588&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_573/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png 573w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_292/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3-292x300.png 292w&quot; sizes=&quot;(max-width: 573px) 100vw, 573px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5722 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_573,h_588/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_573/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png&quot; alt=&quot;&quot; width=&quot;573&quot; height=&quot;588&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_573/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3.png 573w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_292/https://altkomsoftware.pl/wp-content/uploads/2020/02/image3-292x300.png 292w&quot; data-sizes=&quot;(max-width: 573px) 100vw, 573px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 14: 4_newPolicyYou.dart – pretty straightforward form declaration. Note the use of Helper to minimize code clutter.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The form can interact with the data in many ways, so it’s possible to design it in line with the developer’s preference. If we want a &lt;strong&gt;pseudo two-way-binding&lt;/strong&gt; behavior, we can persist the value in the &lt;strong&gt;onChanged&lt;/strong&gt; handler inside a &lt;strong&gt;setState&lt;/strong&gt; wrapper. We can, however, just use the dedicated onSaved and persist the data once the form is all ready – which is the course I’ve decided to take. The &lt;strong&gt;Step4Builder&lt;/strong&gt; class (&lt;strong&gt;fig. 15&lt;/strong&gt;) holds the ever-present wizard sequence – if form is valid, save and move on. &lt;strong&gt;Injecting data into the form&lt;/strong&gt; is handled with ease – since we’re passing &lt;strong&gt;values from the model&lt;/strong&gt; (processData) into respective controls’ &lt;strong&gt;initialValue&lt;/strong&gt;, they will update with each &lt;strong&gt;setState&lt;/strong&gt; operation. That’s why we can simply &lt;strong&gt;fill the model’s fields (processData.setOwnerFromAccount&lt;/strong&gt;) and then &lt;strong&gt;reset the form&lt;/strong&gt; using its key (&lt;strong&gt;this._formKey.currentState.reset&lt;/strong&gt;) which will cause it to &lt;strong&gt;reevaluate the initial values&lt;/strong&gt; of the fields – grabbing them straight &lt;strong&gt;from the model&lt;/strong&gt;. Why reset the form at all though? This will ensure that the fields we didn’t fill in setOwnerFromAccount get assigned their default values, which will still be in the model, as long as we don’t persist the form-stored values.&lt;/p&gt;
&lt;p&gt;This is just one strategy – in different scenarios we might encounter different preferred solutions, but it’s easy to notice that we aren’t forced to deal with them in a specific way.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5723 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_542/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png&quot; alt=&quot;&quot; width=&quot;542&quot; height=&quot;155&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_542/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png 542w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12-300x86.png 300w&quot; sizes=&quot;(max-width: 542px) 100vw, 542px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5723 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_542,h_155/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_542/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png&quot; alt=&quot;&quot; width=&quot;542&quot; height=&quot;155&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_542/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12.png 542w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image12-300x86.png 300w&quot; data-sizes=&quot;(max-width: 542px) 100vw, 542px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 15: Step4Builder – if valid, save and go to the next step. Nice and clean.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Achieving dynamic form layout does not differ much from classic js/html shenanigans. On the wizard’s final step, &lt;strong&gt;5_newPolicySubject.dart&lt;/strong&gt;, we’re supposed to register &lt;strong&gt;data of the policy’s subject&lt;/strong&gt;, which implies the use of &lt;strong&gt;different forms depending on its type&lt;/strong&gt; (a car, a person, a lizard, and so on). We’ll achieve that by defining different fieldsets defined in &lt;strong&gt;separate widgets&lt;/strong&gt; and showing the ones that fit our choices in the previous steps. In the application there’s &lt;strong&gt;only one&lt;/strong&gt; type implemented (&lt;strong&gt;reptileObject.dart&lt;/strong&gt;), but more can be added simply by performing a check in the build method (&lt;strong&gt;fig. 16&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5724 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_973/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png&quot; alt=&quot;&quot; width=&quot;973&quot; height=&quot;97&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_973/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png 973w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14-300x30.png 300w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14-768x77.png 768w&quot; sizes=&quot;(max-width: 973px) 100vw, 973px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5724 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_973,h_97/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_973/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png&quot; alt=&quot;&quot; width=&quot;973&quot; height=&quot;97&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_973/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14.png 973w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14-300x30.png 300w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image14-768x77.png 768w&quot; data-sizes=&quot;(max-width: 973px) 100vw, 973px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 16: 5_newPolicySubject.dart: since all I’m thinking of is insuring my pet which (presumably) is a lizard, the only available form definition is the ReptileObject, but nothing prevents us from inserting an IF statement into the child property that will supply the correct one.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Okay, so we’ve got some textboxes and a dropdown – time for everyone’s favorite control, the &lt;strong&gt;date control&lt;/strong&gt;… which &lt;strong&gt;does not exist&lt;/strong&gt;. This &lt;strong&gt;may seem strange&lt;/strong&gt; if we’ve never had a chance to develop a mobile app &lt;strong&gt;but&lt;/strong&gt;, when we think about it a little longer, it &lt;strong&gt;makes perfect sense. It’s always preferable to use the native system’s method of input&lt;/strong&gt; (for example, we do not define our very own special keyboard-control-3000-XP, we just use the one provided by the system), and each mobile system has its own date input method in the form of a calendar. That’s why our ‘date input’ will be just a read-only TextFormField, which will ask the system to supply its value when we touch it. An example is contained within the aforementioned &lt;strong&gt;reptileObject.dart&lt;/strong&gt; file (&lt;strong&gt;fig. 17-18&lt;/strong&gt;).&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5725 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_629/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png&quot; alt=&quot;&quot; width=&quot;629&quot; height=&quot;131&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_629/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png 629w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20-300x62.png 300w&quot; sizes=&quot;(max-width: 629px) 100vw, 629px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5725 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_629,h_131/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_629/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png&quot; alt=&quot;&quot; width=&quot;629&quot; height=&quot;131&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_629/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20.png 629w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image20-300x62.png 300w&quot; data-sizes=&quot;(max-width: 629px) 100vw, 629px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5726 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_468/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png&quot; alt=&quot;&quot; width=&quot;468&quot; height=&quot;269&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_468/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png 468w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23-300x172.png 300w&quot; sizes=&quot;(max-width: 468px) 100vw, 468px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5726 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_468,h_269/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_468/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png&quot; alt=&quot;&quot; width=&quot;468&quot; height=&quot;269&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_468/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23.png 468w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image23-300x172.png 300w&quot; data-sizes=&quot;(max-width: 468px) 100vw, 468px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 17-18: reptileObject.dart – The TextFormField has a very limited amount of responsibility – to tell the system that the user needs to input a date, and to display the result of this action. We’ve defined an onTap handler to intercept any attempt to interact with the control and make it show the system datepicker instead. As it’s an asynchronous action (the user can take as much time as required), the whole method is appropriately marked.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Validation – let’s put that errorColor to work&lt;/h2&gt;
&lt;p&gt;Now that the form is in place, all that’s left is to provide some rudimentary data validation. The convention is quite simple: each form control has a ‘validator’ property, which accepts a function, with the value as the input and a string as the output. If the output is non-empty, its contents (which are considered a validation error message) are shown in the appropriate area. A simple example of combined validation (two criteria, two messages) can be seen on &lt;strong&gt;fig. 19&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5727 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_395/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png&quot; alt=&quot;&quot; width=&quot;395&quot; height=&quot;264&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_395/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png 395w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19-300x201.png 300w&quot; sizes=&quot;(max-width: 395px) 100vw, 395px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5727 size-full&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_395,h_264/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_395/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png&quot; alt=&quot;&quot; width=&quot;395&quot; height=&quot;264&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_395/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19.png 395w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_300/https://altkomsoftware.pl/wp-content/uploads/2020/02/image19-300x201.png 300w&quot; data-sizes=&quot;(max-width: 395px) 100vw, 395px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Fig. 19: A simple validation – if Validations.required returned an error message, return it. Otherwise check if input is a valid email address. If not, return our custom message.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is all good and well, but what in case we have to perform an &lt;strong&gt;asynchronous validation&lt;/strong&gt;, like a username availability check? Well… &lt;strong&gt;tough luck&lt;/strong&gt;. &lt;a href=&quot;https://github.com/flutter/flutter/issues/9688&quot;&gt;&lt;strong&gt;Flutter does not support Future&amp;lt;&amp;gt; in validators&lt;/strong&gt;&lt;/a&gt;, and most likely it never will, as it was stated that it could break sync validation, and mixing the two isn’t a good UI practice anyway because &lt;a href=&quot;https://github.com/flutter/flutter/issues/9688&quot;&gt;&lt;strong&gt;reasons&lt;/strong&gt;&lt;/a&gt;.&lt;br/&gt;Even if we take this as a fact, &lt;strong&gt;it does not prevent us from facing a scenario in which we simply must perform a validation server-side&lt;/strong&gt;, with the only alternative being loading gigabytes worth of data into the device’s memory. Fortunately, &lt;strong&gt;there’s a sort-of-accepted workaround&lt;/strong&gt; which is pretty simple. &lt;strong&gt;In the validator&lt;/strong&gt;, we &lt;strong&gt;perform the call&lt;/strong&gt; and &lt;strong&gt;toggle&lt;/strong&gt; a &lt;strong&gt;local flag&lt;/strong&gt;. If the flag is up, we don’t display any validation message. Upon the call’s completion, &lt;strong&gt;we save the result&lt;/strong&gt; into some local variable, &lt;strong&gt;toggle the flag&lt;/strong&gt; and &lt;strong&gt;manually trigger&lt;/strong&gt; the form’s &lt;strong&gt;validation&lt;/strong&gt;. This way the first time the validator is triggered no message is shown (or we might show a ‘please wait…’ to indicate an action in progress), and the second time it changes to the action’s result (which would have to override the hypothetical ‘please wait’). The whole process – with an &lt;strong&gt;example&lt;/strong&gt; – is available &lt;strong&gt;in the linked post&lt;/strong&gt;.&lt;br/&gt;So yes, while async validation is possible this way, it stands to reason to expect the SDK to support it out of the box. It’s &lt;strong&gt;possible&lt;/strong&gt;, but it &lt;strong&gt;could be cleaner&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Nevertheless, we prevailed – our app is up and running, and it didn’t even take much time, all things considered. We’ve covered most of the basics when implementing a business app, and there weren’t really any roadblocks – all in all, I think we could mark it off as a success. We’re ready to remove the loading anti-pattern, clean up, integrate with a backend, and do a complete rework after the first round of customer feedback.&lt;/p&gt;
&lt;p&gt;Let’s have a look at this beaut:&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Home screen, default and expanded&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image13.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5730 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13.png 1125w&quot; sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5730 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_576,h_1024/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-576x1024.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image13.png 1125w&quot; data-sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Covers selection, better get that ‘bad puns’ one&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image8.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5731 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8.png 1125w&quot; sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5731 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_576,h_1024/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-576x1024.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image8.png 1125w&quot; data-sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Policy holder data, with an autofill option&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://altkomsoftware.pl/wp-content/uploads/2020/02/image2.png&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-5732 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2.png 1125w&quot; sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;img class=&quot;lazyload aligncenter wp-image-5732 size-large&quot; src=&quot;https://cdn.shortpixel.ai/client/q_lqip,ret_wait,w_576,h_1024/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-576x1024.png&quot; data-src=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-576x1024.png&quot; alt=&quot;&quot; width=&quot;576&quot; height=&quot;1024&quot; data-srcset=&quot;https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_576/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-576x1024.png 576w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_169/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-169x300.png 169w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_768/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2-768x1365.png 768w, https://cdn.shortpixel.ai/client/q_glossy,ret_img,w_1125/https://altkomsoftware.pl/wp-content/uploads/2020/02/image2.png 1125w&quot; data-sizes=&quot;(max-width: 576px) 100vw, 576px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Policy subject screen, count these legs carefully&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;So, should you use Flutter for creating a mobile app? To decide that, I think one should consider a few things in making this decision – and for different people the final answer may vary.&lt;/p&gt;
&lt;p&gt;If the &lt;strong&gt;mobile app&lt;/strong&gt; you’re about to write is your &lt;strong&gt;first&lt;/strong&gt; of its kind – I’d say &lt;strong&gt;go for it&lt;/strong&gt;. Flutter has got a quite &lt;strong&gt;accommodating learning curve&lt;/strong&gt;, and does not require any obscure knowledge. The tutorials and materials available make it &lt;strong&gt;pretty easy to determine&lt;/strong&gt; what can we use in specific scenarios, and &lt;strong&gt;what tools we have at our disposal&lt;/strong&gt;. When learning a framework that’s been around for years, some practices can be deemed too obvious to describe, consequently making them very hard to find out about. As it’s a relatively new tech, no question is too obvious, and there aren’t many oh-everybody-knows-that tricks buried forever under a mountain of new feature issues. For an experienced mobile developer, on the other hand, things stand as with every other new technology. When committing to write an advanced, multi-feature app, the bigger it is, the better it is if you’ve got any experience in the technologies used. However, if you’ve got a &lt;strong&gt;small app&lt;/strong&gt; to write, &lt;strong&gt;Flutter might prove an invaluable tool in rapid development&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In terms of the &lt;strong&gt;community&lt;/strong&gt;, it’s still growing. It’s not overwhelmingly vast, but it’s not miniscule either. Opinions on this may differ, but I think its &lt;strong&gt;current size warrants small- to mid-sized app development&lt;/strong&gt;. The bigger the user base, the more edge cases have been researched, and the bigger the chance you’ll find help when in need, so since the &lt;strong&gt;community is steadily growing, large-scale projects&lt;/strong&gt; are becoming &lt;strong&gt;more and more viable&lt;/strong&gt;, and &lt;strong&gt;less and less of a risk – provided it won’t be killed off&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There are currently many apps developed with flutter – it’s not an exotic, niche framework anymore. &lt;a href=&quot;https://flutter.dev/showcase&quot;&gt;&lt;strong&gt;As seen on the official website&lt;/strong&gt;&lt;/a&gt;, &lt;strong&gt;not only Google uses it&lt;/strong&gt;, but some &lt;strong&gt;big-brand companies&lt;/strong&gt; as well. This bodes well for the technology’s support plan, and is quite an enticement to at least giving it a try. Considering how relatively fresh the tech is, that these companies had probably had to do a little RnD before greenlighting a public app, and they still went with it – &lt;strong&gt;It does not seem like using it is that much of a risk anymore&lt;/strong&gt;. It’s certainly viable and, given time (if at some point it won’t get bogged down with a hefty overhead and overly-complicated architecture), it &lt;strong&gt;has a chance of becoming a go-to solution for mobile apps&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As we all know, the &lt;strong&gt;market can be fickle, trends change&lt;/strong&gt; and all that… But that should never stop us from exploring the new. And, in the end, &lt;strong&gt;Flutter seems worthy of our time&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Author: Wojciech Kuroczycki, Lead Developer&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;strong&gt;Czy podobał Ci się artykuł?&lt;/strong&gt;&lt;/span&gt; Jeśli tak, udostępnij go w swojej sieci!&lt;/span&gt;


</description>
<pubDate>Sat, 29 Feb 2020 23:57:52 +0000</pubDate>
<dc:creator>witek1902</dc:creator>
<og:type>article</og:type>
<og:title>Flutter + Dart, or how to quickly build a mobile app without losing (too much of) your hair - Software House Altkom Software &amp; Consulting</og:title>
<og:description>In this day and age there’s a steady influx of new, revolutionary frameworks, be it frontend-related or mobile. If one has been active in web development, she or he should be well acquainted with the constant oversupply of fresh, ingenious approaches and lightweight solutions to complex problems. This usually solves one issue and creates another …</og:description>
<og:url>https://altkomsoftware.pl/blog/flutter-dart-quickly-build-mobile-app-without-losing-much-hair/</og:url>
<og:image>https://altkomsoftware.pl/wp-content/uploads/2020/02/Blog_400x280px_FlutterDart.png</og:image>
<dc:language>pl-PL</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://altkomsoftware.pl/blog/flutter-dart-quickly-build-mobile-app-without-losing-much-hair/</dc:identifier>
</item>
<item>
<title>64 bit OS Raspberry Pi4 Benchmarks</title>
<link>https://medium.com/@matteocroce/why-you-should-run-a-64-bit-os-on-your-raspberry-pi4-bd5290d48947</link>
<guid isPermaLink="true" >https://medium.com/@matteocroce/why-you-should-run-a-64-bit-os-on-your-raspberry-pi4-bd5290d48947</guid>
<description>&lt;div readability=&quot;5.6451612903226&quot;&gt;

&lt;div class=&quot;dl&quot;&gt;
&lt;div class=&quot;n dm dn do dp&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a rel=&quot;noopener&quot; href=&quot;https://medium.com/@matteocroce?source=post_page-----bd5290d48947----------------------&quot;&gt;&lt;img alt=&quot;Matteo Croce&quot; class=&quot;r dq dr ds&quot; src=&quot;https://miro.medium.com/fit/c/96/96/0*O2PhiD2WBlET29-P.&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;5672&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;One of the cool thing of working for a software company is that very often you get new hardware prototypes to test.&lt;br/&gt;But this is not the case, I bought the Rpi4 because it’s extremely cheap!&lt;/p&gt;
&lt;p id=&quot;e411&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;The Rpi4 comes with a quad core ARM Cortex A72, up to 4 GB of RAM and a gigabit ethernet port, at a very low price of 35 $.&lt;br/&gt;Raspberry provides &lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian/&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;Raspbian&lt;/a&gt; (a Debian derivative), an already ready distro for their products, so I put it on an sd card to boot it quickly.&lt;br/&gt;I was looking at the syslog and I noticed that, uh, both the kernel and the whole userland are compiled as armv7, which means 32 bit ARM.&lt;/p&gt;
&lt;p id=&quot;02ce&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;I know for sure that the RPi4 is 64 bit capable, so I refused to run a 32 bit OS on it. I get another sd card and I installed Debian on it. A lean and mean Debian compiled as &lt;a href=&quot;https://en.wikipedia.org/wiki/ARM_architecture#AArch64&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;aarch64&lt;/a&gt;, which means 64 bit ARM.&lt;br/&gt;As soon as the 64 bit OS booted, I was curious to know how much it performs better than the 32 bit one, so I did some tests.&lt;/p&gt;

&lt;p id=&quot;917c&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;The first test which came to my mind was the old drystone bench which exists since the dawn of time&lt;/p&gt;

&lt;p id=&quot;1297&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;dhrystone is a program written in the 1988 which does some math calculations.&lt;br/&gt;It’s unlikely to simulate any modern workload, the only way we still use it is to have somewhat consistency between past architecure and softwares.&lt;br/&gt;A modern number crunching application could be some hash calculation, so I wanted to do a &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;SHA1&lt;/a&gt; test. Unfortunately the Debian sha1sum utility was compiled without libssl or kernel crypto support, so I had to compile it from source.&lt;br/&gt;To avoid I/O bottleneck, I calculated the hash of a 2 GB sparse file as with &lt;code class=&quot;hg hm hn ho hp b&quot;&gt;truncate -s 2GB&lt;/code&gt;, so the I/O from the sd card was zero:&lt;/p&gt;

&lt;p id=&quot;53be&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;SHA1 hash is a more real life benchmark that dhrystone as this algorithm is used in really a lot applications, e.g. torrent, git, etc.&lt;/p&gt;
&lt;h2 id=&quot;dfa8&quot; class=&quot;hq gc ct bk bj gd hr hs ht hu hv hw hx hy hz ia ib&quot;&gt;RAM&lt;/h2&gt;
&lt;p id=&quot;342d&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;A 64 bit system means that RAM can be accessed in 8 byte read/writes per instruction.&lt;br/&gt;I wrote a &lt;a href=&quot;https://pastebin.com/ZHyjehtD&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;simple tool&lt;/a&gt; which allocates a big buffer, writes it and then reads it back. To be sure that &lt;a href=&quot;http://engineering.pivotal.io/post/virtual_memory_settings_in_linux_-_the_problem_with_overcommit/&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;the RAM was really allocated&lt;/a&gt; I used mlock() on the whole buffer. In this test the buffer is 2 GB; a 3 GB buffer worked in 64 bit mode but gave an out-of-memory error in 32 bit.&lt;/p&gt;

&lt;h2 id=&quot;adfe&quot; class=&quot;hq gc ct bk bj gd hr hs ht hu hv hw hx hy hz ia ib&quot;&gt;Audio encoding&lt;/h2&gt;
&lt;p id=&quot;0a47&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;I noticed that many Rpi users use the board as mediacenter, so I did an audio encoding with the two most used codecs.&lt;br/&gt;I encoded “Echoes” by Pink Floyd because it’s a very long track to obtain some measurable values. To avoid I/O both the source and the destination file were on a ramfs:&lt;/p&gt;



&lt;p id=&quot;4081&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;Another usage of the Raspberry boards is to act a simple VPN or firewall.&lt;br/&gt;I don’t endorse the usage of such systems for this purpose, but many people have still slow &amp;lt;100 mbit links, so they can turn a blind eye on the bad Rpi performances.&lt;br/&gt;The first question is: how much traffic can the Rpi4 handle?&lt;br/&gt;We need to measure the pure networking power of the board, without the limitations of the physical interface first, so I run an iperf3 session between two containers.&lt;br/&gt;Beware, containers use to comunicate via a veth pair, and veth is known to accelerate the traffic via a lot of fake offloads.&lt;br/&gt;IP checksum offload is done by just skipping the checksum calculation, while TCP segmentation offload is done by never segmenting or reassembling the traffic: big chunk of 64k data are just passed in memory as is.&lt;br/&gt;To overcome it, I disabled the offloadings with &lt;code class=&quot;hg hm hn ho hp b&quot;&gt;ethtool -K veth0 tx off rx off tso off gro off gso off&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;f791&quot; class=&quot;hq gc ct bk bj gd hr hs ht hu hv hw hx hy hz ia ib&quot;&gt;Firewalling&lt;/h2&gt;
&lt;p id=&quot;05df&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;The fastest thing that a network appliance can do is to drop traffic, and the fastest way to drop traffic is via a TC drop rule. To avoid reaching the line rate, I used the minimum ethernet frame size, 64 byte.&lt;br/&gt;This is a drop rate test.&lt;/p&gt;

&lt;p id=&quot;419b&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;Although both systems were unable to reach the line rate (which is 1.5 Mpps), the 64 bit kernel scored a bit more than the 32 bit one. If you want to use the Rpi4 as firewall, a 64 bit kernel is definitely a must have.&lt;/p&gt;
&lt;h2 id=&quot;2490&quot; class=&quot;hq gc ct bk bj gd hr hs ht hu hv hw hx hy hz ia ib&quot;&gt;VPN&lt;/h2&gt;
&lt;p id=&quot;0a90&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;Another common usage of the Rpi is as VPN server, &lt;a href=&quot;https://openvpn.net/&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;OpenVPN&lt;/a&gt; to be precise.&lt;br/&gt;My preferred VPN software is &lt;a href=&quot;https://www.wireguard.com/&quot; class=&quot;at ey fx fy fz ga&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot;&gt;WireGuard&lt;/a&gt;, so I tested both, as both are very simple to setup:&lt;/p&gt;

&lt;p id=&quot;50a2&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;As expected, OpenVPN is 10x slower than WireGuard. A less expected result is that OpenVPN performs the same in both 32 and 64 bit mode.&lt;br/&gt;WireGuard instead, almost saturates the gigabit port in both versions, indeed we have the same results with both kernel, probably we hit the NIC limit.&lt;br/&gt;To check if WireGuard could go even faster, I did another VPN test using two containers, so I skip the physical ethernet.&lt;br/&gt;The only drawback with this container test is that both the iperf3 client and server were running on the Rpi4, keeping two cores busy.&lt;/p&gt;

&lt;p id=&quot;ff40&quot; class=&quot;fj fk ct bk fl b fm fn fo fp fq fr fs ft fu fv fw cl&quot;&gt;As expected, OpenVPN and 32 bit WireGuard, which were CPU limited, performed worse, while 64 bit WireGuard performed better.&lt;/p&gt;

&lt;p id=&quot;c98c&quot; class=&quot;fj fk ct bk fl b fm gn fo go fq gp fs gq fu gr fw cl&quot;&gt;Often I read statements like “It’s not worth it”, “you will gain a few milliseconds”, etc. just because the Rpi is not that powerful.&lt;br/&gt;That’s not true! As any embedded guy may know, with slow hardwares, having a very optimized software is even more important than with powerful ones.&lt;br/&gt;I already knew that a 64 bit OS would perform better on the Rpi4, what I didn’t knew was how much.&lt;br/&gt;This is why I did this test series, I hope that you enjoy reading it!&lt;/p&gt;
</description>
<pubDate>Sat, 29 Feb 2020 19:10:10 +0000</pubDate>
<dc:creator>tosh</dc:creator>
<og:type>article</og:type>
<og:title>Why you should run a 64 bit OS on your Raspberry Pi4</og:title>
<og:description>no matter the use case</og:description>
<og:url>https://medium.com/@matteocroce/why-you-should-run-a-64-bit-os-on-your-raspberry-pi4-bd5290d48947</og:url>
<og:image>https://miro.medium.com/max/700/1*sY2HsFt0GZ8rXwg34IGw8g.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/@matteocroce/why-you-should-run-a-64-bit-os-on-your-raspberry-pi4-bd5290d48947</dc:identifier>
</item>
<item>
<title>2020 Leap Day Bugs</title>
<link>https://codeofmatt.com/list-of-2020-leap-day-bugs/</link>
<guid isPermaLink="true" >https://codeofmatt.com/list-of-2020-leap-day-bugs/</guid>
<description>&lt;p&gt;The following is a list of many bugs caught on or near leap day, February 29th, 2020.  Each link below references the issue with supporting details where available.  This list does &lt;em&gt;not&lt;/em&gt; include bugs that were already caught and repaired before they could have impact on leap day.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Last updated 2020-03-01 12:12 PM PST&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;verified-unresolved&quot;&gt;Verified / Unresolved&lt;/h4&gt;
&lt;p&gt;Items in this section have been verified, and have not yet been resolved.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Players of the video game &lt;a href=&quot;https://en.wikipedia.org/wiki/Dragon_Ball_Xenoverse_2&quot;&gt;Dragon Ball Xenoverse 2&lt;/a&gt; encountered &lt;a href=&quot;https://twitter.com/TheRechow/status/1233643339402141697&quot;&gt;a crash on Feb 29th on the first character select screen&lt;/a&gt;.  The issue &lt;a href=&quot;https://twitter.com/TheRechow/status/1233873570759094273&quot;&gt;has been acknowledged&lt;/a&gt; by the company, stating a fix is planned.  (The game &lt;a href=&quot;https://twitter.com/novi_skull/status/1234182339317485568&quot;&gt;continues to crash&lt;/a&gt; even though leap day has passed.)&lt;/li&gt;
&lt;li&gt;Users of &lt;a href=&quot;https://www.gohenry.com/&quot;&gt;gohenry&lt;/a&gt;, a pocket money management app for children and parents, had an issue with scheduled allowances not being paid on Feb 29th.  Reports: &lt;a href=&quot;https://twitter.com/CookeAnalytics/status/1233742158965899264&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/DonnaXRae/status/1233682272525717506&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/laceybloke/status/1233729027434844165&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/Taller_stories/status/1233733016910016512&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/fredngingermad/status/1233749312909303808&quot;&gt;5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Users of &lt;a href=&quot;https://github.com/jamesbarnett91/tplink-energy-monitor&quot;&gt;TPLink Energy Monitor&lt;/a&gt; noticed on Feb 29th that the entire month of February &lt;a href=&quot;https://github.com/jamesbarnett91/tplink-energy-monitor/issues/63&quot;&gt;dropped off from daily reported values&lt;/a&gt;.  One user also noted that the &lt;a href=&quot;https://www.tp-link.com/us/kasa-smart/kasa.html&quot;&gt;TP-Link Kasa&lt;/a&gt; application appeared to have a similar issue, and thus speculated it may be a device-side problem.&lt;/li&gt;
&lt;li&gt;The Python package &lt;a href=&quot;https://github.com/joke2k/faker/blob/master/README.rst&quot;&gt;Faker&lt;/a&gt;, used to generate fake data for testing purposes, &lt;a href=&quot;https://github.com/joke2k/faker/issues/1123&quot;&gt;failed when ran on Feb 29th&lt;/a&gt;.  A fix is pending.&lt;/li&gt;
&lt;li&gt;The Python package &lt;a href=&quot;https://github.com/codecov/timestring&quot;&gt;timestring&lt;/a&gt;, which is used to parse strings into usable time objects, &lt;a href=&quot;https://github.com/codecov/timestring/issues/62&quot;&gt;failed handling dates of February 29th&lt;/a&gt;.  This lead to &lt;a href=&quot;https://github.com/HEPData/hepdata/issues/181&quot;&gt;an issue&lt;/a&gt; in &lt;a href=&quot;https://www.hepdata.net/&quot;&gt;HEPData&lt;/a&gt;, a site related to high-energy physic data.  A fix is pending for both.&lt;/li&gt;
&lt;li&gt;The C logging library &lt;a href=&quot;https://goatshriek.github.io/stumpless/&quot;&gt;Stumpless&lt;/a&gt; failed on leap day due to a &lt;a href=&quot;https://github.com/goatshriek/stumpless/pull/62&quot;&gt;botched conditional check&lt;/a&gt;.  A fix is pending.&lt;/li&gt;
&lt;li&gt;The command line utility &lt;a href=&quot;https://the.exa.website/&quot;&gt;&lt;code&gt;exa&lt;/code&gt;&lt;/a&gt;, a replacement for &lt;code&gt;ls&lt;/code&gt;, shows file timestamps from Feb 29th &lt;a href=&quot;https://github.com/ogham/exa/issues/638&quot;&gt;incorrectly as March 1st&lt;/a&gt;.  The issue was &lt;a href=&quot;https://github.com/ogham/exa/issues/101&quot;&gt;also reported last leap year&lt;/a&gt;, but has not yet been repaired.&lt;/li&gt;
&lt;li&gt;The Python package &lt;a href=&quot;https://aioftp.readthedocs.io/&quot;&gt;aioftp&lt;/a&gt;, an ftp client/server for asyncio, &lt;a href=&quot;https://github.com/aio-libs/aioftp/issues/107&quot;&gt;has a problem&lt;/a&gt; related to the leap day with listing files.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;verified-uncertain-cause&quot;&gt;Verified / Uncertain Cause&lt;/h4&gt;
&lt;p&gt;Items in this section have been verified to have occurred near the leap day, but may or may not have been caused by a leap year bug.&lt;/p&gt;
&lt;h4 id=&quot;unconfirmed&quot;&gt;Unconfirmed&lt;/h4&gt;
&lt;p&gt;These items surfaced during my search or were brought to my attention by others, however I have not been able to confirm their validity.  They may possibly not have happened at all.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Some reported the date on their wristwatch skipped over the leap day, including &lt;a href=&quot;https://twitter.com/scottcale/status/1233639798675345410&quot;&gt;a Timex Expedition watch&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/SULTANAIF/status/1233744689959968777&quot;&gt;a Casio watch&lt;/a&gt;.  Another person &lt;a href=&quot;https://twitter.com/dchest/status/1233874658052710400&quot;&gt;gave a photo of various Casio watches&lt;/a&gt; including several that &lt;em&gt;were&lt;/em&gt; working correctly, and an &lt;a href=&quot;https://www.casio.com/products/watches/classic/f91w-1&quot;&gt;F91W-1&lt;/a&gt; which was not (though that is by design since that model does not keep track of the year, per &lt;a href=&quot;https://support.casio.com/storage/en/manual/pdf/EN/009/qw593.pdf&quot;&gt;its documentation&lt;/a&gt;.).&lt;/li&gt;
&lt;li&gt;A user of the app for a Brazilian supermarket, Pão de Açúcar, &lt;a href=&quot;https://twitter.com/kievgama/status/1233763206134403077&quot;&gt;highlighted a possible error&lt;/a&gt; with the app on Feb 29th.&lt;/li&gt;
&lt;li&gt;A person reported &lt;a href=&quot;https://twitter.com/XavierTorch/status/1233724847819296768&quot;&gt;a possible bug with Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some people reported probable leap year bugs with their Amazon purchase experiences.  Reports: &lt;a href=&quot;https://twitter.com/MaartenJS/status/1233582077905272832&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dijjitalj/status/1233730826136846338&quot;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Several users of Google Maps have seen wildly incorrect routes for transit navigation on in King County, Washington, USA on Feb 29th.  It's unclear if the issue is with Google Maps, or with the underlying data source.  Reports: &lt;a href=&quot;https://www.reddit.com/r/Seattle/comments/fbdf40/heads_up_as_of_this_morning_google_maps_is/&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=22452754&quot;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A person reported that all of the &lt;a href=&quot;https://www.yealink.com/products_42.html&quot;&gt;Yealink T56&lt;/a&gt; business desk phones &lt;a href=&quot;https://news.ycombinator.com/item?id=22452842&quot;&gt;displayed February calendar events for the wrong day&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;One person &lt;a href=&quot;https://news.ycombinator.com/item?id=22453171&quot;&gt;reported&lt;/a&gt; that LinkedIn listed the time they had been with their current employer incorrectly.&lt;/li&gt;
&lt;li&gt;A firearms dealer &lt;a href=&quot;https://twitter.com/LancoTactical/status/1233862151447683073&quot;&gt;reported&lt;/a&gt; that the &lt;a href=&quot;https://www.atf.gov/firearms/applications-eform-4473-download&quot;&gt;E4473 software&lt;/a&gt; released by the &lt;a href=&quot;https://www.atf.gov/&quot;&gt;US Bureau of Alcohol, Tobacco, Firearms and Explosives&lt;/a&gt; is having trouble operating correctly today.  This software is used by gun dealers to electronically complete &lt;a href=&quot;https://en.wikipedia.org/wiki/Form_4473&quot;&gt;Form 4473&lt;/a&gt;, registering firearms purchases.&lt;/li&gt;
&lt;li&gt;One person contacted me directly to share &lt;a href=&quot;https://i.imgur.com/ZQpAcDi.png&quot;&gt;a screenshot&lt;/a&gt; of the &lt;a href=&quot;https://todoist.com/&quot;&gt;Todoist&lt;/a&gt; mobile app, showing &quot;Tomorrow Sat Feb 29&quot;, even though it was already Feb 29.&lt;/li&gt;
&lt;li&gt;Another person contacted me directly and shared that the French post office system had a nation-wide bug on the 29th that prevented anybody from sending parcels.  (I'm still looking for more information about this claim.  &lt;a href=&quot;https://twitter.com/BatriceMadrid1/status/1233682722566164480&quot;&gt;Here is one tweet&lt;/a&gt; showing long lines at the post office.)&lt;/li&gt;
&lt;li&gt;A user of ElasticSearch's legacy client library for JavaScript &lt;a href=&quot;https://github.com/elastic/elasticsearch-js-legacy/issues/26&quot;&gt;opened an GitHub issue&lt;/a&gt; claiming problems querying data for Feb 29th.&lt;/li&gt;
&lt;li&gt;One person &lt;a href=&quot;https://twitter.com/schaufuss/status/1234040578486173697&quot;&gt;reported&lt;/a&gt; on March 1st that their Apple Watch was giving incorrect exercise data for February.&lt;/li&gt;
&lt;li&gt;A user of a Tandem Diabetes insulin pump with &lt;a href=&quot;https://www.tandemdiabetes.com/products/t-slim-x2-insulin-pump/control-iq&quot;&gt;Control IQ&lt;/a&gt; software &lt;a href=&quot;https://twitter.com/elvismcneely/status/1234001466651791360&quot;&gt;shows us a video&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/elvismcneely/status/1234003987688566784&quot;&gt;reports incorrect IOB data&lt;/a&gt; during the transition between Feb 29th and March 1st.&lt;/li&gt;
&lt;li&gt;A person &lt;a href=&quot;https://twitter.com/paul_beaudry/status/1233997000129024001&quot;&gt;reported a problem&lt;/a&gt; with their &lt;a href=&quot;https://sensi.emerson.com/&quot;&gt;Sensi&lt;/a&gt; smart thermostat not showing data for Feb 29th.&lt;/li&gt;
&lt;li&gt;A person &lt;a href=&quot;https://twitter.com/keyurdotorg/status/1233934834009022466&quot;&gt;shows us&lt;/a&gt; that their experience with the &lt;a href=&quot;https://the-world-of-anything-fiction.fandom.com/wiki/Chuck_E._Cheese%27s_Sketch_Book&quot;&gt;Chuck E. Cheese Sketch Book&lt;/a&gt; (photo booth) printed a date of March 1st when it was actually Feb 29th.&lt;/li&gt;
&lt;li&gt;A person &lt;a href=&quot;https://twitter.com/RussoHockey/status/1234191136408948742?s=20&quot;&gt;reported a problem&lt;/a&gt; with the NHL schedule in their Android app.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;verified-resolved&quot;&gt;Verified / Resolved&lt;/h4&gt;
&lt;p&gt;Items in this section had an impact on or near February 29th, were verified as actual bugs, and are now reported as resolved.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Many people reported their cell phones were showing Feb 28th when it was actually Feb 29th, or some variation of showing the wrong date.  Most appear to be on the Sprint network, and for at least one, &lt;a href=&quot;https://twitter.com/sprintcare/status/1233772520290963456&quot;&gt;Sprint confirmed the issue and stated they were working on it&lt;/a&gt;, while &lt;a href=&quot;https://twitter.com/sprintcare/status/1233841075032403971&quot;&gt;advising customers to set the time and date on their phone manually&lt;/a&gt;.  Reports: &lt;a href=&quot;https://twitter.com/PeteyPablo623/status/1233775879932628992&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/naresh/status/1233574602820861952&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/DJ_dat_MAN/status/1233779563077013504&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/CapnBrigantia/status/1233608478616195072&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/MikeGiveMeABeat/status/1233768198413176832&quot;&gt;5&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/jflysocal/status/1233838066369998848&quot;&gt;6&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/PeteyPablo623/status/1233805721143144448&quot;&gt;7&lt;/a&gt;&lt;br/&gt;One of these people &lt;a href=&quot;https://twitter.com/jflysocal/status/1234171430352240641&quot;&gt;said&lt;/a&gt; things were working better on March 1st, and Sprint has &lt;a href=&quot;https://twitter.com/sprintcare/status/1234171864596934656&quot;&gt;stated the problem has been resolved&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Users of &lt;a href=&quot;https://shadow.tech/&quot;&gt;Shadow&lt;/a&gt;, a gaming streaming service, encountered an &quot;L-104 error&quot; when trying to log in from Windows PCs, starting at 4 PM PST on 2/28 (which is midnight UTC on 2/29).  The company originally &lt;a href=&quot;https://twitter.com/PurpleBooth/status/1233664183910227969/photo/1&quot;&gt;asked their users to work around the bug&lt;/a&gt; by disabling time synchronization and set their clocks forward to March 1st.  They &lt;a href=&quot;https://help.shadow.tech/hc/en-gb/articles/360011233839#h_819a3d67-40b1-4f0a-bed2-d8e04cfe87cc&quot;&gt;issued an update&lt;/a&gt; about 9½ hours later correcting the problem, and then asked users to turn time synchronization back on.  &lt;a href=&quot;https://www.reddit.com/r/ShadowPC/comments/fb88cx/l104_issue_workaround/&quot;&gt;Full discussion on Reddit&lt;/a&gt;.  (Excellent transparency here, but I don't recommend disabling time sync.  That can lead to many other issues.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://appdaemon.readthedocs.io/&quot;&gt;AppDaemon&lt;/a&gt; open source home automation software &lt;a href=&quot;https://www.reddit.com/r/homeassistant/comments/fbbyll/appdaemon_a_leap_year_bug/&quot;&gt;crashed on leap day&lt;/a&gt; due to &lt;a href=&quot;https://github.com/home-assistant/appdaemon/issues/897&quot;&gt;trying to create a date of 3000-02-29&lt;/a&gt;.  (The year 3000 is &lt;em&gt;not&lt;/em&gt; a leap year.)  The issue was &lt;a href=&quot;https://github.com/home-assistant/appdaemon/commit/530ce476a6feb72979f87e0596ac8a42951339ba&quot;&gt;resolved in version 4.0.2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The application &lt;a href=&quot;http://ftanalyzer.com/&quot;&gt;Family Tree Analyzer&lt;/a&gt; displayed &lt;a href=&quot;https://github.com/ShammyLevva/FTAnalyzer/issues/157&quot;&gt;an error message&lt;/a&gt; with the &quot;On This Day&quot; functionality, when the day chosen was a leap day.  The issue was resolved in version 7.6.1.1.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;https://github.com/vertexproject/synapse&quot;&gt;synapse&lt;/a&gt; intelligent analysis package for Python &lt;a href=&quot;https://github.com/vertexproject/synapse/pull/1550&quot;&gt;had a problem&lt;/a&gt; handling the leap day.  It has since been fixed.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;verified-deferred&quot;&gt;Verified / Deferred&lt;/h4&gt;
&lt;p&gt;Items in this section had an impact on February 29th, but were either resolved through manual workarounds, or resolved themselves on March 1st without any specific fix or resolution reported.  One assumes that the responsible party will take appropriate action before the next leap day in 2024, or has already taken such action, but to the best of my knowledge no confirmation of that has yet been provided.&lt;/p&gt;
&lt;h4 id=&quot;honorary-mention&quot;&gt;Honorary Mention&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.timehop.com/&quot;&gt;Timehop&lt;/a&gt;, which made my list from 2016 also, did indeed decide that &lt;a href=&quot;https://twitter.com/mjanner/status/1233706023074095104&quot;&gt;it's not a bug but a feature&lt;/a&gt;!  (and with &lt;a href=&quot;https://twitter.com/mjanner/status/1233706023074095104/photo/1&quot;&gt;a funny error message graphic&lt;/a&gt;!)&lt;/li&gt;
&lt;li&gt;Bantshire University (a parody account, not a real university), let us know that all &lt;a href=&quot;https://twitter.com/BantshireUni/status/1233697678179143680&quot;&gt;IT systems are offline due to a complication with a date of March 0th&lt;/a&gt;. 😂&lt;/li&gt;
&lt;li&gt;Many developers mentioned that they encountered leap year bugs in their own code.  Thanks for sharing!   &lt;a href=&quot;https://twitter.com/nickdirienzo/status/1233563267601063936&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/colincoller/status/1233576180592316417&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/grantrbeattie/status/1233633838984617986&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/fschulze/status/1233669790797062145&quot;&gt;4&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/migonzalvar/status/1233708267576135680&quot;&gt;5&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=22452575&quot;&gt;6&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=22452501&quot;&gt;7&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/synapticarbors/status/1233877862295445513&quot;&gt;8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Not a bug, but &lt;a href=&quot;https://www.thekitchn.com/recipe-the-leap-year-cocktail-recipes-from-the-kitchn-203478&quot;&gt;something to drink&lt;/a&gt; while you fix your bugs now, so they don't blow up next time around in 2024.  😊&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;resources&quot;&gt;Resources&lt;/h4&gt;
&lt;p&gt;You might also be interested in these other articles I've authored on the subject of leap year bugs:&lt;/p&gt;
&lt;p&gt;Please let me know (in comments below, or &lt;a href=&quot;https://twitter.com/messages/compose?recipient_id=57677826&quot;&gt;send me a DM on Twitter&lt;/a&gt;) if you have any corrections or additions.  Thanks.&lt;/p&gt;
</description>
<pubDate>Sat, 29 Feb 2020 18:28:08 +0000</pubDate>
<dc:creator>mj1586</dc:creator>
<og:type>article</og:type>
<og:title>List of 2020 Leap Day Bugs</og:title>
<og:description>The following is a list of many bugs caught on or near leap day, February 29th, 2020. Each link below references the issue with supporting details where available.</og:description>
<og:url>https://codeofmatt.com/list-of-2020-leap-day-bugs/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://codeofmatt.com/list-of-2020-leap-day-bugs/</dc:identifier>
</item>
</channel>
</rss>