<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>SQL: One of the most valuable skills</title>
<link>http://www.craigkerstiens.com/2019/02/12/sql-most-valuable-skill/</link>
<guid isPermaLink="true" >http://www.craigkerstiens.com/2019/02/12/sql-most-valuable-skill/</guid>
<description>&lt;p&gt;I’ve learned a lot of skills over the course of my career, but no technical skill more useful than SQL. SQL stands out to me as the most valuable skill for a few reasons:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It is valuable across different roles and disciplines&lt;/li&gt;
&lt;li&gt;Learning it once doesn’t really require re-learning&lt;/li&gt;
&lt;li&gt;You seem like a superhero. &lt;em&gt;You seem extra powerful when you know it because of the amount of people that aren’t fluent&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Let me drill into each of these a bit further. &lt;/p&gt;
&lt;h2&gt;SQL a tool you can use everywhere&lt;/h2&gt;
&lt;p&gt;Regardless of what role you are in SQL will find a way to make your life easier. Today as a product manager it’s key for me to look at data, analyze how effective we’re being on the product front, and shape the product roadmap. If we just shipped a new feature, the data on whether someone has viewed that feature is likely somewhere sitting in a relational database. If I’m working on tracking key business metrics such as &lt;a href=&quot;http://www.craigkerstiens.com/2014/02/26/Tracking-MoM-growth-in-SQL/&quot;&gt;month over month growth&lt;/a&gt;, that is likely somewhere sitting in a relational database. At the other end of almost anything we do there is likely a system of record that speaks SQL. Knowing how to access it most natively saves me a significant amount of effort without having to go ask someone else the numbers.&lt;/p&gt;
&lt;p&gt;But even before becoming a product manager I would use SQL to inform me about what was happening within systems. As an engineer it could often allow me to pull information I wanted faster than if I were to script it in say Ruby or Python. When things got slow in my webapp having an understanding of the SQL that was executed and &lt;a href=&quot;http://www.craigkerstiens.com/2012/10/01/understanding-postgres-performance/&quot;&gt;ways to optimize&lt;/a&gt; it was indespensible. Yes, this was going a little beyond just a basic understanding of SQL… but adding an &lt;a href=&quot;https://www.citusdata.com/blog/2017/10/11/index-all-the-things-in-postgres/&quot;&gt;index to a query&lt;/a&gt; instead of rolling my own homegrown caching well that was well worth the extra time learning.&lt;/p&gt;
&lt;h2&gt;SQL is permanent&lt;/h2&gt;
&lt;p&gt;I recall roughly 20 years ago creating my first webpage. It was magical, and then I introduced some Javascript to make it even more impressive prompting users to click Yes/No or give me some input. Then about 10 years later jQuery came along and while it was a little more verbose at times and something new to learn it made things prettier overall so I committed to re-learning the jQuery approach to JS. Then it just picked up pace with Angular –&amp;gt; React/Ember, and now I have an entire pipeline to introduce basic Javascript into my website and the reality is I’m still trying to accomplish the same thing I was 20 years ago by having someone click Yes/No.&lt;/p&gt;
&lt;p&gt;SQL in contrast doesn’t really change. &lt;em&gt;Caveat: It has changed–there is &lt;a href=&quot;https://modern-sql.com/&quot;&gt;modern sql&lt;/a&gt;, but I’d still argue less dramatically than other language landscapes&lt;/em&gt;. Yes we get a new standard every few years and occasionally something new comes along like support for window functions or CTEs, but the basics of SQL are pretty permanent. Learning SQL once will allow you to re-use it heavily across your career span without having to re-learn. Don’t get me wrong I love learning new things, but I’d rather learn something truly new than just yet another way to accomplish the same task.&lt;/p&gt;
&lt;h2&gt;SQL: Seem better than you are&lt;/h2&gt;
&lt;p&gt;SQL is an underlearned skill, the majority of application developers just skip over it. Because so few actually know SQL well you can seem more elite than you actually are. In past companies with hundreds of engineers I’d get a question several times a week from junior to principal engineers of: “hey can you help me figure out how to write a query for this?” Because you’re skilled at something so few others are you can help them out which always makes life a little easier when you have a question for them.&lt;/p&gt;
&lt;p&gt;So if you’re not already proficient what are you waiting for, do you want to seem like a SQL badass yet?&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 02:20:40 +0000</pubDate>
<dc:creator>duck</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.craigkerstiens.com/2019/02/12/sql-most-valuable-skill/</dc:identifier>
</item>
<item>
<title>Show HN: DeskGap – Like Electron, but uses the system webview</title>
<link>https://deskgap.com/</link>
<guid isPermaLink="true" >https://deskgap.com/</guid>
<description>&lt;a href=&quot;https://github.com/patr0nus/DeskGap/edit/master/website/docs/index.md&quot; title=&quot;Edit this page&quot; class=&quot;md-icon md-content__icon&quot;&gt;&lt;/a&gt;&lt;p&gt;DeskGap is a framework for building cross-platform desktop apps with web technologies (JavaScript, HTML and CSS).&lt;/p&gt;
&lt;p&gt;To enable native capabilities while keeping the size down, DeskGap bundles a &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; runtime and leaves the HTML rendering to the operating system‘s webview.&lt;/p&gt;
&lt;h2 id=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Mac OS X Yosemite (version 10.10) or later&lt;/li&gt;
&lt;li&gt;Windows 10 October 2018 Update (version 1809) or later&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;downloads&quot;&gt;Downloads&lt;/h2&gt;
&lt;h3 id=&quot;prebuilt-binaries&quot;&gt;Prebuilt Binaries&lt;/h3&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
npm install --save-dev deskgap
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;api-demos&quot;&gt;API Demos&lt;/h3&gt;
&lt;p&gt;The DeskGap API Demos app shows some of the DeskGap features and APIs with interactive scripts.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;macOS&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;th&gt;Source Code&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://deskgap.com/dl/macos&quot;&gt;&lt;img alt=&quot;Download&quot; src=&quot;https://api.bintray.com/packages/patr0nus/DeskGap/deskgap-darwin-x64/images/download.svg&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://deskgap.com/dl/win32&quot;&gt;&lt;img alt=&quot;Download&quot; src=&quot;https://api.bintray.com/packages/patr0nus/DeskGap/deskgap-win32-ia32/images/download.svg&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/patr0nus/DeskGap/tree/master/app&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 id=&quot;pym-a-real-life-app-built-with-deskgap&quot;&gt;Pym: A Real-Life App Built With DeskGap&lt;/h3&gt;
&lt;p&gt;To test DeskGap on field, &lt;a href=&quot;https://squoosh.app&quot;&gt;squoosh&lt;/a&gt; is wrapped into a desktop app &quot;Pym&quot; with DeskGap and submitted to the app stores.&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;macOS&lt;/th&gt;
&lt;th&gt;Windows&lt;/th&gt;
&lt;th&gt;Source Code&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://geo.itunes.apple.com/us/app/pym/id1451733095?mt=12&amp;amp;app=apps&quot;&gt;&lt;img alt=&quot;Download on Mac App Store&quot; src=&quot;https://linkmaker.itunes.apple.com/en-us/badge-lrg.svg?releaseDate=2019-02-12T00:00:00Z&amp;amp;kind=desktopapp&amp;amp;bubble=macos_apps&quot; height=&quot;32&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://www.microsoft.com/store/productId/9PMTMRNBXMPB&quot;&gt;&lt;img alt=&quot;Download on Microsoft Store&quot; src=&quot;https://storebadge.azureedge.net/assets/en.png&quot; height=&quot;32&quot;/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/patr0nus/Pym&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;
&lt;h3 id=&quot;creating-a-nodejs-package-for-your-app&quot;&gt;Creating a Node.js Package for your app&lt;/h3&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
hello-deskgap/
├── package.json
├── index.js
└── index.html
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt; points to the app's entry file and provides the script that starts your app:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello-deskgap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deskgap .&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;index.js&lt;/code&gt; is the entry file that creates a window which will render a HTML page:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BrowserWindow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'deskgap'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ready'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BrowserWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; is the page to render:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello DeskGap&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Hello DeskGap&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;installing-deskgap&quot;&gt;Installing DeskGap&lt;/h3&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
npm install --save-dev deskgap
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;starting-your-app&quot;&gt;Starting Your App&lt;/h3&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://deskgap.com/api/&quot;&gt;Work in Progress&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;faq&quot;&gt;FAQ&lt;/h2&gt;
&lt;h3 id=&quot;whats-the-difference-between-deskgap-and-electron&quot;&gt;What’s the difference between DeskGap and &lt;a href=&quot;https://electronjs.org&quot;&gt;Electron&lt;/a&gt;?&lt;/h3&gt;
&lt;p&gt;DeskGap is designed to be a more lightweight alternative to Electron. It does not bundle &lt;a href=&quot;https://www.chromium.org/&quot;&gt;Chromium&lt;/a&gt; or any other web engines. Instead, the ability of rendering HTML pages comes from &lt;strong&gt;the webview provided by the operating system&lt;/strong&gt;, specifically, &lt;a href=&quot;https://developer.apple.com/documentation/webkit/wkwebview&quot;&gt;WKWebView&lt;/a&gt; on macOS and &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/communitytoolkit/controls/wpf-winforms/webview&quot;&gt;Microsoft.Toolkit.Forms.UI.Controls.WebView&lt;/a&gt; on Windows.&lt;/p&gt;
&lt;p&gt;DeskGap is at its early stage. &lt;strong&gt;The API is still quite limited&lt;/strong&gt; compared to Electron. Many functionalities are under development and some of them will probably never be possible. See &lt;a href=&quot;https://deskgap.com/api/&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;https://deskgap.com/architecture/#synchronous-and-asynchronous-dispatching&quot;&gt;this&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3 id=&quot;there-are-already-similar-attempts-electrino-and-quark-for-instance-out-there-what-makes-deskgap-different&quot;&gt;There are already similar attempts (&lt;a href=&quot;https://github.com/pojala/electrino&quot;&gt;electrino&lt;/a&gt; and &lt;a href=&quot;https://github.com/jscherer92/Quark&quot;&gt;Quark&lt;/a&gt; for instance) out there. What makes DeskGap different?&lt;/h3&gt;
&lt;p&gt;With a Node.js runtime bundled, DeskGap comes with support for npm packages and all the battle-tested &lt;strong&gt;native capabilities&lt;/strong&gt; in Node.js such as &lt;a href=&quot;https://nodejs.org/api/fs.html&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/net.html&quot;&gt;&lt;code&gt;net&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;. The price is a &lt;strong&gt;larger executable size&lt;/strong&gt; (about 8 MB zipped and 20 MB unzipped).&lt;/p&gt;
&lt;h3 id=&quot;why-is-the-supported-version-of-windows-so-high-any-plan-of-supporting-windows-7-and-linux&quot;&gt;Why is the supported version of Windows so high? Any plan of supporting Windows 7 and Linux?&lt;/h3&gt;
&lt;p&gt;Older Windows’ &lt;strong&gt;do not have a modern browser engine&lt;/strong&gt;, only the one that powers Internet Explorer. Windows 10 1809 is the first version that provides a modern webview with &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/dev-guide#win32-webview-updates&quot;&gt;enough functionalities&lt;/a&gt; for DeskGap to be possible.&lt;/p&gt;
&lt;p&gt;To support Windows 7, app developers would have to face compatibility issues coming from as low as IE 8. I personally don’t have enough motivation and interest to do this, but pull requests are always welcome.&lt;/p&gt;
&lt;p&gt;Linux support would be great but I have little knowledge of Linux app development. For now &lt;strong&gt;I am looking at &lt;a href=&quot;https://doc.qt.io/qt-5/qtwebengine-index.html&quot;&gt;Qt WebEngine&lt;/a&gt;&lt;/strong&gt;. Any advice &amp;amp; help is appreciated.&lt;/p&gt;
&lt;p&gt;If you want to try DeskGap but dropping Windows 7 (or Linux) support is a no-go for your app, consider packaging the app with Electron for the unsupported platform. The DeskGap API is intentionally designed to be like Electron’s. The following code is a good start:&lt;/p&gt;
&lt;div class=&quot;codehilite&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;appEngine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'deskgap'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;appEngine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'electron'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BrowserWindow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;so-i-can-port-my-electron-app-to-deskgap&quot;&gt;So I can port my Electron app to DeskGap?&lt;/h3&gt;
&lt;p&gt;Probably no. The DeskGap API is still quite limited. If you start building an app with DeskGap, getting it running on Electron may be easy, but not the other way around.&lt;/p&gt;
</description>
<pubDate>Wed, 13 Feb 2019 02:01:03 +0000</pubDate>
<dc:creator>patr0nus</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://deskgap.com/</dc:identifier>
</item>
<item>
<title>Activision-Blizzard layoffs after reporting record results</title>
<link>https://arstechnica.com/gaming/2019/02/activision-blizzard-lays-off-775-people-after-record-results-in-2018/</link>
<guid isPermaLink="true" >https://arstechnica.com/gaming/2019/02/activision-blizzard-lays-off-775-people-after-record-results-in-2018/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://arstechnica.com/gaming/2019/02/activision-blizzard-lays-off-775-people-after-record-results-in-2018/&quot;&gt;https://arstechnica.com/gaming/2019/02/activision-blizzard-lays-off-775-people-after-record-results-in-2018/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19148983&quot;&gt;https://news.ycombinator.com/item?id=19148983&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 353&lt;/p&gt;
&lt;p&gt;# Comments: 298&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 23:58:36 +0000</pubDate>
<dc:creator>tolien</dc:creator>
<dc:identifier>https://arstechnica.com/gaming/2019/02/activision-blizzard-lays-off-775-people-after-record-results-in-2018/</dc:identifier>
</item>
<item>
<title>Skype contact lists may have been exposed (2017)</title>
<link>http://www.steverrobbins.com/articles/skype-serious-privacy-breach/</link>
<guid isPermaLink="true" >http://www.steverrobbins.com/articles/skype-serious-privacy-breach/</guid>
<description>&lt;p&gt;A quick public service announcement for anyone who uses Skype. &lt;strong&gt;Executives, VCs, journalists, researchers, and anyone who cares about the privacy&lt;/strong&gt; of their contact list should read this.&lt;/p&gt;
&lt;p&gt;I don’t usually post about computer security, but in this case, it seemed quite serious. It’s also the kind of thing we’re used to from Facebook and LinkedIn. But it could have very serious consequences, since people use Skype differently from those social platforms. People use social media with an expectation of public transparency, while many use Skype with an expectation of privacy.&lt;/p&gt;
&lt;p&gt;As of a couple of days ago, the new Skype tells other people how many contacts you have in common. &lt;strong&gt;It also offers your contacts as potential new contacts to everyone else in your contact book.&lt;/strong&gt; This is a surprisingly serious privacy breach.&lt;/p&gt;
&lt;p&gt;This means if you use Skype for anything where your contact list is sensitive (conference calls with clients, planning a protest over the skyrocketing price of kitty litter, coordinating your monthly meeting of people relax by knitting exciting underwear), &lt;strong&gt;your contacts can quite possibly deduce who other contacts are.&lt;/strong&gt; Furthermore, if they know about this new “feature,” they can make some smart deductions.&lt;/p&gt;
&lt;p&gt;For example, you’re a mergers &amp;amp; acquisitions consultant. You are in talks with MergeMe, Inc. A prospect from WeMergeToo calls you. Immediately after you accept their contact request, they start seeing suggestions that they might know the MergeMe Inc CEO. They don’t, but they know they just connected to you —&amp;gt; they can quickly figure out MergeMe Inc is talking with you also.&lt;/p&gt;
&lt;p&gt;I also just discovered I can look up a profile of &lt;strong&gt;someone I don’t know&lt;/strong&gt; (they’re neither a contact nor a friend), log out and back in, and &lt;strong&gt;Skype will start suggesting their contacts to me as potential contacts of my own.&lt;/strong&gt; (I can tell because those contacts have the same last name, physical resemblance, etc.) So this can be used by stalkers, bullies, harassers, and people who wish to research someone and learn who they know.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(This feature can be used for much more targeted research. I won’t go into details here. Suffice to say that you can get pretty specific.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Microsoft’s support page says they’re considering changing this behavior someday. Of course, by that time, much damage will have been done.&lt;/p&gt;
&lt;p&gt;I went through and deleted some of my contacts by hand this morning (it takes forever… in a triumph of “good for Microsoft, bad for the user” they make it super easy for you to give them your social graph, and super hard for you to take it back). Even deleted, Skype kept suggesting prior contacts to me. That suggests that they continue to keep that data — and probably call history and chat history as well — for use in “helpfully” building their social graph.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important note:&lt;/strong&gt; deleting your contact book isn’t enough. If your associates have &lt;em&gt;you&lt;/em&gt; in &lt;em&gt;their&lt;/em&gt; contact book, someone can still use the same mechanism to figure out the connection.&lt;/p&gt;
&lt;p&gt;My reaction was to cancel my Skype account altogether. But because Microsoft cares &lt;em&gt;so much&lt;/em&gt; about me, the best I can do is schedule it to be closed in 60 days. &lt;strong&gt;So for the next 60 days, like it or not, my contacts are going to continue to be exposed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See: &lt;a href=&quot;https://answers.microsoft.com/en-us/skype/forum/skype_accountms-skype_privacyms/skype-suggests-people-from-my-contact-list-to/d8cc03ad-fa15-4de7-8d96-51510615cff4&quot; target=&quot;_blank&quot;&gt;the Microsoft Skype support article&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also note Danida_U’s response from Microsoft: there’s no way to disable this short of opting out from being contactable at all. And no, there are no plans to remove the “feature.” They want to make it easier for friends and family to find you. My suggestion: if you want your friends and family to find you, tell them your Skype ID. Problem solved.&lt;/p&gt;
&lt;p&gt;I recommend &lt;a href=&quot;http://zoom.us&quot; target=&quot;_blank&quot;&gt;http://zoom.us&lt;/a&gt; or &lt;a href=&quot;http://appear.in&quot; target=&quot;_blank&quot;&gt;http://appear.in&lt;/a&gt; as alternatives that don’t “help” you by exposing your contacts to the world.&lt;/p&gt;


</description>
<pubDate>Tue, 12 Feb 2019 23:21:50 +0000</pubDate>
<dc:creator>QUFB</dc:creator>
<og:type>article</og:type>
<og:title>Safety warning: if you use Skype, your contacts may now be exposed - Stever Robbins</og:title>
<og:description>A quick public service announcement for anyone who uses Skype. Executives, VCs, journalists, researchers, and anyone who cares about the privacy of their contact list should read this. I don’t usually post about computer security, but in this case, it seemed quite serious. It’s also the kind of thing we’re used to from Facebook and …</og:description>
<og:url>https://www.steverrobbins.com/articles/skype-serious-privacy-breach/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.steverrobbins.com/articles/skype-serious-privacy-breach/</dc:identifier>
</item>
<item>
<title>Principled GraphQL</title>
<link>http://www.principledgraphql.com</link>
<guid isPermaLink="true" >http://www.principledgraphql.com</guid>
<description>&lt;div class=&quot;float&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;overview&quot; title=&quot;&quot; src=&quot;https://principledgraphql.com/static/fa53fbb1d02c0167a5fadff64825f882/afb66/overview.png&quot; srcset=&quot;/static/fa53fbb1d02c0167a5fadff64825f882/0456a/overview.png 163w, /static/fa53fbb1d02c0167a5fadff64825f882/c8c27/overview.png 325w, /static/fa53fbb1d02c0167a5fadff64825f882/afb66/overview.png 650w, /static/fa53fbb1d02c0167a5fadff64825f882/20107/overview.png 810w&quot; sizes=&quot;(max-width: 650px) 100vw, 650px&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;GraphQL, despite the name, isn't simply a query language. It's a comprehensive solution to the problem of connecting modern apps to services in the cloud. As such, it forms the basis for a new and important layer in the modern application development stack: the &lt;strong&gt;data graph&lt;/strong&gt;. This new layer brings all of a company's app data and services together in one place, with one consistent, secure, and easy-to-use interface, so that anyone can draw upon it with minimal friction.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&quot;https://apollographql.com&quot;&gt;&lt;strong&gt;Apollo&lt;/strong&gt;&lt;/a&gt;, we've been building industry leading data graph technology since 2015, and we estimate our software is now used in over 90% of GraphQL implementations. Over the years, we've had thousands of conversations with developers implementing GraphQL at companies of all sizes. We want to share what we've learned, so we've distilled their experiences into a set of best practices for creating, maintaining, and operating a data graph. We present them here as 10 GraphQL Principles, broken out into three categories, in a format inspired by the &lt;a href=&quot;https://12factor.net&quot;&gt;Twelve Factor App&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 21:31:56 +0000</pubDate>
<dc:creator>debergalis</dc:creator>
<og:title>Principled GraphQL</og:title>
<og:description>Best practices for implementing and scaling a data graph</og:description>
<og:image>/static/og-image-f5034df8c60c72f6dacce2caf516306a.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://principledgraphql.com/</dc:identifier>
</item>
<item>
<title>California will not complete $77B high-speed rail project: governor</title>
<link>https://www.reuters.com/article/us-california-governor-rail/california-will-not-complete-77-billion-high-speed-rail-project-governor-idUSKCN1Q12II</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-california-governor-rail/california-will-not-complete-77-billion-high-speed-rail-project-governor-idUSKCN1Q12II</guid>
<description>&lt;p&gt;(Reuters) - California Governor Gavin Newsom said on Tuesday the state will dramatically scale back a planned $77.3 billion high-speed rail project that has faced cost hikes, delays and management concerns, but will finish a smaller section of the line.&lt;/p&gt;
&lt;p&gt;“Let’s be real. The current project, as planned, would cost too much and respectfully take too long. There’s been too little oversight and not enough transparency,” Newsom said in his first State of the State Address to lawmakers on Tuesday.&lt;/p&gt;
&lt;p&gt;“Right now, there simply isn’t a path to get from Sacramento to San Diego, let alone from San Francisco to L.A. (Los Angeles). I wish there were,” he said.&lt;/p&gt;
&lt;p&gt;Newsom said the state will complete a 119-mile (191 km) high-speed rail link between Merced and Bakersfield in the state’s Central Valley. In March 2018, the state forecast the costs had jumped by $13 billion to $77 billion and warned that the costs could be as much as $98.1 billion.&lt;/p&gt;
&lt;p&gt;Newsom said he would not give up entirely on the effort and will continue to seek additional funding.&lt;/p&gt;
&lt;p&gt;California planned to build a 520-mile (826.8 km) system in the first phase that would allow trains to travel at speeds of up to 220 miles per hour (354 kph) in the traffic-choked state from Los Angeles to San Francisco and begin full operations by 2033.&lt;/p&gt;
&lt;p&gt;“Abandoning high-speed rail entirely means we will have wasted billions and billions of dollars with nothing but broken promises, partially filled commitments and lawsuits to show for it,” Newsom said. “And by the way, I am not interested in sending $3.5 billion in federal funding that was allocated to this project back to Donald Trump.”&lt;/p&gt;
&lt;p&gt;U.S. House Transportation and Infrastructure Committee Republicans cited a recent Democratic clean energy proposal in noting the project’s demise, tweeting that “the plug gets pulled on the frequently delayed, over-budget San Francisco-LA (high-speed rail) project. Reality: 1, #GreenNewDeal: 0.”&lt;/p&gt;
&lt;p&gt;A state audit issued in November said California’s High‑Speed Rail Authority’s “flawed decision making and poor contract management have contributed to billions in cost overruns and delays.”&lt;/p&gt;
&lt;p&gt;The Obama administration awarded the state a total of $3.5 billion in 2010 and California voters in 2008 approved nearly $10 billion in bond proceeds. The U.S. Transportation Department’s inspector general’s office noted in August 2018 that the state had only identified $30.7 billion in funding, or less than half the project’s needs.&lt;/p&gt;
&lt;p&gt;A spokesman for U.S. Transportation Secretary Elaine Chao did not immediately comment.&lt;/p&gt;
&lt;div class=&quot;SmallImage_small-image SmallImage_standard SmallImage_caption-truncate&quot;&gt;
&lt;div class=&quot;Image_container&quot; tabindex=&quot;-1&quot;&gt;


&lt;div class=&quot;Image_caption Image_full-width&quot;&gt;

&lt;span&gt;FILE PHOTO: California Democratic gubernatorial candidate Gavin Newsom speaks after being elected governor of the state during an election night party in Los Angeles, California, U.S. November 6, 2018. REUTERS/Mike Blake&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Newsom said the state will finish environmental reviews from San Francisco to Los Angeles, “connect the revitalized Central Valley to other parts of the state, and continue to push for more federal funding and private dollars. But let’s just get something done.”&lt;/p&gt;
&lt;p&gt;The governor also said he will name his economic development director, Lenny Mendonca, to chair the High-Speed Rail Authority, and vowed new transparency and to hold contractors and consultants accountable to explain how tax dollars are spent.&lt;/p&gt;
&lt;p&gt;“I’m not interested in making the same old mistakes,” Newsom said.&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Reporting by David Shepardson in Washington; editing by David Gregorio, Tom Brown and Bill Berkrot&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Tue, 12 Feb 2019 21:05:11 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:title>California to scale back $77 billion high-speed rail project: governor</og:title>
<og:url>https://www.reuters.com/article/us-california-governor-rail-idUSKCN1Q12II</og:url>
<og:type>article</og:type>
<og:description>California Governor Gavin Newsom said on Tuesday the state will dramatically sca...</og:description>
<og:image>https://s2.reutersmedia.net/resources/r/?m=02&amp;d=20190212&amp;t=2&amp;i=1355929420&amp;w=1200&amp;r=LYNXNPEF1B1VC</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-california-governor-rail/california-will-not-complete-77-billion-high-speed-rail-project-governor-idUSKCN1Q12II</dc:identifier>
</item>
<item>
<title>Bootstrap 5 will remove jQuery as a dependency</title>
<link>https://github.com/twbs/bootstrap/pull/23586</link>
<guid isPermaLink="true" >https://github.com/twbs/bootstrap/pull/23586</guid>
<description>&lt;p&gt;Boostrap-Vue is quite interested in the jQuery free version of some of the plugins, as we might be able to direclty import some of these modues (or the classes), to replace some of our code.&lt;/p&gt;
&lt;p&gt;We have just finished porting ScrollSpy over to vanilla js (with some helper dom functions we have created).&lt;/p&gt;
&lt;p&gt;If you like, I could see if I can port our vanilla version to this branch as a PR (the main things to change would be the event signatures)&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 21:03:21 +0000</pubDate>
<dc:creator>bdcravens</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/1689750?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>v5 without jQuery by Johann-S · Pull Request #23586 · twbs/bootstrap</og:title>
<og:url>https://github.com/twbs/bootstrap/pull/23586</og:url>
<og:description>Plugins: Util (#23565) Alert (#23596) Button (#23600) Carousel (#23658) Collapse (#23958) Dropdown (#24099) Modal (#23955) Popover (#24014) ScrollSpy (#24879) Tab (#24094) Tooltip (#240...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/twbs/bootstrap/pull/23586</dc:identifier>
</item>
<item>
<title>Reading in the Age of Constant Distraction</title>
<link>https://www.theparisreview.org/blog/2019/02/08/reading-in-the-age-of-constant-distraction/</link>
<guid isPermaLink="true" >https://www.theparisreview.org/blog/2019/02/08/reading-in-the-age-of-constant-distraction/</guid>
<description>&lt;div class=&quot;article-subtitles&quot;&gt;
&lt;section class=&quot;article-top-rail&quot;&gt;&lt;address&gt;By &lt;a href=&quot;https://www.theparisreview.org/blog/author/mstaid/&quot; title=&quot;Posts by Mairead Small Staid&quot; rel=&quot;author&quot;&gt;Mairead Small Staid&lt;/a&gt;&lt;/address&gt;
&lt;time&gt;February 8, 2019&lt;/time&gt;&lt;h3 class=&quot;h6&quot;&gt;&lt;a href=&quot;https://www.theparisreview.org/blog/arts-culture/&quot; rel=&quot;category tag&quot;&gt;Arts &amp;amp; Culture&lt;/a&gt;&lt;/h3&gt;
&lt;/section&gt;&lt;/div&gt;

&lt;div id=&quot;attachment_133473&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;a href=&quot;https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org.jpg&quot;&gt;&lt;img class=&quot;size-large wp-image-133473&quot; src=&quot;https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org-1024x956.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;956&quot; srcset=&quot;https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org-1024x956.jpg 1024w, https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org-300x280.jpg 300w, https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org-768x717.jpg 768w, https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org.jpg 1228w&quot; sizes=&quot;(min-width: 62.5em) 67vw, 100vw&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Johan Gudmundsen-Holmgreen, Laesende lille pige, 1900&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“I read books to read myself,” Sven Birkerts wrote in &lt;em&gt;The Gutenberg Elegies: The Fate of Reading in an Electronic Age&lt;/em&gt;. Birkerts’s book, which turns twenty-five this year, is composed of fifteen essays on reading, the self, the convergence of the two, and the ways both are threatened by the encroachment of modern technology. As the culture around him underwent the sea change of the internet’s arrival, Birkerts feared that qualities long safeguarded and elevated by print were in danger of erosion: among them privacy, the valuation of individual consciousness, and an awareness of history—not merely the facts of it, but a sense of its continuity, of our place among the centuries and cosmos. “Literature holds meaning not as a content that can be abstracted and summarized, but as experience,” he wrote. “It is a participatory arena. Through the process of reading we slip out of our customary time orientation, marked by distractedness and surficiality, into the realm of duration.”&lt;/p&gt;
&lt;p&gt;Writing in 1994, Birkerts worried that distractedness and surficiality would win out. The “duration state” we enter through a turned page would be lost in a world of increasing speed and relentless connectivity, and with it our ability to make meaning out of narratives, both fictional and lived. The diminishment of literature—of sustained reading, of writing as the product of a single focused mind—would diminish the self in turn, rendering us less and less able to grasp both the breadth of our world and the depth of our own consciousness. For Birkerts, as for many a reader, the thought of such a loss devastates. So while he could imagine this bleak near-future, he (mostly) resisted the masochistic urge to envision it too concretely, focusing instead on the present, in which—for a little while longer, at least—he reads, and he writes. His collection, despite its title, resembles less an elegy for literature than an attempt to stave off its death: by writing eloquently about his own reading life and electronic resistance, Birkerts reminds us that such a life is worthwhile, desirable, and, most importantly, still possible. In the face of what we stand to lose, he privileges what we might yet gain.&lt;/p&gt;

&lt;p&gt;A quarter of a century later, did he—did we—manage to salvage the wreck? Or have Birkerts’s worst fears come to pass? It’s hard to tell from the numbers. &lt;a href=&quot;https://www.npr.org/2018/03/29/598053563/why-the-number-of-independent-bookstores-increased-during-the-retail-apocalypse&quot;&gt;More independent bookstores&lt;/a&gt; are opening than closing, and sales of print books are &lt;a href=&quot;https://qz.com/1510303/book-sales/&quot;&gt;up&lt;/a&gt;—but authors’ earnings are &lt;a href=&quot;https://www.publishersweekly.com/pw/by-topic/industry-news/financial-reporting/article/78944-new-guild-report-finds-more-declines-in-author-earnings.html&quot;&gt;down&lt;/a&gt;. Fewer Americans &lt;a href=&quot;https://www.washingtonpost.com/news/wonk/wp/2018/06/29/leisure-reading-in-the-u-s-is-at-an-all-time-low/?noredirect=on&amp;amp;utm_term=.1ef15b726f48&quot;&gt;read for pleasure&lt;/a&gt; than they once did. A major house’s editor-driven imprint was &lt;a href=&quot;https://www.nytimes.com/2019/01/25/books/spiegel-grau-close-penguin-random-house.html&quot;&gt;shuttered&lt;/a&gt; recently, while the serialized storytelling app Wattpad &lt;a href=&quot;https://www.nytimes.com/2019/01/24/books/wattpad-books-publishing-division.html&quot;&gt;announced&lt;/a&gt; its intention to publish books chosen by algorithms, foregoing the need for editors altogether. Some of the changes Birkerts saw on the horizon—the invention of e-books, for one, and the possibilities of hypertext—have turned out to be less consequential than anticipated, but others have proven dire; the easy, addictive distractions of the screen swallow our hours whole.&lt;/p&gt;
&lt;p&gt;And perhaps the greatest danger posed to literature is not any newfangled technology or whiz-bang rearrangement of our synapses, but plain old human greed in its latest, greatest iteration: an online retailer incorporated in the same year &lt;em&gt;The Gutenberg Elegies&lt;/em&gt; was published. In the last twenty-five years, Amazon has gorged on late capitalism’s values of ease and cheapness, threatening to monopolize not only the book world, but the world-world. In the face of such an insidious, omnivorous menace—not merely the tech giant, but the culture that created and sustains it—I find it difficult to disentangle my own fear about the future of books from my fear about the futures of small-town economies, of American democracy, of the earth and its rising seas.&lt;/p&gt;
&lt;p&gt;“Ten, fifteen years from now the world will be nothing like what we remember, nothing much like what we experience now,” Birkerts wrote. “We will be swimming in impulses and data—the microchip will make us offers that will be very hard to refuse.” Indeed, few of us have refused them. As each new technology, from smartphones to voice-activated home assistants, becomes normalized faster and faster, our ability to refuse it lessens. The choice presented in &lt;em&gt;The Gutenberg Elegies&lt;/em&gt;, between embrace and skepticism, hardly seems like a choice anymore: the new generation is born swaddled in the digital world’s many arms.&lt;/p&gt;
&lt;p&gt;I am both part and not part of this new generation. I was born in 1988, two years before the development of HTML. I didn’t have a computer at home until middle school, didn’t have a cell phone until I was eighteen. I remember the pained beeping of a dial-up connection, if only faintly. Facebook launched as I finished up high school, and Twitter as I entered college. The golden hours of my childhood aligned perfectly with the fading light of a pre-internet world; I know intimately that such a world existed, and had its advantages.&lt;/p&gt;
&lt;p&gt;Birkerts, recalling the power books held over him when he was young, writes, “Through reading and living I have gradually made myself proof against total ravishment by authors. Yet so vivid are my recollections of that urgency, that sense of consequence, that I foolishly keep looking for it to happen again.” The heightened state brought on by a book—in which one is “actively present at every moment, scripting and constructing”—is what readers seek, Birkerts argues: “They want plot and character, sure, but what they really want is a vehicle that will bear them off to the reading state.” This state is threatened by the ever-sprawling internet—can the book’s promise of deeper presence entice us away from the instant gratification of likes and shares?&lt;/p&gt;
&lt;p&gt;“[Y]ears of working in bookstores have convinced me that this fundamental condition is there for others as well,” Birkerts writes; as a young man, he worked for a then-independent Ann Arbor bookshop called Borders. Four decades later, I slung books at Literati Bookstore, a few blocks away. The shelves of the original Borders had been bought and repurposed by Literati’s owners to hold the new store’s fiction section, and the people browsing them were the same, too: that is, they had the same tilt to their heads as they scanned titles, the same hopeful reach in their fingers as they pulled a volume down, flipping through the first few pages.&lt;/p&gt;
&lt;p&gt;And if they occasionally wanted books modeled after the internet—gift books born on Tumblr, Instagram printed out and bound—they also wanted Maggie Nelson’s &lt;em&gt;Bluets&lt;/em&gt;. They wanted Teju Cole’s &lt;em&gt;Open City&lt;/em&gt;, Anthony Marra’s &lt;em&gt;The Tsar of Love and Techno&lt;/em&gt;, Claudia Rankine’s &lt;em&gt;Don’t Let Me Be Lonely&lt;/em&gt;. Loneliness is what the internet and social media claim to alleviate, though they often have the opposite effect. Communion can be hard to find, not because we aren’t occupying the same physical space but because we aren’t occupying the same mental plane: we don’t read the same news; we don’t even revel in the same memes. Our phones and computers deliver unto each of us a personalized—or rather, algorithm-realized—distillation of headlines, anecdotes, jokes, and photographs. Even the ads we scroll past are not the same as our neighbor’s: a pair of boots has followed me from site to site for weeks. We call this endless, immaterial material a &lt;em&gt;feed&lt;/em&gt;, though there’s little sustenance to be found.&lt;/p&gt;
&lt;p&gt;Birkerts’s argument (and mine) isn’t that books alleviate loneliness, either: to claim a goal shared by every last app and website is to lose the fight for literature before it starts. No, the power of art—and many books are, still, art, not entertainment—lies in the way it turns us inward and outward, all at once. The communion we seek, scanning titles or turning pages, is not with others—not even the others, living or long dead, who wrote the words we read—but with ourselves. Our finest capacities, too easily forgotten.&lt;/p&gt;
&lt;p&gt;Early in &lt;em&gt;The Gutenberg Elegies&lt;/em&gt;, Birkerts summarizes historian Rolf Engelsing’s definition of reading “intensively” as the common practice of most readers before the nineteenth century, when books, which were scarce and expensive, were often read aloud and many times over. As reading materials—not just books, but newspapers, magazines, and ephemera—proliferated, more recent centuries saw the rise of reading “extensively”: we read these materials once, often quickly, and move on. Birkerts coins his own terms: the deep, devotional practice of “vertical” reading has been supplanted by “horizontal” reading, skimming along the surface. This shift has only accelerated dizzyingly in the time since Engelsing wrote in 1974, since Birkerts wrote in 1994, and since I wrote, yesterday, the paragraph above.&lt;/p&gt;
&lt;p&gt;Horizontal reading rules the day. What I do when I look at Twitter is less akin to reading a book than to the encounter I have with a recipe’s instructions or the fine print of a receipt: I’m taking in information, not enlightenment. It’s a way to pass the time, not to live in it. Reading—real reading, the kind Birkerts makes his impassioned case for—draws on our vertical sensibility, however latent, and “where it does not assume depth, it creates it.”&lt;/p&gt;
&lt;p&gt;I no longer have a Facebook account, and I find myself spending less and less time online. As adulthood settles on me—no passing fad, it turns out, but a chronic condition—I’m increasingly drawn back to the deeply engaged reading of my childhood. The books have changed, and my absorption is not always as total as it once was, but I can still find, slipped like a note between the pages, what Birkerts calls the “time of the self… deep time, duration time, time that is essentially characterized by our obliviousness to it.” The gift of reading, the gift of any encounter with art, is that this time spent doesn’t leave me when I lift my eyes from the book in my lap: it lingers, for a minute or a day. “[S]omething more than definitional slackness allows me to tell a friend that I’m reading &lt;em&gt;The Good Soldier&lt;/em&gt; as we walk down the street together,” Birkerts writes. “In some ways I &lt;em&gt;am&lt;/em&gt; reading the novel as I walk, or nap, or drive to the store for milk.”&lt;/p&gt;
&lt;p&gt;Unfortunately, this thrumming-under quality is also true of our horizontal reading. If I’ve spent too long before the pixelated page, that experience, too, clings to the hours that follow. The screen appears before my closed eyes; my thoughts vibrate at the frequency of &lt;em&gt;content&lt;/em&gt;, of &lt;em&gt;discourse&lt;/em&gt;: pithy, argumentative, living in anticipation of retort. I debate imagined trolls in the shower. “When a work compels immersion, if often also has the power to haunt from a distance,” Birkerts says, and how I wish this haunting were the sole province of great work. It isn’t: ghosts seep through the words on the screen, ghosts of screeds and inanities, of hate and idiocy, of so much—so much!—bad writing.&lt;/p&gt;
&lt;p&gt;“But perhaps when the need is strong enough we will seek out the word on the page, and the work that puts us back into the force field of deep time,” says Birkerts. “The book—and my optimism, you may sense, is not unwavering—will be seen as a haven, as a way of going off-line and into a space sanctified by subjectivity.” Oddly enough, here in the dawning days of 2019, my own optimism is strong. It seems clear to me that the need is strong enough—is as strong as it always has been and always will be—for the blossoming, bodily pleasure of reading something remarkable, the way it takes the top of my head off and shows me—palms open, an offering—what’s been churning away in there, all along.&lt;/p&gt;
&lt;p&gt;“Resonance—there is no wisdom without it,” Birkerts writes. “Resonance is a natural phenomenon, the shadow of import alongside the body of fact, and it cannot flourish except in deep time.” But time feels especially shallow these days, as the wave of one horror barely crests before it’s devoured by the next, as every morning’s shocking headline is old news by the afternoon. Weeks go by, and we might see friends only through the funhouse mirrors of Snapchat and Instagram and their so-called stories, designed to disappear. Not even the pretense of permanence remains: we refresh and refresh every tab, and are not sated. What are we waiting for? What are we hoping to find?&lt;/p&gt;
&lt;p&gt;We know perfectly well—we remember, even if dimly, the inward state that satisfies more than our itching, clicking fingers—and we know it isn’t here. &lt;em&gt;Here,&lt;/em&gt; on the internet, is a nowhere space, a shallow time. It is a flat and impenetrable surface. But with a book, we dive in; we are sucked in; we are immersed, body and soul. “We hold in our hands a way to cut against the momentum of the times,” Birkerts assures. “We can resist the skimming tendency and delve; we can restore, if only for a time, the vanishing assumption of coherence. The beauty of the vertical engagement is that it does not have to argue for itself. It is self-contained, a fulfillment.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span class=&quot;il&quot;&gt;Mairead&lt;/span&gt; Small Staid is a poet, critic, and essayist living in Minnesota.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;article-tools_desktop&quot;&gt;
&lt;nav class=&quot;article-nav&quot;&gt;&lt;p class=&quot;h6&quot;&gt;Last / Next&lt;br/&gt;Article&lt;/p&gt;
&lt;/nav&gt;&lt;/div&gt;
&lt;div class=&quot;article-tools_mobile&quot;&gt;
&lt;nav class=&quot;article-nav&quot;&gt;&lt;p class=&quot;h6&quot;&gt;Last / Next Article&lt;/p&gt;
&lt;p class=&quot;article-tools-social h6&quot;&gt;Share&lt;/p&gt;
&lt;/nav&gt;&lt;/div&gt;
&lt;footer class=&quot;article-footer&quot;&gt;&lt;section class=&quot;article-tags&quot;&gt;&lt;h6&gt;Tags&lt;/h6&gt;
&lt;/section&gt;&lt;/footer&gt;</description>
<pubDate>Tue, 12 Feb 2019 20:45:32 +0000</pubDate>
<dc:creator>wormold</dc:creator>
<og:url>https://www.theparisreview.org/blog/2019/02/08/reading-in-the-age-of-constant-distraction/</og:url>
<og:title>Reading in the Age of Constant Distraction</og:title>
<og:type>article</og:type>
<og:image>https://www.theparisreview.org/blog/wp-content/uploads/2019/02/lsende-lille-pige-1461563182_org.jpg</og:image>
<og:description>Twenty-five years ago, Sven Birkerts published “The Gutenberg Elegies: The Fate of Reading in an Electronic Age.” Have his fears and projections come to pass?</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theparisreview.org/blog/2019/02/08/reading-in-the-age-of-constant-distraction/</dc:identifier>
</item>
<item>
<title>1991 – a server-side web framework written in Forth</title>
<link>http://www.1-9-9-1.com/</link>
<guid isPermaLink="true" >http://www.1-9-9-1.com/</guid>
<description>&lt;div id=&quot;&quot;&gt;
&lt;p&gt;Getting started in &lt;strong&gt;1991&lt;/strong&gt; is easy.&lt;/p&gt;
&lt;p&gt;All you need to do is include &lt;code&gt;1991.fs&lt;/code&gt; into your Forth source file. Next, you can define your public routes using the &lt;code&gt;/1991&lt;/code&gt; word. Once your routes are all layed out, start the server using &lt;code&gt;1991:&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
\ app.fs
\ Load 1991.
include 1991.fs

\ Define our route handlers.
: handle-/ ( -- addr u )
    \ Any string returned by the handler
    \ will be output to the browser.
    s&quot; Hello, 1991.&quot; ;

\ Set up our routes.
/1991 / handle-/

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;You can run the server using &lt;code&gt;gforth app.fs&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Logging In II: Logging In, Deeper&lt;/h2&gt;
&lt;h3&gt;Route Wildcards (Fuzzy Routing / URL Mapping)&lt;/h3&gt;
&lt;p&gt;If you want to specify that some part of a route is a wildcard (accepts any value), then you can wrap some named value in &lt;code&gt;&amp;lt;chevrons&amp;gt;&lt;/code&gt;. &lt;strong&gt;1991&lt;/strong&gt; will accept any URL that matches your wildcard pattern, setting the internal value of whatever you place between the chevrons to whatever is actually requested.&lt;/p&gt;
&lt;p&gt;In the example below, &lt;code&gt;&amp;lt;uid&amp;gt;&lt;/code&gt; specifies that we're willing to accept any (non-empty) value in its place which we'd like to access using the name &lt;code&gt;uid&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
\ wildcards.fs
\ Load 1991.
include 1991.fs

\ Define our route handler.
: handle-wildcard-route ( -- addr u )
    s&quot; contents of the route request: &quot; get-query-string s+ ;

\ Set up our route.
/1991 /users/&amp;lt;uid&amp;gt; handle-wildcard-route

\ We can set up multiple wildcards too (must be slash-separated).
/1991 /users/&amp;lt;uid&amp;gt;/posts/&amp;lt;pid&amp;gt; handle-wildcard-route

\ Start server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;All wildcards are treated similar to query string arguments. As such, wildcards can be retrieved using &lt;code&gt;get-query-string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the example above, visiting &lt;code&gt;http://localhost:8080/users/urlysses&lt;/code&gt; will result in the following query string: &lt;code&gt;uid=urlysses&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;File Serving&lt;/h3&gt;
&lt;p&gt;Use a &lt;code&gt;public/&lt;/code&gt; directory to act as a basic fileserver. Whenever a requested URL doesn't resolve through the registered routes, &lt;strong&gt;1991&lt;/strong&gt; will attempt to find the requested route within your specified public directory.&lt;/p&gt;
&lt;pre&gt;
\ public.fs
\ Load 1991.
include 1991.fs

\ Specify the location of our public directory.
\ Anything in the public/ directory within the
\ same dir as this source file will resolve.
\ You can change &quot;public&quot; to anything you want
\ as long as it matches your directory name.
sourcedir s&quot; public&quot; s+ set-public-path

\ We can set mimetypes using the `filetype:` word.
\ In the case below, we want .mp4 files to be served
\ with the content-type video/mp4.
s&quot; video/mp4&quot; filetype: mp4

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;p&gt;In the above example, If we have a file &lt;code&gt;public/my-video.mp4&lt;/code&gt;, then it will be available through &lt;code&gt;http://localhost:8080/my-video.mp4&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Views&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1991&lt;/strong&gt; offers basic templating through views.&lt;/p&gt;
&lt;p&gt;In order to get started, you should specify the &lt;code&gt;views/&lt;/code&gt; path. Notice the trailing slash, which differs from how we define &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once you've specified your views/ directory, you can write views/ files to it. This can be any kind of file, honestly. The benefit offered by views/ is the ability to use basic templating. You can write any valid Forth code within opening (&lt;code&gt;&amp;lt;$&lt;/code&gt; ) and closing ( &lt;code&gt;$&amp;gt;&lt;/code&gt;) tags. Additionally, you can use the &lt;code&gt;import&lt;/code&gt; word to import other views into your view.&lt;/p&gt;
&lt;pre&gt;
\ views.fs
\ Load 1991.
include 1991.fs

\ Specify the location of our views directory.
sourcedir s&quot; views/&quot; s+ set-view-path

\ Define some words we'll use within
\ our view.
: page-title ( -- addr u )
    s&quot; Dynamic page title&quot; ;
: ten-lines ( -- )
    10 0 do
        s&quot; line &quot; i s&amp;gt;d  s+
        s&quot; &amp;lt;br&amp;gt;&quot; s+
        $type
    loop ;

\ Use render-view to output the contents
\ of a file in the views/ directory.
: handle-/
    s&quot; v-index.html&quot; render-view ;

/1991 / handle-/

\ Start the server on port 8080.
8080 1991:
&lt;/pre&gt;
&lt;pre&gt;
\ views/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
        &amp;lt;title&amp;gt;&amp;lt;$ page-title $type $&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;$ ten-lines $&amp;gt;
        &amp;lt;$ s&quot; imported-view.html&quot; import $&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;pre&gt;
\ views/imported-view.html
It's possible to import view files from within other view files. This is from &amp;lt;code&amp;gt;views/imported-view.html&amp;lt;/code&amp;gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div id=&quot;&quot;&gt;
&lt;h2&gt;Why is &lt;code&gt;1991:&lt;/code&gt; post-fix when &lt;code&gt;/1991&lt;/code&gt; is pre-fix?&lt;/h2&gt;
&lt;p&gt;Forth is a (mostly) post-fix notation language. So, for example, you'd write two plus two as &lt;code&gt;2 2 +&lt;/code&gt;. This is the language's natural and immediate notation. Along those lines, &lt;code&gt;1991:&lt;/code&gt; is an immediate word——running it results in immediate action. As such, we use Forth's post-fix notation to set the port and start the server immediately. Alternately, &lt;code&gt;/1991&lt;/code&gt; doesn't exactly have immediate effect per se. All it does is tell &lt;strong&gt;1991&lt;/strong&gt; that any request to &lt;code&gt;/path&lt;/code&gt; should be handled by &lt;code&gt;path-handler&lt;/code&gt;. As such, we opt to write non-immediate code using pre-fix notation.&lt;/p&gt;
&lt;h2&gt;You're using Gforth, which came out in 1992. Also, it's 2017.&lt;/h2&gt;
&lt;p&gt;Okay. But Fredric Jameson establishes that in postmodernism we have experienced a weakening sense of historisity such that what is, what was, and what will be all exist as presents in time. &lt;a href=&quot;https://en.wikipedia.org/wiki/Forth_(programming_language)#History&quot;&gt;1970&lt;/a&gt;, &lt;a href=&quot;https://groups.google.com/forum/#!msg/alt.hypertext/eCTkkOoWTAY/bJGhZyooXzkJ&quot;&gt;1991&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gforth#History&quot;&gt;1992&lt;/a&gt;, and &lt;a href=&quot;http://www.1-9-9-1.com/&quot;&gt;2017&lt;/a&gt; all happen simultaneously. Hence developers working on new projects while still coding in decades-old text editors. They write the future in the past and are made present in so doing.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Tue, 12 Feb 2019 19:40:51 +0000</pubDate>
<dc:creator>ChrisArchitect</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.1-9-9-1.com/</dc:identifier>
</item>
<item>
<title>Two Large Chinese Borrowers Miss Bond Payments, Sources Say</title>
<link>https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments&quot;&gt;https://www.bloomberg.com/news/articles/2019-02-11/two-large-chinese-borrowers-are-said-to-miss-bond-payments&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19145627&quot;&gt;https://news.ycombinator.com/item?id=19145627&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 272&lt;/p&gt;
&lt;p&gt;# Comments: 124&lt;/p&gt;
</description>
<pubDate>Tue, 12 Feb 2019 17:39:33 +0000</pubDate>
<dc:creator>docker_up</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=a6cb66f0-2fa8-11e9-a411-15958b34022d&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wMi0xMS90d28tbGFyZ2UtY2hpbmVzZS1ib3Jyb3dlcnMtYXJlLXNhaWQtdG8tbWlzcy1ib25kLXBheW1lbnRz</dc:identifier>
</item>
</channel>
</rss>