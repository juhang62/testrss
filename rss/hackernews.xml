<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>An “acoustic metamaterial” that can cancel 94 percent of sound</title>
<link>https://www.bu.edu/research/articles/researchers-develop-acoustic-metamaterial-noise-cancellation-device/</link>
<guid isPermaLink="true" >https://www.bu.edu/research/articles/researchers-develop-acoustic-metamaterial-noise-cancellation-device/</guid>
<description>&lt;header readability=&quot;4.5&quot;&gt;
&lt;h2 class=&quot;dek&quot;&gt;Mechanical engineers have developed an “acoustic metamaterial” that can cancel 94 percent of sound&lt;/h2&gt;
&lt;div class=&quot;bannerContainer bannerContainer-contentWidth&quot; readability=&quot;39&quot;&gt;&lt;img src=&quot;https://www.bu.edu/research/files/2019/02/resized-19-1023-SOUND-025.jpg&quot; alt=&quot;Boston University Ph. D. candidate Reza Ghaffarivardavagh poses with his research team. Reza holds the noise cancellation devices his team developed over his ears while his teammates make noise banging a pot, playing a trumpet, and a boombox in the background&quot; width=&quot;800&quot; class=&quot;size-full wp-image-30151&quot;/&gt;Boston University mechanical engineers have created synthetic, sound-silencing structures—acoustic metamaterials—that can block 94% of sounds. Reza Ghaffarivardavagh (ENG) (front center) holds two of the open, ringlike structures over his ears while Stephan Anderson (MED) (left), Xin Zhang (ENG) (rear center), and Jacob Nikolajczyk (ENG) (right) make a racket. Photo by Cydney Scott&lt;/div&gt;
&lt;h3 class=&quot;byline&quot;&gt;&lt;span class=&quot;byline-label&quot;&gt;By &lt;span class=&quot;byline-authors&quot;&gt;&lt;span class=&quot;byline-author vcard&quot;&gt;&lt;span class=&quot;fn&quot;&gt;Kat J. McAlpine&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/header&gt;&lt;p&gt;What sounds would you mute if you could? A pair of Boston University mechanical engineers are asking that question, with the ever-increasing din of drone propellers, airplane turbines, MRI machines, and urban noise pollution blaring in the mind’s ear.&lt;/p&gt;&lt;p&gt;“Today’s sound barriers are literally thick heavy walls,” says Reza Ghaffarivardavagh. Although noise-mitigating barricades, called sound baffles, can help drown out the whoosh of rush hour traffic or contain the symphony of music within concert hall walls, they are a clunky approach not well suited to situations where airflow is also critical. Imagine barricading a jet engine’s exhaust vent—the plane would never leave the ground. Instead, workers on the tarmac wear earplugs to protect their hearing from the deafening roar.&lt;/p&gt;
&lt;p&gt;Xin Zhang and Ghaffarivardavagh were enticed by an alluring question: “Can we design a structure that can block noise but preserve air passage?”&lt;/p&gt;
&lt;p&gt;Leaning on their mathematical prowess and the technology of 3D printing, it turns out they can. In a &lt;a href=&quot;https://journals.aps.org/prb/abstract/10.1103/PhysRevB.99.024302&quot;&gt;January 2019 &lt;em&gt;Physical Review&lt;/em&gt; paper&lt;/a&gt;, the researchers argue that it’s quite possible to silence noise using an open, ringlike structure, created to mathematically perfect specifications, for cutting out sounds while maintaining airflow.&lt;/p&gt;
&lt;h3&gt;Numbers and noise control&lt;/h3&gt;
&lt;p&gt;“I’ve always been interested in acoustics,” says Ghaffarivardavagh, who finished his BSc in mechanical engineering at Sharif University of Technology in Tehran, Iran, before coming to Boston University for graduate school. Now, in Zhang’s lab, he’s close to finishing his PhD. “I like to work on something that I can hear or see the result. Something that I can have an impact on with issues we are facing nowadays.”&lt;/p&gt;
&lt;p&gt;Having lived in other major cities before coming to Boston, Zhang and Ghaffarivardavagh have always marveled at the layered urban soundscape enveloping them. In Boston, the cacophony of the city is garbled together from airplanes flying overhead, the engines and horns of cars, trucks, and buses on the street, the rumble and screech of MBTA trolleys, and the hum of building appliances and power sources.&lt;/p&gt;
&lt;p&gt;City life is so noisy, you have to find a way to create quiet moments, they say.&lt;/p&gt;
&lt;p&gt;That got them dreaming up a sound baffle that wasn’t a barrier at all, but instead an open conduit. Such a feat could only be possible by developing a material with unusual and unnatural properties (known as a metamaterial), in this case with the ability to exert an isolated influence on sounds—an acoustic metamaterial.&lt;/p&gt;
&lt;p&gt;“I’ve been working on metamaterials for more than a decade,” says Zhang, a multidisciplinary professor at the College of Engineering and the Photonics Center. “But it was Reza that gradually got me more excited about the fundamental idea of a marriage between acoustics and metamaterials. If you ask me and my colleagues, acoustic metamaterials is a relatively young direction…. It’s the future.”&lt;/p&gt;
&lt;h3&gt;Mute button, incarnated&lt;/h3&gt;
&lt;p&gt;Ghaffarivardavagh and Zhang let mathematics—a shared passion that has buoyed both of their engineering careers and made them well-suited research partners—guide them toward a workable design for what the acoustic metamaterial would look like.&lt;/p&gt;
&lt;p&gt;“Sound is made by very tiny disturbances in the air. So, our goal is to silence those tiny vibrations,” Ghaffarivardavagh and Zhang say. “If we want the inside of a structure to be open air, then we have to keep in mind that this will be the pathway through which sound travels.”&lt;/p&gt;
&lt;p&gt;They calculated the dimensions and specifications that the metamaterial would need to have in order to interfere with the transmitted sound waves, preventing sound—but not air—from being radiated through the open structure. The basic premise is that the metamaterial needs to be shaped in such a way that it sends incoming sounds back to where they came from, they say.&lt;/p&gt;
&lt;div class=&quot;video-right&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;responsiveVideo-wrapper&quot; readability=&quot;10&quot;&gt;

&lt;p class=&quot;caption&quot;&gt;On one end of the pipe, a loudspeaker blasts a noise. On the other end, the open acoustic silencing metamaterial redirects the sound as long as it's fitted in place. Video courtesy of the Zhang lab&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As a test case, they decided to create a structure that could silence sound from a loudspeaker. Based on their calculations, they modeled the physical dimensions that would most effectively silence noises. Bringing those models to life, they used 3D printing to materialize an open, noise-canceling structure made of plastic.&lt;/p&gt;
&lt;p&gt;Trying it out in the lab, the researchers sealed the loudspeaker into one end of a PVC pipe. On the other end, the tailor-made acoustic metamaterial was fastened into the opening. With the hit of the play button, the experimental loudspeaker set-up came oh-so-quietly to life in the lab. Standing in the room, based on your sense of hearing alone, you’d never know that the loudspeaker was blasting an irritatingly high-pitched note. If, however, you peered into the PVC pipe, you would see the loudspeaker’s subwoofers thrumming away.&lt;/p&gt;
&lt;p&gt;The metamaterial, ringing around the internal perimeter of the pipe’s mouth, worked like a mute button incarnate until the moment when Ghaffarivardavagh reached down and pulled it free. The lab suddenly echoed with the screeching of the loudspeaker’s tune.&lt;/p&gt;
&lt;p&gt;“The moment we first placed and removed the silencer…was literally night and day,” says Jacob Nikolajczyk, who in addition to being a study coauthor and former undergraduate researcher in Zhang’s lab is a passionate vocal performer. “We had been seeing these sorts of results in our computer modeling for months—but it is one thing to see modeled sound pressure levels on a computer, and another to hear its impact yourself.”&lt;/p&gt;
&lt;p&gt;By comparing sound levels with and without the metamaterial fastened in place, the team found that they could silence nearly all—94 percent to be exact—of the noise, making the sounds emanating from the loudspeaker imperceptible to the human ear.&lt;/p&gt;
&lt;h3&gt;A quieter world&lt;/h3&gt;
&lt;p&gt;Now that their prototype has proved so effective, the researchers have some big ideas about how their acoustic-silencing metamaterial could go to work making the real world quieter.&lt;/p&gt;
&lt;p&gt;“Drones are a very hot topic,” Zhang says. Companies like Amazon are interested in using drones to deliver goods, she says, and “people are complaining about the potential noise.”&lt;/p&gt;
&lt;p&gt;“The culprit is the upward-moving fan motion,” Ghaffarivardavagh says. “If we can put sound-silencing open structures beneath the drone fans, we can cancel out the sound radiating toward the ground.”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.bu.edu/research/files/2019/02/acoustic-metamaterial-noise-cancellation-device-19-1023-SOUND-060-2-752x502.jpg&quot; alt=&quot;Detail photo of a ring shaped noise cancellation device built using an acoustic metamaterial both developed by Boston University engineers.&quot; class=&quot;size-large wp-image-30150&quot; width=&quot;550&quot; srcset=&quot;https://www.bu.edu/research/files/2019/02/acoustic-metamaterial-noise-cancellation-device-19-1023-SOUND-060-2-752x502.jpg 752w, https://www.bu.edu/research/files/2019/02/acoustic-metamaterial-noise-cancellation-device-19-1023-SOUND-060-2-300x200.jpg 300w, https://www.bu.edu/research/files/2019/02/acoustic-metamaterial-noise-cancellation-device-19-1023-SOUND-060-2-768x513.jpg 768w, https://www.bu.edu/research/files/2019/02/acoustic-metamaterial-noise-cancellation-device-19-1023-SOUND-060-2.jpg 995w&quot; sizes=&quot;(max-width: 752px) 100vw, 752px&quot;/&gt;The mathematically designed, 3D-printed acoustic metamaterial is shaped in such a way that it sends incoming sounds back to where they came from, Ghaffarivardavagh and Zhang say. Inside the outer ring, a helical pattern interferes with sounds, blocking them from transmitting through the open center while preserving air’s ability to flow through. Photo by Cydney Scott&lt;/p&gt;
&lt;p&gt;Closer to home—or the office—fans and HVAC systems could benefit from acoustic metamaterials that render them silent yet still enable hot or cold air to be circulated unencumbered throughout a building.&lt;/p&gt;
&lt;p&gt;Ghaffarivardavagh and Zhang also point to the unsightliness of the sound barriers used today to reduce noise pollution from traffic and see room for an aesthetic upgrade. “Our structure is super lightweight, open, and beautiful. Each piece could be used as a tile or brick to scale up and build a sound-canceling, permeable wall,” they say.&lt;/p&gt;
&lt;p&gt;The shape of acoustic-silencing metamaterials, based on their method, is also completely customizable, Ghaffarivardavagh says. The outer part doesn’t need to be a round ring shape in order to function.&lt;/p&gt;
&lt;p&gt;“We can design the outer shape as a cube or hexagon, anything really,” he says. “When we want to create a wall, we will go to a hexagonal shape” that can fit together like an open-air honeycomb structure.&lt;/p&gt;
&lt;p&gt;Such walls could help contain many types of noises. Even those from the intense vibrations of an MRI machine, Zhang says.&lt;/p&gt;
&lt;p&gt;According to Stephan Anderson, a professor of radiology at BU School of Medicine and a coauthor of the study, the acoustic metamaterial could potentially be scaled “to fit inside the central bore of an MRI machine,” shielding patients from the sound during the imaging process.&lt;/p&gt;
&lt;p&gt;Zhang says the possibilities are endless, since the noise mitigation method can be customized to suit nearly any environment: “The idea is that we can now mathematically design an object that can block the sounds of anything,” she says.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This work was supported by a Boston University Materials Innovation Grant and Dean’s Catalyst Award.&lt;/em&gt;&lt;/p&gt;

&lt;section class=&quot;publish-details&quot; readability=&quot;4&quot;&gt;&lt;p&gt;Published &lt;time datetime=&quot;Tuesday, February 26, 2019&quot; pubdate=&quot;&quot;&gt;Tuesday, February 26, 2019&lt;/time&gt;&lt;/p&gt;
&lt;/section&gt;
</description>
<pubDate>Sat, 09 Mar 2019 05:37:51 +0000</pubDate>
<dc:creator>njaremko</dc:creator>
<og:image>http://www.bu.edu/research/files/2019/02/social-noise-cancellation-device-19-1023-SOUND-060-2.jpg</og:image>
<og:description>Boston University engineers have created a sound baffle that isn’t a barrier at all, but instead an open conduit that allows air to pass through. Such a feat was only possible by developing a synthetic material with the special ability to cancel sounds but not air flow—an acoustic metamaterial.</og:description>
<og:title>BU Engineers Develop New Acoustic Metamaterial and Noise Cancellation Device</og:title>
<og:url>x</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bu.edu/research/articles/researchers-develop-acoustic-metamaterial-noise-cancellation-device/</dc:identifier>
</item>
<item>
<title>A generalised solution to distributed consensus</title>
<link>https://blog.acolyer.org/2019/03/08/a-generalised-solution-to-distributed-consensus/</link>
<guid isPermaLink="true" >https://blog.acolyer.org/2019/03/08/a-generalised-solution-to-distributed-consensus/</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1902.06776&quot;&gt;A generalised solution to distributed consensus&lt;/a&gt; Howard &amp;amp; Mortier, &lt;em&gt;arXiv’19&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a draft paper that Heidi Howard recently &lt;a href=&quot;https://twitter.com/heidiann360/status/1098167557792718849?s=21&quot;&gt;shared with the world via Twitter&lt;/a&gt;, and here’s the &lt;a href=&quot;https://hh360.user.srcf.net/blog/2019/02/towards-an-intuitive-high-performance-consensus-algorithm/&quot;&gt;accompanying blog post&lt;/a&gt;. It caught my eye for promising a generalised solution to the consensus problem, and also for using reasoning over immutable state to get there. The state maintained at each server is &lt;a href=&quot;https://blog.acolyer.org/2019/03/06/keeping-calm-when-distributed-consistency-is-easy/&quot;&gt;monotonic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Consensus is a &lt;a href=&quot;https://blog.acolyer.org/2015/03/01/cant-we-all-just-agree/&quot;&gt;notoriously hard problem&lt;/a&gt;, and Howard has been deep in the space for several years now. See for example the 2016 paper on &lt;a href=&quot;https://blog.acolyer.org/2016/09/27/flexible-paxos-quorum-intersection-revisited/&quot;&gt;Flexible Paxos&lt;/a&gt;. The quest for the holy grail here is to find a unifying and easily understandable protocol that can be instantiated in different configurations allowing different trade-offs to be made according to the situation.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;This paper re-examines the problem of distributed consensus with the aim of improving performance and understanding. We proceed as follows. Once we have defined the problem of consensus, we propose a generalised solution to consensus that uses only immutable state to enable more intuitive reasoning about correctness. We subsequently prove that both Paxos and Fast Paxos are instances of our generalised consensus algorithm and thus show that both algorithms are conservative in their approach.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;The distributed consensus problem&lt;/h3&gt;
&lt;p&gt;We have a set of servers (at least two) that need to agree upon a value. Clients take as input a value to be written, and produce as output the value agreed by the servers.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The output value must have been the input value of a client (ruling out simple solutions that always output a fixed value for example)&lt;/li&gt;
&lt;li&gt;All clients that produce an output must output the same value&lt;/li&gt;
&lt;li&gt;All clients must eventually produce an output if the system is reliable and synchronous for a sufficient period&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Note that we’re talking here about the ‘inner game’ – this is just to agree upon a single value, whereas in a real deployment we’ll probably run multiple rounds of the protocol to agree upon a series of values. Moreover, we’re assuming here that the set of clients and servers is fixed and known to the clients. The ‘clients’ are probably not end-user clients, but more likely to be system processes making using of a consensus service. Configuration changes and membership epochs is another layer we’ll probably add-on in real deployments, but is also out of scope here.&lt;/p&gt;
&lt;h3&gt;Building blocks: immutable registers and quorums&lt;/h3&gt;
&lt;p&gt;We have a fixed set of &lt;em&gt;n&lt;/em&gt; servers, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_0%2C+S_1%2C+...%2C+S_n&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;S_0, S_1, ..., S_n&quot; title=&quot;S_0, S_1, ..., S_n&quot; class=&quot;latex&quot; /&gt;. Each server has a tape it can write to, aka, an infinite array of &lt;strong&gt;write-once&lt;/strong&gt; persistent registers, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=R_0%2C+R_1%2C+...&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;R_0, R_1, ...&quot; title=&quot;R_0, R_1, ...&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p&gt;Initially the tape is blank – all registers are &lt;em&gt;unwritten&lt;/em&gt;. Once we write a value in a register slot it can never be changed. In addition to values provided by clients the system has one special value, denoted &lt;em&gt;nil&lt;/em&gt; or &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbot&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;\bot&quot; title=&quot;\bot&quot; class=&quot;latex&quot; /&gt;.&lt;/p&gt;
&lt;p&gt;We’re going to be interested in sets of values from the same register slot across all servers. A &lt;em&gt;register set&lt;/em&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=i&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;i&quot; title=&quot;i&quot; class=&quot;latex&quot; /&gt; is the set of all registers &lt;img src=&quot;https://s0.wp.com/latex.php?latex=R_i&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;R_i&quot; title=&quot;R_i&quot; class=&quot;latex&quot; /&gt; across all servers.&lt;/p&gt;
&lt;p&gt;If enough of the registers in a register set have the same (non- &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5Cbot&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;\bot&quot; title=&quot;\bot&quot; class=&quot;latex&quot; /&gt;) value, then we will say that the servers have &lt;em&gt;decided&lt;/em&gt; upon that value. How many registers in a register set is &lt;em&gt;enough&lt;/em&gt; though? That’s something we get to decide as part of the configuration of the protocol. In fact, we specify more than just the &lt;em&gt;number&lt;/em&gt; of register values that must be in agreement, we also specify which servers they belong to. A (non-empty) subset of servers that can decide a value between them is called a &lt;em&gt;quorum&lt;/em&gt;. More precisely, “&lt;em&gt;a quorum, Q, is a (non-empty) subset of servers, such that if all servers have the same (non-nil) value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; in the same register then &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; is said to be decided.&lt;/em&gt;“&lt;/p&gt;
&lt;p&gt;The word ‘quorum’ is often strongly associated with ‘majority,’ but note that this doesn’t have to be the case. The specification allows us to declare a quorum containing just a single server if we want to. The dictionary definition of quorum is “the minimum number of members of an assembly or society that must be present at any of its meetings to make the proceedings of that meeting valid.” Note that there is also no requirement here for overlapping quorum memberships (more on that later).&lt;/p&gt;
&lt;p&gt;Each register set is associated with a set of quorums. That is, on a register-set by register-set basis, we can specify exactly which subsets of servers are allowed to decide a value. For example:&lt;/p&gt;
&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-1.jpeg?w=640&quot; alt=&quot;&quot; /&gt;&lt;p&gt;Why on earth we would want to have different quorum sets for different register sets— since we’re only agreeing on a single value at the end of the day!— will become more apparent when we look at how to layer a consensus protocol on top of the registers.&lt;/p&gt;
&lt;p&gt;Given quorum configurations and register values for register sets, we can see if any quorum is satisfied and a decision reached.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;The state of all registers can be represented in a table, known as a &lt;em&gt;state table&lt;/em&gt;, where each column represents the state of one server and each row represents a register set. By combining a configuration with a state table, we can determine whether any decision(s) have been reached.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-2.jpeg?w=520&quot; alt=&quot;&quot; /&gt;&lt;p&gt;Now, we have to be a little careful here and remember that the state table is a logical construct. Each server knows the values of its own registers, and clients can maintain their own view of the global state table as they receive information from servers. Given the immutable constructs though, we know that once a client has assembled enough information to call a value decided, it is finally decided.&lt;/p&gt;
&lt;h3&gt;Four rules&lt;/h3&gt;
&lt;p&gt;There are some rules that need to be followed for this to work as a consensus system.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Quorum agreement&lt;/strong&gt;. A client may only output a (non-nil) value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; if it has read &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; from a quorum of servers in the same register set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New value&lt;/strong&gt;. A client may only write a (non-nil) value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; provided that &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; is the client’s input value or that the client has read &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; from a register.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Current decision&lt;/strong&gt;. A client may only write a (non-nil) value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; to register &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;r&quot; title=&quot;r&quot; class=&quot;latex&quot; /&gt; on server &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;s&quot; title=&quot;s&quot; class=&quot;latex&quot; /&gt; provided that if &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; is decided in register set &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;r&quot; title=&quot;r&quot; class=&quot;latex&quot; /&gt; by a quorum &lt;img src=&quot;https://s0.wp.com/latex.php?latex=Q+%5Cin+Q_r&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;Q \in Q_r&quot; title=&quot;Q \in Q_r&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=s+%5Cin+Q&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;s \in Q&quot; title=&quot;s \in Q&quot; class=&quot;latex&quot; /&gt; then no value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v%27&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v'&quot; title=&quot;v'&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v+%5Cneq+v%27&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v \neq v'&quot; title=&quot;v \neq v'&quot; class=&quot;latex&quot; /&gt; can also be decided in register set &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;r&quot; title=&quot;r&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Previous decisions&lt;/strong&gt;. A client may only write a (non-nil) value to register &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;r&quot; title=&quot;r&quot; class=&quot;latex&quot; /&gt; provided no value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v%27&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v'&quot; title=&quot;v'&quot; class=&quot;latex&quot; /&gt; where &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v+%5Cneq+v%27&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v \neq v'&quot; title=&quot;v \neq v'&quot; class=&quot;latex&quot; /&gt; can be decided by the quorums in registers sets 0 to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=r+-+1&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;r - 1&quot; title=&quot;r - 1&quot; class=&quot;latex&quot; /&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The first two rules are pretty straightforward. Rule 3 ensures that all decisions made by a register set will be for the same value, while rule 4 ensures that all decisions made by different register sets are for the same value.&lt;/p&gt;
&lt;p&gt;Obeying these rules places some further constraints on the system configuration. Say we have two quorums for register set &lt;em&gt;i&lt;/em&gt;, &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7BS_0%5C%7D&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;\{S_0\}&quot; title=&quot;\{S_0\}&quot; class=&quot;latex&quot; /&gt; and &lt;img src=&quot;https://s0.wp.com/latex.php?latex=%5C%7BS_1%5C%7D&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;\{S_1\}&quot; title=&quot;\{S_1\}&quot; class=&quot;latex&quot; /&gt;. A client writing to the register on &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_0&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;S_0&quot; title=&quot;S_0&quot; class=&quot;latex&quot; /&gt; has no way of knowing whether or not some other client might be writing a different value to &lt;img src=&quot;https://s0.wp.com/latex.php?latex=S_1&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;S_1&quot; title=&quot;S_1&quot; class=&quot;latex&quot; /&gt;, hence we couldn’t uphold rule 3. There are three ways we can handle this situation:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The trivial solution is to allow only one quorum per register set&lt;/li&gt;
&lt;li&gt;With multiple quorums, we can require that all quorums for a register set intersect (i.e., any two quorums will have at least one overlapping member)&lt;/li&gt;
&lt;li&gt;We can use &lt;em&gt;client restricted configurations&lt;/em&gt;. Here ownership of a given register set is assigned to a given client, such that only that client can write values in that register set. Assuming the client is consistent with the values it writes, all will be well. One such strategy would be a round-robin ownership of register sets:&lt;/li&gt;
&lt;/ul&gt;&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-4.jpeg?w=480&quot; alt=&quot;&quot; /&gt;&lt;p&gt;To comply with rule 4, clients need to consult their emerging view of the global state table, aka their &lt;em&gt;local&lt;/em&gt; state table, and figure out whether any decision has been or could be reached by earlier register sets. The client maintains a decision table with one entry for each quorum of each register set. This table tracks what the client knows about the decisions made by the quorum. Possible values for a quorum are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ANY – any value could yet be decided. (All quorums for all register sets start out in this state)&lt;/li&gt;
&lt;li&gt;MAYBE &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; – if this quorum reaches a decision, then the value will be &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt;&lt;/li&gt;
&lt;li&gt;DECIDED &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; – the value &lt;img src=&quot;https://s0.wp.com/latex.php?latex=v&amp;amp;bg=ffffff&amp;amp;fg=333333&amp;amp;s=0&quot; alt=&quot;v&quot; title=&quot;v&quot; class=&quot;latex&quot; /&gt; has been decided by the quorum (a final state)&lt;/li&gt;
&lt;li&gt;NONE – the quorum will not decide a value; a final state&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;As the client receives information from servers, it updates the decision table according to the following rules:&lt;/p&gt;
&lt;p&gt;Clients use the decision table to implement the four rules for correctness as follows:&lt;/p&gt;
&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-5.jpeg?w=640&quot; alt=&quot;&quot; /&gt;&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;Our aim is to make reasoning about correctness sufficiently intuitive that proofs are not necessary to make a convincing case for the safety…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You’ll be pleased to know however that proofs &lt;em&gt;are&lt;/em&gt; included, and you’ll find them in Appendix A.&lt;/p&gt;
&lt;h3&gt;Paxos over immutable registers&lt;/h3&gt;
&lt;p&gt;As a paper summary, I guess this write-up so far has been a spectacular fail! I’m already over my target length, and have probably taken more words to explain the core ideas than the original paper does!! The only defence I can offer is that there are no short-cuts when it comes to thinking about consensus 😉&lt;/p&gt;
&lt;p&gt;An important part of the paper is to show that the register-based scheme just outlined can be instantiated to realise a number of consensus schemes from the literature, including Paxos and Fast Paxos. I’m out of space to do that proper justice, but here’s a sneak-peek at the core Paxos algorithm:&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;We observe that Paxos is a conservative instance of our generalised solution to consensus. The configuration used by Paxos is majorities for all register sets.. Paxos also uses client restricted for all register sets. The purpose of phase one is to implement rule 4, and the purpose of phase two is to implement rule 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-8.jpeg?w=640&quot; alt=&quot;&quot; /&gt;&lt;p&gt;If you differentiate between the quorums used for each register set and which phase of Paxos the quorum is used for, you can arrive at &lt;a href=&quot;https://blog.acolyer.org/2016/09/27/flexible-paxos-quorum-intersection-revisited/&quot;&gt;Flexible Paxos&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Mixing it up&lt;/h3&gt;
&lt;p&gt;Section 5 of the paper shows how to derive Fast Paxos, and in section six you’ll find a brief sketch of three other points in the configuration space named co-located consensus, fixed-majority consensus, and reconfigurable consensus.&lt;/p&gt;
&lt;blockquote class=&quot;wp-block-quote&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;In this paper, we have reframed the problem of distributed consensus in terms of write-once registers and thus proposed a generalised solution to distributed consensus. We have demonstrated that this solution not only uniﬁes existing algorithms including Paxos and Fast Paxos but also demonstrates that such algorithms are conservative as their quorum intersection requirements and quorum agreement rules can be substantially weakened. We have illustrated the power of our generalised consensus algorithm by proposing three novel algorithms for consensus, demonstrating a few interesting points on the diverse array of algorithms made possible by our abstract.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&quot;jp-post-flair&quot; class=&quot;sharedaddy sd-like-enabled sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;sharedaddy sd-sharing-enabled&quot;&gt;
&lt;div class=&quot;robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Share this:&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded&quot; id=&quot;like-post-wrapper-23592848-8385-5c83e32be1216&quot; data-src=&quot;//widgets.wp.com/likes/index.html?ver=20180319#blog_id=23592848&amp;amp;post_id=8385&amp;amp;origin=adriancolyer.wordpress.com&amp;amp;obj_id=23592848-8385-5c83e32be1216&quot; data-name=&quot;like-post-frame-23592848-8385-5c83e32be1216&quot;&gt;
&lt;h3 class=&quot;sd-title&quot;&gt;Like this:&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;button&quot;&gt;&lt;span&gt;Like&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;loading&quot;&gt;Loading...&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h3 class=&quot;jp-relatedposts-headline&quot;&gt;&lt;em&gt;Related&lt;/em&gt;&lt;/h3&gt;
&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 08 Mar 2019 23:55:19 +0000</pubDate>
<dc:creator>based2</dc:creator>
<og:type>article</og:type>
<og:title>A generalised solution to distributed consensus</og:title>
<og:url>https://blog.acolyer.org/2019/03/08/a-generalised-solution-to-distributed-consensus/</og:url>
<og:description>A generalised solution to distributed consensus Howard &amp; Mortier, arXiv’19 This is a draft paper that Heidi Howard recently shared with the world via Twitter, and here’s the accompanying …</og:description>
<og:image>https://adriancolyer.files.wordpress.com/2019/03/generalised-consensus-fig-8.jpeg?w=640</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.acolyer.org/2019/03/08/a-generalised-solution-to-distributed-consensus/</dc:identifier>
</item>
<item>
<title>How to pass a programming interview (2016)</title>
<link>https://triplebyte.com/blog/how-to-pass-a-programming-interview</link>
<guid isPermaLink="true" >https://triplebyte.com/blog/how-to-pass-a-programming-interview</guid>
<description>&lt;p&gt;&lt;em&gt;This post started as the preparation material we send to our candidates, but we decided to post it publicly.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Being a good programmer has a surprisingly small role in passing programming interviews. To be a productive programmer, you need to be able to solve large, sprawling problems over weeks and months. Each question in an interview, in contrast, lasts less than one hour. To do well in an interview, then, you need to be able to solve small problems quickly, under duress, while explaining your thoughts clearly. This is a different skill &lt;sup id=&quot;ref1&quot;&gt;&lt;a href=&quot;https://triplebyte.com/blog/how-to-pass-a-programming-interview#fn1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. On top of this, interviewers are often poorly trained and inattentive (they would rather be programming), and ask questions far removed from actual work. They bring bias, pattern matching, and a lack of standardization.&lt;/p&gt;
&lt;p&gt;Running Triplebyte, I see this clearly. We interview engineers without looking at resumes, and fast-track them to on-sites at top tech companies. We’ve interviewed over 1000 programmers in the last nine months. We focus heavily on practical programming, and let candidates pick one of several ways to be evaluated. This means we work with many (very talented) programmers without formal CS training. Many of these people do poorly on interviews. They eat large sprawling problems for breakfast, but they balk at 45-min algorithm challenges.&lt;/p&gt;
&lt;p&gt;The good news is that interviewing is a skill that can be learned. We’ve had success teaching candidates to do better on interviews. Indeed, the quality that most correlates with a Triplebyte candidate passing interviews at companies is not raw talent, but rather diligence. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I fundamentally do not believe that good programmers should have to learn special interviewing skills to do well on interviews.&lt;/strong&gt; But the status quo is what it is. We’re working at Triplebyte to change this. If you’re interested in what we’re doing, we’d love you to &lt;a href=&quot;https://triplebyte.com&quot;&gt;check out our process&lt;/a&gt;. In the meantime, if you do want to get better at interviewing, this blog post describes how we think you can most effectively do so. &lt;/p&gt;
&lt;h2&gt;1. Be enthusiastic&lt;/h2&gt;
&lt;p&gt;Enthusiasm has a huge impact on interview results. About 50% of the Triplebyte candidates who fail interviews at companies fail for non-technical reasons. This is usually described by the company as a “poor culture fit”. Nine times out of ten, however, culture fit just means enthusiasm for what a company does. Companies want candidates who are excited about their mission. This carries as much weight at many companies as technical skill. This makes sense. Excited employees will be happier and work harder.&lt;/p&gt;
&lt;p&gt;The problem is that this can be faked. Some candidates manage to convince every company they talk to that it’s their dream job, while others (who are genuinely excited) fail to convince anyone. We’ve seen this again and again. The solution is for everyone to get better at showing their enthusiasm. This is not permission to lie. But interviewing is like dating. No one wants to be told on a first date that they are one option among many, even though this is usually the case. Similarly, most programmers just want a good job with a good paycheck. But stating this in an interview is a mistake. The best approach is to prepare notes before an interview about what you find exciting about the company, and bring this up with each interviewer when they ask if you have any questions. A good source of ideas is to read the company’s recent blog posts and press releases and note the ones you find exciting.&lt;/p&gt;
&lt;p&gt;This idea seems facile. I imagine you are nodding along as you read this. But (as anyone who has ever interviewed can tell you) a surprisingly small percentage of applicants do this. Carefully preparing notes on why you find a company exciting really will increase your pass rate. You can even reference the notes during the interview. Bringing prepared notes shows preparation.&lt;/p&gt;
&lt;h2&gt;2. Study common interview concepts&lt;/h2&gt;
&lt;p&gt;A large percentage of interview questions feature data structures and algorithms. For better or worse, this is the truth. We gather question details from our candidates who interview at companies (we’ll be doing a in-depth analysis of this data in a future article), and algorithm questions make up over 70% of the questions that are asked. You do not need to be an expert, but knowing the following list of algorithms and data structures will help at most companies.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Hash tables&lt;/li&gt;
&lt;li&gt;Linked lists&lt;/li&gt;
&lt;li&gt;Breadth-first search, depth-first search&lt;/li&gt;
&lt;li&gt;Quicksort, merge sort&lt;/li&gt;
&lt;li&gt;Binary search&lt;/li&gt;
&lt;li&gt;2D arrays&lt;/li&gt;
&lt;li&gt;Dynamic arrays&lt;/li&gt;
&lt;li&gt;Binary search trees&lt;/li&gt;
&lt;li&gt;Dynamic programming&lt;/li&gt;
&lt;li&gt;Big-O analysis&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Depending on your background, this list may look trivial, or may look totally intimidating. That’s exactly the point. These are concepts that are far more common in interviews than they are in production web programming. If you’re self-taught or years out of school and these concepts are not familiar to you, you will do better in interviews if you study them. Even if you do know these things, refreshing your knowledge will help. &lt;strong&gt;A startlingly high percentage of interview questions reduce to breadth-first search or the use of a hash table to count uniques.&lt;/strong&gt; You need to be able to write a BFS cold, and you need to understand how a hash table is implemented.&lt;/p&gt;
&lt;p&gt;Learning these things is not as hard as many of the people we talk to fear. Algorithms are usually described in academic language, and this can be off-putting. But at its core, nothing on this list is more complicated than the architecture of a modern web app. If you can build a web app (well), you can learn these things. The resource that I recommend is the book &lt;em&gt;The Algorithm Design Manual&lt;/em&gt; by Steven Skiena. Chapters 3 through 5 do a great job of going over this material, in a straightforward way. It does use C and some math syntax, but it explains the material well. Coursera also has several good algorithms courses. &lt;a href=&quot;https://www.coursera.org/course/algo&quot;&gt;This one&lt;/a&gt;, in particular, focuses on the concepts that are important in interviews.&lt;/p&gt;
&lt;p&gt;Studying algorithms and data structures helps not only because the material comes up in interviews, but also because the approach to problems taken in an algorithm course is the same approach that works best in interviews. Studying algorithms will get you in an interview mindset.&lt;/p&gt;
&lt;h2&gt;3. Get help from your interviewer&lt;/h2&gt;
&lt;p&gt;Interviewers help candidates. They give hints, they respond to ideas, and they generally guide the process. But they don’t help all candidates equally. &lt;strong&gt;Some programmers are able to extract significant help, without the interviewer holding it against them.&lt;/strong&gt; Others are judged harshly for any hints they are given. You want to be helped.&lt;/p&gt;
&lt;p&gt;This comes down to process and communication. If the interviewer likes your process and you communicate well with them, they will not mind helping. You can make this more likely by following a careful process. The steps I recommend are:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Ask questions&lt;/li&gt;
&lt;li&gt;Talk through a brute-force solution&lt;/li&gt;
&lt;li&gt;Talk through an optimized solution&lt;/li&gt;
&lt;li&gt;Write code&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;After you are asked an interview question, start by clarifying what was asked. This is the time to be pedantic. Clarify every ambiguity you can think of. Ask about edge cases. Bring up specific examples of input, and make sure you are correct about the expected output. Ask questions even if you’re almost sure you know the answers. This is useful because it gives you a chance to come up with edge cases and fully spec the problem (seeing how you handle edge-cases is one of the main things that interviewers look for when evaluating an interview), and also because it gives you a minute to collect your thoughts before you need to start solving the problem.&lt;/p&gt;
&lt;p&gt;Next, you should talk through the simplest brute-force solution to the problem that you can think of. You should talk, rather than jump right into coding, because you can move faster when talking, and it’s more engaging for the interviewer. &lt;strong&gt;If the interviewer is engaged, they will step in and offer pointers. &lt;/strong&gt;If you retreat into writing code, however, you'll miss this opportunity. &lt;/p&gt;
&lt;p&gt;Candidates often skip the brute-force step, assuming that the brute-force solution to the problem is too obvious, or wrong. This is a mistake. Make sure that you always give a solution to the problem you’ve been asked (even if it takes exponential time, or an NSA super computer). When you’ve described a brute-force solution, ask the interviewer if they would like you to implement it, or come up with more efficient solution. Normally they will tell you to come up with a more efficient solution.&lt;/p&gt;
&lt;p&gt;The process for the more efficient solution is the same as for the brute force. Again talk, don’t write code, and bounce ideas off of the interviewer. Hopefully, the question will be similar to something you’ve seen, and you’ll know the answer. If that is not the case, it’s useful to think of what problems you’ve seen that are most similar, and bring these up with the interviewer. Most interview questions are slightly-obscured applications of classic CS algorithms. The interviewer will often guide you to this algorithm, but only if you begin the process.&lt;/p&gt;
&lt;p&gt;Finally, after both you and your interviewer agree that you have a good solution, you should write your code. Depending on the company, this may be on a computer or a whiteboard. But because you’ve already come up with the solution, this should be fairly straightforward. For extra points, ask your interviewer if they would like you to write tests.&lt;/p&gt;
&lt;h2&gt;4. Talk about trade-offs&lt;/h2&gt;
&lt;p&gt;Programming interviews are primarily made up of programming questions, and that is what I have talked about so far. However, you may also encounter system design questions. Companies seem to like these especially for more experienced candidates. In a system design question, the candidate is asked how he or she would design a complex real-world system. Examples include designing Google Maps, designing a social network, or designing an API for a bank.&lt;/p&gt;
&lt;p&gt;The first observation is that answering system design questions requires some specific knowledge. Obviously no one actually expects you to design Google Maps (that took a lot of people a long time). But they do expect you to have some insight into aspects of such a design. The good news is that these questions usually focus on web backends, so you can make a lot of progress by reading about this area. An incomplete list of things to understand is:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;HTTP (at the protocol level)&lt;/li&gt;
&lt;li&gt;Databases (indexes, query planning)&lt;/li&gt;
&lt;li&gt;CDNs&lt;/li&gt;
&lt;li&gt;Caching (LRU cache, memcached, redis)&lt;/li&gt;
&lt;li&gt;Load balancers&lt;/li&gt;
&lt;li&gt;Distributed worker systems&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You need to understand these concepts. But more importantly, you need to understand how they fit together to form real systems. The best way to learn this is to read about how other engineers have used the concepts. The blog &lt;a href=&quot;http://highscalability.com/&quot;&gt;High Scalability&lt;/a&gt; is a great resource for this. It publishes detailed write-ups of the back-end architecture at real companies. You can read about how every concept on the list above is used in real systems.&lt;/p&gt;
&lt;p&gt;Once you’ve done this reading, answering system design questions is a matter of process. Start at the highest level, and move downward. At each level, ask your interviewer for specifications (should you suggest a simple starting point, or talk about what a mature system might look like?) and talk about several options (applying the ideas from your reading). Discussing tradeoffs in your design is key. Your interviewer cares less about whether your design is good in itself, and more about whether you are able to talk about the trade-offs (positives and negatives) of your decisions. Practice this.&lt;/p&gt;
&lt;h2&gt;5. Highlight results&lt;/h2&gt;
&lt;p&gt;The third type of question you may encounter is the experience question. This is where the interviewer asks you to talk about a programming project that you completed in the past. The mistake that many engineers make on this question is to talk about a technically interesting side-project. Many programmers choose to talk about implementing a neural network classifier, or writing a Twitter grammar bot. These are bad choices because it’s very hard for the interviewer to judge their scope. Many candidates exaggerate simple side projects (sometimes that never actually worked), and the interviewer has no way to tell if you are doing this.&lt;/p&gt;
&lt;p&gt;The solution is to choose a project that produced results, and highlight the results. This often involves picking a less technically interesting project, but it’s worth it. Think (ahead of time) of the programming you’ve done that had the largest real-world impact. If you’ve written a iOS game, and 50k people have downloaded it, the download number makes it a good option. If you’ve written an admin interface during an internship that was deployed to the entire admin staff, the deployment makes it a good thing to talk about. Selecting a practical project will also communicate to the company that you focus on actual work. Programmer too focused on interesting tech is an anti-pattern that companies screen against (these programmers are sometimes not productive).&lt;/p&gt;
&lt;h2&gt;6. Use a dynamic language, but mention C&lt;/h2&gt;
&lt;p&gt;I recommend that you use a dynamic language like Python, Ruby or JavaScript during interviews. Of course, you should use whatever language you know best. But we find that many people try interviewing in C , C++ or Java, under the impression these are the “real’ programming languages. Several classic books on interviewing recommend that programmers choose Java or C++. At startups at least, we’ve found that this is bad advice. Candidates do better when using dynamic languages. This is true, I think, because of dynamic languages’ compact syntax, flexible typing, and list and hash literals. They are permissive languages. This can be a liability when writing complex systems (a highly debatable point), but it’s great when trying to cram binary search onto a whiteboard.&lt;/p&gt;
&lt;p&gt;No matter what language you use, it’s helpful to mention work in other languages. An anti-pattern that companies screen against is people who only know one language. If you do only know one language, you have to rely on your strength in that language. But if you’ve done work or side-projects in multiple languages, be sure to bring this up when talking to your interviewers. If you have worked in lower-level languages like C, C++, Go, or Rust, talking about this will particularly help.&lt;/p&gt;
&lt;p&gt;Java, C# and PHP are a problematic case. As we described in our &lt;a href=&quot;https://triplebyte.com/blog/who-y-combinator-companies-want&quot;&gt;last blog post&lt;/a&gt;, we’ve uncovered bias against these languages in startups. We have data showing that programmers using these languages in the interview pass at a lower rate. This is not fair, but it is the truth. If you have other options, I recommend against using these languages in interviews with startups.&lt;/p&gt;
&lt;h2&gt;7. Practice, practice, practice&lt;/h2&gt;
&lt;p&gt;You can get much better at interviewing by practicing answering questions. This is true because interviews are stressful, but stress harms performance. The solution is practice. Interviewing becomes less stressful with exposure. This happens naturally with experience. Even within a single job search, we find that candidates often fail their initial interviews, and then pass more as their confidence builds. If stress is something you struggle with, I recommend that you jumpstart this process by &lt;strong&gt;practicing interview stress.&lt;/strong&gt; Get a list of interview questions (the book &lt;em&gt;Cracking the Coding Interview&lt;/em&gt; is one good source) and solve them. Set a 20-minute timer on each question, and race to answer. Practice writing the answers on a whiteboard (not all companies require this, but it’s the worst case, so you should practice it). A pen on paper is a pretty good simulation of a whiteboard. If you have friends who can help you prepare, taking turns interviewing each other is great. Reading a lot of interview questions has the added benefit of providing you ideas to use when in actual interviews. A surprising number of questions are re-used (in full or in part).&lt;/p&gt;
&lt;p&gt;Even experienced (and stress-free) candidates will benefit from this. Interviewing is a fundamentally different skill from working as a programmer, and it can atrophy. But experienced programers often (reasonably) feel that they should not have to prepare for interviews. They study less. This is why junior candidates often actually do better on interview questions than experienced candidates. Companies know this, and, paradoxically, some tell us they set lower bars on the programming questions for experienced candidates.&lt;/p&gt;
&lt;h2&gt;8. Mention credentials&lt;/h2&gt;
&lt;p&gt;Credentials bias interviewers. Triplebyte candidates who have worked at a top company or studied at a top school go on to pass interviews at a 30% higher rate than programmers who don’t have these credentials (for a given level of performance on our credential-blind screen). I don’t like this. It’s not meritocratic and it sucks, but if you have these credentials, it’s in your interest to make sure that your interviewers know this. You can’t trust that they’ll read your resume.&lt;/p&gt;
&lt;h2&gt;9. Line up offers&lt;/h2&gt;
&lt;p&gt;If you’ve ever read fund-raising advice for founders, you’ll know that getting the 1st VC to make an investment offer is the hardest part. Once you have one offer, more come pouring in. The same is true of job offers. If you already have an offer, be sure to mention this in interviews. Mentioning other offers in an interview heavily biases the interviewer in your favor.&lt;/p&gt;
&lt;p&gt;This brings up the strategy of making a list of the companies you’re interested in, and setting up interviews in &lt;strong&gt;reverse order of interest.&lt;/strong&gt; Doing well earlier in the process will increase your probability of getting an offer from you number one choice. You should do this.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Passing interviews is a skill. Being a great programmer helps, but it’s only part of the picture. Everyone fails some of their interviews, and preparing properly can help everyone pass more. Enthusiasm is paramount, and research helps with this. As many programmers fail for lacking enthusiasm as fail for technical reasons. Interviewers help candidates during interviews, and if you follow a good process and communicate clearly, they will help you. Practice always helps. Reading lots of interview questions and inuring yourself to interview stress will lead to more offers.&lt;/p&gt;
&lt;p&gt;This situation is not ideal. Preparing for interviews is work, and forcing programmers to learn skills other than building great software wastes everyone’s time. Companies should improve their interview processes to be less biased by academic CS, memorized facts, and rehearsed interview processes. This is what we’re doing at Triplebyte. We help programmers get jobs without looking at resumes. We let programmers pick one of several areas in which to be evaluated, and we study and improve our process over time. We’d love to help you get a job at a startup, without jumping through these hoops. You can get started &lt;a href=&quot;https://triplebyte.com&quot;&gt;here&lt;/a&gt;. But the status quo is what it is. Until this changes, programmers should know how to prepare.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Jared Friedman, Emmett Shear, Garry Tan, Alexis Ohanian and Daniel Gackle for reading drafts of this.&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;hr/&gt;&lt;p&gt;&lt;sup id=&quot;fn1&quot;&gt;[1]&lt;/sup&gt; This is not to say that interview performance does not correlate with programing skill. It does. But the correlation is far weaker than most companies assume, and factors other than programing skill explain a large part of interview variance. &lt;a href=&quot;https://triplebyte.com/blog/how-to-pass-a-programming-interview#ref1&quot; title=&quot;Jump back to footnote 1 in the text.&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 08 Mar 2019 22:57:33 +0000</pubDate>
<dc:creator>davidjnelson</dc:creator>
<og:type>article</og:type>
<og:title>How to pass a programming interview</og:title>
<og:description>Being a good programmer has a surprisingly small role in passing programming interviews. To be a productive programmer, you need to be able to solve large, sprawling problems over weeks and months. Each question in an interview, in contrast, lasts less than one hour. To do well in an interview, then, you need to be able to solve small problems quickly, under duress, while explaining your thoughts clearly. This is a different skill. On top of this, interviewers are often poorly trained and inattentive (they would rather be programming), and ask questions far removed from actual work. They bring bias, pattern matching, and a lack of standardization.</og:description>
<og:url>https://triplebyte.com/blog/how-to-pass-a-programming-interview</og:url>
<og:image>https://d25hn4jiqx5f7l.cloudfront.net/blog-posts/pics/original/9_1505427174.png?1505427174</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://triplebyte.com/blog/how-to-pass-a-programming-interview</dc:identifier>
</item>
<item>
<title>SpaceX Crew Dragon Splashes Down After Historic Test Flight</title>
<link>https://www.scientificamerican.com/article/spacex-crew-dragon-splashes-down-after-historic-test-flight/</link>
<guid isPermaLink="true" >https://www.scientificamerican.com/article/spacex-crew-dragon-splashes-down-after-historic-test-flight/</guid>
<description>&lt;div class=&quot;mura-region mura-region-loose&quot;&gt;
&lt;div class=&quot;mura-region-local&quot;&gt;
&lt;p&gt;The first mission of SpaceX’s new astronaut taxi is in the books.&lt;/p&gt;
&lt;p&gt;The Crew Dragon capsule splashed down in the Atlantic Ocean off the Florida coast today (March 8) at 8:45 a.m. EST (1345 GMT), wrapping up a &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;1&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/spacex-crew-dragon-demo-1-test-flight-photos.html&quot;&gt;historic mission to the International Space Station&lt;/a&gt; (ISS). &lt;/p&gt;
&lt;p&gt;There were no astronauts aboard this flight, &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;2&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/spacex-crew-dragon-dummy-called-ripley.html&quot;&gt;only the sensor-packed dummy Ripley&lt;/a&gt; named after a character from the “Alien” films. But the success of the test flight, known as Demo-1, helps paves the way for a crewed mission of the SpaceX vehicle, perhaps as early as this summer. &lt;/p&gt;
&lt;p&gt;That will be a huge milestone when it comes; astronauts haven’t launched to orbit from American soil since NASA retired its space shuttle fleet in July 2011.&lt;/p&gt;
&lt;p&gt;“Fifty years after humans landed on the moon for the first time, America has driven a golden spike on the trail to new space exploration feats through the work of our commercial partner&lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;6&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/18853-spacex.html&quot;&gt; SpaceX&lt;/a&gt; and all of the dedicated and talented flight controllers at NASA and our international partners,” NASA astronaut Anne McClain radioed Mission Control from the ISS when Crew Dragon undocked from the orbiting lab earlier today. &lt;/p&gt;
&lt;p&gt;“This is a new era in human spaceflight,” NASA Administrator Jim Bridenstine said Wednesday (March 6) during a webcast event with Vice President Mike Pence, who spoke to McClain and Canadian Space Agency’s David Saint-Jacques from NASA’s Mission Control center in Houston.&lt;/p&gt;
&lt;p&gt;NASA officials said there was a bit of Apollo history involved in today’s Crew Dragon splashdown: It came  nearly 50 years to the day after the Apollo 9 spacecraft returned to Earth in the same area on March 13, 1969.&lt;/p&gt;
&lt;h2&gt;A pioneering flight&lt;/h2&gt;
&lt;p&gt;NASA is currently dependent on Russian Soyuz rockets and spacecraft to ferry its astronauts to and from the ISS. And this service isn’t cheap; each seat on the three-person Soyuz currently sells for about $80 million.&lt;/p&gt;
&lt;p&gt;So, in 2014, NASA signed commercial-crew contracts with SpaceX and Boeing—worth $2.6 billion and $4.2 billion, respectively—to foster the development of homegrown American spaceships. Like SpaceX, Boeing is building a capsule, called &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;8&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/19367-boeing-cst-100.html&quot;&gt;CST-100 Starliner&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Back when the contracts were signed, NASA officials said they hoped these private spaceships would be up and running by the end of 2017. That didn’t happen, of course. But both companies are now getting pretty close, as Demo-1 shows.&lt;/p&gt;
&lt;p&gt;The mission began Saturday morning (March 2) with a &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;9&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/spacex-launches-crew-dragon-test-flight.html&quot;&gt;liftoff atop a SpaceX Falcon 9 rocket&lt;/a&gt; from Kennedy Space Center in Florida. Crew Dragon carried Ripley and about 450 lbs. (200 kilograms) of supplies for the ISS crew. Also aboard was the adorable “Little Earth” Celestial Buddies plush toy as a “zero-g” indicator. That toy will remain aboard the station—it will be retrieved by SpaceX’s first astroanut crew later this year—but Crew Dragon did return about 330 lbs. (150 kg) of experiment results and other gear to Earth on this flight, NASA officials said.&lt;/p&gt;
&lt;p&gt;The main goal of Demo-1 was to test the capsule’s many systems in flight, to make sure Crew Dragon is ready to carry astronauts. And the private spacecraft seems to have hit all its marks. &lt;/p&gt;
&lt;p&gt;Crew Dragon docked autonomously at the ISS Sunday morning (March 3) and then stayed attached to the orbiting lab for five days. The capsule departed at 2:32 a.m. EST (0732 GMT) today, survived the fiery descent through Earth’s atmosphere, deployed its parachutes and splashed down gently into the Atlantic’s rolling waves, about 230 miles (370 kilometers) off the Florida coast.&lt;/p&gt;
&lt;p&gt;None of this was routine. Crew Dragon is based on SpaceX’s &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;10&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/12033-spacex-dragon-space-capsule-infographic.html&quot;&gt;robotic Dragon freighter&lt;/a&gt;, which has been flying resupply missions to the ISS under a separate NASA contract since 2012. But the two capsules are very different, SpaceX founder and CEO Elon Musk said.&lt;/p&gt;
&lt;p&gt;“Dragon 2, or Crew Dragon, is a fundamental redesign,” Musk said during a postlaunch news conference Saturday. There’s “hardly a part in common with Dragon 1,” he added.&lt;/p&gt;
&lt;p&gt;For example, Crew Dragon has seats, windows, a life-support system, touch-screen controls, emergency-escape thrusters and other astronaut-related accoutrements that the cargo version lacks. Crew Dragon also docks directly with the ISS, whereas its older cousin must be grappled by the orbiting lab’s huge robotic arm.&lt;/p&gt;
&lt;p&gt;In addition, the crew-carrying capsule has a different parachute system and back-shell shape, neither of which had shown its mettle during an orbital mission. So, a successful return to Earth today was &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;11&quot; data-track-type=&quot;click&quot; href=&quot;https://www.space.com/spacex-crew-dragon-earth-return-challenging.html&quot;&gt;far from guaranteed&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;“I see hypersonic re-entry as probably my greatest concern,” Musk said during Saturday’s news conference.&lt;/p&gt;
&lt;h2&gt;Crewed flight coming&lt;/h2&gt;
&lt;p&gt;The coming months will be packed with big milestones for both SpaceX and Boeing, if all goes according to plan.&lt;/p&gt;
&lt;p&gt;Up next for SpaceX is a test of Crew Dragon’s emergency-escape system, which is designed to get the capsule to safety if a serious problem were to occur during launch. This uncrewed flight, which is currently &lt;a data-component=&quot;Inline links&quot; data-count=&quot;24&quot; data-index=&quot;12&quot; data-track-type=&quot;click&quot; href=&quot;https://blogs.nasa.gov/commercialcrew/2019/02/06/nasa-partners-update-commercial-crew-launch-dates/&quot;&gt;targeted for June&lt;/a&gt;, will employ the same capsule that just came back to Earth.&lt;/p&gt;
&lt;p&gt;After that—possibly as early as July—will come Demo-2, Crew Dragon’s astronaut-carrying debut. This landmark test flight will tote NASA’s Bob Behnken and Doug Hurley to and from the ISS. Operational, contracted missions, each of which will ferry four astronauts, will commence sometime thereafter.&lt;/p&gt;
&lt;p&gt;Meanwhile, Starliner’s first uncrewed test mission to the ISS could launch as soon as next month. The Boeing capsule’s emergency-escape test and first crewed demonstration flight to the orbiting lab will occur no earlier than May and August, respectively. &lt;/p&gt;
&lt;p&gt;“It won’t be long before our astronaut colleagues are aboard Crew Dragon and Boeing Starliner vehicles,” McClain said. “And we can’t wait.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Copyright 2018 &lt;/em&gt;&lt;a href=&quot;https://www.space.com/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Space.com&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, a Future company. All rights reserved. This material may not be published, broadcast, rewritten or redistributed&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 08 Mar 2019 21:45:15 +0000</pubDate>
<dc:creator>LinuxBender</dc:creator>
<og:type>article</og:type>
<og:title>SpaceX Crew Dragon Splashes Down after Historic Test Flight</og:title>
<og:description>Splashdown occurred at 8:45 am Eastern time about 230 miles off the Florida coast</og:description>
<og:image>https://static.scientificamerican.com/sciam/cache/file/2228C910-6B91-4B47-B861BFEE76056AF3.png</og:image>
<og:url>https://www.scientificamerican.com/article/spacex-crew-dragon-splashes-down-after-historic-test-flight/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.scientificamerican.com/article/spacex-crew-dragon-splashes-down-after-historic-test-flight/</dc:identifier>
</item>
<item>
<title>Updates from YC</title>
<link>https://blog.ycombinator.com/updates-from-yc/</link>
<guid isPermaLink="true" >https://blog.ycombinator.com/updates-from-yc/</guid>
<description>&lt;p&gt;We have a few updates about YC to share.&lt;/p&gt;
&lt;p&gt;Sam is transitioning to Chairman of YC and has shifted his operational responsibilities at YC to other partners. This change will allow Sam to spend more time focusing on &lt;a href=&quot;https://openai.com/&quot;&gt;OpenAI&lt;/a&gt; while still being responsible, along with the rest of the partnership, for the long-term social and economic success of YC. Because YC is run as a partnership, there will be no significant operational change.&lt;/p&gt;
&lt;p&gt;Things are going well — in the past two years, we launched &lt;a href=&quot;https://www.startupschool.org/&quot;&gt;Startup School&lt;/a&gt;, &lt;a href=&quot;https://blog.ycombinator.com/introducing-yc-series-a-batches/&quot;&gt;the Series A program&lt;/a&gt;, &lt;a href=&quot;https://blog.ycombinator.com/growth-stage-program/&quot;&gt;the YC Growth program&lt;/a&gt;, &lt;a href=&quot;https://www.workatastartup.com/&quot;&gt;Work at a Startup&lt;/a&gt;, and &lt;a href=&quot;https://blog.ycombinator.com/yc-china-qi-lu/&quot;&gt;YC China&lt;/a&gt;. The current total market capitalization of YC companies is around $150 billion. The YC network now has over 4,000 alumni and 1,900 companies, and it has become a reliable source of advice, customers, friendship, and support for YC founders.&lt;/p&gt;
&lt;p&gt;We had over 12,000 applicants for the Winter 2019 batch. This was a 30% increase compared to the Summer 2018 batch. We had two choices—either we reject a lot of great founders, or we figure out how to grow the batch. We decided to grow. We funded over 200 companies this batch, an increase of 25% compared to S18.&lt;/p&gt;
&lt;p&gt;That necessitated some changes to &lt;a href=&quot;https://www.ycombinator.com/demoday/faq/&quot;&gt;Demo Day&lt;/a&gt;. We will now have two stages running in parallel over two days, allowing more time for investors to interact with founders off-stage. With a larger space, we’ve been able to invite many more investors so that investment firms can send more people. (For those investors who want to watch every pitch, we record the presentations and make them available to watch on our Demo Day website.) Because of these changes, we had to move to a new venue. We had been talking for some time about moving to San Francisco, and this seemed like the natural time to do it.&lt;/p&gt;
&lt;p&gt;Speaking of San Francisco, we are considering moving YC to the city and are currently looking for space. The center of gravity for new startups has clearly shifted over the past five years, and although we love our space in Mountain View, we are rethinking whether the logistical tradeoff is worth it, especially given how difficult the commute has become. We also want to be closer to our Bay Area alumni, who disproportionately live and work in San Francisco.&lt;/p&gt;
&lt;p&gt;At the same time, we’ve gotten better at serving and being more accessible to founders who live around the world. Startup School is our free online program to teach people how to start a startup and to provide advice and community. Last year we had 10,500 companies participate. We’re particularly proud that 30% of the companies in this current batch came from Startup School! Our mission with this program is to bring the cost of knowledge, community, and tools to start a startup way down. Going forward, everyone who wants to do Startup School will be accepted.&lt;/p&gt;
&lt;p&gt;Finally, we continue to scale up our Series A program, which helps our companies raise an A round when they’re ready. In the last twelve months, there were 96 Series As across the YC portfolio, and the Series A program helped 67 of those companies raise their rounds. We also started running Series A batches, modeled after the classic YC batches, and have created an investor portal to help more investors to get access to YC Series As.&lt;/p&gt;
</description>
<pubDate>Fri, 08 Mar 2019 21:06:59 +0000</pubDate>
<dc:creator>peteratt</dc:creator>
<og:title>Updates from YC</og:title>
<og:url>https://blog.ycombinator.com/updates-from-yc/</og:url>
<og:type>article</og:type>
<og:description>We have a few changes about YC to share.</og:description>
<og:image>https://blog.ycombinator.com/wp-content/uploads/2019/03/updates-from-yc.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.ycombinator.com/updates-from-yc/</dc:identifier>
</item>
<item>
<title>Animals are no less emotional than we are</title>
<link>https://www.nytimes.com/2019/03/08/opinion/sunday/emotions-animals-humans.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2019/03/08/opinion/sunday/emotions-animals-humans.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Uniquely human emotions don’t exist. More and more, I believe that we share all emotions with other species in the same way that we share virtually every organ in our bodies with them. No exceptions.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Like organs, the emotions evolved over millions of years to serve essential functions. Their usefulness has been tested again and again, giving them the wisdom of ages. They nudge us to do what is best for us. Some emotions may be more developed in humans, or apply to a wider range of circumstances, but none is fundamentally new.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;This is not the prevailing view in science, though. The most popular theory proposes only six “primary” or “basic” emotions, which are universally recognized by their facial expressions, like anger (frowning stare), happiness (laugh and smile), and fear (eyes wide open, lips stretched horizontally). All other emotions are “secondary,” which means that they are cultural constructs that make us human.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;But does anyone truly believe that just because an emotion lacks a specific face, we can claim it for ourselves? Open your front door and tell your dog that you are going out for a walk, then close the door and return to your seat. Your dog, who had been barking and wriggling with excitement, now slinks back to his basket and puts his head down on his paws. You have just witnessed both hope and disappointment in another species, even though neither counts as a basic emotion.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;You may say that it is impossible to know what a dog feels. True, yet his behavior clearly reflects an abrupt change in his emotional state. Expressed in the body, these states are perfectly observable and measurable even if the associated private experiences are not.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In fact, the possibility of animal hope was experimented upon nearly a century ago by the psychologist Otto Tinklepaugh. He first let a monkey watch a banana being hidden under a cup, then allowed her into the room where this had been done. If she found the banana, everything proceeded smoothly. But if the experimenter had surreptitiously replaced the banana with a piece of lettuce, the monkey would frantically look around, lifting up the cup, while shrieking at the experimenter. Her expectations had been violated, for which she rightly blamed the sneaky experimenter.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;We share so many so-called secondary emotions with other species that the whole concept is questionable. There is one exception, though, which keeps being proposed as definitely cultural: guilt.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;This is despite the many dog owners who seem to recognize it in their pets when they hide under the table after a transgression. One expert in animal cognition at Barnard, Alexandra Horowitz, tested this out by having dogs meet an angry owner both when they had not broken any rules and when they had; she also had them meet a relaxed owner in the same two situations. Dr. Horowitz concluded that whether dogs take on a guilty look — lowered gaze, ears pressed back, tail rapidly beating between the legs — is unrelated to whether or not they followed orders. If the owner scolds them, they look extremely guilty. If the owner doesn’t, they still sometimes look like this, but less often.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;One problem, however, is that our rules are of our own making, such as “Don’t jump on that couch!” or “Keep your nails off my leather chair!” It must be as tough for our pets to grasp these prohibitions as it was for me to understand why I couldn’t chew gum in Singapore.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;It would be better to test behavior that is wrong by almost any standard, including that of their own species. The Austrian ethologist Konrad Lorenz gave one of my favorite examples, about his dog, Bully, who broke the fundamental rule never to bite your superior.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Humans don’t need to teach this rule, and indeed Bully had never been punished for it. The dog bit his master’s hand when Dr. Lorenz tried to break up a dogfight. Even though Dr. Lorenz petted him right away, Bully suffered a complete nervous breakdown. For days, he was virtually paralyzed and ignored his food. He would lie on the rug breathing shallowly, occasionally interrupted by a deep sigh. He had violated a natural taboo, which among ancestral canines could have had the worst imaginable consequences, such as expulsion from the pack.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Among the primates, the most suggestive cases of remorse concern bonobos. These apes are as close to us as chimpanzees, but far more peaceful and gentle, which means that they almost never hurt one another. Whereas in most primates reconciliation after a fight is typically sought by the subordinate party, in bonobos it is the dominant animal that seeks to make amends, especially if he has inflicted an injury. He may return to his victim and unerringly reach for the exact same toe that he has bitten and carefully inspect the damage. He obviously knows precisely what he has done and where. Then he spends half an hour or more licking and cleaning the wound that he himself inflicted.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Another human emotion that has been elevated to a special status is disgust. In his book “Human: The Science Behind What Makes Us Unique,” the neuroscientist Michael Gazzaniga views disgust as one of the five emotional modules that set us apart from all other animals. Here, too, dogs are a prime example, given that they eat feces and lick their testicles. This is taken as proof that dogs must lack disgust. But give your dog a cut lemon (not recommended) and you will see a full-blown yuck! response with curled-up lips, drooling and withdrawal from the sour smell.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Disgust is an incredibly adaptive response. Every organism needs to avoid parasites and prevent the ingestion of harmful foods (citrus fruits can be poisonous to canines). Ignoring this mundane origin, however, psychologists have fallen in love with the moral connotations of this emotion. We are disgusted, for example, by someone who fakes a racist attack on himself to gain positive media attention. We “turn up our noses” at such people, showing our typical disgust face with wrinkled nose and narrowed eyes.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;But even if moral disgust is special, it is no accident that our facial expression also blocks wafts of foul air from getting into our eyes and nostrils. This hints at the emotion’s origin. Chimpanzees show the same expression when it rains, something they hate. As soon as a downpour starts, young and old pull an ugly face known as the “rain face,” in which they bring their upper lip close to their nose and stick out their lower lip.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Having grown up in the Netherlands, I know this expression firsthand from watching the throngs of cyclists in Dutch cities. Whenever it pours, they show rain faces inside their plastic ponchos, evidence of their dismay over the prospect of wet clothes for the rest of the day.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Disgust is in fact so predictable in apes that an adolescent chimp I saw regularly at the Yerkes National Primate Research Center, in Georgia, turned it into a game. The chimp, Tara, would occasionally find a dead rat in the outdoor enclosure and carry it around by its tail, careful to keep it away from her own body, then stealthily lay it on the back head of a sleeping group mate. Her victim would startle as soon as she felt (or smelled) the dead animal, loudly screaming and wildly shaking her body to get this foul thing off her. She might even rub the spot on her body with a fistful of grass, to make sure the smell was gone.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Tara, for her part, would simply pick up the rat and move on to her next target. Apart from the question of why she considered this game fun, and why we humans immediately see its humor value, it would obviously never have worked in a species that lacked disgust.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;But that is not all. We also have experimental studies, such as those by the primatologists Cécile Sarabian and Andrew MacIntosh at Kyoto University, who explore the yuck! factor in wild macaques on a Japanese beach. They place small food items, like grains or peanuts, on top of a variety of objects. Some of these objects are piles of plastic made to look like feces; some are actual piles of fresh feces. Most of the monkeys are disgusted enough by the latter to forgo the food. And if they do pick up food from the feces, they frantically rub their hands afterward. Tested in the same way, bonobos refuse to touch banana slices contaminated by feces. Given how much apes love bananas, this attests to their deep revulsion.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;For the longest time, science has depicted animals as stimulus-response machines while declaring their inner lives barren. This has helped us sustain our customary “anthropodenial”: the denial that we are animals. We like to see ourselves as special, but whatever the difference between humans and animals may be, it is unlikely to be found in the emotional domain.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-g92qtk epkadsg3&quot;&gt;

&lt;div class=&quot;css-15g2oxy epkadsg2&quot;&gt;
&lt;div class=&quot;css-2b3w4o e16ij5yr6&quot;&gt;
&lt;div class=&quot;css-i9gxme e16ij5yr4&quot;&gt;
&lt;div class=&quot;css-bqoegj e16ij5yr5&quot;&gt;Opinion | Alexandra Horowitz&lt;/div&gt;
&lt;div class=&quot;css-1hma5rr e16ij5yr2&quot;&gt;Is This Dog Actually Happy?&lt;/div&gt;
&lt;time class=&quot;css-1yil5bp e16638kd0&quot; datetime=&quot;2018-03-27&quot;&gt;March 27, 2018&lt;/time&gt;&lt;/div&gt;
&lt;div class=&quot;css-rxyfbr e16ij5yr0&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2018/03/27/opinion/27horowitz2/27horowitz2-threeByTwoSmallAt2X-v2.jpg&quot; class=&quot;css-32rbo2 e16ij5yr1&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-2b3w4o e16ij5yr6&quot;&gt;
&lt;div class=&quot;css-i9gxme e16ij5yr4&quot;&gt;
&lt;div class=&quot;css-bqoegj e16ij5yr5&quot;&gt;Opinion | Frans de Waal&lt;/div&gt;
&lt;div class=&quot;css-1hma5rr e16ij5yr2&quot;&gt;What I Learned From Tickling Apes&lt;/div&gt;
&lt;time class=&quot;css-1yil5bp e16638kd0&quot; datetime=&quot;2016-04-08&quot;&gt;April 8, 2016&lt;/time&gt;&lt;/div&gt;
&lt;div class=&quot;css-rxyfbr e16ij5yr0&quot;&gt;&lt;img src=&quot;https://static01.nyt.com/images/2016/04/10/opinion/sunday/10dewaal/10dewaal-videoLarge.jpg&quot; class=&quot;css-32rbo2 e16ij5yr1&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1psfkbx etfikam0&quot;&gt;Frans de Waal, a primatologist and professor of psychology at Emory University, is the author, most recently, of “Mama’s Last Hug: Animal Emotions and What They Tell Us About Ourselves,” from which this essay is adapted.&lt;/p&gt;
&lt;p class=&quot;css-1psfkbx etfikam0&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;The Times is committed to publishing&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/01/31/opinion/letters/letters-to-editor-new-york-times-women.html&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;a diversity of letters&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;to the editor. We’d like to hear what you think about this or any of our articles. Here are some&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://help.nytimes.com/hc/en-us/articles/115014925288-How-to-submit-a-letter-to-the-editor&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;tips&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;. And here’s our email:&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;mailto:letters@nytimes.com&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;letters@nytimes.com&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;css-1psfkbx etfikam0&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Follow The New York Times Opinion section on&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.facebook.com/nytopinion&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Facebook&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;,&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;http://twitter.com/NYTOpinion&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Twitter (@NYTopinion)&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;and&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.instagram.com/nytopinion/&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Instagram&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 08 Mar 2019 21:02:14 +0000</pubDate>
<dc:creator>mykowebhn</dc:creator>
<og:url>https://www.nytimes.com/2019/03/08/opinion/sunday/emotions-animals-humans.html</og:url>
<og:type>article</og:type>
<og:title>Opinion | Your Dog Feels as Guilty as She Looks</og:title>
<og:image>https://static01.nyt.com/images/2019/03/10/opinion/sunday/10dewaal/10dewaal-facebookJumbo.jpg</og:image>
<og:description>Animals are no less emotional than we are.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2019/03/08/opinion/sunday/emotions-animals-humans.html</dc:identifier>
</item>
<item>
<title>Usability Improvements in GCC 9</title>
<link>https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/</link>
<guid isPermaLink="true" >https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/</guid>
<description>&lt;img width=&quot;145&quot; height=&quot;140&quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2014/09/gnu-logo.png&quot; class=&quot;single-post-featured-img wp-post-image&quot; alt=&quot;Usability improvements in GCC 9&quot;/&gt;&lt;p&gt;I work at Red Hat on &lt;a href=&quot;https://gcc.gnu.org/&quot;&gt;GCC, the GNU Compiler Collection&lt;/a&gt;, and I spent most of the past year making GCC easier to use. Let’s look at &lt;a href=&quot;https://developers.redhat.com/blog/category/c/&quot;&gt;C&lt;/a&gt; and &lt;a href=&quot;https://developers.redhat.com/blog/category/c-plus-plus/&quot;&gt;C++&lt;/a&gt; improvements that will be in the next major release of GCC, &lt;a href=&quot;https://gcc.gnu.org/gcc-9/changes.html&quot;&gt;GCC 9&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;A new look for diagnostics&lt;/h2&gt;
&lt;p&gt;By way of example, let’s look at how GCC 8 reports an attempt to use a missing binary “+” in C++:&lt;/p&gt;
&lt;pre&gt;
$ gcc-8 t.cc
&lt;span&gt;t.cc:&lt;/span&gt; In function ‘&lt;span&gt;int test(const shape&amp;amp;, const shape&amp;amp;)&lt;/span&gt;’:
&lt;span&gt;t.cc:15:4:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;no match for ‘&lt;span&gt;operator+&lt;/span&gt;’ (operand types are ‘&lt;span&gt;boxed_value&amp;lt;double&amp;gt;&lt;/span&gt;’ and ‘&lt;span&gt;boxed_value&amp;lt;double&amp;gt;&lt;/span&gt;’)
   return (&lt;span&gt;&lt;span&gt;width(s1) * height(s1)&lt;/span&gt;&lt;/span&gt;
           &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
 &lt;span&gt;&lt;span&gt;   + width(s2) * height(s2)&lt;/span&gt;&lt;/span&gt;);
    &lt;span&gt;&lt;span&gt;^~~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Here’s what it looks like in GCC 9:&lt;/p&gt;
&lt;pre&gt;
$ gcc-9 t.cc
&lt;span&gt;t.cc:&lt;/span&gt; In function ‘&lt;span&gt;int test(const shape&amp;amp;, const shape&amp;amp;)&lt;/span&gt;’:
&lt;span&gt;t.cc:15:4:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;no match for ‘&lt;span&gt;operator+&lt;/span&gt;’ (operand types are ‘&lt;span&gt;boxed_value&amp;lt;double&amp;gt;&lt;/span&gt;’ and ‘&lt;span&gt;boxed_value&amp;lt;double&amp;gt;&lt;/span&gt;’)
   14 |   return (&lt;span&gt;width(s1) * height(s1)&lt;/span&gt;
      |           &lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;
      |                     &lt;span&gt;|&lt;/span&gt;
      |                     &lt;span&gt;boxed_value&amp;lt;[...]&amp;gt;&lt;/span&gt;
   15 |    &lt;span&gt;&lt;span&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span&gt;width(s2) * height(s2)&lt;/span&gt;);
      |    &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt; &lt;span&gt;~~~~~~~~~~~~~~~~~~~~~~&lt;/span&gt;
      |                &lt;span&gt;|&lt;/span&gt;
      |                &lt;span&gt;boxed_value&amp;lt;[...]&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There are a few changes here. I’ve added a left-hand margin, showing line numbers. The “error” line mentions line 15, but the expression in question spans multiple lines, and we’re actually starting with line 14. I think it’s worth a little extra horizontal space to make it clear which line is which. It also helps distinguish your source code from the annotations that GCC emits. I believe they also make it a little easier to see where each diagnostic starts, by visually breaking things up at the leftmost column.&lt;/p&gt;
&lt;p&gt;Speaking of annotations, this example shows another new GCC 9 feature: diagnostics can label regions of the source code to show pertinent information. Here, what’s most important are the types of the left-hand and right-hand sides of the “+” operator, so GCC highlights them inline. Notice how the diagnostic also uses color to distinguish the two operands from each other and the operator.&lt;/p&gt;
&lt;p&gt;The left margin affects how we print things like fix-it hints for missing header files:&lt;/p&gt;
&lt;pre&gt;
$ gcc-9 -xc++ -c incomplete.c
&lt;span&gt;incomplete.c:1:6:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;string&lt;/span&gt;’ in namespace ‘&lt;span&gt;std&lt;/span&gt;’ does not name a type
    1 | std::&lt;span&gt;&lt;span&gt;string&lt;/span&gt;&lt;/span&gt; test(void)
      |      &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;incomplete.c:1:1:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;std::string&lt;/span&gt;’ is defined in header ‘&lt;span&gt;&amp;lt;string&amp;gt;&lt;/span&gt;’; did you forget to ‘&lt;span&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;’?
  +++ |+&lt;span&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;
    1 | std::string test(void)
&lt;/pre&gt;
&lt;p&gt;I’ve turned on these changes by default; they can be disabled via &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Message-Formatting-Options.html#index-fno-diagnostics-show-line-numbers&quot;&gt;-fno-diagnostics-show-line-numbers&lt;/a&gt; and &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Message-Formatting-Options.html#index-fno-diagnostics-show-labels&quot;&gt;-fno-diagnostics-show-labels&lt;/a&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Another example can be seen in the type-mismatch error from the article I wrote last year,  &lt;a href=&quot;https://developers.redhat.com/blog/2018/03/15/gcc-8-usability-improvements/&quot;&gt;Usability improvements in GCC 8&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;extern&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;callee&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; one, &lt;span&gt;const&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;two, &lt;span&gt;float&lt;/span&gt; three);

&lt;span&gt;int&lt;/span&gt; &lt;span&gt;caller&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; first, &lt;span&gt;int&lt;/span&gt; second, &lt;span&gt;float&lt;/span&gt; third)
{
  &lt;span&gt;return&lt;/span&gt; callee(first, second, third);
}
&lt;/pre&gt;
&lt;p&gt;where the bogus type of the expression is now highlighted inline:&lt;/p&gt;
&lt;pre&gt;
$ gcc-9 -c param-type-mismatch.c
&lt;span&gt;param-type-mismatch.c:&lt;/span&gt; In function ‘&lt;span&gt;caller&lt;/span&gt;’:
&lt;span&gt;param-type-mismatch.c:5:24:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;passing argument 2 of ‘&lt;span&gt;callee&lt;/span&gt;’ makes pointer from integer without a cast [&lt;span&gt;&lt;span&gt;-Wint-conversion&lt;/span&gt;&lt;/span&gt;]
    5 |   return callee(first, &lt;span&gt;&lt;span&gt;second&lt;/span&gt;&lt;/span&gt;, third);
      |                        &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
      |                        &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
      |                        &lt;span&gt;&lt;span&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;param-type-mismatch.c:1:40:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;expected ‘&lt;span&gt;const char *&lt;/span&gt;’ but argument is of type ‘&lt;span&gt;int&lt;/span&gt;’
    1 | extern int callee(int one, &lt;span&gt;&lt;span&gt;const char *two&lt;/span&gt;&lt;/span&gt;, float three);
      |                            &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~^~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Yet another example can be seen in this bad &lt;code&gt;printf&lt;/code&gt; call:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c bad-printf.cc -Wall
&lt;span&gt;bad-printf.cc:&lt;/span&gt; In function ‘&lt;span&gt;void print_field(const char*, float, long int, long int)&lt;/span&gt;’:
&lt;span&gt;bad-printf.cc:6:17:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;field width specifier ‘&lt;span&gt;*&lt;/span&gt;’ expects argument of type ‘&lt;span&gt;int&lt;/span&gt;’, but argument 3 has type ‘&lt;span&gt;long int&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;-Wformat=&lt;/span&gt;&lt;/span&gt;]
    6 |   printf (&quot;%s: &lt;span&gt;&lt;span&gt;%*ld&lt;/span&gt;&lt;/span&gt; &quot;, fieldname, &lt;span&gt;column - width&lt;/span&gt;, value);
      |                &lt;span&gt;&lt;span&gt;~^~~&lt;/span&gt;&lt;/span&gt;               &lt;span&gt;~~~~~~~~~~~~~~&lt;/span&gt;
      |                 &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;                        &lt;span&gt;|&lt;/span&gt;
      |                 &lt;span&gt;&lt;span&gt;int&lt;/span&gt;&lt;/span&gt;                      &lt;span&gt;long int&lt;/span&gt;
&lt;span&gt;bad-printf.cc:6:19:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;format ‘&lt;span&gt;%ld&lt;/span&gt;’ expects argument of type ‘&lt;span&gt;long int&lt;/span&gt;’, but argument 4 has type ‘&lt;span&gt;double&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;-Wformat=&lt;/span&gt;&lt;/span&gt;]
    6 |   printf (&quot;%s: &lt;span&gt;&lt;span&gt;%*ld&lt;/span&gt;&lt;/span&gt; &quot;, fieldname, column - width, &lt;span&gt;value&lt;/span&gt;);
      |                &lt;span&gt;&lt;span&gt;~~~^&lt;/span&gt;&lt;/span&gt;                               &lt;span&gt;~~~~~&lt;/span&gt;
      |                   &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;                               &lt;span&gt;|&lt;/span&gt;
      |                   &lt;span&gt;&lt;span&gt;long int&lt;/span&gt;&lt;/span&gt;                        &lt;span&gt;double&lt;/span&gt;
      |                &lt;span&gt;%*f&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;which contrasts “inline” the type expected by the format string versus what was passed in. (Embarrassingly, we didn’t properly highlight format string locations in older versions of the C++ front end; for GCC 9, I’ve implemented this so it has parity with that of the C front end, as shown here).&lt;/p&gt;

&lt;h2&gt;Not just for humans&lt;/h2&gt;
&lt;p&gt;One concern I’ve heard when changing how GCC prints diagnostics is that it might break someone’s script for parsing GCC output. I don’t think these changes will do that: most such scripts are set up to parse the&lt;/p&gt;
&lt;pre&gt;
  &quot;FILENAME:LINE:COL: error: MESSAGE&quot;
&lt;/pre&gt;
&lt;p&gt;lines and ignore the rest, and I’m not touching that part of the output.&lt;/p&gt;
&lt;p&gt;But it made me think it was about time we had a machine-readable output format for diagnostics, so for GCC 9, I’ve added a JSON output format: &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Message-Formatting-Options.html#index-fdiagnostics-format&quot;&gt;-fdiagnostics-format=json&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Consider this warning:&lt;/p&gt;
&lt;pre&gt;
$ gcc-9 -c cve-2014-1266.c -Wall
&lt;span&gt;cve-2014-1266.c:&lt;/span&gt; In function ‘&lt;span&gt;SSLVerifySignedServerKeyExchange&lt;/span&gt;’:
&lt;span&gt;cve-2014-1266.c:629:2:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;this ‘&lt;span&gt;if&lt;/span&gt;’ clause does not guard... [&lt;span&gt;&lt;span&gt;-Wmisleading-indentation&lt;/span&gt;&lt;/span&gt;]
  629 |  &lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt; ((err = SSLHashSHA1.update(&amp;amp;hashCtx, &amp;amp;signedParams)) != 0)
      |  &lt;span&gt;&lt;span&gt;^~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;cve-2014-1266.c:631:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;...this statement, but the latter is misleadingly indented as if it were guarded by the ‘&lt;span&gt;if&lt;/span&gt;’
  631 |   &lt;span&gt;&lt;span&gt;goto&lt;/span&gt;&lt;/span&gt; fail;
      |   &lt;span&gt;&lt;span&gt;^~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;With &lt;code&gt;-fdiagnostics-format=json&lt;/code&gt;, the diagnostics are emitted as a big blob of JSON to stderr. Running them through the handy &lt;code&gt;python -m json.tool&lt;/code&gt; to format them gives an idea of the structure:&lt;/p&gt;
&lt;pre&gt;
$ (gcc-9 -c cve-2014-1266.c -Wall -fdiagnostics-format=json 2&amp;gt;&amp;amp;1) | python -m json.tool | pygmentize -l json
[
    {
        &lt;span&gt;&lt;span&gt;&quot;children&quot;&lt;/span&gt;&lt;/span&gt;: [
            {
                &lt;span&gt;&lt;span&gt;&quot;kind&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;note&quot;&lt;/span&gt;,
                &lt;span&gt;&lt;span&gt;&quot;locations&quot;&lt;/span&gt;&lt;/span&gt;: [
                    {
                        &lt;span&gt;&lt;span&gt;&quot;caret&quot;&lt;/span&gt;&lt;/span&gt;: {
                            &lt;span&gt;&lt;span&gt;&quot;column&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;,
                            &lt;span&gt;&lt;span&gt;&quot;file&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;cve-2014-1266.c&quot;&lt;/span&gt;,
                            &lt;span&gt;&lt;span&gt;&quot;line&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;631&lt;/span&gt;
                        },
                        &lt;span&gt;&lt;span&gt;&quot;finish&quot;&lt;/span&gt;&lt;/span&gt;: {
                            &lt;span&gt;&lt;span&gt;&quot;column&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;6&lt;/span&gt;,
                            &lt;span&gt;&lt;span&gt;&quot;file&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;cve-2014-1266.c&quot;&lt;/span&gt;,
                            &lt;span&gt;&lt;span&gt;&quot;line&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;631&lt;/span&gt;
                        }
                    }
                ],
                &lt;span&gt;&lt;span&gt;&quot;message&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;...this statement, but the latter is misleadingly indented as if it were guarded by the \u2018if\u2019&quot;
&lt;/span&gt;            }
        ],
        &lt;span&gt;&lt;span&gt;&quot;kind&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;warning&quot;&lt;/span&gt;,
        &lt;span&gt;&lt;span&gt;&quot;locations&quot;&lt;/span&gt;&lt;/span&gt;: [
            {
                &lt;span&gt;&lt;span&gt;&quot;caret&quot;&lt;/span&gt;&lt;/span&gt;: {
                    &lt;span&gt;&lt;span&gt;&quot;column&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;2&lt;/span&gt;,
                    &lt;span&gt;&lt;span&gt;&quot;file&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;cve-2014-1266.c&quot;&lt;/span&gt;,
                    &lt;span&gt;&lt;span&gt;&quot;line&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;629&lt;/span&gt;
                },
                &lt;span&gt;&lt;span&gt;&quot;finish&quot;&lt;/span&gt;&lt;/span&gt;: {
                    &lt;span&gt;&lt;span&gt;&quot;column&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;,
                    &lt;span&gt;&lt;span&gt;&quot;file&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;cve-2014-1266.c&quot;&lt;/span&gt;,
                    &lt;span&gt;&lt;span&gt;&quot;line&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;629&lt;/span&gt;
                }
            }
        ],
        &lt;span&gt;&lt;span&gt;&quot;message&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;this \u2018if\u2019 clause does not guard...&quot;&lt;/span&gt;,
        &lt;span&gt;&lt;span&gt;&quot;option&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&quot;-Wmisleading-indentation&quot;&lt;/span&gt;
    }
]
&lt;/pre&gt;
&lt;p&gt;In particular, the supplementary “note” is nested within the “warning” at the JSON level, allowing, for example, IDEs to group them. Some of our C++ diagnostics can have numerous child diagnostics giving additional detail, so being able to group them, for example, via a disclosure widget, could be helpful.&lt;/p&gt;
&lt;h2&gt;Simpler C++ errors&lt;/h2&gt;
&lt;p&gt;C++ is a complicated language. For example, the rules for figuring out which C++ function is to be invoked at a call site are &lt;a href=&quot;https://en.cppreference.com/w/cpp/language/overload_resolution&quot;&gt;non-trivial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The compiler could need to consider several functions at a given call site, reject all of them for different reasons, and &lt;code&gt;g++&lt;/code&gt;‘s error messages have to cope with this generality, explaining why each was rejected.&lt;/p&gt;
&lt;p&gt;This generality can make simple cases harder to read than they could be, so for GCC 9, I’ve added special-casing to simplify some &lt;code&gt;g++&lt;/code&gt; errors for common cases where there’s just one candidate function.&lt;/p&gt;
&lt;p&gt;For example, GCC 8 could emit this:&lt;/p&gt;
&lt;pre&gt;
$ g++-8 param-type-mismatch.cc
&lt;span&gt;param-type-mismatch.cc:&lt;/span&gt; In function ‘&lt;span&gt;int test(int, const char*, float)&lt;/span&gt;’:
&lt;span&gt;param-type-mismatch.cc:8:45:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;no matching function for call to ‘&lt;span&gt;foo::member_1(int&amp;amp;, const char*&amp;amp;, float&amp;amp;)&lt;/span&gt;’
   return foo::member_1 (first, second, third&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;;
                                             &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;param-type-mismatch.cc:3:14:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;candidate: ‘&lt;span&gt;static int foo::member_1(int, const char**, float)&lt;/span&gt;’
   static int &lt;span&gt;&lt;span&gt;member_1&lt;/span&gt;&lt;/span&gt; (int one, const char **two, float three);
              &lt;span&gt;&lt;span&gt;^~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;param-type-mismatch.cc:3:14:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;  no known conversion for argument 2 from ‘&lt;span&gt;const char*&lt;/span&gt;’ to ‘&lt;span&gt;const char**&lt;/span&gt;’
&lt;/pre&gt;
&lt;p&gt;For GCC 9, I’ve special-cased this, giving a more direct error message, which highlights both the problematic argument and the parameter that it can’t be converted to:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 param-type-mismatch.cc
&lt;span&gt;param-type-mismatch.cc:&lt;/span&gt; In function ‘&lt;span&gt;int test(int, const char*, float)&lt;/span&gt;’:
&lt;span&gt;param-type-mismatch.cc:8:32:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;cannot convert ‘&lt;span&gt;const char*&lt;/span&gt;’ to ‘&lt;span&gt;const char**&lt;/span&gt;’
    8 |   return foo::member_1 (first, &lt;span&gt;&lt;span&gt;second&lt;/span&gt;&lt;/span&gt;, third);
      |                                &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
      |                                &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
      |                                &lt;span&gt;&lt;span&gt;const char*&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;param-type-mismatch.cc:3:46:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;  initializing argument 2 of ‘&lt;span&gt;static int foo::member_1(int, const char**, float)&lt;/span&gt;’
    3 |   static int member_1 (int one, &lt;span&gt;&lt;span&gt;const char **two&lt;/span&gt;&lt;/span&gt;, float three);
      |                                 &lt;span&gt;&lt;span&gt;~~~~~~~~~~~~~^~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Similarly, GCC 8 took two messages to offer suggestions for various kinds of misspelled names:&lt;/p&gt;
&lt;pre&gt;
$ g++-8 typo.cc
&lt;span&gt;typo.cc:5:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;BUFSIZE&lt;/span&gt;’ was not declared in this scope
 uint8_t buf[&lt;span&gt;&lt;span&gt;BUFSIZE&lt;/span&gt;&lt;/span&gt;];
             &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;typo.cc:5:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;suggested alternative: ‘&lt;span&gt;BUF_SIZE&lt;/span&gt;’
 uint8_t buf[&lt;span&gt;&lt;span&gt;BUFSIZE&lt;/span&gt;&lt;/span&gt;];
             &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
             &lt;span&gt;BUF_SIZE&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;so for GCC 9, I’ve consolidated the messages:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 typo.cc
&lt;span&gt;typo.cc:5:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;BUFSIZE&lt;/span&gt;’ was not declared in this scope; did you mean ‘&lt;span&gt;BUF_SIZE&lt;/span&gt;’?
    5 | uint8_t buf[&lt;span&gt;&lt;span&gt;BUFSIZE&lt;/span&gt;&lt;/span&gt;];
      |             &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
      |             &lt;span&gt;BUF_SIZE&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In some cases, where GCC 8 knew to offer suggestions within namespaces:&lt;/p&gt;
&lt;pre&gt;
$ g++-8 typo-2.cc
&lt;span&gt;typo-2.cc:&lt;/span&gt; In function ‘&lt;span&gt;void mesh_to_strip()&lt;/span&gt;’:
&lt;span&gt;typo-2.cc:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;tri_strip&lt;/span&gt;’ was not declared in this scope
   &lt;span&gt;&lt;span&gt;tri_strip&lt;/span&gt;&lt;/span&gt; result;
   &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;typo-2.cc:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;suggested alternative:
&lt;span&gt;typo-2.cc:2:9:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;  ‘&lt;span&gt;engine::tri_strip&lt;/span&gt;’
   class &lt;span&gt;&lt;span&gt;tri_strip&lt;/span&gt;&lt;/span&gt; {
         &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;GCC 9 can now offer fix-it hints:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 typo-2.cc
&lt;span&gt;typo-2.cc:&lt;/span&gt; In function ‘&lt;span&gt;void mesh_to_strip()&lt;/span&gt;’:
&lt;span&gt;typo-2.cc:8:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;tri_strip&lt;/span&gt;’ was not declared in this scope; did you mean ‘&lt;span&gt;engine::tri_strip&lt;/span&gt;’?
    8 |   &lt;span&gt;&lt;span&gt;tri_strip&lt;/span&gt;&lt;/span&gt; result;
      |   &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
      |   &lt;span&gt;engine::tri_strip&lt;/span&gt;
&lt;span&gt;typo-2.cc:2:9:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;engine::tri_strip&lt;/span&gt;’ declared here
    2 |   class &lt;span&gt;&lt;span&gt;tri_strip&lt;/span&gt;&lt;/span&gt; {
      |         &lt;span&gt;&lt;span&gt;^~~~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h2&gt;Location, location, location&lt;/h2&gt;
&lt;p&gt;A long-standing issue within GCC’s internal representation is that not every node within the syntax tree has a source location.&lt;/p&gt;
&lt;p&gt;For GCC 8, I &lt;a href=&quot;https://github.com/gcc-mirror/gcc/commit/d76863c8a62920c5a156125e68ad315b47bfcd24&quot;&gt;added a way&lt;/a&gt; to ensure that every argument at a C++ call site has a source location.&lt;/p&gt;
&lt;p&gt;For GCC 9, I’ve &lt;a href=&quot;https://github.com/gcc-mirror/gcc/commit/d582d14011fec247f203a49e79bdab05f56197b0&quot;&gt;extended this work&lt;/a&gt; so that many more places in the C++ syntax tree now retain location information for longer.&lt;/p&gt;
&lt;p&gt;This really helps when tracking down bad initializations. GCC 8 and earlier might unhelpfully emit errors on the final closing parenthesis or brace, for example:&lt;/p&gt;
&lt;pre&gt;
$ g++-8 bad-inits.cc
&lt;span&gt;bad-inits.cc:12:1:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;cannot convert ‘&lt;span&gt;json&lt;/span&gt;’ to ‘&lt;span&gt;int&lt;/span&gt;’ in initialization
 &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;;
 &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;bad-inits.cc:14:47:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;initializer-string for array of chars is too long [&lt;span&gt;&lt;span&gt;-fpermissive&lt;/span&gt;&lt;/span&gt;]
 char buffers[3][5] = { &quot;red&quot;, &quot;green&quot;, &quot;blue&quot; &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;;
                                               &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;bad-inits.cc:&lt;/span&gt; In constructor ‘&lt;span&gt;X::X()&lt;/span&gt;’:
&lt;span&gt;bad-inits.cc:17:35:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;invalid conversion from ‘&lt;span&gt;int&lt;/span&gt;’ to ‘&lt;span&gt;void*&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;-fpermissive&lt;/span&gt;&lt;/span&gt;]
   X() : one(42), two(42), three(42&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;
                                   &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;whereas now, GCC 9 can highlight exactly where the various problems are:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 bad-inits.cc
&lt;span&gt;bad-inits.cc:10:14:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;cannot convert ‘&lt;span&gt;json&lt;/span&gt;’ to ‘&lt;span&gt;int&lt;/span&gt;’ in initialization
   10 |   { 3, &lt;span&gt;&lt;span&gt;json::object&lt;/span&gt;&lt;/span&gt; },
      |        &lt;span&gt;&lt;span&gt;~~~~~~^~~~~~&lt;/span&gt;&lt;/span&gt;
      |              &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
      |              &lt;span&gt;&lt;span&gt;json&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;bad-inits.cc:14:31:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;initializer-string for array of chars is too long [&lt;span&gt;&lt;span&gt;-fpermissive&lt;/span&gt;&lt;/span&gt;]
   14 | char buffers[3][5] = { &quot;red&quot;, &lt;span&gt;&lt;span&gt;&quot;green&quot;&lt;/span&gt;&lt;/span&gt;, &quot;blue&quot; };
      |                               &lt;span&gt;&lt;span&gt;^~~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;bad-inits.cc:&lt;/span&gt; In constructor ‘&lt;span&gt;X::X()&lt;/span&gt;’:
&lt;span&gt;bad-inits.cc:17:13:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;invalid conversion from ‘&lt;span&gt;int&lt;/span&gt;’ to ‘&lt;span&gt;void*&lt;/span&gt;’ [&lt;span&gt;&lt;span&gt;-fpermissive&lt;/span&gt;&lt;/span&gt;]
   17 |   X() : one(&lt;span&gt;&lt;span&gt;42&lt;/span&gt;&lt;/span&gt;), two(42), three(42)
      |             &lt;span&gt;&lt;span&gt;^~&lt;/span&gt;&lt;/span&gt;
      |             &lt;span&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;
      |             &lt;span&gt;&lt;span&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h2&gt;What is the optimizer doing?&lt;/h2&gt;
&lt;p&gt;GCC can automatically “vectorize” loops, reorganizing them to work on multiple iterations at once, to take advantage of the vector units on your CPU. However, it can do this only for some loops; if you stray from the path, GCC will have to use scalar code instead.&lt;/p&gt;
&lt;p&gt;Unfortunately, historically it hasn’t been easy to get a sense from GCC about the decisions it’s making as it’s optimizing your code. We have an option, &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Developer-Options.html#index-fopt-info&quot;&gt;-fopt-info&lt;/a&gt;, that emits optimization information, but it’s been more of a tool for the developers of GCC itself, rather than something aimed at end users.&lt;/p&gt;
&lt;p&gt;For example, consider this (contrived) example:&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;#define N 1024&lt;/span&gt;

&lt;span&gt;void&lt;/span&gt; &lt;span&gt;test&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;p, &lt;span&gt;int&lt;/span&gt; &lt;span&gt;*&lt;/span&gt;q)
{
  &lt;span&gt;int&lt;/span&gt; i;

  &lt;span&gt;for&lt;/span&gt; (i &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;; i &lt;span&gt;&amp;lt;&lt;/span&gt; N; i&lt;span&gt;++&lt;/span&gt;)
    {
      p[i] &lt;span&gt;=&lt;/span&gt; q[i];
      asm &lt;span&gt;volatile&lt;/span&gt; (&lt;span&gt;&quot;&quot;&lt;/span&gt; &lt;span&gt;:::&lt;/span&gt; &lt;span&gt;&quot;memory&quot;&lt;/span&gt;);
    }
}
&lt;/pre&gt;
&lt;p&gt;I tried compiling it with GCC 8 with &lt;code&gt;-O3 -fopt-info-all-vec&lt;/code&gt;, but it wasn’t very enlightening:&lt;/p&gt;
&lt;pre&gt;
$ gcc-8 -c v.c -O3 -fopt-info-all-vec

Analyzing loop at v.c:7
v.c:7:3: note: ===== analyze_loop_nest =====
v.c:7:3: note: === vect_analyze_loop_form ===
v.c:7:3: note: === get_loop_niters ===
v.c:7:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
v.c:3:6: note: vectorized 0 loops in function.
v.c:3:6: note: ===vect_slp_analyze_bb===
v.c:3:6: note: ===vect_slp_analyze_bb===
v.c:10:7: note: === vect_analyze_data_refs ===
v.c:10:7: note: got vectype for stmt: _5 = *_3;
vector(4) int
v.c:10:7: note: got vectype for stmt: *_4 = _5;
vector(4) int
v.c:10:7: note: === vect_analyze_data_ref_accesses ===
v.c:10:7: note: not consecutive access _5 = *_3;
v.c:10:7: note: not consecutive access *_4 = _5;
v.c:10:7: note: not vectorized: no grouped stores in basic block.
v.c:7:3: note: === vect_analyze_data_refs ===
v.c:7:3: note: not vectorized: not enough data-refs in basic block.
v.c:7:3: note: ===vect_slp_analyze_bb===
v.c:7:3: note: ===vect_slp_analyze_bb===
v.c:12:1: note: === vect_analyze_data_refs ===
v.c:12:1: note: not vectorized: not enough data-refs in basic block.
&lt;/pre&gt;
&lt;p&gt;For GCC 9, I’ve reorganized problem-tracking within the vectorizer so that the output is of the form:&lt;/p&gt;
&lt;pre&gt;
  [LOOP-LOCATION]: couldn't vectorize this loop
  [PROBLEM-LOCATION]: because of [REASON]
&lt;/pre&gt;
&lt;p&gt;For the example above, this gives the following, identifying the location of the construct within the loop that the vectorizer couldn’t handle. (I hoped to have it also show the source code, but that didn’t make feature freeze):&lt;/p&gt;
&lt;pre&gt;
$ gcc-9 -c v.c -O3 -fopt-info-all-vec
v.c:7:3: missed: couldn't vectorize loop
v.c:10:7: missed: statement clobbers memory: __asm__ __volatile__(&quot;&quot; :  :  : &quot;memory&quot;);
v.c:3:6: note: vectorized 0 loops in function.
v.c:10:7: missed: statement clobbers memory: __asm__ __volatile__(&quot;&quot; :  :  : &quot;memory&quot;);
&lt;/pre&gt;
&lt;p&gt;This improves things, but still has some limitations, so for GCC 9 I’ve also added a new option to emit machine-readable optimization information: &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Developer-Options.html#index-fsave-optimization-record&quot;&gt;-fsave-optimization-record&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This writes out a &lt;code&gt;SRCFILE.opt-record.json.gz&lt;/code&gt; file with much richer data: for example, every message is tagged with profile information (if available), so that you can look at the “hottest” part of the code, and it captures inlining information, so that if a function has been inlined into several places, you can see how each instance of the function has been optimized.&lt;/p&gt;
&lt;h2&gt;Other improvements&lt;/h2&gt;
&lt;p&gt;GCC can emit “fix-it hints” that suggest how to fix a problem in your code. These can be automatically applied by an IDE.&lt;/p&gt;
&lt;p&gt;For GCC 9, I’ve added various new fix-it hints. There are now fix-it hints for forgetting the &lt;code&gt;return *this;&lt;/code&gt; needed by various C++ operators:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c operator.cc
&lt;span&gt;operator.cc:&lt;/span&gt; In member function ‘&lt;span&gt;boxed_ptr&amp;amp; boxed_ptr::operator=(const boxed_ptr&amp;amp;)&lt;/span&gt;’:
&lt;span&gt;operator.cc:7:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;warning: &lt;/span&gt;&lt;/span&gt;no return statement in function returning non-void [&lt;span&gt;&lt;span&gt;-Wreturn-type&lt;/span&gt;&lt;/span&gt;]
    6 |     m_ptr = other.m_ptr;
  +++ |+&lt;span&gt;    return *this;&lt;/span&gt;
    7 |   &lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;
      |   &lt;span&gt;&lt;span&gt;^&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and for when the compiler needs a &lt;code&gt;typename&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c template.cc
&lt;span&gt;template.cc:3:3:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;need ‘&lt;span&gt;typename&lt;/span&gt;’ before ‘&lt;span&gt;Traits::type&lt;/span&gt;’ because ‘&lt;span&gt;Traits&lt;/span&gt;’ is a dependent scope
    3 |   &lt;span&gt;&lt;span&gt;Traits&lt;/span&gt;&lt;/span&gt;::type type;
      |   &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
      |   &lt;span&gt;typename &lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and when you try to use an accessor member as if it were a data member:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c fncall.cc
&lt;span&gt;fncall.cc:&lt;/span&gt; In function ‘&lt;span&gt;void hangman(const mystring&amp;amp;)&lt;/span&gt;’:
&lt;span&gt;fncall.cc:12:11:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;invalid use of member function ‘&lt;span&gt;int mystring::get_length() const&lt;/span&gt;’ (did you forget the ‘&lt;span&gt;()&lt;/span&gt;’ ?)
   12 |   if (&lt;span&gt;&lt;span&gt;str.get_length&lt;/span&gt;&lt;/span&gt; &amp;gt; 0)
      |       &lt;span&gt;&lt;span&gt;~~~~^~~~~~~~~~&lt;/span&gt;&lt;/span&gt;
      |                     &lt;span&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and for C++11’s scoped enums:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c enums.cc
&lt;span&gt;enums.cc:&lt;/span&gt; In function ‘&lt;span&gt;void json::test(const json::value&amp;amp;)&lt;/span&gt;’:
&lt;span&gt;enums.cc:12:26:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;STRING&lt;/span&gt;’ was not declared in this scope; did you mean ‘&lt;span&gt;json::kind::STRING&lt;/span&gt;’?
   12 |     if (v.get_kind () == &lt;span&gt;&lt;span&gt;STRING&lt;/span&gt;&lt;/span&gt;)
      |                          &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
      |                          &lt;span&gt;json::kind::STRING&lt;/span&gt;
&lt;span&gt;enums.cc:3:44:&lt;/span&gt; &lt;span&gt;&lt;span&gt;note: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;json::kind::STRING&lt;/span&gt;’ declared here
    3 |   enum class kind { OBJECT, ARRAY, NUMBER, &lt;span&gt;&lt;span&gt;STRING&lt;/span&gt;&lt;/span&gt;, TRUE, FALSE, NULL_ };
      |                                            &lt;span&gt;&lt;span&gt;^~~~~~&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;And I added a tweak to integrate the suggestions about misspelled members with that for accessors:&lt;/p&gt;
&lt;pre&gt;
$ g++-9 -c accessor-fixit.cc
&lt;span&gt;accessor-fixit.cc:&lt;/span&gt; In function ‘&lt;span&gt;int test(t*)&lt;/span&gt;’:
&lt;span&gt;accessor-fixit.cc:17:15:&lt;/span&gt; &lt;span&gt;&lt;span&gt;error: &lt;/span&gt;&lt;/span&gt;‘&lt;span&gt;class t&lt;/span&gt;’ has no member named ‘&lt;span&gt;ratio&lt;/span&gt;’; did you mean ‘&lt;span&gt;int t::m_ratio&lt;/span&gt;’? (accessible via ‘&lt;span&gt;int t::get_ratio() const&lt;/span&gt;’)
   17 |   return ptr-&amp;gt;&lt;span&gt;&lt;span&gt;ratio&lt;/span&gt;&lt;/span&gt;;
      |               &lt;span&gt;&lt;span&gt;^~~~~&lt;/span&gt;&lt;/span&gt;
      |               &lt;span&gt;get_ratio()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I’ve also tweaked the suggestions code so it considers transposed letters, so it should do a better job of figuring out misspellings.&lt;/p&gt;
&lt;h2&gt;Looking to the future&lt;/h2&gt;
&lt;p&gt;The above covers some of the changes I’ve made for GCC 9.&lt;/p&gt;
&lt;p&gt;Perhaps a deeper change is that we now have a set of &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gccint/User-Experience-Guidelines.html&quot;&gt;user experience guidelines for GCC&lt;/a&gt;, to try to keep a focus on the programmer’s experience as we implement new diagnostics. If you’d like to get involved in GCC development, please join us on the &lt;a href=&quot;https://gcc.gnu.org/lists.html&quot;&gt;GCC mailing list&lt;/a&gt;. Hacking on diagnostics is a great way to get started.&lt;/p&gt;
&lt;h2&gt;Trying it out&lt;/h2&gt;
&lt;p&gt;GCC 9 will be in &lt;a href=&quot;https://fedoraproject.org/wiki/Releases/30/Schedule&quot;&gt;Fedora 30&lt;/a&gt;, which should be out in a few weeks.&lt;/p&gt;
&lt;p&gt;For simple code examples, you can play around with the new&lt;br/&gt;GCC at &lt;a href=&quot;https://godbolt.org/&quot;&gt;https://godbolt.org/&lt;/a&gt; (select GCC “trunk”).&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
&lt;h2&gt;See Also&lt;/h2&gt;
&lt;p&gt;If you are using GCC 8 on &lt;a href=&quot;https://developers.redhat.com/products/rhel/overview/&quot;&gt;Red Hat Enterprise Linux&lt;/a&gt; 6, 7, or &lt;a href=&quot;https://developers.redhat.com/rhel8&quot;&gt;8 Beta&lt;/a&gt;,  some articles that might be of interest:&lt;/p&gt;


&lt;div class=&quot;addtoany_share_save_container addtoany_content addtoany_content_bottom&quot;&gt;
&lt;div class=&quot;a2a_kit a2a_kit_size_16 addtoany_list&quot; data-a2a-url=&quot;https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/&quot; data-a2a-title=&quot;Usability improvements in GCC 9&quot;&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share&quot;&gt;&lt;img src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; alt=&quot;Share&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 08 Mar 2019 19:43:42 +0000</pubDate>
<dc:creator>chx</dc:creator>
<og:type>article</og:type>
<og:title>Usability improvements in GCC 9 - Red Hat Developer Blog</og:title>
<og:description>The upcoming GCC 9 release will have improved diagnostic messages, simpler C++ errors, more accurate error location reporting, and optional machine readable output for developer tools.</og:description>
<og:url>https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/</dc:identifier>
</item>
<item>
<title>Hard disks can be turned into listening devices</title>
<link>https://www.theregister.co.uk/2019/03/07/hard_drive_eavesdropping/</link>
<guid isPermaLink="true" >https://www.theregister.co.uk/2019/03/07/hard_drive_eavesdropping/</guid>
<description>&lt;p&gt;It's not just the walls that have ears. It's also the hard drives.&lt;/p&gt;
&lt;p&gt;Eggheads at the University of Michigan in the US, and Zhejiang University in China, have found that hard disk drives (HDDs) can be turned into listening devices, using malicious firmware and signal processing calculations.&lt;/p&gt;
&lt;p&gt;For a study titled &quot;Hard Drive of Hearing: Disks that Eavesdrop with a Synthesized Microphone,&quot; computer scientists Andrew Kwong, Wenyuan Xu, and Kevin Fu describe an acoustic side-channel that can be accessed by measuring how sound waves make hard disk parts vibrate.&lt;/p&gt;
&lt;p&gt;&quot;Our research demonstrates that the mechanical components in magnetic hard disk drives behave as microphones with sufficient precision to extract and parse human speech,&quot; their paper, obtained by &lt;em&gt;The Register&lt;/em&gt; ahead of its formal publication, stated. &quot;These unintentional microphones sense speech with high enough fidelity for the Shazam service to recognize a song recorded through the hard drive.&quot;&lt;/p&gt;
&lt;p&gt;The team's research work, scheduled to be presented in May at the &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.ieee-security.org/TC/SP2019/&quot;&gt;2019 IEEE Symposium on Security and Privacy&lt;/a&gt;, explores how it's possible to alter HDD firmware to measure the offset of a disk drive's read/write head from the center of the track it's seeking.&lt;/p&gt;
&lt;p&gt;The offset is referred to as the Positional Error Signal (PES) and hard drives monitor this signal to keep the read/write head in the optimal position for reading and writing data. PES measurements must be very fine because drive heads can only be off by a few nanometers before data errors arise. The sensitivity of the gear, however, means human speech is sufficient to move the needle, so to speak.&lt;/p&gt;
&lt;p&gt;&quot;These extremely precise measurements are sensitive to vibrations caused by the slightest fluctuations in air pressure, such as those induced by human vocalizations,&quot; the paper explained.&lt;/p&gt;
&lt;p&gt;Vibrations from HDD parts don't yield particularly good sound, but with digital filtering techniques, human speech can be discerned, given the right conditions.&lt;/p&gt;
&lt;div class=&quot;promo_article&quot;&gt;&lt;img src=&quot;https://regmedia.co.uk/2016/07/20/loud.jpg?x=174&amp;amp;y=115&amp;amp;crop=1&quot; width=&quot;174&quot; height=&quot;115&quot; alt=&quot;loud&quot;/&gt;&lt;h2 title=&quot;Nordic Nasdaq knocked as deleterious decibels crashed servers&quot;&gt;Noise from blast of gas destroys Digiplex data depot disk drives&lt;/h2&gt;
&lt;a href=&quot;https://www.theregister.co.uk/2018/04/26/decibels_destroy_disk_drives_in_digiplex_data_centre/&quot;&gt;&lt;span&gt;READ MORE&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Flashing HDD firmware is a prerequisite for the snooping, the paper says, because the ATA protocol does not expose the PES. This could be accomplished through traditional attack techniques – binary exploitation, drive-by downloads, or phishing – or by intercepting HDDs somewhere in the supply chain and modifying them. The researchers point to the &lt;a target=&quot;_blank&quot; href=&quot;https://www.theregister.co.uk/2015/02/17/kaspersky_labs_equation_group/&quot;&gt;Grayfish&lt;/a&gt; malware attributed to the Equation Group as an example.&lt;/p&gt;
&lt;p&gt;To exfiltrate captured data, the three boffins suggest transmitting it over the internet by modifying Linux operating system files to create a reverse shell with root privileges or storing it to disk for physical recovery at a later date.&lt;/p&gt;
&lt;p&gt;While many computing devices come with microphones that might look like easier targets for hijacking, the researchers observe that security conscious individuals may disable known microphones in software or with &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;http://stahlke.org/dan/phonemute/&quot;&gt;hardware hacks&lt;/a&gt;. A hard disk-focused attack would be less expected.&lt;/p&gt;
&lt;p&gt;But look, let's be real: for the vast, vast majority of people, this is all just a cunning academic exploitation of hard drive technology. No one's really going to bug you via your spinning rust.&lt;/p&gt;
&lt;p&gt;But... if they were to, the PES sampling rate (34.56 kHz) allows the capture of audio signals up to 17.28 kHz, which covers almost all of human hearing (20 Hz–20 kHz) and is significantly better than the sampling rate of the telephone system (8 kHz). Since the PES data amounts to air pressure readings, the researchers simply turned the series of PES measurements into linear pulse-code modulation values and then converted these samples into sound via digital signal processing algorithms.&lt;/p&gt;
&lt;h3 class=&quot;crosshead&quot;&gt;&lt;span&gt;Wait, there's a catch&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;One limiting aspect of the described technique is that it requires a fairly loud conversation in the vicinity of the eavesdropping hard drive. To record comprehensible speech, the conversation had to reach 85 dBA, with 75 dBA being the low threshold for capturing muffled sound. To get Shazam to identify recordings captured through a hard drive, the source file had to be played at 90 dBA. Which is pretty loud. Like lawn mower or food blender loud.&lt;/p&gt;
&lt;p&gt;The researchers acknowledge this is louder than most practical scenarios but they say they &quot;expect that an attacker using state of the art filtering and voice recognition algorithms can substantially amplify the channel’s strength.&quot;&lt;/p&gt;
&lt;p&gt;While the growing popularity of solid state drives diminish the risk even further, there were still twice as many hard drives sold with PCs in 2017 as there were solid state drives, the researchers claimed.&lt;/p&gt;
&lt;p&gt;To prevent HDDs from being turned into microphones, the trio suggest hard drive makers sign firmware cryptographically and use TLS when distributing updates to prevent MITM attacks.&lt;/p&gt;
&lt;p&gt;They also note that their work may open future research possibilities, such as using a hard disk's read/write head as a crude sounds generator to issue spoken commands to nearby connected speakers like Alexa, Google Home, and Siri. ®&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Addendum:&lt;/strong&gt; If you're suffering deja-vu, the paper cites Alfredo Ortega's &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.youtube.com/watch?v=poktHJzvDX0&quot;&gt;earlier work&lt;/a&gt; on using hard disks as microphones, although its authors claim they use a different technique to measure the effects of sound, and require a lower volume compared to other approaches.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;wptl btm&quot;&gt;&lt;span&gt;Sponsored:&lt;/span&gt; &lt;a href=&quot;https://go.theregister.co.uk/tl/1818/-7142/becoming-a-pragmatic-security-leader?td=wptl1818&quot;&gt;Becoming a Pragmatic Security Leader&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 08 Mar 2019 17:40:49 +0000</pubDate>
<dc:creator>bjoko</dc:creator>
<og:image>https://regmedia.co.uk/2018/07/02/shutterstock_hard_disk_platter_people.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.theregister.co.uk/2019/03/07/hard_drive_eavesdropping/</og:url>
<og:title>From hard drive to over-heard drive: Boffins convert spinning rust into eavesdropping mic</og:title>
<og:description>GOOD ENOUGH TO RECOGNIZE MUSIC VIA SHAZAM IF YOU TURN IT UP TO 11</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theregister.co.uk/2019/03/07/hard_drive_eavesdropping/</dc:identifier>
</item>
<item>
<title>The Planned Obsolescence of Old Coders</title>
<link>https://onezero.medium.com/ctrl-alt-delete-the-planned-obsolescence-of-old-coders-9c5f440ee68</link>
<guid isPermaLink="true" >https://onezero.medium.com/ctrl-alt-delete-the-planned-obsolescence-of-old-coders-9c5f440ee68</guid>
<description>&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; readability=&quot;48&quot;&gt;
&lt;p name=&quot;ab7a&quot; id=&quot;ab7a&quot; class=&quot;graf graf--p graf--hasDropCapModel graf--hasDropCap graf--hasDropCapImage graf--leading&quot;&gt;&lt;span class=&quot;graf-dropCap&quot;&gt;&lt;span class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;&lt;img class=&quot;graf-dropCapImage&quot; data-image-id=&quot;1*1H-Uc9Id0bT5_wktsycZiw.png&quot; data-width=&quot;501&quot; data-height=&quot;500&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*1H-Uc9Id0bT5_wktsycZiw.png&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;graf-dropCapText&quot;&gt;As&lt;/span&gt;&lt;/span&gt; an alternative to the management track, Google, Microsoft, and other large companies define an “individual contributor (IC) track,” a ladder of job titles for senior engineers that rises in parallel to the management ladder. The IC track lets engineers climb a seniority ladder without forsaking the craft they love.&lt;/p&gt;
&lt;p name=&quot;7bb5&quot; id=&quot;7bb5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But the IC track is flawed. The programmers I spoke with said that promotion is slower on the IC track, and the distinctions between titles are blurry. According to David Golden, a 45-year-old engineer at MongoDB, “In the development-only track, there’s a bigger hurdle for me to move to the next level. It’s not clear how you get from one to the other and whether it’s something you can actually do anything about.”&lt;/p&gt;
&lt;p name=&quot;8754&quot; id=&quot;8754&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Based on interviews with a half-dozen programmers, it is clear to me that companies should create a qualitatively different role for their most senior individual contributors. Candidates for such roles would be judged by their past effectiveness, the same as managers are, not by a fast-churning checklist of skills. Greater clarity would mean engineers could climb the ladder faster, and the prestige and renewed intellectual challenge of each level would keep programmers motivated into their fifties and sixties.&lt;/p&gt;
&lt;p name=&quot;9d42&quot; id=&quot;9d42&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Proven engineers who occupy the most senior roles should be deployed to solve the hardest problems on the most critical projects. Their roles should emphasize technical leadership through writing, speaking, and mentoring.&lt;/p&gt;
&lt;p name=&quot;c63f&quot; id=&quot;c63f&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Because of their deep knowledge and broad experience, older programmers are able to translate their knowledge into ordinary terms, which puts them in a position to act as ambassadors to the nonprogramming world. Ari Blenkhorn filled this role when she led a cloth simulation project at the special effects studio Industrial Light and Magic. “Yoda’s robe, Harry Potter’s Quidditch cloak, the Dementors’ robes—all of that was the software that I helped develop,” she says. “I needed to speak the language of both the physics simulation research team and the animation team. They don’t think about partial differential equations. They think about cloth that’s silky and stretchy and ripples in the wind.”&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 08 Mar 2019 17:14:36 +0000</pubDate>
<dc:creator>coffee</dc:creator>
<og:title>Ctrl-Alt-Delete: The Planned Obsolescence of Old Coders</og:title>
<og:url>https://onezero.medium.com/ctrl-alt-delete-the-planned-obsolescence-of-old-coders-9c5f440ee68</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*94_yXQz5iO_o4BWA1x9nJA.png</og:image>
<og:description>Old coders never die, they just become middle managers.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://onezero.medium.com/ctrl-alt-delete-the-planned-obsolescence-of-old-coders-9c5f440ee68?gi=33890b64313a</dc:identifier>
</item>
<item>
<title>Myequifax.com Bypasses Credit Freeze Pin</title>
<link>https://krebsonsecurity.com/2019/03/myequifax-com-bypasses-credit-freeze-pin/</link>
<guid isPermaLink="true" >https://krebsonsecurity.com/2019/03/myequifax-com-bypasses-credit-freeze-pin/</guid>
<description>&lt;p&gt;Most people who have frozen their credit files with &lt;strong&gt;Equifax&lt;/strong&gt; have been issued a numeric Personal Identification Number (PIN) which is supposed to be required before a freeze can be lifted or thawed. Unfortunately, if you don’t already have an account at the credit bureau’s new &lt;a href=&quot;https://my.equifax.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;myEquifax portal&lt;/a&gt;, it may be simple for identity thieves to lift an existing credit freeze at Equifax and bypass the PIN armed with little more than your, name, Social Security number and birthday.&lt;/p&gt;
&lt;p&gt;Consumers in every U.S. state can now freeze their credit files for free with Equifax and two other major bureaus (&lt;strong&gt;Trans Union&lt;/strong&gt; and &lt;strong&gt;Experian&lt;/strong&gt;). A freeze makes it much harder for identity thieves to open new lines of credit in your name.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter wp-image-46831&quot; src=&quot;https://krebsonsecurity.com/wp-content/uploads/2019/03/myequifax.png&quot; alt=&quot;&quot; width=&quot;594&quot; height=&quot;341&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In the wake of Equifax’s epic 2017 data breach impacting some 148 million Americans, many people did freeze their credit files at the big three in response. But Equifax has changed a few things since then.&lt;/p&gt;
&lt;p&gt;Seeking to manage my own credit freeze at equifax.com as I’d done in years past, I was steered toward creating an account at myequifax.com, which I was shocked to find I did not previously possess.&lt;/p&gt;
&lt;p&gt;Getting an account at myequifax.com was easy. In fact, it was too easy. The portal asked me for an email address and suggested a longish, randomized password, which I accepted. I chose an old email address that I knew wasn’t directly tied to my real-life identity.&lt;/p&gt;
&lt;p&gt;The next page asked me enter my SSN and date of birth, and to share a phone number (sharing was optional, so I didn’t). SSN and DOB data is widely available for sale in the cybercrime underground on almost all U.S. citizens. This has been the reality for years, and was so well before Equifax announced its big 2017 breach.&lt;/p&gt;
&lt;p&gt;myEquifax said it couldn’t verify that my email address belonged to the Brian Krebs at that SSN and DOB. It then asked a series of four security questions — so-called “knowledge-based authentication” or KBA questions designed to see if I could recall bits about my recent financial history.&lt;/p&gt;
&lt;p&gt;In general, the data being asked about in these KBA quizzes is culled from public records, meaning that this information likely is publicly available in some form — either digitally or in-person. Indeed, I have &lt;a href=&quot;https://krebsonsecurity.com/2013/09/data-broker-giants-hacked-by-id-theft-service/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;long assailed the KBA industry&lt;/a&gt; as creating a false sense of security that is easily bypassed by fraudsters.&lt;/p&gt;
&lt;p&gt;One potential problem with relying on KBA questions to authenticate consumers online is that so much of the information needed to successfully guess the answers to those multiple-choice questions is now indexed or exposed by search engines, social networks and third-party services online — both criminal and commercial.&lt;/p&gt;
&lt;p&gt;The first three multiple-guess questions myEquifax asked were about loans or debts that I have never owed. Thus, the answer to the first three KBA questions asked was, “none of the above.” The final question asked for the name of our last mortgage company. Again, information that is not hard to find.&lt;/p&gt;
&lt;p&gt;Satisfied with my answers, Equifax informed me that yes indeed I was Brian Krebs and that I could now manage my existing freeze with the company. After requesting a thaw, I was brought to a vintage Equifax page that looked nothing like myEquifax’s sunnier new online plumage.&lt;/p&gt;
&lt;div id=&quot;attachment_46832&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;33&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://krebsonsecurity.com/wp-content/uploads/2019/03/equifax-PIN-needed.png&quot;&gt;&lt;img class=&quot;wp-image-46832&quot; src=&quot;https://krebsonsecurity.com/wp-content/uploads/2019/03/equifax-PIN-needed.png&quot; alt=&quot;&quot; width=&quot;596&quot; height=&quot;496&quot; /&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Equifax’s site says it will require users requesting changes to an existing credit freeze to have access to their freeze PIN and be ready to supply it. But Equifax never actually asks for the PIN.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This page informed me that if I previously secured a freeze of my credit file with Equifax and been given a PIN needed to undo that status in any way, that I should be ready to provide said information &lt;em&gt;if I was requesting changes via phone or email. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In other words, &lt;em&gt;credit freezes and thaws requested via myEquifax don’t require users to supply any pre-existing PIN&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Fine, I said. Let’s do this.&lt;/p&gt;
&lt;p&gt;myEquifax then asked for the date range requested to thaw my credit freeze. Submit.&lt;/p&gt;
&lt;p&gt;“We’ve successfully processed your security freeze request!,” the site declared.&lt;/p&gt;
&lt;p&gt;This also was exclaimed in an email to the random old address I’d used at myEquifax, although the site never once made any attempt to validate that I had access to this inbox, something that could be done by simply sending a confirmation link that needs to be clicked to activate the account.&lt;/p&gt;
&lt;p&gt;In addition, I noticed Equifax added my old mobile number to my account, even though I never supplied this information and was not using this phone when I created the myEquifax account.&lt;/p&gt;
&lt;div id=&quot;attachment_46833&quot; class=&quot;wp-caption aligncenter&quot; readability=&quot;34&quot;&gt;&lt;a class=&quot;lightbox&quot; href=&quot;https://krebsonsecurity.com/wp-content/uploads/2019/03/MYequifax-success.png&quot;&gt;&lt;img class=&quot;wp-image-46833&quot; src=&quot;https://krebsonsecurity.com/wp-content/uploads/2019/03/MYequifax-success.png&quot; alt=&quot;&quot; width=&quot;599&quot; height=&quot;324&quot; /&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Successfully unfreezing (temporarily thawing) my credit freeze did not require me to ever supply my previously-issued freeze PIN from Equifax. Anyone who knew the vaguest and most knowable details about me could have done the same.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;myEquifax.com does not currently seek to verify the account by requesting confirmation via a phone call or text to the phone number associated with the account (also, recall that even providing a phone number was optional).&lt;/p&gt;
&lt;p&gt;Happily, I did discover then when I used a different computer and Internet address to try to open up another account under my name, date of birth and SSN, it informed me that a profile already existed for this information. This suggests that signing up at myEquifax is probably a good idea, given that the alternative is more risky.&lt;/p&gt;
&lt;p&gt;It was way too easy to create my account, but I’m not saying everyone will be able to create one online. In testing with several readers over the past 24 hours, myEquifax seems to be returning a lot more error pages at the KBA stage of the process now, prompting people to try again later or make a request via email or phone.&lt;/p&gt;
&lt;p&gt;Equifax spokesperson &lt;strong&gt;Nancy Bistritz-Balkan&lt;/strong&gt; said not requiring a PIN for people with existing freezes was by design.&lt;/p&gt;
&lt;p&gt;“With myEquifax, we created an online experience that enables consumers to securely and conveniently manage security freezes and fraud alerts,” Bistritz-Balkan said..&lt;/p&gt;
&lt;p&gt;“We deployed an experience that embraces both security standards (using a multi-factor and layered approach to verify the consumer’s identity) and reflects specific consumer feedback on managing security freezes and fraud alerts online without the use of a PIN,” she continued. “The account set-up process, which involves the creation of a username and password, relies on both user inputs and other factors to securely establish, verify, and authenticate that the consumer’s identity is connected to the consumer every time.”&lt;span id=&quot;more-46823&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I asked Bistritz-Balkan what else besides a username and a password the company may have meant by “multi-factor;” I’m still waiting for clarification. But I did not experience anything like multi-factor in setting up or logging into my myEquifax account.&lt;/p&gt;
&lt;p&gt;This may by closer to Equifax’s idea of multi-factor: The company told me that if I still really wanted to use my freeze PIN, I could always call their 800 number (800-349-9960) or make the request via mail. Nevermind that if I’m a bad guy looking to hack others, I’m definitely going to be using the myEquifax Web site — &lt;em&gt;not&lt;/em&gt; the options that make me have to supply a PIN.&lt;/p&gt;
&lt;p&gt;Virtually the entire United States population in 2017 became eligible for free credit monitoring from Equifax following its 2017 breach. Credit monitoring can be useful for recovering from identity theft, but consumers should not expect these services to block new account fraud; the most they will likely do in this case is alert you after ID thieves have already opened new accounts in your name.&lt;/p&gt;
&lt;p&gt;A credit freeze does not impact your ability to use any existing financial accounts you may have, including bank and credit/debit accounts. Nor will it protect you from fraud on those existing accounts. It is mainly a way to minimize the risk that someone may be able to create new accounts in your name.&lt;/p&gt;
&lt;p&gt;If you haven’t done so lately, it might a good time to order a free copy of your credit report from &lt;a href=&quot;https://www.annualcreditreport.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;annualcreditreport.com&lt;/a&gt;. This service entitles each consumer one free copy of their credit report annually from each of the three credit bureaus — either all at once or spread out over the year.&lt;/p&gt;
&lt;p&gt;Additional reading:&lt;/p&gt;
&lt;p&gt;NYTimes, March 8, 2019: &lt;a href=&quot;https://www.nytimes.com/2019/03/08/your-money/equifax-credit-freeze-child.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How Equifax Complicates a Simple Task: Freezing a Child’s Credit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Register, March 8, 2019: &lt;a href=&quot;https://www.theregister.co.uk/2019/03/08/security_equifax_senate/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tech Security at Equifax was so diabolical, senators want to pass US laws making its incompetence  illegal.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.carper.senate.gov/public/_cache/files/5/0/508a6447-853f-4f41-85e8-1927641557f3/D5CFA4A0FC19997FF41FB3A5CE9EB6F7.equifax-report-3.6.19.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Equifax Investigation by Senate Homeland Security committee&lt;/a&gt; (.PDF, Sen. Carper).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2018/09/credit-freezes-are-free-let-the-ice-age-begin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Credit Freezes are Free: Let the Ice Age Begin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2018/06/plant-your-flag-mark-your-territory/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Plant Your Flag, Mark Your Territory&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2017/09/experian-site-can-give-anyone-your-credit-freeze-pin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Experian Site Can Give Anyone Your Freeze PIN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2018/03/survey-americans-spent-1-4b-on-credit-freeze-fees-in-wake-of-equifax-breach/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Survey: Americans Spent $1.4B on Credit Freeze Fees in Wake of Equifax Breach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2017/10/equifax-breach-fallout-your-salary-history/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Equifax Breach Fallout: Your Salary History&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2013/09/data-broker-giants-hacked-by-id-theft-service/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Data Broker Giants Hacked by ID Theft Service&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://krebsonsecurity.com/2013/10/experian-sold-consumer-data-to-id-theft-service/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Experian Sold Access to ID Theft Service&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;mid-banner&quot;&gt;&lt;a href=&quot;https://www.akamai.com/us/en/security.jsp?utm_source=krebsonsecurity&amp;amp;utm_medium=display&amp;amp;utm_id=F-MC-44701&amp;amp;utm_campaign=unifiedsecurity_digital_2019&amp;amp;utm_content=unifiedsecurity_global&amp;amp;utm_term=unifiedsecurity_ros&quot;&gt;&lt;img src=&quot;https://krebsonsecurity.com/b-akamai/15.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;small&quot;&gt;Tags: &lt;a href=&quot;https://krebsonsecurity.com/tag/credit-freeze-pin/&quot; rel=&quot;tag&quot;&gt;credit freeze PIN&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/experian/&quot; rel=&quot;tag&quot;&gt;Experian&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/freeze-pin-bypass/&quot; rel=&quot;tag&quot;&gt;freeze PIN bypass&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/kba/&quot; rel=&quot;tag&quot;&gt;KBA&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/myequifax-com/&quot; rel=&quot;tag&quot;&gt;myEquifax.com&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/nancy-bistritz-balkan/&quot; rel=&quot;tag&quot;&gt;Nancy Bistritz-Balkan&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/tag/trans-union/&quot; rel=&quot;tag&quot;&gt;Trans Union&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;postmetadata alt&quot;&gt;&lt;small&gt;This entry was posted on Friday, March 8th, 2019 at 11:12 am and is filed under &lt;a href=&quot;https://krebsonsecurity.com/category/sunshine/&quot; rel=&quot;category tag&quot;&gt;A Little Sunshine&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/category/latest-warnings/&quot; rel=&quot;category tag&quot;&gt;Latest Warnings&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/category/security-tools/&quot; rel=&quot;category tag&quot;&gt;Security Tools&lt;/a&gt;, &lt;a href=&quot;https://krebsonsecurity.com/category/comingstorm/&quot; rel=&quot;category tag&quot;&gt;The Coming Storm&lt;/a&gt;. You can follow any comments to this entry through the &lt;a href=&quot;https://krebsonsecurity.com/2019/03/myequifax-com-bypasses-credit-freeze-pin/feed/&quot;&gt;RSS 2.0&lt;/a&gt; feed. You can skip to the end and leave a comment. Pinging is currently not allowed.&lt;/small&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 08 Mar 2019 16:56:19 +0000</pubDate>
<dc:creator>deanmoriarty</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://krebsonsecurity.com/2019/03/myequifax-com-bypasses-credit-freeze-pin/</dc:identifier>
</item>
</channel>
</rss>