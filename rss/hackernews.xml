<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>States bring action against Google under federal and state antitrust laws [pdf]</title>
<link>https://www.texasattorneygeneral.gov/sites/default/files/images/admin/2020/Press/20201216%20COMPLAINT_REDACTED.pdf</link>
<guid isPermaLink="true" >https://www.texasattorneygeneral.gov/sites/default/files/images/admin/2020/Press/20201216%20COMPLAINT_REDACTED.pdf</guid>
<description>&lt;a href=&quot;https://www.texasattorneygeneral.gov/sites/default/files/images/admin/2020/Press/20201216%20COMPLAINT_REDACTED.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Wed, 16 Dec 2020 21:10:40 +0000</pubDate>
<dc:creator>pondsider</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://www.texasattorneygeneral.gov/sites/default/files/images/admin/2020/Press/20201216%20COMPLAINT_REDACTED.pdf</dc:identifier>
</item>
<item>
<title>Preview in macOS Big Sur is destroying PDFs</title>
<link>https://annoying.technology/posts/86f4ea27e4cd90d0/</link>
<guid isPermaLink="true" >https://annoying.technology/posts/86f4ea27e4cd90d0/</guid>
<description>&lt;h2 id=&quot;post-title&quot;&gt;Preview in macOS Big Sur is irreversibly destroying PDFs – again&lt;/h2&gt;
&lt;div class=&quot;main-image&quot;&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/35f98c21da204421e81bcfcb709f0b9a2563fde5/a3843/media/previeweatingpdfs.png&quot; class=&quot;main-image&quot;/&gt;&lt;/div&gt;
&lt;p&gt;This &lt;a href=&quot;https://annoying.technology/media/previeweatingpdfs.png&quot;&gt;image&lt;/a&gt; has three components: On the left is an OCR’ed PDF from my ScanSnap iX500. I have selected most of the text, and on the right side you can see two copy&amp;amp;paste results. In the upper half is the result directly after scanning, right after the bundled ABBYY FineReader that comes with the iX500 did its magic. In the lower half is the result &lt;strong&gt;after&lt;/strong&gt; modifying (removed a blank page) and saving that same PDF in &lt;em&gt;Preview&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Hard to believe, but that’s &lt;a href=&quot;https://discourse.devontechnologies.com/t/odd-pdf-behavior/21400&quot;&gt;not&lt;/a&gt; &lt;a href=&quot;http://www.documentsnap.com/ocr-text-macos-sierra-preview/&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;https://discussions.apple.com/thread/8010687&quot;&gt;first&lt;/a&gt; time Apple &lt;a href=&quot;https://mjtsai.com/blog/2016/12/21/more-macos-preview-pdf-trouble/&quot;&gt;messed this up&lt;/a&gt;. Sure, even Apple can’t account for all use cases when changing complex stuff like internal PDF handling. But:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The iX500 is an insanely popular and common scanner&lt;/li&gt;
&lt;li&gt;I don’t know any OCR software that is more popular than ABBYY FineReader&lt;/li&gt;
&lt;li&gt;macOS used to be the absolute best in class OS for dealing with PDFs by a &lt;strong&gt;long&lt;/strong&gt; shot&lt;/li&gt;
&lt;li&gt;IT HAPPENED BEFORE&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I wish Apple was still charging for OS updates, so I could at least refund it.&lt;sup id=&quot;fnref:1&quot;/&gt; This is such a nasty bug – if you don’t already know to expect it, you will only find out months or possibly years later. I almost missed it this time, because even after modifying and saving the file it’s still not happening. You have to completely close the file and reopen it, only then will you realize that it has been destroyed.&lt;/p&gt;
</description>
<pubDate>Wed, 16 Dec 2020 20:07:44 +0000</pubDate>
<dc:creator>matrixagent</dc:creator>
<og:title>Preview in macOS Big Sur is irreversibly destroying PDFs – again – Annoying Technology</og:title>
<og:description>This image has three components: On the left is an OCR’ed PDF from my ScanSnap iX500. I have selected most of the text, and on the right side you can see two copy&amp;paste results. In the upper half is the result directly after scanning, right after the bundled ABBYY FineReader that comes with the iX500 did its magic. In the lower half is the result after modifying (removed a blank page) and saving that same PDF in Preview.</og:description>
<og:image>https://annoying.technology/media/previeweatingpdfs.png</og:image>
<og:url>https://annoying.technology/posts/86f4ea27e4cd90d0/</og:url>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://annoying.technology/posts/86f4ea27e4cd90d0/</dc:identifier>
</item>
<item>
<title>GTK 4.0 Released</title>
<link>https://blog.gtk.org/2020/12/16/gtk-4-0/</link>
<guid isPermaLink="true" >https://blog.gtk.org/2020/12/16/gtk-4-0/</guid>
<description>&lt;p&gt;2020 has been a very long year. What better way to end it than with a major release!  Today, we released GTK 4.0.&lt;/p&gt;
&lt;p&gt;GTK 4.0 is the result of a lot of hard work by a small team of dedicated developers. We will have a separate post to go over the statistics, but the short summary is that since the 3.89.1 release in November 2016, we’ve added over 18000 commits and made more than 20 development releases.&lt;/p&gt;
&lt;p&gt;Congratulations and a big thank you to everybody who has participated in this effort, and in particular to Benjamin, Emmanuele, Timm, Carlos, Jonas and Christian!&lt;/p&gt;
&lt;h3&gt;What’s new&lt;/h3&gt;
&lt;p&gt;It is impossible to summarize 4 years of development in a single post. We’ve written detailed articles about many of the new things in this release over the past year: &lt;a href=&quot;https://blog.gtk.org/2020/01/29/data-transfer-in-gtk4/&quot;&gt;Data transfers&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/04/29/custom-widgets-in-gtk-4-input/&quot;&gt;Event controllers&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/04/27/custom-widgets-in-gtk-4-layout/&quot;&gt;Layout managers&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/04/24/custom-widgets-in-gtk-4-drawing/&quot;&gt;Render nodes&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/05/20/media-in-gtk-4/&quot;&gt;Media playback&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/06/07/scalable-lists-in-gtk-4/&quot;&gt;Scalable lists&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/09/30/gtk-3-99-2/&quot;&gt;Shaders&lt;/a&gt;, &lt;a href=&quot;https://blog.gtk.org/2020/10/21/accessibility-in-gtk-4/&quot;&gt;Accessibility&lt;/a&gt;.  Here are some of the highlights, in visual form:&lt;/p&gt;
&lt;p&gt;Media playback:&lt;/p&gt;

&lt;p&gt;Drag-and-Drop:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.gtk.org/files/2020/09/peg.png&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;aligncenter size-full wp-image-8312&quot; src=&quot;https://blog.gtk.org/files/2020/09/peg.png&quot; alt=&quot;&quot; width=&quot;828&quot; height=&quot;679&quot; srcset=&quot;https://blog.gtk.org/files/2020/09/peg.png 828w, https://blog.gtk.org/files/2020/09/peg-300x246.png 300w, https://blog.gtk.org/files/2020/09/peg-768x630.png 768w&quot; sizes=&quot;(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Layout managers and transforms:&lt;/p&gt;

&lt;p&gt;Scalable lists and grids:&lt;/p&gt;

&lt;p&gt;Shaders:&lt;/p&gt;

&lt;h3&gt;What’s old&lt;/h3&gt;
&lt;p&gt;GTK 4 is now stable, and we consider it ready for consumption. That does not mean GTK 3 is dead – we will continue to support and update it for the foreseeable future (the latest release, 3.24.24, quietly went out a few days ago). It does mean, however, that GTK 2 has reached the end of its life. We will do one final 2.x release in the coming days, and we encourage everybody to port their GTK 2 applications to GTK 3 or 4.&lt;/p&gt;
&lt;h3&gt;How to get it&lt;/h3&gt;
&lt;p&gt;The source tarballs are available in the usual &lt;a href=&quot;https://download.gnome.org/sources/gtk/4.0&quot;&gt;place&lt;/a&gt;. Binary packages should appear in major distributions soon.&lt;/p&gt;
&lt;p&gt;The GNOME 40 release will have a number of applications ported to GTK 4.  If you want to try GTK 4.0 today, you can use the nightly flatpak builds of &lt;a href=&quot;https://nightly.gnome.org/repo/appstream/org.gtk.Demo4.flatpakref&quot;&gt;gtk4-demo&lt;/a&gt; and &lt;a href=&quot;https://nightly.gnome.org/repo/appstream/org.gtk.WidgetFactory4.flatpakref&quot;&gt;gtk4-widget-factory&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
$ flatpak install https://nightly.gnome.org/repo/appstream/org.gtk.Demo4.flatpakref
$ flatpak run org.gtk.Demo4
&lt;/pre&gt;
&lt;p&gt;If you are itching to port your application to GTK 4, our migration guide is &lt;a href=&quot;https://developer.gnome.org/gtk4/3.99/migrating.html&quot;&gt;available&lt;/a&gt; as part of the &lt;a href=&quot;https://developer.gnome.org/gtk4/3.99/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;How to support GTK&lt;/h3&gt;
&lt;p&gt;GTK could not be developed without the many volunteers who contribute bug reports, patches, translations or ideas. Thanks to all of you. We are also grateful to the GNOME foundation for supporting GTK with development resources, infrastructure, and travel assistance.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gnome.org/support-gnome/&quot;&gt;Donating&lt;/a&gt; to the GNOME foundation is a good way to support future GTK development.&lt;/p&gt;
&lt;h3&gt;What comes next&lt;/h3&gt;
&lt;p&gt;We are very thankful for all the early testers that have provided us with bug reports and feedback, which made this release much better. But we fully expect that there will be a quick 4.0.1 release to fix up the oversights and gotchas that only come to light after a .0 release.&lt;/p&gt;
&lt;p&gt;Now that we have a 4.0 release, we need to bring along the library ecosystem to enable applications to use it. vte, webkit and gtksourceview are some of the most notable libraries that tend to be used together with GTK. We expect GTK 4 ports of these to be available soon.&lt;/p&gt;
&lt;p&gt;If more serious issues show up, we will do a 4.2 release in time for GNOME 40, otherwise we might wait until the summer for that.&lt;/p&gt;
&lt;p&gt;What the future will bring beyond GTK 4 remains to be seen. We have some fun things in the pipeline, but we would also like to hear what features application developers would like to see in GTK. Tell us!&lt;/p&gt;
&lt;h3&gt;A celebration&lt;/h3&gt;
&lt;p&gt;We will celebrate the 4.0 release with an (online) &lt;a href=&quot;https://events.gnome.org/event/59/&quot;&gt;gathering&lt;/a&gt; this coming Friday. Feel free to drop by!&lt;/p&gt;
</description>
<pubDate>Wed, 16 Dec 2020 18:05:59 +0000</pubDate>
<dc:creator>hernantz</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.gtk.org/2020/12/16/gtk-4-0/</dc:identifier>
</item>
<item>
<title>Rocky Linux: A CentOS replacement by the CentOS founder</title>
<link>https://github.com/rocky-linux/rocky</link>
<guid isPermaLink="true" >https://github.com/rocky-linux/rocky</guid>
<description>&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://rockylinux.org/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://media.githubusercontent.com/media/rocky-linux/branding/main/logo-text-light%402x.png&quot; alt=&quot;Rocky Linux Logo&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;em&gt;&quot;Thinking back to early CentOS days... My cofounder was Rocky McGaugh. He is no longer with us, so as a H/T to him, who never got to see the success that CentOS came to be, I introduce to you...Rocky Linux&quot;&lt;/em&gt;&lt;br/&gt;— Gregory Kurtzer, Founder&lt;/p&gt;
&lt;h2&gt;About&lt;/h2&gt;
&lt;p&gt;Rocky Linux is a community enterprise Operating System designed to be 100% bug-for-bug compatible with Enterprise Linux, now that CentOS has shifted direction.&lt;/p&gt;
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; What do you mean, &quot;CentOS has shifted direction?&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The CentOS project &lt;a href=&quot;https://blog.centos.org/2020/12/future-is-centos-stream/&quot; rel=&quot;nofollow&quot;&gt;recently announced&lt;/a&gt; a shift in strategy for CentOS. Whereas previously CentOS existed as a &lt;em&gt;downstream&lt;/em&gt; build of its upstream vendor (it receives patches and updates after the upstream vendor does), it will be shifting to an &lt;em&gt;upstream&lt;/em&gt; build (testing patches and updates &lt;em&gt;before&lt;/em&gt; inclusion in the upstream vendor).&lt;/p&gt;
&lt;p&gt;Additionally, support for CentOS Linux 8 has been cut short, from May 31, 2029 to December 31, 2021.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; So where does Rocky Linux come in?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rocky Linux aims to function as a downstream build as CentOS had done previously, building releases after they have been added to the upstream vendor, not before.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; When will it be released?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is not currently an ETA for release.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; What is the vision for Rocky Linux?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A &lt;strong&gt;solid&lt;/strong&gt;, &lt;strong&gt;stable&lt;/strong&gt;, and &lt;strong&gt;transparent&lt;/strong&gt; alternative for production environments, developed &lt;em&gt;by&lt;/em&gt; the community &lt;em&gt;for&lt;/em&gt; the community.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; Who drives Rocky Linux?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We all do, Rocky Linux is a community-driven project and always will be. Rocky Linux will not be sold or driven by corporate interest.&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; How can I get involved?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please view the &lt;a href=&quot;https://github.com/rocky-linux/rocky#contributing&quot;&gt;contributing&lt;/a&gt; section below.&lt;/p&gt;
&lt;h2&gt;Contact&lt;/h2&gt;
&lt;p&gt;For all other questions: &lt;a href=&quot;mailto:hello@rockylinux.org&quot;&gt;hello@rockylinux.org&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Stay Informed&lt;/h2&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Thank you for your interest in contributing to the project.&lt;/p&gt;
&lt;p&gt;If you are a developer, architect, engineer, or otherwise looking to contribute your time and expertise, please consider joining the &lt;a href=&quot;https://join.slack.com/t/hpcng/shared_invite/zt-k29vv4ab-yj1ksbHK_ZkXYi6HGtTYfw&quot; rel=&quot;nofollow&quot;&gt;Slack&lt;/a&gt; and jumping into the most relevant channel to your interests.&lt;/p&gt;
&lt;p&gt;If you are interested in donating or sponsoring the project, please email &lt;a href=&quot;mailto:hello@rockylinux.org&quot;&gt;hello@rockylinux.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: We &lt;strong&gt;do not&lt;/strong&gt; currently have any official crowdsourcing established.&lt;/p&gt;
&lt;h2&gt;Special Thanks&lt;/h2&gt;
&lt;p&gt;We would like to thank the following groups for their support thus far on the project:&lt;/p&gt;
</description>
<pubDate>Wed, 16 Dec 2020 17:50:21 +0000</pubDate>
<dc:creator>andyjpb</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/75713131?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>rocky-linux/rocky</og:title>
<og:url>https://github.com/rocky-linux/rocky</og:url>
<og:description>Rocky Linux is a community enterprise Operating System designed to be 100% bug-for-bug compatible with Enterprise Linux created in response to the effective discontinuation of CentOS. - rocky-linux...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/rocky-linux/rocky</dc:identifier>
</item>
<item>
<title>Jet Powered Volkswagen Beetle – $550k (sunnyvale)</title>
<link>https://sfbay.craigslist.org/sby/cto/d/mountain-view-jet-powered-volkswagen/7241823593.html</link>
<guid isPermaLink="true" >https://sfbay.craigslist.org/sby/cto/d/mountain-view-jet-powered-volkswagen/7241823593.html</guid>
<description>&lt;div class=&quot;print-information print-qrcode-container&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;print-qrcode-label&quot;&gt;QR Code Link to This Post&lt;/p&gt;

&lt;/div&gt;
--Yes this is a real ad, and yes I used the photos everyone has seen from my website and shared. The last photo on this ad hasn't been posted anywhere and shows the lift I store it on. I take it down once and a while and run it. Again, this is a real ad for the world famous jet powered Beetle.&lt;p&gt;Street-Legal Jet Powered Volkswagen Beetle $550k. Why on Craiglist? Why not? Why a jet Beetle?&lt;/p&gt;&lt;p&gt;I think it may be time to let go of my flame throwing, running and driving jet car. Registration up to date. The car has two engines: the production gasoline engine in the front, driving the front wheels, and the jet engine in the back. The idea is that you drive around legally on the gasoline engine then, when you want to have some fun, spin up the jet and get on the burner (you can start the jet while driving along on the gasoline engine). I built the car because I wanted the wildest street-legal ride possible. I was able to use some stuff I learned while getting my fancy engineering degree with this project (I have a PhD in Mechanical Engineering from Stanford University). It was great to design this street-legal jet car without distractions from other people’s projects, solely because no one has done it before. I have no idea how fast the car will go, and probably never will. I built the car in order to thrill me, not kill me. That said, I do enjoy the occasional blast down the highway.&lt;/p&gt;&lt;p&gt;I chose the Beetle because it looks cool with the jet and it shows it off well. Remember the Hurst wheelstanding Barracuda &quot;Hemi Under Glass&quot;? Well, this is &quot;Jet Under Glass&quot;. Air for the jet enters the car through the two side windows and the sunroof. It can be a little windy inside with the jet engine running but not too bad. I built the car to look like VW delivered it this way. It drives like a stock Beetle and is safe. The response to driving it on the street and going to the hot rod shows (San Francisco Custom Car Show, Grand National Roadster Show in Pomona, and the Detroit Autorama) has been fantastic. This car attracts crowds better than any “show” car. The car has also been on TV nationwide.&lt;/p&gt;&lt;p&gt;The back of the gauge panel is open to add to the techie look. There are three gauges for the jet: %RPM, Oil Pressure, and Turbine Inlet Temperature. The most important is turbine inlet temperature. If you exceed about 650 degrees C for very long, you damage the engine. This is critical on start-up. You don't want a &quot;hot-start&quot;. The throttle for the jet engine is located next to the gear selector. It is a lever and has three buttons: Cool, Big-Fire, and Afterburner. &quot;Cool&quot; leans out the engine and is used to lower the turbine inlet temperature if you get a hot-start. To light big-fire or the afterburner, you hold a button down and 1/2 second later, press the hot-streak button on the floor. Then things happen! Notice the kerosene level gauge in front of the gear selector (jet fuel is mostly kerosene).&lt;/p&gt;&lt;p&gt;There is a lot going on in the back. The attention to detail in this car borders on obsessive. Note the aluminum block holding/protecting the halon gas line, pull line, harness to engine, and oil pressure line. Rectangular tank under inlet screen is for various fuel drains. Note temperature gauge and shutoff valve for dry sump tank. 3 gallons of turbine oil at $25/quart (ouch!). The production hatch release on the driver's door now activates two latches (one on each side) and the hatch pops open just like VW intended. The &quot;hatch not closed&quot; warning light is functional as well.&lt;/p&gt;&lt;p&gt;The engine is a General Electric Model T58-8F with some internal modifications and a custom tailpipe. The 300lb. engine spins up to 26,000 RPM (idle is 13,000 RPM), draws air at 11,000 CFM, and is rated at 1350 hp. The structure holding the engine was designed using finite element analysis and is redundant. Strong, damage tolerant, and light. The force from the jet is harnessed using sandwich plates bolted to contoured aluminum billets inserted into the frame rails. The engine has rigid mounts with rubber bushings in the front and the back are sliding. It grows as it warms up so the engine mounts have to account for this. The interior was finished in the original color with two-stage PPG paint. A heat blanket keeps the plastic bumper from melting when the jet is operating.&lt;/p&gt;&lt;p&gt;The Kerosene is stored in a custom 14 gallon, baffled, foam-filled Kevlar fuel cell in the spare tire well. The tank has two outlets in the back: a -12 on the left side and a -10 on the right. The -10 goes to a shutoff, then a Barry Grant pump (one of the few hot rod parts on the car), then up into the car where it sees a filter, a regulator, and an electrical shutoff valve before feeding the engine. The -12 goes into a shutoff then a custom, 1.5hp 11,000 rpm 24V electric magnesium, pump. The pump can maintain 100 psi at 550 gph. From the pump it goes into the car to a filter, then a large regulator, and then to the afterburner solenoid and the big-fire solenoid (to left of pump and feeding bottom of tailpipe through orange covered hose).&lt;/p&gt;&lt;p&gt;All circuits feeding solenoids and pumps have fuses, relays, kick-back diodes to minimize contact arcing, sealed connectors, and use automotive wires of a gauge giving a maximum of 1V drop over the circuit loop. The system uses a second battery and fuse/relay panel, halon fire system and 5 gallon dry sump tank. A 24V starter motor is in the nose of the engine. 700 A of current goes into that motor for 20 seconds during start-up. Heat limits starts to three in one hour. Lastly, the screen is to avoid FOD (foreign object damage) but the jet still keeps sucking the rose out of the bud vase!&lt;/p&gt;</description>
<pubDate>Wed, 16 Dec 2020 17:46:38 +0000</pubDate>
<dc:creator>d136o</dc:creator>
<og:title>Jet Powered Volkswagen Beetle - cars &amp; trucks - by owner - vehicle...</og:title>
<og:description>--Yes this is a real ad, and yes I used the photos everyone has seen from my website and shared. The last photo on this ad hasn't been posted anywhere and shows the lift I store it on. I take it...</og:description>
<og:image>https://images.craigslist.org/00202_kUROAT1svrC_0CI0t2_600x450.jpg</og:image>
<og:url>https://sfbay.craigslist.org/sby/cto/d/mountain-view-jet-powered-volkswagen/7241823593.html</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://sfbay.craigslist.org/sby/cto/d/mountain-view-jet-powered-volkswagen/7241823593.html</dc:identifier>
</item>
<item>
<title>A computer science study plan to become a software engineer</title>
<link>https://github.com/jwasham/coding-interview-university</link>
<guid isPermaLink="true" >https://github.com/jwasham/coding-interview-university</guid>
<description>&lt;blockquote readability=&quot;18.089644513138&quot;&gt;
&lt;p&gt;I originally created this as a short to-do list of study topics for becoming a software engineer, but it grew to the large list you see today. After going through this study plan, &lt;a href=&quot;https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu&quot; rel=&quot;nofollow&quot;&gt;I got hired as a Software Development Engineer at Amazon&lt;/a&gt;! You probably won't have to study as much as I did. Anyway, everything you need is here.&lt;/p&gt;
&lt;p&gt;I studied about 8-12 hours a day, for several months. This is my story: &lt;a href=&quot;https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13&quot; rel=&quot;nofollow&quot;&gt;Why I studied full-time for 8 months for a Google interview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The items listed here will prepare you well for a technical interview at just about any software company, including the giants: Amazon, Facebook, Google, and Microsoft.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Best of luck to you!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;details&gt;Translations:
&lt;/details&gt;&lt;details&gt;Translations in progress:
&lt;/details&gt;&lt;h2&gt;What is it?&lt;/h2&gt;
&lt;p&gt;This is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/223e9758b09eb2908cb04c01c05f6e8550596dfd1526db5a2895c471b378a538/68747470733a2f2f64336a32706b6d6a74696e366f752e636c6f756466726f6e742e6e65742f636f64696e672d61742d7468652d7768697465626f6172642d73696c69636f6e2d76616c6c65792e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/223e9758b09eb2908cb04c01c05f6e8550596dfd1526db5a2895c471b378a538/68747470733a2f2f64336a32706b6d6a74696e366f752e636c6f756466726f6e742e6e65742f636f64696e672d61742d7468652d7768697465626f6172642d73696c69636f6e2d76616c6c65792e706e67&quot; alt=&quot;Coding at the whiteboard - from HBO's Silicon Valley&quot; data-canonical-src=&quot;https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is meant for &lt;strong&gt;new software engineers&lt;/strong&gt; or those switching from software/web development to software engineering (where computer science knowledge is required). If you have many years of experience and are claiming many years of software engineering experience, expect a harder interview.&lt;/p&gt;
&lt;p&gt;If you have many years of software/web development experience, note that large software companies like Google, Amazon, Facebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.&lt;/p&gt;
&lt;p&gt;If you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;p&gt;---------------- Everything below this point is optional ----------------&lt;/p&gt;
&lt;h2&gt;Additional Resources&lt;/h2&gt;
&lt;hr/&gt;&lt;h2&gt;Why use it?&lt;/h2&gt;
&lt;p&gt;When I started this project, I didn't know a stack from a heap, didn't know Big-O anything, anything about trees, or how to traverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn't have been very good. Every data structure I've ever used was built into the language, and I didn't know how they worked under the hood at all. I've never had to manage memory unless a process I was running would give an &quot;out of memory&quot; error, and then I'd have to find a workaround. I've used a few multidimensional arrays in my life and thousands of associative arrays, but I've never created data structures from scratch.&lt;/p&gt;
&lt;p&gt;It's a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.&lt;/p&gt;
&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;p&gt;Everything below is an outline, and you should tackle the items in order from top to bottom.&lt;/p&gt;
&lt;p&gt;I'm using Github's special markdown flavor, including tasks lists to check progress.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create a new branch so you can check items like this, just put an x in the brackets: [x]&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Fork a branch and follow the commands below
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Fork the GitHub repo &lt;a href=&quot;https://github.com/jwasham/coding-interview-university&quot;&gt;https://github.com/jwasham/coding-interview-university&lt;/a&gt; by clicking on the Fork button&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Clone to your local repo
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git clone git@github.com:&amp;lt;your_github_username&amp;gt;/coding-interview-university.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git checkout -b progress&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote add jwasham https://github.com/jwasham/coding-interview-university&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git fetch --all&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Mark all boxes with X after you completed your changes
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -m &quot;Marked x&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rebase jwasham/master&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push --set-upstream origin progress&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push --force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown&quot;&gt;More about Github-flavored markdown&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Don't feel you aren't smart enough&lt;/h2&gt;
&lt;h2&gt;About Video Resources&lt;/h2&gt;
&lt;p&gt;Some videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs. Sometimes the classes are not in session so you have to wait a couple of months, so you have no access.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;I'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos.
I like using university lectures.
&lt;/code&gt;
&lt;/pre&gt;
&lt;h2&gt;Interview Process &amp;amp; General Interview Prep&lt;/h2&gt;
&lt;h2&gt;Pick One Language for the Interview&lt;/h2&gt;
&lt;p&gt;You can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You could also use these, but read around first. There may be caveats:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here is an article I wrote about choosing a language for the interview: &lt;a href=&quot;https://startupnextdoor.com/important-pick-one-language-for-the-coding-interview/&quot; rel=&quot;nofollow&quot;&gt;Pick One Language for the Coding Interview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You need to be very comfortable in the language and be knowledgeable.&lt;/p&gt;
&lt;p&gt;Read more about choices:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jwasham/coding-interview-university/blob/master/programming-language-resources.md&quot;&gt;See language resources here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You'll see some C, C++, and Python learning included below, because I'm learning. There are a few books involved, see the bottom.&lt;/p&gt;
&lt;h2&gt;Book List&lt;/h2&gt;
&lt;p&gt;This is a shorter list than what I used. This is abbreviated to save you time.&lt;/p&gt;
&lt;h3&gt;Interview Prep&lt;/h3&gt;
&lt;h3&gt;If you have tons of extra time:&lt;/h3&gt;
&lt;p&gt;Choose one:&lt;/p&gt;
&lt;h3&gt;Language Specific&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You need to choose a language for the interview (see above).&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are my recommendations by language. I don't have resources for all languages. I welcome additions.&lt;/p&gt;
&lt;p&gt;If you read through one of these, you should have all the data structures and algorithms knowledge you'll need to start doing coding problems. &lt;strong&gt;You can skip all the video lectures in this project&lt;/strong&gt;, unless you'd like a review.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jwasham/coding-interview-university/blob/master/programming-language-resources.md&quot;&gt;Additional language-specific resources here.&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;C++&lt;/h3&gt;
&lt;p&gt;I haven't read these two, but they are highly rated and written by Sedgewick. He's awesome.&lt;/p&gt;
&lt;p&gt;If you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.&lt;/p&gt;
&lt;h3&gt;Java&lt;/h3&gt;
&lt;p&gt;OR:&lt;/p&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;h2&gt;Before you Get Started&lt;/h2&gt;
&lt;p&gt;This list grew over many months, and yes, it kind of got out of hand.&lt;/p&gt;
&lt;p&gt;Here are some mistakes I made so you'll have a better experience.&lt;/p&gt;
&lt;h3&gt;1. You Won't Remember it All&lt;/h3&gt;
&lt;p&gt;I watched hours of videos and took copious notes, and months later there was much I didn't remember. I spent 3 days going through my notes and making flashcards, so I could review.&lt;/p&gt;
&lt;p&gt;Please, read so you won't make my mistakes:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://startupnextdoor.com/retaining-computer-science-knowledge/&quot; rel=&quot;nofollow&quot;&gt;Retaining Computer Science Knowledge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A course recommended to me (haven't taken it): &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn&quot; rel=&quot;nofollow&quot;&gt;Learning how to Learn&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;2. Use Flashcards&lt;/h3&gt;
&lt;p&gt;To solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code. Each card has different formatting.&lt;/p&gt;
&lt;p&gt;I made a mobile-first website, so I could review on my phone and tablet, wherever I am.&lt;/p&gt;
&lt;p&gt;Make your own for free:&lt;/p&gt;
&lt;p&gt;Keep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It's way too much for what's required.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note on flashcards:&lt;/strong&gt; The first time you recognize you know the answer, don't mark it as known. You have to see the same card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in your brain.&lt;/p&gt;
&lt;p&gt;An alternative to using my flashcard site is &lt;a href=&quot;http://ankisrs.net/&quot; rel=&quot;nofollow&quot;&gt;Anki&lt;/a&gt;, which has been recommended to me numerous times. It uses a repetition system to help you remember. It's user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.&lt;/p&gt;
&lt;p&gt;My flashcard database in Anki format: &lt;a href=&quot;https://ankiweb.net/shared/info/25173560&quot; rel=&quot;nofollow&quot;&gt;https://ankiweb.net/shared/info/25173560&lt;/a&gt; (thanks &lt;a href=&quot;https://github.com/xiewenya&quot;&gt;@xiewenya&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;3. Start doing coding interview questions while you're learning data structures and algorithms&lt;/h3&gt;
&lt;p&gt;You need to apply what you're learning to solving problems, or you'll forget. I made this mistake. Once you've learned a topic, and feel comfortable with it, like linked lists, open one of the coding interview books and do a couple of questions regarding linked lists. Then move on to the next learning topic. Then later, go back and do another linked list problem, or recursion problem, or whatever. But keep doing problems while you're learning. You're not being hired for knowledge, but how you apply the knowledge. There are several books and sites I recommend. See here for more: &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#coding-question-practice&quot;&gt;Coding Question Practice&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;4. Review, review, review&lt;/h3&gt;
&lt;p&gt;I keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.&lt;/p&gt;
&lt;p&gt;Take a break from programming problems for a half hour and go through your flashcards.&lt;/p&gt;
&lt;h3&gt;5. Focus&lt;/h3&gt;
&lt;p&gt;There are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music without lyrics and you'll be able to focus pretty well.&lt;/p&gt;
&lt;h2&gt;What you won't see covered&lt;/h2&gt;
&lt;p&gt;These are prevalent technologies but not part of this study plan:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;HTML, CSS, and other front-end technologies&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;The Daily Plan&lt;/h2&gt;
&lt;p&gt;Some subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.&lt;/p&gt;
&lt;p&gt;Each day I take one subject from the list below, watch videos about that subject, and write an implementation in:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;C - using structs and functions that take a struct * and something else as args&lt;/li&gt;
&lt;li&gt;C++ - without using built-in types&lt;/li&gt;
&lt;li&gt;C++ - using built-in types, like STL's std::list for a linked list&lt;/li&gt;
&lt;li&gt;Python - using built-in types (to keep practicing Python)&lt;/li&gt;
&lt;li&gt;and write tests to ensure I'm doing it right, sometimes just using simple assert() statements&lt;/li&gt;
&lt;li&gt;You may do Java or something else, this is just my thing&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You don't need all these. You need only &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#pick-one-language-for-the-interview&quot;&gt;one language for the interview&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Why code in all of these?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Practice, practice, practice, until I'm sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember)&lt;/li&gt;
&lt;li&gt;Work within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java))&lt;/li&gt;
&lt;li&gt;Make use of built-in types, so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I may not have time to do all of these for every subject, but I'll try.&lt;/p&gt;
&lt;p&gt;You can see my code here:&lt;/p&gt;
&lt;p&gt;You don't need to memorize the guts of every algorithm.&lt;/p&gt;
&lt;p&gt;Write code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.&lt;/p&gt;
&lt;h2&gt;Prerequisite Knowledge&lt;/h2&gt;
&lt;h2&gt;Algorithmic complexity / Big-O / Asymptotic analysis&lt;/h2&gt;
&lt;h2&gt;Data Structures&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;Arrays&lt;/h3&gt;
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li&gt;Implement an automatically resizing vector.&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Description:
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Implement a vector (mutable array with automatic resizing):
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; New raw data array with allocated memory
&lt;ul&gt;&lt;li&gt;can allocate int array under the hood, just not use its features&lt;/li&gt;
&lt;li&gt;start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; size() - number of items&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; capacity() - number of items it can hold&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; is_empty()&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; at(index) - returns item at given index, blows up if index out of bounds&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; push(item)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; insert(index, item) - inserts item at index, shifts that index's value and trailing elements to the right&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; prepend(item) - can use insert above at index 0&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; pop() - remove from end, return value&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; delete(index) - delete item at index, shifting all trailing elements left&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; remove(item) - looks for value and removes index holding it (even if in multiple places)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; find(item) - looks for value and returns first index with that value, -1 if not found&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; resize(new_capacity) // private function
&lt;ul&gt;&lt;li&gt;when you reach capacity, resize to double the size&lt;/li&gt;
&lt;li&gt;when popping an item, if size is 1/4 of capacity, resize to half&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Time
&lt;ul&gt;&lt;li&gt;O(1) to add/remove at end (amortized for allocations for more space), index, or update&lt;/li&gt;
&lt;li&gt;O(n) to insert/remove elsewhere&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Space
&lt;ul&gt;&lt;li&gt;contiguous in memory, so proximity helps performance&lt;/li&gt;
&lt;li&gt;space needed = (array capacity, which is &amp;gt;= n) * size of item, but even if 2n, still O(n)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Linked Lists&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Stack&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Queue&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Hash table&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;More Knowledge&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;Binary search&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Bitwise operations&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Trees&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;Trees - Notes &amp;amp; Background&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Binary search trees: BSTs&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Heap / Priority Queue / Binary Heap&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Sorting&lt;/h2&gt;
&lt;p&gt;As a summary, here is a visual representation of &lt;a href=&quot;https://www.youtube.com/watch?v=kPRA0W1kECg&quot; rel=&quot;nofollow&quot;&gt;15 sorting algorithms&lt;/a&gt;. If you need more detail on this subject, see &quot;Sorting&quot; section in &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#additional-detail-on-some-subjects&quot;&gt;Additional Detail on Some Subjects&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Graphs&lt;/h2&gt;
&lt;p&gt;Graphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.&lt;/p&gt;
&lt;h2&gt;Even More Knowledge&lt;/h2&gt;
&lt;ul readability=&quot;-0.43743119266055&quot;&gt;&lt;li&gt;
&lt;h3&gt;Recursion&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Dynamic Programming&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Object-Oriented Programming&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Design patterns&lt;/h3&gt;
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3cmzqZzwNDM&amp;amp;list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&amp;amp;index=3&quot; rel=&quot;nofollow&quot;&gt;Quick UML review (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Learn these patterns:
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&amp;amp;t=3344&quot; rel=&quot;nofollow&quot;&gt;Chapter 6 (Part 1) - Patterns (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U8-PGsjvZc4&amp;amp;index=12&amp;amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&quot; rel=&quot;nofollow&quot;&gt;Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7sduBHuex4c&amp;amp;index=13&amp;amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&quot; rel=&quot;nofollow&quot;&gt;Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLF206E906175C7E07&quot; rel=&quot;nofollow&quot;&gt;Series of videos (27 videos)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124&quot; rel=&quot;nofollow&quot;&gt;Head First Design Patterns&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;I know the canonical book is &quot;Design Patterns: Elements of Reusable Object-Oriented Software&quot;, but Head First is great for beginners to OO.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://sourcemaking.com/design-patterns-and-tips&quot; rel=&quot;nofollow&quot;&gt;Handy reference: 101 Design Patterns &amp;amp; Tips for Developers&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://github.com/kamranahmedse/design-patterns-for-humans#structural-design-patterns&quot;&gt;Design patterns for humans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Combinatorics (n choose k) &amp;amp; Probability&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;NP, NP-Complete and Approximation Algorithms&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Caches&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Processes and Threads&lt;/h3&gt;
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Computer Science 162 - Operating Systems (25 videos):
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread&quot; rel=&quot;nofollow&quot;&gt;What Is The Difference Between A Process And A Thread?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Covers:
&lt;ul&gt;&lt;li&gt;Processes, Threads, Concurrency issues
&lt;ul&gt;&lt;li&gt;Difference between processes and threads&lt;/li&gt;
&lt;li&gt;Processes&lt;/li&gt;
&lt;li&gt;Threads&lt;/li&gt;
&lt;li&gt;Locks&lt;/li&gt;
&lt;li&gt;Mutexes&lt;/li&gt;
&lt;li&gt;Semaphores&lt;/li&gt;
&lt;li&gt;Monitors&lt;/li&gt;
&lt;li&gt;How they work?&lt;/li&gt;
&lt;li&gt;Deadlock&lt;/li&gt;
&lt;li&gt;Livelock&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CPU activity, interrupts, context switching&lt;/li&gt;
&lt;li&gt;Modern concurrency constructs with multicore processors&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LKe7xK0bF7o&amp;amp;list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&amp;amp;index=2&quot; rel=&quot;nofollow&quot;&gt;Paging, segmentation and virtual memory (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=uFKi2-J-6II&amp;amp;list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&amp;amp;index=3&quot; rel=&quot;nofollow&quot;&gt;Interrupts (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)&lt;/li&gt;
&lt;li&gt;Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)&lt;/li&gt;
&lt;li&gt;Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.&lt;/li&gt;
&lt;li&gt;Context switching
&lt;ul&gt;&lt;li&gt;How context switching is initiated by the operating system and underlying hardware?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M&quot; rel=&quot;nofollow&quot;&gt;threads in C++ (series - 10 videos)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; concurrency in Python (videos):
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Testing&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Scheduling&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;In an OS, how it works?&lt;/li&gt;
&lt;li&gt;Can be gleaned from Operating System videos&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0.31868131868132&quot;&gt;
&lt;h3&gt;String searching &amp;amp; manipulations&lt;/h3&gt;
&lt;p&gt;If you need more detail on this subject, see &quot;String Matching&quot; section in &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#additional-detail-on-some-subjects&quot;&gt;Additional Detail on Some Subjects&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Tries&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Floating Point Numbers&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Unicode&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Endianness&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Networking&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;System Design, Scalability, Data Handling&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can expect system design questions if you have 4+ years of experience.&lt;/strong&gt;&lt;/p&gt;
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li&gt;Scalability and System Design are very large topics with many topics and resources, since there is a lot to consider when designing a software/hardware system that can scale. Expect to spend quite a bit of time on this&lt;/li&gt;
&lt;li&gt;Considerations:
&lt;ul&gt;&lt;li&gt;Scalability
&lt;ul&gt;&lt;li&gt;Distill large data sets to single values&lt;/li&gt;
&lt;li&gt;Transform one data set to another&lt;/li&gt;
&lt;li&gt;Handling obscenely large amounts of data&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;System design
&lt;ul&gt;&lt;li&gt;features sets&lt;/li&gt;
&lt;li&gt;interfaces&lt;/li&gt;
&lt;li&gt;class hierarchies&lt;/li&gt;
&lt;li&gt;designing a system under certain constraints&lt;/li&gt;
&lt;li&gt;simplicity and robustness&lt;/li&gt;
&lt;li&gt;tradeoffs&lt;/li&gt;
&lt;li&gt;performance analysis and optimization&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;strong&gt;START HERE&lt;/strong&gt;: &lt;a href=&quot;https://github.com/donnemartin/system-design-primer&quot;&gt;The System Design Primer&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://www.hiredintech.com/system-design/&quot; rel=&quot;nofollow&quot;&gt;System Design from HiredInTech&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023&quot; rel=&quot;nofollow&quot;&gt;How Do I Prepare To Answer Design Questions In A Technical Inverview?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/&quot; rel=&quot;nofollow&quot;&gt;8 Things You Need to Know Before a System Design Interview&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://www.hiredintech.com/algorithm-design/&quot; rel=&quot;nofollow&quot;&gt;Algorithm design&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UrYLYV7WSHM&quot; rel=&quot;nofollow&quot;&gt;Database Normalization - 1NF, 2NF, 3NF and 4NF (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://github.com/checkcheckzz/system-design-interview&quot;&gt;System Design Interview&lt;/a&gt; - There are a lot of resources in this one. Look through the articles and examples. I put some of them below&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/&quot; rel=&quot;nofollow&quot;&gt;How to ace a systems design interview&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/&quot; rel=&quot;nofollow&quot;&gt;Numbers Everyone Should Know&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html&quot; rel=&quot;nofollow&quot;&gt;How long does it take to make a context switch?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=srOgpXECblk&quot; rel=&quot;nofollow&quot;&gt;Transactions Across Datacenters (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://ksat.me/a-plain-english-introduction-to-cap-theorem/&quot; rel=&quot;nofollow&quot;&gt;A plain English introduction to CAP Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Consensus Algorithms:
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://www.tom-e-white.com/2007/11/consistent-hashing.html&quot; rel=&quot;nofollow&quot;&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://horicky.blogspot.com/2009/11/nosql-patterns.html&quot; rel=&quot;nofollow&quot;&gt;NoSQL Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Scalability:
&lt;ul class=&quot;contains-task-list&quot;&gt;&lt;li&gt;You don't need all of these. Just pick a few that interest you.&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-W9F__D3oY4&quot; rel=&quot;nofollow&quot;&gt;Great overview (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Short series:
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://www.aosabook.org/en/distsys.html&quot; rel=&quot;nofollow&quot;&gt;Scalable Web Architecture and Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf&quot; rel=&quot;nofollow&quot;&gt;Fallacies of Distributed Computing Explained&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html&quot; rel=&quot;nofollow&quot;&gt;Pragmatic Programming Techniques&lt;/a&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=modXC5IWTJI&quot; rel=&quot;nofollow&quot;&gt;Jeff Dean - Building Software Systems At Google and Lessons Learned (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://lethain.com/introduction-to-architecting-systems-for-scale/&quot; rel=&quot;nofollow&quot;&gt;Introduction to Architecting Systems for Scale&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9nWyWwY2Onc&quot; rel=&quot;nofollow&quot;&gt;Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=H4vMcD7zKM0&quot; rel=&quot;nofollow&quot;&gt;How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.topcoder.com/community/competitive-programming/tutorials/the-importance-of-algorithms/&quot; rel=&quot;nofollow&quot;&gt;The Importance of Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html&quot; rel=&quot;nofollow&quot;&gt;Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oodS71YtkGU&quot; rel=&quot;nofollow&quot;&gt;Scale at Facebook (2012), &quot;Building for a Billion Users&quot; (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p0jGmgIrf_M&amp;amp;list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&amp;amp;index=4&quot; rel=&quot;nofollow&quot;&gt;Engineering for the Long Game - Astrid Atkinson Keynote(video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html&quot; rel=&quot;nofollow&quot;&gt;7 Years Of YouTube Scalability Lessons In 30 Minutes&lt;/a&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html&quot; rel=&quot;nofollow&quot;&gt;How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/&quot; rel=&quot;nofollow&quot;&gt;How to Remove Duplicates in Large Datasets&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3vV4YiqKm1o&quot; rel=&quot;nofollow&quot;&gt;A look inside Etsy's scale and engineering culture with Jon Cowie (video)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://thenewstack.io/led-amazon-microservices-architecture/&quot; rel=&quot;nofollow&quot;&gt;What Led Amazon to its Own Microservices Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;https://eng.uber.com/trip-data-squeeze/&quot; rel=&quot;nofollow&quot;&gt;To Compress Or Not To Compress, That Was Uber's Question&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/3/3/asyncio-tarantool-queue-get-in-the-queue.html&quot; rel=&quot;nofollow&quot;&gt;Asyncio Tarantool Queue, Get In The Queue&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html&quot; rel=&quot;nofollow&quot;&gt;When Should Approximate Query Processing Be Used?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html&quot; rel=&quot;nofollow&quot;&gt;Google's Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2012/9/24/google-spanners-most-surprising-revelation-nosql-is-out-and.html&quot; rel=&quot;nofollow&quot;&gt;Spanner&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/7/6/machine-learning-driven-programming-a-new-programming-for-a.html&quot; rel=&quot;nofollow&quot;&gt;Machine Learning Driven Programming: A New Programming For A New World&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html&quot; rel=&quot;nofollow&quot;&gt;The Image Optimization Technology That Serves Millions Of Requests Per Day&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html&quot; rel=&quot;nofollow&quot;&gt;A Patreon Architecture Short&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html&quot; rel=&quot;nofollow&quot;&gt;Tinder: How Does One Of The Largest Recommendation Engines Decide Who You'll See Next?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html&quot; rel=&quot;nofollow&quot;&gt;Design Of A Modern Cache&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html&quot; rel=&quot;nofollow&quot;&gt;Live Video Streaming At Facebook Scale&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html&quot; rel=&quot;nofollow&quot;&gt;A Beginner's Guide To Scaling To 11 Million+ Users On Amazon's AWS&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2015/12/16/how-does-the-use-of-docker-effect-latency.html&quot; rel=&quot;nofollow&quot;&gt;How Does The Use Of Docker Effect Latency?&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html&quot; rel=&quot;nofollow&quot;&gt;A 360 Degree View Of The Entire Netflix Stack&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it&quot; rel=&quot;nofollow&quot;&gt;Latency Is Everywhere And It Costs You Sales - How To Crush It&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://martinfowler.com/articles/serverless.html&quot; rel=&quot;nofollow&quot;&gt;Serverless (very long, just need the gist)&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances&quot; rel=&quot;nofollow&quot;&gt;What Powers Instagram: Hundreds of Instances, Dozens of Technologies&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html&quot; rel=&quot;nofollow&quot;&gt;Cinchcast Architecture - Producing 1,500 Hours Of Audio Every Day&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html&quot; rel=&quot;nofollow&quot;&gt;Justin.Tv's Live Video Broadcasting Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html&quot; rel=&quot;nofollow&quot;&gt;Playfish's Social Gaming Architecture - 50 Million Monthly Users And Growing&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html&quot; rel=&quot;nofollow&quot;&gt;TripAdvisor Architecture - 40M Visitors, 200M Dynamic Page Views, 30TB Data&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/plentyoffish-architecture&quot; rel=&quot;nofollow&quot;&gt;PlentyOfFish Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html&quot; rel=&quot;nofollow&quot;&gt;Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt;&lt;a href=&quot;http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html&quot; rel=&quot;nofollow&quot;&gt;ESPN's Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; See &quot;Messaging, Serialization, and Queueing Systems&quot; way below for info on some of the technologies that can glue services together&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Twitter:
&lt;/li&gt;
&lt;li&gt;For even more, see &quot;Mining Massive Datasets&quot; video series in the &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#video-series&quot;&gt;Video Series&lt;/a&gt; section&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;&quot; disabled=&quot;disabled&quot; class=&quot;task-list-item-checkbox&quot;/&gt; Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:
&lt;ul&gt;&lt;li&gt;review: &lt;a href=&quot;https://github.com/donnemartin/system-design-primer&quot;&gt;The System Design Primer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.hiredintech.com/system-design/&quot; rel=&quot;nofollow&quot;&gt;System Design from HiredInTech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf&quot;&gt;cheat sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;flow:
&lt;ol&gt;&lt;li&gt;Understand the problem and scope:
&lt;ul&gt;&lt;li&gt;Define the use cases, with interviewer's help&lt;/li&gt;
&lt;li&gt;Suggest additional features&lt;/li&gt;
&lt;li&gt;Remove items that interviewer deems out of scope&lt;/li&gt;
&lt;li&gt;Assume high availability is required, add as a use case&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Think about constraints:
&lt;ul&gt;&lt;li&gt;Ask how many requests per month&lt;/li&gt;
&lt;li&gt;Ask how many requests per second (they may volunteer it or make you do the math)&lt;/li&gt;
&lt;li&gt;Estimate reads vs. writes percentage&lt;/li&gt;
&lt;li&gt;Keep 80/20 rule in mind when estimating&lt;/li&gt;
&lt;li&gt;How much data written per second&lt;/li&gt;
&lt;li&gt;Total storage required over 5 years&lt;/li&gt;
&lt;li&gt;How much data read per second&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Abstract design:
&lt;ul&gt;&lt;li&gt;Layers (service, data, caching)&lt;/li&gt;
&lt;li&gt;Infrastructure: load balancing, messaging&lt;/li&gt;
&lt;li&gt;Rough overview of any key algorithm that drives the service&lt;/li&gt;
&lt;li&gt;Consider bottlenecks and determine solutions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Exercises:
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Final Review&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.
It's nice if you want a refresher often.
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;h2&gt;Coding Question Practice&lt;/h2&gt;
&lt;p&gt;Now that you know all the computer science topics above, it's time to practice answering coding problems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coding question practice is not about memorizing answers to programming problems.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Why you need to practice doing programming problems:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Problem recognition, and where the right data structures and algorithms fit in&lt;/li&gt;
&lt;li&gt;Gathering requirements for the problem&lt;/li&gt;
&lt;li&gt;Talking your way through the problem like you will in the interview&lt;/li&gt;
&lt;li&gt;Coding on a whiteboard or paper, not a computer&lt;/li&gt;
&lt;li&gt;Coming up with time and space complexity for your solutions&lt;/li&gt;
&lt;li&gt;Testing your solutions&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There is a great intro for methodical, communicative problem solving in an interview. You'll get this from the programming interview books, too, but I found this outstanding: &lt;a href=&quot;http://www.hiredintech.com/algorithm-design/&quot; rel=&quot;nofollow&quot;&gt;Algorithm design canvas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No whiteboard at home? That makes sense. I'm a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a large drawing pad from an art store. You can sit on the couch and practice. This is my &quot;sofa whiteboard&quot;. I added the pen in the photo for scale. If you use a pen, you'll wish you could erase. Gets messy quick. I use a pencil and eraser.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/4b2dfa34fd739404edcc014f89b5432ab1ec9cfebecce1d59b9f7986826d03cf/68747470733a2f2f64336a32706b6d6a74696e366f752e636c6f756466726f6e742e6e65742f6172745f626f6172645f736d5f322e6a7067&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4b2dfa34fd739404edcc014f89b5432ab1ec9cfebecce1d59b9f7986826d03cf/68747470733a2f2f64336a32706b6d6a74696e366f752e636c6f756466726f6e742e6e65742f6172745f626f6172645f736d5f322e6a7067&quot; alt=&quot;my sofa whiteboard&quot; data-canonical-src=&quot;https://d3j2pkmjtin6ou.cloudfront.net/art_board_sm_2.jpg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Supplemental:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Read and Do Programming Problems (in this order):&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/jwasham/coding-interview-university#book-list&quot;&gt;Book List above&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Coding exercises/challenges&lt;/h2&gt;
&lt;p&gt;Once you've learned your brains out, put those brains to work. Take coding challenges every day, as many as you can.&lt;/p&gt;
&lt;p&gt;Coding Interview Question Videos:&lt;/p&gt;
&lt;p&gt;Challenge sites:&lt;/p&gt;
&lt;p&gt;Language-learning sites, with challenges:&lt;/p&gt;
&lt;p&gt;Challenge repos:&lt;/p&gt;
&lt;p&gt;Mock Interviews:&lt;/p&gt;
&lt;h2&gt;Once you're closer to the interview&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Cracking The Coding Interview Set 2 (videos):
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Your Resume&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;See Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Be thinking of for when the interview comes&lt;/h2&gt;
&lt;p&gt;Think of about 20 interview questions you'll get, along with the lines of the items below. Have 2-3 answers for each. Have a story, not just data, about something you accomplished.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why do you want this job?&lt;/li&gt;
&lt;li&gt;What's a tough problem you've solved?&lt;/li&gt;
&lt;li&gt;Biggest challenges faced?&lt;/li&gt;
&lt;li&gt;Best/worst designs seen?&lt;/li&gt;
&lt;li&gt;Ideas for improving an existing product&lt;/li&gt;
&lt;li&gt;How do you work best, as an individual and as part of a team?&lt;/li&gt;
&lt;li&gt;Which of your skills or experiences would be assets in the role and why?&lt;/li&gt;
&lt;li&gt;What did you most enjoy at [job x / project y]?&lt;/li&gt;
&lt;li&gt;What was the biggest challenge you faced at [job x / project y]?&lt;/li&gt;
&lt;li&gt;What was the hardest bug you faced at [job x / project y]?&lt;/li&gt;
&lt;li&gt;What did you learn at [job x / project y]?&lt;/li&gt;
&lt;li&gt;What would you have done better at [job x / project y]?&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Have questions for the interviewer&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;Some of mine (I already may know answer to but want their opinion or team perspective):
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;How large is your team?&lt;/li&gt;
&lt;li&gt;What does your dev cycle look like? Do you do waterfall/sprints/agile?&lt;/li&gt;
&lt;li&gt;Are rushes to deadlines common? Or is there flexibility?&lt;/li&gt;
&lt;li&gt;How are decisions made in your team?&lt;/li&gt;
&lt;li&gt;How many meetings do you have per week?&lt;/li&gt;
&lt;li&gt;Do you feel your work environment helps you concentrate?&lt;/li&gt;
&lt;li&gt;What are you working on?&lt;/li&gt;
&lt;li&gt;What do you like about it?&lt;/li&gt;
&lt;li&gt;What is the work life like?&lt;/li&gt;
&lt;li&gt;How is work/life balance?&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Once You've Got The Job&lt;/h2&gt;
&lt;p&gt;Congratulations!&lt;/p&gt;
&lt;p&gt;Keep learning.&lt;/p&gt;
&lt;p&gt;You're never really done.&lt;/p&gt;
&lt;hr/&gt;&lt;pre&gt;
&lt;code&gt;*****************************************************************************************************
*****************************************************************************************************

Everything below this point is optional.
By studying these, you'll get greater exposure to more CS concepts, and will be better prepared for
any software engineering job. You'll be a much more well-rounded software engineer.

*****************************************************************************************************
*****************************************************************************************************
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr/&gt;&lt;h2&gt;Additional Books&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;These are here so you can dive into a topic you find interesting.
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul readability=&quot;6.6608569353667&quot;&gt;&lt;li readability=&quot;-0.40740740740741&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/013937681X&quot; rel=&quot;nofollow&quot;&gt;The Unix Programming Environment&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An oldie but a goodie&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.25396825396825&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/1593273894/&quot; rel=&quot;nofollow&quot;&gt;The Linux Command Line: A Complete Introduction&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A modern option&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/TCP/IP_Illustrated&quot; rel=&quot;nofollow&quot;&gt;TCP/IP Illustrated Series&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.61194029850746&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/0596007124/&quot; rel=&quot;nofollow&quot;&gt;Head First Design Patterns&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A gentle introduction to design patterns&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.52205882352941&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot; rel=&quot;nofollow&quot;&gt;Design Patterns: Elements of Reusable Object-Oriente​d Software&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AKA the &quot;Gang Of Four&quot; book, or GOF&lt;/li&gt;
&lt;li&gt;The canonical design patterns book&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554/&quot; rel=&quot;nofollow&quot;&gt;UNIX and Linux System Administration Handbook, 5th Edition&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.94962486602358&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202&quot; rel=&quot;nofollow&quot;&gt;Algorithm Design Manual&lt;/a&gt; (Skiena)&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As a review and problem recognition&lt;/li&gt;
&lt;li&gt;The algorithm catalog portion is well beyond the scope of difficulty you'll get in an interview&lt;/li&gt;
&lt;li&gt;This book has 2 parts:
&lt;ul&gt;&lt;li&gt;Class textbook on data structures and algorithms
&lt;ul&gt;&lt;li&gt;Pros:
&lt;ul&gt;&lt;li&gt;Is a good review as any algorithms textbook would be&lt;/li&gt;
&lt;li&gt;Nice stories from his experiences solving problems in industry and academia&lt;/li&gt;
&lt;li&gt;Code examples in C&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cons:
&lt;ul&gt;&lt;li&gt;Can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects&lt;/li&gt;
&lt;li&gt;Chapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have&lt;/li&gt;
&lt;li&gt;Don't get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Algorithm catalog:
&lt;ul&gt;&lt;li&gt;This is the real reason you buy this book&lt;/li&gt;
&lt;li&gt;About to get to this part. Will update here once I've made my way through it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Can rent it on kindle&lt;/li&gt;
&lt;li&gt;Answers:
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata&quot; rel=&quot;nofollow&quot;&gt;Errata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.92736705577173&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Write-Great-Code-Understanding-Machine/dp/1593270038&quot; rel=&quot;nofollow&quot;&gt;Write Great Code: Volume 1: Understanding the Machine&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The book was published in 2004, and is somewhat outdated, but it's a terrific resource for understanding a computer in brief&lt;/li&gt;
&lt;li&gt;The author invented &lt;a href=&quot;https://en.wikipedia.org/wiki/High_Level_Assembly&quot; rel=&quot;nofollow&quot;&gt;HLA&lt;/a&gt;, so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like&lt;/li&gt;
&lt;li&gt;These chapters are worth the read to give you a nice foundation:
&lt;ul&gt;&lt;li&gt;Chapter 2 - Numeric Representation&lt;/li&gt;
&lt;li&gt;Chapter 3 - Binary Arithmetic and Bit Operations&lt;/li&gt;
&lt;li&gt;Chapter 4 - Floating-Point Representation&lt;/li&gt;
&lt;li&gt;Chapter 5 - Character Representation&lt;/li&gt;
&lt;li&gt;Chapter 6 - Memory Organization and Access&lt;/li&gt;
&lt;li&gt;Chapter 7 - Composite Data Types and Memory Objects&lt;/li&gt;
&lt;li&gt;Chapter 9 - CPU Architecture&lt;/li&gt;
&lt;li&gt;Chapter 10 - Instruction Set Architecture&lt;/li&gt;
&lt;li&gt;Chapter 11 - Memory Architecture and Organization&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;-0.91612903225806&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844&quot; rel=&quot;nofollow&quot;&gt;Introduction to Algorithms&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Important:&lt;/strong&gt; Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won't teach you how to write good code. You have to be able to code a decent solution efficiently&lt;/li&gt;
&lt;li&gt;AKA CLR, sometimes CLRS, because Stein was late to the game&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/0128119055&quot; rel=&quot;nofollow&quot;&gt;Computer Architecture, Sixth Edition: A Quantitative Approach&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For a richer, more up-to-date (2017), but longer treatment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Programming-Pearls-2nd-Jon-Bentley/dp/0201657880&quot; rel=&quot;nofollow&quot;&gt;Programming Pearls&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first couple of chapters present clever solutions to programming problems (some very old using data tape) but that is just an intro. This a guidebook on program design and architecture&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Additional Learning&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;I added them to help you become a well-rounded software engineer, and to be aware of certain 
technologies and algorithms, so you'll have a bigger toolbox.
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul&gt;&lt;li&gt;
&lt;h3&gt;Compilers&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Emacs and vi(m)&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Familiarize yourself with a unix-based code editor&lt;/li&gt;
&lt;li&gt;vi(m):
&lt;/li&gt;
&lt;li&gt;emacs:
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Unix command line tools&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;I filled in the list below from good tools.&lt;/li&gt;
&lt;li&gt;bash&lt;/li&gt;
&lt;li&gt;cat&lt;/li&gt;
&lt;li&gt;grep&lt;/li&gt;
&lt;li&gt;sed&lt;/li&gt;
&lt;li&gt;awk&lt;/li&gt;
&lt;li&gt;curl or wget&lt;/li&gt;
&lt;li&gt;sort&lt;/li&gt;
&lt;li&gt;tr&lt;/li&gt;
&lt;li&gt;uniq&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Strace&quot; rel=&quot;nofollow&quot;&gt;strace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://danielmiessler.com/study/tcpdump/&quot; rel=&quot;nofollow&quot;&gt;tcpdump&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Information theory (videos)&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.khanacademy.org/computing/computer-science/informationtheory&quot; rel=&quot;nofollow&quot;&gt;Khan Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More about Markov processes:
&lt;/li&gt;
&lt;li&gt;See more in MIT 6.050J Information and Entropy series below&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Parity &amp;amp; Hamming Code (videos)&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Entropy&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Cryptography&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Compression&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Computer Security&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Garbage collection&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Parallel Programming&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Messaging, Serialization, and Queueing Systems&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;A*&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Fast Fourier Transform&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Bloom Filter&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;HyperLogLog&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Locality-Sensitive Hashing&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Used to determine the similarity of documents&lt;/li&gt;
&lt;li&gt;The opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ferd.ca/simhashing-hopefully-made-simple.html&quot; rel=&quot;nofollow&quot;&gt;Simhashing (hopefully) made simple&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;van Emde Boas Trees&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Augmented Data Structures&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Balanced search trees&lt;/h3&gt;
&lt;ul readability=&quot;8.102358096828&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Know at least one type of balanced binary tree (and know how it's implemented):&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;&quot;Among balanced search trees, AVL and 2/3 trees are now passé, and red-black trees seem to be more popular. A particularly interesting self-organizing data structure is the splay tree, which uses rotations to move any accessed key to the root.&quot; - Skiena&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;Of these, I chose to implement a splay tree. From what I've read, you won't implement a balanced search tree in your interview. But I wanted exposure to coding one up and let's face it, splay trees are the bee's knees. I did read a lot of red-black tree code&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Splay tree: insert, search, delete functions If you end up implementing red/black tree try just these:&lt;/li&gt;
&lt;li&gt;Search and insertion functions, skipping delete&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;I want to learn more about B-Tree since it's used so widely with very large data sets&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree&quot; rel=&quot;nofollow&quot;&gt;Self-balancing binary search tree&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AVL trees&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In practice: From what I can tell, these aren't used much in practice, but I could see where they would be: The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly balanced than red–black trees, leading to slower insertion and removal but faster retrieval. This makes it attractive for data structures that may be built once and loaded without reconstruction, such as language dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=FNeL18KsWPc&amp;amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;amp;index=6&quot; rel=&quot;nofollow&quot;&gt;MIT AVL Trees / AVL Sort (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees&quot; rel=&quot;nofollow&quot;&gt;AVL Trees (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation&quot; rel=&quot;nofollow&quot;&gt;AVL Tree Implementation (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge&quot; rel=&quot;nofollow&quot;&gt;Split And Merge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Splay trees&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In practice: Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors, data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory, networking and file system code) etc&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://archive.org/details/ucberkeley_webcast_G5QIXywcJlY&quot; rel=&quot;nofollow&quot;&gt;CS 61B: Splay Trees (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MIT Lecture: Splay Trees:
&lt;ul&gt;&lt;li&gt;Gets very mathy, but watch the last 10 minutes for sure.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QnPl_Y6EqMo&quot; rel=&quot;nofollow&quot;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Red/black trees&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;These are a translation of a 2-3 tree (see below).&lt;/li&gt;
&lt;li&gt;In practice: Red–black trees offer worst-case guarantees for insertion time, deletion time, and search time. Not only does this make them valuable in time-sensitive applications such as real-time applications, but it makes them valuable building blocks in other data structures which provide worst-case guarantees; for example, many data structures used in computational geometry can be based on red–black trees, and the Completely Fair Scheduler used in current Linux kernels uses red–black trees. In the version 8 of Java, the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor hashcodes, a Red-Black tree is used&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;t=3871&quot; rel=&quot;nofollow&quot;&gt;Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hm2GHwyKF1o&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;index=5&quot; rel=&quot;nofollow&quot;&gt;Aduni - Algorithms - Lecture 5 (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Red%E2%80%93black_tree&quot; rel=&quot;nofollow&quot;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.topcoder.com/community/competitive-programming/tutorials/an-introduction-to-binary-search-and-red-black-trees/&quot; rel=&quot;nofollow&quot;&gt;An Introduction To Binary Search And Red Black Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2-3 search trees&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.83630470016207&quot;&gt;
&lt;p&gt;&lt;strong&gt;2-3-4 Trees (aka 2-4 trees)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In practice: For every 2-4 tree, there are corresponding red–black trees with data elements in the same order. The insertion and deletion operations on 2-4 trees are also equivalent to color-flipping and rotations in red–black trees. This makes 2-4 trees an important tool for understanding the logic behind red–black trees, and this is why many introductory algorithm texts introduce 2-4 trees just before red–black trees, even though &lt;strong&gt;2-4 trees are not often used in practice&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://archive.org/details/ucberkeley_webcast_zqrqYXkth6Q&quot; rel=&quot;nofollow&quot;&gt;CS 61B Lecture 26: Balanced Search Trees (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=DQdMYevEyE4&amp;amp;index=4&amp;amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&quot; rel=&quot;nofollow&quot;&gt;Bottom Up 234-Trees (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2679VQ26Fp4&amp;amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;amp;index=5&quot; rel=&quot;nofollow&quot;&gt;Top Down 234-Trees (video)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;N-ary (K-ary, M-ary) trees&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;note: the N or K is the branching factor (max branches)&lt;/li&gt;
&lt;li&gt;binary trees are a 2-ary tree, with branching factor = 2&lt;/li&gt;
&lt;li&gt;2-3 trees are 3-ary&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/K-ary_tree&quot; rel=&quot;nofollow&quot;&gt;K-Ary Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;B-Trees&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;k-D Trees&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Skip lists&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Network Flows&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Disjoint Sets &amp;amp; Union Find&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Math for Fast Processing&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Treap&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Linear Programming (videos)&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Geometry, Convex hull (videos)&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Discrete math&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;See videos below&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;Machine Learning&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;h2&gt;Additional Detail on Some Subjects&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;I added these to reinforce some ideas already presented above, but didn't want to include them
above because it's just too much. It's easy to overdo it on a subject.
You want to get hired in this century, right?
&lt;/code&gt;
&lt;/pre&gt;
&lt;ul readability=&quot;0.50746268656716&quot;&gt;&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Union-Find&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.098280098280098&quot;&gt;
&lt;p&gt;&lt;strong&gt;More Dynamic Programming&lt;/strong&gt; (videos)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.19354838709677&quot;&gt;
&lt;p&gt;&lt;strong&gt;Advanced Graph Processing&lt;/strong&gt; (videos)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.27329192546584&quot;&gt;
&lt;p&gt;MIT &lt;strong&gt;Probability&lt;/strong&gt; (mathy, and go slowly, which is good for mathy things) (videos):&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oDniZCmNmNw&amp;amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;amp;index=19&quot; rel=&quot;nofollow&quot;&gt;Simonson: Approximation Algorithms (video)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;String Matching&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rabin-Karp (videos):
&lt;/li&gt;
&lt;li&gt;Knuth-Morris-Pratt (KMP):
&lt;/li&gt;
&lt;li&gt;Boyer–Moore string search algorithm
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/algorithms-on-strings/home/week/1&quot; rel=&quot;nofollow&quot;&gt;Coursera: Algorithms on Strings&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;starts off great, but by the time it gets past KMP it gets more complicated than it needs to be&lt;/li&gt;
&lt;li&gt;nice explanation of tries&lt;/li&gt;
&lt;li&gt;can be skipped&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sorting&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Stanford lectures on sorting:
&lt;/li&gt;
&lt;li&gt;Shai Simonson, &lt;a href=&quot;http://www.aduni.org/&quot; rel=&quot;nofollow&quot;&gt;Aduni.org&lt;/a&gt;:
&lt;/li&gt;
&lt;li&gt;Steven Skiena lectures on sorting:
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Video Series&lt;/h2&gt;
&lt;p&gt;Sit back and enjoy. &quot;Netflix and skill&quot; :P&lt;/p&gt;
&lt;h2&gt;Computer Science Courses&lt;/h2&gt;
&lt;h2&gt;Algorithms implementation&lt;/h2&gt;
&lt;h2&gt;Papers&lt;/h2&gt;
&lt;h2&gt;LICENSE&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jwasham/coding-interview-university/blob/master/LICENSE.txt&quot;&gt;CC-BY-SA-4.0&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 16 Dec 2020 17:35:14 +0000</pubDate>
<dc:creator>sturza</dc:creator>
<og:image>https://repository-images.githubusercontent.com/60493101/4ed59900-87ab-11ea-9e39-99741f040a83</og:image>
<og:type>object</og:type>
<og:title>jwasham/coding-interview-university</og:title>
<og:url>https://github.com/jwasham/coding-interview-university</og:url>
<og:description>A complete computer science study plan to become a software engineer. - jwasham/coding-interview-university</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/jwasham/coding-interview-university</dc:identifier>
</item>
<item>
<title>Amazon Location Service</title>
<link>https://aws.amazon.com/blogs/aws/amazon-location-add-maps-and-location-awareness-to-your-applications/</link>
<guid isPermaLink="true" >https://aws.amazon.com/blogs/aws/amazon-location-add-maps-and-location-awareness-to-your-applications/</guid>
<description>&lt;table id=&quot;amazon-polly-audio-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td id=&quot;amazon-polly-audio-tab&quot;&gt;



&lt;div id=&quot;amazon-polly-by-tab&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/polly/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;&lt;img src=&quot;https://a0.awsstatic.com/aws-blog/images/Voiced_by_Amazon_Polly_EN.png&quot; width=&quot;554&quot; height=&quot;56&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;img src=&quot;https://media.amazonwebservices.com/blog/2020/way_seattle_2.png&quot; width=&quot;350&quot; height=&quot;208&quot;/&gt;We want to make it easier and more cost-effective for you to add maps, location awareness, and other location-based features to your web and mobile applications. Until now, doing this has been somewhat complex and expensive, and also tied you to the business and programming models of a single provider.&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Introducing &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Today we are making &lt;a href=&quot;http://aws.amazon.com/location&quot; title=&quot;&quot;&gt;Amazon Location&lt;/a&gt; available in preview form and you can start using it today. Priced at a fraction of common alternatives, &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt; gives you access to maps and location-based services from multiple providers on an economical, pay-as-you-go basis.&lt;/p&gt;
&lt;p&gt;You can use &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt; to build applications that know where they are and respond accordingly. You can display maps, validate addresses, perform geocoding (turn an address into a location), track the movement of packages and devices, and much more. You can easily set up &lt;a href=&quot;https://en.wikipedia.org/wiki/Geo-fence&quot;&gt;geofences&lt;/a&gt; and receive notifications when tracked items enter or leave a geofenced area. You can even overlay your own data on the map while retaining full control.&lt;/p&gt;
&lt;p&gt;You can access &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt; from the &lt;a href=&quot;https://console.aws.amazon.com&quot; title=&quot;&quot;&gt;AWS Management Console&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/cli/&quot; title=&quot;&quot;&gt;AWS Command Line Interface (CLI)&lt;/a&gt;, or via a set of APIs. You can also use existing map libraries such as &lt;a href=&quot;https://docs.mapbox.com/mapbox-gl-js/api/&quot;&gt;Mapbox GL&lt;/a&gt; and &lt;a href=&quot;https://www.mapzen.com/products/tangram/&quot;&gt;Tangram&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;All About &lt;span title=&quot;&quot;&gt;Amazon Location&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;Let’s take a look at the types of resources that &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt; makes available to you, and then talk about how you can use them in your applications.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maps&lt;/strong&gt; – &lt;span title=&quot;&quot;&gt;Amazon Location Service&lt;/span&gt; lets you create maps that make use of data from our partners. You can choose between maps and map styles provided by &lt;a href=&quot;https://www.esri.com/&quot;&gt;Esri&lt;/a&gt; and by &lt;a href=&quot;https://www.here.com/&quot;&gt;HERE Technologies&lt;/a&gt;, with the potential for more maps &amp;amp; more styles from these and other partners in the future. After you create a map, you can retrieve a tile (at one of up to 16 zoom levels) using the &lt;code&gt;GetMapTile&lt;/code&gt; function. You won’t do this directly, but will use Mapbox GL, Tangram, or another library instead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Place Indexes&lt;/strong&gt; – You can choose between indexes provided by Esri and HERE. The indexes support the &lt;code&gt;SearchPlaceIndexForPosition&lt;/code&gt; function which returns places, such as residential addresses or points of interest (often known as POI) that are closest to the position that you supply, while also performing reverse geocoding to turn the position (a pair of coordinates) into a legible address. Indexes also support the &lt;code&gt;SearchPlaceIndexForText&lt;/code&gt; function, which searches for addresses, businesses, and points of interest using free-form text such as an address, a name, a city, or a region.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Trackers –&lt;/strong&gt;Trackers receive location updates from one or more devices via the &lt;code&gt;BatchUpdateDevicePosition&lt;/code&gt; function, and can be queried for the current position (&lt;code&gt;GetDevicePosition&lt;/code&gt;) or location history (&lt;code&gt;GetDevicePositionHistory&lt;/code&gt;) of a device. Trackers can also be linked to Geofence Collections to implement monitoring of devices as they move in and out of geofences.&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Geofence Collections&lt;/strong&gt; – Each collection contains a list of geofences that define geographic boundaries. Here’s a geofence (created with &lt;a href=&quot;https://geojson.io&quot;&gt;geojson.io&lt;/a&gt;) that outlines a park near me:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_slu_park_fence_1.png&quot; width=&quot;560&quot; height=&quot;465&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span title=&quot;&quot;&gt;Amazon Location&lt;/span&gt; in Action&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;I can use the &lt;a href=&quot;https://console.aws.amazon.com&quot; title=&quot;&quot;&gt;AWS Management Console&lt;/a&gt; to get started with &lt;span title=&quot;&quot;&gt;Amazon Location&lt;/span&gt; and then move on to the &lt;a href=&quot;https://aws.amazon.com/cli/&quot; title=&quot;&quot;&gt;AWS Command Line Interface (CLI)&lt;/a&gt; or the APIs if necessary. I open the Amazon Location Service Console, and I can either click &lt;strong&gt;Try it!&lt;/strong&gt; to create a set of starter resources, or I can open up the navigation on the left and create them one-by-one. I’ll go for one-by-one, and click &lt;strong&gt;Maps&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_console_splash_4.png&quot; width=&quot;899&quot; height=&quot;617&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then I click &lt;strong&gt;Create map&lt;/strong&gt; to proceed:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_maps_1.png&quot; width=&quot;900&quot; height=&quot;707&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I enter a Name and a Description:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_con_addmap_top_2.png&quot; width=&quot;1216&quot; height=&quot;550&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Then I choose the desired map and click &lt;strong&gt;Create map&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_con_map_choices_2.png&quot; width=&quot;812&quot; height=&quot;853&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The map is created and ready to be added to my application right away:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_mymap1_2.png&quot; width=&quot;894&quot; height=&quot;872&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now I am ready to embed the map in my application, and I have several options including the Amplify JavaScript SDK, the Amplify Android SDK, the Amplify iOS SDK, Tangram, and Mapbox GL (read the Developer Guide to learn more about each option).&lt;/p&gt;
&lt;p&gt;Next, I want to track the position of devices so that I can be notified when they enter or exit a given region. I use a &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; editing tool such as &lt;a href=&quot;https://geojson.io/&quot;&gt;geojson.io&lt;/a&gt; to create a geofence that is built from polygons, and save (download) the resulting file:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_geojson_2.png&quot; width=&quot;711&quot; height=&quot;582&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I click &lt;strong&gt;Create geofence collection&lt;/strong&gt; in the left-side navigation, and in Step 1, I add my GeoJSON file, enter a Name and Description, and click &lt;strong&gt;Next&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_add_gfs_1.png&quot; width=&quot;900&quot; height=&quot;877&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Now I enter a Name and a Description for my tracker, and click &lt;strong&gt;Next&lt;/strong&gt;. It will be linked to the geofence collection that I just created:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_add_tracker_1.png&quot; width=&quot;900&quot; height=&quot;626&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The next step is to arrange for the tracker to send events to &lt;a href=&quot;https://aws.amazon.com/eventbridge&quot; title=&quot;&quot;&gt;Amazon EventBridge&lt;/a&gt; so that I can monitor them in CloudWatch Logs. I leave the settings as-is, and click &lt;strong&gt;Next&lt;/strong&gt; to proceed:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_set_event_target_1.png&quot; width=&quot;901&quot; height=&quot;561&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I review all of my choices, and click &lt;strong&gt;Finalize&lt;/strong&gt; to move ahead:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_review_1.png&quot; width=&quot;900&quot; height=&quot;864&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The resources are created, set up, and ready to go:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-medium&quot; src=&quot;https://media.amazonwebservices.com/blog/2020/way_created_success_1.png&quot; width=&quot;900&quot; height=&quot;837&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I can then write code or use the CLI to update the positions of my devices:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;11&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-bash&quot;&gt;$ aws location batch-update-device-position \
   --tracker-name MyTracker1 \
   --updates &quot;DeviceId=Jeff1,Position=-122.33805,47.62748,SampleTime=2020-11-05T02:59:07+0000&quot;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After I do this a time or two, I can retrieve the position history for the device:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-bash&quot;&gt;$ aws location get-device-position-history \
  -tracker-name MyTracker1 --device-id Jeff1
------------------------------------------------
|           GetDevicePositionHistory           |
+----------------------------------------------+
||               DevicePositions              ||
|+---------------+----------------------------+|
||  DeviceId     |  Jeff1                     ||
||  ReceivedTime |  2020-11-05T02:59:17.246Z  ||
||  SampleTime   |  2020-11-05T02:59:07Z      ||
|+---------------+----------------------------+|
|||                 Position                 |||
||+------------------------------------------+||
|||  -122.33805                              |||
|||  47.62748                                |||
||+------------------------------------------+||
||               DevicePositions              ||
|+---------------+----------------------------+|
||  DeviceId     |  Jeff1                     ||
||  ReceivedTime |  2020-11-05T03:02:08.002Z  ||
||  SampleTime   |  2020-11-05T03:01:29Z      ||
|+---------------+----------------------------+|
|||                 Position                 |||
||+------------------------------------------+||
|||  -122.43805                              |||
|||  47.52748                                |||
||+------------------------------------------+||
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can write &lt;a href=&quot;https://aws.amazon.com/eventbridge&quot; title=&quot;&quot;&gt;Amazon EventBridge&lt;/a&gt; rules that watch for the events, and use them to perform any desired processing. Events are published when a device enters or leaves a geofenced area, and look like this:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-json&quot;&gt;{
  &quot;version&quot;: &quot;0&quot;,
  &quot;id&quot;: &quot;7cb6afa8-cbf0-e1d9-e585-fd5169025ee0&quot;,
  &quot;detail-type&quot;: &quot;Location Geofence Event&quot;,
  &quot;source&quot;: &quot;aws.geo&quot;,
  &quot;account&quot;: &quot;123456789012&quot;,
  &quot;time&quot;: &quot;2020-11-05T02:59:17.246Z&quot;,
  &quot;region&quot;: &quot;us-east-1&quot;,
  &quot;resources&quot;: [
    &quot;arn:aws:geo:us-east-1:123456789012:geofence-collection/MyGeoFences1&quot;,
    &quot;arn:aws:geo:us-east-1:123456789012:tracker/MyTracker1&quot;
  ],
  &quot;detail&quot;: {
        &quot;EventType&quot;: &quot;ENTER&quot;,
        &quot;GeofenceId&quot;: &quot;LakeUnionPark&quot;,
        &quot;DeviceId&quot;: &quot;Jeff1&quot;,
        &quot;SampleTime&quot;: &quot;2020-11-05T02:59:07Z&quot;,
        &quot;Position&quot;: [-122.33805, 47.52748]
  }
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, I can create and use place indexes so that I can work with geographical objects. I’ll use the CLI for a change of pace. I create the index:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-bash&quot;&gt;$ aws location create-place-index \
  --index-name MyIndex1 --data-source Here&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I query it to find the addresses and points of interest near the location:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;33&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-bash&quot;&gt;$ aws location search-place-index-for-position --index-name MyIndex1 \
  --position &quot;[-122.33805,47.62748]&quot; --output json \
  |  jq .Results[].Place.Label
&quot;Terry Ave N, Seattle, WA 98109, United States&quot;
&quot;900 Westlake Ave N, Seattle, WA 98109-3523, United States&quot;
&quot;851 Terry Ave N, Seattle, WA 98109-4348, United States&quot;
&quot;860 Terry Ave N, Seattle, WA 98109-4330, United States&quot;
&quot;Seattle Fireboat Duwamish, 860 Terry Ave N, Seattle, WA 98109-4330, United States&quot;
&quot;824 Terry Ave N, Seattle, WA 98109-4330, United States&quot;
&quot;9th Ave N, Seattle, WA 98109, United States&quot;
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I can also do a text-based search:&lt;/p&gt;
&lt;div class=&quot;hide-language&quot; readability=&quot;47&quot;&gt;
&lt;pre class=&quot;unlimited-height-code&quot;&gt;
&lt;code class=&quot;lang-bash&quot;&gt;$ aws location search-place-index-for-text --index-name MyIndex1 \
  --text Coffee --bias-position &quot;[-122.33805,47.62748]&quot; \
  --output json | jq .Results[].Place.Label
&quot;Mohai Cafe, 860 Terry Ave N, Seattle, WA 98109, United States&quot;
&quot;Starbucks, 1200 Westlake Ave N, Seattle, WA 98109, United States&quot;
&quot;Metropolitan Deli and Cafe, 903 Dexter Ave N, Seattle, WA 98109, United States&quot;
&quot;Top Pot Doughnuts, 590 Terry Ave N, Seattle, WA 98109, United States&quot;
&quot;Caffe Umbria, 1201 Westlake Ave N, Seattle, WA 98109, United States&quot;
&quot;Starbucks, 515 Westlake Ave N, Seattle, WA 98109, United States&quot;
&quot;Cafe 815 Mercer, 815 9th Ave N, Seattle, WA 98109, United States&quot;
&quot;Victrola Coffee Roasters, 500 Boren Ave N, Seattle, WA 98109, United States&quot;
&quot;Specialty's, 520 Terry Ave N, Seattle, WA 98109, United States&quot;
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both of the searches have other options; read the Geocoding, Reverse Geocoding, and Search to learn more.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;Things to Know&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;a href=&quot;http://aws.amazon.com/location&quot; title=&quot;&quot;&gt;Amazon Location&lt;/a&gt; is launching today as a preview, and you can get started with it right away. During the preview we plan to add an API for routing, and will also do our best to respond to customer feedback and feature requests as they arrive.&lt;/p&gt;
&lt;p&gt;Pricing is based on usage, with an initial evaluation period that lasts for three months and lets you make numerous calls to the &lt;span title=&quot;&quot;&gt;Amazon Location&lt;/span&gt; APIs at no charge. After the evaluation period you pay the prices listed on the &lt;a href=&quot;https://aws.amazon.com/location/pricing&quot;&gt;Amazon Location Pricing&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;&lt;span title=&quot;&quot;&gt;Amazon Location&lt;/span&gt; is available in the &lt;span title=&quot;&quot;&gt;US East (N. Virginia)&lt;/span&gt;, &lt;span title=&quot;&quot;&gt;US East (Ohio)&lt;/span&gt;, &lt;span title=&quot;&quot;&gt;US West (Oregon)&lt;/span&gt;, &lt;span title=&quot;&quot;&gt;Europe (Ireland)&lt;/span&gt;, and &lt;span title=&quot;&quot;&gt;Asia Pacific (Tokyo)&lt;/span&gt; Regions.&lt;/p&gt;
&lt;p&gt;— &lt;a href=&quot;https://twitter.com/jeffbarr&quot;&gt;Jeff&lt;/a&gt;;&lt;/p&gt;

</description>
<pubDate>Wed, 16 Dec 2020 16:39:31 +0000</pubDate>
<dc:creator>jeffbarr</dc:creator>
<og:title>Amazon Location – Add Maps and Location Awareness to Your Applications | Amazon Web Services</og:title>
<og:type>article</og:type>
<og:url>https://aws.amazon.com/blogs/aws/amazon-location-add-maps-and-location-awareness-to-your-applications/</og:url>
<og:description>We want to make it easier and more cost-effective for you to add maps, location awareness, and other location-based features to your web and mobile applications. Until now, doing this has been somewhat complex and expensive, and also tied you to the business and programming models of a single provider. Introducing Amazon Location Service Today […]</og:description>
<og:image>https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2020/12/16/Amazon-Location-Services-1.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://aws.amazon.com/blogs/aws/amazon-location-add-maps-and-location-awareness-to-your-applications/</dc:identifier>
</item>
<item>
<title>The first person in the UK to have air pollution listed as a cause of death</title>
<link>https://www.bbc.com/news/uk-england-london-55330945</link>
<guid isPermaLink="true" >https://www.bbc.com/news/uk-england-london-55330945</guid>
<description>&lt;style data-emotion-css=&quot;13k1mrq-PromoHeadline&quot;&gt;&lt;![CDATA[.css-13k1mrq-PromoHeadline{font-family:ReithSerif,Helvetica,Arial,freesans,sans-serif;font-weight:500;font-size:1rem;line-height:1.25rem;color:#3F3F42;}@media (min-width:37.5rem){.css-13k1mrq-PromoHeadline{font-size:1.125rem;line-height:1.375rem;}}]]&gt;&lt;/style&gt;&lt;p class=&quot;css-13k1mrq-PromoHeadline e1f5wbog2&quot;&gt;&lt;style data-emotion-css=&quot;1hlxxic-PromoLink&quot;&gt;&lt;![CDATA[.css-1hlxxic-PromoLink:link{color:inherit;}.css-1hlxxic-PromoLink:visited{color:#696969;}.css-1hlxxic-PromoLink:link,.css-1hlxxic-PromoLink:visited{-webkit-text-decoration:none;text-decoration:none;}.css-1hlxxic-PromoLink:link:hover,.css-1hlxxic-PromoLink:visited:hover,.css-1hlxxic-PromoLink:link:focus,.css-1hlxxic-PromoLink:visited:focus{color:#B80000;-webkit-text-decoration:underline;text-decoration:underline;}.css-1hlxxic-PromoLink:link::after,.css-1hlxxic-PromoLink:visited::after{content:'';position:absolute;top:0;right:0;bottom:0;left:0;z-index:2;}]]&gt;&lt;/style&gt;&lt;a href=&quot;https://www.bbc.com/news/uk-england-london-55235398&quot; class=&quot;css-1hlxxic-PromoLink e1f5wbog6&quot;&gt;&lt;span aria-hidden=&quot;false&quot;&gt;Ella Kissi-Debrah 'living on knife edge' before death&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;</description>
<pubDate>Wed, 16 Dec 2020 16:20:29 +0000</pubDate>
<dc:creator>umaar</dc:creator>
<og:description>Ella Adoo-Kissi-Debrah was &quot;living on a knife edge&quot; before her fatal asthma attack, the inquest heard.</og:description>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/8C35/production/_102239853_ella.jpg</og:image>
<og:title>Ella Adoo-Kissi-Debrah: Air pollution a factor in girl's death, inquest finds</og:title>
<og:type>article</og:type>
<og:url>https://www.bbc.com/news/uk-england-london-55330945</og:url>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/uk-england-london-55330945</dc:identifier>
</item>
<item>
<title>FDA authorizes rapid, at-home coronavirus test</title>
<link>https://www.axios.com/fda-authorizes-rapid-at-home-coronavirus-test-85012e02-6c4f-4d98-be7d-8334d85a6c4c.html</link>
<guid isPermaLink="true" >https://www.axios.com/fda-authorizes-rapid-at-home-coronavirus-test-85012e02-6c4f-4d98-be7d-8334d85a6c4c.html</guid>
<description>&lt;p&gt;The Food and Drug Administration on Tuesday authorized the first over-the-counter, at-home rapid coronavirus test, which allows users to get their results from an app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The big picture:&lt;/strong&gt; A slew of at-home tests are in development, which could make diagnostics easier and faster as the pandemic rages on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The state of play:&lt;/strong&gt; Several companies are working on at-home test kits that deliver results digitally, &lt;a class=&quot;gtm-content-click&quot; data-vars-link-text=&quot;the Wall Street Journal notes&quot; data-vars-click-url=&quot;https://www.wsj.com/articles/can-you-get-a-covid-test-at-home-11607980810&quot; data-vars-event-category=&quot;story&quot; data-vars-sub-category=&quot;story&quot; data-vars-item=&quot;in_content_link&quot; href=&quot;https://www.wsj.com/articles/can-you-get-a-covid-test-at-home-11607980810&quot; target=&quot;_blank&quot;&gt;the Wall Street Journal notes&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ellume, the company that received FDA authorization for its at-home test on Tuesday, is working on a function that would let users share their results with their doctor and local health authorities.&lt;/li&gt;
&lt;li&gt;The FDA asked Lucira Health, which is working on a rapid test, to develop a mobile app or website for better data tracking.&lt;/li&gt;
&lt;li&gt;Gauss Surgical and Cellex's test would require users take a photo of their results for an algorithm's interpretation.&lt;/li&gt;
&lt;li&gt;On &lt;a class=&quot;gtm-content-click&quot; data-vars-link-text=&quot;Wednesday&quot; data-vars-click-url=&quot;https://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-update-fda-issues-new-authorization-binaxnow-covid-19-ag-card-home-test?utm_medium=email&amp;amp;utm_source=govdelivery&quot; data-vars-event-category=&quot;story&quot; data-vars-sub-category=&quot;story&quot; data-vars-item=&quot;in_content_link&quot; href=&quot;https://www.fda.gov/news-events/press-announcements/coronavirus-covid-19-update-fda-issues-new-authorization-binaxnow-covid-19-ag-card-home-test?utm_medium=email&amp;amp;utm_source=govdelivery&quot; target=&quot;_blank&quot;&gt;Wednesday&lt;/a&gt;, the BinaxNOW COVID-19 Ag Card Home Test was authorized for use by patients at home with a prescription, and will be paired with telehealth options.&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Wed, 16 Dec 2020 16:15:58 +0000</pubDate>
<dc:creator>KoftaBob</dc:creator>
<og:title>FDA authorizes rapid, at-home coronavirus test</og:title>
<og:type>article</og:type>
<og:url>https://www.axios.com/fda-authorizes-rapid-at-home-coronavirus-test-85012e02-6c4f-4d98-be7d-8334d85a6c4c.html</og:url>
<og:image>https://images.axios.com/MJSu6QSEuNgzNNqMfNLzwKMFBGU=/0x0:1920x1080/1366x768/2020/12/15/1608071820981.jpg</og:image>
<og:description>Several companies that have filed for emergency authorization are pairing their phones with Bluetooth or other telehealth options.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.axios.com/fda-authorizes-rapid-at-home-coronavirus-test-85012e02-6c4f-4d98-be7d-8334d85a6c4c.html</dc:identifier>
</item>
<item>
<title>Bitcoin breaks above $20k</title>
<link>https://www.nasdaq.com/articles/bitcoin-hits-record-above-%2420k-as-analysts-remain-confident-of-future-2020-12-16</link>
<guid isPermaLink="true" >https://www.nasdaq.com/articles/bitcoin-hits-record-above-%2420k-as-analysts-remain-confident-of-future-2020-12-16</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.nasdaq.com/articles/bitcoin-hits-record-above-%2420k-as-analysts-remain-confident-of-future-2020-12-16&quot;&gt;https://www.nasdaq.com/articles/bitcoin-hits-record-above-%2420k-as-analysts-remain-confident-of-future-2020-12-16&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25443489&quot;&gt;https://news.ycombinator.com/item?id=25443489&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 256&lt;/p&gt;
&lt;p&gt;# Comments: 410&lt;/p&gt;
</description>
<pubDate>Wed, 16 Dec 2020 15:14:35 +0000</pubDate>
<dc:creator>wsieroci</dc:creator>
<dc:identifier>https://www.nasdaq.com/articles/bitcoin-hits-record-above-%2420k-as-analysts-remain-confident-of-future-2020-12-16</dc:identifier>
</item>
</channel>
</rss>