<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>How DOOM fire was done</title>
<link>http://fabiensanglard.net/doom_fire_psx/</link>
<guid isPermaLink="true" >http://fabiensanglard.net/doom_fire_psx/</guid>
<description>&lt;head&gt;&lt;title&gt;How DOOM fire was done&lt;/title&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;96.10460251046&quot;&gt;

&lt;center&gt;

&lt;/center&gt;
&lt;p&gt;Dec 28, 2018&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How DOOM fire was done&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt; The &lt;a href=&quot;http://fabiensanglard.net/gebbdoom&quot;&gt;Game Engine Black Book: DOOM&lt;/a&gt; features a whole chapter about DOOM console ports and the challenges they encountered. The utter failure of the 3DO, the difficulties of the Saturn due to its affine texture mapping, and the amazing &quot;reverse-engineering-from- scratch&quot; by Randy Linden on Super Nintendo all have rich stories to tell.&lt;/p&gt;&lt;p&gt;Once heading towards disaster&lt;a name=&quot;back_1&quot; href=&quot;http://fabiensanglard.net/doom_fire_psx/#footnote_1&quot;&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/a&gt;, the Playstation 1 (PSX) devteam managed to rectify course to produce a critically and commercially acclaimed conversion. &lt;a href=&quot;https://www.youtube.com/watch?v=p85npx14HUI&quot;&gt;Final DOOM&lt;/a&gt; was the most faithful port when compared to the PC version. The alpha blended colored sectors not only improved visual quality, they also made gameplay better by indicating the required key color. Sound was also improved via reverberation effects taking advantage of the PSX's Audio Processing Unit.&lt;/p&gt;&lt;p&gt;The devteam did such a good job that they found themselves with a few extra CPU cycles they decided to use to generate animated fire both during both the &lt;a href=&quot;https://www.youtube.com/watch?v=YJB0gfP-GRY&amp;amp;feature=youtu.be&amp;amp;t=10&quot;&gt;intro&lt;/a&gt; and the &lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/psx_screen_sky.png&quot;&gt;gameplay&lt;/a&gt;. Mesmerized, I tried to find out how it was done. After an initial calling found no answer, I was about to dust off my MIPS book to rip open the PSX executable when Samuel Villarreal replied on Twitter to tell me he had already reverse-engineered the Nintendo 64 version&lt;a name=&quot;back_2&quot; href=&quot;http://fabiensanglard.net/doom_fire_psx/#footnote_2&quot;&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/a&gt;. I only had to clean, simplify, and optimize it a little bit.&lt;/p&gt;&lt;p&gt;It was interesting to re-discover this classic demoscene effect; the underlying idea is similar to the first &lt;a href=&quot;http://agilerepose.weebly.com/water-ripple.html&quot;&gt;water ripple&lt;/a&gt; many developers implemented as a programming kata in the 90's. The fire effect is a vibrant testimony to a time when judiciously picked palette colors combined with a simple trick were the only way to get things done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Core idea&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;At its core, the fire effect relies on a simple heightmap. A screen-sized array is populated with thirty-seven values ranging from 0 to 36. Each value is associated with a color from white to black, using yellow, orange, and red along the way. The idea is to model the fire particle's temperature as it elevates and cools down.&lt;/p&gt;
&lt;table width=&quot;100%&quot; border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The framebuffer is initialized full black (with zeros) with a single line of white pixels at the bottom (36) which will be the &quot;source&quot; of the fire.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/basis.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;For each screen refresh the &quot;heat&quot; is propagated up. A new value for each pixel in the framebuffer is calculated. Each pixel is updated based on the value directly below. In the code, lower-left is at array index zero and upper right is at index FIRE_HEIGHT * FIRE_WIDTH - 1.&lt;/p&gt;
&lt;pre&gt;
&lt;span&gt;function&lt;/span&gt; doFire&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;for&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;x&lt;span&gt;=&lt;/span&gt;&lt;span&gt;0&lt;/span&gt; &lt;span&gt;;&lt;/span&gt; x &lt;span&gt;&amp;lt;&lt;/span&gt; FIRE_WIDTH&lt;span&gt;;&lt;/span&gt; x&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;y &lt;span&gt;=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; y &lt;span&gt;&amp;lt;&lt;/span&gt; FIRE_HEIGHT&lt;span&gt;;&lt;/span&gt; y&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            spreadFire&lt;span&gt;(&lt;/span&gt;y &lt;span&gt;*&lt;/span&gt; FIRE_WIDTH &lt;span&gt;+&lt;/span&gt; x&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;

 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;src &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; firePixels&lt;span&gt;[&lt;/span&gt;src&lt;span&gt;]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Notice that line 0 is never updated (y iteration starts at 1 instead of 0). This line populated with zeros is the &quot;generator&quot; of fire. This simple version with linear cooling (-=1) yields a boring uniform output.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/propagate_boring.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;We can tweak the spreadFire() function a little bit and change how fast a heat points decays. Adding randomness works well.&lt;/p&gt;
&lt;pre&gt;
 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; rand &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;round&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;random&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;3.0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;src &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; pixel &lt;span&gt;-&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;rand &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt; &lt;img src=&quot;http://fabiensanglard.net/doom_fire_psx/variable_decay.png&quot; type=&quot;image/png&quot;/&gt;&lt;/p&gt;&lt;p&gt;That's better. To improve the illusion further, the heat can be randomly propagated to go not only above but also left and right.&lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;
 &lt;span&gt;function&lt;/span&gt; spreadFire&lt;span&gt;(&lt;/span&gt;src&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; rand &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;round&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Math&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;random&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;*&lt;/span&gt; &lt;span&gt;3.0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; dst &lt;span&gt;=&lt;/span&gt; src &lt;span&gt;-&lt;/span&gt; rand &lt;span&gt;+&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    firePixels&lt;span&gt;[&lt;/span&gt;dst &lt;span&gt;-&lt;/span&gt; FIRE_WIDTH &lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; firePixels&lt;span&gt;[&lt;/span&gt;src&lt;span&gt;]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;rand &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
 &lt;span&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;Et voila! Notice that by adjusting how the fire propagates up, wind can also be simulated. I will leave that as an exercise for the readers who had the courage to read up to here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Source Code&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Samuel's &lt;a href=&quot;https://codepen.io/svkaiser/pen/xXmOvY&quot;&gt;version&lt;/a&gt; (logically) looked a lot like assembly. If you want to take a look, here is a &lt;a href=&quot;https://github.com/fabiensanglard/DoomFirePSX/blob/master/flames.html&quot;&gt;cleaned up and simplified version&lt;/a&gt;.&lt;br/&gt;&lt;img id=&quot;doom&quot; src=&quot;http://fabiensanglard.net/doom_fire_psx/doom.png&quot; width=&quot;379&quot; height=&quot;260&quot; hidden=&quot;true&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p id=&quot;paperbox&quot;&gt;&lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/#back_1&quot;&gt;^&lt;/a&gt; [1] Source: &lt;a href=&quot;http://fabiensanglard.net/gebbdoom&quot;&gt;The full story is detailed in Game Engine Black Book: DOOM&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;http://fabiensanglard.net/doom_fire_psx/#back_2&quot;&gt;^&lt;/a&gt; [2] Source: &lt;a href=&quot;https://twitter.com/fabynou/status/936329655308632064&quot;&gt;Twitter post, March 25th 2018&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;center&gt;*&lt;/center&gt;
&lt;/body&gt;</description>
<pubDate>Sat, 29 Dec 2018 09:59:24 +0000</pubDate>
<dc:creator>ingve</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://fabiensanglard.net/doom_fire_psx/</dc:identifier>
</item>
<item>
<title>How Facebook Keeps Messenger from Crashing on New Year&amp;#039;s Eve</title>
<link>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</link>
<guid isPermaLink="true" >https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</guid>
<description>&lt;img src=&quot;https://spectrum.ieee.org/image/MzE5OTkzNw.jpeg&quot; alt=&quot;An illustration shows a conversation in Facebook Messenger overlaid on a giant thumb to symbolize a Facebook &amp;quot;like.&amp;quot;&quot;/&gt; Illustration: IEEE Spectrum
&lt;section id=&quot;side-module&quot;&gt;&lt;div class=&quot;medium-top-ad&quot;&gt;
&lt;div class=&quot;ad-module&quot;&gt;
&lt;p&gt;Advertisement&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;recommended-side&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Editor’s Picks&lt;/p&gt;
&lt;div id=&quot;article-rec&quot; readability=&quot;36&quot;&gt;
&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MjI3NDk1Mg&quot; alt=&quot;Image by Getty Images&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Stalking on Facebook Is Easier Than You Think&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MjI3OTg4Nw&quot; alt=&quot;null&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;Facebook Knows Your Friends—Even if They’re Not on Facebook&lt;/h4&gt;
&lt;/p&gt;

&lt;div class=&quot;image-column&quot;&gt;&lt;img src=&quot;https://spectrum.ieee.org/image/MzEzMzQxNg&quot; alt=&quot;David Patterson with computer hardware.&quot;/&gt;&lt;/div&gt;
&lt;p&gt;
&lt;h4&gt;David Patterson Says It’s Time for New Computer Architectures and Software Languages&lt;/h4&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;p&gt;On New Year’s Eve, millions of people will use Facebook’s Messenger app to wish friends and family a “Happy New Year!” If everything goes smoothly, those messages will reach recipients in fewer than 100 milliseconds, and life will go on. But if the service stalls or fails, a small team of software engineers based in the company’s New York City office will have to answer for it.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/isaacpayamahdout/&quot;&gt;Isaac Ahdout&lt;/a&gt;, engineering manager, and &lt;a href=&quot;https://www.linkedin.com/in/thomas-georgiou-94803323/&quot;&gt;Thomas Georgiou&lt;/a&gt;, software engineer, are both on that team. They’ve tested and tweaked the app throughout the year and will soon face their biggest annual performance exam. Messenger’s 1.3 billion monthly active users send more messages on New Year’s Eve than on any other day of the year. Many hit “send” (represented as a blue arrow in the app) immediately after the clock strikes midnight in &lt;a href=&quot;https://www.timeanddate.com/counters/firstnewyear.html&quot;&gt;their respective time zones&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“There’s like this firehouse you can’t stop, of deliveries you have to make,” says Georgiou. “We have to keep up. Otherwise, you end up in a bad situation.”&lt;/p&gt;
&lt;p&gt;It’s a problem familiar to anyone who works on networks or services that see a dramatic spike in use at a particular time of day or year. U.S. telecommunications companies frequently install new base stations ahead of &lt;a href=&quot;https://www.adweek.com/brand-marketing/verizon-shows-what-it-took-to-wire-u-s-bank-stadium-for-73000-fans-at-the-super-bowl/&quot;&gt;Super Bowls&lt;/a&gt;, &lt;a href=&quot;https://www.theindependent.com/news/state_fair/state-fair-increases-ability-to-digitally-connect/article_963a2222-2186-11e7-b578-5b374c07b109.html&quot;&gt;state fairs&lt;/a&gt;, and &lt;a href=&quot;https://about.att.com/innovationblog/inauguration_network&quot;&gt;presidential inaugurations&lt;/a&gt; for similar reasons.&lt;/p&gt;
&lt;aside class=&quot;inlay pullquote lt med&quot;&gt;“The biggest thing we worry about is: How do you prevent that cascading failure from happening?” &lt;span class=&quot;pq-attrib&quot;&gt;—Thomas Georgiou, software engineer&lt;/span&gt;&lt;/aside&gt;&lt;p&gt;For Facebook’s Messenger team, the challenge is slightly more complicated than shuffling a simple message from one user to another. Facebook allows people to set up large group chats, and shows senders a receipt every time a message is &lt;a href=&quot;https://www.facebook.com/help/messenger-app/iphone/926389207386625/&quot;&gt;delivered, sent, or read&lt;/a&gt;. These features compound the total number of messages that must be distributed across the service.&lt;/p&gt;
&lt;p&gt;Users also send and receive a higher percentage of photos and videos as they ring in the new year, compared to an average day. And people often try to resend messages that don’t appear to make it through right away, which piles on more requests.&lt;/p&gt;
&lt;p&gt;Or, as Ahdout puts it, “once you start falling behind, you fall behind more.”&lt;/p&gt;
&lt;p&gt;“The biggest thing we worry about is: How do you prevent that cascading failure from happening?” adds Georgiou.&lt;/p&gt;
&lt;p&gt;One way is to perform extensive &lt;a href=&quot;https://ieeexplore.ieee.org/document/7123673&quot;&gt;load testing&lt;/a&gt; ahead of time, to simulate the volume of messages that Facebook expects on New Year’s Eve based on activity in previous years. (The company declined to share its forecasts, and would not say how many messages were sent in previous years.) Load testing allows the team to validate how many messages a given server can handle before the team must shift traffic over to other servers in the network.  &lt;/p&gt;
&lt;p&gt;During the last New Year’s Eve, for example, one data center struggled with the volume of incoming messages, so the team directed traffic away from that center to another one. Following that incident, the group built tools to allow them to make those kinds of changes more easily this year.&lt;/p&gt;
&lt;img alt=&quot;A black and white photo shows Facebook's Messenger infrastructure team. &quot; src=&quot;https://spectrum.ieee.org/image/MzE5OTk2Ng.jpeg&quot;/&gt; Photo: Facebook Facebook’s Messenger infrastructure team gathers for a photo. 
&lt;p&gt;In addition to shifting loads, the Messenger team has developed other levers that it can pull “if things get really bad,” says Ahdout. Every new message sent to a server goes into a queue as part of &lt;a href=&quot;https://code.fb.com/production-engineering/building-mobile-first-infrastructure-for-messenger/&quot;&gt;a service called Iris&lt;/a&gt;. There, messages are assigned a timeout—a period of time after which, that message will drop out of the queue to make room for new messages. During a high-volume event, this allows the team to quickly discard certain types of messages, such as read receipts, to focus its resources on delivering ones that users have composed.&lt;/p&gt;
&lt;p&gt;“We set up our systems so that if it comes to that, they start shedding the lowest-priority traffic,” says Ahdout. “So if it came to it, Iris would rather deliver a message and drop the read receipt, rather than drop the message and deliver the read receipt.”&lt;/p&gt;
&lt;p&gt;Georgiou says the group can also sacrifice the accuracy of the green dot displayed in the Messenger app that indicates a friend is currently online. Slowing the frequency at which the dot is updated can relieve network congestion. Or, the team could instruct the system to temporarily delay certain functions—such as deleting information about old messages—for a few hours to free up CPUs that would ordinarily perform that task, in order to process more messages in the moment.&lt;/p&gt;
&lt;aside class=&quot;inlay pullquote rt med&quot;&gt;“We set up our systems so that if it comes to that, they start shedding the lowest-priority traffic.” &lt;span class=&quot;pq-attrib&quot;&gt;—Isaac Ahdout, engineering manager&lt;/span&gt;&lt;/aside&gt;&lt;p&gt;All of these options fall under the notion of “graceful degradation,” says Ahdout. “Rather than having your service dying on the floor and no one using it, you make it a little less awesome and people can still use it.” Fortunately, the Messenger team didn’t have to resort to any of these measures last year.&lt;/p&gt;
&lt;p&gt;Aside from those efforts, Messenger’s engineers also spend a lot of time on efficiency projects designed to make the most of the CPUs and memory within each server. Ahead of New Year’s Eve 2018, for example, the team added a scheduler, which is a program that allows the system to “batch” similar messages together.&lt;/p&gt;
&lt;p&gt;“You can imagine that our servers are getting many requests concurrently,” explains Ahdout. “You can bundle some of those together into a single large request before you send it downstream. Doing that, you reduce the computational load on downstream systems.”&lt;/p&gt;
&lt;p&gt;Batches are formed based on a principle called affinity, which can be derived from a variety of characteristics. For example, two messages may have higher affinity if they are traveling to the same recipient, or require similar resources from the back end. As traffic increases, the Messenger team can have the system batch more aggressively. Doing so will increase latency (a message’s roundtrip delay) by a few milliseconds, but makes it more likely that all messages will get through.&lt;/p&gt;
&lt;p&gt;This year for New Year’s Eve, neither Ahdout nor Georgiou will be on duty &lt;a href=&quot;https://www.timeanddate.com/counters/firstnewyear.html&quot;&gt;as midnight approaches in Asia&lt;/a&gt;, when the service sees its largest spike in messages, but Ahdout says he will stay close to his laptop, just in case. “Basically, a lot of this work never really sees the light of day, in the sense that things go well, or if they don’t, we handle them so gracefully that users don’t even know what happened,” he says.&lt;/p&gt;
&lt;p&gt;“It’s sort of been awhile since there was a major problem,” he adds. Fingers crossed. &lt;/p&gt;
</description>
<pubDate>Sat, 29 Dec 2018 00:35:51 +0000</pubDate>
<dc:creator>victorvation</dc:creator>
<og:title>How Facebook Keeps Messenger From Crashing on New Year's Eve</og:title>
<og:url>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</og:url>
<og:description>Messenger's 1.3 billion users send more messages on New Year’s Eve than on any other day of the year</og:description>
<og:image>https://spectrum.ieee.org/image/MzE5OTk2Mw.jpeg</og:image>
<og:type>blog-tech-talk</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://spectrum.ieee.org/tech-talk/computing/software/how-facebooks-software-engineers-prepare-messenger-for-new-years-eve</dc:identifier>
</item>
<item>
<title>Why I’m so “against” Ethereum</title>
<link>https://threadreaderapp.com/thread/1078682801954799617.html</link>
<guid isPermaLink="true" >https://threadreaderapp.com/thread/1078682801954799617.html</guid>
<description>&lt;span class=&quot;nop nop-start&quot;&gt;2/&lt;/span&gt; First, ETH’s architecture &amp;amp; culture is _opposite_ that of Bitcoin, and yet claims to offer same solutions: decentralization, immutability, SoV, asset issuance, smart contracts, …&lt;p&gt;Second, ETH is considered a crypto ‘blue chip’, thus colors perception of uninformed newcomers.&lt;/p&gt;</description>
<pubDate>Fri, 28 Dec 2018 23:57:55 +0000</pubDate>
<dc:creator>DyslexicAtheist</dc:creator>
<og:title>Thread by @TuurDemeester: &quot;1/ People often ask me why I’m so “against” Ethereum. Why do I go out of my way to point out flaws or make analogies that put it in a bad li […]&quot;</og:title>
<og:image>https://threadreaderapp.com/images/screenshots/thread/1078682801954799617.jpg</og:image>
<og:url>https://threadreaderapp.com/thread/1078682801954799617.html</og:url>
<og:description>Thread by @TuurDemeester: &quot;1/ People often ask me why I’m so “against” Ethereum. Why do I go out of my way to point out flaws or make analogi a bad light? 2/ First, ETH’s architecture &amp;amp; culture is _opposite_ that of Bitcoin, and yet claims to off […]&quot;</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://threadreaderapp.com/thread/1078682801954799617.html</dc:identifier>
</item>
<item>
<title>Teachers Quit Jobs at Highest Rate on Record</title>
<link>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</guid>
<description>&lt;p&gt;Teachers and other public education employees, such as community-college faculty, school psychologists and janitors, are quitting their jobs at the fastest rate on record, government data shows.&lt;/p&gt; &lt;p&gt;A tight labor market with historically low unemployment has encouraged Americans in a variety of occupations to quit their jobs at elevated rates, with the expectation they can find something better. But quitting among public educators stands out because the field is one where stability is viewed as a key perk and longevity often rewarded....
  &lt;/p&gt;</description>
<pubDate>Fri, 28 Dec 2018 23:20:23 +0000</pubDate>
<dc:creator>dpflan</dc:creator>
<og:title>Teachers Quit Jobs at Highest Rate on Record </og:title>
<og:description>Teachers and other public education employees—such as community-college faculty, school psychologists and janitors—are quitting their jobs at the fastest rate on record, government data show.</og:description>
<og:url>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</og:url>
<og:image>https://si.wsj.net/public/resources/images/B3-CT536_teache_SOC_20181227171926.jpg</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/teachers-quit-jobs-at-highest-rate-on-record-11545993052</dc:identifier>
</item>
<item>
<title>Things I Don’t Know as of 2018</title>
<link>https://overreacted.io/things-i-dont-know-as-of-2018/</link>
<guid isPermaLink="true" >https://overreacted.io/things-i-dont-know-as-of-2018/</guid>
<description>&lt;p&gt;People often assume that I know far more than I actually do. That’s not a bad problem to have and I’m not complaining. (Folks from minority groups often suffer the opposite bias despite their hard-earned credentials, and that &lt;em&gt;sucks&lt;/em&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this post I’ll offer an incomplete list of programming topics that people often wrongly assume that I know.&lt;/strong&gt; I’m not saying &lt;em&gt;you&lt;/em&gt; don’t need to learn them — or that I don’t know &lt;em&gt;other&lt;/em&gt; useful things. But since I’m not in a vulnerable position myself right now, I can be honest about this.&lt;/p&gt;
&lt;p&gt;Here’s why I think it’s important.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;First, there is often an unrealistic expectation that an experienced engineer knows every technology in their field. Have you seen a “learning roadmap” that consists of a hundred libraries and tools? It’s useful — but intimidating.&lt;/p&gt;
&lt;p&gt;What’s more, no matter how experienced you get, you may still find yourself switching between feeling capable, inadequate (“Impostor syndrome”), and overconfident (“Dunning–Kruger effect”). It depends on your environment, job, personality, teammates, mental state, time of day, and so on.&lt;/p&gt;
&lt;p&gt;Experienced developers sometimes open up about their insecurities to encourage beginners. But there’s a world of difference between a seasoned surgeon who still gets the jitters and a student holding their first scalpel!&lt;/p&gt;
&lt;p&gt;Hearing how “we’re all junior developers” can be disheartening and sound like empty talk to the learners faced with an actual gap in knowledge. Feel-good confessions from well-intentioned practitioners like me can’t bridge it.&lt;/p&gt;
&lt;p&gt;Still, even experienced engineers have many knowledge gaps. This post is about mine, and I encourage those who can afford similar vulnerability to share their own. But let’s not devalue our experience while we do that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We can admit our knowledge gaps, may or may not feel like impostors, and still have deeply valuable expertise that takes years of hard work to develop.&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;With that disclaimer out of the way, here’s just a few things I don’t know:&lt;/p&gt;
&lt;ul readability=&quot;46.5&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Unix commands and Bash.&lt;/strong&gt; I can &lt;code class=&quot;language-text&quot;&gt;ls&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;cd&lt;/code&gt; but I look up everything else. I get the concept of piping but I’ve only used it in simple cases. I don’t know how to use &lt;code class=&quot;language-text&quot;&gt;xargs&lt;/code&gt; to create complex chains, or how to compose and redirect different output streams. I also never properly learned Bash so I can only write very simple (and often buggy) shell scripts.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Low-level languages.&lt;/strong&gt; I understand Assembly lets you store things in memory and jump around the code but that’s about it. I wrote a few lines of C and understand what a pointer is, but I don’t know how to use &lt;code class=&quot;language-text&quot;&gt;malloc&lt;/code&gt; or other manual memory management techniques. Never played with Rust.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Networking stack.&lt;/strong&gt; I know computers have IP addresses, and DNS is how we resolve hostnames. I know there’s low level protocols like TCP/IP to exchange packets that (maybe?) ensure integrity. That’s it — I’m fuzzy on details.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Containers.&lt;/strong&gt; I have no idea about how to use Docker or Kubernetes. (Are those related?) I have a vague idea that they let me spin up a separate VM in a predictable way. Sounds cool but I haven’t tried it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Serverless.&lt;/strong&gt; Also sounds cool. Never tried it. I don’t have a clear idea of how that model changes backend programming (if it does at all).&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Microservices.&lt;/strong&gt; If I understand correctly, this just means “many API endpoints talking to each other”. I don’t know what are the practical advantages or downsides of this approach because I haven’t worked with it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Python.&lt;/strong&gt; I feel bad about this one — I &lt;em&gt;have&lt;/em&gt; worked with Python for several years at some point and I’ve never bothered to actually learn it. There are many things there like import behavior that are completely opaque to me.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Node backends.&lt;/strong&gt; I understand how to run Node, used some APIs like &lt;code class=&quot;language-text&quot;&gt;fs&lt;/code&gt; for build tooling, and can set up Express. But I’ve never talked from Node to a database and don’t really know how to write a backend in it. I’m also not familiar with React frameworks like Next beyond a “hello world”.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Native platforms.&lt;/strong&gt; I tried learning Objective C at some point but it didn’t work out. I haven’t learned Swift either. Same about Java. (I could probably pick it up though since I worked with C#.)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Algorithms.&lt;/strong&gt; The most you’ll get out of me is bubble sort and maybe quicksort on a good day. I can probably do simple graph traversing tasks if they’re tied to a particular practical problem. I understand the O(n) notation but my understanding isn’t much deeper than “don’t put loops inside loops”.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong&gt;Functional languages.&lt;/strong&gt; Unless you count JavaScript, I’m not fluent in any traditionally functional language. (I’m only fluent in C# and JavaScript — and I already forgot most of C#.) I struggle to read either LISP-inspired (like Clojure), Haskell-inspired (like Elm), or ML-inspired (like OCaml) code.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;Functional terminology.&lt;/strong&gt; Map and reduce is as far as I go. I don’t know monoids, functors, etc. I know what a monad is but maybe that’s an illusion.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Modern CSS.&lt;/strong&gt; I don’t know Flexbox or Grid. Floats are my jam.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;CSS Methodologies.&lt;/strong&gt; I used BEM (meaning the CSS part, not the original BEM) but that’s all I know. I haven’t tried OOCSS or other methodologies.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;SCSS / Sass.&lt;/strong&gt; Never got to learn them.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;CORS.&lt;/strong&gt; I dread these errors! I know I need to set up some headers to fix them but I’ve wasted hours here in the past.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;HTTPS / SSL.&lt;/strong&gt; Never set it up. Don’t know how it works beyond the idea of private and public keys.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;2&quot;&gt;
&lt;p&gt;&lt;strong&gt;GraphQL.&lt;/strong&gt; I can read a query but I don’t really know how to express stuff with nodes and edges, when to use fragments, and how pagination works there.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Sockets.&lt;/strong&gt; My mental model is they let computers talk to each other outside the request/response model but that’s about all I know.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Streams.&lt;/strong&gt; Aside from Rx Observables, I haven’t worked with streams closely. I used old Node streams one or two times but always messed up error handling.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Electron.&lt;/strong&gt; Never tried it.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;&lt;strong&gt;TypeScript.&lt;/strong&gt; I understand the concept of types and can read annotations but I’ve never written it. The few times I tried, I ran into difficulties.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Deployment and devops.&lt;/strong&gt; I can manage to send some files over FTP or kill some processes but that’s the limit of my devops skills.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;&lt;strong&gt;Graphics.&lt;/strong&gt; Whether it’s canvas, SVG, WebGL or low-level graphics, I’m not productive in it. I get the overall idea but I’d need to learn the primitives.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Of course this list is not exhaustive. There are many things that I don’t know.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;It might seem like a strange thing to discuss. It even feels wrong to write it. Am I boasting of my ignorance? My intended takeaway from this post is that:&lt;/p&gt;
&lt;ul readability=&quot;0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Even your favorite developers may not know many things that you know.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;strong&gt;Regardless of your knowledge level, your confidence can vary greatly.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;strong&gt;Experienced developers have valuable expertise despite knowledge gaps.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I’m aware of my knowledge gaps (at least, some of them). I can fill them in later if I become curious or if I need them for a project.&lt;/p&gt;
&lt;p&gt;This doesn’t devalue my knowledge and experience. There’s plenty of things that I can do well. For example, learning technologies when I need them.&lt;/p&gt;
</description>
<pubDate>Fri, 28 Dec 2018 22:40:14 +0000</pubDate>
<dc:creator>nhebb</dc:creator>
<og:url>https://overreacted.io/things-i-dont-know-as-of-2018/</og:url>
<og:title>Things I Don’t Know as of 2018</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://overreacted.io/things-i-dont-know-as-of-2018/</dc:identifier>
</item>
<item>
<title>Audiophiles in Japan Are Installing Their Own Power Poles</title>
<link>https://www.wsj.com/articles/a-gift-for-music-lovers-who-have-it-all-a-personal-utility-pole-1471189463</link>
<guid isPermaLink="true" >https://www.wsj.com/articles/a-gift-for-music-lovers-who-have-it-all-a-personal-utility-pole-1471189463</guid>
<description>&lt;p&gt;TOKYO—Takeo Morita wanted absolutely the best fidelity possible from his audio system, so he bought a utility pole.&lt;/p&gt; &lt;p&gt;The 82-year-old lawyer already had a $60,000 American-made amplifier, 1960s German loudspeakers that once belonged to a theater, Japanese audio cables threaded with gold and silver, and other pricey equipment.&lt;/p&gt; &lt;p&gt;Normal electricity...
  &lt;/p&gt;</description>
<pubDate>Fri, 28 Dec 2018 21:09:58 +0000</pubDate>
<dc:creator>tlrobinson</dc:creator>
<og:title>A Gift for Music Lovers Who Have It All: A Personal Utility Pole</og:title>
<og:description>Japan’s extreme audiophiles install private utility poles and transformers for ‘pure’ electricity.</og:description>
<og:url>https://www.wsj.com/articles/a-gift-for-music-lovers-who-have-it-all-a-personal-utility-pole-1471189463</og:url>
<og:image>https://si.wsj.net/public/resources/images/BN-PJ946_JSOUND_TOP_20160814140701.jpg</og:image>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.wsj.com/articles/a-gift-for-music-lovers-who-have-it-all-a-personal-utility-pole-1471189463</dc:identifier>
</item>
<item>
<title>What Happens to Kid Culture When Streets Are Closed to Cars</title>
<link>https://www.citylab.com/design/2018/11/car-free-pedestrianization-made-pontevedra-spain-kid-friendly/576268/</link>
<guid isPermaLink="true" >https://www.citylab.com/design/2018/11/car-free-pedestrianization-made-pontevedra-spain-kid-friendly/576268/</guid>
<description>&lt;img class=&quot;c-lead-image__img&quot; srcset=&quot;https://cdn.citylab.com/media/img/citylab/2018/11/credit_pontevedra_city_council_DSC_5451/300.jpg?mod=1543247666&quot; alt=&quot;Kids play soccer in a main square without cars.&quot; itemprop=&quot;contentUrl&quot; onload=&quot;performance.mark(&amp;quot;citylab_lead_image_loaded&amp;quot;)&quot;/&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;c-lead-image__img&quot; src=&quot;https://cdn.citylab.com/media/img/citylab/2018/11/credit_pontevedra_city_council_DSC_5451/300.jpg?mod=1543247666&quot; alt=&quot;Kids play soccer in a main square without cars.&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt; &lt;span class=&quot;c-lead-image__caption&quot; itemprop=&quot;caption&quot;&gt;Kids play soccer on a carless street in Pontevedra.&lt;/span&gt; &lt;span class=&quot;c-lead-image__attribution&quot; itemprop=&quot;creator&quot;&gt;Pontevedra City Council&lt;/span&gt;

&lt;h2 class=&quot;l-article__dek o-small-container&quot; itemprop=&quot;description&quot;&gt;In the Spanish city Pontevedra, a family-friendly “pedestrianization” policy has helped increase the population of kids, despite the country’s low birth rates.&lt;/h2&gt;
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-1&quot; readability=&quot;74&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;PONTEVEDRA—Once a city with narrow streets invaded by traffic and city squares more like parking lots, the roads of Pontevedra, Spain, are now often filled with baby strollers and children playing. Kids carry their toys in small backpacks and spread them on the pavement to share with other kids. Playgrounds with swing sets and slides are deliberately unencumbered by fences. “We want children to play all over our city, and to play whatever game comes to mind,” said Cesar Mosquera, the Urban Councilor of Pontevedra.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;By restricting traffic and eliminating physical barriers, the city council has redesigned Pontevedra from the sight line of a child. Doing so, Mosquera believes, helps the city address everybody’s needs, especially the disadvantaged. “Where there are children, there are healthy adults,” Mosquera said. The policy, which has been expanding for almost two decades now, has had many impacts on the community. One of the most tangible: The once-languishing historic city center has become a friendlier space for kids and their caretakers.&lt;/p&gt;
&lt;/section&gt;
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-2&quot; readability=&quot;89.339207048458&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;This trend is reflected in the demographics of Pontevedra. The city has attracted young families from throughout Spain’s northwest region to settle in the city, even as Spain overall &lt;a href=&quot;https://www.reuters.com/article/us-spain-economy-population/spanish-deaths-outpace-births-at-fastest-rate-since-records-began-in-1941-idUSKBN1JF1C3&quot;&gt;grapples with low birth rates&lt;/a&gt;. In the last decade, Pontevedra has experienced the most growth compared to other major cities in the region of Galicia. The newly revitalized, now pedestrian-focused town grew from 73,871 neighbors in 1998 to 82,671 in 2017&lt;strong&gt;,&lt;/strong&gt; according to the Statistics Institute of Galicia.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Since pedestrianization started in 2000, the population of kids age 0 to 14 also increased by 8 percent in Pontevedra, compared to 3.2 percent in Galicia’s capital Santiago de Compostela and 2.4 percent in Vigo, the region’s economic hub.&lt;/p&gt;
&lt;a href=&quot;https://www.citylab.com/special-report/room-to-grow/&quot;&gt;&lt;img alt=&quot;&quot; data-srcset=&quot;https://cdn.theatlantic.com/assets/media/img/posts/2018/08/8_Room_to_Grow_Bug_01/21bfcd440.png&quot; class=&quot;lazyload&quot;/&gt;&lt;/a&gt;
&lt;p dir=&quot;ltr&quot;&gt;“Here you don’t have to hold your child’s hand all the time. In any other city that would only happen inside a mall,” said Willy García, father of three-year-old Mauro, standing at the pedestrian “Children’s Fountain” square, once an intersection with 25,000 cars passing daily.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Rather than go for suburban life in the big metropolitan areas, the García family opted for a mid-sized town. It’s a common refrain among those who relocated to the area. Marolia Otero, mother of Gabriel and Lola, ages five and three, said she moved to Pontevedra because in places like Vigo, the region’s economic hub, the costs of housing were much greater. In larger cities, those costs would mean living in the far-out suburbs, with longer commutes that leave parents less time with their kids. In Pontevedra, many services are within walking distance.&lt;/p&gt;
&lt;/section&gt;
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-3&quot; readability=&quot;73.131115459883&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Carlos Ferrás, an expert in demography and a lecturer of Human Geography at Santiago de Compostela University (USC), says the urban planning-centered approach has been more effective at fostering a parent-friendly environment than other policies some governments have adopted to try to directly increase birth rates.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“Birth-incentive policies—like one-off compensations per newborn—have proved to be &lt;a href=&quot;https://www.citylab.com/life/2018/08/south-korea-needs-more-babies/565169/&quot;&gt;unsuccessful&lt;/a&gt;. If we want to end Spain’s aging drama, we must look for parenting policies, measures that help parents raise their kids, starting with urban planning,” said Ferrás.&lt;/p&gt;
&lt;section class=&quot;c-newsletter c-newsletter--promo c-newsletter--cta&quot;&gt;&lt;h2 class=&quot;c-newsletter__title&quot;&gt;Cities are changing fast. Keep up with the &lt;strong&gt;CityLab Daily&lt;/strong&gt; newsletter.&lt;/h2&gt;
&lt;label for=&quot;promo-email-input-email&quot; class=&quot;c-newsletter__cta c-newsletter__cta--promo&quot;&gt;The best way to follow issues you care about.&lt;/label&gt;

&lt;/section&gt;&lt;p dir=&quot;ltr&quot;&gt;“The city council has run a very successful strategy, promoting attractive and affordable residential developments in the urban area rather than in the suburbs, and an urban model that is sustainable, greener, convenient, and designed to support citizens throughout their parenting process.”&lt;/p&gt;
&lt;/section&gt;&lt;img alt=&quot;&quot; data-srcset=&quot;https://cdn.theatlantic.com/assets/media/img/posts/2018/11/IMG_20180806_201702_2/d3f82e1ad.jpg&quot; class=&quot;lazyload&quot;/&gt;A pedestrianized street in Pontevedra. (Jaime Velazquez)
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-4&quot; readability=&quot;81&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Pontevedra has continued to expand the pedestrian area from the center to the outskirts, liberating a total 669,000 square meters previously dominated by cars, and the transformation is still ongoing. Car use in the inner city has dropped by 77 percent, and CO2 emissions have dropped by 66 percent, according to the city council. The crime rate has gone down, too, adding to the feeling that the city is safe for unattended kids. In 2010, Pontevedra reached its lowest crime rate in a decade with 34 offenses per 1,000 citizens, and last year it reached a new low of 27.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Surprisingly, cars are not strictly banned inside the city. Residents with a private garage can bring their cars in, and traffic is open to delivery services, emergencies, and even to private drivers who need to stop by the center for a pick-up or drop-off.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;One of the most impactful policies on human behavior has actually been removing most of the street parking space inside the pedestrian-priority area. “We found that almost 60 percent of vehicles circulating inside town were actually going around in circles trying to find a parking spot. Now, since they know they won’t be able to park, they have stopped bringing their cars in and they use the outer parking areas,” Mosquera explained.&lt;/p&gt;
&lt;/section&gt;
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-5&quot; readability=&quot;57&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;“It is a very safe environment. With no cars, you don’t have to worry about them being run over,” Otero said. “And since there are a lot of parents with kids, and we all end up knowing each other. Sometimes you can even ask a friend to look after your kids while you quickly run errands.”&lt;/p&gt;
&lt;/section&gt;&lt;img alt=&quot;&quot; data-srcset=&quot;https://cdn.theatlantic.com/assets/media/img/posts/2018/11/roller_skating/bd527da62.jpg&quot; class=&quot;lazyload&quot;/&gt;(Pontevedra City Council)
&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-6&quot; readability=&quot;76&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;For Ferrás, the demographer, this might be Pontevedra’s key to success: a social and urban environment that makes parents feel supported by the community. In Pontevedra, 80 percent of kids age 6 to 12 walk alone to school every morning, and in case they need help, they can report to volunteering local businesses, where they will be looked after.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“Cities must be designed so citizens can afford being a parent—an urban model that favors work-family reconciliation. They need to feel accompanied through the process and [that they are in] an ecosystem that values childhood and teenhood.”&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;It has happened that these policies ended up paying off at the ballot box, too. In a town that votes conservative in the general elections, Mosquera’s leftist-nationalist political coalition, BNG, has been ruling ever since the pedestrianization program began in 1999. Its urban model has been awarded a number of prizes, including the UN-Habitat Dubai International prize in 2014 and the 2015 Center for Active Design award, among others.&lt;/p&gt;
&lt;/section&gt;&lt;aside class=&quot;c-related-content u-full-width u-lazy lazyload&quot; data-include=&quot;css:https://cdn.citylab.com/static/a/frontend/dist/citylab/css/components/related-content.188fbf9984d0.css&quot;&gt;&lt;h4 class=&quot;c-related-content__title&quot;&gt;Recommended&lt;/h4&gt;

&lt;/aside&gt;&lt;section class=&quot;s-article__section o-small-container&quot; id=&quot;article-section-7&quot; readability=&quot;74&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;The early resistance of neighbors and local businessmen who feared the absence of cars would mean an absence of customers are well over. Even for the opposition parties challenging BNG’s 20-year dominance, reversing pedestrianization is now likely out of the question. Still, some of those living outside the flourishing pedestrian area are the ones who have the most criticism of the policy, saying they’ve been excluded from Pontevedra’s urban improvements, and that the lack of a working public transit network has forced them to either take their car and deal with the limited parking space available or simply stay away from town.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;As part of the city’s strategy for work-family balance, schools are kept in the city center and the maternity and pediatric services have been moved from the big hospital complex outside town to a smaller facility right in the pedestrian area. Families with children in Pontevedra also benefit from a wide range of cultural activities tailored for kids. The local theater offers a play every Sunday for children under 12, the central food market hosts workshops for kids on Saturday afternoons, and the city libraries have a year-round activity program for them. During the summer, public urban boot camps take care of the kids while their parents work.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;“It is like building a nest,” said Carmen Fouces, Pontevedra’s culture councilor. “If you put some fluff and straws on a branch, a bird will soon make it its home.”&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;s-article__section o-small-container c-foundation-line&quot; readability=&quot;29.371727748691&quot;&gt;&lt;p&gt;Funding was provided by the Bernard van Leer Foundation to support our project, “Room to Grow,” about raising tiny humans in the city. Sign up &lt;a href=&quot;https://docs.google.com/forms/d/e/1FAIpQLSerzV3tqrlwRSmYAmFowFvv1tmyFKB11rLKAXkVc4rMkMAzlA/viewform&quot;&gt;here&lt;/a&gt; to receive email updates on the series.&lt;/p&gt;
&lt;/section&gt;&lt;section class=&quot;c-authors-article u-lazy lazyload&quot; data-include=&quot;css:https://cdn.citylab.com/static/a/frontend/dist/citylab/css/components/author-article.e6996e6bb587.css&quot;&gt;&lt;h4 class=&quot;c-authors-article__about-title&quot;&gt;About the Author&lt;/h4&gt;
&lt;section class=&quot;c-author-article&quot; itemprop=&quot;author&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/Person&quot; readability=&quot;13.188405797101&quot;&gt;&lt;div class=&quot;c-author-article__content&quot; readability=&quot;16.231884057971&quot;&gt;
&lt;h5 class=&quot;c-author-article__title&quot; itemprop=&quot;name&quot;&gt;&lt;a class=&quot;c-author-article__link&quot; href=&quot;https://www.citylab.com/authors/jaime-velazquez/&quot;&gt;Jaime Velazquez&lt;/a&gt;&lt;/h5&gt;
&lt;p class=&quot;c-author-article__bio&quot; itemprop=&quot;description&quot;&gt;&lt;a href=&quot;https://www.citylab.com/authors/jaime-velazquez/&quot; class=&quot;author-link&quot; data-omni-click=&quot;inherit&quot;&gt;Jaime Velazquez&lt;/a&gt; is a journalist based in Madrid&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;/section&gt;</description>
<pubDate>Fri, 28 Dec 2018 20:07:35 +0000</pubDate>
<dc:creator>anonymfus</dc:creator>
<og:description>For one thing, the population of young kids is increasing, even as the country struggles with low birth rates.</og:description>
<og:image>https://cdn.citylab.com/media/img/citylab/2018/11/credit_pontevedra_city_council_DSC_5451/facebook.jpg?1543247666</og:image>
<og:title>What Happened When This Spanish City Went Car-Free</og:title>
<og:type>article</og:type>
<og:url>https://www.citylab.com/design/2018/11/car-free-pedestrianization-made-pontevedra-spain-kid-friendly/576268/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.citylab.com/design/2018/11/car-free-pedestrianization-made-pontevedra-spain-kid-friendly/576268/</dc:identifier>
</item>
<item>
<title>Fundamental rule of traffic: building new roads makes people drive more (2015)</title>
<link>https://www.vox.com/2014/10/23/6994159/traffic-roads-induced-demand</link>
<guid isPermaLink="true" >https://www.vox.com/2014/10/23/6994159/traffic-roads-induced-demand</guid>
<description>&lt;p&gt;&lt;em&gt;This article is part of a&lt;/em&gt; &lt;em&gt;&lt;a href=&quot;http://www.vox.com/2015/4/29/8513699/future-of-commuting&quot; sl-processed=&quot;1&quot;&gt;series about the past, present, and future of commuting in America&lt;/a&gt;&lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For people who are constantly stuck in traffic jams during their commutes, there seems to be an obvious solution: just widen the roads.&lt;/p&gt;
&lt;p&gt;This makes intuitive sense. Building new lanes (or new highways entirely) adds capacity to road systems. And traffic, at its root, is a volume problem — there are too many cars trying to use not enough road.&lt;/p&gt;
&lt;p&gt;But there's a fundamental problem with this idea. Decades of traffic data across the United States shows that adding new road capacity doesn't actually improve congestion. &lt;span&gt;The latest example of this is the&lt;/span&gt; &lt;span&gt;widening of Los Angeles' I-405 freeway, which was completed last May after five years of construction and a cost of&lt;/span&gt; &lt;a href=&quot;http://media.metro.net/projects_studies/pm/images/pm_october_2013_i405_sepulveda_pass_improvements2.pdf&quot; target=&quot;_blank&quot;&gt;over $1 billion&lt;/a&gt;&lt;span&gt;. &quot;The data shows that traffic is moving&lt;/span&gt; &lt;a href=&quot;http://la.curbed.com/archives/2014/10/405_commutes_now_a_minute_worse_than_before_carpool_lane.php&quot; target=&quot;_blank&quot;&gt;slightly slower&lt;/a&gt; &lt;span&gt;now on 405 than before the widening,&quot; says&lt;/span&gt; &lt;a href=&quot;http://www.econ.brown.edu/fac/Matthew_Turner/&quot; target=&quot;_blank&quot;&gt;Matthew Turner&lt;/a&gt;&lt;span&gt;, a Brown University economist.&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;The main reason, Turner has found, is simple — adding road capacity spurs people to drive more miles, either by taking more trips by car or taking longer trips than they otherwise would have. He and University of Pennsylvania economist &lt;a href=&quot;https://real-estate.wharton.upenn.edu/profile/21470/&quot; target=&quot;_blank&quot;&gt;Gilles Duranton&lt;/a&gt; call this the &quot;&lt;a href=&quot;http://www.econ.brown.edu/fac/Matthew_Turner/papers/published/Duranton_Turner_AER_2011.pdf&quot; target=&quot;_blank&quot;&gt;fundamental rule&lt;/a&gt;&quot; of road congestion: adding road capacity just increases the total number of miles traveled by all vehicles.&lt;/p&gt;
&lt;p&gt;This is because, for the most part, drivers aren't charged for using roads. So it's not surprising that a valuable resource, given away for free, leads people to use more of it. Economists see this &lt;span&gt;phenomenon in a&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.vox.com/2014/6/27/5849280/why-free-parking-is-bad-for-everyone&quot;&gt;lot of places&lt;/a&gt;&lt;span&gt;, and call it&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Induced_demand&quot;&gt;induced demand&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you really want to cut down on traffic, Turner says, there's only one option: charge people to use roads when they're crowded, a policy known as&lt;/span&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Congestion_pricing&quot; target=&quot;_blank&quot;&gt;congestion pricing&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;The surprising data: building roads doesn't reduce traffic&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/HF3s8_uuGSWTpfK8GDtpUYa81xg=/0x0:3000x2000/320x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/gmbFeVYOd9AJB1850eAzY984Wmk=/0x0:3000x2000/520x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 520w, https://cdn.vox-cdn.com/thumbor/S3VLiTlX1a-DqGL-0rHgb-iOqw0=/0x0:3000x2000/720x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 720w, https://cdn.vox-cdn.com/thumbor/zETmvF6DafsiKFPyb9_W-UaLoWc=/0x0:3000x2000/920x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/Vd4SXxOBh7iT_-oJbkF_md8L1hI=/0x0:3000x2000/1120x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 1120w, https://cdn.vox-cdn.com/thumbor/iM345Ys2fmLat0x36kbtn6CH4Wo=/0x0:3000x2000/1320x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 1320w, https://cdn.vox-cdn.com/thumbor/JL1mSwoN5bdy-wqEg8DugPe91Ms=/0x0:3000x2000/1520x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 1520w, https://cdn.vox-cdn.com/thumbor/bpiFIVMOs1mSkeTxlmtSVeak8ow=/0x0:3000x2000/1720x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 1720w, https://cdn.vox-cdn.com/thumbor/oc0FBxwstUYHQ8FEsb83lsI72vc=/0x0:3000x2000/1920x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;traffic 2&quot; data-upload-width=&quot;3000&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/ZaYfTYWSpBzG6cMwUh5j2TaTRCw=/0x0:3000x2000/1200x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383776/167503533.0.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;(David McNew/Getty Images)&lt;/p&gt;
&lt;p&gt;In the United States, city planners and traffic engineers have long acted on the belief that adding road capacity will reduce traffic. But no one had ever tested this idea empirically. One reason is that it's a difficult thing to analyze. Researchers can't exactly conduct a controlled study, giving randomly selected cities different amounts of road space simply for the purpose of an experiment.&lt;/p&gt;
&lt;p&gt;So Turner and Duranton did their best to get around this by using a few novel methods. In an influential &lt;a href=&quot;http://www.nber.org/papers/w15376&quot; target=&quot;_blank&quot;&gt;2011 paper&lt;/a&gt;, they looked at the total capacity of highways in each metropolitan area in the US and compared it with the total number of vehicle miles traveled.&lt;/p&gt;
&lt;p&gt;They found a one-to-one correlation: the more highway capacity a metro area had, the more miles its vehicles traveled on them. A 10 percent increase in capacity, for instance, meant a 10 percent increase in vehicle miles, on average. But that, on its own, wasn't conclusive. &quot;This could just be telling you that urban planners are smart, and are building roads in places that people want to use them,&quot; Turner says.&lt;/p&gt;
&lt;p&gt;&lt;q class=&quot;right&quot; aria-hidden=&quot;true&quot;&gt;a 10 percent increase in road capacity meant, on average, a 10 percent increase in vehicle miles&lt;/q&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So, to try to isolate the&lt;/span&gt; &lt;span&gt;effect&lt;/span&gt; &lt;span&gt;of building roads, the economists then compared changes in highway capacity between 1983 and 2003 to the changes in vehicle miles traveled. &quot;Again, we saw a direct one-to-one correlation across all cities,&quot; Turner says. This correlation also held up when the economists compared roads &lt;em&gt;within&lt;/em&gt; cities: added road capacity consistently led to more driving.&lt;/span&gt; &lt;span&gt;Still, even this wasn't conclusive. It could, after all, simply be a function of planners making good decisions —&lt;/span&gt; &lt;span&gt;perfectly anticipating unmet driving demand.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As a final step, then, the economists tried to isolate a few different sets of roads that were planned with no regard to current driving patterns — newly built roads that were part of the original 1947 &lt;a target=&quot;_blank&quot; href=&quot;http://commons.wikimedia.org/wiki/File:Interstate_Highway_plan_August_2,_1947_big_text.jpg&quot;&gt;interstate highway plan&lt;/a&gt; (which was based on 1940s population levels, not 80s and 90s), and those that followed 19th century railroad rights-of-way, or 18th and 19th century routes taken by explorers. &lt;span&gt;&quot;We saw exactly the same effect here too,&quot; Turner says.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This finding has since&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.vtpi.org/gentraf.pdf&quot;&gt;been replicated&lt;/a&gt; &lt;span&gt;with Japanese and British data. It doesn't seem to be an effect of optimized planning. Again and again, more roads lead to more driving — with no reduction in congestion.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Turner and Duranton have also found that&lt;/span&gt; &lt;span&gt;public transportation doesn't really help alleviate congestion either — even if it takes some people out of cars and puts them on buses or trains, the empty road space will be quickly filled up by new vehicle-miles. Other&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.citylab.com/commute/2013/04/public-transportation-does-relieve-traffic-congestion-just-not-everywhere/5149/&quot;&gt;researchers have found&lt;/a&gt; &lt;span&gt;exceptions to this rule (say, when a transit route parallels heavy commuting corridors)&lt;/span&gt; but it doesn't seem to be a large-scale traffic solution, at least given the way US cities are currently built. (Note that transit can have other beneficial effects, like &lt;a target=&quot;_blank&quot; href=&quot;http://www.citylab.com/commute/2014/08/7-charts-that-show-how-good-mass-transit-can-make-a-city-more-affordable/379084/&quot;&gt;making a city more affordable&lt;/a&gt;. But it doesn't seem to have much effect on congestion.)&lt;/p&gt;
&lt;h3&gt;How new roads make people drive more&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/NrqM_K7d-JyByI6tL7DdaNf1Fxw=/0x0:3000x2000/320x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/s3Ul4qCMrHmohRUpthE7hspDF-U=/0x0:3000x2000/520x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 520w, https://cdn.vox-cdn.com/thumbor/M0U6Rl0NuBWFR5xLagCAegavKAU=/0x0:3000x2000/720x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 720w, https://cdn.vox-cdn.com/thumbor/YVnBve95qR01n6Dqxk5jPqg4gc8=/0x0:3000x2000/920x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/AQAEkN4G-F0GMUX7ugRtuskI6cU=/0x0:3000x2000/1120x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 1120w, https://cdn.vox-cdn.com/thumbor/tzyc_jkYfolZA_IuVjuu8w3cEb8=/0x0:3000x2000/1320x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 1320w, https://cdn.vox-cdn.com/thumbor/Wlz5DP0S-Ii8F-QIwii3wjqZE24=/0x0:3000x2000/1520x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 1520w, https://cdn.vox-cdn.com/thumbor/T9ZYrRNqRjPOWhz61CyTNcke2NY=/0x0:3000x2000/1720x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 1720w, https://cdn.vox-cdn.com/thumbor/jqCP7YrpQABQyiaExpy0grgEKps=/0x0:3000x2000/1920x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;traffic 3&quot; data-upload-width=&quot;3000&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/UZnNtCsZaGkSkpiOaogezNp4NcE=/0x0:3000x2000/1200x0/filters:focal(0x0:3000x2000):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383780/452281685.0.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;(Scott Olson/Getty Images)&lt;/p&gt;
&lt;p&gt;So why does traffic increase when new road capacity is added? Turner and Duranton attribute about half of the effect to &lt;span&gt;people's driving decisions.&lt;/span&gt; &lt;span&gt;&quot;Think of it as if you made a bunch of hamburgers and then gave them all away,&quot; Turner says. &quot;If you make hamburgers free, people will eat more of them.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;By way of illustration, consider the following situation: there's a store where you know you can save $10 on something you need to buy, but it's 10 miles away. If you assume there will be terrible traffic and it'll take 30 minutes to get there, you'll just buy the product at a closer store. However, if a new lane gets added to a highway that will speed your journey there, you'll decide it's worth it.&lt;/p&gt;


&lt;p&gt;Over time, thousands of people will make this calculation — along with similar ones, like deciding to drive a few blocks rather than walk, because it'll be faster, or choosing to move farther from work, in exchange for a bigger house, because they assume the distance can be covered quickly. Eventually, they increased miles they drive will go a long way towards filling up the new, expensive roads that municipalities went to so much trouble to build. (As a navigation device company's &lt;a target=&quot;_blank&quot; href=&quot;http://morallymarketed.com/wp-content/uploads/2013/04/5260106747_a64f44d0ca_z.jpg&quot;&gt;billboard&lt;/a&gt; once told drivers, &quot;You are not stuck in traffic. You are traffic.&quot;) Some people might then opt not to drive, but ultimately, the roads will reach the same equilibrium of traffic they had before.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/Gpg6pIpDqjstXh7HI4CLuee-qoM=/0x0:855x632/320x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 320w, https://cdn.vox-cdn.com/thumbor/nxYyG8dUtSaUHLmskFVcHIjik_Y=/0x0:855x632/520x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 520w, https://cdn.vox-cdn.com/thumbor/YFcAkqsCTnbJyTVnTngp3Wzvw48=/0x0:855x632/720x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 720w, https://cdn.vox-cdn.com/thumbor/i7HtGqFg0bi3IMlLPII_97p_y4w=/0x0:855x632/920x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 920w, https://cdn.vox-cdn.com/thumbor/CERXbjjjN4BLt0ug9REbwh24cNI=/0x0:855x632/1120x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 1120w, https://cdn.vox-cdn.com/thumbor/U621aneg5HRYWANQrgXTOHld1I4=/0x0:855x632/1320x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 1320w, https://cdn.vox-cdn.com/thumbor/3c8sZMylVaHb9vyLTlrQSAbfvv4=/0x0:855x632/1520x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 1520w, https://cdn.vox-cdn.com/thumbor/ve8t1VWmXhWt5_TfVyK3n-oe5vo=/0x0:855x632/1720x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 1720w, https://cdn.vox-cdn.com/thumbor/5kceI6xMALX6D1n0VihfRdsqvzo=/0x0:855x632/1920x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;induced demand&quot; data-upload-width=&quot;855&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/oLV8eZqKRLNuQg4rzTZX3rNEFss=/0x0:855x632/1200x0/filters:focal(0x0:855x632):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383768/Screen_Shot_2014-10-23_at_8.43.38_AM.0.png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;A model showing how induced demand works. Typically, traffic volume levels off and reaches an equilibrium over tine, but when new capacity gets added, the volume increases to fill it, before reaching a new equilibrium. (&lt;a href=&quot;http://www.vtpi.org/gentraf.pdf&quot;&gt;Victoria Transport Policy Institute&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;A few other factors also contribute to induced demand. The economists noticed increased truck traffic in the areas with more new road building — partly an effect of long-haul trucking companies optimizing their routes to take advantage of newly built roads, and partly an effect of industries that rely heavily on transportation moving in to an area to do the same.&lt;/p&gt;
&lt;p&gt;Lastly, the researchers attribute some of the effect to individual people moving to an area to follow new road capacity as well.&lt;/p&gt;
&lt;h3&gt;How to actually solve the traffic problem&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;e-image__inner&quot;&gt;&lt;span class=&quot;e-image__image&quot; data-original=&quot;https://cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg&quot;&gt; &lt;img srcset=&quot;https://cdn.vox-cdn.com/thumbor/eqJCp_X2bbcHQzeCGDMm2h5JL4s=/0x0:3000x2013/320x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 320w, https://cdn.vox-cdn.com/thumbor/qTxnKfe8_EyhJWKDh_c7LRX0UQU=/0x0:3000x2013/520x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 520w, https://cdn.vox-cdn.com/thumbor/ixApLu7z0UJAI97JUK2Kc3_8_Bk=/0x0:3000x2013/720x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 720w, https://cdn.vox-cdn.com/thumbor/SY61hUm5GPgEZDwFJFTYpw1W548=/0x0:3000x2013/920x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 920w, https://cdn.vox-cdn.com/thumbor/TnsW8AY1XVnksgVcV62jugk4KAs=/0x0:3000x2013/1120x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 1120w, https://cdn.vox-cdn.com/thumbor/2DTNcF_jyLqnbBGjz8c8FUcBPa4=/0x0:3000x2013/1320x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 1320w, https://cdn.vox-cdn.com/thumbor/-Aeda2PDRVWJxdd6y9ClTYIpxnw=/0x0:3000x2013/1520x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 1520w, https://cdn.vox-cdn.com/thumbor/e-2eetKOKmHlYcghfZRxd-kyAQs=/0x0:3000x2013/1720x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 1720w, https://cdn.vox-cdn.com/thumbor/-pTBAx6rKeyGmXx_k8XKQlLpR0w=/0x0:3000x2013/1920x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg 1920w&quot; sizes=&quot;(min-width: 1221px) 846px, (min-width: 880px) calc(100vw - 334px), 100vw&quot; alt=&quot;congestion pricig&quot; data-upload-width=&quot;3000&quot; src=&quot;https://cdn.vox-cdn.com/thumbor/hzU484OhisOvuVKf8Ux1T5dU23I=/0x0:3000x2013/1200x0/filters:focal(0x0:3000x2013):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/2383784/85445893.0.jpg&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;caption&quot;&gt;London's congestion pricing scheme. (Oli Scarff/Getty Images)&lt;/p&gt;
&lt;p&gt;Turner notes that traffic isn't necessarily a bad thing: &lt;span&gt;it's a sign that lots of people want to use the roads in a certain area. If you want transport-heavy industry and new residents to move to your city, then new roads are an infrastructure investment that appear to attract them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;However, if your goal is reducing traffic congestion, this research shows that &lt;span&gt;adding road capacity won't do it. But there&lt;/span&gt; &lt;span&gt;is a way: congestion pricing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Essentially, y&lt;/span&gt;&lt;span&gt;ou charge people for access to roads at the times they're congested,&quot; Turner says. At rush hour, using a road costs more than in the middle of the night. Only a few cities — like London and Singapore — have tried this sort of scheme so far, but&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://www.vtpi.org/london.pdf&quot;&gt;research shows&lt;/a&gt; &lt;span&gt;that it has appreciably reduced traffic by shifting behavior. People opt out of making some trips, or shift them to times when the roads won't be so busy, ultimately cutting down on traffic.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;q class=&quot;right&quot; aria-hidden=&quot;true&quot;&gt;'you charge people for access to roads at the times they're congested'&lt;/q&gt;&lt;/p&gt;
&lt;p&gt;One criticism of these sorts of schemes is that they're regressive: they impact the poor much more than the wealthy, and effectively ease the commutes of people who can pay the tolls.&lt;/p&gt;
&lt;p&gt;There's certainly some truth to this. But at the same time, the current system (which is &lt;a target=&quot;_blank&quot; href=&quot;http://www.vox.com/2014/5/6/5683822/the-us-highway-funding-crisis-in-six-charts&quot;&gt;relying less and less on gas taxes&lt;/a&gt;, which roughly correlate with usage) also has enormous costs, they're just less visible.&lt;/p&gt;
&lt;p&gt;The mechanisms we use to currently pay for new roads might be less regressive, but they decouple &lt;span&gt;road usage from payment, a huge long-term problem&lt;/span&gt;&lt;span&gt;.&lt;/span&gt; &lt;span&gt;&quot;If you have something valuable that you're giving away, and you don't have enough of it, you can either just build more and more and keep giving it away and never have enough, or you can start charging people for access,&quot; Turner says.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are now all sorts of&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://thinkprogress.org/economy/2014/07/08/3441549/road-usage-fees/&quot;&gt;high-tech ways&lt;/a&gt; &lt;span&gt;to toll cars based on the distance they drive; perhaps you could create a system that also takes a person's income into account, which would let you make a progressive form of congestion pricing&lt;/span&gt;&lt;span&gt;. &quot;Consider the alternatives:&lt;/span&gt; &lt;span&gt;congested travel, with tons of money spent on expansion projects,&quot; Turner says, &quot;or&lt;/span&gt; &lt;span&gt;congestion pricing, which'll really bother us at first, but change our behavior and actually solve the problem.&quot;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Dec 2018 18:58:08 +0000</pubDate>
<dc:creator>jseliger</dc:creator>
<og:description>Why we can't build our way out of our traffic problems</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/h-5FbhRo20tM8T6Lhk6VtOWQTYc=/0x125:3000x1813/1600x900/cdn.vox-cdn.com/uploads/chorus_image/image/42522848/134002823.0.0.jpg</og:image>
<og:title>The &quot;fundamental rule&quot; of traffic: building new roads just makes people drive more</og:title>
<og:type>article</og:type>
<og:url>https://www.vox.com/2014/10/23/6994159/traffic-roads-induced-demand</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.vox.com/2014/10/23/6994159/traffic-roads-induced-demand</dc:identifier>
</item>
<item>
<title>911 emergency services go down across the US after CenturyLink outage</title>
<link>https://techcrunch.com/2018/12/28/911-service-outage-centurylink/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/12/28/911-service-outage-centurylink/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;911 emergency services in several states across the U.S. went down after a massive outage at a CenturyLink data center.&lt;/p&gt;
&lt;p&gt;The outage began after 12pm ET on Thursday, &lt;a href=&quot;https://status.ctl.io/history/68d99a34-94e8-4fdf-af20-8612e335f97d&quot;&gt;according to CenturyLink’s status page&lt;/a&gt;, and caused disruption across 911 call centers through Friday. Some states saw their services restored throughout the day. CenturyLink did not sy what caused the outage beyond an issue with a “network element,” but said around 11am ET on Friday that the company said that it was “&lt;span&gt;seeing good progress, but our service restoration work is not complete.”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;After 8pm on Friday, more than a day later, CenturyLink confirmed that “all consumer services impacted by this event, including voice and 911, have been restored.”&lt;/p&gt;
&lt;p&gt;CenturyLink, one of the largest telecommunications providers in the U.S., provides internet and phone backbone services to major cell carriers, including AT&amp;amp;T and Verizon. Data center or fiber issues can have a knock-on effect to other companies, cutting out service and causing cell site blackouts.&lt;/p&gt;
&lt;p&gt;In this case, the outage affected only cellular calls to 911, and not landline calls.&lt;/p&gt;
&lt;p&gt;Several states sent emergency alerts to residents’ cell phones warning of the outage.&lt;/p&gt;

&lt;p&gt;Among the areas affected included Seattle, Washington and Salt Lake City, Utah. Several other states, including Idaho, Oregon, Arizona and Missouri, were also affected, local news has reported.&lt;/p&gt;
&lt;p&gt;Many other police departments tweeted out alternative numbers for 911 in the event of an emergency.&lt;/p&gt;
&lt;p&gt;Police in Boston, Massachusetts tweeted that their service &lt;a href=&quot;https://twitter.com/MassStatePolice/status/1078639190118670336&quot;&gt;was restored&lt;/a&gt; this morning.&lt;/p&gt;
&lt;div class=&quot;embed breakout&quot; readability=&quot;8.1986301369863&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-width=&quot;550&quot; data-dnt=&quot;true&quot; readability=&quot;10.356164383562&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;UPDATE: Technical issues with the 911 system, and the resulting wireless capability outages, have been resolved. Massachusetts callers may resume using 911 from their cell phones for public safety emergencies. &lt;a href=&quot;https://t.co/6AAeRdVxeN&quot;&gt;https://t.co/6AAeRdVxeN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Mass State Police (@MassStatePolice) &lt;a href=&quot;https://twitter.com/MassStatePolice/status/1078639190118670336?ref_src=twsrc%5Etfw&quot;&gt;December 28, 2018&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;p&gt;Ajit Pai, chairman of the Federal Communications Commission, which regulates and monitors 911 services, said the commission is investigating the outage.&lt;/p&gt;
&lt;p&gt;“When an emergency strikes, it’s critical that Americans are able to use 911 to reach those who can help,” said Pai in a statement. “The CenturyLink service outage is therefore completely unacceptable, and its breadth and duration are particularly troubling.”&lt;/p&gt;
&lt;p&gt;“I’ve directed the Public Safety and Homeland Security Bureau to immediately launch an investigation into the cause and impact of this outage. This inquiry will include an examination of the effect that CenturyLink’s outage appears to have had on other providers’ 911 services,” he said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Updated at 9pm ET on Friday: &lt;/strong&gt;&lt;em&gt;with an update from CenturyLink, confirming the outage was resolved.&lt;/em&gt;&lt;/p&gt;

</description>
<pubDate>Fri, 28 Dec 2018 16:44:28 +0000</pubDate>
<dc:creator>LopRabbit</dc:creator>
<og:title>911 emergency services go down across the US after CenturyLink outage</og:title>
<og:description>911 emergency services in several states across the U.S. went down after a massive outage at a CenturyLink data center. The outage began after 12pm ET on Thursday, according to CenturyLink’s status page, and caused disruption across 911 call centers through Friday. Some states saw their servi…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/12/GettyImages-112822745.jpg?w=601</og:image>
<og:url>http://social.techcrunch.com/2018/12/28/911-service-outage-centurylink/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/12/28/911-service-outage-centurylink/</dc:identifier>
</item>
<item>
<title>“Modern” C++ Lamentations</title>
<link>http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/</link>
<guid isPermaLink="true" >http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/</guid>
<description>&lt;p&gt;This will be a long wall of text, and kinda random! My main points are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;C++ compile times are important,&lt;/li&gt;
&lt;li&gt;Non-optimized build performance is important,&lt;/li&gt;
&lt;li&gt;Cognitive load is important. I don’t expand much on this here, but if a programming language or a library makes me feel stupid, then I’m less likely to use it or like it. C++ does that &lt;em&gt;a lot&lt;/em&gt; :)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;“&lt;a href=&quot;http://ericniebler.com/2018/12/05/standard-ranges/&quot;&gt;Standard Ranges&lt;/a&gt;” blog post by Eric Niebler – about C++20 ranges feature – was doing rounds in the game development twitterverse lately, with many expressing something like a “dislike” (mildly said) about the state of modern C++.&lt;/p&gt;
&lt;p&gt;I have expressed a similar thought too (&lt;a href=&quot;https://twitter.com/aras_p/status/1076947443823136768&quot;&gt;link&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;That example for Pythagorian Triples using C++20 ranges and other features sounds terrible to me. And yes I get that ranges can be useful, projections can be useful etc. Still, a terrible example! Why would anyone want to code like that?!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Which got slightly out of hand (now 5 days later, that tree of threads is still receiving a lot of replies!).&lt;/p&gt;
&lt;p&gt;Now, apologies to Eric for pointing out his post; my lamentation is mostly about “general state of C++” lately. The “bunch of angry gamedevs” on twitter has been picking on &lt;a href=&quot;https://www.boost.org/doc/libs/1_62_0/libs/geometry/doc/html/geometry/design.html&quot;&gt;Boost.Geometry rationale&lt;/a&gt; a year or two ago in a very similar way, and a dozen other times for other aspects of C++ ecosystem.&lt;/p&gt;
&lt;p&gt;But you know, twitter not being exactly a nuanced place, etc. etc. So let me expand here!&lt;/p&gt;
&lt;h3 id=&quot;pythagorean-triples-c-20-ranges-style&quot;&gt;Pythagorean Triples, C++20 Ranges Style&lt;/h3&gt;
&lt;p&gt;Here’s the full example from Eric’s &lt;a href=&quot;http://ericniebler.com/2018/12/05/standard-ranges/&quot;&gt;post&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;// A sample standard C++20 program that prints
// the first N Pythagorean triples.
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;optional&amp;gt;
#include &amp;lt;ranges&amp;gt;   // New header!
 
using namespace std;
 
// maybe_view defines a view over zero or one
// objects.
template&amp;lt;Semiregular T&amp;gt;
struct maybe_view : view_interface&amp;lt;maybe_view&amp;lt;T&amp;gt;&amp;gt; {
  maybe_view() = default;
  maybe_view(T t) : data_(std::move(t)) {
  }
  T const *begin() const noexcept {
    return data_ ? &amp;amp;*data_ : nullptr;
  }
  T const *end() const noexcept {
    return data_ ? &amp;amp;*data_ + 1 : nullptr;
  }
private:
  optional&amp;lt;T&amp;gt; data_{};
};
 
// &quot;for_each&quot; creates a new view by applying a
// transformation to each element in an input
// range, and flattening the resulting range of
// ranges.
// (This uses one syntax for constrained lambdas
// in C++20.)
inline constexpr auto for_each =
  []&amp;lt;Range R,
     Iterator I = iterator_t&amp;lt;R&amp;gt;,
     IndirectUnaryInvocable&amp;lt;I&amp;gt; Fun&amp;gt;(R&amp;amp;&amp;amp; r, Fun fun)
        requires Range&amp;lt;indirect_result_t&amp;lt;Fun, I&amp;gt;&amp;gt; {
      return std::forward&amp;lt;R&amp;gt;(r)
        | view::transform(std::move(fun))
        | view::join;
  };
 
// &quot;yield_if&quot; takes a bool and a value and
// returns a view of zero or one elements.
inline constexpr auto yield_if =
  []&amp;lt;Semiregular T&amp;gt;(bool b, T x) {
    return b ? maybe_view{std::move(x)}
             : maybe_view&amp;lt;T&amp;gt;{};
  };
 
int main() {
  // Define an infinite range of all the
  // Pythagorean triples:
  using view::iota;
  auto triples =
    for_each(iota(1), [](int z) {
      return for_each(iota(1, z+1), [=](int x) {
        return for_each(iota(x, z+1), [=](int y) {
          return yield_if(x*x + y*y == z*z,
            make_tuple(x, y, z));
        });
      });
    });
 
    // Display the first 10 triples
    for(auto triple : triples | view::take(10)) {
      cout &amp;lt;&amp;lt; '('
           &amp;lt;&amp;lt; get&amp;lt;0&amp;gt;(triple) &amp;lt;&amp;lt; ','
           &amp;lt;&amp;lt; get&amp;lt;1&amp;gt;(triple) &amp;lt;&amp;lt; ','
           &amp;lt;&amp;lt; get&amp;lt;2&amp;gt;(triple) &amp;lt;&amp;lt; ')' &amp;lt;&amp;lt; '\n';
  }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Eric’s post comes from his &lt;a href=&quot;http://ericniebler.com/2014/04/27/range-comprehensions/&quot;&gt;earlier post&lt;/a&gt; from a few years back, which was a response to Bartosz Milewski’s post “&lt;a href=&quot;https://bartoszmilewski.com/2014/04/21/getting-lazy-with-c/&quot;&gt;Getting Lazy with C++&lt;/a&gt;”, where a simple C function to print first N Pythagorean Triples was presented:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c&quot;&gt;void printNTriples(int n)
{
    int i = 0;
    for (int z = 1; ; ++z)
        for (int x = 1; x &amp;lt;= z; ++x)
            for (int y = x; y &amp;lt;= z; ++y)
                if (x*x + y*y == z*z) {
                    printf(&quot;%d, %d, %d\n&quot;, x, y, z);
                    if (++i == n)
                        return;
                }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;As well as some issues with it were pointed out:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;This is fine, as long as you don’t have to modify or reuse this code. But what if, for instance, instead of printing, you wanted to draw the triples as triangles? Or if you wanted to stop as soon as one of the numbers reached 100?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And then lazy evaluation with list comprehensions is presented as &lt;em&gt;the way&lt;/em&gt; to solve these issues. It is &lt;em&gt;a&lt;/em&gt; way to solve these issues indeed, just that C++ the language does not quite have built-in functionality to do that, like Haskell or other languages have. C++20 will have &lt;em&gt;more&lt;/em&gt; built-in things in that regard, similar to how Eric’s post shows. But I’ll get to that later.&lt;/p&gt;
&lt;h3 id=&quot;pythagorean-triples-simple-c-style&quot;&gt;Pythagorean Triples, Simple C++ Style&lt;/h3&gt;
&lt;p&gt;So, let’s get back to the simple (“fine as long you don’t have to modify or reuse”, as Bartosz says) C/C++ style of solving the problem. Here’s a complete program that prints first 100 triples:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;// simplest.cpp
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
    clock_t t0 = clock();

    int i = 0;
    for (int z = 1; ; ++z)
        for (int x = 1; x &amp;lt;= z; ++x)
            for (int y = x; y &amp;lt;= z; ++y)
                if (x*x + y*y == z*z) {
                    printf(&quot;(%i,%i,%i)\n&quot;, x, y, z);
                    if (++i == 100)
                        goto done;
                }
    done:

    clock_t t1 = clock();
    printf(&quot;%ims\n&quot;, (int)(t1-t0)*1000/CLOCKS_PER_SEC);
    return 0;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We can compile it: &lt;code&gt;clang simplest.cpp -o outsimplest&lt;/code&gt;. Compilation takes 0.064 seconds, produces 8480 byte executable, which runs in 2 milliseconds and prints the numbers &lt;em&gt;(machine is 2018 MacBookPro; Core i9 2.9GHz; Xcode 10 clang)&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;(3,4,5)
(6,8,10)
(5,12,13)
(9,12,15)
(8,15,17)
(12,16,20)
(7,24,25)
(15,20,25)
(10,24,26)
...
(65,156,169)
(119,120,169)
(26,168,170)
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;But wait! That was a default, non-optimized (“Debug”) build; let’s build an optimized (“Release”) build: &lt;code&gt;clang simplest.cpp -o outsimplest -O2&lt;/code&gt;. That takes 0.071s to compile, produces same size (8480b) executable, and runs in 0ms (under the timer precision of &lt;code&gt;clock()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;As Bartosz correctly points out, the algorithm is not “reusable” here, since it’s intermixed with “what to do with the results”. Whether that is a problem or not is outside the scope of this post &lt;em&gt;(personally I think “reusability” or “avoid duplication at all costs” are overrated)&lt;/em&gt;. Let’s assume it is a problem, and indeed we want “something” that would just return first N triples, without doing anything with them.&lt;/p&gt;
&lt;p&gt;What I would probably do, is do the simplest possible thing – make something that can be called, that returns the next triple. It might look something like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;// simple-reusable.cpp
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

struct pytriples
{
    pytriples() : x(1), y(1), z(1) {}
    void next()
    {
        do
        {
            if (y &amp;lt;= z)
                ++y;
            else
            {
                if (x &amp;lt;= z)
                    ++x;
                else
                {
                    x = 1;
                    ++z;
                }
                y = x;
            }
        } while (x*x + y*y != z*z);
    }
    int x, y, z;
};

int main()
{
    clock_t t0 = clock();

    pytriples py;
    for (int c = 0; c &amp;lt; 100; ++c)
    {
        py.next();
        printf(&quot;(%i,%i,%i)\n&quot;, py.x, py.y, py.z);
    }

    clock_t t1 = clock();
    printf(&quot;%ims\n&quot;, (int)(t1-t0)*1000/CLOCKS_PER_SEC);
    return 0;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This compiles and runs in pretty much the same times; Debug executable becomes 168 bytes larger; Release executable same size.&lt;/p&gt;
&lt;p&gt;I did make a &lt;code&gt;pytriples&lt;/code&gt; struct, where each call to &lt;code&gt;next()&lt;/code&gt; advances to the next valid triple; the caller can do whatever it pleases with the result. Here, I just call it a hundred times, printing the triple each time.&lt;/p&gt;
&lt;p&gt;However, while the implementation is functionally equivalent to what the triple-nested &lt;code&gt;for&lt;/code&gt; loop was doing in the original example, indeed &lt;strong&gt;it becomes a lot less clear&lt;/strong&gt;, at least to me. It’s very clear &lt;em&gt;how&lt;/em&gt; it does it (some branches and simple operations on integers), but not immediately clear &lt;em&gt;what&lt;/em&gt; it does on a high level.&lt;/p&gt;
&lt;p&gt;If C++ had something like a “&lt;a href=&quot;https://en.wikipedia.org/wiki/Coroutine&quot;&gt;coroutine&lt;/a&gt;” concept, it would be possible to implement the triples generator that would be as clear as the original nested for loops, yet not have any of the “problems” (Jason Meisel points out exactly that in “&lt;a href=&quot;https://medium.com/@jasonmeisel/ranges-code-quality-and-the-future-of-c-99adc6199608&quot;&gt;Ranges, Code Quality, and the Future of C++&lt;/a&gt;” post); something like (tentative syntax, as coroutines aren’t part of any C++ standard yet):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;generator&amp;lt;std::tuple&amp;lt;int,int,int&amp;gt;&amp;gt; pytriples()
{
    for (int z = 1; ; ++z)
        for (int x = 1; x &amp;lt;= z; ++x)
            for (int y = x; y &amp;lt;= z; ++y)
                if (x*x + y*y == z*z)
                    co_yield std::make_tuple(x, y, z);
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 id=&quot;back-to-c-ranges&quot;&gt;Back to C++ Ranges&lt;/h3&gt;
&lt;p&gt;Is the C++20 Ranges style more clear at what it does? From Eric’s post, this is the main part:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;auto triples =
    for_each(iota(1), [](int z) {
        return for_each(iota(1, z+1), [=](int x) {
            return for_each(iota(x, z+1), [=](int y) {
                return yield_if(x*x + y*y == z*z,
                    make_tuple(x, y, z));
                });
            });
        });
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;You could argue either way. I think the “coroutines” approach above is &lt;em&gt;way&lt;/em&gt; more clear. C++ way of creating lambdas, and the choice of C++ standard to make things look clever (“what’s an &lt;em&gt;iota&lt;/em&gt;? it’s a Greek letter, look how smart I am!“) are both a bit cumbersome. Multiple returns feel unusual if reader is used to imperative programming style, but possibly one could get used to it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Maybe&lt;/em&gt; you could squint your eyes and say that this is an acceptable and nice syntax.&lt;/p&gt;
&lt;p&gt;However, I refuse to believe that “us mere mortals” without a PhD in C++ would be able to write the utilities that are needed for the code above to work:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;template&amp;lt;Semiregular T&amp;gt;
struct maybe_view : view_interface&amp;lt;maybe_view&amp;lt;T&amp;gt;&amp;gt; {
  maybe_view() = default;
  maybe_view(T t) : data_(std::move(t)) {
  }
  T const *begin() const noexcept {
    return data_ ? &amp;amp;*data_ : nullptr;
  }
  T const *end() const noexcept {
    return data_ ? &amp;amp;*data_ + 1 : nullptr;
  }
private:
  optional&amp;lt;T&amp;gt; data_{};
};
inline constexpr auto for_each =
  []&amp;lt;Range R,
     Iterator I = iterator_t&amp;lt;R&amp;gt;,
     IndirectUnaryInvocable&amp;lt;I&amp;gt; Fun&amp;gt;(R&amp;amp;&amp;amp; r, Fun fun)
        requires Range&amp;lt;indirect_result_t&amp;lt;Fun, I&amp;gt;&amp;gt; {
      return std::forward&amp;lt;R&amp;gt;(r)
        | view::transform(std::move(fun))
        | view::join;
  };
inline constexpr auto yield_if =
  []&amp;lt;Semiregular T&amp;gt;(bool b, T x) {
    return b ? maybe_view{std::move(x)}
             : maybe_view&amp;lt;T&amp;gt;{};
  };
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Maybe&lt;/em&gt; that is mother tongue to someone, but to me this feels like someone decided that “&lt;a href=&quot;https://en.wikipedia.org/wiki/Perl&quot;&gt;Perl&lt;/a&gt; is clearly too readable, but &lt;a href=&quot;https://en.wikipedia.org/wiki/Brainfuck&quot;&gt;Brainfuck&lt;/a&gt; is too unreadable, let’s aim for somewhere in the middle”. And I’ve been programming mostly in C++ for the past 20 years. Maybe I’m too stupid to get this, okay.&lt;/p&gt;
&lt;p&gt;And yes, sure, the &lt;code&gt;maybe_view&lt;/code&gt;, &lt;code&gt;for_each&lt;/code&gt;, &lt;code&gt;yield_if&lt;/code&gt; are all “reusable components” that could be moved into a library; a point I’ll get to… right now.&lt;/p&gt;
&lt;h3 id=&quot;issues-with-everything-is-a-library-c&quot;&gt;Issues with “Everything is a library” C++&lt;/h3&gt;
&lt;p&gt;There are at least two: &lt;strong&gt;1) compilation time&lt;/strong&gt;, and &lt;strong&gt;2) non-optimized runtime performance&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let me allow to show them using this same Pythagorean Triples example, though the issue is true for many other features of C++ that are implemented as part of “libraries”, and not language itself.&lt;/p&gt;
&lt;p&gt;Actual C++20 isn’t out yet, so for a quick test I took the current best “ranges” approximation, which is &lt;a href=&quot;https://github.com/ericniebler/range-v3&quot;&gt;range-v3&lt;/a&gt; (made by Eric Niebler himself), and compiled the canonical “Pythagorean Triples with C++ Ranges” example with it.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;// ranges.cpp
#include &amp;lt;time.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;range/v3/all.hpp&amp;gt;

using namespace ranges;

int main()
{
    clock_t t0 = clock();

    auto triples = view::for_each(view::ints(1), [](int z) {
        return view::for_each(view::ints(1, z + 1), [=](int x) {
            return view::for_each(view::ints(x, z + 1), [=](int y) {
                return yield_if(x * x + y * y == z * z,
                    std::make_tuple(x, y, z));
            });
        });
    });

    RANGES_FOR(auto triple, triples | view::take(100))
    {
        printf(&quot;(%i,%i,%i)\n&quot;, std::get&amp;lt;0&amp;gt;(triple), std::get&amp;lt;1&amp;gt;(triple), std::get&amp;lt;2&amp;gt;(triple));
    }

    clock_t t1 = clock();
    printf(&quot;%ims\n&quot;, (int)(t1-t0)*1000/CLOCKS_PER_SEC);
    return 0;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I used a post-0.4.0 version (&lt;code&gt;9232b449e44&lt;/code&gt; on 2018 Dec 22), and compiled the example with &lt;code&gt;clang ranges.cpp -I. -std=c++17 -lc++ -o outranges&lt;/code&gt;. It &lt;strong&gt;compiled in 2.92 seconds&lt;/strong&gt;, executable was 219 kilobytes, and it &lt;strong&gt;runs in 300 milliseceonds&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;And yes, that’s a non-optimized build. An optimized build (&lt;code&gt;clang ranges.cpp -I. -std=c++17 -lc++ -o outranges -O2&lt;/code&gt;) compiles in 3.02 seconds, executable is 13976 bytes, and runs in 1ms. So the runtime performance is fine, executable is slightly larger, and compile time issue of course remains.&lt;/p&gt;
&lt;p&gt;More on the points above:&lt;/p&gt;
&lt;h3 id=&quot;compilation-times-are-a-big-issue-in-c&quot;&gt;Compilation Times Are a Big Issue in C++&lt;/h3&gt;
&lt;p&gt;Compile time of this really simple example takes &lt;strong&gt;2.85 seconds longer&lt;/strong&gt; than the “simple C++” version.&lt;/p&gt;
&lt;p&gt;Lest you think that “under 3 seconds” is a short time – it’s absolutely not. In 3 seconds, a modern CPU can do a gajillion operations. For example, the time it takes for clang to compile a full actual database engine (&lt;a href=&quot;https://sqlite.org/index.html&quot;&gt;SQLite&lt;/a&gt;) in Debug build, with all 220 &lt;em&gt;thousand&lt;/em&gt; lines of code, is 0.9 seconds on my machine. In which world is it okay to compile a trivial 5-line example three times slower than a full database engine?!&lt;/p&gt;
&lt;p&gt;C++ compilation times have been a source of pain in every non-trivial-size codebase I’ve worked on. Don’t believe me? Try building one of the widely available big codebases (any of: Chromium, Clang/LLVM, UE4 etc will do). Among the things I &lt;em&gt;really&lt;/em&gt; want out of C++, “solve compile times” is probably #1 on the list, and has been since forever. Yet it feels like the C++ community at large pretends that is not an issue, with each revision of the language putting &lt;em&gt;even more&lt;/em&gt; stuff into header files, and &lt;em&gt;even more&lt;/em&gt; stuff into templated code that has to live in header files.&lt;/p&gt;
&lt;p&gt;To a large extent that is caused by the ancient “just literally paste the file contents” &lt;code&gt;#include&lt;/code&gt; model that C++ inherited from C. But whereas C tends to only have struct declarations and function prototypes in headers, in C++ you often need to put whole templated classes/functions in there too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ericniebler/range-v3&quot;&gt;range-v3&lt;/a&gt; is 1.8 megabytes of source code, all in header files! So while the example of “use ranges to output 100 triples” is 30 lines long, after processing header includes the compiler ends up with &lt;em&gt;102 thousand&lt;/em&gt; lines of code to compile. The “simple C++” example, after all preprocessing, is 720 lines of code.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But precompiled headers and/or modules solve this!&lt;/em&gt;, I hear you say. Fair enough. Let’s put the ranges header into a precompiled header (pch.h: &lt;code&gt;#include &amp;lt;range/v3/all.hpp&amp;gt;&lt;/code&gt;, include pch.h instead, create the PCH: &lt;code&gt;clang -x c++-header pch.h -I. -std=c++17 -o pch.h.pch&lt;/code&gt;, compile using pch: &lt;code&gt;clang ranges.cpp -I. -std=c++17 -lc++ -o outranges -include-pch pch.h.pch&lt;/code&gt;). Compilation time becomes 2.24s, so PCHs do indeed save about 0.7 seconds of compile time here. They do not save the &lt;em&gt;other 2.1s&lt;/em&gt; that is longer than simple C++ approach though :(&lt;/p&gt;
&lt;h3 id=&quot;non-optimized-build-performance-is-important&quot;&gt;Non-Optimized Build Performance is Important&lt;/h3&gt;
&lt;p&gt;Runtime performance of the “ranges” example is &lt;strong&gt;150 times slower&lt;/strong&gt;. Two or three times &lt;em&gt;maybe&lt;/em&gt; would be acceptable. Anything “over ten times slower”, and it likely means “unusable”. Over hundred times slower? Forget it.&lt;/p&gt;
&lt;p&gt;In a real codebase that solves real problems, two orders of magnitude slower likely means that it just would not work on any real data set. I’m working in video games industry; in practical reasons this would mean that Debug builds of the engine or tooling would not work on any real game levels (performance would be nowhere near the needed interactivity level). Maybe there are industries where you run a program on a set of data, and wait for the result, and if it takes 10 or 100 times longer in Debug then it is merely “annoying”. But where something &lt;em&gt;has to be interactive&lt;/em&gt;, it turns “annoying” into “unusable” – you literally can not “play” through a game level if it renders at two frames per second.&lt;/p&gt;
&lt;p&gt;Yes, an optimized build (&lt;code&gt;-O2&lt;/code&gt; in clang) runs at the same performance as simple C++ version… so “zero cost abstractions” indeed, as long you don’t care about compilation times, and have an optimizing compiler.&lt;/p&gt;
&lt;p&gt;But debugging optimized code is &lt;em&gt;hard&lt;/em&gt;! Sure it’s possible, and actually a very useful skill to learn… Similar to how riding a unicycle is both possible, and teaches you an important skill of balance. Some people enjoy it and are really good at it even! But most people would not pick unicycle as their primary means of transportation, similar to how most people don’t debug optimized code if they can avoid it.&lt;/p&gt;
&lt;p&gt;Arseny Kapoulkine has a great livestream “&lt;a href=&quot;https://www.youtube.com/watch?v=m1jAgV4ZOhQ&quot;&gt;Optimizing OBJ loader&lt;/a&gt;” where he also ran into “Debug build is too slow” issue, and made it 10x faster by avoiding some of STL bits (&lt;a href=&quot;https://github.com/zeux/meshoptimizer/commit/1996f143b8b3&quot;&gt;commit&lt;/a&gt;). As a side effect, it also made compile times faster (&lt;a href=&quot;https://twitter.com/zeuxcg/status/1043155003681124352&quot;&gt;source&lt;/a&gt;) and debugging easier, since Microsoft’s STL implementation in particular is &lt;a href=&quot;https://twitter.com/zeuxcg/status/1073620743177400320&quot;&gt;extremely fond of&lt;/a&gt; deeply nested function calls.&lt;/p&gt;
&lt;p&gt;That is not to say that “STL is necessarily bad”; it is possible to write an STL implementation that does not become 10x slower in a non-optimized build (as EASTL or libc++ do), but for whatever reason Microsoft’s STL is &lt;em&gt;extremely&lt;/em&gt; slow due to over-reliance of “inlining will fix it up”.&lt;/p&gt;
&lt;p&gt;As as &lt;em&gt;user of the language&lt;/em&gt;, I don’t care whose fault it is though! All I know is that “STL is too slow in Debug”, and I’d rather have that fixed, or I will look into alternatives (e.g. not using STL, re-implementing the bits I need myself, or stop using C++ altogether).&lt;/p&gt;
&lt;h3 id=&quot;how-do-other-languages-compare&quot;&gt;How do other languages compare?&lt;/h3&gt;
&lt;p&gt;Here’s a brief look at a very similar implementation of “lazily evaluated Pythagorean Triples” in C#. Full C# source code:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c#&quot;&gt;using System;
using System.Diagnostics;
using System.Linq;

class Program
{
    public static void Main()
    {
        var timer = Stopwatch.StartNew();
        var triples =
            from z in Enumerable.Range(1, int.MaxValue)
            from x in Enumerable.Range(1, z)
            from y in Enumerable.Range(x, z)
            where x*x+y*y==z*z
            select (x:x, y:y, z:z);
        foreach (var t in triples.Take(100))
        {
            Console.WriteLine($&quot;({t.x},{t.y},{t.z})&quot;);
        }
        timer.Stop();
        Console.WriteLine($&quot;{timer.ElapsedMilliseconds}ms&quot;);
    }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Personally I find the actual bit pretty readable. Compare C#:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c#&quot;&gt;var triples =
    from z in Enumerable.Range(1, int.MaxValue)
    from x in Enumerable.Range(1, z)
    from y in Enumerable.Range(x, z)
    where x*x+y*y==z*z
    select (x:x, y:y, z:z);
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;with C++:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c++&quot;&gt;auto triples = view::for_each(view::ints(1), [](int z) {
    return view::for_each(view::ints(1, z + 1), [=](int x) {
        return view::for_each(view::ints(x, z + 1), [=](int y) {
            return yield_if(x * x + y * y == z * z,
                std::make_tuple(x, y, z));
        });
    });
});
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;I know which one I find cleaner. Do you? Though to be fair, an alternative, “less databasey” form of C# LINQ is pretty busy as well:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-c#&quot;&gt;var triples = Enumerable.Range(1, int.MaxValue)
    .SelectMany(z =&amp;gt; Enumerable.Range(1, z), (z, x) =&amp;gt; new {z, x})
    .SelectMany(t =&amp;gt; Enumerable.Range(t.x, t.z), (t, y) =&amp;gt; new {t, y})
    .Where(t =&amp;gt; t.t.x * t.t.x + t.y * t.y == t.t.z * t.t.z)
    .Select(t =&amp;gt; (x: t.t.x, y: t.y, z: t.t.z));
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;How much time it takes to compile this C# code? I’m on a Mac, so I’ll use Mono compiler (which itself is written in C#), version 5.16. &lt;code&gt;mcs Linq.cs&lt;/code&gt; takes 0.20 seconds. In comparison, compiling an equivalent “simple C#” version takes 0.17 seconds.&lt;/p&gt;
&lt;p&gt;So this lazy evaluation LINQ style creates &lt;strong&gt;additional 0.03 seconds work for the compiler&lt;/strong&gt; to do. In comparison, the C++ case was creating an additional 3 seconds of work, or &lt;strong&gt;100x more&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;This is what you get when “features” are part of the language, as opposed to “it comes as hundred thousand lines of code for the compiler to plow through”.&lt;/p&gt;
&lt;h3 id=&quot;but-can-t-you-just-ignore-the-parts-you-don-t-like&quot;&gt;But can’t you just ignore the parts you don’t like?&lt;/h3&gt;
&lt;p&gt;Yes, to some extent.&lt;/p&gt;
&lt;p&gt;For example here (&lt;a href=&quot;https://unity3d.com/&quot;&gt;Unity&lt;/a&gt;), we had a joke that “adding Boost into the codebase is a fireable offense”. I guess that is not true, since sometime last year &lt;a href=&quot;https://www.boost.org/doc/libs/1_66_0/doc/html/boost_asio.html&quot;&gt;Boost.Asio&lt;/a&gt; got added, and then I grumbled quite a bit about how it’s super slow to compile, and that merely including &lt;code&gt;&amp;lt;asio.h&amp;gt;&lt;/code&gt; includes whole of &lt;code&gt;&amp;lt;windows.h&amp;gt;&lt;/code&gt; with all the &lt;a href=&quot;http://aras-p.info/blog/2018/01/12/Minimizing-windows.h/&quot;&gt;macro name hijack horrors&lt;/a&gt; that it has.&lt;/p&gt;
&lt;p&gt;In general we’re trying to avoid most of STL too. For the containers, we have our own ones, somewhat along the same reasons as &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2271.html&quot;&gt;EASTL motivation&lt;/a&gt; – more uniform behavior across platforms/compilers, better performance in non-optimized builds, better integration with our own memory allocators &amp;amp; allocation tracking. Some other containers, purely for performance reasons (STL &lt;code&gt;unordered_map&lt;/code&gt; can’t be fast &lt;em&gt;by design&lt;/em&gt; since the standard requires it to be separately chained; our own hash table uses open addressing instead). Large parts of the standard library functionality we don’t actually even need.&lt;/p&gt;
&lt;p&gt;However.&lt;/p&gt;
&lt;p&gt;It takes time to convince each and every new hire (particularly the more junior ones straight from universities) that no, just because it’s called “modern” C++, does not automatically mean it’s better &lt;em&gt;(it might be! or it might be not)&lt;/em&gt;. Or that no, “C code” does not automatically mean it’s hard to understand, follow or is riddled with bugs &lt;em&gt;(it might be! or it might be not)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Just a couple weeks ago at work I was rambling how I’m trying to understand some piece of (our own) code, and I can’t, since the code is “too complex” for me to get it. Another (junior) programmer drops by, asks me why I look like I’m about to ‎(ﾉಥ益ಥ）ﾉ﻿ ┻━┻, I say &lt;em&gt;“so I’m trying to understand this code, but it’s way too complex for me”&lt;/em&gt;. His immediate response was &lt;em&gt;“ah, old C style code?”&lt;/em&gt;, and I was &lt;em&gt;“no, in fact the complete opposite!”&lt;/em&gt; (the code I was looking at was some sort of &lt;a href=&quot;https://twitter.com/aras_p/status/1069882742429638657&quot;&gt;template metaprogramming&lt;/a&gt; thingamabob). He hasn’t worked with large codebases, neither C nor C++ yet, but &lt;em&gt;something&lt;/em&gt; has already convinced him that “hard to understand” &lt;em&gt;must be C code&lt;/em&gt;. I suspect the university; often classes flat out immediately say that “C is bad”, without ever explaining how exactly; but it does leave that impression on the young minds of future programmers.&lt;/p&gt;
&lt;p&gt;So yes, I can certainly ignore parts I don’t like about C++. But it’s tiring to educate many others I’m working with, since many are under impression that “modern, must be better” or that “standard library, must be better than anything we could write ourselves”.&lt;/p&gt;
&lt;h3 id=&quot;why-is-c-this-way&quot;&gt;Why is C++ this way?&lt;/h3&gt;
&lt;p&gt;I don’t quite know. Admittedly they do have a very complex problem to solve, which is “how to evolve a language while keeping it close to 100% backwards compatible with many decades of past decisions”. Couple that with that C++ tries to serve many masters, use cases and experience levels, and you do get a complex problem.&lt;/p&gt;
&lt;p&gt;But to some extent, it &lt;em&gt;feels&lt;/em&gt; like a big part of C++ committee and the ecosystem is focused on “complexity” in terms of showing off or proving their worth.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://aras-p.info/img/blog/2018/cpp_phases.jpg&quot;&gt;&lt;img class=&quot;right&quot; src=&quot;http://aras-p.info/img/blog/2018/cpp_phases.jpg&quot; title=&quot;&quot; alt=&quot;&quot; width=&quot;200&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There was this joke on the internet a while ago about typical progression of a C/C++ programmer. I remember myself being in the middle stage, some 16 years ago. Very impressed with Boost, in a sense of “wow you &lt;em&gt;can do that&lt;/em&gt;, that’s so cool!“. Without questioning at &lt;em&gt;why&lt;/em&gt; you’d want to do that.&lt;/p&gt;
&lt;p&gt;Similar to, I don’t know, Formula 1 cars or triple-neck guitars. Impressive? Sure. Marvel of engineering? Of course. Requires massive amount of skill to handle them properly? Yes! &lt;em&gt;Not the right tool&lt;/em&gt; for 99% of situations you’d even find yourself in? Yup.&lt;/p&gt;
&lt;p&gt;Christer Ericson has put it nicely &lt;a href=&quot;https://twitter.com/ChristerEricson/status/1078095388244996096&quot;&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;Goal of programmers is to ship, on time, on budget. It’s not “to produce code.” IMO most modern C++ proponents 1) overassign importance to source code over 2) compile times, debugability, cognitive load for new concepts and extra complexity, project needs, etc. 2 is what matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And yes, people who are concerned with state of C++ and the standard libraries can of course join the effort in trying to improve it. Some do. Some are (or think they are) too busy to spend time in committees. Some ignore parts of the standards and make their own parallel libraries (e.g. &lt;a href=&quot;https://github.com/electronicarts/EASTL&quot;&gt;EASTL&lt;/a&gt;). Some think C++ is beyond salvation and try to make their own languages (&lt;a href=&quot;https://inductive.no/jai/&quot;&gt;Jai&lt;/a&gt;) or jump ship elsewhere (&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;, &lt;a href=&quot;https://unity.com/unity/features/job-system-ECS#burst-compiler&quot;&gt;subsets of C#&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&quot;taking-feedback-and-giving-feedback&quot;&gt;Taking feedback, and giving feedback&lt;/h3&gt;
&lt;p&gt;I know how hard it can be, when “a bunch of angry people on the internet” are saying that your work is proverbial dung. I’m working on probably the &lt;a href=&quot;https://unity3d.com/&quot;&gt;most popular game engine&lt;/a&gt;, with millions of users, and some part of them love to point out, directly or indirectly, how “it sucks”. It’s hard; me and others have put so much thought and work into it, and someone else comes along and says we’re all idiots and our work is crap. Sad!&lt;/p&gt;
&lt;p&gt;It probably feels the same for anyone working on C++, STL, or any other widely used technology really. They have worked for years on something, and then a bunch of Angry Internet People come and trash your lovely work.&lt;/p&gt;
&lt;p&gt;It’s extremely easy to get defensive about this, and is the most natural reaction. Oftentimes also not the most constructive one though.&lt;/p&gt;
&lt;p&gt;Ignoring literal trolls who complain on the internet “just for the lulz”, majority of complaints &lt;em&gt;do&lt;/em&gt; have actual issue or problem behind it. It might be worded poorly, or exaggerated, or whoever is complaining did not think about other possible viewpoints, but there is a &lt;em&gt;valid issue&lt;/em&gt; behind the complaint anyway.&lt;/p&gt;
&lt;p&gt;What I do whenever someone complains about thing I’ve worked on, is try to forget about “me” and “work I did”, and get their point of view. What are they trying to solve, and what problems do they run into? The purpose of any software/library/language is to help their users solve the problems they have. It might be a perfect tool at solving their problem, an “ok I guess that will work” one, or a terribly bad one at that.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;“I’ve worked very hard on this, but yeah sounds like my work is not a good at solving your problem” is a perfectly valid outcome!&lt;/li&gt;
&lt;li&gt;“I’ve worked very hard on this, but did not know/consider your needs, let me see how they can be addressed” is a great outcome too!&lt;/li&gt;
&lt;li&gt;“Sorry I don’t understand your problem” is fine as well!&lt;/li&gt;
&lt;li&gt;“I’ve worked very hard on this, but turns out no one has the problem that my solution is supposed to solve” is a sad outcome, but it also &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;does&lt;/em&gt; happen.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Some of the “all feedback will be ignored unless it comes in form of a paper presented at a C++ committee meeting” replies that I’ve seen in the past few days sound to me like a not very productive approach. Likewise, defending design of a library with an argument that “it was a popular library in Boost!” misses out on the part of the C++ world that does not think Boost libraries are a good design/solution.&lt;/p&gt;
&lt;p&gt;The “games industry” at large, however, is also at fault to some extent. Game technologies are traditionally built with C or C++, just because up until very recently, other viable systems programming languages simply did not exist (now you at least have Rust as a possible contender). For the amount of reliance on C/C++, the industry certainly did not do a good enough job at making themselves visible and working on improving the language, the libraries and the ecosystem.&lt;/p&gt;
&lt;p&gt;Yes it’s hard work, and yes complaining on the internet is way easier. And whoever ends up working on future of C++ is not solving “immediate problems” (like shipping a game or whatever); they are working on something much more longer-term. But there are companies who could afford to do this; any of big engine companies or large publishers with central technology groups could totally do it. If that would be worth doing, I don’t know, but indeed it’s a bit hypocritical to say “C++ is nuts and is not what we want”, while never telling the folks who make the language, what it is that “we want”.&lt;/p&gt;
&lt;p&gt;My impression is that many in the games technology are “mostly fine” with recent (C++11/14/17) additions to the language itself - lambdas are useful, &lt;code&gt;constexpr if&lt;/code&gt; is great, etc. etc. They tend to largely ignore whatever is getting added into the standard libraries, both because the design/implementations of STL have issues pointed out above (long compile times, bad Debug build performance), or are simply not that useful, or the companies have already wrote their own containers/strings/algorithms/… years ago, so why change something that already works.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Here I say that is enough for a post, I need to get dinner.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 28 Dec 2018 16:35:29 +0000</pubDate>
<dc:creator>tpush</dc:creator>
<og:title>&quot;Modern&quot; C++ Lamentations · Aras' website</og:title>
<og:url>https://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/</og:url>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/</dc:identifier>
</item>
</channel>
</rss>