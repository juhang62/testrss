<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Facebook’s Data Deals Are Under Criminal Investigation</title>
<link>https://www.nytimes.com/2019/03/13/technology/facebook-data-subpoenas.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2019/03/13/technology/facebook-data-subpoenas.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Federal prosecutors are conducting a criminal investigation into data deals Facebook struck with some of the world’s largest technology companies, intensifying scrutiny of the social media giant’s business practices as it seeks to rebound from a year of scandal and setbacks.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;A grand jury in New York has subpoenaed records from at least two prominent makers of smartphones and other devices, according to two people who were familiar with the requests and who insisted on anonymity to discuss confidential legal matters. Both companies had entered into partnerships with Facebook, gaining broad access to the &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/12/18/technology/facebook-privacy.html?module=inline&quot; title=&quot;&quot;&gt;personal information of hundreds of millions of its users&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The companies were among more than 150, including Amazon, Apple, Microsoft and Sony, that had cut sharing deals with the world’s dominant social media platform. The agreements, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/interactive/2018/06/03/technology/facebook-device-partners-users-friends-data.html?module=inline&quot; title=&quot;&quot;&gt;previously reported in The New York Times&lt;/a&gt;, let the companies see users’ friends, contact information and other data, sometimes without consent. Facebook has phased out most of the partnerships over the past two years.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;“We are cooperating with investigators and take those probes seriously,” a Facebook spokesman said in a statement. “We’ve provided public testimony, answered questions and pledged that we will continue to do so.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;[&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Read Brian Chen’s story on what he found when he&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/04/11/technology/personaltech/i-downloaded-the-information-that-facebook-has-on-me-yikes.html?action=click&amp;amp;module=inline&amp;amp;pgtype=Article&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;downloaded his Facebook data&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;.&lt;/em&gt;]&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;It is not clear when the grand jury inquiry, overseen by prosecutors with the United States attorney’s office for the Eastern District of New York, began or exactly what it is focusing on. Facebook was already facing scrutiny by the Federal Trade Commission and the Securities and Exchange Commission. And the Justice Department’s securities fraud unit began investigating it after reports that Cambridge Analytica, a political consulting firm, had &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/03/17/us/politics/cambridge-analytica-trump-campaign.html?module=inline&quot; title=&quot;&quot;&gt;improperly obtained the Facebook data&lt;/a&gt; of 87 million people and used it to build tools that helped President Trump’s election campaign.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The Justice Department and the Eastern District declined to comment for this article.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;&lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/07/02/technology/facebook-federal-investigations.html?module=inline&quot; title=&quot;&quot;&gt;The Cambridge investigation, still active,&lt;/a&gt; is being run by prosecutors from the Northern District of California. One former Cambridge employee said investigators questioned him as recently as late February. He and three other witnesses in the case, speaking on the condition of anonymity so they would not anger prosecutors, said a significant line of inquiry involved Facebook’s claims that it was misled by Cambridge.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div data-testid=&quot;photoviewer-wrapper&quot; class=&quot;css-79elbk ehw59r11&quot;&gt;

&lt;div data-testid=&quot;photoviewer-children&quot; class=&quot;css-1a48zt4 ehw59r111&quot;&gt;
&lt;div class=&quot;css-1xdhyk6 erfvjey0&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Image&lt;/span&gt;&lt;img alt=&quot;&quot; class=&quot;css-1m50asq&quot; src=&quot;https://static01.nyt.com/images/2019/03/13/us/00TECH02/merlin_136677207_8392a774-9e4f-4327-acfb-315c5a7cf2a1-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot; srcset=&quot;https://static01.nyt.com/images/2019/03/13/us/00TECH02/merlin_136677207_8392a774-9e4f-4327-acfb-315c5a7cf2a1-articleLarge.jpg?quality=90&amp;amp;auto=webp 600w,https://static01.nyt.com/images/2019/03/13/us/00TECH02/merlin_136677207_8392a774-9e4f-4327-acfb-315c5a7cf2a1-jumbo.jpg?quality=90&amp;amp;auto=webp 1024w,https://static01.nyt.com/images/2019/03/13/us/00TECH02/merlin_136677207_8392a774-9e4f-4327-acfb-315c5a7cf2a1-superJumbo.jpg?quality=90&amp;amp;auto=webp 2048w&quot; sizes=&quot;((min-width: 600px) and (max-width: 1004px)) 84vw, (min-width: 1005px) 60vw, 100vw&quot; itemprop=&quot;url&quot; itemid=&quot;https://static01.nyt.com/images/2019/03/13/us/00TECH02/merlin_136677207_8392a774-9e4f-4327-acfb-315c5a7cf2a1-articleLarge.jpg?quality=75&amp;amp;auto=webp&amp;amp;disable=upscale&quot;/&gt;&lt;/div&gt;
&lt;span class=&quot;css-8i9d0s e13ogyst0&quot;&gt;Facebook’s chief executive, Mark Zuckerberg, testifying before Congress in April.&lt;/span&gt;&lt;span itemprop=&quot;copyrightHolder&quot; class=&quot;css-vuqh7u e1z0qqy90&quot;&gt;&lt;span class=&quot;css-1ly73wi e1tej78p0&quot;&gt;Credit&lt;/span&gt;&lt;span&gt;Tom Brenner/The New York Times&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;[&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Read more on the 5 ways&lt;/em&gt; &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/12/19/technology/facebook-data-sharing.html?action=click&amp;amp;module=inline&amp;amp;pgtype=Article&quot; title=&quot;&quot;&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;Facebook shared your data&lt;/em&gt;&lt;/a&gt;&lt;em class=&quot;css-2fg4z9 e1gzwzxm0&quot;&gt;.&lt;/em&gt;]&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;In public statements, Facebook executives had said that Cambridge told the company it was gathering data only for academic purposes. But the fine print accompanying a quiz app that collected the information said it could also be used commercially. Selling user data would have violated Facebook’s rules at the time, yet the social network does not appear to have regularly checked that apps were complying. Facebook deleted the quiz app in December 2015.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The disclosures about Cambridge last year thrust Facebook into the worst crisis of its history. Then came news reports last June and December that Facebook had given business partners — including makers of smartphones, tablets and other devices — deep access to users’ personal information, letting some companies effectively override users’ privacy settings.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The sharing deals empowered Microsoft’s Bing search engine to map out the friends of virtually all Facebook users without their explicit consent, and allowed Amazon to obtain users’ names and contact information through their friends. Apple was able to hide from Facebook users all indicators that its devices were even asking for data.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Privacy advocates said the partnerships seemed to violate a 2011 consent agreement between Facebook and the F.T.C., stemming from allegations that the company had shared data in ways that deceived consumers. The deals also appeared to contradict statements by Mark Zuckerberg and other executives that Facebook had clamped down several years ago on sharing the data of users’ friends with outside developers.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;F.T.C. officials, who spent the past year &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/03/20/business/ftc-facebook-privacy-investigation.html?module=inline&quot; title=&quot;&quot;&gt;investigating whether Facebook violated the 2011 agreement&lt;/a&gt;, are now weighing the sharing deals as they &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/02/14/technology/facebook-ftc-settlement.html?module=inline&quot; title=&quot;&quot;&gt;negotiate a possible multibillion-dollar fine&lt;/a&gt;. That would be the largest such penalty ever imposed by the trade regulator.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;Facebook has aggressively defended the partnerships, saying they were permitted under a provision in the F.T.C. agreement that covered service providers — companies that acted as extensions of the social network.&lt;/p&gt;
&lt;p class=&quot;css-1ygdjhk evys1bk0&quot;&gt;The company has taken steps in the past year to tackle data misuse and misinformation. Last week, Mr. Zuckerberg unveiled a plan that would begin to pivot Facebook away from being a platform for public sharing and put more emphasis on private communications.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 13 Mar 2019 23:05:53 +0000</pubDate>
<dc:creator>tysone</dc:creator>
<og:url>https://www.nytimes.com/2019/03/13/technology/facebook-data-deals-investigation.html</og:url>
<og:type>article</og:type>
<og:title>Facebook’s Data Deals Are Under Criminal Investigation</og:title>
<og:image>https://static01.nyt.com/images/2019/03/13/us/00TECH-top/00TECH-top-facebookJumbo.jpg</og:image>
<og:description>A federal grand jury is looking at partnerships that gave major tech companies broad access to Facebook users’ information.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2019/03/13/technology/facebook-data-deals-investigation.html</dc:identifier>
</item>
<item>
<title>Iodide: An experimental Mozilla tool for data exploration on the web</title>
<link>https://hacks.mozilla.org/2019/03/iodide-an-experimental-tool-for-scientific-communicatiodide-for-scientific-communication-exploration-on-the-web/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2019/03/iodide-an-experimental-tool-for-scientific-communicatiodide-for-scientific-communication-exploration-on-the-web/</guid>
<description>&lt;p&gt;In the last 10 years, there has been an explosion of interest in “scientific computing” and “data science”: that is, the application of computation to answer questions and analyze data in the natural and social sciences. To address these needs, we’ve seen a renaissance in programming languages, tools, and techniques that help scientists and researchers explore and understand data and scientific concepts, and to communicate their findings. But to date, very few tools have focused on helping scientists gain unfiltered access to the full communication potential of modern web browsers. So today we’re excited to introduce &lt;a href=&quot;http://iodide.io&quot;&gt;Iodide&lt;/a&gt;, an experimental tool meant to help scientists write beautiful interactive documents using web technologies, all within an iterative workflow that will be familiar to many scientists.&lt;/p&gt;&lt;div id=&quot;attachment_33262&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;a href=&quot;http://iodide.io/notebooks/34/?viewMode=report&quot;&gt;&lt;img class=&quot;wp-image-33262 size-full&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/lorenz-final-loop.gif&quot; alt=&quot;Exploring the Lorenz attractor then examining the code in Iodide&quot; width=&quot;1200&quot; height=&quot;788&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Iodide in action.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Beyond being just a programming environment for creating living documents in the browser, Iodide attempts to remove friction from communicative workflows by always bundling the editing tool with the clean readable document. This diverges from IDE-style environments that output presentational documents like .pdf files (which are then divorced from the original code) and cell-based notebooks which mix code and presentation elements. In Iodide, you can get both a document that looks however you want it to look, and easy access to the underlying code and editing environment.&lt;/p&gt;
&lt;p&gt;Iodide is still very much in an alpha state, but following the internet aphorism &lt;a href=&quot;https://www.linkedin.com/pulse/arent-any-typos-essay-we-launched-too-late-reid-hoffman/&quot;&gt;“If you’re not embarrassed by the first version of your product, you’ve launched too late”&lt;/a&gt;, we’ve decided to do a very early soft launch in the hopes of getting feedback from a larger community. We have a demo that &lt;a href=&quot;https://iodide.io/tryit&quot;&gt;you can try out right now&lt;/a&gt;, but expect a lot of rough edges (and please don’t use this alpha release for critical work!). We’re hoping that, despite the rough edges, if you squint at this you’ll be able to see the value of the concept, and that the feedback you give us will help us figure out where to go next.&lt;/p&gt;
&lt;h2&gt;How we got to Iodide&lt;/h2&gt;
&lt;h3&gt;Data science at Mozilla&lt;/h3&gt;
&lt;p&gt;At Mozilla, the vast majority of our data science work is focused on communication. Though we sometimes deploy models intended to directly improve a user’s experience, such as the recommendation engine that helps users discover browser extensions, most of the time our data scientists analyze our data in order to find and share insights that will inform the decisions of product managers, engineers and executives.&lt;/p&gt;
&lt;p&gt;Data science work involves writing a lot of code, but unlike traditional software development, our objective is to answer questions, not to produce software. This typically results in some kind of report — a document, some plots, or perhaps an interactive data visualization. Like many data science organizations, at Mozilla we explore our data using fantastic tools like &lt;a href=&quot;https://jupyter.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jupyter&lt;/a&gt; and &lt;a href=&quot;https://www.rstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;R-Studio&lt;/a&gt;. However, when it’s time to share our results, we cannot usually hand off a Jupyter notebook or an R script to a decision-maker, so we often end up doing things like copying key figures and summary statistics to a Google Doc.&lt;/p&gt;
&lt;p&gt;We’ve found that making the round trip from exploring data in code to creating a digestible explanation and back again is not always easy. Research shows that &lt;a href=&quot;https://hal.archives-ouvertes.fr/hal-01676633/document&quot;&gt;many people share this experience&lt;/a&gt;. When one data scientist is reading through another’s final report and wants to look at the code behind it, there can be a lot of friction; sometimes tracking down the code is easy, sometimes not. If they want to attempt to experiment with and extend the code, things obviously get more difficult still. Another data scientist may have your code, but may not have an identical configuration on their machine, and setting that up takes time.&lt;/p&gt;
&lt;div id=&quot;attachment_33247&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;wp-image-33247&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/explore-explain-collab-500x399.png&quot; alt=&quot;The virtuous cycle of data science work&quot; width=&quot;398&quot; height=&quot;318&quot; srcset=&quot;https://hacks.mozilla.org/files/2019/03/explore-explain-collab-500x399.png 500w, https://hacks.mozilla.org/files/2019/03/explore-explain-collab-250x199.png 250w, https://hacks.mozilla.org/files/2019/03/explore-explain-collab.png 589w&quot; sizes=&quot;(max-width: 398px) 100vw, 398px&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;The virtuous circle of data science work.&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Why is there so little web in science?&lt;/h3&gt;
&lt;p&gt;Against the background of these data science workflows at Mozilla, in late 2017 I undertook a project that called for interactive data visualization. Today you can create interactive visualizations using great libraries for Python, R, and Julia, but for what I wanted to accomplish, I needed to drop down to Javascript. This meant stepping away from my favorite data science environments. Modern web development tools are incredibly powerful, &lt;a href=&quot;https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f&quot;&gt;but extremely complicated&lt;/a&gt;. I really didn’t want to figure out how to get a fully-fledged Javascript build toolchain with hot module reloading up and running, but short of that I couldn’t find much aimed at creating clean, readable web documents within the live, iterative workflow familiar to me.&lt;/p&gt;
&lt;p&gt;I started wondering why this tool didn’t exist — why there’s no Jupyter for building interactive web documents — and soon zoomed out to thinking about why almost no one uses Javascript for scientific computing. Three big reasons jumped out:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Javascript itself has a mixed reputation among scientists for being slow and awkward;&lt;/li&gt;
&lt;li&gt;there aren’t many scientific computing libraries that run in the browser or that work with Javascript; and,&lt;/li&gt;
&lt;li&gt;as I’d discovered, there are very few scientific coding tools that enable fast iteration loop and also grant unfiltered access to the presentational capabilities in the browser.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;These are very big challenges. But as I thought about it more, I began to think that working in a browser might have some real advantages for the kind of communicative data science that we do at Mozilla. The biggest advantage, of course, is that the browser has arguably the most advanced and well-supported set of presentation technologies on the planet, from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DOM&lt;/a&gt; to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebGL&lt;/a&gt; to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Canvas&lt;/a&gt; to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebVR_API&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebVR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thinking on the workflow friction mentioned above, another potential advantage occurred to me: in the browser, the final document need not be separate from the tool that created it. I wanted a tool designed to help scientists iterate on web documents (basically single-purpose web apps for explaining an idea)… and many tools we were using were themselves basically web apps. For the use case of writing these little web-app-documents, why not bundle the document with the tool used to write it?&lt;/p&gt;
&lt;p&gt;By doing this, non-technical readers could see my nice looking document, but other data scientists could instantly get back to the original code. Moreover, since the compute kernel would be the browser’s JS engine, they’d be able to start extending and experimenting with the analysis code immediately. And they’d be able to do all this without connecting to remote computing resources or installing any software.&lt;/p&gt;
&lt;h3&gt;Towards Iodide&lt;/h3&gt;
&lt;p&gt;I started discussing the potential pros and cons of scientific computing in the browser with my colleagues, and in the course of our conversations, we noticed some other interesting trends.&lt;/p&gt;
&lt;p&gt;Inside Mozilla we were seeing a lot of interesting demos showing off &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt;, a new way for browsers to run code written in languages other than Javascript. WebAssembly allows programs to be run at incredible speed, in some cases close to native binaries. We were seeing examples of computationally-expensive processes like &lt;a href=&quot;https://hacks.mozilla.org/2017/07/webassembly-for-native-games-on-the-web/&quot;&gt;entire 3D game engines&lt;/a&gt; running within the browser without difficulty. Going forward, it would be possible to compile best-in-class C and C++ numerical computing libraries to WebAssembly and wrap them in ergonomic JS APIs, just as the SciPy project does for Python. Indeed, projects had started &lt;a href=&quot;https://github.com/likr/emlapack&quot;&gt;to&lt;/a&gt; &lt;a href=&quot;https://github.com/mljs/libsvm&quot;&gt;do&lt;/a&gt; &lt;a href=&quot;https://github.com/stdlib-js/stdlib&quot;&gt;this&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/cephes&quot;&gt;already&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;wp-caption alignnone&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/TwuIRcpeUWE?feature=oembed&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;WebAssembly makes it possible to run code at near-native speed in the browser.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We also noticed the Javascript community’s willingness to introduce &lt;a href=&quot;https://reactjs.org/docs/introducing-jsx.html&quot;&gt;new syntax&lt;/a&gt; when doing so helps people to &lt;a href=&quot;https://flow.org/&quot;&gt;solve their problem&lt;/a&gt; more effectively. Perhaps it would be possible to emulate some of key syntactic elements that make numerical programming more comprehensible and fluid in MATLAB, Julia, and Python — matrix multiplication, multidimensional slicing, broadcast array operations, and so on. Again, we found other people &lt;a href=&quot;https://github.com/antimatter15/babel-experiments/tree/master/watlab&quot;&gt;thinking along similar lines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With these threads converging, we began to wonder if the web platform might be on the cusp of becoming a productive home for scientific computing. At the very least, it looked like it might evolve to serve some of the communicative workflows that we encounter at Mozilla (and that so many others encounter in industry and academia). With the core of Javascript &lt;a href=&quot;https://github.com/tc39/proposals&quot;&gt;improving all the time&lt;/a&gt; and the possibility of adding syntax extensions for numerical programming, perhaps JS itself could be made more appealing to scientists. WebAssembly seemed to offer a path to great science libraries. The third leg of the stool would be an environment for creating data science documents for the web. This last element is where we decided to focus our initial experimentation, which brought us to Iodide.&lt;/p&gt;
&lt;h2&gt;The anatomy of Iodide&lt;/h2&gt;
&lt;p&gt;Iodide is a tool designed to give scientists a familiar workflow for creating great-looking interactive documents using the full power of the web platform. To accomplish that, we give you a “report” — basically a web page that you can fill in with your content — and some tools for iteratively exploring data and modifying your report to create something you’re ready to share. Once you’re ready, you can send a link directly to your finalized report. If your colleagues and collaborators want to review your code and learn from it, they can drop back to an exploration mode in one click. If they want to experiment with the code and use it as the basis of their own work, with one more click they can fork it and start working on their own version.&lt;/p&gt;
&lt;p&gt;Read on to learn a bit more about some of the ideas we’re experimenting with in an attempt to make this workflow feel fluid.&lt;/p&gt;
&lt;h3&gt;The Explore and Report Views&lt;/h3&gt;
&lt;p&gt;Iodide aims to tighten the loop between exploration, explanation, and collaboration. Central to that is the ability to move back and forth between a nice looking write-up and a useful environment for iterative computational exploration.&lt;/p&gt;
&lt;p&gt;When you first &lt;a href=&quot;https://iodide.io/tryit&quot;&gt;create a new Iodide notebook&lt;/a&gt;, you start off in the “explore view.” This provides a set of panes including an editor for writing code, a console for viewing the output from code you evaluate, a workspace viewer for examining the variables you’ve created during your session, and a “report preview” pane in which you can see a preview of your report.&lt;/p&gt;
&lt;div id=&quot;attachment_33260&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;size-full wp-image-33260&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/explore-evictions-nb.gif&quot; alt=&quot;Editing a Markdown code chunk in Iodide's Explore View&quot; width=&quot;1200&quot; height=&quot;788&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Editing a Markdown code chunk in Iodide’s explore view.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;By clicking the “REPORT” button in the top right corner, the contents of your report preview will expand to fill the entire window, allowing you to put the story you want to tell front and center. Readers who don’t know how to code or who aren’t interested in the technical details are able to focus on what you’re trying to convey without having to wade through the code. When a reader visits the link to the report view, your code will runs automatically. if they want to review your code, simply clicking the “EXPLORE” button in the top right will bring them back into the explore view. From there, they can make a copy of the notebook for their own explorations.&lt;/p&gt;
&lt;div id=&quot;attachment_33264&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;32&quot;&gt;&lt;img class=&quot;wp-image-33264 size-full&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/report-evictions-loop.gif&quot; alt=&quot;Moving from Explore to Report View.&quot; width=&quot;1200&quot; height=&quot;790&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Moving from explore to report view.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Whenever you share a link to an Iodide notebook, your collaborator can always access to both of these views. The clean, readable document is never separated from the underlying runnable code and the live editing environment.&lt;/p&gt;
&lt;h3&gt;Live, interactive documents with the power of the Web Platform&lt;/h3&gt;
&lt;p&gt;Iodide documents live in the browser, which means the computation engine is always available. Whenever you share your work, you share a live interactive report with running code. Moreover, since the computation happens in the browser alongside the presentation, there is no need to call a language backend in another process. This means that interactive documents update in real-time, opening up the possibility of &lt;a href=&quot;https://iodide.io/notebooks/34/?viewMode=report&quot;&gt;seamless 3D visualizations&lt;/a&gt;, even with the &lt;a href=&quot;https://iodide.io/notebooks/337/?viewMode=report&quot;&gt;low-latency and high frame-rate required for VR&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;wp-caption alignnone&quot; readability=&quot;7&quot;&gt;&lt;a href=&quot;http://iodide.io/notebooks/194/?viewMode=report&quot;&gt;&lt;img class=&quot;size-full wp-image-33257&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/peering-into-the-unknown.gif&quot; alt=&quot;MRI&quot; width=&quot;1200&quot; height=&quot;788&quot;/&gt;&lt;/a&gt;
&lt;p class=&quot;wp-caption-text&quot;&gt;Contributor Devin Bayly explores MRI data of his brain&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;Sharing, collaboration, and reproducibility&lt;/h3&gt;
&lt;p&gt;Building Iodide in the web simplifies a number of the elements of workflow friction that we’ve encountered in other tools. Sharing is simplified because the write-up and the code are available at the same URL rather than, say, pasting a link to a script in the footnotes of a Google Doc. Collaboration is simplified because the compute kernel &lt;em&gt;is&lt;/em&gt; the browser and libraries can be loaded via an HTTP request like any webpage loads script — no additional languages, libraries, or tools need to be installed. And because browsers provide a compatibility layer, you don’t have to worry about notebook behavior being reproducible across computers and OSes.&lt;/p&gt;
&lt;p&gt;To support collaborative workflows, we’ve built a fairly simple server for saving and sharing notebooks. There is a public instance at &lt;a href=&quot;http://iodide.io&quot;&gt;iodide.io&lt;/a&gt; where you can experiment with Iodide and share your work publicly. It’s also possible to set up your own instance behind a firewall (and indeed this is what we’re already doing at Mozilla for some internal work). But importantly, the notebooks themselves are not deeply tied to a single instance of the Iodide server. Should the need arise, it should be easy to migrate your work to another server or export your notebook as a bundle for sharing on other services like Netlify or Github Pages (more on exporting bundles below under “What’s next?”). Keeping the computation in the client allows us to focus on building a really great environment for sharing and collaboration, without needing to build out computational resources in the cloud.&lt;/p&gt;
&lt;h3&gt;Pyodide: The Python science stack in the browser&lt;/h3&gt;
&lt;p&gt;When we started thinking about making the web better for scientists, we focused on ways that we could make working with Javascript better, like compiling existing scientific libraries to WebAssembly and wrapping them in easy to use JS APIs. When we proposed this to &lt;a href=&quot;https://research.mozilla.org/webassembly/&quot;&gt;Mozilla’s WebAssembly wizards&lt;/a&gt;, they offered a more ambitious idea: if many scientists prefer Python, meet them where they are by compiling the Python science stack to run in WebAssembly.&lt;/p&gt;
&lt;p&gt;We thought this sounded daunting — that it would be an enormous project and that it would never deliver satisfactory performance… but &lt;em&gt;two weeks later&lt;/em&gt; &lt;a href=&quot;https://github.com/mdboom&quot;&gt;Mike Droettboom&lt;/a&gt; had a working implementation of Python running inside an Iodide notebook. Over the next couple months, we  added Numpy, Pandas, and Matplotlib, which are &lt;a href=&quot;https://github.com/activityhistory/jupyter_on_github/blob/master/notebooks/9_notebook_clustering.ipynb&quot;&gt;by far the most used&lt;/a&gt; modules in the Python science ecosystem. With help from contributors Kirill Smelkov and Roman Yurchak at &lt;a href=&quot;https://www.nexedi.com/&quot;&gt;Nexedi&lt;/a&gt;, we landed support for Scipy and scikit-learn. Since then, we’ve continued adding &lt;a href=&quot;https://github.com/iodide-project/pyodide/tree/master/packages&quot;&gt;other libraries&lt;/a&gt; bit by bit.&lt;/p&gt;
&lt;p&gt;Running the Python interpreter inside a Javascript virtual machine adds a performance penalty, but that penalty turns out to be surprisingly small — in our benchmarks, around 1x-12x slower than native on Firefox and 1x-16x slower on Chrome. Experience shows that this is very usable for interactive exploration.&lt;/p&gt;
&lt;div id=&quot;attachment_33256&quot; class=&quot;wp-caption alignnone&quot; readability=&quot;34&quot;&gt;&lt;img class=&quot;wp-image-33256 size-full&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/03/coolwarm-vs-viridis-1.gif&quot; alt=&quot;Matplotlib running in the browser&quot; width=&quot;1200&quot; height=&quot;788&quot;/&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;Running Matplotlib in the browser enables its interactive features, which are unavailable in static environments&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Bringing Python into the browser creates some magical workflows. For example, you can import and clean your data in Python, and then access the resulting Python objects from Javascript (in most cases, the conversion happens automatically) so that you can display them using JS libraries like &lt;a href=&quot;https://d3js.org/&quot;&gt;d3&lt;/a&gt;. Even more magically, you can access browser APIs from Python code, allowing you to do things like &lt;a href=&quot;https://iodide.io/notebooks/300&quot;&gt;manipulate the DOM without touching Javascript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, there’s a lot more to say about &lt;a href=&quot;https://github.com/iodide-project/pyodide&quot;&gt;Pyodide&lt;/a&gt;, and it deserves an article of its own — we’ll go into more detail in a follow up post next month.&lt;/p&gt;
&lt;h3&gt;JSMD (JavaScript MarkDown)&lt;/h3&gt;
&lt;p&gt;Just as in Jupyter and R’s R-Markdown mode, in Iodide you can interleave code and write-up as you wish, breaking your code into “code chunks” that you can modify and run as a separate units. Our implementation of this idea parallels R Markdown and MATLAB’s “cell mode”: rather than using an explicitly cell-based interface, the content of an Iodide notebook is just a text document that uses a special syntax to delimit specific types of cells. We call this text format “JSMD”.&lt;/p&gt;
&lt;p&gt;Following MATLAB, code chunks are defined by lines starting with &lt;code&gt;%%&lt;/code&gt; followed by a string indicating the language of the chunk below. We currently support chunks containing Javascript, CSS, Markdown (and HTML), Python, a special “fetch” chunk that simplifies loading resources, and a plugin chunk that allows you to extend Iodide’s functionality by adding new cell types.&lt;/p&gt;
&lt;p&gt;We’ve found this format to be quite convenient. It makes it easy to use text-oriented tools like diff viewers and your own favorite text editor, and you can perform standard text operations like cut/copy/paste without having to learn shortcuts for cell management. For more details you can &lt;a href=&quot;https://iodide-project.github.io/docs/jsmd/&quot;&gt;read about JSMD&lt;/a&gt; in our docs.&lt;/p&gt;
&lt;h2&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;It’s worth repeating that we’re still in alpha, so we’ll be continuing to improve overall polish and squash bugs. But in addition to that, we have a number of features in mind for our next round of experimentation. If any of these ideas jump out as particularly useful, let us know! Even better, let us know if you’d like to help us build them!&lt;/p&gt;
&lt;h3&gt;Enhanced collaborative features&lt;/h3&gt;
&lt;p&gt;As mentioned above, so far we’ve built a very simple backend that allows you to save your work online, look at work done by other people, and quickly fork and extend existing notebooks made by other users, but these are just the initial steps in a useful collaborative workflow.&lt;/p&gt;
&lt;p&gt;The next three big collaboration features we’re looking at adding are:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Google Docs-style comment threads&lt;/li&gt;
&lt;li&gt;The ability to suggest changes to another user’s notebook via a fork/merge workflow similar to Github pull requests&lt;/li&gt;
&lt;li&gt;Simultaneous notebook editing like Google Docs.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;At this point, we’re prioritizing them in roughly that order, but if you would tackle them in a different order or if you have other suggestions, let us know!&lt;/p&gt;
&lt;h3&gt;More languages!&lt;/h3&gt;
&lt;p&gt;We’ve spoken to folks from the R and Julia communities about compiling those languages to WebAssembly, which would allow their use in Iodide and other browser-based projects. Our initial investigation indicates that this should be doable, but that implementing these languages might be a bit more challenging than Python. As with Python, some cool workflows open up if you can, for example, fit statistical models in R or solve differential equations in Julia, and then display your results using browser APIs. If bringing these languages to the web interests you, please reach out — in particular, we’d love help from FORTRAN and LLVM experts.&lt;/p&gt;
&lt;h3&gt;Export notebook archive&lt;/h3&gt;
&lt;p&gt;Early versions of Iodide were self-contained runnable HTML files, which included both the JSMD code used in the analysis, and the JS code used to run Iodide itself, but we’ve moved away from this architecture. Later experiments have convinced us that the collaboration benefits of having an Iodide server outweigh the advantages of managing files on your local system. Nonetheless, these experiments showed us that it’s possible to take a runnable snapshot of an Iodide notebook by inling the Iodide code along with any data and libraries used by a notebook into one big HTML file. This might end up being a bigger file than you’d want to serve to regular users, but it could prove useful as a perfectly reproducible and archivable snapshot of an analysis.&lt;/p&gt;
&lt;h3&gt;Iodide to text editor browser extension&lt;/h3&gt;
&lt;p&gt;While many scientists are quite used to working in browser-based programming environments, we know that some people will never edit code in anything &lt;a href=&quot;https://blog.harterrt.com/coding_in_textboxes.html&quot;&gt;other than their favorite text editor&lt;/a&gt;. We really want Iodide to meet people where they are already, including those who prefer to type their code in another editor but want access to the interactive and iterative features that Iodide provides. To serve that need, we’ve started thinking about creating a lightweight browser extension and some simple APIs to let Iodide talk to client-side editors.&lt;/p&gt;
&lt;h2&gt;Feedback and collaboration welcome!&lt;/h2&gt;
&lt;p&gt;We’re not trying to solve all the problems of data science and scientific computing, and we know that Iodide will not be everyone’s cup of tea. If you need to process terabytes of data on GPU clusters, Iodide probably doesn’t have much to offer you. If you are publishing journal articles and you just need to write up a LaTeX doc, then there are better tools for your needs. If the whole trend of bringing things into the browser makes you cringe a little, no problem — there are a host of really amazing tools that you can use to do science, and we’re thankful for that! We don’t want to change the way anyone works, and for many scientists web-focused communication is beside the point. Rad! Live your best life!&lt;/p&gt;
&lt;p&gt;But for those scientists who &lt;em&gt;do&lt;/em&gt; produce content for the web, and for those who might like to do so if you had tools designed to support the way you work: we’d really love to hear from you!&lt;/p&gt;
&lt;p&gt;Please visit &lt;a href=&quot;https://extremely-alpha.iodide.io/&quot;&gt;iodide.io&lt;/a&gt;, try it out, and give us feedback (but again: keep in mind that this project is in alpha phase — please don’t use it for any critical work, and please be aware that while we’re in alpha everything is subject to change). You can &lt;a href=&quot;https://qsurvey.mozilla.com/s3/scientific-computing-survey&quot;&gt;take our quick survey&lt;/a&gt;, and &lt;a href=&quot;https://github.com/iodide-project/iodide/issues/new&quot;&gt;Github issues and bug reports&lt;/a&gt; are very welcome. Feature requests and thoughts on the overall direction can be shared via our &lt;a href=&quot;https://groups.google.com/forum/#!forum/iodide-dev&quot;&gt;Google group&lt;/a&gt; or &lt;a href=&quot;https://gitter.im/iodide-project/iodide&quot;&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’d like to get involved in helping us build Iodide, &lt;a href=&quot;https://github.com/iodide-project/iodide&quot;&gt;we’re open source on Github&lt;/a&gt;. Iodide touches a wide variety of software disciplines, from modern frontend development to scientific computing to compilation and transpilation, so there are a lot of interesting things to do! Please reach out if any of this interests you!&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;em&gt;Huge thanks to&lt;/em&gt; &lt;a href=&quot;https://github.com/hamilton&quot;&gt;&lt;em&gt;Hamilton Ulmer&lt;/em&gt;&lt;/a&gt;&lt;em&gt;,&lt;/em&gt; &lt;a href=&quot;https://wrla.ch&quot;&gt;&lt;em&gt;William Lachance&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, and&lt;/em&gt; &lt;a href=&quot;https://github.com/mdboom&quot;&gt;&lt;em&gt;Mike Droettboom&lt;/em&gt;&lt;/a&gt; &lt;em&gt;for their great work on Iodide and for reviewing this article.&lt;/em&gt;&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;0&quot;&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/bcolloranmozilla-com/&quot;&gt;More articles by Brendan Colloran…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Wed, 13 Mar 2019 21:13:09 +0000</pubDate>
<dc:creator>pablobaz</dc:creator>
<og:url>https://hacks.mozilla.org/2019/03/iodide-an-experimental-tool-for-scientific-communicatiodide-for-scientific-communication-exploration-on-the-web</og:url>
<og:title>Iodide: an experimental tool for scientific communication and exploration on the web – Mozilla Hacks - the Web developer blog</og:title>
<og:description>Meet Iodide, an experimental open source tool to help scientists write beautiful interactive documents using web technologies, all within a browser-based iterative workflow that will be familiar to many scientists.</og:description>
<og:image>https://hacks.mozilla.org/files/2019/03/brain_2.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2019/03/iodide-an-experimental-tool-for-scientific-communicatiodide-for-scientific-communication-exploration-on-the-web/</dc:identifier>
</item>
<item>
<title>Give Me Back My Monolith</title>
<link>http://www.craigkerstiens.com/2019/03/13/give-me-back-my-monolith/</link>
<guid isPermaLink="true" >http://www.craigkerstiens.com/2019/03/13/give-me-back-my-monolith/</guid>
<description>&lt;p&gt;It feels like we’re starting to pass the peak of the hype cycle of microservices. It’s no longer multiple times a week we now see a blog post of “How I migrated my monolith to 150 services”. Now I often hear a bit more of the counter: “I don’t hate my monolith, I just care that things stay performant”. We’ve actually seen some migrations from &lt;a href=&quot;https://segment.com/blog/goodbye-microservices/&quot;&gt;micro-services back to a monolith&lt;/a&gt;. When you go from one large application to multiple smaller services there are a number of new things you have to tackle, here is a rundown of all the things that were simple that you now get to re-visit: &lt;/p&gt;
&lt;h3&gt;Setup went from intro chem to quantum mechanics&lt;/h3&gt;
&lt;p&gt;Setting up a basic database and my application with a background process was a pretty defined process. I’d have the readme on Github, and often in an hour or maybe a few I’d be up and running when I started on a new project. Onboarding a new engineering, at least for an initial environment would be done in the first day. As we ventured into micro-services onboarding time skyrocketed. Yes, we have docker and orchestration such as K8s these days to help, but the time from start to up and running a K8s cluster just to onboard a new engineer is orders of magnitude larger than we saw a few years ago. For many junior engineers this is a burden that really is unnecessary complexity.&lt;/p&gt;
&lt;h3&gt;So long for understanding our systems&lt;/h3&gt;
&lt;p&gt;Lets stay on the junior engineer perspective for just a moment. Back when we had monolithic apps if you had an error you had a clear stacktrace to see where it originated from and could jump right in and debug. Now we have a service that talks to another service, that queues something on a message bus, that another service processes, and then we have an error. We have to piece together all of these pieces to eventually learn that service a was on version 11 and service q was expecting vesion 12 already. This in contrast to my standard consolidated log, and lets not forget my interactive terminal/debugger for when I wanted to go step by step through the process. Debugging and understanding is now inherintly more complicated.&lt;/p&gt;
&lt;h3&gt;If we can’t debug them, maybe we can test them&lt;/h3&gt;
&lt;p&gt;Continuous integration and continuous development is now starting to become common place. Most new apps I see now days automatically build and run their tests with a new PR and require tests to pass and review before check-in. These are great processes to have in place and have been a big shift for a lot of companies. But now to really test my service I have to bring up a complete working version of my application. Remember back to onboarding that new engineer with their 150 service K8s cluster? Well now we get to teach our CI system how to bring up all those systems to actually test that things are working. That is probably a bit too much effort so we’re just going to test each piece in isolation, I’m sure our specs were good enough that APIs are clean and service failure is isolated and won’t impact others.&lt;/p&gt;
&lt;h3&gt;All the trade-offs are for a good reason. Right?&lt;/h3&gt;
&lt;p&gt;There are a lot of reasons to migrate to micro-services. I’ve heard cases for more agility, for scaling your teams, for performance, to give you a more resilient service. The reality we’ve invested decades into development practices and tooling around monoliths that are still maturing. In my &lt;a href=&quot;https://www.citusdata.com/product/cloud&quot;&gt;day to day&lt;/a&gt; I work with a lot of folks from all different stacks. Usually we’re talking about scaling because they’re running into limits of a single node Postgres database. Most of our conversation focuses on &lt;a href=&quot;https://www.citusdata.com/blog/2018/06/28/scaling-from-one-to-one-hundred-thousand-tenants/&quot;&gt;scaling the database&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But in all the conversations I’m fascinated to learn about their architecture. Where are they in their journey to micro-services. It has been an interesting trend to see more and more reactions “We’re happy with our monolithic app.” The road to micro-services may work fine for lots, and the benefits may outweigh the bumpy road to get there, but personally give me my monolithic app and a beach somewhere and I’ll be happy.&lt;/p&gt;
</description>
<pubDate>Wed, 13 Mar 2019 19:36:46 +0000</pubDate>
<dc:creator>zdw</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.craigkerstiens.com/2019/03/13/give-me-back-my-monolith/</dc:identifier>
</item>
<item>
<title>U.S. to ground Boeing 737 Max 8</title>
<link>https://www.businessinsider.com/us-bans-boeing-737-max-8-after-ethiopian-airline-lion-air-crashes-2019-3</link>
<guid isPermaLink="true" >https://www.businessinsider.com/us-bans-boeing-737-max-8-after-ethiopian-airline-lion-air-crashes-2019-3</guid>
<description>&lt;p class=&quot;&quot;&gt;The United States on Wednesday joined Canada, the European Union, and &lt;a href=&quot;https://www.businessinsider.com/countries-airlines-ban-boeing-737-max-8-airspace-2019-3&quot;&gt;several other countries and airlines&lt;/a&gt; in banning the Boeing 737 Max aircraft from its airspace following Sunday's Ethiopian Airlines crash that killed 157 people.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;President Donald Trump said he would issue an order to ground all 737 Max aircraft, effective immediately.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&quot;We're going to be ordering an emergency order to ground all 737 Max 8 and the 737 Max 9 and planes associated with that line,&quot; Trump said. &quot;Any plane currently in the air will go to its destination and thereafter be grounded until further notice.&quot;&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;Several US lawmakers had &lt;a href=&quot;https://www.businessinsider.com/lawmakers-urge-faa-ground-boeing-737-max-8s-after-deadly-ethiopian-lion-air-crashes-2019-3&quot;&gt;called for grounding the plane&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;In a statement, Boeing said it recommended to the Federal Aviation Administration that the 737 Max be grounded &quot;out of an abundance of caution and in order to reassure the flying public of the aircraft's safety.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Wednesday's decision marked an about-face for the FAA, which had said as late as Tuesday evening &lt;a href=&quot;https://www.businessinsider.com/faa-says-no-basis-ground-boeing-737-max-2019-3&quot; target=&quot;_blank&quot;&gt;that it saw no reason to ground&lt;/a&gt; the 737 Max aircraft operating in the US.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-caption&quot;&gt;A Southwest Airlines Boeing 737 Max 8. &lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;Southwest Airlines&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;There are 371 Boeing 737 Max aircraft in operation around the world.&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;The US is the last major operator of the 737 Max to ground the aircraft type. China, which has the most Max aircraft, grounded its fleet on Monday. The Europe Union on Tuesday banned the plane from its airspace.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;em class=&quot;&quot;&gt;&lt;strong class=&quot;&quot;&gt;Read more:&lt;/strong&gt;: &lt;a href=&quot;https://www.businessinsider.com/airlines-that-fly-the-boeing-737-max-2018-11&quot;&gt;2 Boeing 737 Max airliners have crashed since October — here are the airlines that fly the plane&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The 737 Max's major US customers include Southwest Airlines, American Airlines, and United Airlines. Southwest is the 737 Max 8's largest customer, with 34 planes in its fleet. American operates 24 of the aircraft, while United flies 14 of the larger 737 Max 9 variant.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&quot;Earlier today the Federal Aviation Administration (FAA) informed us that based on new information, they are grounding the United States Boeing 737 MAX fleet out of an abundance of caution,&quot; American Airlines said in a statement to Business Insider. &quot;Our teams will be working to rebook customers as quickly as possible, and we apologize for any inconvenience.&quot;&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;Southwest and United were not immediately available for comment.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-caption&quot;&gt;A United Airlines Boeing 737 Max 9. &lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;United Airlines&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;a href=&quot;https://www.businessinsider.com/ethiopian-airline-flight-to-nairobi-crashes-passengers-2019-3&quot; target=&quot;_blank&quot;&gt;Ethiopian Airlines Flight ET302&lt;/a&gt; crashed shortly after taking off from Addis Ababa Bole International Airport on Sunday, killing all 157 passengers and crew members on board the four-month-old plane.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;It was the second nearly brand-new Boeing 737 Max 8 airliner involved in a fatal crash in recent months. In October, Lion Air Flight JT610 crashed in the Java Sea shortly after taking off from Jakarta, Indonesia, killing all 189 people on board.&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;On Tuesday, &lt;a href=&quot;https://www.businessinsider.com/boeing-737-max-receive-updated-control-software-2019-3&quot; target=&quot;_blank&quot;&gt;Boeing announced it would roll out an updated version&lt;/a&gt; of the 737 Max's control software in the coming weeks. It said the update has been in the works since the Lion Air crash.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The Wall Street Journal reported on Tuesday that the implementation of the software &lt;a href=&quot;https://www.businessinsider.com/boeing-ethiopian-crash-government-shutdown-delayed-plane-software-fix-2019-3&quot; target=&quot;_blank&quot;&gt;was delayed by the 35-day government shutdown&lt;/a&gt; from late December to January.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-caption&quot;&gt;Ethiopian police officers walk past the debris of the Ethiopian Airlines Flight 302 plane crash, near the town of Bishoftu, near Addis Ababa. &lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;Reuters&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;At the heart of the controversy surrounding the 737 Max is its Maneuvering Characteristics Augmentation System, or MCAS.&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;To fit the Max's larger, more fuel-efficient engines, Boeing had to redesign the way it mounts engines on the 737. This change disrupted the plane's center of gravity and caused the Max to tend to tip its nose upward during flight, increasing the likelihood of a stall. The system is designed to automatically counteract that tendency and point the nose down.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Initial reports from the Lion Air investigation indicated that a faulty sensor reading may have triggered the system shortly after takeoff. Observers fear that a similar thing happened during the Ethiopian Airlines flight.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The Boeing 737 &lt;a href=&quot;https://www.businessinsider.com/how-boeing-737-max-plane-became-best-seller-2019-3&quot; target=&quot;_blank&quot;&gt;is the best-selling airliner of all time&lt;/a&gt;. Since 1965, the American aviation giant has taken orders for a whopping 15,000 737s.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Over the years, Boeing has introduced four distinct generations of the 737, the latest being the 737 Max that entered service in 2017.&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;Boeing has orders for roughly 5,000 737 Max jets, making it the fastest-selling plane in the company's history.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;span class=&quot;image-source-caption&quot;&gt;The cockpit of a 737 Max. &lt;span class=&quot;image-source&quot; data-e2e-name=&quot;image-source&quot;&gt;Boeing&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Boeing &lt;a href=&quot;https://www.businessinsider.com/boeing-737-max-profit-moodys-2019-3&quot; target=&quot;_blank&quot;&gt;lists the 737 Max 8 at $121.6 million&lt;/a&gt;. But according to industry research from &lt;a href=&quot;https://www.tealgroup.com/&quot; target=&quot;_blank&quot;&gt;Teal Group&lt;/a&gt;, buyers usually receive a discount of 50% to 55% on the planes.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The 737 Max is built alongside the previous-generation 737NG (Boeing 737-600, -700, -800, and -900) at Boeing's factory in Renton, Washington.&lt;/p&gt;

&lt;p class=&quot;&quot;&gt;By the end of last year, Boeing had ramped up production of the 737 to 52 aircraft a month. It said it planned to produce 57 a month this year.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Last year, Boeing delivered 256 Max aircraft to customers, representing nearly half of all 737 deliveries.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Boeing Commercial Airplanes, the company's airliner division, has a backlog of 5,870 planes — including 4,699 737s — valued at more than $400 billion.&lt;/p&gt;
</description>
<pubDate>Wed, 13 Mar 2019 18:35:58 +0000</pubDate>
<dc:creator>wine_labs</dc:creator>
<og:title>Trump announces all Boeing 737 Max jets are immediately grounded following its 2nd crash in 5 months</og:title>
<og:description>The US had resisted calls to ground the plane as much of the rest of the world did so.</og:description>
<og:type>article</og:type>
<og:url>https://www.businessinsider.com/us-bans-boeing-737-max-8-after-ethiopian-airline-lion-air-crashes-2019-3</og:url>
<og:image>https://amp.businessinsider.com/images/5c893fc85dfa9919b245688c-1920-960.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.businessinsider.com/us-bans-boeing-737-max-8-after-ethiopian-airline-lion-air-crashes-2019-3</dc:identifier>
</item>
<item>
<title>Facebook, Instagram go down around the world in an apparent outage</title>
<link>https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-go-down-across-united-states-apparent-outage/3151883002/</link>
<guid isPermaLink="true" >https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-go-down-across-united-states-apparent-outage/3151883002/</guid>
<description>&lt;div id=&quot;module-position-RoeTDPI_pLI&quot; class=&quot;story-asset video-asset&quot;&gt;
&lt;div class=&quot;ui-video-wrapper&quot; itemprop=&quot;video&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/VideoObject&quot; readability=&quot;8&quot;&gt;

&lt;div class=&quot;js-ui-video-init ui-pluto-video js-video-aps js-uw-iframe-video uw-iframe-video story-video inline-story-video priority smallarticleattophtml5&quot; data-video-id=&quot;3155418002&quot; data-snow-enabled=&quot;true&quot;&gt;
&lt;div class=&quot;js-ptb pluto-title-bar&quot;&gt;

&lt;div class=&quot;js-ptb-close pluto-title-bar-vcenter pluto-title-bar-close&quot;&gt;
&lt;div&gt;CLOSE&lt;img class=&quot;pluto-title-bar-close-icon&quot; src=&quot;https://www.gannett-cdn.com/uxstatic/usatoday/usat-web-static-5004.5.0/images/sprites/icon_close.png&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ui-video-controls story-video inline-story-video priority&quot; readability=&quot;36&quot;&gt;
&lt;p class=&quot;video-desc&quot; itemprop=&quot;description&quot;&gt;Facebook platform users hit Twitter with #facebookdown Wednesday, after losing access to Facebook, Instagram and Messenger across the world. &lt;span class=&quot;credit&quot;&gt;Wochit, USA TODAY&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;speakable-p-1 p-text&quot;&gt;Having trouble accessing Facebook or Instagram on Wednesday? You weren't alone. &lt;/p&gt;
&lt;p class=&quot;speakable-p-2 p-text&quot;&gt;The massively popular social network started having problems at around noon Eastern time, with issues popping up across Facebook proper, Facebook Messenger and Instagram around the world. The service outage is one of the longest Facebook has ever experienced.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;After being out much of Wednesday, &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.usatoday.com/story/tech/talkingtech/2019/03/13/longest-facebook-outage-march-13/3156516002/&quot;&gt;Facebook began to come back to life early Thursday morning after midnight ET&lt;/a&gt; for many users.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;As of publication, service had not yet been fully restored, but some users are able to access it more than others.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://twitter.com/robleathern/status/1105900274474840067&quot;&gt;Rob Leathern‏&lt;/a&gt;, Facebook director of product, tweeted early Wednesday afternoon that officials were “also aware that people are experiencing issues with access to our ads interfaces, we'll share an update as soon as possible.”&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Around 9:30 p.m. &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://twitter.com/robleathern/status/1106004303603351552&quot;&gt;Leathern tweeted&lt;/a&gt; “I don’t have any update yet :(“&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;A Facebook spokesperson told USA TODAY that as of 10 p.m. ET, there's no update on when the service will be fully restored.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;More:&lt;/strong&gt; &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.usatoday.com/story/tech/talkingtech/2019/03/13/how-protect-your-facebook-credentials/3155192002/&quot;&gt;How to protect your Facebook credentials&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;Start the day smarter:&lt;/strong&gt; &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://profile.usatoday.com/newsletters/daily-briefing/&quot;&gt;Get USA TODAY's Daily Briefing in your inbox&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Roland Dobbins, an engineer with network performance firm Netscout said the outage was due to an accidental traffic jam issue with a European internet company that collided with Facebook and other websites.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&quot;While not malicious in nature, such events can prove disruptive on a widespread basis,&quot; he said.  &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;Some users of Facebook-owned WhatsApp reported having issues sending photos on the popular messaging app.&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;As with nearly every Facebook outage, users headed to Twitter with the hashtag #facebookdown quickly becoming the top trending topic in the United States. &lt;/p&gt;
&lt;div id=&quot;module-position-RoeTDPJrNQI&quot; class=&quot;story-asset oembed-asset&quot;&gt;
&lt;div class=&quot;blog-oembed-wrap&quot;&gt;
&lt;div class=&quot;js-oembed blog-oembed blog-oembed-twitter blog-oembed-type-rich&quot; data-oembed-type=&quot;rich&quot; data-oembed-provider=&quot;twitter&quot; readability=&quot;20.844036697248&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.5596330275229&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Down Detector seems to show Facebook issues all over the world, particularly in U.S. and Western Europe. &lt;a href=&quot;https://twitter.com/hashtag/facebookdown?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#facebookdown&lt;/a&gt;&lt;a href=&quot;https://t.co/EsbvrT2tcd&quot;&gt;https://t.co/EsbvrT2tcd&lt;/a&gt;&lt;a href=&quot;https://t.co/frb1KGCO10&quot;&gt;pic.twitter.com/frb1KGCO10&lt;/a&gt;&lt;/p&gt;
— Eli Blumenthal (@eliblumenthal) &lt;a href=&quot;https://twitter.com/eliblumenthal/status/1105876217461387264?ref_src=twsrc%5Etfw&quot;&gt;March 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://downdetector.com/status/facebook/map/&quot;&gt;Downdetector.com&lt;/a&gt;, which monitors websites, showed the company experiencing issues across a large portion of the U.S. and Europe in addition to reported problems in parts of South America, Asia and Australia. &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;It is not immediately clear what caused Wednesday's issue. Some users reported seeing a message saying the site was down for &quot;required maintenance,&quot; while others were able to get the social networks to briefly load before discovering that functionality was limited.  &lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&quot;We’re aware that some people are currently having trouble accessing the Facebook family of apps,&quot; a Facebook spokesperson said in a statement provided to USA TODAY. &quot;We’re working to resolve the issue as soon as possible.&quot;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;In a tweet at 3:03 p.m. ET, the company reiterated that it is still working on a fix. Facebook also confirmed that the outage was not the result of any distributed denial of service, or DDoS attack.&lt;/p&gt;
&lt;div id=&quot;module-position-RoeTDPJP5i0&quot; class=&quot;story-asset oembed-asset&quot;&gt;
&lt;div class=&quot;blog-oembed-wrap&quot;&gt;
&lt;div class=&quot;js-oembed blog-oembed blog-oembed-twitter blog-oembed-type-rich&quot; data-oembed-type=&quot;rich&quot; data-oembed-provider=&quot;twitter&quot; readability=&quot;29.364705882353&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;6.4235294117647&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We're focused on working to resolve the issue as soon as possible, but can confirm that the issue is not related to a DDoS attack.&lt;/p&gt;
— Facebook (@facebook) &lt;a href=&quot;https://twitter.com/facebook/status/1105907126424109056?ref_src=twsrc%5Etfw&quot;&gt;March 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;Twitter time:&lt;/strong&gt; &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-outage-brings-conversation-twitter/3156099002/&quot;&gt;What to do when Facebook and Instagram go down? Head to Twitter to tweet #FacebookDown&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;span class=&quot;exclude-from-newsgate&quot;&gt;&lt;strong&gt;One of longest outages:&lt;/strong&gt; &lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://www.usatoday.com/story/tech/talkingtech/2019/03/13/longest-facebook-outage-march-13/3156516002/&quot;&gt;Facebook, Instagram, WhatsApp somewhat restored early Thursday&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;p-text&quot;&gt;&lt;em&gt;Contributing: Jessica Guynn; Kelly Tyko&lt;/em&gt;&lt;/p&gt;
&lt;p class=&quot;p-text p-text-last&quot; id=&quot;article-body-p-last&quot;&gt;&lt;em&gt;Follow Eli Blumenthal on Twitter @&lt;a data-track-label=&quot;inline|intext|n/a&quot; href=&quot;https://twitter.com/eliblumenthal&quot;&gt;eliblumenthal&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Read or Share this story: https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-go-down-across-united-states-apparent-outage/3151883002/&lt;/p&gt;
</description>
<pubDate>Wed, 13 Mar 2019 18:00:15 +0000</pubDate>
<dc:creator>ajiang</dc:creator>
<og:image>https://www.gannett-cdn.com/-mm-/b2b05a4ab25f4fca0316459e1c7404c537a89702/c=0-0-1365-768/local/-/media/2019/03/12/USATODAY/usatsports/joining-facebook-new-user.jpg?width=3200&amp;height=1680&amp;fit=crop</og:image>
<og:title>Facebook, Instagram were down most of Wednesday around the globe for many users</og:title>
<og:description>Having trouble accessing Facebook or Instagram Wednesday? You weren't alone.</og:description>
<og:url>https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-go-down-across-united-states-apparent-outage/3151883002/</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.usatoday.com/story/tech/talkingtech/2019/03/13/facebook-instagram-go-down-across-united-states-apparent-outage/3151883002/</dc:identifier>
</item>
<item>
<title>How we made Haskell search strings as fast as Rust</title>
<link>https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html</link>
<guid isPermaLink="true" >https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html</guid>
<description>&lt;header&gt;
&lt;aside class=&quot;info&quot;&gt;Posted on March 13, 2019 by &lt;span class=&quot;authors&quot;&gt;Ruud van Asseldonk&lt;/span&gt;&lt;/aside&gt;&lt;/header&gt;&lt;p&gt;In this post, we will describe our quest to create &lt;a href=&quot;https://github.com/channable/alfred-margaret&quot;&gt;Alfred–Margaret&lt;/a&gt;, the fastest Haskell implementation of the Aho–Corasick string searching algorithm, which powers string search in Channable.&lt;/p&gt;&lt;p&gt;Channable is a feed processing tool where users can define rules to optimize their product feeds. Oftentimes these rules rely on substring searching, for example to categorize products based on keywords that occur in the title, or to exclude products that use inappropriate words in their description. Substring searching is also a subproblem of string replacement, which is another common operation for us. Because substring searching makes up such a big chunk of our workload, we need it to be fast in order to keep our tool fast and responsive.&lt;/p&gt;
&lt;p&gt;Typically, a rule will have anywhere from one to a few hundred &lt;em&gt;needles&lt;/em&gt; (strings to search for), which will be used to search through possibly millions of products. &lt;em&gt;Aho–Corasick&lt;/em&gt; is a good string matching algorithm in this situation: it constructs a data structure once, which can then be used to search through many &lt;em&gt;haystacks&lt;/em&gt; (strings to search through). In theory this algorithm is efficient: the time complexity is linear in the length of the haystack plus the number of matches, and independent of the number of needles. Although algorithmic complexity definitely matters, in practice a fast string matching implementation is even more important.&lt;/p&gt;
&lt;p&gt;In the sections to follow, we will touch upon the algorithm briefly, and then explain how we got from high-level Haskell to tight machine code that outperforms the fastest Rust implementation we could find.&lt;/p&gt;
&lt;h2 id=&quot;research&quot;&gt;Research&lt;/h2&gt;
&lt;p&gt;Before embarking on our own implementation, we decided to check what libraries are out there, to see what kind of performance is possible, and to evaluate if we could use an off-the-shelf implementation directly. Our feed processing system is written in Haskell, so we were open to binding a library with a C ABI through the foreign function interface. And if we would have to write our own, having a fast implementation to take inspiration from would also be useful.&lt;/p&gt;
&lt;p&gt;We constructed a benchmark to evaluate string matching implementations. For a realistic comparison, we took a sample of the 242 slowest rules that our users had created, and dumped their needles and haystacks. This amounted to 3.5 gigabytes of UTF-16 data, with the number of needles per sample ranging from 1 to 5136, and a median needle length of 22 bytes. Because we use the &lt;code&gt;Text&lt;/code&gt; type for strings in Haskell, which is an array of UTF-16 code units in native endianness, the benchmarks would take UTF-16 data as input. The goal was to count the number of matches as quickly as possible. The measured time includes the time to construct the automaton.&lt;/p&gt;
&lt;p&gt;We considered the following contenders:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A naive Python script that loops over all needles and calls &lt;a href=&quot;https://docs.python.org/3.6/library/stdtypes.html?highlight=find#str.find&quot;&gt;&lt;code&gt;str.find&lt;/code&gt;&lt;/a&gt; in a loop to find all matches. This is not Aho–Corasick, but it provides a baseline for timing, and it provides a reference implementation which proved very valuable for checking correctness. We use Python 3.6.7.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yuttie/ac-machine&quot;&gt;A Haskell implementation by yuttie&lt;/a&gt;. This is the library we used before we started our optimization journey. We used version 0.2.0.5 of this library on GHC 8.2.2.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hankcs/AhoCorasickDoubleArrayTrie&quot;&gt;A Java implementation by hankcs&lt;/a&gt;. We used this library in the precursor to our current feed processing system, which was written in Scala. We use version 1.2.0 of this library on OpenJDK 10.0.2.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mischasan/aho-corasick&quot;&gt;A C implementation by mischasan&lt;/a&gt;. This library looked promising, but we could not get its test suite to build, so we moved on.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/burntsushi/aho-corasick&quot;&gt;A Rust implementation by BurntSushi&lt;/a&gt;, which is used in Ripgrep. We used version 0.6.8 of the library on Rust 1.29.2. &lt;/li&gt;
&lt;li&gt;Finally, to establish a lower bound, we benchmarked a Rust program that just calls &lt;a href=&quot;https://doc.rust-lang.org/std/primitive.slice.html#method.to_vec&quot;&gt;&lt;code&gt;to_vec()&lt;/code&gt;&lt;/a&gt; on the haystack, the equivalent of a &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;memcpy&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;preliminary-measurements&quot;&gt;Preliminary Measurements&lt;/h2&gt;
&lt;p&gt;Our benchmarks established the following times for working through all 3.5 gigabytes of test data once:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Aho–Corasick benchmark bar chart&quot; src=&quot;https://tech.channable.com/images/aho-perf-before.svg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The times shown are the means over 25 runs, the error bars indicate standard deviation.&lt;/p&gt;
&lt;p&gt;A few things to note here:&lt;/p&gt;
&lt;ul readability=&quot;8.9054441260745&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;The library we use currently is far from optimal!&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0.93567251461988&quot;&gt;
&lt;p&gt;The Python implementation decodes the UTF-16 input at load time. The runtime representation &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393/&quot;&gt;need not be&lt;/a&gt; UTF-16, so it has less bytes to traverse than the other contenders.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;4&quot;&gt;
&lt;p&gt;The Rust library only supports byte slices. If we would use this library, transcoding UTF-16 to UTF-8 on every FFI call would be expensive, and for string replacement we need match positions in the UTF-16 text. Therefore we match on the UTF-16 bytes directly. This means that the program is effectively doing twice the work: it treats every code unit as two characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;8&quot;&gt;
&lt;p&gt;The naive Python implementation is surprisingly fast, given that Python is an interpreted language, and it implements a suboptimal algorithm. There are two explanations for this. Firstly, the program spends most of its time in the heavily-optimized &lt;code&gt;str.find&lt;/code&gt; function, which is implemented in C. Interpreter overhead is small. Secondly, most samples have few needles, so looping over all needles is not so bad. Half of the samples have only 1 or 2 needles.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Clearly there was plenty of room for speeding up our string matching. We considered binding the Rust library, but due to the way that Haskell’s foreign function interface interacts with the garbage collector, passing a string to a foreign function requires copying it. That copy alone puts any foreign library at a significant disadvantage, so we decided to see how close we could get in Haskell alone.&lt;/p&gt;
&lt;h2 id=&quot;the-ahocorasick-automaton&quot;&gt;The Aho–Corasick Automaton&lt;/h2&gt;
&lt;p&gt;Before we can explain our other optimizations, we need to explain a bit of how Aho–Corasick works. At the heart of the algorithm is an automaton. The construction of this automaton is beyond the scope of this post. All we need to know for now is that the automaton consists of &lt;em&gt;states&lt;/em&gt; and &lt;em&gt;transitions&lt;/em&gt; between them. Transitions between states correspond to input characters. Additionally, every state apart from the initial state has a &lt;em&gt;failure transition&lt;/em&gt; to follow when there is no transition for the current input character. Every state can have zero or more needles associated with it. When we enter a state, we report all of the associated needles as matched. There can be multiple needles per state when needles overlap.&lt;/p&gt;
&lt;p&gt;To traverse the haystack, we take one or more steps in the automaton for every input character. If at the current state, there is a transition for the current input, then we take it, and move on to the next input character. If there is no transition, we first follow the failure transition and try again from there, until we end up in the initial state. If there is no transition from the initial state, we move on to the next input character.&lt;/p&gt;
&lt;p&gt;To give an example, suppose we we wanted to match &lt;em&gt;tshirt&lt;/em&gt;, &lt;em&gt;shirts&lt;/em&gt;, and &lt;em&gt;shorts&lt;/em&gt;. We would use the following automaton:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Aho–Corasick automaton matching tshirt, shirts, and shorts.&quot; src=&quot;https://tech.channable.com/images/automaton.svg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;State 0 is the initial state. The solid arrows indicate transitions associated with an input character, whereas the dashed arrows indicate a failure transition. For the sake of readability, failure transitions back to the initial state are not drawn.&lt;/p&gt;
&lt;p&gt;When matching on the text &lt;em&gt;short tshirts&lt;/em&gt;, we would step through the following states:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Input:   s   h   o    r    t    _   t   s   h   i   r   t   s
State: 0   7   8   13   14   15   0   1   2   3   4   5   6   12
Match:                                                    ^   ^&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For the first few input characters, we follow the input arrows. In state 15, when there is no transition for space, we first fall back to state 1, which has no transition for space either, and then we fall back to state 0. (Recall that the dotted line to state 0 is not drawn in the diagram.) In state 6, we report having matched &lt;em&gt;tshirt&lt;/em&gt; and in state 12 we report having matched &lt;em&gt;shirts&lt;/em&gt;. Now that we have seen how to step the automaton conceptually, we can start to consider implementation details.&lt;/p&gt;
&lt;h2 id=&quot;memory-layout&quot;&gt;Memory Layout&lt;/h2&gt;
&lt;p&gt;As is often the case in performance sensitive code, the key to our fast implementation was to use the right representation of the automaton in memory. To step the automaton, we need to keep track of three things for each state:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A transition table: a mapping from input character to next state.&lt;/li&gt;
&lt;li&gt;The state where the failure transition leads.&lt;/li&gt;
&lt;li&gt;A (possibly empty) set of needles to report as matched in this state.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The state itself is an integer, and in building the automaton we can assign consecutive unsigned integers to states. In the worst case, the number of states is the sum of the length of the needles, so we opted for a 32-bit integer.&lt;/p&gt;
&lt;p&gt;For the transition table, a hash map is an obvious data structure, and it is also what yuttie’s library uses. However, unlike array-backed mutable hash tables in Rust or C, Haskell’s &lt;a href=&quot;https://www.stackage.org/haddock/lts-11.22/unordered-containers-0.2.9.0/Data-HashMap-Strict.html&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; is implemented as a tree, a pointer-heavy data structure that is less cache-friendly than a flat array. The tree admits efficient inserts with structural sharing (after the insert, both the old &lt;em&gt;and&lt;/em&gt; the new hash map are available), but we do not need any of that. We only care about the performance of lookups. Building the automaton is a one-time task, whereas we need to traverse the automaton over and over.&lt;/p&gt;
&lt;p&gt;We could build our own hash tables on top of &lt;a href=&quot;https://www.stackage.org/haddock/lts-11.22/vector-0.12.0.1/Data-Vector-Unboxed.html&quot;&gt;unboxed vectors&lt;/a&gt;, a safe Haskell abstraction with the same memory representation as a Rust slice or C array. But do we need a hash table at all? It turns out that most transition tables are small. In the example in the previous section, 12 of the 17 states have a single transition (not counting the failure transition), three states have only the failure transition, and the remaining two have two non-failure transitions. So we tried an unordered array with linear search instead. We packed the 16-bit input code unit and the 32-bit go-to state together in a 64-bit integer, and now the transition table was a cache-friendly array of 64-bit integers.&lt;/p&gt;
&lt;p&gt;For every state, we now have this transition table, implemented as an array, and one failure transition. If we are going to do a linear scan over the array anyway, we can store the failure transition at the end. This has three advantages:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The failure go-to state does not need to be stored in a separate table, which is good for memory locality.&lt;/li&gt;
&lt;li&gt;It acts as a terminator for the linear scan, so we do not need to know the size of the table. For now &lt;code&gt;Vector&lt;/code&gt; still tracks a length for bounds checks, but later we will pack multiple tables in one vector.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;lookup with default&lt;/em&gt; operation can be implemented in one go: when the linear scan terminates, we either found a regular transition, or the failure transition.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Replacing &lt;code&gt;HashMap&lt;/code&gt; with these custom transition tables got us a 66% reduction in running time. Memory layout trumps algorithmic complexity for our workload.&lt;/p&gt;
&lt;h2 id=&quot;loops-recursion-and-goto&quot;&gt;Loops, Recursion and Goto&lt;/h2&gt;
&lt;p&gt;Although we had made great progress, our Haskell program still took twice as long as the Python version. Fiddling with strictness annotations and unboxed types helped to shave off a few percent of the running time, but we needed another order of magnitude improvement. We knew how fast string matching could be, and our memory layout was tight. Why was our program still so slow? We needed to dig into GHC’s compilation pipeline to learn what was going on. If you are not interested in Haskell optimization, you can skip this part and jump straight to the &lt;a href=&quot;https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html#results&quot;&gt;results&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stepping the automaton is fairly simple, it can be written as a triply nested loop. To stick with the earlier example, suppose we had the automaton set up like so, in pseudo-Python to illustrate the idea without too much noise:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot; readability=&quot;1.0679611650485&quot;&gt;
&lt;pre class=&quot;sourceCode python&quot;&gt;
&lt;code class=&quot;sourceCode python&quot;&gt;&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-1&quot; data-line-number=&quot;1&quot;&gt;haystack &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;'short tshirts'&lt;/span&gt;&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-2&quot; data-line-number=&quot;2&quot;&gt;failure_marker &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bn&quot;&gt;0x10000&lt;/span&gt;&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-3&quot; data-line-number=&quot;3&quot;&gt;transitions &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; {&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-4&quot; data-line-number=&quot;4&quot;&gt;    &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;: [(&lt;span class=&quot;st&quot;&gt;'t'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;st&quot;&gt;'s'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;), (failure_marker, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)],&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-5&quot; data-line-number=&quot;5&quot;&gt;    &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;: [(&lt;span class=&quot;st&quot;&gt;'s'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), (failure_marker, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)],&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-6&quot; data-line-number=&quot;6&quot;&gt;    &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;: [(&lt;span class=&quot;st&quot;&gt;'h'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;), (failure_marker, &lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;)],&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-7&quot; data-line-number=&quot;7&quot;&gt;    ...&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-8&quot; data-line-number=&quot;8&quot;&gt;    &lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;: [(&lt;span class=&quot;st&quot;&gt;'i'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;), (&lt;span class=&quot;st&quot;&gt;'o'&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;13&lt;/span&gt;), (failure_marker, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)],&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-9&quot; data-line-number=&quot;9&quot;&gt;    ...&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-10&quot; data-line-number=&quot;10&quot;&gt;}&lt;/a&gt;
&lt;a class=&quot;sourceLine&quot; id=&quot;cb2-11&quot; data-line-number=&quot;11&quot;&gt;needles_ending_at_state &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; { &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;: [], &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;: [], ...  &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;: [&lt;span class=&quot;st&quot;&gt;'tshirt'&lt;/span&gt;], ...  }&lt;/a&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we could step the automaton with a triply nested loop: one over the input characters, one to follow transitions, and one for the linear scan through the transition table.&lt;/p&gt;

&lt;p&gt;It would not be very hard to do this in a low-level language such as Rust, in a way that compiles down to efficient machine code, but in Haskell we have a problem: Haskell does not have loops.&lt;/p&gt;
&lt;p&gt;The way to loop in Haskell, is to make a tail recursive function. GHC compiles these down to loops, and we can verify that with &lt;code&gt;-ddump-simpl&lt;/code&gt;. This flag tells GHC to dump optimized Core, a basic, explicitly typed language which is an intermediate target in GHC’s compilation pipeline.&lt;/p&gt;
&lt;p&gt;For example, the following functions implement transition table lookup:&lt;/p&gt;

&lt;p&gt;Note that infix &lt;code&gt;!&lt;/code&gt; is the vector indexing operator. &lt;code&gt;!&lt;/code&gt; as prefix is unrelated; it is a strictness annotation. The dumped Core for &lt;code&gt;lookup&lt;/code&gt;, after renaming and omitting a few things for readability, looks like this:&lt;/p&gt;

&lt;p&gt;A few things stand out:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;#&lt;/code&gt; is all over the place. An &lt;code&gt;Int#&lt;/code&gt; is an unboxed signed integer, with a target-dependent size, like &lt;code&gt;int&lt;/code&gt; in C. &lt;code&gt;Word#&lt;/code&gt; is the unsigned variant. This is in contrast to &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Word&lt;/code&gt; in the original code, which are boxed: pointers to integers or thunks. &lt;code&gt;+#&lt;/code&gt; compiles to an ordinary add instruction, &lt;code&gt;and#&lt;/code&gt; to a bitwise and. An integer literal with &lt;code&gt;#&lt;/code&gt; suffix is an unboxed signed integer constant; a &lt;code&gt;##&lt;/code&gt; suffix makes it unsigned.&lt;/li&gt;
&lt;li&gt;The inliner inlined &lt;code&gt;transitionCodeUnit&lt;/code&gt; and the other helper functions.&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;Vector&lt;/code&gt; is a base pointer, offset, and length (to support slicing), and GHC deconstructed its fields into function arguments to avoid indirection.&lt;/li&gt;
&lt;li&gt;The tail call has been replaced with a jump.&lt;/li&gt;
&lt;li&gt;The function does construct either a &lt;code&gt;Left&lt;/code&gt; or &lt;code&gt;Right&lt;/code&gt; on the heap as return value.&lt;/li&gt;
&lt;/ul&gt;&lt;hr/&gt;&lt;p&gt;The middle loop for automaton stepping follows transitions. If a transition exists for the input character, the loop terminates after one step, but if the transition was a failure transition, we try again from the failure state. This translates to &lt;code&gt;followEdge&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;After inspecting the Core for this function, the culprit became clear: &lt;code&gt;lookup&lt;/code&gt; was not inlined. This meant that for every transition lookup, &lt;code&gt;followEdge&lt;/code&gt; would do a function call, &lt;code&gt;lookup&lt;/code&gt; would allocate an &lt;code&gt;Either&lt;/code&gt; return value on the heap, and then &lt;code&gt;followEdge&lt;/code&gt; would immediately match on it. We could get &lt;code&gt;lookup&lt;/code&gt; to be inlined in &lt;code&gt;followEdge&lt;/code&gt;, but then &lt;code&gt;followEdge&lt;/code&gt; would not be inlined into the calling &lt;code&gt;step&lt;/code&gt; function, the function that implements the outer loop. At this point we were stuck. We could avoid a function call for one of the loops, but not both. We could not manually inline these functions by copying the bodies either, because they were recursive. We knew exactly what kind of machine code we wanted, but not how to tell the compiler to generate it.&lt;/p&gt;
&lt;h2 id=&quot;from-state-machines-to-mutual-recursion&quot;&gt;From State Machines to Mutual Recursion&lt;/h2&gt;
&lt;p&gt;My colleague Radek offered a suggestion: what if — rather than implementing the triple loop as three functions — we would write &lt;em&gt;one&lt;/em&gt; function with three loop variables? The rough idea is this:&lt;/p&gt;

&lt;p&gt;Every constructor corresponds to one of the three loops, and all of the local variables have been moved into fields. &lt;code&gt;ConsumeInput&lt;/code&gt; carries the matches found so far, the current state, and the index of the current input code unit. When looking up a transition, we also need to track the index into the transition table. The &lt;code&gt;go&lt;/code&gt; function would now first match on the current step, perform a part of the loop, and then do a tail call. This way we can do three loops in one tail recursive function!&lt;/p&gt;
&lt;p&gt;The new approach got rid of function calls in the compiled program. The tail call in the &lt;code&gt;go&lt;/code&gt; function compiles to a jump. This helped, but now we were allocating a &lt;code&gt;Step&lt;/code&gt; value on the heap at every iteration. Could we somehow avoid the allocation too?&lt;/p&gt;
&lt;p&gt;The next insight was that we do not need the &lt;code&gt;Step&lt;/code&gt; type at all. Why construct it right before the tail call, only to match on it immediately? We could instead specialize the &lt;code&gt;go&lt;/code&gt; function for every step:&lt;/p&gt;

&lt;p&gt;We ended up with a set of local mutually recursive functions. None of these is self-recursive, but they do all make a tail call to one of the other &lt;code&gt;go&lt;/code&gt; functions. Optimization often comes at the cost of clarity, but in this case, what remains is still very readable Haskell. The code reads a lot like labels and jumps: every function is a label, and a call is a jump to that label. In fact, labels and jumps are exactly what the code compiles down to.&lt;/p&gt;
&lt;p&gt;After discovering what we needed to write to get GHC to generate good code, we could optimize further. With strictness annotations we eliminated almost all allocations from the &lt;code&gt;find&lt;/code&gt; function, save from building up the list of matches. Later, by modifying &lt;code&gt;find&lt;/code&gt; to act as a fold over all matches, we eliminated those allocations too. After a struggle, the power of a high-level language paid off.&lt;/p&gt;
&lt;p&gt;As a fold, &lt;code&gt;find&lt;/code&gt; looks like this:&lt;/p&gt;

&lt;p&gt;In our benchmark program we fold with an increment function. The &lt;code&gt;Next&lt;/code&gt; type also allows us to early out, for example when testing whether any of the needles occurs in the haystack:&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;countMatches&lt;/code&gt;, the generated code is specialized with a strict integer accumulator, without any allocations. &lt;code&gt;containsAny&lt;/code&gt; is similarly efficent, without allocations, returning &lt;code&gt;True&lt;/code&gt; at the first match. We added a few further optimizations, such as a sparse lookup table for the initial state, and packing all transition tables into one vector for better cache utilization, but this post is already quite long, so let’s move on.&lt;/p&gt;
&lt;h2 id=&quot;llvm&quot;&gt;LLVM&lt;/h2&gt;
&lt;p&gt;The Glasgow Haskell Compiler uses its own code generation backend by default. By passing &lt;code&gt;-fllvm&lt;/code&gt;, GHC will use the newer LLVM backend, which benefits from the low-level optimizations that LLVM is good at. Build times suffered, but in return we got about a 20% reduction in running time. Enabling LLVM was by far the most worthwhile optimization in our entire journey, in terms of speedup per effort invested.&lt;/p&gt;
&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;With our fully optimized implementation, we are now faster than any other implementation we could find on UTF-16 text:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Aho–Corasick benchmark bar chart&quot; src=&quot;https://tech.channable.com/images/aho-perf-after.svg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that the Rust version matches UTF-16 text bytewise, whereas our Haskell version acts on 16-bit code units. For completeness, we also show how the Rust library would perform if our inputs would have been UTF-8, roughly halving the data volume. We did not benchmark our own implementation on UTF-8 strings, as it is specialized to 16-bit code units for Haskell’s &lt;code&gt;Text&lt;/code&gt; type. Compared to what we started with, we reduced string matching time by 94%.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We set out to speed up string searching, a common operation for Channable. We investigated several Aho–Corasick implementations, and concluded that our best bet was to build a fast Haskell implementation, which &lt;a href=&quot;https://github.com/channable/alfred-margaret&quot;&gt;we are open-sourcing today&lt;/a&gt;. Though Haskell is not the best tool for doing low-level optimization, it is definitely possible. In the end our implementation came out faster than any of the others we had tried before.&lt;/p&gt;
&lt;p&gt;Finding the right way to instruct GHC to generate fast code remains a challenge. Although the end result is code that is clear and fast, the journey to get there was quite the adventure. Relying so much on optimizations to ensure that very high level code compiles to the right low-level code is fragile. Case in point: after upgrading our Stackage snapshot from LTS 10 with GHC 8.2.2 to LTS 13 with GHC 8.6.3, we saw the running time of our benchmark double. After some investigation we got the times back down, but this involved a subtle combination of code changes and inlining pragmas. Still, our journey was definitely worth the trouble, for in the end we can service users with even faster previews and a more responsive tool.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://old.reddit.com/https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html&quot;&gt;Discuss this post on Reddit&lt;/a&gt; or &lt;a href=&quot;https://news.ycombinator.com/submitlink?u=https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html&amp;amp;t=How%20we%20made%20Haskell%20search%20strings%20as%20fast%20as%20Rust&quot;&gt;on Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;: The library offers a, &lt;em&gt;sparse&lt;/em&gt;, a &lt;em&gt;dense&lt;/em&gt;, and a &lt;em&gt;full&lt;/em&gt; automaton representation. The full representation contained a bug that caused it to miss matches, and of the sparse and dense representation, dense was faster for our use case, so we benchmarked the dense automaton. &lt;a href=&quot;https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html#link-footnote1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 Mar 2019 17:39:44 +0000</pubDate>
<dc:creator>duijf</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tech.channable.com/posts/2019-03-13-how-we-made-haskell-search-strings-as-fast-as-rust.html</dc:identifier>
</item>
<item>
<title>Cookie Warning Shenanigans Have Got to Stop</title>
<link>https://www.troyhunt.com/these-cookie-warning-shenanigans-have-got-to-stop/</link>
<guid isPermaLink="true" >https://www.troyhunt.com/these-cookie-warning-shenanigans-have-got-to-stop/</guid>
<description>&lt;p&gt;This will be short, ranty and to the point: these warnings are getting ridiculous:&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/Screenshot-2019-03-08-at-09.08.45.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I know, tell you something you don't know! The whole ugly issue reared its head again on the weekend courtesy of the story in this tweet:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;5.5433526011561&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I’m not sure if this makes it better or worse... “Cookie walls don't comply with GDPR, says Dutch DPA”: &lt;a href=&quot;https://t.co/p0koRdGrDB&quot;&gt;https://t.co/p0koRdGrDB&lt;/a&gt;&lt;/p&gt;
— Troy Hunt (@troyhunt) &lt;a href=&quot;https://twitter.com/troyhunt/status/1104153598458396672?ref_src=twsrc%5Etfw&quot;&gt;March 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;The reason I don't know if it makes it better or worse is that on the one hand, it's ridiculous that in a part of the world that's more privacy-focused than most it essentially boils down to &quot;take this cookie or no access for you&quot; whilst on the other hand, the Dutch DPA somehow thinks that this makes any sense to (almost) anyone:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;And the Dutch DPA’s guidance makes it clear internet visitors must be asked for permission in advance for any tracking software to be placed — such as third-party tracking cookies; tracking pixels; and browser fingerprinting tech — and that that permission must be freely obtained. Ergo, a free choice must be offered.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is this &lt;em&gt;really&lt;/em&gt; what we want? To continue chucking up cookie warnings to everyone and somehow expecting them to make an informed decision about the risks they present? 99% of people are going to click through them anyway (note: this is a purely fabricated figure based on the common-sense assumption that people will generally click through anything that gets in the way of perming the task they set out to complete in the first place). And honestly, how on earth is your average person going to make an informed decision on a message like this:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;4.3404255319149&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I'm sure its a good article though... It might have been nice to read it! &lt;a href=&quot;https://t.co/95bpDtmjDO&quot;&gt;pic.twitter.com/95bpDtmjDO&lt;/a&gt;&lt;/p&gt;
— Paul Court (@MrPCourt) &lt;a href=&quot;https://twitter.com/MrPCourt/status/1104156453349277697?ref_src=twsrc%5Etfw&quot;&gt;March 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Do you know how hard it is to explain OAuth to technical people, let alone the masses? Oh wait - it's not OAuth - it's Oath but even I didn't get that at first because nobody really reads these warnings anyway! And now that I have read it and I know it's Oath, what does that really mean? Oh look, a big blue button that will make it all go away and allow me to do what I came here for in the first place...&lt;/p&gt;
&lt;p&gt;But say you are more privacy focused and you wanted to follow that link in the original tweet. Here's your fix:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;And if you're smart enough to actually understand what cookies are and be able to make an &lt;em&gt;informed&lt;/em&gt; decision when prompted with a warning like TechCrunch's, then you're smart enough to know how to right click on a link and open it incognito. Or run an ad blocker. Or something like a &lt;a href=&quot;https://www.troyhunt.com/mmm-pi-hole/&quot;&gt;Pi-hole&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or you move to Australia because apparently, we don't deserve the same levels or privacy down here. Or have I got that back to front and Europeans don't deserve the same slick UX experience as we get down here? You know, the one where you click on a link to read an article and you actually get to read the article!&lt;/p&gt;
&lt;p&gt;So let's be European for a moment and see how that experience looks - let's VPN into Amsterdam and try to control my privacy on TechCrunch:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/2019-03-09_10-35-44.gif&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;Are you fucking serious? This is what privacy looks like? That's 224 different ad networks that are considered &quot;IAB Partners&quot; (that'd be the &lt;a href=&quot;https://www.iab.com/&quot;&gt;Interactive Advertising Bureau&lt;/a&gt;) and I can control which individual ones can set cookies. And that's in addition to the 10 Oath foundational partners:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-1.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;You can't disable any of those either by the look of it so yeah, no privacy on that front. But at least you can go and read their privacy policy, right? Sure, &lt;a href=&quot;https://unruly.co/privacy/#privacy-policy&quot;&gt;Unruly's&lt;/a&gt; is 3,967 words, &lt;a href=&quot;https://www.facebook.com/policy.php&quot;&gt;Facebook's&lt;/a&gt; is 4,498 words and &lt;a href=&quot;https://www.zentrick.com/privacy-policy/&quot;&gt;Zentrick's&lt;/a&gt; is another 3,805 words. Oh - and remember that you need to accept cookies on each one of those sites too and you're going to want to read about how they and their partners track you...&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-2.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;And the ridiculous thing about it is that tracking isn't entirely dependent on cookies anyway (and yes, I know the Dutch situation touched on browser fingerprinting in general too). Want to see a perfect example? Have a go of &lt;a href=&quot;https://amiunique.org/&quot;&gt;Am I Unique&lt;/a&gt; and you'll almost certainly be told that &quot;Yes! You can be tracked!&quot;:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-3.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;Over one million samples collected and yet somehow, I am a unique snowflake that can be identified across requests without a cookie in sight. How? Because even though I'm running the current version of Chrome on the current version of Windows, less than 0.1% of people have the same user agent string as me. Less than 0.1% of people also have their language settings the same as mine. Keep combining these unique attributes and you have a very unique fingerprint:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-5.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;The list goes on &lt;em&gt;well&lt;/em&gt; beyond that screen grab too - time zone, screen resolution and even the way the canvas element renders on the page. It's kinda cool in a kinda creepy way.&lt;/p&gt;
&lt;p&gt;And here's the bit that really bugs me (ok, it all bugs me but this is the worst): how do we expect your normal everyday person to differentiate between cookie warnings and warnings like these:&lt;/p&gt;
&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-6.png&quot; class=&quot;kg-image&quot;/&gt;&lt;img src=&quot;https://www.troyhunt.com/content/images/2019/03/image-7.png&quot; class=&quot;kg-image&quot;/&gt;&lt;p&gt;I know what these are and you probably do too by virtue of being on this blog, but do you really think most people who have been conditioned to click through the warning that's sitting between them and the content they wish to read understand the difference between this and a cookie warning? We literally have &lt;em&gt;banks&lt;/em&gt; telling people just to ignore these warnings:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;5.7840375586854&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;German bank &lt;a href=&quot;https://twitter.com/comdirect?ref_src=twsrc%5Etfw&quot;&gt;@comdirect&lt;/a&gt; recommends to just ignore the warning about an insecure connection in their online banking app.&lt;/p&gt;&lt;p&gt;Unbelievable... &lt;a href=&quot;https://twitter.com/troyhunt?ref_src=twsrc%5Etfw&quot;&gt;@troyhunt&lt;/a&gt; &lt;a href=&quot;https://t.co/ROOol70OyB&quot;&gt;https://t.co/ROOol70OyB&lt;/a&gt;&lt;/p&gt;
— der JayJay (@jayjay_92) &lt;a href=&quot;https://twitter.com/jayjay_92/status/1067056789420720129?ref_src=twsrc%5Etfw&quot;&gt;November 26, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;So in summary, everyone clicks through cookie warnings anyway, if you read them you either can't understand what they're saying or the configuration of privacy settings is a nightmare, depending on where you are in the world you either don't get privacy or you don't get UX hell, if you understand the privacy risks then it's easy to open links incognito or use an ad blocker, you can still be tracked anyway and finally, the whole thing is just conditioning people to make bad security choices. That is all.&lt;/p&gt;
&lt;section class=&quot;article-open_tag&quot;&gt;&lt;a class=&quot;tag&quot; href=&quot;https://www.troyhunt.com/tag/privacy/&quot;&gt;Privacy&lt;/a&gt; &lt;a class=&quot;tag&quot; href=&quot;https://www.troyhunt.com/tag/cookies/&quot;&gt;Cookies&lt;/a&gt;&lt;/section&gt;</description>
<pubDate>Wed, 13 Mar 2019 17:24:06 +0000</pubDate>
<dc:creator>weinzierl</dc:creator>
<og:type>article</og:type>
<og:title>These Cookie Warning Shenanigans Have Got to Stop</og:title>
<og:description>This will be short, ranty and to the point: these warnings are getting ridiculous: I know, tell you something you don't know! The whole ugly issue reared its head again on the weekend courtesy of the story in this tweet:I’m not sure if this makes it better or</og:description>
<og:url>https://www.troyhunt.com/these-cookie-warning-shenanigans-have-got-to-stop/</og:url>
<og:image>https://www.troyhunt.com/content/images/2019/03/Screenshot-2019-03-08-at-09.08.45.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.troyhunt.com/these-cookie-warning-shenanigans-have-got-to-stop/</dc:identifier>
</item>
<item>
<title>Dwarf Fortress is coming to Steam with graphics</title>
<link>https://www.polygon.com/2019/3/13/18263905/dwarf-fortress-steam-graphics-workshop</link>
<guid isPermaLink="true" >https://www.polygon.com/2019/3/13/18263905/dwarf-fortress-steam-graphics-workshop</guid>
<description>&lt;p id=&quot;7aMwXp&quot;&gt;&lt;em&gt;Dwarf Fortress&lt;/em&gt;, the famously complex and &lt;a href=&quot;http://www.polygon.com/2014/7/23/5926447/dwarf-fortress-will-crush-your-cpu-because-creating-history-is-hard&quot;&gt;often inscrutable&lt;/a&gt; colony simulation, is coming to Steam and itch.io. The new version will be published by Kitfox Games, a Montreal-based independent studio, and will include graphics, music, sounds, and Steam Workshop integration. An ASCII-based mode will still be available in this new version, and development of the original game will continue unabated.&lt;/p&gt;
&lt;p id=&quot;cXeuBM&quot;&gt;Also known as &lt;a href=&quot;https://www.polygon.com/game/slaves-to-armok-god-of-blood-chapter-2-dwarf-fortress/6954&quot;&gt;&lt;em&gt;Slaves to Armok: God of Blood Chapter 2: Dwarf Fortress&lt;/em&gt;&lt;/a&gt;, the game has been in development since 2003 by the two-man team of Tarn Adams and Zach Adams, aka &lt;a href=&quot;http://www.bay12games.com/dwarves/&quot;&gt;Bay 12 Games&lt;/a&gt;. The elaborate simulation has three different modes. In Fortress Mode, players guide a small band of dwarves into creating a settlement from scratch. Meanwhile, Adventure Mode plays like a classic roguelike dungeon crawler. Legends Mode allows players to create an elaborate procedurally generated world and then inspect it in detail.&lt;/p&gt;
&lt;p id=&quot;bar9g6&quot;&gt;All three modes record player actions, meaning that you can explore your own deserted settlements in Adventure Mode, or read about the exploits of the city you helped to create in Legends Mode.&lt;/p&gt;
&lt;aside id=&quot;b3G70D&quot;&gt;
&lt;/aside&gt;&lt;p id=&quot;lSPwZF&quot;&gt;The new, premium edition of &lt;em&gt;Dwarf Fortress&lt;/em&gt; will include actual graphics for the first time. Traditionally, the game has only offered ASCII-style icons. According to &lt;a href=&quot;https://docs.google.com/document/d/1Xwhi1KKp5QD9R4-euZ0JqRB0vHdNPqdBJXjIgp-yYHA/edit&quot;&gt;an FAQ&lt;/a&gt; published alongside today’s announcement, the graphics will be handled by Michał “Mayday” Madej and Patrick Martin “Meph” Schroeder, two well-regarded members of the game’s modding community. Another community member, who goes by the handle &lt;a href=&quot;https://www.dabuaudio.com/&quot;&gt;Dabu&lt;/a&gt;, will be handling a musical score inspired by the seasons and select bits of audio.&lt;/p&gt;
&lt;p id=&quot;i0XNGQ&quot;&gt;Steam Workshop integration may be the biggest selling point here. Fans have made many mods to supplement the core &lt;em&gt;Dwarf Fortress&lt;/em&gt; experience. One of the most popular, called &lt;a href=&quot;http://www.bay12forums.com/smf/index.php?topic=168411.0&quot;&gt;Dwarf Therapist&lt;/a&gt;, allows you to troubleshoot individual dwarves, digging down into their wants and needs and even controlling them in ways the base game simply doesn’t allow. Many consider Dwarf Therapist and other mods essential to the gameplay experience, and Steam Workshop support will make accessing them easier than ever before.&lt;/p&gt;

&lt;p id=&quot;gRlEiv&quot;&gt;In today’s FAQ, Bay 12 stressed that &lt;em&gt;Dwarf Fortress&lt;/em&gt; isn’t being changed to make it “fit” into Steam or itch.io. It will be the exact same experience plus a few modern quality-of-life features. Kitfox said that it has “no access to the source code, and will have no influence on the design, programming, or updates to &lt;em&gt;Dwarf Fortress.”&lt;/em&gt;&lt;/p&gt;
&lt;p id=&quot;6ObztK&quot;&gt;Virtually the same game, minus these new features, will still be available for free at the Bay 12 website.&lt;/p&gt;
&lt;p id=&quot;qvLuml&quot;&gt;“Steam/itch.io and Kitfox will get cuts of the sales on those platforms,” states the FAQ, “so if you want to give MAXIMUM money to Tarn and Zach, &lt;a href=&quot;http://www.bay12games.com/support.html&quot;&gt;direct donation&lt;/a&gt; is the way to go.”&lt;/p&gt;
&lt;p id=&quot;hm5Hzu&quot;&gt;Traditionally, &lt;em&gt;Dwarf Fortress&lt;/em&gt; has only been available as a free download direct from &lt;a href=&quot;http://www.bay12games.com/dwarves/&quot;&gt;the Bay 12 website&lt;/a&gt;. The Adams brothers say they’ve been offered &lt;a href=&quot;https://www.polygon.com/2013/7/2/4486794/dwarf-fortress-creators-offered-six-figures-for-publishing-rights&quot;&gt;large sums of money in the past for licensing deals&lt;/a&gt;, but the team has always subsisted on &lt;a href=&quot;https://www.polygon.com/2014/7/24/5931277/download-the-dwarf-fortress-soundtrack-and-rock-out-in-ascii&quot;&gt;donations&lt;/a&gt; alone. It even &lt;a href=&quot;https://www.polygon.com/2015/5/1/8529495/dwarf-fortress-patreon&quot;&gt;made the move to Patreon in 2015&lt;/a&gt;. But, in today’s FAQ, the pair said that they’re selling this premium version in part to pay for health care for ailing family members.&lt;/p&gt;
&lt;p id=&quot;UKZey9&quot;&gt;“&lt;em&gt;Dwarf Fortress&lt;/em&gt; is going premium because we want more people to encounter the game, grow the community,” Bay 12 wrote in the statement, and because “some of the creator’s close family members have developed serious health issues within the past 6 months, and money to support them is tight. As it’s a sensitive and difficult matter, &lt;em&gt;please&lt;/em&gt; respect Tarn and Zach’s privacy about this, but keep some well wishes in your hearts for them.”&lt;/p&gt;
&lt;p id=&quot;X0KhT0&quot;&gt;&lt;em&gt;Dwarf Fortress&lt;/em&gt; currently has no release date on Steam or itch.io, since, as the developers indicate, “&lt;a href=&quot;https://store.steampowered.com/app/975370/Dwarf_Fortress/&quot;&gt;time is subjective&lt;/a&gt;.”&lt;/p&gt;



</description>
<pubDate>Wed, 13 Mar 2019 17:19:12 +0000</pubDate>
<dc:creator>danso</dc:creator>
<og:description>Developers will upgrade its ASCII aesthetic and offer Steam Workshop support</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/_mpITsncwr-RzWIHBXapoPrbl8Y=/0x8:660x354/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/3415104/dwarf-fortress-cover.0.jpg</og:image>
<og:title>Dwarf Fortress is coming to Steam ... with graphics</og:title>
<og:type>article</og:type>
<og:url>https://www.polygon.com/2019/3/13/18263905/dwarf-fortress-steam-graphics-workshop</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.polygon.com/2019/3/13/18263905/dwarf-fortress-steam-graphics-workshop</dc:identifier>
</item>
<item>
<title>Canada grounds Boeing 737 Max 8</title>
<link>https://www.cbc.ca/news/politics/garneau-boeing-ethiopia-crash-1.5054234</link>
<guid isPermaLink="true" >https://www.cbc.ca/news/politics/garneau-boeing-ethiopia-crash-1.5054234</guid>
<description>&lt;p&gt;&lt;span&gt;Canada is grounding all of its Boeing 737 Max 8 aircraft and banning the jet from entering its airspace until further notice as safety concerns continue to mount following two deadly crashes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;This safety notice restricts commercial passenger flights from any air operator, both domestic and foreign, of the Boeing 737 Max 8 and 9 aircraft from arriving, departing, or overflying Canadian airspace,&quot; Transport Minister Marc Garneau told reporters earlier today. (The Max 9 has an extended fuselage, but uses the same systems as the Max 8s).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Canada had been one of the last holdouts on temporarily banning the Max 8s in the wake of the recent Ethiopian Airlines crash that killed all 157 people on board, including 18 Canadians. The U.K., the European Union, Australia and other countries had moved already to ban the jet from their airspace in response to growing safety concerns.&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;ul class=&quot;similarLinks&quot;&gt;&lt;li class=&quot;similarListItem&quot;&gt;&lt;span/&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&quot;labelText label-cbc-in-ethiopia&quot;&gt;CBC in Ethiopia&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;span class=&quot;similarLinkText&quot;&gt;Grief and anger as families try to identify loved ones killed in Ethiopia Airlines crash&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;Garneau said the decision to issue the safety notice was made after his department received new data suggesting a similarity between the Ethiopian Airlines crash and another deadly crash near Indonesia in October.&lt;/p&gt;
&lt;p&gt;The minister said much of the new information is new and unproven, but added:&lt;/p&gt;
&lt;p&gt;&quot;There are — and I hasten to say not conclusive — but there are similarities that sort of exceed a certain threshold in our minds with respect to the possible cause of what happened in Ethiopia&quot;&lt;/p&gt;
&lt;p&gt;&quot;My departmental officials continue to monitor the situation and I will not hesitate to take swift action should we discover any additional safety issues,&quot; he said.&lt;/p&gt;
&lt;h2&gt;U.S. follows suit&lt;/h2&gt;
&lt;p&gt;U.S. President Donald Trump issued an &quot;emergency order&quot; grounding all Boeing 737 Max 8 and Max 9 a few hours after Canada's decision.&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.5055763.1552523941!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/737-max-graphic.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;scayt-misspell-word&quot;&gt;Garneau&lt;/span&gt; said Canada alerted the U.S. to the safety notice on Wednesday morning. &lt;/p&gt;
&lt;p&gt;According to Reuters, the Federal Aviation Administration held urgent meetings on the issue after Canada announced it would become the latest major country to ground the jets.&lt;/p&gt;
&lt;p&gt;According to a source with direct knowledge of the matter, Garneau directly contacted his counterpart, U.S. Secretary of Transportation Elaine Chao. The source said the Americans understood Garneau's decision and did not try to persuade Ottawa to change its mind.&lt;/p&gt;
&lt;p&gt;&quot;It was always a possibility, but the fact that they announced it just after us came as a bit of a surprise,&quot; said Garneau.&lt;/p&gt;
&lt;div&gt;

&lt;span class=&quot;media-caption&quot;&gt;Transport Minister Marc Garneau discusses the decision to ground Boeing 737 Max 8 and 9 aircraft, after Canada had been one of the last holdouts. 9:09&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Air Canada, which already had cancelled multiple scheduled flights to and from London in response to the U.K. closing its airspace yesterday, said it's working to rebook passengers.&lt;/p&gt;
&lt;p&gt;&quot;Air Canada's cancellation and rebooking policies are in place with full fee waiver for affected customers,&quot; said a spokesperson.&lt;/p&gt;
&lt;p&gt;&quot;We are working to rebook impacted customers as soon as possible, but given the magnitude of our 737 MAX operations, which on average carry nine to twelve thousand customers per day, customers can expect delays in rebooking and in reaching Air Canada call centres.&quot;&lt;/p&gt;

&lt;p&gt;WestJet also said it will begin complying with Transport Canada's direction.&lt;/p&gt;
&lt;p&gt;&quot;We respect the decision made by Transport Canada and are in the process of grounding the 13 MAX aircraft in our fleet,&quot; said the company in an email.&lt;/p&gt;
&lt;p&gt;&quot;This decision has an impact on the travel plans of our WestJet guests and we ask for understanding as we work to rebook all guests affected as quickly as possible.&quot;&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.5055325.1552508798!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/ethiopia-airplane-canada.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;span&gt;&lt;span class=&quot;leadimage-caption&quot;&gt;An Air Canada Boeing 737 MAX 8 aircraft is towed in on Wednesday behind another Air Canada Boeing 737 MAX 8 at Toronto's Pearson International Airport.  (Chris Helgren/Reuters)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Toronto-based &lt;span class=&quot;scayt-misspell-word&quot;&gt;Sunwing&lt;/span&gt; Airlines announced late Tuesday it would voluntarily ground its four Boeing 737 Max 8 aircraft for &quot;evolving commercial reasons,&quot; such as airspace restrictions imposed by some destinations.&lt;/p&gt;
&lt;p&gt;The union representing Air Canada's 8,500 flight attendants welcomed the decision.&lt;/p&gt;
&lt;p&gt;&quot;In light of the new data received by the federal government, we welcome the Minister's decision to err on the side of prudence until the analysis of the causes of the Ethiopian Airlines Flight 302 crash is completed,&quot; said CUPE spokesperson Wesley Lesosky.&lt;/p&gt;
&lt;div&gt;

&lt;span class=&quot;media-caption&quot;&gt;Transport Minister Marc Garneau illustrates the similarities between the Lion Air flight crash from October 2018 to this past weekend's Ethiopian Airlines plane crash out of Addis Ababa. 1:23&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Earlier this week, Garneau said it would be &quot;premature&quot; to ground all 41 of the 737 Max 8s currently owned by Canadian air carriers.&lt;/p&gt;
&lt;p&gt;However, shortly after the U.K. announced yesterday it is temporarily banning the jets from its airspace, Garneau tweeted that he was cancelling previous plans and meeting with his civil aviation expert panel to discuss the Max 8 aircraft.&lt;/p&gt;
&lt;p&gt;Both the Conservatives and the NDP had been calling on the government to ground the planes as a precaution.&lt;/p&gt;
&lt;p&gt;Brian Masse, the NDP innovation, science and economic development critic, criticized the speed of Garneau's decision Wednesday, saying &quot;it should have been made sooner&quot; given how other countries took action well before the midday Wednesday announcement.&lt;/p&gt;
&lt;p&gt;Masse is asking Garneau to enact a &quot;contingency plan&quot; to ensure passengers who find their travel plans disrupted by the grounding of these aircraft are not &quot;gouged&quot; by airlines during the rebooking process.&lt;/p&gt;
&lt;p&gt;&quot;Canadian airlines have the privilege of providing air transport to millions of Canadians and this entails comprehensive responsibilities to ensure their passengers are safe and treated fairly in the market,&quot; he wrote in a letter. &quot;Consumers should not be further victimized by predatory practices or pricing during this time.&quot;&lt;/p&gt;
&lt;h2&gt;Pilot reported problems: airline&lt;/h2&gt;
&lt;p&gt;Sunday's disaster follows another fatal crash of the 737 Max 8 jet in Indonesia five months ago, which killed 189 people and raised concerns about the fleet's automated flight systems.&lt;/p&gt;
&lt;div&gt;

&lt;span class=&quot;media-caption&quot;&gt;NDP Leader Jagmeet Singh and Conservative MP Pierre Poilievre both agree that the government should ground the Boeing 737 Max 8 jets until they can be proven to be safe. 0:55&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;Asrat Begashaw, a spokesperson for Ethiopian Airlines, said that before the crash, the pilot reported flight-control problems and asked to return to Addis Ababa, where the flight to Nairobi originated.&lt;/p&gt;
&lt;p&gt;The 'black box' flight recorders from the crash site will be sent to Europe for analysis, he said.&lt;/p&gt;
&lt;div&gt;
&lt;div class=&quot;placeholder&quot;&gt;

&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://i.cbc.ca/1.5052262.1552342588!/fileImage/httpImage/image.jpg_gen/derivatives/original_780/boeing-737-max-8s-in-service-canada.jpg&quot; class=&quot;loaded largeImage&quot;/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;

&lt;span class=&quot;media-caption&quot;&gt;Transport Minister Marc Garneau announces a safety notice that restricts any commercial Boeing Max 8 or 9 jets from flying into or out of any Canadian airports, or from flying over Canadian airspace. 1:28&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Wed, 13 Mar 2019 16:00:52 +0000</pubDate>
<dc:creator>found_reading</dc:creator>
<og:url>https://www.cbc.ca/news/politics/garneau-boeing-ethiopia-crash-1.5054234</og:url>
<og:title>No Boeing 737 Max 8s can fly into, out of, or over Canada: transport minister | CBC News</og:title>
<og:image>https://i.cbc.ca/1.5055479.1552512540!/fileImage/httpImage/image.jpg_gen/derivatives/16x9_620/ethiopia-airplane-canada.jpg</og:image>
<og:description>Canada is grounding all of its Boeing 737 Max 8 aircraft and banning the jet from entering its airspace until further notice as safety concerns continue to mount following two deadly crashes.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cbc.ca/news/politics/garneau-boeing-ethiopia-crash-1.5054234</dc:identifier>
</item>
<item>
<title>Google has added DuckDuckGo as a search engine option for Chrome users</title>
<link>https://techcrunch.com/2019/03/13/google-has-quietly-added-duckduckgo-as-a-search-engine-option-for-chrome-users-in-60-markets/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/03/13/google-has-quietly-added-duckduckgo-as-a-search-engine-option-for-chrome-users-in-60-markets/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;In an update to the chromium engine, which underpins &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/google&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;google&quot;&gt;Google’s&lt;/a&gt; popular Chrome browser, the search giant has quietly updated the lists of default search engines it offers per market — expanding the choice of search product users can pick from in markets around the world.&lt;/p&gt;
&lt;p&gt;Most notably it has expanded search engine lists to include pro-privacy rivals in more than 60 markets globally.&lt;/p&gt;
&lt;p&gt;The changes, which appear to have been pushed out with the Chromium 73 stable release yesterday, come at a time when Google is facing &lt;a href=&quot;https://twitter.com/jason_kint/status/1105569803857739777&quot;&gt;rising privacy&lt;/a&gt; and antitrust scrutiny and accusations of market distorting behavior at home and abroad.&lt;/p&gt;

&lt;p&gt;Many governments are now actively questioning how &lt;a href=&quot;https://techcrunch.com/2019/03/13/competition-policy-must-change-to-help-startups-fight-winner-takes-all-platforms-says-uk-report/&quot;&gt;competition policy needs to be updated&lt;/a&gt; to rein in platform power and help smaller technology innovators get out from under the tech giant shadow.&lt;/p&gt;
&lt;p&gt;But in a note about the changes to chromium’s default search engine lists on an &lt;a href=&quot;https://github.com/chromium/chromium/commit/98b2af784450beb20cdb26cbee60168891cec4ec#diff-3168db83d84c9efc4ee8e323bd0bf798&quot;&gt;GitHub instance&lt;/a&gt;, Google software engineer Orin Jaworski merely writes that the list of search engine references per country is being “completely replaced based on new usage statistics” from “recently collected data.”&lt;/p&gt;
&lt;p&gt;The per country search engine choices appear to loosely line up with top-four market share.&lt;/p&gt;
&lt;p&gt;The greatest beneficiary of the update appears to be pro-privacy Google rival, &lt;a href=&quot;https://duckduckgo.com&quot;&gt;DuckDuckGo&lt;/a&gt;, which is now being offered as an option in more than 60 markets, per the GitHub instance.&lt;/p&gt;
&lt;p&gt;Previously DDG was not offered as an option at all.&lt;/p&gt;
&lt;p&gt;Another pro-privacy search rivals, French search engine &lt;a href=&quot;https://www.qwant.com/?l=en&quot;&gt;Qwant&lt;/a&gt;, has also been added as a new option — though only in its home market, France.&lt;/p&gt;
&lt;p&gt;DDG has been added in Argentina, Austria, Australia, Belgium, Brunei, Bolivia, Brazil, Belize, Canada, Chile, Colombia, Costa Rica, Croatia, Germany, Denmark, Dominican Republic, Ecuador, Faroe Islands, Finland, Greece, Guatemala, Honduras, Hungary, Indonesia, Ireland, India, Iceland, Italy, Jamaica, Kuwait, Lebanon, Liechtenstein, Luxembourg, Monaco, Moldova, Macedonia, Mexico, Nicaragua, Netherlands, Norway, New Zealand, Panama, Peru, Philippines, Poland, Puerto Rico, Portugal, Paraguay, Romania, Serbia, Sweden, Slovenia, Slovakia, El Salvador, Trinidad and Tobago, South Africa, Switzerland, U.K., Uruguay, U.S. and Venezuela.&lt;/p&gt;
&lt;p&gt;“We’re glad that Google has recognized the importance of offering consumers a private search option,” &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/duck-duck-go&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;duck-duck-go&quot;&gt;DuckDuckGo&lt;/a&gt; founder Gabe Weinberg told us when approached for comment about the change.&lt;/p&gt;
&lt;p&gt;DDG has been &lt;a href=&quot;https://techcrunch.com/2018/10/11/pro-privacy-search-engine-duckduckgo-hits-30m-daily-searches-up-50-in-a-year/&quot;&gt;growing steadily for years&lt;/a&gt;, and has also recently &lt;a href=&quot;https://techcrunch.com/2018/08/29/duckduckgo-gets-10m-from-omers-for-global-privacy-push/&quot;&gt;taken outside investment&lt;/a&gt; to scale its efforts to capitalize on growing international appetite for pro-privacy products.&lt;/p&gt;
&lt;p&gt;Interestingly, the chromium &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/github&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;github&quot;&gt;GitHub&lt;/a&gt; instance is dated December 2018 — which appears to be around the time when Google (finally) passed the &lt;a href=&quot;https://techcrunch.com/2018/12/12/duck-com-now-points-to-duckduckgo-not-google/&quot;&gt;Duck.com domain to DuckDuckGo&lt;/a&gt;, after holding onto the domain and pointing it to Google.com for years.&lt;/p&gt;
&lt;p&gt;We asked Google for comment on the timing of its changes to search engine options in chromium. At the time of writing the search giant had not responded.&lt;/p&gt;
&lt;p&gt;Reached for comment on being added as an option in its home market, Qwant co-founder Eric Leandri said “thank you” to Google for adding the search engine as an option in France, claiming “certainly it’s because of the number of users of Qwant” in its home market.&lt;/p&gt;
&lt;p&gt;But he added that Qwant still recommends to its users that they use &lt;a href=&quot;https://techcrunch.com/2019/01/29/mozilla-streamlines-firefox-tracker-blocking-controls/&quot;&gt;Mozilla’s Firefox browser&lt;/a&gt; or the &lt;a href=&quot;https://techcrunch.com/2018/04/18/brave-dow-jones/&quot;&gt;pro-privacy Brave browser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;He also said it would have been nicer if Google had also added Qwant in Germany and Italy where he said the search engine also has a following.&lt;/p&gt;
&lt;p&gt;Asked whether he believes expanded search engine options in Chrome will be enough to stave off further regulatory intervention related to Google’s market dominance, Leandri said no — pointing out that Android OEMs still have to pay Google to install a non-Google search engine by default, following the European Commission’s &lt;a href=&quot;https://techcrunch.com/2018/07/18/google-gets-slapped-5bn-by-eu-for-android-antitrust-abuse/&quot;&gt;Android antitrust ruling&lt;/a&gt; last year, as we’ve &lt;a href=&quot;https://techcrunch.com/2018/12/18/google-still-claimed-to-be-blocking-search-rivals-on-android-despite-europes-antitrust-action/&quot;&gt;reported previously&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“It’s a joke,” he added. “But thank you again for Chrome 73, I really and sincerely appreciate [it]. I still recommend Firefox and Brave.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This report was updated with comment from Qwant&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 13 Mar 2019 15:19:18 +0000</pubDate>
<dc:creator>jmsflknr</dc:creator>
<og:title>Google has quietly added DuckDuckGo as a search engine option for Chrome users in ~60 markets</og:title>
<og:description>In an update to the chromium engine, which underpins Google’s popular Chrome browser, the search giant has quietly updated the lists of default search engines it offers per market — expanding the choice of search product users can pick from in markets around the world. Most notably it h…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2019/03/Screenshot-2019-03-13-at-15.32.54.png?w=764</og:image>
<og:url>http://social.techcrunch.com/2019/03/13/google-has-quietly-added-duckduckgo-as-a-search-engine-option-for-chrome-users-in-60-markets/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/03/13/google-has-quietly-added-duckduckgo-as-a-search-engine-option-for-chrome-users-in-60-markets/</dc:identifier>
</item>
</channel>
</rss>