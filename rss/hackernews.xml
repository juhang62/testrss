<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Unity Learn platform free for 3 months</title>
<link>https://learn.unity.com/</link>
<guid isPermaLink="true" >https://learn.unity.com/</guid>
<description>&lt;p&gt;Create with Code Live&lt;/p&gt;
&lt;div class=&quot;info_37CX088N&quot;&gt;
&lt;div class=&quot;content-subtitle_3lvxrnv9 default default&quot;&gt;
&lt;p&gt;Course&lt;/p&gt;
&lt;div class=&quot;subtitle-item_xpaEsup9&quot;&gt;

Foundational&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Register for the live classes now: 9 am PT series or 5 pm PT series. Come back here to follow along with the course materials and track your progress. You should receive instructions by email to join the webinar, or use these direct links to the Zoom sessions: Join Live M-F 9 am PT Join Live M-F 5 pm PT Create with Code is one of our most popular courses that makes learning to code fun through making your own games from scratch in C#. Starting on Monday, March 23, 2020 we are hosting a virtual Create With Code Live series open to students, teachers, and anyone else interested in learning to code. Each weekday from March 23 to May 8, Unity will host an hour-long virtual class with live Q&amp;amp;A at 9 am and 5 pm PT. Morning and afternoon sessions will cover the same content - choose the time that fits your schedule, or register for both. Sessions will be recorded and posted in these course pages for those who are unable to attend live. To join the 9 am PT live classes, register here To join the 5 pm PT live classes, register here Between classes, there will be up to 30 minutes of independent work. By the end of this course, you will have foundational skills in Unity, C# computer programming, game design, and development. For students, we recommend applying for the Unity Student plan to make the most of Unity, but this is not required for participation in Create with Code Live. To get set up for the course, please install Unity. Create with Code curriculum is aligned to ISTE Standards for computer science education.&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 18:18:34 +0000</pubDate>
<dc:creator>metreo</dc:creator>
<og:url>https://learn.unity.com/</og:url>
<og:title>Unity Learn</og:title>
<og:image>https://connect-prd-cdn.unity.com/cdn-origin/images/learn-meta-hero.jpg</og:image>
<og:description>Unity Learn provides award-winning free tutorials, sample projects, and full courses for mastering real-time 3D development skills with Unity Learn to make video games, VR, AR, and more.</og:description>
<og:type>website</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://learn.unity.com/</dc:identifier>
</item>
<item>
<title>Private client-side-only PWAs are hard, but now Apple made them impossible</title>
<link>https://andregarzia.com/2020/03/private-client-side-only-pwas-are-hard-but-now-apple-made-them-impossible.html</link>
<guid isPermaLink="true" >https://andregarzia.com/2020/03/private-client-side-only-pwas-are-hard-but-now-apple-made-them-impossible.html</guid>
<description>&lt;p&gt;There is a huge opportunity for the creation of private client-side-only PWAs in the world but developers wanting to build such apps are in for an uphill battle against the status quo and now against Apple as well. I’ve just read a post by Aral Balkan entitled &lt;a class=&quot;u-in-reply-to&quot; href=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/&quot;&gt;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care&lt;/a&gt; that made me realize that the PWAs I was building here might just be dead for iOS users.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Progressive web apps use modern web APIs along with traditional progressive enhancement strategy to create cross-platform web applications. These apps work everywhere and provide several features that give them the same user experience advantages as native apps. — &lt;em&gt;Source: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps&quot;&gt;Progressive web apps (PWAs) | MDN&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By now, most people are aware of the amount of surveillance and tracking that their web usage is subject to on a daily basis and how this data can be used in ways that do not match their own personal values. It is my own personal belief that there is a market for PWAs that work without a backend component by storing all data for a given user at the user’s own machine. These unify all the benefits of PWAs as mentioned in the quote from MDN WebDocs above with more privacy as data never leaves your machine.&lt;/p&gt;
&lt;h2 id=&quot;apps-that-protect-your-privacy&quot;&gt;Apps that protect your privacy&lt;/h2&gt;
&lt;p&gt;It is very easy to prove that the data never leaves the clients computer as any app claiming this kind of privacy but failing to provide it can be scrutinized by web developers using the browsers own dev tools. If there is no backend, then you can have the usual profiling schemes scrutinizing users data to sell to advertising companies, governments, or even shadier entities. For many apps, there is no reason whatsoever to have a backend running.&lt;/p&gt;
&lt;p&gt;Many web developers are turning to Electron in these cases but IMHO this is a waste of resources as the Electron runtime is not shared among the different apps running and there is only so many browser engines your computer can run before it has impact on its performance. With Electron you’re never really sure what the app is doing as it has access to basically anything your user can do. In the Web Platform, there are many more guarantees and checks, it is a safer platform than simply running a third-party binary in your machine. Not that I am against those, there are many use cases where it is quite desirable to do so and these use cases vary from people to people, it is about choice in the end. Client-side PWAs without backends are a good match for privacy and don’t waste resources as they share the browser runtime which is probably already running.&lt;/p&gt;
&lt;h2 id=&quot;apps-that-dont-need-to-work-at-web-scale&quot;&gt;Apps that don’t need to work at Web Scale&lt;/h2&gt;
&lt;p&gt;There are many reasons why FAANG is FAANG, one of them is because they have the money to work at “Web Scale”. This is one reason why many startups look for VCs instead of bootstrapping, they simply don’t have the money necessary to work on the scale they want to work. If you’re doing a hobby project that is a web app and it becomes viral, you might face a lot of trouble scaling your backend to cope with the demand. On the other hand, apps without backends don’t need to play this game. You can have a normal web server, place it on something like cloudflare, use a service worker and go full offline after the first run. Each of your clients only load the app once and probably from some edge cache. There is no database cluster to scale, no AWS to dial up, it doesn’t really matter if you have a single user or millions.&lt;/p&gt;
&lt;p&gt;Of course this depends on the kind of application you’re building, I’m mostly talking about personal usage apps that don’t need to exchange data with other people, but even in cases where some form of communication is desirable, you might opt to use some decentralized protocol such as IPFS, Gun, DAT, etc, and provide a different kind of solution. In other cases, providing a feature to save the data in the background to a shared online drive is more than enough. You might not need a backend at all.&lt;/p&gt;

&lt;p&gt;I love RSS and blogs so I’m building my own feed reader. I wanted it to be a PWA so that others could benefit from it, but I wanted to do it without a backend server. I don’t want to know what you’re reading, or how much time you spend on a given blog post, I just want to offer a little feed reader. So far my main challenge is not actually what Apple just did, more about that in a bit, but CORS. God damn, I hate CORS! The application can’t reliably fetch the feeds by initiating the requests on the client-side because a ton of sites don’t serve their feeds with the correct CORS headers. The status quo of the web is that there is a server and a client, and stuff happens at the server. It doesn’t need to be this way. You should be able to have client-side only apps, and they should be able to do what you want them to do, but there is no API to request disabling CORS for a given site because the browser vendors think you’re stupid and would click yes without judgement. By thinking you’re stupid, they crippled a ton of potential for client-side-only PWAs.&lt;/p&gt;

&lt;p&gt;Apple in its &lt;a href=&quot;https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/&quot;&gt;Full Third-Party Cookie Blocking and More | WebKit&lt;/a&gt; blog post announced changes to WebKit that erases all local storage data for a given site if the site is not used for seven days. Basically, you go on a vacation and the data is lost. This means that apps must necessarily keep the data on a server, or they risk losing it all because Apple thinks this equates to privacy.&lt;/p&gt;
&lt;p&gt;What it does is cripple not only client-side-only PWAs but all PWAs as a big appeal of such technology is for it to be an offline-first and you can’t really go offline-first if you don’t have offline data anymore. Apple is crippling the Web because all it cares about is their native app store and it doesn’t matter how they spin this shit in terms of privacy and security, all they are doing is hurting the web for profit.&lt;/p&gt;
&lt;h2 id=&quot;update&quot;&gt;Update&lt;/h2&gt;
&lt;p&gt;There has been quite a lively discussion about this post both on &lt;a href=&quot;https://news.ycombinator.com/item?id=22686602&quot;&gt;HN&lt;/a&gt; and on a comment thread on another post on &lt;a href=&quot;https://lobste.rs/s/vg8ctp/apple_just_killed_offline_web_apps_while#c_tq4cny&quot;&gt;Lobste.rs&lt;/a&gt;. There are many people finding Apple’s wording on that blog post confusing and I’m among them, but some readers concluded that apparently if you install the PWA to the home screen, then its data is safe which would make this a non-issue. I want to remind everyone that &lt;strong&gt;installing to the home screen is not what makes a PWA, it is an optional step&lt;/strong&gt;. A PWA is still a PWA if the user access it only occasionally by typing the URL on the browser or keeping a bookmark. I access many PWAs on my phone but they are not in my home screen because I like to keep it clean. My browser “new tab” lists them for me, they are still as much a PWA as the ones in your home screen.&lt;/p&gt;
&lt;p&gt;Picking a case where this arbitrary deletion doesn’t work and thinking it makes it OK, is failing to understand why I’m upset at this and why I think this is a big issue, which might just be me failing to communicate well. For me this is not about data that can be retrieved from server and cache, which greatly degrades the web experience but is not what I’m focusing on. For me this is about preventing web apps to ever work local-only. I’m coming from the decentralization community and am keen on computing on the client and keeping data on the client. This makes it impossible on Apple’s platforms.&lt;/p&gt;
&lt;p&gt;Saying that &lt;em&gt;you should build a native app&lt;/em&gt; is not an answer. Native apps need to go through gatekeepers, the web does not. The web is the only mass communication media where we all have publishing access (to some degree at least), native iOS apps are not like this. There is a reason Mozilla can’t ship Firefox with Gecko on iOS and the reason is not because they don’t know how to do it. Apple is doing this in the name of privacy but what it actually does is force developers closer to their app store.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;p-bridgy-mastodon-content&quot; href=&quot;https://brid.gy/publish/mastodon&quot;&gt;#Apple is hurting the #Web again by delivering a crippling blow to #PWAs.&lt;/a&gt; &lt;a class=&quot;p-bridgy-twitter-content&quot; href=&quot;https://brid.gy/publish/twitter&quot;&gt;#Apple is hurting the #Web again by delivering a crippling blow to #PWAs.&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 17:22:45 +0000</pubDate>
<dc:creator>soapdog</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://andregarzia.com/2020/03/private-client-side-only-pwas-are-hard-but-now-apple-made-them-impossible.html</dc:identifier>
</item>
<item>
<title>Chrome phasing out support for User-Agent</title>
<link>https://www.infoq.com/news/2020/03/chrome-phasing-user-agent/</link>
<guid isPermaLink="true" >https://www.infoq.com/news/2020/03/chrome-phasing-user-agent/</guid>
<description>&lt;p&gt;Google announced its decision to drop support for the User-Agent string in its Chrome browser. Instead, Chrome will offer a new API called Client Hints that will give the user greater control over which information is shared with websites.&lt;/p&gt;
&lt;p&gt;The User-Agent string can be traced back to &lt;a href=&quot;https://en.wikipedia.org/wiki/Mosaic_(web_browser)&quot; rel=&quot;nofollow&quot;&gt;Mosaic&lt;/a&gt;, a popular browser in the early '90s where the browser simply sent a simple string containing the browser name and its version. The string looked something like &lt;em&gt;Mosaic/0.9&lt;/em&gt; and saw little use.&lt;/p&gt;
&lt;p&gt;When Netscape came out a few years later, it adopted the User-Agent string and added additional details such as the operating system, language, etc. These details helped websites to deliver the right content for the user, though in reality, the primary use case for the User-Agent string became browser sniffing.&lt;/p&gt;
&lt;p&gt;Since Mosaic and Netscape supported a different set of functionalities, websites had to use the User-Agent string to determine the browser type to avoid using capabilities that were not supported (such as frames, that were only supported by Netscape).&lt;/p&gt;
&lt;p&gt;Browser sniffing continued to play a significant part in determining the browser capabilities for many years, which led to an unfortunate side effect where smaller browser vendors had to mimic popular User-Agents to display the correct website - as many companies only supported the major User-Agent types.&lt;/p&gt;
&lt;p&gt;With JavaScript popularity rising, most developers have started using libraries such as &lt;a href=&quot;https://modernizr.com/&quot; rel=&quot;nofollow&quot;&gt;Modernizer&lt;/a&gt;, which detects the specific capabilities of the browser, as this provides much more accurate results.&lt;/p&gt;
&lt;p&gt;As a result, the most significant usage for the User-Agent remained within the advertising industry, where companies used it to 'fingerprint' users, a practice that many privacy advocates found to be problematic - mainly as most users had limited options to disable/mask those details.&lt;/p&gt;
&lt;p&gt;To combat these two problems, the Chrome team will start phasing out the User-Agent beginning with Chrome 81.&lt;/p&gt;
&lt;p&gt;While removing the User-Agent completely was deemed problematic, as many sites still rely on them, Chrome will no longer update the browser version and will only include a unified version of the OS data.&lt;/p&gt;
&lt;p&gt;The move is scheduled to be complete by Chrome 85 and is expected to be released in mid-September 2020. Other browser vendors, including Mozilla Firefox, Microsoft Edge, and Apple Safari, have expressed their support of the move. However, it's still unclear when they will phase out the User-Agent themselves.&lt;/p&gt;
&lt;p&gt;You can read more about the Chrome proposed alternative to the User-Agent in an article titled 'Client Hints' on the &lt;a href=&quot;https://github.com/WICG/ua-client-hints&quot; rel=&quot;nofollow&quot;&gt;official Github repository&lt;/a&gt;. As with every proposal, the exact implementation may change before its release, and developers are advised to keep track of the details within the repository as well as the release notes provided with new versions of Chrome.&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 14:47:28 +0000</pubDate>
<dc:creator>oftenwrong</dc:creator>
<og:type>website</og:type>
<og:image>https://cdn.infoq.com/statics_s2_20200324081829/styles/i/logo-big.jpg</og:image>
<og:title>Chrome Phasing out Support for User Agent</og:title>
<og:description>Google announced its decision to drop support for the User-Agent string in its Chrome browser. Instead, Chrome will offer a new API called Client Hints that will give the user greater control over which information is shared with websites.</og:description>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.infoq.com/news/2020/03/chrome-phasing-user-agent/</dc:identifier>
</item>
<item>
<title>Show HN: Skynet Simulator</title>
<link>http://skynetsimulator.com/</link>
<guid isPermaLink="true" >http://skynetsimulator.com/</guid>
<description>&lt;div id=&quot;main&quot;&gt;
      
      

      

      

      


      &lt;div class=&quot;table&quot; id=&quot;diskholder&quot;&gt;
        &lt;div class=&quot;row header&quot;&gt;
          &lt;p&gt;Disk&lt;/p&gt;
          &lt;p&gt;Size&lt;/p&gt;
          &lt;p&gt;Used&lt;/p&gt;
          &lt;p&gt;Avail&lt;/p&gt;
          &lt;p&gt;Use%&lt;/p&gt;
        &lt;/div&gt;
        
        
      &lt;/div&gt;

      &lt;div id=&quot;fileholder&quot; class=&quot;table&quot;&gt;
        
        &lt;div class=&quot;row header&quot;&gt;
          &lt;p&gt;File&lt;/p&gt;
          &lt;p&gt;Size&lt;/p&gt;
          &lt;p&gt;del&lt;/p&gt;
          &lt;p&gt;mv&lt;/p&gt;
        &lt;/div&gt;
        
        
      &lt;/div&gt;

      &lt;div id=&quot;networkholder&quot; class=&quot;table&quot;&gt;&lt;!-- hidescanners --&gt;
        &lt;div class=&quot;row header&quot;&gt;
          &lt;p&gt;Network&lt;/p&gt;
          &lt;p&gt;Listen&lt;/p&gt;
          &lt;p&gt;Scan&lt;/p&gt;
          &lt;p&gt;Scanned&lt;/p&gt;
        &lt;/div&gt;
        
        
        
      &lt;/div&gt;

    &lt;/div&gt;&amp;#13;
    &amp;#13;
&amp;#13;
&lt;!-- Start of StatCounter Code --&gt;&amp;#13;
&lt;noscript&gt;&lt;a href=&quot;http://www.statcounter.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://c2.statcounter.com/counter.php?sc_project=557789&amp;amp;amp;java=0&quot; alt=&quot;free web hit counter&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; &lt;/noscript&gt;&amp;#13;
&lt;!-- End of StatCounter Code --&gt;&amp;#13;
&amp;#13;
  </description>
<pubDate>Wed, 25 Mar 2020 14:46:47 +0000</pubDate>
<dc:creator>mr-ron</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://skynetsimulator.com/</dc:identifier>
</item>
<item>
<title>Getting started with bare-metal assembly</title>
<link>https://johv.dk/blog/bare-metal-assembly-tutorial.html</link>
<guid isPermaLink="true" >https://johv.dk/blog/bare-metal-assembly-tutorial.html</guid>
<description>&lt;p&gt;Seeing a program you wrote running directly on the bare metal is deeply satisfying to anyone who enjoys writing software. And it turns out that creating such a program from scratch is easier than it sounds. The hardest part is figuring out where to start. In this tutorial, I'll show you how to write, build and run the classic &quot;Hello, World!&quot; in pure assembly.&lt;/p&gt;
&lt;img src=&quot;https://johv.dk/blog/bare-metal-assembly-tutorial-screenshot.png&quot;/&gt; &quot;Hello, World!&quot; inside the UEFI shell. You could also boot directly into the application.
&lt;p&gt;Well, almost – on a modern computer, our assembly application doesn't just have direct access to the hardware. Instead it must communicate with an intermediary firmware layer on the motherboard, through the so-called &lt;em&gt;Unified Extensible Firmware Interface&lt;/em&gt; (UEFI).&lt;/p&gt;
&lt;p&gt;Creating a &quot;Hello, World!&quot; UEFI application is a three-step process:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set up a virtual machine with UEFI support.&lt;/li&gt;
&lt;li&gt;Install an assembler that can output UEFI applications.&lt;/li&gt;
&lt;li&gt;Write the actual program and run it!&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Setting up QEMU&lt;/h2&gt;
&lt;p&gt;We &lt;em&gt;could&lt;/em&gt; test our application by repeatedly copying it to a USB drive, rebooting our computer and then seeing if it works. Obviously, we don't want to do that. Instead, we'll be testing our application inside a virtual machine, and &lt;a rel=&quot;nofollow&quot; href=&quot;https://www.qemu.org/&quot;&gt;QEMU&lt;/a&gt; is a great fit for this purpose.&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;14&quot;&gt;&lt;h3&gt;Step 1 — Install QEMU&lt;/h3&gt;
&lt;p&gt;If you are using a GNU/Linux distribution, there's a good chance that it has a &lt;code&gt;qemu&lt;/code&gt; package available. I'll assume that you're using Ubuntu, but you can easily adapt these instructions to whichever system you're using.&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
$ sudo apt-get install qemu
&lt;/pre&gt;
&lt;p&gt;Once the intallation finishes, you should have &lt;code&gt;qemu-system-x86_64&lt;/code&gt; availabe in your path:&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;
$ qemu-system-x86_64 --version
QEMU emulator version 2.11.1(Debian 1:2.11+dfsg-1ubuntu7.23)
Copyright (c) 2003-2017 Fabrice Bellard and the QEMU Project developers
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;While most modern computers come with UEFI-support built-in, QEMU does not. Instead, we will use something called &lt;a href=&quot;https://github.com/tianocore/tianocore.github.io/wiki/OVMF&quot;&gt;OVMF&lt;/a&gt;, which is a firmware layer that adds UEFI support to QEMU.&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;20&quot;&gt;&lt;h3&gt;Step 2 — Set up OVMF&lt;/h3&gt;
&lt;p&gt;Again, there is probably a package available for your distribution. If you are using Ubuntu, run:&lt;/p&gt;
&lt;pre&gt;
$ sudo apt-get install ovmf
&lt;/pre&gt;
&lt;p&gt;This should install the file &lt;code&gt;OVMF.fd&lt;/code&gt; somewhere on your system. Figure out where:&lt;/p&gt;
&lt;pre&gt;
$ find / -name OVMF.fd 2&amp;gt;/dev/null
/usr/share/ovmf/OVMF.fd
&lt;/pre&gt;
&lt;p&gt;Then, go ahead and copy this file to your working directory:&lt;/p&gt;
&lt;pre&gt;
$ cp /usr/share/ovmf/OVMF.fd .
&lt;/pre&gt;
&lt;p&gt;(On some GNU/Linux distributions, the relevant package may install both a 32-bit and a 64-bit version; in this case, use the 64-bit version.)&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;The UEFI firmware provides a bare-bones environment called the UEFI shell. We'll want to test the application that we build from this shell. Let's check that it's working correctly.&lt;/p&gt;
&lt;section class=&quot;step optional&quot; readability=&quot;17&quot;&gt;&lt;h3&gt;Step 3 — Try the UEFI shell&lt;/h3&gt;
&lt;p&gt;You should have the file &lt;code&gt;OVMF.fd&lt;/code&gt; available in your working directory from step 2. To tell QEMU about this firmware, use the argument &lt;code&gt;-bios OVMF.fd&lt;/code&gt;. We also need to specify &lt;code&gt;-net none&lt;/code&gt; so QEMU won't try to boot over the network:&lt;/p&gt;
&lt;pre&gt;
$ qemu-system-x86_64 -bios OVMF.fd -net none
&lt;/pre&gt;
&lt;p&gt;This will land you in a shell that looks a little something like this:&lt;/p&gt;
&lt;pre&gt;
UEFI Interactive Shell v2.2
EDK II
UEFI v2.70 (EDK II, 0x00010000)
Mapping table
     BLK0: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)
Press ESC in 1 seconds to skip startup.nsh or any other key to continue.
Shell&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Try typing &lt;code&gt;help -b&lt;/code&gt; to get a list of commands.&lt;/p&gt;
&lt;/section&gt;&lt;p&gt;We need some way of accessing the executable that we build from inside the UEFI shell. The shell can read FAT32 file systems. Conveniently, QEMU can mount a directory in the host file system as a FAT32 formatted drive in the virtual machine.&lt;/p&gt;
&lt;section class=&quot;step optional&quot; readability=&quot;22&quot;&gt;&lt;h3&gt;Step 4 — Open files from the UEFI shell&lt;/h3&gt;
&lt;p&gt;We'll store the files on our emulated drive in a directory on the host called &lt;code&gt;drive/&lt;/code&gt;. For now, let's just create a small test file that we'll try to read:&lt;/p&gt;
&lt;pre&gt;
$ mkdir drive
$ echo &quot;This is a test&quot; &amp;gt; drive/test.txt
&lt;/pre&gt;
&lt;p&gt;To make this directory available as a FAT32 formatted drive inside QEMU, use the &lt;code&gt;-drive&lt;/code&gt; option like this:&lt;/p&gt;
&lt;pre&gt;
$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:&lt;u&gt;drive/&lt;/u&gt;
&lt;/pre&gt;
&lt;p&gt;Inside QEMU, you will now see that there is a new file system available called &lt;code&gt;FS0:&lt;/code&gt;. Switch to it and look for the text file that you just created:&lt;/p&gt;
&lt;pre&gt;
Shell&amp;gt; fs0:
FS0:\&amp;gt; dir
Directory of: FS0:\
03/21/2020  17:46                  15  test.txt
03/21/2020  16:49              10,565  NvVars
          2 File(s)      10,580 bytes
          0 Dir(s)
FS0:\&amp;gt; cat test.txt
This is a test
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;Great! We can now transfer our executable into QEMU and open it from the shell. This gives us an environment that is very similar to what we would get if we inserted a FAT32 formatted USB drive into a real computer with a UEFI shell installed.&lt;/p&gt;
&lt;h2&gt;Assembling a UEFI application with FASM&lt;/h2&gt;
&lt;p&gt;It would be nice if we could just put a bunch of machine code on a USB drive and have our computer execute that. Unfortunately, that's not how it works. All modern operating systems store executables as &lt;a rel=&quot;nofollow&quot; href=&quot;https://en.wikipedia.org/wiki/Object_file&quot;&gt;object files&lt;/a&gt;. An object file contains both the machine code itself and some information about how that code should be loaded and executed.&lt;/p&gt;
&lt;p&gt;The specific object file format used by UEFI is the so-called &lt;a rel=&quot;nofollow&quot; href=&quot;https://en.wikipedia.org/wiki/Portable_Executable&quot;&gt;Portable Executable&lt;/a&gt; format. This format is also used by Microsoft Windows for &lt;code&gt;.exe&lt;/code&gt; and &lt;code&gt;.dll&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;An assembler is a program that generates an object file from assembly code. There are many assemblers, but for this tutorial we'll be using &lt;a rel=&quot;nofollow&quot; href=&quot;https://flatassembler.net/&quot;&gt;FASM&lt;/a&gt;, because it's easy to use and has built-in support for the object file format we need.&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;11&quot;&gt;&lt;h3&gt;Step 5 — Install FASM&lt;/h3&gt;
&lt;p&gt;On Ubuntu, FASM is available in the standard repository:&lt;/p&gt;
&lt;pre&gt;
$ sudo apt-get install fasm
&lt;/pre&gt;
&lt;p&gt;Check that you have FASM installed and in your path:&lt;/p&gt;
&lt;pre&gt;
$ fasm
flat assembler  version 1.73.13
usage: fasm  [output]
optional settings:
 -m &amp;lt;limit&amp;gt;         set the limit in kilobytes for the available memory
 -p &amp;lt;limit&amp;gt;         set the maximum allowed number of passes
 -d &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;  define symbolic variable
 -s &amp;lt;file&amp;gt;          dump symbolic information for debugging
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;FASM can generate code for many different output formats. We need to tell it to generate a 64-bit Portable Executable with some extra flags set to specify that it's a UEFI application. This is done using the &lt;code&gt;format&lt;/code&gt; directive:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
format pe64 efi
&lt;/pre&gt;
&lt;p&gt;Let's start by writing a program that is even simpler than &quot;Hello, World!&quot; – a program that does absolutely nothing. This program will start at the &lt;code&gt;main:&lt;/code&gt; label and then immediately return to the caller:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
entry main
main:
  ret
&lt;/pre&gt;
&lt;p&gt;The Portable Executable format, like most executable file formats, supports multiple &lt;em&gt;sections&lt;/em&gt;. One section contains the program code, another contains data that is loaded into RAM when the program is started, and so on. The machine code should sit in a section called &lt;code&gt;.text&lt;/code&gt;, and we should specify that data in this section may be both executed and read:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
section '.text' executable readable
&lt;/pre&gt;
&lt;p&gt;Thus, the final program, which does nothing and then exists, is:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
format pe64 efi
entry main

section '.text' executable readable

main:
  ret
&lt;/pre&gt;
&lt;p&gt;Now we just need to assemble this program, and then we'll be able to run it inside QEMU.&lt;/p&gt;
&lt;section class=&quot;step optional&quot; readability=&quot;31&quot;&gt;&lt;h3&gt;Step 6 — Assemble and run an empty executable&lt;/h3&gt;
&lt;p&gt;Save the program as &lt;code&gt;empty.asm&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ cat &amp;gt; empty.asm
format pe64 efi
entry main

section '.text' executable readable

main:
  ret
&lt;/pre&gt;
&lt;p&gt;Then, assmble it with FASM, and put the output in &lt;code&gt;drive/empty&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
$ mkdir -p drive
$ fasm empty.asm drive/empty
&lt;/pre&gt;
&lt;p&gt;Now, we can mount &lt;code&gt;drive/&lt;/code&gt; as a FAT32 formatted drive in QEMU. Then, we just need to run the application off the drive from inside the UEFI shell. If everything goes according to plan, you should see nothing happen:&lt;/p&gt;
&lt;pre&gt;
$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/
UEFI Interactive Shell v2.2
EDK II
UEFI v2.70 (EDK II, 0x00010000)
Mapping table
      FS0: Alias(s):HD0a1:;BLK1:
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(1,MBR,0xBE1AFDFA,0x3F,0xFBFC1)
     BLK0: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)
     BLK2: Alias(s):
          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)
Press ESC in 1 seconds to skip startup.nsh or any other key to continue.
Shell&amp;gt; fs0:\empty
Shell&amp;gt;
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;Now that we have figured out how to assemble a UEFI application and run it inside QEMU, let's see if we can do something a little bit more interesting. Yes, it's finally time to write our &quot;Hello, World!&quot; program!&lt;/p&gt;
&lt;h2&gt;Using UEFI services to write output&lt;/h2&gt;
&lt;p&gt;The UEFI firmware provides some standardized services. Among them is a service that we can use to show text on the screen called the Simple Text Output Protocol. The &lt;a href=&quot;https://uefi.org/specifications&quot; rel=&quot;nofollow&quot;&gt;UEFI Specification&lt;/a&gt; contains everything you could ever possibly want to know about UEFI – and then some. (This tutorial uses version 2.8, updated in Feburary 2020.)&lt;/p&gt;
&lt;p&gt;For the purposes of writing &quot;Hello, World!&quot;, we are mostly interested in the following sections:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sections 2.3.1 and 2.3.4 (Data types and x86-64 calling conventions)&lt;/li&gt;
&lt;li&gt;Section 4 (EFI System Table)&lt;/li&gt;
&lt;li&gt;Section 12 (Console support)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If anything in this tutorial is unclear, you can probably find an answer to your question in one of those sections. I'll try to summarize the important parts here.&lt;/p&gt;
&lt;p&gt;When our UEFI application is started, a pointer to the EFI System Table will be in &lt;code&gt;RDX&lt;/code&gt;. The System Table is a structure that contains, among other things, a pointer to a Simple Text Output Protocol. This protocol is itself a structure that contains a function to print output to the screen.&lt;/p&gt;
&lt;p&gt;The specification contains definitions of all the structures that we need to worry about. On page 92, we find:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
typedef struct {
        EFI_TABLE_HEADER                Hdr;
        CHAR16                          *FirmwareVendor;
        UINT32                          FirmwareRevision;
        EFI_HANDLE                      ConsoleInHandle;
        EFI_SIMPLE_TEXT_INPUT_PROTOCOL  *ConIn;
        EFI_HANDLE                      ConsoleOutHandle;
        EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *ConOut;
        EFI_HANDLE                      StandardErrorHandle;
        EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL *StdErr;
        EFI_RUNTIME_SERVICES            *RuntimeServices;
        EFI_BOOT_SERVICES               *BootServices;
        UINTN                           NumberOfTableEntries;
        EFI_CONFIGURATION_TABLE         *ConfigurationTable;
} EFI_SYSTEM_TABLE;
&lt;/pre&gt;
&lt;p&gt;We need to calculate the offset to &lt;code&gt;ConOut&lt;/code&gt; inside this structure. The header is 12 bytes (cf. the definition on page 90), &lt;code&gt;UINT32&lt;/code&gt; is 4 bytes, and &lt;code&gt;EFI_HANDLE&lt;/code&gt; and all pointer types are 8 bytes. However, note that each member of the structure is 8-byte aligned; this means that there are 4 bytes of padding after the header and the &lt;code&gt;UINT32&lt;/code&gt;. So, in fact, the &lt;code&gt;ConOut&lt;/code&gt; pointer will be at index &lt;span class=&quot;math&quot;&gt;(12 + 4) + (4 + 4) + 8 · 5 = 64&lt;/span&gt; in the structure.&lt;/p&gt;
&lt;p&gt;Thus, we can load the Simple Text Output Protocol &lt;code&gt;ConOut&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;

mov rcx, [rdx + 64]
&lt;/pre&gt;
&lt;p&gt;The Simple Text Output Protocol structure looks like this (page 442):&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
typedef struct _EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL {
        EFI_TEXT_RESET               Reset;
        EFI_TEXT_STRING              OutputString;
        EFI_TEXT_TEST_STRING         TestString;
        EFI_TEXT_QUERY_MODE          QueryMode;
        EFI_TEXT_SET_MODE            SetMode;
        EFI_TEXT_SET_ATTRIBUTE       SetAttribute;
        EFI_TEXT_CLEAR_SCREEN        ClearScreen;
        EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition;
        EFI_TEXT_ENABLE_CURSOR       EnableCursor;
        SIMPLE_TEXT_OUTPUT_MODE      *Mode;
} EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;
&lt;/pre&gt;
&lt;p&gt;We are interested in calling the function &lt;code&gt;OutputString&lt;/code&gt;, which is at offset 8 inside this structure. (Each function pointer is 8 bytes.) This function takes two arguments: a pointer to the Output Protocol and the string itself (see page 444).&lt;/p&gt;
&lt;p&gt;We can load the address of the function into &lt;code&gt;RAX&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;

mov rax, [rcx + 8]
&lt;/pre&gt;
&lt;p&gt;FASM has a handy &lt;code&gt;du&lt;/code&gt; instruction, which we can use to store a 16-bit string. (See the &lt;a href=&quot;https://flatassembler.net/docs.php?article=manual&quot; rel=&quot;nofollow&quot;&gt;FASM manual&lt;/a&gt; for more information about how &lt;code&gt;du&lt;/code&gt; works.) The string should end with a carriage return and a line feed. We'll store the string in the &lt;code&gt;.data&lt;/code&gt; section like so:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;
section '.data' readable writable
string du 'Hello, World!', 0xD, 0xA, 0
&lt;/pre&gt;
&lt;p&gt;The calling conventions (see page 27) specify that the function takes its first argument in &lt;code&gt;RCX&lt;/code&gt; and its second argument in &lt;code&gt;RDX&lt;/code&gt;. We must also allocate 32 bytes of so-called &lt;em&gt;shadow space&lt;/em&gt; on the stack before calling the function. Once we have set everything up, we can call the function in &lt;code&gt;RAX&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;code&quot;&gt;

mov rdx, string


sub rsp, 32


call rax


add rsp, 32

ret
&lt;/pre&gt;
&lt;p&gt;And that's our &quot;Hello, World!&quot; program. Now we need to assemble it into an executable.&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;29&quot;&gt;&lt;h3&gt;Step 7 — Assemble &quot;Hello, World!&quot;&lt;/h3&gt;
&lt;p&gt;Create a file with the full source code for the assembly program, and save it as &lt;code&gt;hello.asm&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ cat &amp;gt; hello.asm
format pe64 efi
entry main

section '.text' executable readable

main:
  ;; Recall that RDX contains a pointer to the System Table when
  ;; our application is called. So rdx + 64 is the address of the
  ;; pointer to ConOut, and [rdx + 64] is the pointer itself.
  mov rcx, [rdx + 64]

  ;; Now, RCX contains the ConOut pointer. Thus, the address of
  ;; the OutputString function is at rcx + 8. We'll move this
  ;; function into RAX:
  mov rax, [rcx + 8]

  ;; We already have the ConOut pointer in RCX. Let's load the
  ;; string pointer into RDX:
  mov rdx, string

  ;; Set up the shadow space. We just need to reserve 32 bytes
  ;; on the stack, which we do by manipulating the stack pointer:
  sub rsp, 32

  ;; Now we can call the OutputText function, whose address is
  ;; in the RAX register:
  call rax

  ;; Finally, we'll clean up the shadow space and then return:
  add rsp, 32

  ret

section '.data' readable writable

string du 'Hello, World!', 0xD, 0xA, 0
&lt;/pre&gt;
&lt;p&gt;Then, assemble it with FASM, and save the output in &lt;code&gt;drive/hello&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ fasm hello.asm drive/hello
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;With the program in the &lt;code&gt;drive/&lt;/code&gt; directory, we can mount this directory inside QEMU as a FAT32 formatted drive in the same way that we did before. And then we can finally run our &quot;Hello, World!&quot; program!&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;11&quot;&gt;&lt;h3&gt;Step 8 — Run &quot;Hello, World!&quot; in QEMU&lt;/h3&gt;
&lt;p&gt;You should have &lt;code&gt;drive/hello&lt;/code&gt; from the previous step. Run QEMU:&lt;/p&gt;
&lt;pre&gt;
$ qemu-system-x86_64 -bios OVMF.fd -net none -drive format=raw,file=fat:rw:drive/
&lt;/pre&gt;
&lt;p&gt;Then, in the UEFI shell execute &lt;code&gt;FS0:\hello&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
Shell&amp;gt; FS0:\hello
Hello, World!
Shell&amp;gt;
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;And there you go!&lt;/p&gt;
&lt;p&gt;Perhaps you would like to see your &quot;Hello, World!&quot; program running in all its glory on your real, physical hardware. This is actually pretty easy to do. You just need to format a USB drive with a FAT32 file system, and then you can put your file directly on the USB drive. If you have a UEFI shell built-in to your firmware, then you can run the program from there.&lt;/p&gt;
&lt;p&gt;Otherwise, you can save the file as &lt;code&gt;\EFI\BOOT\BOOTx64.EFI&lt;/code&gt; on the USB drive; this will make the UEFI firmware think that it's a bootable device (like a USB drive with an operating system or a bootloader on it), and let you select that drive from the boot menu. If you're planning to boot directly into your &quot;Hello, World!&quot; program, you should change the &lt;code&gt;ret&lt;/code&gt; instruction to &lt;code&gt;jmp $&lt;/code&gt;. This will cause the program to wait forever so that it doesn't shut down immediately after booting from it.&lt;/p&gt;
&lt;section class=&quot;step&quot; readability=&quot;23&quot;&gt;&lt;h3&gt;Step 9 — Create a bootable USB drive&lt;/h3&gt;
&lt;p&gt;Start by replacing &lt;code&gt;ret&lt;/code&gt; with &lt;code&gt;jmp $&lt;/code&gt; so you can acutally see your program running. Then reassemble it to &lt;code&gt;hello&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
$ sed -i 's/ret$/jmp $/' hello.asm
$ fasm hello.asm hello
&lt;/pre&gt;
&lt;p&gt;I'll assume that you have an empty USB drive available as &lt;code&gt;/dev/sdx&lt;/code&gt;. We'll need &lt;code&gt;mkfs.vfat&lt;/code&gt; to format the USB drive. On Ubunut, you can install this with:&lt;/p&gt;
&lt;pre&gt;
$ sudo apt-get install dosfstools
&lt;/pre&gt;
&lt;p&gt;Now, format the drive as FAT32:&lt;/p&gt;
&lt;pre&gt;
$ sudo mkfs.vfat -F32 /dev/sdx
&lt;/pre&gt;
&lt;p&gt;Then, mount the device:&lt;/p&gt;
&lt;pre&gt;
$ mkdir -p mnt
$ sudo mount /dev/sdx mnt
&lt;/pre&gt;
&lt;p&gt;Now, copy the &lt;code&gt;hello&lt;/code&gt; executable to &lt;code&gt;\EFI\BOOT\BOOTx64.EFI&lt;/code&gt; on the device:&lt;/p&gt;
&lt;pre&gt;
$ mkdir -p mnt/EFI/BOOT
$ cp hello mnt/EFI/BOOT/BOOTx64.EFI
$ sudo umount mnt
&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;Now you should be able to plug your USB drive into your computer and boot from it!&lt;/p&gt;
&lt;p&gt;Of course, a &quot;Hello, World!&quot; program isn't all that interesting. But with this, you have a good starting point to make much more intersting applications. In fact, it's possible to make an entire operating system as a UEFI application. If this is something that sounds interesting to you, I'd recommend the &lt;a rel=&quot;nofollow&quot; href=&quot;https://wiki.osdev.org/Expanded_Main_Page&quot;&gt;OSDev Wiki&lt;/a&gt; as an excellent place to get started. Have fun!&lt;/p&gt;
&lt;p class=&quot;donation&quot;&gt;Thanks for reading. This article took around 11 hours to research and write. If you found it useful and want to support me, you can send a small tip to my &lt;a class=&quot;monero&quot; rel=&quot;nofollow&quot; href=&quot;https://www.getmonero.org/&quot;&gt;Monero&lt;/a&gt; address: &lt;code class=&quot;monero-address&quot;&gt;86DgwJ6H15nU4uTtZ1MVNk1EyudtUPEWDcAZg3VSGU6RU44LvzQQcx6Ry8tHqQo5CficxMvNd2i7Ca4GmtJSXwqZ3rnvAwU&lt;/code&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 14:35:26 +0000</pubDate>
<dc:creator>a7b3fa</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://johv.dk/blog/bare-metal-assembly-tutorial.html</dc:identifier>
</item>
<item>
<title>Speeding up Linux disk encryption</title>
<link>https://blog.cloudflare.com/speeding-up-linux-disk-encryption/</link>
<guid isPermaLink="true" >https://blog.cloudflare.com/speeding-up-linux-disk-encryption/</guid>
<description>&lt;p&gt;Data encryption at rest is a must-have for any modern Internet company. Many companies, however, don't encrypt their disks, because they fear the potential performance penalty caused by encryption overhead.&lt;/p&gt;
&lt;p&gt;Encrypting data at rest is vital for Cloudflare with &lt;a href=&quot;https://www.cloudflare.com/network/&quot;&gt;more than 200 data centres across the world&lt;/a&gt;. In this post, we will investigate the performance of disk encryption on Linux and explain how we made it at least two times faster for ourselves and our customers!&lt;/p&gt;
&lt;h3 id=&quot;encryptingdataatrest&quot;&gt;Encrypting data at rest&lt;/h3&gt;
&lt;p&gt;When it comes to encrypting data at rest there are several ways it can be implemented on a modern operating system (OS). Available techniques are tightly coupled with a &lt;a href=&quot;https://en.wikibooks.org/wiki/The_Linux_Kernel/Storage&quot;&gt;typical OS storage stack&lt;/a&gt;. A simplified version of the storage stack and encryption solutions can be found on the diagram below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/storage-stack.png&quot; alt=&quot;storage-stack&quot;/&gt;&lt;/p&gt;
&lt;p&gt;On the top of the stack are applications, which read and write data in files (or streams). The file system in the OS kernel keeps track of which blocks of the underlying block device belong to which files and translates these file reads and writes into block reads and writes, however the hardware specifics of the underlying storage device is abstracted away from the filesystem. Finally, the block subsystem actually passes the block reads and writes to the underlying hardware using appropriate device drivers.&lt;/p&gt;
&lt;p&gt;The concept of the storage stack is actually similar to the &lt;a href=&quot;https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/&quot;&gt;well-known network OSI model&lt;/a&gt;, where each layer has a more high-level view of the information and the implementation details of the lower layers are abstracted away from the upper layers. And, similar to the OSI model, one can apply encryption at different layers (think about &lt;a href=&quot;https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/&quot;&gt;TLS&lt;/a&gt; vs &lt;a href=&quot;https://en.wikipedia.org/wiki/IPsec&quot;&gt;IPsec&lt;/a&gt; or &lt;a href=&quot;https://www.cloudflare.com/learning/access-management/what-is-a-vpn/&quot;&gt;a VPN&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For data at rest we can apply encryption either at the block layers (either in hardware or in software) or at the file level (either directly in applications or in the filesystem).&lt;/p&gt;
&lt;h4 id=&quot;blockvsfileencryption&quot;&gt;Block vs file encryption&lt;/h4&gt;
&lt;p&gt;Generally, the higher in the stack we apply encryption, the more flexibility we have. With application level encryption the application maintainers can apply any encryption code they please to any particular data they need. The downside of this approach is they actually have to implement it themselves and encryption in general is not very developer-friendly: one has to know the ins and outs of a specific cryptographic algorithm, properly generate keys, nonces, IVs etc. Additionally, application level encryption does not leverage OS-level caching and &lt;a href=&quot;https://en.wikipedia.org/wiki/Page_cache&quot;&gt;Linux page cache&lt;/a&gt; in particular: each time the application needs to use the data, it has to either decrypt it again, wasting CPU cycles, or implement its own decrypted “cache”, which introduces more complexity to the code.&lt;/p&gt;
&lt;p&gt;File system level encryption makes data encryption transparent to applications, because the file system itself encrypts the data before passing it to the block subsystem, so files are encrypted regardless if the application has crypto support or not. Also, file systems can be configured to encrypt only a particular directory or have different keys for different files. This flexibility, however, comes at a cost of a more complex configuration. File system encryption is also considered less secure than block device encryption as only the contents of the files are encrypted. Files also have associated metadata, like file size, the number of files, the directory tree layout etc., which are still visible to a potential adversary.&lt;/p&gt;
&lt;p&gt;Encryption down at the block layer (often referred to as &lt;a href=&quot;https://en.wikipedia.org/wiki/Disk_encryption&quot;&gt;disk encryption&lt;/a&gt; or full disk encryption) also makes data encryption transparent to applications and even whole file systems. Unlike file system level encryption it encrypts all data on the disk including file metadata and even free space. It is less flexible though - one can only encrypt the whole disk with a single key, so there is no per-directory, per-file or per-user configuration. From the crypto perspective, not all cryptographic algorithms can be used as the block layer doesn't have a high-level overview of the data anymore, so it needs to process each block independently. Most &lt;a href=&quot;https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Common_modes&quot;&gt;common algorithms require some sort of block chaining&lt;/a&gt; to be secure, so are not applicable to disk encryption. Instead, &lt;a href=&quot;https://en.wikipedia.org/wiki/Disk_encryption_theory#Block_cipher-based_modes&quot;&gt;special modes were developed&lt;/a&gt; just for this specific use-case.&lt;/p&gt;
&lt;p&gt;So which layer to choose? As always, it depends... Application and file system level encryption are usually the preferred choice for client systems because of the flexibility. For example, each user on a multi-user desktop may want to encrypt their home directory with a key they own and leave some shared directories unencrypted. On the contrary, on server systems, managed by SaaS/PaaS/IaaS companies (including Cloudflare) the preferred choice is configuration simplicity and security - with full disk encryption enabled any data from any application is automatically encrypted with no exceptions or overrides. We believe that all data needs to be protected without sorting it into &quot;important&quot; vs &quot;not important&quot; buckets, so the selective flexibility the upper layers provide is not needed.&lt;/p&gt;
&lt;h4 id=&quot;hardwarevssoftwarediskencryption&quot;&gt;Hardware vs software disk encryption&lt;/h4&gt;
&lt;p&gt;When encrypting data at the block layer it is possible to do it directly in the storage hardware, if the hardware &lt;a href=&quot;https://en.wikipedia.org/wiki/Hardware-based_full_disk_encryption&quot;&gt;supports it&lt;/a&gt;. Doing so usually gives better read/write performance and consumes less resources from the host. However, since most hardware firmware is proprietary, it does not receive as much attention and review from the security community. In the past this led to &lt;a href=&quot;https://www.us-cert.gov/ncas/current-activity/2018/11/06/Self-Encrypting-Solid-State-Drive-Vulnerabilities&quot;&gt;flaws in some implementations of hardware disk encryption&lt;/a&gt;, which render the whole security model useless. Microsoft, for example, &lt;a href=&quot;https://support.microsoft.com/en-us/help/4516071/windows-10-update-kb4516071&quot;&gt;started to prefer software-based disk encryption&lt;/a&gt; since then.&lt;/p&gt;
&lt;p&gt;We didn't want to put our data and our customers' data to the risk of using potentially insecure solutions and we &lt;a href=&quot;https://blog.cloudflare.com/helping-to-build-cloudflare-part-4/&quot;&gt;strongly believe in open-source&lt;/a&gt;. That's why we rely only on software disk encryption in the Linux kernel, which is open and has been audited by many security professionals across the world.&lt;/p&gt;
&lt;h3 id=&quot;linuxdiskencryptionperformance&quot;&gt;Linux disk encryption performance&lt;/h3&gt;
&lt;p&gt;We aim not only to save bandwidth costs for our customers, but to deliver content to Internet users as fast as possible.&lt;/p&gt;
&lt;p&gt;At one point we noticed that our disks were not as fast as we would like them to be. Some profiling as well as a quick A/B test pointed to Linux disk encryption. Because not encrypting the data (even if it is supposed-to-be a public Internet cache) is not a sustainable option, we decided to take a closer look into Linux disk encryption performance.&lt;/p&gt;
&lt;h4 id=&quot;devicemapperanddmcrypt&quot;&gt;Device mapper and dm-crypt&lt;/h4&gt;
&lt;p&gt;Linux implements transparent disk encryption via a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dm-crypt&quot;&gt;dm-crypt module&lt;/a&gt; and &lt;code&gt;dm-crypt&lt;/code&gt; itself is part of &lt;a href=&quot;https://en.wikipedia.org/wiki/Device_mapper&quot;&gt;device mapper&lt;/a&gt; kernel framework. In a nutshell, the device mapper allows pre/post-process IO requests as they travel between the file system and the underlying block device.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dm-crypt&lt;/code&gt; in particular encrypts &quot;write&quot; IO requests before sending them further down the stack to the actual block device and decrypts &quot;read&quot; IO requests before sending them up to the file system driver. Simple and easy! Or is it?&lt;/p&gt;
&lt;h4 id=&quot;benchmarkingsetup&quot;&gt;Benchmarking setup&lt;/h4&gt;
&lt;p&gt;For the record, the numbers in this post were obtained by running specified commands on an idle &lt;a href=&quot;https://blog.cloudflare.com/a-tour-inside-cloudflares-g9-servers/&quot;&gt;Cloudflare G9 server&lt;/a&gt; out of production. However, the setup should be easily reproducible on any modern x86 laptop.&lt;/p&gt;
&lt;p&gt;Generally, benchmarking anything around a storage stack is hard because of the noise introduced by the storage hardware itself. Not all disks are created equal, so for the purpose of this post we will use the fastest disks available out there - that is no disks.&lt;/p&gt;
&lt;p&gt;Instead Linux has an option to emulate a disk directly in &lt;a href=&quot;https://en.wikipedia.org/wiki/Random-access_memory&quot;&gt;RAM&lt;/a&gt;. Since RAM is much faster than any persistent storage, it should introduce little bias in our results.&lt;/p&gt;
&lt;p&gt;The following command creates a 4GB ramdisk:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo modprobe brd rd_nr=1 rd_size=4194304
$ ls /dev/ram0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now we can set up a &lt;code&gt;dm-crypt&lt;/code&gt; instance on top of it thus enabling encryption for the disk. First, we need to generate the disk encryption key, &quot;format&quot; the disk and specify a password to unlock the newly generated key.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ fallocate -l 2M crypthdr.img
$ sudo cryptsetup luksFormat /dev/ram0 --header crypthdr.img

WARNING!
========
This will overwrite data on crypthdr.img irrevocably.

Are you sure? (Type uppercase yes): YES
Enter passphrase:
Verify passphrase:
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Those who are familiar with &lt;code&gt;LUKS/dm-crypt&lt;/code&gt; might have noticed we used a &lt;a href=&quot;http://man7.org/linux/man-pages/man8/cryptsetup.8.html&quot;&gt;LUKS detached header&lt;/a&gt; here. Normally, LUKS stores the password-encrypted disk encryption key on the same disk as the data, but since we want to compare read/write performance between encrypted and unencrypted devices, we might accidentally overwrite the encrypted key during our benchmarking later. Keeping the encrypted key in a separate file avoids this problem for the purposes of this post.&lt;/p&gt;
&lt;p&gt;Now, we can actually &quot;unlock&quot; the encrypted device for our testing:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo cryptsetup open --header crypthdr.img /dev/ram0 encrypted-ram0
Enter passphrase for /dev/ram0:
$ ls /dev/mapper/encrypted-ram0
/dev/mapper/encrypted-ram0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;At this point we can now compare the performance of encrypted vs unencrypted ramdisk: if we read/write data to &lt;code&gt;/dev/ram0&lt;/code&gt;, it will be stored in &lt;a href=&quot;https://en.wikipedia.org/wiki/Plaintext&quot;&gt;plaintext&lt;/a&gt;. Likewise, if we read/write data to &lt;code&gt;/dev/mapper/encrypted-ram0&lt;/code&gt;, it will be decrypted/encrypted on the way by &lt;code&gt;dm-crypt&lt;/code&gt; and stored in &lt;a href=&quot;https://en.wikipedia.org/wiki/Ciphertext&quot;&gt;ciphertext&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's worth noting that we're not creating any file system on top of our block devices to avoid biasing results with a file system overhead.&lt;/p&gt;
&lt;h4 id=&quot;measuringthroughput&quot;&gt;Measuring throughput&lt;/h4&gt;
&lt;p&gt;When it comes to storage testing/benchmarking &lt;a href=&quot;https://fio.readthedocs.io/en/latest/fio_doc.html&quot;&gt;Flexible I/O tester&lt;/a&gt; is the usual go-to solution. Let's simulate simple sequential read/write load with 4K block size on the ramdisk without encryption:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo fio --filename=/dev/ram0 --readwrite=readwrite --bs=4k --direct=1 --loops=1000000 --name=plain
plain: (g=0): rw=rw, bs=4K-4K/4K-4K/4K-4K, ioengine=psync, iodepth=1
fio-2.16
Starting 1 process
...
Run status group 0 (all jobs):
   READ: io=21013MB, aggrb=1126.5MB/s, minb=1126.5MB/s, maxb=1126.5MB/s, mint=18655msec, maxt=18655msec
  WRITE: io=21023MB, aggrb=1126.1MB/s, minb=1126.1MB/s, maxb=1126.1MB/s, mint=18655msec, maxt=18655msec

Disk stats (read/write):
  ram0: ios=0/0, merge=0/0, ticks=0/0, in_queue=0, util=0.00%
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;The above command will run for a long time, so we just stop it after a while. As we can see from the stats, we're able to read and write roughly with the same throughput around &lt;code&gt;1126 MB/s&lt;/code&gt;. Let's repeat the test with the encrypted ramdisk:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo fio --filename=/dev/mapper/encrypted-ram0 --readwrite=readwrite --bs=4k --direct=1 --loops=1000000 --name=crypt
crypt: (g=0): rw=rw, bs=4K-4K/4K-4K/4K-4K, ioengine=psync, iodepth=1
fio-2.16
Starting 1 process
...
Run status group 0 (all jobs):
   READ: io=1693.7MB, aggrb=150874KB/s, minb=150874KB/s, maxb=150874KB/s, mint=11491msec, maxt=11491msec
  WRITE: io=1696.4MB, aggrb=151170KB/s, minb=151170KB/s, maxb=151170KB/s, mint=11491msec, maxt=11491msec
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Whoa, that's a drop! We only get &lt;code&gt;~147 MB/s&lt;/code&gt; now, which is more than 7 times slower! And this is on a totally idle machine!&lt;/p&gt;
&lt;h4 id=&quot;maybecryptoisjustslow&quot;&gt;Maybe, crypto is just slow&lt;/h4&gt;
&lt;p&gt;The first thing we considered is to ensure we use the fastest crypto. &lt;code&gt;cryptsetup&lt;/code&gt; allows us to benchmark all the available crypto implementations on the system to select the best one:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo cryptsetup benchmark
# Tests are approximate using memory only (no storage IO).
PBKDF2-sha1      1340890 iterations per second for 256-bit key
PBKDF2-sha256    1539759 iterations per second for 256-bit key
PBKDF2-sha512    1205259 iterations per second for 256-bit key
PBKDF2-ripemd160  967321 iterations per second for 256-bit key
PBKDF2-whirlpool  720175 iterations per second for 256-bit key
#  Algorithm | Key |  Encryption |  Decryption
     aes-cbc   128b   969.7 MiB/s  3110.0 MiB/s
 serpent-cbc   128b           N/A           N/A
 twofish-cbc   128b           N/A           N/A
     aes-cbc   256b   756.1 MiB/s  2474.7 MiB/s
 serpent-cbc   256b           N/A           N/A
 twofish-cbc   256b           N/A           N/A
     aes-xts   256b  1823.1 MiB/s  1900.3 MiB/s
 serpent-xts   256b           N/A           N/A
 twofish-xts   256b           N/A           N/A
     aes-xts   512b  1724.4 MiB/s  1765.8 MiB/s
 serpent-xts   512b           N/A           N/A
 twofish-xts   512b           N/A           N/A
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It seems &lt;code&gt;aes-xts&lt;/code&gt; with a 256-bit data encryption key is the fastest here. But which one are we actually using for our encrypted ramdisk?&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo dmsetup table /dev/mapper/encrypted-ram0
0 8388608 crypt aes-xts-plain64 0000000000000000000000000000000000000000000000000000000000000000 0 1:0 0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We do use &lt;code&gt;aes-xts&lt;/code&gt; with a 256-bit data encryption key (count all the zeroes conveniently masked by &lt;code&gt;dmsetup&lt;/code&gt; tool - if you want to see the actual bytes, add the &lt;code&gt;--showkeys&lt;/code&gt; option to the above command). The numbers do not add up however: &lt;code&gt;cryptsetup benchmark&lt;/code&gt; tells us above not to rely on the results, as &quot;Tests are approximate using memory only (no storage IO)&quot;, but that is exactly how we've set up our experiment using the ramdisk. In a somewhat worse case (assuming we're reading all the data and then encrypting/decrypting it sequentially with no parallelism) doing &lt;a href=&quot;https://en.wikipedia.org/wiki/Back-of-the-envelope_calculation&quot;&gt;back-of-the-envelope calculation&lt;/a&gt; we should be getting around &lt;code&gt;(1126 * 1823) / (1126 + 1823) =~696 MB/s&lt;/code&gt;, which is still quite far from the actual &lt;code&gt;147 * 2 = 294 MB/s&lt;/code&gt; (total for reads and writes).&lt;/p&gt;
&lt;h4 id=&quot;dmcryptperformanceflags&quot;&gt;dm-crypt performance flags&lt;/h4&gt;
&lt;p&gt;While reading the &lt;a href=&quot;http://man7.org/linux/man-pages/man8/cryptsetup.8.html&quot;&gt;cryptsetup man page&lt;/a&gt; we noticed that it has two options prefixed with &lt;code&gt;--perf-&lt;/code&gt;, which are probably related to performance tuning. The first one is &lt;code&gt;--perf-same_cpu_crypt&lt;/code&gt; with a rather cryptic description:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Perform encryption using the same cpu that IO was submitted on.  The default is to use an unbound workqueue so that encryption work is automatically balanced between available CPUs.  This option is only relevant for open action.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;So we enable the option&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo cryptsetup close encrypted-ram0
$ sudo cryptsetup open --header crypthdr.img --perf-same_cpu_crypt /dev/ram0 encrypted-ram0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Note: according to the &lt;a href=&quot;http://man7.org/linux/man-pages/man8/cryptsetup.8.html&quot;&gt;latest man page&lt;/a&gt; there is also a &lt;code&gt;cryptsetup refresh&lt;/code&gt; command, which can be used to enable these options live without having to &quot;close&quot; and &quot;re-open&quot; the encrypted device. Our &lt;code&gt;cryptsetup&lt;/code&gt; however didn't support it yet.&lt;/p&gt;
&lt;p&gt;Verifying if the option has been really enabled:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo dmsetup table encrypted-ram0
0 8388608 crypt aes-xts-plain64 0000000000000000000000000000000000000000000000000000000000000000 0 1:0 0 1 same_cpu_crypt
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Yes, we can now see &lt;code&gt;same_cpu_crypt&lt;/code&gt; in the output, which is what we wanted. Let's rerun the benchmark:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo fio --filename=/dev/mapper/encrypted-ram0 --readwrite=readwrite --bs=4k --direct=1 --loops=1000000 --name=crypt
crypt: (g=0): rw=rw, bs=4K-4K/4K-4K/4K-4K, ioengine=psync, iodepth=1
fio-2.16
Starting 1 process
...
Run status group 0 (all jobs):
   READ: io=1596.6MB, aggrb=139811KB/s, minb=139811KB/s, maxb=139811KB/s, mint=11693msec, maxt=11693msec
  WRITE: io=1600.9MB, aggrb=140192KB/s, minb=140192KB/s, maxb=140192KB/s, mint=11693msec, maxt=11693msec
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Hmm, now it is &lt;code&gt;~136 MB/s&lt;/code&gt; which is slightly worse than before, so no good. What about the second option &lt;code&gt;--perf-submit_from_crypt_cpus&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;Disable offloading writes to a separate thread after encryption.  There are some situations where offloading write bios from the encryption threads to a single thread degrades performance significantly.  The default is to offload write bios to the same thread.  This option is only relevant for open action.
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Maybe, we are in the &quot;some situation&quot; here, so let's try it out:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo cryptsetup close encrypted-ram0
$ sudo cryptsetup open --header crypthdr.img --perf-submit_from_crypt_cpus /dev/ram0 encrypted-ram0
Enter passphrase for /dev/ram0:
$ sudo dmsetup table encrypted-ram0
0 8388608 crypt aes-xts-plain64 0000000000000000000000000000000000000000000000000000000000000000 0 1:0 0 1 submit_from_crypt_cpus
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And now the benchmark:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo fio --filename=/dev/mapper/encrypted-ram0 --readwrite=readwrite --bs=4k --direct=1 --loops=1000000 --name=crypt
crypt: (g=0): rw=rw, bs=4K-4K/4K-4K/4K-4K, ioengine=psync, iodepth=1
fio-2.16
Starting 1 process
...
Run status group 0 (all jobs):
   READ: io=2066.6MB, aggrb=169835KB/s, minb=169835KB/s, maxb=169835KB/s, mint=12457msec, maxt=12457msec
  WRITE: io=2067.7MB, aggrb=169965KB/s, minb=169965KB/s, maxb=169965KB/s, mint=12457msec, maxt=12457msec
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;~166 MB/s&lt;/code&gt;, which is a bit better, but still not good...&lt;/p&gt;

&lt;p&gt;Being desperate we decided to seek support from the Internet and &lt;a href=&quot;https://www.spinics.net/lists/dm-crypt/msg07516.html&quot;&gt;posted our findings to the &lt;code&gt;dm-crypt&lt;/code&gt; mailing list&lt;/a&gt;, but the response we got was not very encouraging:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;If the numbers disturb you, then this is from lack of understanding on your side. You are probably unaware that encryption is a heavy-weight operation...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We decided to make a scientific research on this topic by typing &quot;is encryption expensive&quot; into Google Search and one of the top results, which actually contains meaningful measurements, is... &lt;a href=&quot;https://blog.cloudflare.com/how-expensive-is-crypto-anyway/&quot;&gt;our own post about cost of encryption&lt;/a&gt;, but in the context of &lt;a href=&quot;https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/&quot;&gt;TLS&lt;/a&gt;! This is a fascinating read on its own, but the gist is: modern crypto on modern hardware is very cheap even at Cloudflare scale (doing millions of encrypted HTTP requests per second). In fact, it is so cheap that Cloudflare was the first provider to offer &lt;a href=&quot;https://blog.cloudflare.com/introducing-universal-ssl/&quot;&gt;free SSL/TLS for everyone&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;diggingintothesourcecode&quot;&gt;Digging into the source code&lt;/h4&gt;
&lt;p&gt;When trying to use the custom &lt;code&gt;dm-crypt&lt;/code&gt; options described above we were curious why they exist in the first place and what is that &quot;offloading&quot; all about. Originally we expected &lt;code&gt;dm-crypt&lt;/code&gt; to be a simple &quot;proxy&quot;, which just encrypts/decrypts data as it flows through the stack. Turns out &lt;code&gt;dm-crypt&lt;/code&gt; does more than just encrypting memory buffers and a (simplified) IO traverse path diagram is presented below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/dm-crypt.png&quot; alt=&quot;dm-crypt&quot;/&gt;&lt;/p&gt;
&lt;p&gt;When the file system issues a write request, &lt;code&gt;dm-crypt&lt;/code&gt; does not process it immediately - instead it puts it into a &lt;a href=&quot;https://www.kernel.org/doc/html/v4.19/core-api/workqueue.html&quot;&gt;workqueue&lt;/a&gt; &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L3124&quot;&gt;named &quot;kcryptd&quot;&lt;/a&gt;. In a nutshell, a kernel workqueue just schedules some work (encryption in this case) to be performed at some later time, when it is more convenient. When &quot;the time&quot; comes, &lt;code&gt;dm-crypt&lt;/code&gt; &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1940&quot;&gt;sends the request&lt;/a&gt; to &lt;a href=&quot;https://www.kernel.org/doc/html/v4.19/crypto/index.html&quot;&gt;Linux Crypto API&lt;/a&gt; for actual encryption. However, modern Linux Crypto API &lt;a href=&quot;https://www.kernel.org/doc/html/v4.19/crypto/api-skcipher.html#symmetric-key-cipher-api&quot;&gt;is asynchronous&lt;/a&gt; as well, so depending on which particular implementation your system will use, most likely it will not be processed immediately, but queued again for &quot;later time&quot;. When Linux Crypto API will finally &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1980&quot;&gt;do the encryption&lt;/a&gt;, &lt;code&gt;dm-crypt&lt;/code&gt; may try to &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1909-L1910&quot;&gt;sort pending write requests by putting each request&lt;/a&gt; into a &lt;a href=&quot;https://en.wikipedia.org/wiki/Red%E2%80%93black_tree&quot;&gt;red-black tree&lt;/a&gt;. Then a &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1819&quot;&gt;separate kernel thread&lt;/a&gt; again at &quot;some time later&quot; actually takes all IO requests in the tree and &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1864&quot;&gt;sends them down the stack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now for read requests: this time we need to get the encrypted data first from the hardware, but &lt;code&gt;dm-crypt&lt;/code&gt; does not just ask for the driver for the data, but queues the request into a different &lt;a href=&quot;https://www.kernel.org/doc/html/v4.19/core-api/workqueue.html&quot;&gt;workqueue&lt;/a&gt; &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L3122&quot;&gt;named &quot;kcryptd_io&quot;&lt;/a&gt;. At some point later, when we actually have the encrypted data, we &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1742&quot;&gt;schedule it for decryption&lt;/a&gt; using the now familiar &quot;kcryptd&quot; workqueue. &quot;kcryptd&quot; &lt;a href=&quot;https://github.com/torvalds/linux/blob/0d81a3f29c0afb18ba2b1275dcccf21e0dd4da38/drivers/md/dm-crypt.c#L1970&quot;&gt;will send the request&lt;/a&gt; to Linux Crypto API, which may decrypt the data asynchronously as well.&lt;/p&gt;
&lt;p&gt;To be fair the request does not always traverse all these queues, but the important part here is that write requests may be queued up to 4 times in &lt;code&gt;dm-crypt&lt;/code&gt; and read requests up to 3 times. At this point we were wondering if all this extra queueing can cause any performance issues. For example, there is a &lt;a href=&quot;https://www.usenix.org/conference/srecon19asia/presentation/plenz&quot;&gt;nice presentation from Google&lt;/a&gt; about the relationship between queueing and tail latency. One key takeaway from the presentation is:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;A significant amount of tail latency is due to queueing effects&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, why are all these queues there and can we remove them?&lt;/p&gt;
&lt;h4 id=&quot;gitarcheology&quot;&gt;Git archeology&lt;/h4&gt;
&lt;p&gt;No-one writes more complex code just for fun, especially for the OS kernel. So all these queues must have been put there for a reason. Luckily, the Linux kernel source is managed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Git&quot;&gt;git&lt;/a&gt;, so we can try to retrace the changes and the decisions around them.&lt;/p&gt;
&lt;p&gt;The &quot;kcryptd&quot; workqueue was in the source &lt;a href=&quot;https://github.com/torvalds/linux/blob/1da177e4c3f41524e886b7f1b8a0c1fc7321cac2/drivers/md/dm-crypt.c&quot;&gt;since the beginning of the available history&lt;/a&gt; with the following comment:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Needed because it would be very unwise to do decryption in an interrupt context, so bios returning from read requests get queued here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So it was for reads only, but even then - why do we care if it is interrupt context or not, if Linux Crypto API will likely use a dedicated thread/queue for encryption anyway? Well, back in 2005 Crypto API &lt;a href=&quot;https://github.com/torvalds/linux/blob/1da177e4c3f41524e886b7f1b8a0c1fc7321cac2/Documentation/crypto/api-intro.txt&quot;&gt;was not asynchronous&lt;/a&gt;, so this made perfect sense.&lt;/p&gt;
&lt;p&gt;In 2006 &lt;code&gt;dm-crypt&lt;/code&gt; &lt;a href=&quot;https://github.com/torvalds/linux/commit/23541d2d288cdb54f417ba1001dacc7f3ea10a97&quot;&gt;started to use&lt;/a&gt; the &quot;kcryptd&quot; workqueue not only for encryption, but for submitting IO requests:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;This patch is designed to help dm-crypt comply with the new constraints imposed by the following patch in -mm: md-dm-reduce-stack-usage-with-stacked-block-devices.patch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It seems the goal here was not to add more concurrency, but rather reduce kernel stack usage, which makes sense again as the kernel has a common stack across all the code, so it is a quite limited resource. It is worth noting, however, that the &lt;a href=&quot;https://github.com/torvalds/linux/commit/6538b8ea886e472f4431db8ca1d60478f838d14b&quot;&gt;Linux kernel stack has been expanded&lt;/a&gt; in 2014 for x86 platforms, so this might not be a problem anymore.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://github.com/torvalds/linux/commit/cabf08e4d3d1181d7c408edae97fb4d1c31518af&quot;&gt;first version of &quot;kcryptd_io&quot; workqueue was added&lt;/a&gt; in 2007 with the intent to avoid:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;starvation caused by many requests waiting for memory allocation...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The request processing was bottlenecking on a single workqueue here, so the solution was to add another one. Makes sense.&lt;/p&gt;
&lt;p&gt;We are definitely not the first ones experiencing performance degradation because of extensive queueing: in 2011 a change was introduced to &lt;a href=&quot;https://github.com/torvalds/linux/commit/20c82538e4f5ede51bc2b4795bc6e5cae772796d&quot;&gt;conditionally revert some of the queueing for read requests&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;If there is enough memory, code can directly submit bio instead queuing this operation in a separate thread.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, at that time Linux kernel commit messages were not as verbose as today, so there is no performance data available.&lt;/p&gt;
&lt;p&gt;In 2015 &lt;a href=&quot;https://github.com/torvalds/linux/commit/dc2676210c425ee8e5cb1bec5bc84d004ddf4179&quot;&gt;dm-crypt started to sort writes&lt;/a&gt; in a separate &quot;dmcrypt_write&quot; thread before sending them down the stack:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;On a multiprocessor machine, encryption requests finish in a different order than they were submitted. Consequently, write requests would be submitted in a different order and it could cause severe performance degradation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It does make sense as sequential disk access used to be much faster than the random one and &lt;code&gt;dm-crypt&lt;/code&gt; was breaking the pattern. But this mostly applies to &lt;a href=&quot;https://en.wikipedia.org/wiki/Hard_disk_drive&quot;&gt;spinning disks&lt;/a&gt;, which were still dominant in 2015. It may not be as important with modern fast &lt;a href=&quot;https://en.wikipedia.org/wiki/Solid-state_drive&quot;&gt;SSDs (including NVME SSDs)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another part of the commit message is worth mentioning:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;...in particular it enables IO schedulers like CFQ to sort more effectively...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It mentions the performance benefits for the &lt;a href=&quot;https://www.kernel.org/doc/Documentation/block/cfq-iosched.txt&quot;&gt;CFQ IO scheduler&lt;/a&gt;, but Linux schedulers have improved since then to the point that &lt;a href=&quot;https://github.com/torvalds/linux/commit/f382fb0bcef4c37dc049e9f6963e3baf204d815c&quot;&gt;CFQ scheduler has been removed&lt;/a&gt; from the kernel in 2018.&lt;/p&gt;
&lt;p&gt;The same patchset &lt;a href=&quot;https://github.com/torvalds/linux/commit/b3c5fd3052492f1b8d060799d4f18be5a5438&quot;&gt;replaces the sorting list with a red-black tree&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;In theory the sorting should be performed by the underlying disk scheduler, however, in practice the disk scheduler only accepts and sorts a finite number of requests. To allow the sorting of all requests, dm-crypt needs to implement its own sorting.&lt;/p&gt;
&lt;p&gt;The overhead associated with rbtree-based sorting is considered negligible so it is not used conditionally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All that make sense, but it would be nice to have some backing data.&lt;/p&gt;
&lt;p&gt;Interestingly, in the same patchset we see &lt;a href=&quot;https://github.com/torvalds/linux/commit/0f5d8e6ee758f7023e4353cca75d785b2d4f6abe&quot;&gt;the introduction of our familiar &quot;submit_from_crypt_cpus&quot; option&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;There are some situations where offloading write bios from the encryption threads to a single thread degrades performance significantly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Overall, we can see that every change was reasonable and needed, however things have changed since then:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;hardware became faster and smarter&lt;/li&gt;
&lt;li&gt;Linux resource allocation was revisited&lt;/li&gt;
&lt;li&gt;coupled Linux subsystems were rearchitected&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And many of the design choices above may not be applicable to modern Linux.&lt;/p&gt;
&lt;h3 id=&quot;thecleanup&quot;&gt;The &quot;clean-up&quot;&lt;/h3&gt;
&lt;p&gt;Based on the research above we decided to try to remove all the extra queueing and asynchronous behaviour and revert &lt;code&gt;dm-crypt&lt;/code&gt; to its original purpose: simply encrypt/decrypt IO requests as they pass through. But for the sake of stability and further benchmarking we ended up not removing the actual code, but rather adding yet another &lt;code&gt;dm-crypt&lt;/code&gt; option, which bypasses all the queues/threads, if enabled. The flag allows us to switch between the current and new behaviour at runtime under full production load, so we can easily revert our changes should we see any side-effects. The resulting patch can be found on the &lt;a href=&quot;https://github.com/cloudflare/linux/blob/master/patches/0023-Add-DM_CRYPT_FORCE_INLINE-flag-to-dm-crypt-target.patch&quot;&gt;Cloudflare GitHub Linux repository&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;synchronouslinuxcryptoapi&quot;&gt;Synchronous Linux Crypto API&lt;/h4&gt;
&lt;p&gt;From the diagram above we remember that not all queueing is implemented in &lt;code&gt;dm-crypt&lt;/code&gt;. Modern Linux Crypto API may also be asynchronous and for the sake of this experiment we want to eliminate queues there as well. What does &quot;may be&quot; mean, though? The OS may contain different implementations of the same algorithm (for example, &lt;a href=&quot;https://en.wikipedia.org/wiki/AES_instruction_set&quot;&gt;hardware-accelerated AES-NI on x86 platforms&lt;/a&gt; and generic C-code AES implementations). By default the system chooses the &quot;best&quot; one based on &lt;a href=&quot;https://www.kernel.org/doc/html/v4.19/crypto/architecture.html#crypto-api-cipher-references-and-priority&quot;&gt;the configured algorithm priority&lt;/a&gt;. &lt;code&gt;dm-crypt&lt;/code&gt; allows overriding this behaviour and &lt;a href=&quot;https://gitlab.com/cryptsetup/cryptsetup/-/wikis/DMCrypt#mapping-table-for-crypt-target&quot;&gt;request a particular cipher implementation&lt;/a&gt; using the &lt;code&gt;capi:&lt;/code&gt; prefix. However, there is one problem. Let us actually check the available AES-XTS (this is our disk encryption cipher, remember?) implementations on our system:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ grep -A 11 'xts(aes)' /proc/crypto
name         : xts(aes)
driver       : xts(ecb(aes-generic))
module       : kernel
priority     : 100
refcnt       : 7
selftest     : passed
internal     : no
type         : skcipher
async        : no
blocksize    : 16
min keysize  : 32
max keysize  : 64
--
name         : __xts(aes)
driver       : cryptd(__xts-aes-aesni)
module       : cryptd
priority     : 451
refcnt       : 1
selftest     : passed
internal     : yes
type         : skcipher
async        : yes
blocksize    : 16
min keysize  : 32
max keysize  : 64
--
name         : xts(aes)
driver       : xts-aes-aesni
module       : aesni_intel
priority     : 401
refcnt       : 1
selftest     : passed
internal     : no
type         : skcipher
async        : yes
blocksize    : 16
min keysize  : 32
max keysize  : 64
--
name         : __xts(aes)
driver       : __xts-aes-aesni
module       : aesni_intel
priority     : 401
refcnt       : 7
selftest     : passed
internal     : yes
type         : skcipher
async        : no
blocksize    : 16
min keysize  : 32
max keysize  : 64
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We want to explicitly select a synchronous cipher from the above list to avoid queueing effects in threads, but the only two supported are &lt;code&gt;xts(ecb(aes-generic))&lt;/code&gt; (the generic C implementation) and &lt;code&gt;__xts-aes-aesni&lt;/code&gt; (the &lt;a href=&quot;https://en.wikipedia.org/wiki/AES_instruction_set&quot;&gt;x86 hardware-accelerated implementation&lt;/a&gt;). We definitely want the latter as it is much faster (we're aiming for performance here), but it is suspiciously marked as internal (see &lt;code&gt;internal: yes&lt;/code&gt;). If we &lt;a href=&quot;https://github.com/torvalds/linux/blob/fb33c6510d5595144d585aa194d377cf74d31911/include/linux/crypto.h#L91&quot;&gt;check the source code&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;p&gt;Mark a cipher as a service implementation only usable by another cipher and never by a normal user of the kernel crypto API&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So this cipher is meant to be used only by other wrapper code in the Crypto API and not outside it. In practice this means, that the caller of the Crypto API needs to explicitly specify this flag, when requesting a particular cipher implementation, but &lt;code&gt;dm-crypt&lt;/code&gt; does not do it, because by design it is not part of the Linux Crypto API, rather an &quot;external&quot; user. We already patch the &lt;code&gt;dm-crypt&lt;/code&gt; module, so we could as well just add the relevant flag. However, there is another problem with &lt;a href=&quot;https://en.wikipedia.org/wiki/AES_instruction_set&quot;&gt;AES-NI&lt;/a&gt; in particular: &lt;a href=&quot;https://en.wikipedia.org/wiki/X87&quot;&gt;x86 FPU&lt;/a&gt;. &quot;Floating point&quot; you say? Why do we need floating point math to do symmetric encryption which should only be about bit shifts and XOR operations? We don't need the math, but AES-NI instructions use some of the CPU registers, which are dedicated to the FPU. Unfortunately the Linux kernel &lt;a href=&quot;https://github.com/torvalds/linux/blob/fb33c6510d5595144d585aa194d377cf74d31911/arch/x86/kernel/fpu/core.c#L77&quot;&gt;does not always preserve these registers in interrupt context&lt;/a&gt; for performance reasons (saving/restoring FPU is expensive). But &lt;code&gt;dm-crypt&lt;/code&gt; may execute code in interrupt context, so we risk corrupting some other process data and we go back to &quot;it would be very unwise to do decryption in an interrupt context&quot; statement in the original code.&lt;/p&gt;
&lt;p&gt;Our solution to address the above was to create another somewhat &lt;a href=&quot;https://github.com/cloudflare/linux/blob/master/patches/0024-Add-xtsproxy-Crypto-API-module.patch&quot;&gt;&quot;smart&quot; Crypto API module&lt;/a&gt;. This module is synchronous and does not roll its own crypto, but is just a &quot;router&quot; of encryption requests:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if we can use the FPU (and thus AES-NI) in the current execution context, we just forward the encryption request to the faster, &quot;internal&quot; &lt;code&gt;__xts-aes-aesni&lt;/code&gt; implementation (and we can use it here, because now we are part of the Crypto API)&lt;/li&gt;
&lt;li&gt;otherwise, we just forward the encryption request to the slower, generic C-based &lt;code&gt;xts(ecb(aes-generic))&lt;/code&gt; implementation&lt;/li&gt;
&lt;/ul&gt;&lt;h4 id=&quot;usingthewholelot&quot;&gt;Using the whole lot&lt;/h4&gt;
&lt;p&gt;Let's walk through the process of using it all together. The first step is to &lt;a href=&quot;https://github.com/cloudflare/linux/blob/master/patches/&quot;&gt;grab the patches&lt;/a&gt; and recompile the kernel (or just compile &lt;code&gt;dm-crypt&lt;/code&gt; and our &lt;code&gt;xtsproxy&lt;/code&gt; modules).&lt;/p&gt;
&lt;p&gt;Next, let's restart our IO workload in a separate terminal, so we can make sure we can reconfigure the kernel at runtime under load:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo fio --filename=/dev/mapper/encrypted-ram0 --readwrite=readwrite --bs=4k --direct=1 --loops=1000000 --name=crypt
crypt: (g=0): rw=rw, bs=4K-4K/4K-4K/4K-4K, ioengine=psync, iodepth=1
fio-2.16
Starting 1 process
...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;In the main terminal make sure our new Crypto API module is loaded and available:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo modprobe xtsproxy
$ grep -A 11 'xtsproxy' /proc/crypto
driver       : xts-aes-xtsproxy
module       : xtsproxy
priority     : 0
refcnt       : 0
selftest     : passed
internal     : no
type         : skcipher
async        : no
blocksize    : 16
min keysize  : 32
max keysize  : 64
ivsize       : 16
chunksize    : 16
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Reconfigure the encrypted disk to use our newly loaded module and enable our patched &lt;code&gt;dm-crypt&lt;/code&gt; flag (we have to use low-level &lt;code&gt;dmsetup&lt;/code&gt; tool and &lt;code&gt;cryptsetup&lt;/code&gt; obviously is not aware of our modifications):&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo dmsetup table encrypted-ram0 --showkeys | sed 's/aes-xts-plain64/capi:xts-aes-xtsproxy-plain64/' | sed 's/$/ 1 force_inline/' | sudo dmsetup reload encrypted-ram0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We just &quot;loaded&quot; the new configuration, but for it to take effect, we need to suspend/resume the encrypted device:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot;&gt;$ sudo dmsetup suspend encrypted-ram0 &amp;amp;&amp;amp; sudo dmsetup resume encrypted-ram0
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And now observe the result. We may go back to the other terminal running the &lt;code&gt;fio&lt;/code&gt; job and look at the output, but to make things nicer, here's a snapshot of the observed read/write throughput in &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/read-throughput-annotated.png&quot; alt=&quot;read-throughput-annotated&quot;/&gt;&lt;br/&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/write-throughput-annotated.png&quot; alt=&quot;write-throughput-annotated&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Wow, we have more than doubled the throughput! With the total throughput of &lt;code&gt;~640 MB/s&lt;/code&gt; we're now much closer to the expected &lt;code&gt;~696 MB/s&lt;/code&gt; from above. What about the IO latency? (The &lt;code&gt;await&lt;/code&gt; statistic from the &lt;a href=&quot;http://man7.org/linux/man-pages/man1/iostat.1.html&quot;&gt;iostat reporting tool&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/await-annotated.png&quot; alt=&quot;await-annotated&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The latency has been cut in half as well!&lt;/p&gt;
&lt;h4 id=&quot;toproduction&quot;&gt;To production&lt;/h4&gt;
&lt;p&gt;So far we have been using a synthetic setup with some parts of the full production stack missing, like file systems, real hardware and most importantly, production workload. To ensure we’re not optimising imaginary things, here is a snapshot of the production impact these changes bring to the caching part of our stack:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/prod.png&quot; alt=&quot;prod&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This graph represents a three-way comparison of the worst-case response times (99th percentile) for a &lt;a href=&quot;https://blog.cloudflare.com/how-we-scaled-nginx-and-saved-the-world-54-years-every-day/&quot;&gt;cache hit in one of our servers&lt;/a&gt;. The green line is from a server with unencrypted disks, which we will use as baseline. The red line is from a server with encrypted disks with the default Linux disk encryption implementation and the blue line is from a server with encrypted disks and our optimisations enabled. As we can see the default Linux disk encryption implementation has a significant impact on our cache latency in worst case scenarios, whereas the patched implementation is indistinguishable from not using encryption at all. In other words the improved encryption implementation does not have any impact at all on our cache response speed, so we basically get it for free! That’s a win!&lt;/p&gt;
&lt;h3 id=&quot;werejustgettingstarted&quot;&gt;We're just getting started&lt;/h3&gt;
&lt;p&gt;This post shows how an architecture review can double the performance of a system. Also we &lt;a href=&quot;https://blog.cloudflare.com/how-expensive-is-crypto-anyway/&quot;&gt;reconfirmed that modern cryptography is not expensive&lt;/a&gt; and there is usually no excuse not to protect your data.&lt;/p&gt;
&lt;p&gt;We are going to submit this work for inclusion in the main kernel source tree, but most likely not in its current form. Although the results look encouraging we have to remember that Linux is a highly portable operating system: it runs on powerful servers as well as small resource constrained IoT devices and on &lt;a href=&quot;https://blog.cloudflare.com/arm-takes-wing/&quot;&gt;many other CPU architectures&lt;/a&gt; as well. The current version of the patches just optimises disk encryption for a particular workload on a particular architecture, but Linux needs a solution which runs smoothly everywhere.&lt;/p&gt;
&lt;p&gt;That said, if you think your case is similar and you want to take advantage of the performance improvements now, you may &lt;a href=&quot;https://github.com/cloudflare/linux/blob/master/patches/&quot;&gt;grab the patches&lt;/a&gt; and hopefully provide feedback. The runtime flag makes it easy to toggle the functionality on the fly and a simple A/B test may be performed to see if it benefits any particular case or setup. These patches have been running across our &lt;a href=&quot;https://www.cloudflare.com/network/&quot;&gt;wide network of more than 200 data centres&lt;/a&gt; on five generations of hardware, so can be reasonably considered stable. Enjoy both performance and security from Cloudflare for all!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/perf-sec.png&quot; alt=&quot;perf-sec&quot;/&gt;&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 12:01:36 +0000</pubDate>
<dc:creator>jgrahamc</dc:creator>
<og:type>article</og:type>
<og:title>Speeding up Linux disk encryption</og:title>
<og:description>Encrypting data at rest is vital for Cloudflare with more than 200 data centres across the world. In this post, we will investigate the performance of disk encryption on Linux and explain how we made it at least two times faster for ourselves and our customers!</og:description>
<og:url>https://blog.cloudflare.com/speeding-up-linux-disk-encryption/</og:url>
<og:image>https://blog-cloudflare-com-assets.storage.googleapis.com/2020/03/dm-crypt-1.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.cloudflare.com/speeding-up-linux-disk-encryption/</dc:identifier>
</item>
<item>
<title>WebKit will delete all local storage after 7 days</title>
<link>https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/</link>
<guid isPermaLink="true" >https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&lt;title&gt;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care – Aral Balkan&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/browser.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/terminal.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/style.css&quot; type=&quot;text/css&quot;/&gt;&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; href=&quot;https://ar.al/index.xml&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Apple will delete your data if you don’t use an app for seven days. This effectively kills offline web apps.&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg&quot;/&gt;&lt;meta property=&quot;article:published_time&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta property=&quot;article:modified_time&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;Aral Balkan&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Apple will delete your data if you don’t use an app for seven days. This effectively kills offline web apps.&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg&quot;/&gt;&lt;meta property=&quot;article:published_time&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta property=&quot;article:modified_time&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;Aral Balkan&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;/&gt;&lt;meta name=&quot;twitter:image&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Apple will delete your data if you don’t use an app for seven days. This effectively kills offline web apps.&quot;/&gt;&lt;meta itemprop=&quot;name&quot; content=&quot;Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care&quot;/&gt;&lt;meta itemprop=&quot;description&quot; content=&quot;Apple will delete your data if you don’t use an app for seven days. This effectively kills offline web apps.&quot;/&gt;&lt;meta itemprop=&quot;datePublished&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta itemprop=&quot;dateModified&quot; content=&quot;2020-03-25T10:28:06+00:00&quot;/&gt;&lt;meta itemprop=&quot;wordCount&quot; content=&quot;698&quot;/&gt;&lt;meta itemprop=&quot;image&quot; content=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg&quot;/&gt;&lt;meta itemprop=&quot;keywords&quot; content=&quot;apple,privacy,offline-first,offline web apps,&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;84.509526867908&quot;&gt;
&lt;header&gt;
&lt;a href=&quot;mailto:mail@ar.al&quot;&gt;&lt;img class=&quot;email&quot; src=&quot;https://ar.al/icons/email.svg&quot; alt=&quot;Email Aral&quot; title=&quot;Email me&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://mastodon.ar.al/@aral&quot; rel=&quot;me&quot;&gt;&lt;img class=&quot;mastodon&quot; src=&quot;https://ar.al/icons/mastodon.svg&quot; alt=&quot;Mastodon icon&quot; title=&quot;Follow me on Mastodon&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://ar.al/index.xml&quot; rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot;/&gt;&lt;/header&gt;&lt;nav&gt;&lt;a href=&quot;https://ar.al/&quot;&gt;Home&lt;/a&gt;&lt;/nav&gt;
&lt;p&gt;&lt;time class=&quot;single&quot; datetime=&quot;2020-03-25T10:28:06Z&quot;&gt;25 Mar 2020&lt;/time&gt;&lt;img src=&quot;https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg&quot; alt=&quot;A wood carving, colourised with a blue tint, of a woman throwing the baby out with the bathwater&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Apple just threw the baby out with the bathwater by killing offline web apps (purportedly to protect your privacy).&lt;/p&gt;
&lt;h2 id=&quot;blocking-third-party-cookies-good-killing-offline-web-apps-bad&quot;&gt;Blocking third-party cookies, good. Killing offline web apps, bad.&lt;/h2&gt;
&lt;p&gt;On the face of it, WebKit’s announcement yesterday titled &lt;a href=&quot;https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/&quot;&gt;Full Third-Party Cookie Blocking and More&lt;/a&gt; sounds like something I would wholeheartedly welcome. Unfortunately, I can’t because the “and more” bit effectively kills off Offline Web Apps and, with it, the chance to have privacy-respecting apps like &lt;a href=&quot;https://ar.al/2019/02/01/hypha-spike-multiwriter-2/&quot;&gt;the prototype I was exploring earlier in the year&lt;/a&gt; based on &lt;a href=&quot;https://datproject.org&quot;&gt;DAT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Block all third-party cookies, yes, by all means&lt;sup id=&quot;fnref:1&quot;/&gt;. But deleting all local storage (including Indexed DB, etc.) after 7 days effectively blocks any future decentralised apps using the browser (client side) as a trusted replication node in a peer-to-peer network. And that’s a huge blow to the future of privacy.&lt;/p&gt;
&lt;h2 id=&quot;but-apple-cares-about-your-privacy&quot;&gt;But Apple cares about your privacy…&lt;/h2&gt;
&lt;p&gt;Do they, though?&lt;/p&gt;
&lt;p&gt;If they care about your privacy, why is the Apple News app a sewer of surveillance capitalism? If they did care about your privacy, here’s what they’d do:&lt;/p&gt;
&lt;ol readability=&quot;-0.96385542168675&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Implement all of the privacy protections they have in Safari in the Apple News app also.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.92207792207792&quot;&gt;
&lt;p&gt;Allow content blockers like &lt;a href=&quot;https://better.fyi&quot;&gt;Better&lt;/a&gt; to protect your privacy in Apple News app.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Heck, they could even go further and ban apps from corporations like Facebook, Inc., and Alphabet, Inc., that have violating your privacy as the core tenet of their business model.&lt;/p&gt;
&lt;p&gt;Instead, what do they do? They kill offline web apps.&lt;/p&gt;
&lt;p&gt;You’d almost think they had an App Store to promote or something.&lt;/p&gt;
&lt;h2 id=&quot;a-reevaluation&quot;&gt;A reevaluation&lt;/h2&gt;
&lt;p&gt;In a blog post I wrote at the start of 2015 titled &lt;a href=&quot;https://ar.al/notes/apple-vs-google-on-privacy-a-tale-of-absolute-competitive-advantage/&quot;&gt;Apple vs Google on privacy: a tale of absolute competitive advantage&lt;/a&gt;, I said:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;So riddle me this: if you have an absolute competitive advantage – if you have something that you can do that your competitors cannot – would you throw it away?&lt;/p&gt;
&lt;p&gt;Only if you’re an idiot.&lt;/p&gt;
&lt;p&gt;And something tells me Tim Cook isn’t an idiot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sadly, I was wrong.&lt;/p&gt;
&lt;h2 id=&quot;update-25-march-9pm&quot;&gt;Update (25 March, 9PM)&lt;/h2&gt;
&lt;p&gt;Looks like Apple &lt;a href=&quot;https://web.archive.org/web/20200325201951/https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/&quot;&gt;updated their post&lt;/a&gt; (thanks for the heads up, &lt;a href=&quot;https://fedi.xerz.one/objects/53242cad-e0eb-4aa4-8459-af5ab9a57884&quot;&gt;Xerz!&lt;/a&gt;) to add the following:&lt;/p&gt;
&lt;blockquote readability=&quot;16&quot;&gt;
&lt;p&gt;A Note On Web Applications Added to the Home Screen&lt;/p&gt;
&lt;p&gt;As mentioned, the seven-day cap on script-writable storage is gated on “after seven days of Safari use without user interaction on the site.” That is the case in Safari. Web applications added to the home screen are not part of Safari and thus have their own counter of days of use. Their days of use will match actual use of the web application which resets the timer. We do not expect the first-party in such a web application to have its website data deleted.&lt;/p&gt;
&lt;p&gt;If your web application does experience website data deletion, please let us know since we would consider it a serious bug. It is not the intention of Intelligent Tracking Prevention to delete website data for first parties in web applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now I’m confused and have questions:&lt;/p&gt;
&lt;p&gt;Take Jim Pick’s excellent &lt;a href=&quot;https://blog.datproject.org/2018/05/14/dat-shopping-list/&quot;&gt;Collaborative Shopping List Built On Dat&lt;/a&gt;…&lt;/p&gt;
&lt;ol readability=&quot;1&quot;&gt;&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;If I use the app in Safari on iOS without adding it to Home Screen and leave it for seven days, will my shopping list be deleted?&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;1&quot;&gt;
&lt;p&gt;If I do the same thing on Safari for macOS (which doesn’t have a Home Screen), will my shopping list be deleted?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I really hope this was just a badly-thought out decision (this is your out guys, take it) and that it will be reversed entirely.&lt;/p&gt;
&lt;p&gt;Andre Garzia has also written on the subject in a post titled &lt;a href=&quot;https://andregarzia.com/2020/03/private-client-side-only-pwas-are-hard-but-now-apple-made-them-impossible.html&quot;&gt;Private client-side-only PWAs are hard, but now Apple made them impossible&lt;/a&gt;. Go read that one too.&lt;/p&gt;

&lt;footer readability=&quot;3.2387862796834&quot;&gt;&lt;section id=&quot;about-the-author&quot; readability=&quot;4.5272925764192&quot;&gt;&lt;img src=&quot;https://ar.al/images/aral-432.jpg&quot; alt=&quot;Aral Balkan&quot;/&gt;
&lt;/section&gt;&lt;p&gt;© 2001- Aral Balkan. &lt;a href=&quot;https://source.ind.ie/ar.al&quot;&gt;View source.&lt;/a&gt; Unless otherwise stated, all source code is licensed under &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.en.html&quot;&gt;GNU AGPL version 3.0&lt;/a&gt; or later and all other post content is licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)&lt;/a&gt;. Built with Hugo and running on &lt;a href=&quot;https://sitejs.org&quot;&gt;Site.js&lt;/a&gt;.&lt;/p&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Wed, 25 Mar 2020 11:16:28 +0000</pubDate>
<dc:creator>jlelse</dc:creator>
<og:title>Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care</og:title>
<og:description>Apple will delete your data if you don’t use an app for seven days. This effectively kills offline web apps.</og:description>
<og:type>article</og:type>
<og:url>https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/</og:url>
<og:image>https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/baby-bathwater-wide.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/</dc:identifier>
</item>
<item>
<title>Proposed bounty for adding virtual camera / microphone support natively to OBS</title>
<link>https://github.com/obsproject/obs-studio/issues/2568</link>
<guid isPermaLink="true" >https://github.com/obsproject/obs-studio/issues/2568</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-5Bs4ERl99/u2AUfpOZF2F0cdfNby7+Vd9teUshXUBPo5CjwECR7IAEf+weI/eCk5tF7K1h3O8hd8k0+P/HePeg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-e41b3811197df7fbb60147e939917617.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-iXrV/b4ypc1nr10b3Giikqff+qAx5osQ0yJRxHRDd8mKFefdMtEZ0Sxs1QysJxuJBayOKThjsuMjynwBJQq0aw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-897ad5fdbe32a5cd67af5d1bdc68a292.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-whJUL2x2LCRTRARm7cOI7JLt7r+fON3F+LANQKvZarg3YuJttlZQnErXU2uAq06K5Io1Bcv6eWF64jH1L8Lbrg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-c212542f6c762c2453440466edc388ec.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;[Bounty] Implement virtual camera cross platform · Issue #2568 · obsproject/obs-studio · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;This may be against the community guidelines, if so I apologize. Everyone is working from home. I know a lot of people who need OBS now but to broadcast into video conferencing software like zoom/meet/teams. I personally use obs-virtual-...&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://repository-images.githubusercontent.com/13233158/2e2fae80-da26-11e9-8da2-e1e0b931a235&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;[Bounty] Implement virtual camera cross platform · Issue #2568 · obsproject/obs-studio&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;This may be against the community guidelines, if so I apologize. Everyone is working from home. I know a lot of people who need OBS now but to broadcast into video conferencing software like zoom/m...&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://repository-images.githubusercontent.com/13233158/2e2fae80-da26-11e9-8da2-e1e0b931a235&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;[Bounty] Implement virtual camera cross platform · Issue #2568 · obsproject/obs-studio&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/obsproject/obs-studio/issues/2568&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;This may be against the community guidelines, if so I apologize. Everyone is working from home. I know a lot of people who need OBS now but to broadcast into video conferencing software like zoom/m...&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;8C55:551C:BCD34F:118F76F:5E7BFEE9&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;c2e8fa3d1d4b9f10bbe213f214db082ea4617cd2&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiOEM1NTo1NTFDOkJDRDM0RjoxMThGNzZGOjVFN0JGRUU5IiwidmlzaXRvcl9pZCI6Ijc5NDQ2NTk4Mzc5OTIzMDE4NSIsInJlZ2lvbl9lZGdlIjoiaWFkIiwicmVnaW9uX3JlbmRlciI6ImlhZCJ9&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;d895953aec9ef38907898fe47682fb5a86626ebec202d070f110f7511c186fa2&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;issue:587399106&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository,issues&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_issues&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-ga_id&quot; content=&quot;&quot; class=&quot;js-octo-ga-id&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/issues/show&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS,RELATED_ISSUES&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;9d2e5c50e62b8f4ec909afc553a52bf5&quot;/&gt;&lt;link href=&quot;https://github.com/obsproject/obs-studio/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to obs-studio:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/obsproject/obs-studio git https://github.com/obsproject/obs-studio.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;7725691&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;obsproject&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;13233158&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;obsproject/obs-studio&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;13233158&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;obsproject/obs-studio&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://github.githubassets.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;6&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;7&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;8&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;39.523219814241&quot;&gt;



&lt;div class=&quot;application-main&quot; data-commit-hovercards-enabled=&quot;&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;

&lt;div class=&quot;container-lg clearfix new-discussion-timeline p-responsive&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;
&lt;div class=&quot;js-check-all-container&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt-bg rounded-1 js-signup-prompt&quot; data-prompt=&quot;signup&quot; hidden=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt p-4 text-center mb-4 rounded-1&quot; readability=&quot;31.129518072289&quot;&gt;
&lt;div class=&quot;position-relative&quot; readability=&quot;9.578313253012&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;position-absolute top-0 right-0 btn-link link-gray js-signup-prompt-button&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Dismiss, text:dismiss&quot;&gt;Dismiss&lt;/button&gt;
&lt;h3 class=&quot;pt-2&quot;&gt;Join GitHub today&lt;/h3&gt;
&lt;p class=&quot;col-6 mx-auto&quot;&gt;GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.&lt;/p&gt;
&lt;a class=&quot;btn btn-primary&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Sign up, text:sign-up&quot; data-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;authentication.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;location_in_page&amp;quot;:&amp;quot;files signup prompt&amp;quot;,&amp;quot;repository_id&amp;quot;:null,&amp;quot;auth_type&amp;quot;:&amp;quot;SIGN_UP&amp;quot;,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/obsproject/obs-studio/issues/2568&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-hydro-click-hmac=&quot;57497847b73c0e8ca2d8dc840e658fa565a994f21b33b6a4f1ad22024757a4d4&quot; href=&quot;https://github.com/join?source=prompt-issue-show&amp;amp;source_repo=obsproject%2Fobs-studio&quot;&gt;Sign up&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/obsproject/obs-studio/issues/2568&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/obsproject/obs-studio/issues/2568&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;

&lt;/body&gt;</description>
<pubDate>Wed, 25 Mar 2020 04:51:37 +0000</pubDate>
<dc:creator>prodigyboi</dc:creator>
<og:image>https://repository-images.githubusercontent.com/13233158/2e2fae80-da26-11e9-8da2-e1e0b931a235</og:image>
<og:type>object</og:type>
<og:title>[Bounty] Implement virtual camera cross platform · Issue #2568 · obsproject/obs-studio</og:title>
<og:url>https://github.com/obsproject/obs-studio/issues/2568</og:url>
<og:description>This may be against the community guidelines, if so I apologize. Everyone is working from home. I know a lot of people who need OBS now but to broadcast into video conferencing software like zoom/m...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/obsproject/obs-studio/issues/2568</dc:identifier>
</item>
<item>
<title>CoreJS: State of the project? Looks like dead. Any official fork?</title>
<link>https://github.com/zloirock/core-js/issues/767</link>
<guid isPermaLink="true" >https://github.com/zloirock/core-js/issues/767</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-5Bs4ERl99/u2AUfpOZF2F0cdfNby7+Vd9teUshXUBPo5CjwECR7IAEf+weI/eCk5tF7K1h3O8hd8k0+P/HePeg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-e41b3811197df7fbb60147e939917617.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-iXrV/b4ypc1nr10b3Giikqff+qAx5osQ0yJRxHRDd8mKFefdMtEZ0Sxs1QysJxuJBayOKThjsuMjynwBJQq0aw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-897ad5fdbe32a5cd67af5d1bdc68a292.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-whJUL2x2LCRTRARm7cOI7JLt7r+fON3F+LANQKvZarg3YuJttlZQnErXU2uAq06K5Io1Bcv6eWF64jH1L8Lbrg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-c212542f6c762c2453440466edc388ec.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;State and governance of the project? · Issue #767 · zloirock/core-js · GitHub&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;Edit: Ok the project still is alive, some other contributors like @slowcheetah have permissions for the project to keep going, see #767 (comment) 👍 Looks like @zloirock the author and main maintainer of the project will be will be unavai...&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://avatars0.githubusercontent.com/u/2213682?s=400&amp;amp;v=4&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;State and governance of the project? · Issue #767 · zloirock/core-js&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Edit: Ok the project still is alive, some other contributors like @slowcheetah have permissions for the project to keep going, see #767 (comment) 👍 Looks like @zloirock the author and main maintain...&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars0.githubusercontent.com/u/2213682?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;State and governance of the project? · Issue #767 · zloirock/core-js&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/zloirock/core-js/issues/767&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Edit: Ok the project still is alive, some other contributors like @slowcheetah have permissions for the project to keep going, see #767 (comment) 👍 Looks like @zloirock the author and main maintain...&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;8C51:1A1F:3538DF:5E9879:5E7BFEE9&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;ef13c1ac5f5d5d2db5659a03b6e8de088b96eece&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiOEM1MToxQTFGOjM1MzhERjo1RTk4Nzk6NUU3QkZFRTkiLCJ2aXNpdG9yX2lkIjoiMTg2NTM4MDg5MDM4OTc3NDA1NyIsInJlZ2lvbl9lZGdlIjoiaWFkIiwicmVnaW9uX3JlbmRlciI6ImlhZCJ9&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;6505dac30522e052d9fdb659ddccdbf7a5bba27be7b6366bb704765fc5c2c474&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;issue:564298630&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository,issues&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_issues&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-ga_id&quot; content=&quot;&quot; class=&quot;js-octo-ga-id&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;/issues/show&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;google-analytics&quot; content=&quot;UA-3769691-2&quot;/&gt;&lt;meta class=&quot;js-ga-set&quot; name=&quot;dimension1&quot; content=&quot;Logged Out&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS,RELATED_ISSUES&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;9d2e5c50e62b8f4ec909afc553a52bf5&quot;/&gt;&lt;link href=&quot;https://github.com/zloirock/core-js/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to core-js:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/zloirock/core-js git https://github.com/zloirock/core-js.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;2213682&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;zloirock&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;11481338&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;zloirock/core-js&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;11481338&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;zloirock/core-js&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/x-icon&quot; class=&quot;js-site-favicon&quot; href=&quot;https://github.githubassets.com/favicon.ico&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;2&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;4&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;6&quot;/&gt;&lt;meta itemprop=&quot;position&quot; content=&quot;8&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;34.701472556894&quot;&gt;



&lt;div class=&quot;application-main&quot; data-commit-hovercards-enabled=&quot;&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;

&lt;div class=&quot;container-lg clearfix new-discussion-timeline p-responsive&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;
&lt;div class=&quot;js-check-all-container&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt-bg rounded-1 js-signup-prompt&quot; data-prompt=&quot;signup&quot; hidden=&quot;&quot;&gt;
&lt;div class=&quot;signup-prompt p-4 text-center mb-4 rounded-1&quot; readability=&quot;31.129518072289&quot;&gt;
&lt;div class=&quot;position-relative&quot; readability=&quot;9.578313253012&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;position-absolute top-0 right-0 btn-link link-gray js-signup-prompt-button&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Dismiss, text:dismiss&quot;&gt;Dismiss&lt;/button&gt;
&lt;h3 class=&quot;pt-2&quot;&gt;Join GitHub today&lt;/h3&gt;
&lt;p class=&quot;col-6 mx-auto&quot;&gt;GitHub is home to over 40 million developers working together to host and review code, manage projects, and build software together.&lt;/p&gt;
&lt;a class=&quot;btn btn-primary&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Sign up, text:sign-up&quot; data-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;authentication.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;location_in_page&amp;quot;:&amp;quot;files signup prompt&amp;quot;,&amp;quot;repository_id&amp;quot;:null,&amp;quot;auth_type&amp;quot;:&amp;quot;SIGN_UP&amp;quot;,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/zloirock/core-js/issues/767&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-hydro-click-hmac=&quot;80db8650a9ce6399971b354935793faa1a7479bd5f68ae3648f3d018e90cebcf&quot; href=&quot;https://github.com/join?source=prompt-issue-show&amp;amp;source_repo=zloirock%2Fcore-js&quot;&gt;Sign up&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;show_issue&quot; class=&quot;js-issues-results js-socket-channel js-updatable-content&quot; data-channel=&quot;issue:564298630:timeline&quot;&gt;

&lt;h2 class=&quot;sr-only&quot;&gt;Comments&lt;/h2&gt;
&lt;div id=&quot;discussion_bucket&quot;&gt;
&lt;div class=&quot;gutter-condensed gutter-lg d-flex flex-column flex-md-row&quot;&gt;
&lt;div class=&quot;flex-shrink-0 col-12 col-md-9 mb-5 mb-md-0&quot;&gt;
&lt;div class=&quot;js-quote-selection-container&quot; data-quote-markdown=&quot;.js-comment-body&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot; data-team-hovercards-enabled=&quot;&quot;&gt;
&lt;div class=&quot;js-discussion js-socket-channel ml-0 pl-0 ml-md-6 pl-md-3&quot; data-channel=&quot;marked-as-read:issue:564298630&quot;&gt;







&lt;div class=&quot;js-timeline-item js-timeline-progressive-focus-container&quot; data-gid=&quot;MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzEyOTE1OTI4Nw==&quot;&gt;
&lt;div class=&quot;TimelineItem&quot; data-team-hovercards-enabled=&quot;&quot; id=&quot;event-3129159287&quot;&gt;

&lt;div class=&quot;TimelineItem-body&quot;&gt;&lt;a class=&quot;d-inline-block&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;&lt;img class=&quot;avatar&quot; height=&quot;20&quot; width=&quot;20&quot; alt=&quot;@yvele&quot; src=&quot;https://avatars3.githubusercontent.com/u/4225430?s=60&amp;amp;u=2ed4953102576361376aebdf3c528d58281b862d&amp;amp;v=4&quot;/&gt;&lt;/a&gt; &lt;a class=&quot;author link-gray-dark text-bold&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;yvele&lt;/a&gt; changed the title &lt;del class=&quot;text-bold&quot;&gt;Is this project going to be unmaintained for a while?&lt;/del&gt; &lt;ins class=&quot;text-bold no-underline&quot;&gt;State of the project? Looks like dead, any official fork?&lt;/ins&gt; &lt;a href=&quot;https://github.com/zloirock/core-js/issues/767#event-3129159287&quot; class=&quot;link-gray&quot;&gt;Mar 14, 2020&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;TimelineItem&quot; data-team-hovercards-enabled=&quot;&quot; id=&quot;event-3129159611&quot;&gt;

&lt;div class=&quot;TimelineItem-body&quot;&gt;&lt;a class=&quot;d-inline-block&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;&lt;img class=&quot;avatar&quot; height=&quot;20&quot; width=&quot;20&quot; alt=&quot;@yvele&quot; src=&quot;https://avatars3.githubusercontent.com/u/4225430?s=60&amp;amp;u=2ed4953102576361376aebdf3c528d58281b862d&amp;amp;v=4&quot;/&gt;&lt;/a&gt; &lt;a class=&quot;author link-gray-dark text-bold&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;yvele&lt;/a&gt; changed the title &lt;del class=&quot;text-bold&quot;&gt;State of the project? Looks like dead, any official fork?&lt;/del&gt; &lt;ins class=&quot;text-bold no-underline&quot;&gt;State of the project? Looks like dead. Any official fork?&lt;/ins&gt; &lt;a href=&quot;https://github.com/zloirock/core-js/issues/767#event-3129159611&quot; class=&quot;link-gray&quot;&gt;Mar 14, 2020&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;
























&lt;div class=&quot;js-timeline-item js-timeline-progressive-focus-container&quot; data-gid=&quot;MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzE2NDIzNDI5Ng==&quot;&gt;
&lt;div class=&quot;TimelineItem&quot; data-team-hovercards-enabled=&quot;&quot; id=&quot;event-3164234296&quot;&gt;

&lt;div class=&quot;TimelineItem-body&quot;&gt;&lt;a class=&quot;d-inline-block&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;&lt;img class=&quot;avatar&quot; height=&quot;20&quot; width=&quot;20&quot; alt=&quot;@yvele&quot; src=&quot;https://avatars3.githubusercontent.com/u/4225430?s=60&amp;amp;u=2ed4953102576361376aebdf3c528d58281b862d&amp;amp;v=4&quot;/&gt;&lt;/a&gt; &lt;a class=&quot;author link-gray-dark text-bold&quot; data-hovercard-type=&quot;user&quot; data-hovercard-url=&quot;/users/yvele/hovercard&quot; data-octo-click=&quot;hovercard-link-click&quot; data-octo-dimensions=&quot;link_type:self&quot; href=&quot;https://github.com/yvele&quot;&gt;yvele&lt;/a&gt; changed the title &lt;del class=&quot;text-bold&quot;&gt;State of the project? Looks like dead. Any official fork?&lt;/del&gt; &lt;ins class=&quot;text-bold no-underline&quot;&gt;State and governance of the project?&lt;/ins&gt; &lt;a href=&quot;https://github.com/zloirock/core-js/issues/767#event-3164234296&quot; class=&quot;link-gray&quot;&gt;Mar 25, 2020&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;js-timeline-item js-timeline-progressive-focus-container&quot; data-gid=&quot;MDIwOkNyb3NzUmVmZXJlbmNlZEV2ZW50MTAyNzM1NTg5Mw==&quot;&gt;
&lt;div class=&quot;TimelineItem&quot;&gt;

&lt;div class=&quot;TimelineItem-body&quot;&gt;


&lt;p&gt;&lt;span class=&quot;task-progress-counts&quot;&gt;0 of 1 task complete&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can’t perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/zloirock/core-js/issues/767&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/zloirock/core-js/issues/767&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;

&lt;/body&gt;</description>
<pubDate>Wed, 25 Mar 2020 04:08:11 +0000</pubDate>
<dc:creator>SenHeng</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/2213682?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>State and governance of the project? · Issue #767 · zloirock/core-js</og:title>
<og:url>https://github.com/zloirock/core-js/issues/767</og:url>
<og:description>Edit: Ok the project still is alive, some other contributors like @slowcheetah have permissions for the project to keep going, see #767 (comment) 👍 Looks like @zloirock the author and main maintain...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/zloirock/core-js/issues/767</dc:identifier>
</item>
<item>
<title>Show HN: MVP.css – Minimalist stylesheet for HTML elements</title>
<link>https://github.com/andybrewer/mvp</link>
<guid isPermaLink="true" >https://github.com/andybrewer/mvp</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://github.com/andybrewer/mvp&quot;&gt;https://github.com/andybrewer/mvp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22681270&quot;&gt;https://news.ycombinator.com/item?id=22681270&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 432&lt;/p&gt;
&lt;p&gt;# Comments: 87&lt;/p&gt;
</description>
<pubDate>Wed, 25 Mar 2020 01:54:10 +0000</pubDate>
<dc:creator>awb</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/7093?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>andybrewer/mvp</og:title>
<og:url>https://github.com/andybrewer/mvp</og:url>
<og:description>MVP.css — Minimalist stylesheet for HTML elements. Contribute to andybrewer/mvp development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/andybrewer/mvp</dc:identifier>
</item>
</channel>
</rss>