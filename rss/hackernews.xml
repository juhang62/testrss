<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>A short list of common mistakes in PostgreSQL</title>
<link>https://wiki.postgresql.org/wiki/Don%27t_Do_This</link>
<guid isPermaLink="true" >https://wiki.postgresql.org/wiki/Don%27t_Do_This</guid>
<description>&lt;p&gt;A short list of common mistakes.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_SQL_ASCII&quot;&gt;Don't use SQL_ASCII&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;While the name suggests that this encoding is in some meaningful way related to ASCII, it is not. Instead, it simply forbids the use of NUL bytes.&lt;/p&gt;
&lt;p&gt;More importantly, &lt;code&gt;SQL_ASCII&lt;/code&gt; means &quot;no conversions&quot; for the purpose of all encoding conversion functions. That is to say, the original bytes are simply treated as being in the new encoding, subject to validity checks, without any regard for what they mean. Unless extreme care is taken, an &lt;code&gt;SQL_ASCII&lt;/code&gt; database will usually end up storing a mixture of many different encodings with no way to recover the original characters reliably.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If your input data is already in a hopeless mixture of unlabelled encodings, such as IRC channel logs or non-MIME-compliant emails, then SQL_ASCII might be useful as a last resort—but consider using &lt;code&gt;bytea&lt;/code&gt; first instead, or whether you could autodetect UTF8 and assume non-UTF8 data is in some specific encoding such as WIN1252.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_psql_-W_or_--password&quot;&gt;Don't use psql -W or --password&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use &lt;tt&gt;psql -W&lt;/tt&gt; or &lt;tt&gt;psql --password&lt;/tt&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_2&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Using the --password or -W flags will tell &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/static/reference-client.html&quot;&gt;psql&lt;/a&gt; to prompt you for a password, before trying to connect to the server - so you'll be prompted for a password even if the server doesn't require one.&lt;/p&gt;
&lt;p&gt;It's never required, as if the server does require a password psql will prompt you for one, and it can be very confusing when setting up permissions. If you're connecting with -W to a server configured to allow you access via &lt;tt&gt;peer&lt;/tt&gt; authentication you may think that it's requiring a password when it really isn't. And if the user you're logging in as doesn't have a password set or you enter the wrong password at the prompt you'll still be logged in and think you have the right password - but you won't be able to log in from other clients (that connect via localhost) or when logged in as other users.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_2&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never, pretty much. It will save a round trip to the server but that's about it.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_rules&quot;&gt;Don't use rules&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/static/sql-createrule.html&quot;&gt;rules&lt;/a&gt;. If you think you want to, use a &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/static/plpgsql-trigger.html&quot;&gt;trigger&lt;/a&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_3&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Rules are incredibly powerful, but they don't do what they look like they do. They look like they're some conditional logic, but they actually rewrite a query to modify it or add additional queries to it.&lt;/p&gt;
&lt;p&gt;That means that &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://blog.rhodiumtoad.org.uk/2010/06/21/the-rule-challenge/&quot;&gt;all non-trivial rules are incorrect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depesz has &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.depesz.com/2010/06/15/to-rule-or-not-to-rule-that-is-the-question/&quot;&gt;more to say&lt;/a&gt; about them.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_3&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never. While the rewriter is an implementation detail of VIEWs, there is no reason to pry up this cover plate directly.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_table_inheritance&quot;&gt;Don't use table inheritance&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/tutorial-inheritance.html&quot;&gt;table inheritance&lt;/a&gt;. If you think you want to, use foreign keys instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_4&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Table inheritance was a part of a fad wherein the database was closely coupled to object-oriented code. It turned out that coupling things that closely didn't actually produce the desired results.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_4&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never …almost. Now that table partitioning is done natively, that common use case for table inheritance has been replaced by a native feature that handles tuple routing, etc., without bespoke code.&lt;/p&gt;
&lt;p&gt;One of the very few exceptions would be &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://github.com/arkhipov/temporal_tables&quot;&gt;temporal_tables&lt;/a&gt; extension if you are in a pinch and want to use that for row versioning in place of a lacking SQL 2011 support. Table inheritance will provide a small shortcut instead of using &lt;code&gt;UNION ALL&lt;/code&gt; to get both historical as well as current rows. Even then you ought to be wary of &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://clarkdave.net/2015/02/historical-records-with-postgresql-and-temporal-tables-and-sql-2011/#using-inheritance&quot;&gt;caveats&lt;/a&gt; while working with parent table.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_NOT_IN&quot;&gt;Don't use NOT IN&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use &lt;code&gt;NOT IN&lt;/code&gt;, or any combination of &lt;code&gt;NOT&lt;/code&gt; and &lt;code&gt;IN&lt;/code&gt; such as &lt;code&gt;NOT (x IN (select…))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(If you think you wanted &lt;code&gt;NOT IN (select …)&lt;/code&gt; then you should rewrite to use &lt;code&gt;NOT EXISTS&lt;/code&gt; instead.)&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_5&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Two reasons:&lt;/p&gt;
&lt;p&gt;1. &lt;code&gt;NOT IN&lt;/code&gt; behaves in unexpected ways if there is a null present:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select * from foo where col not in (1,null); -- always returns 0 rows&lt;/code&gt;
&lt;/pre&gt;
&lt;pre&gt;
&lt;code&gt;select * from foo where col not in (select x from bar);
  -- returns 0 rows if any value of bar.x is null&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This happens because &lt;code&gt;col IN (1,null)&lt;/code&gt; returns &lt;code&gt;TRUE&lt;/code&gt; if col=1, and &lt;code&gt;NULL&lt;/code&gt; otherwise (i.e. it can never return &lt;code&gt;FALSE&lt;/code&gt;). Since &lt;code&gt;NOT (TRUE)&lt;/code&gt; is &lt;code&gt;FALSE&lt;/code&gt;, but &lt;code&gt;NOT (NULL)&lt;/code&gt; is still &lt;code&gt;NULL&lt;/code&gt;, there is no way that &lt;code&gt;NOT (col IN (1,null))&lt;/code&gt; (which is the same thing as &lt;code&gt;col NOT IN (1,null)&lt;/code&gt;) can return &lt;code&gt;TRUE&lt;/code&gt; under any circumstances.&lt;/p&gt;
&lt;p&gt;2. Because of point 1 above, &lt;code&gt;NOT IN (SELECT ...)&lt;/code&gt; does not optimize very well. In particular, the planner can't transform it into an anti-join, and so it becomes either a hashed Subplan or a plain Subplan. The hashed subplan is fast, but the planner only allows that plan for small result sets; the plain subplan is &lt;strong&gt;horrifically&lt;/strong&gt; slow (in fact O(N²)). This means that the performance can look good in small-scale tests but then slow down by 5 or more orders of magnitude once a size threshold is crossed; you &lt;strong&gt;do not&lt;/strong&gt; want this to happen.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_5&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;NOT IN (&lt;em&gt;list,of,values,...&lt;/em&gt;)&lt;/code&gt; is mostly safe &lt;em&gt;unless&lt;/em&gt; you might have a null in the list (via a parameter or otherwise). So it's sometimes natural and even advisable to use it when excluding specific constant values from a query result.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_upper_case_table_or_column_names&quot;&gt;Don't use upper case table or column names&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use NamesLikeThis, use names_like_this.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_6&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;PostgreSQL folds all names - of tables, columns, functions and everything else - to lower case unless they're &quot;double quoted&quot;.&lt;/p&gt;
&lt;p&gt;So &lt;tt&gt;create table Foo()&lt;/tt&gt; will create a table called &lt;tt&gt;foo&lt;/tt&gt;, while &lt;tt&gt;create table &quot;Bar&quot;()&lt;/tt&gt; will create a table called &lt;tt&gt;Bar&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;These select commands will work: &lt;tt&gt;select * from Foo&lt;/tt&gt;, &lt;tt&gt;select * from foo&lt;/tt&gt;, &lt;tt&gt;select * from &quot;Bar&quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;These will fail with &quot;no such table&quot;: &lt;tt&gt;select * from &quot;Foo&quot;&lt;/tt&gt;, &lt;tt&gt;select * from Bar&lt;/tt&gt;, &lt;tt&gt;select * from bar&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;This means that if you use uppercase characters in your table or column names you have to either &lt;em&gt;always&lt;/em&gt; double quote them or &lt;em&gt;never&lt;/em&gt; double quote them. That's annoying enough by hand, but when you start using other tools to access the database, some of which always quote all names and some don't, it gets very confusing.&lt;/p&gt;
&lt;p&gt;Stick to using a-z, 0-9 and underscore for names and you never have to worry about quoting them.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_6&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If it's important that &quot;pretty&quot; names are displaying in report output then you might want to use them. But you can also use column aliases to use lower case names in a table and still get pretty names in the output of a query: &lt;tt&gt;select character_name as &quot;Character Name&quot; from foo&lt;/tt&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_BETWEEN_.28especially_with_timestamps.29&quot;&gt;Don't use BETWEEN (especially with timestamps)&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_7&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt; uses a closed-interval comparison: the values of both ends of the specified range are included in the result.&lt;/p&gt;
&lt;p&gt;This is a particular problem with queries of the form&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT * FROM blah WHERE timestampcol BETWEEN '2018-06-01' AND '2018-06-08'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This will include results where the timestamp is &lt;em&gt;exactly&lt;/em&gt; 2018-06-08 00:00:00.000000, but not timestamps later in that same day. So the query might seem to work, but as soon as you get an entry exactly on midnight, you'll end up double-counting it.&lt;/p&gt;
&lt;p&gt;Instead, do:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;SELECT * FROM blah WHERE timestampcol &amp;gt;= '2018-06-01' AND timestampcol &amp;lt; '2018-06-08'&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_7&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt; is safe for discrete quantities like integers or dates, as long as you remember that both ends of the range are included in the result. But it's a bad habit to get into.&lt;/p&gt;


&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_timestamp_.28without_time_zone.29&quot;&gt;Don't use timestamp (without time zone)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use the &lt;tt&gt;timestamp&lt;/tt&gt; type to store timestamps, use &lt;tt&gt;timestamptz&lt;/tt&gt; (also known as &lt;tt&gt;timestamp with time zone&lt;/tt&gt;) instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_8&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt&gt;timestamptz&lt;/tt&gt; records a single moment in time. Despite what the name says it doesn't store a timestamp, just a point in time described as the number of microseconds since January 1st, 2000 in UTC. You can insert values in any timezone and it'll store the point in time that value describes. By default it will display times in your current timezone, but you can use &lt;tt&gt;at time zone&lt;/tt&gt; to display it in other time zones.&lt;/p&gt;
&lt;p&gt;Because it stores a point in time it will do the right thing with arithmetic involving timestamps entered in different timezones - including between timestamps from the same location on different sides of a daylight savings time change.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;timestamp&lt;/tt&gt; (also known as &lt;tt&gt;timestamp without time zone&lt;/tt&gt;) doesn't do any of that, it just stores a date and time you give it. You can think of it being a picture of a calendar and a clock rather than a point in time. Without additional information - the timezone - you don't know what time it records. Because of that, arithmetic between timestamps from different locations or between timestamps from summer and winter may give the wrong answer.&lt;/p&gt;
&lt;p&gt;So if what you want to store is a point in time, rather than a picture of a clock, use timestamptz.&lt;/p&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://it.toolbox.com/blogs/josh-berkus/zone-of-misunderstanding-092811&quot;&gt;More about timestamptz&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_8&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If you're dealing with timestamps in an abstract way, or just saving and retrieving them from an app, where you aren't going to be doing arithmetic with them then timestamp might be suitable.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_timestamp_.28without_time_zone.29_to_store_UTC_times&quot;&gt;Don't use timestamp (without time zone) to store UTC times&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Storing UTC values in a &lt;code&gt;timestamp without time zone&lt;/code&gt; column is, unfortunately, a practice commonly inherited from other databases that lack usable timezone support.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;timestamp with time zone&lt;/code&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_9&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Because there is no way for the database to know that UTC is the intended timezone for the column values.&lt;/p&gt;
&lt;p&gt;This complicates many otherwise useful time calculations. For example, &quot;last midnight in the timezone given by u.timezone&quot; becomes this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;date_trunc('day', now() AT TIME ZONE u.timezone) AT TIME ZONE u.timezone AT TIME ZONE 'UTC'&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And &quot;the midnight prior to &lt;code&gt;x.datecol&lt;/code&gt; in u.timezone&quot; becomes this:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;date_trunc('day', x.datecol AT TIME ZONE 'UTC' AT TIME ZONE u.timezone)
  AT TIME ZONE u.timezone AT TIME ZONE 'UTC'&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_9&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If compatibility with non-timezone-supporting databases trumps all other considerations.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_timetz&quot;&gt;Don't use timetz&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use the &lt;tt&gt;timetz&lt;/tt&gt; type. You probably want &lt;tt&gt;timestamptz&lt;/tt&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_10&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Even the manual tells you it's only implemented for SQL compliance.&lt;/p&gt;
&lt;blockquote readability=&quot;13&quot;&gt;
&lt;p&gt;The type time with time zone is defined by the SQL standard, but the definition exhibits properties which lead to questionable usefulness. In most cases, a combination of date, time, timestamp without time zone, and timestamp with time zone should provide a complete range of date/time functionality required by any application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_10&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_CURRENT_TIME&quot;&gt;Don't use CURRENT_TIME&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use the &lt;code&gt;CURRENT_TIME&lt;/code&gt; function. Use whichever of these is appropriate:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt; or &lt;code&gt;now()&lt;/code&gt; if you want a &lt;code&gt;timestamp with time zone&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOCALTIMESTAMP&lt;/code&gt; if you want a &lt;code&gt;timestamp without time zone&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CURRENT_DATE&lt;/code&gt; if you want a &lt;code&gt;date&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOCALTIME&lt;/code&gt; if you want a &lt;code&gt;time&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_11&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;It returns a value of type &lt;code&gt;timetz&lt;/code&gt;, for which see the previous entry.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_11&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_timestamp.280.29_or_timestamptz.280.29&quot;&gt;Don't use timestamp(0) or timestamptz(0)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use a precision specification, especially not 0, for timestamp columns or casts to timestamp.&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;date_trunc('second', blah)&lt;/code&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_12&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Because it rounds off the fractional part rather than truncating it as everyone would expect. This can cause unexpected issues; consider that when you store &lt;code&gt;now()&lt;/code&gt; into such a column, you might be storing a value half a second in the future.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_12&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never.&lt;/p&gt;


&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_char.28n.29&quot;&gt;Don't use char(n)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use the type &lt;tt&gt;char(n)&lt;/tt&gt;. You probably want &lt;tt&gt;text&lt;/tt&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_13&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Any string you insert into a &lt;code&gt;char(n)&lt;/code&gt; field will be padded with spaces to the declared width. That's probably not what you actually want.&lt;/p&gt;
&lt;p&gt;The manual says:&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;Values of type character are physically padded with spaces to the specified width n, and are stored and displayed that way. However, trailing spaces are treated as semantically insignificant and disregarded when comparing two values of type character. In collations where whitespace is significant, this behavior can produce unexpected results; for example &lt;code&gt;SELECT 'a '::CHAR(2) collate &quot;C&quot; &amp;lt; E'a\n'::CHAR(2)&lt;/code&gt; returns true, even though C locale would consider a space to be greater than a newline. Trailing spaces are removed when converting a character value to one of the other string types. Note that trailing spaces are semantically significant in character varying and text values, and when using pattern matching, that is LIKE and regular expressions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That should scare you off it.&lt;/p&gt;
&lt;p&gt;The space-padding does waste space, but doesn't make operations on it any faster; in fact the reverse, thanks to the need to strip spaces in many contexts.&lt;/p&gt;
&lt;p&gt;It's important to note that from a storage point of view &lt;code&gt;char(n)&lt;/code&gt; &lt;strong&gt;is not a fixed-width type&lt;/strong&gt;. The actual number of bytes varies since characters may take more than one byte, and the stored values are therefore treated as variable-length anyway (even though the space padding is included in the storage).&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_13&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;When you're porting very, very old software that uses fixed width fields. Or when you read the snippet from the manual above and think &quot;yes, that makes perfect sense and is a good match for my requirements&quot; rather than gibbering and running away.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_char.28n.29_even_for_fixed-length_identifiers&quot;&gt;Don't use char(n) even for fixed-length identifiers&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes people respond to &quot;don't use &lt;code&gt;char(n)&lt;/code&gt;&quot; with &quot;but my values must always be exactly N characters long&quot; (e.g. country codes, hashes, or identifiers from some other system). &lt;strong&gt;It is still a bad idea to use &lt;code&gt;char(n)&lt;/code&gt; even in these cases.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;text&lt;/code&gt;, or a domain over text, with &lt;code&gt;CHECK(length(VALUE)=3)&lt;/code&gt; or &lt;code&gt;CHECK(VALUE ~ '^[[:alpha:]]{3}$')&lt;/code&gt; or similar.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_14&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Because &lt;code&gt;char(n)&lt;/code&gt; doesn't reject values that are too short, it just silently pads them with spaces. So there's no actual benefit over using &lt;code&gt;text&lt;/code&gt; with a constraint that checks for the exact length. As a bonus, such a check can also verify that the value is in the correct format.&lt;/p&gt;
&lt;p&gt;Remember, &lt;strong&gt;there is no performance benefit whatsoever to using &lt;code&gt;char(n)&lt;/code&gt; over &lt;code&gt;varchar(n)&lt;/code&gt;.&lt;/strong&gt; In fact the reverse is true. One particular problem that comes up is that if you try and compare a &lt;code&gt;char(n)&lt;/code&gt; field against a parameter where the driver has explicitly specified a type of &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;varchar&lt;/code&gt;, you may be unexpectedly unable to use an index for the comparison. This can be hard to debug since it doesn't show up on manual queries.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_14&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Never.&lt;/p&gt;

&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_varchar.28n.29_by_default&quot;&gt;Don't use varchar(n) by default&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Don't use the type &lt;tt&gt;varchar(n)&lt;/tt&gt; by default. Consider &lt;tt&gt;varchar&lt;/tt&gt; (without the length limit) or &lt;tt&gt;text&lt;/tt&gt; instead.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_15&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt&gt;varchar(n)&lt;/tt&gt; is a variable width text field that will throw an error if you try and insert a string longer than n characters (not bytes) into it.&lt;/p&gt;
&lt;p&gt;&lt;tt&gt;varchar&lt;/tt&gt; (without the &lt;tt&gt;(n)&lt;/tt&gt;) or &lt;tt&gt;text&lt;/tt&gt; are similar, but without the length limit. If you insert the same string into the three field types they will take up exactly the same amount of space, and you won't be able to measure any difference in performance.&lt;/p&gt;
&lt;p&gt;If what you really need is a text field with an length limit then varchar(n) is great, but if you pick an arbitrary length and choose varchar(20) for a surname field you're risking production errors in the future when Hubert Blaine Wolfe­schlegel­stein­hausen­berger­dorff signs up for your service.&lt;/p&gt;
&lt;p&gt;Some databases don't have a type that can hold arbitrary long text, or if they do it's not as convenient or efficient or well-supported as varchar(n). Users from those databases will often use something like &lt;tt&gt;varchar(255)&lt;/tt&gt; when what they really want is &lt;tt&gt;text&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If you need to constrain the value in a field you probably need something more specific than a maximum length - maybe a minimum length too, or a limited set of characters - and a &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/static/ddl-constraints.html#DDL-CONSTRAINTS-CHECK-CONSTRAINTS&quot;&gt;check constraint&lt;/a&gt; can do all of those things as well as a maximum string length.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_15&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;When you want to, really. If what you want is a text field that will throw an error if you insert too long a string into it, and you don't want to use an explicit check constraint then varchar(n) is a perfectly good type. Just don't use it automatically without thinking about it.&lt;/p&gt;


&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Don.27t_use_money&quot;&gt;Don't use money&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;tt&gt;money&lt;/tt&gt; data type isn't actually very good for storing monetary values. Numeric, or (rarely) integer may be better.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Why_not.3F_16&quot;&gt;Why not?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/message-id/flat/20130328092819.237c0106@imp#20130328092819.237c0106@imp&quot;&gt;lots of reasons.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's a fixed-point type, implemented as a machine int, so arithmetic with it is fast. But it doesn't handle fractions of a cent (or equivalents in other currencies), it's rounding behaviour is probably not what you want.&lt;/p&gt;
&lt;p&gt;It doesn't store a currency with the value, rather assuming that all money columns contain the currency specified by the database's &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.postgresql.org/docs/current/static/runtime-config-client.html#GUC-LC-MONETARY&quot;&gt;lc_monetary&lt;/a&gt; locale setting. If you change the lc_monetary setting for any reason, all money columns will contain the wrong value. That means that if you insert '$10.00' while lc_monetary is set to 'en_US.UTF-8' the value you retrieve may be '10,00 Lei' or '¥1,000' if lc_monetary is changed.&lt;/p&gt;
&lt;p&gt;Storing a value as a numeric, possibly with the currency being used in an adjacent column, might be better.&lt;/p&gt;
&lt;h3&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;When_should_you.3F_16&quot;&gt;When should you?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If you're only working in a single currency, aren't dealing with fractional cents and are only doing addition and subtraction then money might be the right thing.&lt;/p&gt;

</description>
<pubDate>Fri, 03 May 2019 11:52:08 +0000</pubDate>
<dc:creator>kawera</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://wiki.postgresql.org/wiki/Don%27t_Do_This</dc:identifier>
</item>
<item>
<title>Huge study finds drugs stop HIV transmission</title>
<link>https://www.theguardian.com/society/2019/may/02/end-to-aids-in-sight-as-huge-study-finds-drugs-stop-hiv-transmission</link>
<guid isPermaLink="true" >https://www.theguardian.com/society/2019/may/02/end-to-aids-in-sight-as-huge-study-finds-drugs-stop-hiv-transmission</guid>
<description>&lt;p&gt;An end to the Aids epidemic could be in sight after a landmark study found men whose HIV infection was fully suppressed by antiretroviral drugs had no chance of infecting their partner.&lt;/p&gt;
&lt;p&gt;The success of the medicine means that if everyone with HIV were fully treated, there would be no further infections.&lt;/p&gt;
&lt;p&gt;Among nearly 1,000 male couples across Europe where one partner with HIV was receiving treatment to suppress the virus, there were no cases of transmission of the infection to the HIV-negative partner during sex without a condom. Although 15 men were infected with HIV during the eight-year study, DNA testing proved that was through sex with someone other than their partner who was not on treatment.&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 1&quot;&gt;&lt;div class=&quot;rich-link&quot;&gt;
&lt;div class=&quot;rich-link__container&quot;&gt;
&lt;div class=&quot;rich-link__header&quot;&gt;
&lt;h2 class=&quot;rich-link__title&quot;&gt;Tests on London patient offer hope of HIV ‘cure’&lt;/h2&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;“It’s brilliant – fantastic. This very much puts this issue to bed,” said Prof Alison Rodger from University College London, the co-leader of the paper &lt;a href=&quot;http://www.thelancet.com/journals/lancet/article/PIIS0140-6736(19)30418-0/fulltext&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;published in the Lancet&lt;/a&gt; medical journal. Earlier studies have also shown the treatment protects heterosexual couples where one partner has HIV.&lt;/p&gt;
&lt;p&gt;She added: “Our findings provide conclusive evidence for gay men that the risk of HIV transmission with suppressive ART [antiretroviral therapy] is zero. Our findings support the message of the &lt;a href=&quot;http://i-base.info/u-equals-u/&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;international U=U campaign&lt;/a&gt; that an undetectable viral load makes HIV untransmittable.&lt;/p&gt;
&lt;p&gt;“This powerful message can help end the HIV pandemic by preventing HIV transmission, and tackling the stigma and discrimination that many people with HIV face.&lt;/p&gt;
&lt;p&gt;“Increased efforts must now focus on wider dissemination of this powerful message and ensuring that all HIV-positive people have access to testing, effective treatment, adherence support and linkage to care to help maintain an undetectable viral load.”&lt;/p&gt;
&lt;p&gt;In 2017, there were almost 40 million people worldwide living with HIV, of whom 21.7 million were on antiretroviral treatment. An estimated 101,600 people are &lt;a href=&quot;https://www.tht.org.uk/hiv-and-sexual-health/about-hiv/hiv-statistics&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;living with HIV&lt;/a&gt; in the UK, and of these, about 7,800 are undiagnosed, so do not know they are HIV positive.&lt;/p&gt;
&lt;p&gt;Myron S Cohen of the UNC Institute for Global &lt;a href=&quot;https://www.theguardian.com/society/health&quot; data-link-name=&quot;auto-linked-tag&quot; data-component=&quot;auto-linked-tag&quot; class=&quot;u-underline&quot;&gt;Health&lt;/a&gt; and Infectious Diseases at Chapel Hill in North Carolina, said in a commentary in the Lancet on the study that it should push the world forward on a strategy to test and treat everyone who has HIV. But, he added, maximising the benefits of treatment, particularly for men who have sex with men, has proved difficult.&lt;/p&gt;
&lt;p&gt;“It is not always easy for people to get tested for HIV or find access to care; in addition, fear, stigma, homophobia and other adverse social forces continue to compromise HIV treatment,” he said.&lt;/p&gt;
&lt;p&gt;“Diagnosis of HIV infection is difficult in the early stages of infection when transmission is very efficient, and this limitation also compromises the treatment as prevention strategy.”&lt;/p&gt;
&lt;aside class=&quot;element element-rich-link element--thumbnail element-rich-link--not-upgraded&quot; data-component=&quot;rich-link&quot; data-link-name=&quot;rich-link-2 | 2&quot;&gt;&lt;div class=&quot;rich-link&quot;&gt;
&lt;div class=&quot;rich-link__container&quot;&gt;
&lt;div class=&quot;rich-link__header&quot;&gt;
&lt;h2 class=&quot;rich-link__title&quot;&gt;UK meets UN target in drive to end HIV epidemic&lt;/h2&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;According to the National Aids Trust, 97% of people on HIV treatment in the UK have an undetectable level of the virus, meaning they cannot pass it on. “Hearing this can be enormously empowering and reassuring to people living with HIV,” said Deborah Gold, the trust’s chief executive.&lt;/p&gt;
&lt;p&gt;The latest findings reinforce the importance of people taking HIV tests frequently, which could ultimately end the transmission of the virus altogether in the future. New diagnoses have been declining since their peak in 2005, with figures from 2017 showing a 17% drop on 2016 and a 28% fall compared with 2015.&lt;/p&gt;
&lt;p&gt;Late diagnosis remains a major challenge, still accounting for about 43% of new HIV diagnoses. This disproportionately affects certain groups, including black African heterosexual men and people aged 65 and older.&lt;/p&gt;
&lt;p&gt;“If we don’t reduce late diagnosis, there will always be those who are not aware of their HIV status and who therefore cannot access treatment,” said Gold. “We think that the findings from this study could be incredibly powerful in breaking down some of the barriers to testing in communities where there is still a lot of stigma around HIV.”&lt;/p&gt;
&lt;p&gt;However, she added that &lt;a href=&quot;https://www.theguardian.com/society/2015/oct/23/public-health-cuts-undermine-nhs-funding-boost-letter&quot; data-link-name=&quot;in body link&quot; class=&quot;u-underline&quot;&gt;government funding cuts&lt;/a&gt; to specialist health services would make it more difficult to achieve a goal of eliminating transmission by 2030.&lt;/p&gt;
&lt;p&gt;Jens Lundgren, a professor of infectious diseases at Rigshospitalet, University of Copenhagen, and joint-lead for the study, called Partner, said: “We have now provided the conclusive scientific evidence for how treatment effectively prevents further sexual transmission of HIV.”&lt;/p&gt;
&lt;p&gt;Dr Michael Brady, the medical director at the Terrence Higgins Trust, said: “It is impossible to overstate the importance of these findings.&lt;/p&gt;
&lt;p&gt;“The Partner study has given us the confidence to say, without doubt, that people living with HIV who are on effective treatment cannot pass the virus on to their sexual partners. This has incredible impact on the lives of people living with HIV and is a powerful message to address HIV-related stigma.”&lt;/p&gt;
&lt;p&gt;Bruce Richman, the founding executive director of the Prevention Access Campaign, which launched U=U, said Pac was tremendously grateful to the researchers and participants. He said the study “has for ever changed what it means to live and love with HIV around the world”.&lt;/p&gt;
&lt;p&gt;In a linked comment in the journal, Cohen expressed optimism for future treatment of Aids. “During the course of these studies, antiretroviral drugs have become more effective, reliable, durable, easier to take, well tolerated and much less expensive,” he said.&lt;/p&gt;
&lt;p&gt;“The results … provide yet one more catalyst for a universal test-and-treat strategy to provide the full benefits of antiretroviral drugs. This and other strategies continue to push us toward the end of Aids.”&lt;/p&gt;
&lt;h2&gt;Case study&lt;/h2&gt;

&lt;div class=&quot;u-responsive-ratio&quot;&gt;&lt;img class=&quot;gu-image&quot; itemprop=&quot;contentUrl&quot; alt=&quot;Alex Sparrowhawk&quot; src=&quot;https://i.guim.co.uk/img/media/6b178deab2dee1f8c36858c4846180e2927371df/0_52_1800_1491/master/1800.jpg?width=300&amp;amp;quality=85&amp;amp;auto=format&amp;amp;fit=max&amp;amp;s=96b545c8a49c81e8294ad6d1a6d3a068&quot;/&gt;&lt;/div&gt;

Alex Sparrowhawk. Photograph: Handout
&lt;p&gt;Alex Sparrowhawk, 34, has been living with HIV for almost 10 years. When he was diagnosed in November 2009, he had two major concerns: how being HIV positive would impact his work as a financial analyst, and what it meant for future relationships.&lt;/p&gt;
&lt;p&gt;“I was single at the time,” he said. “Just navigating what to do – when to tell people and how to talk to people was really difficult.”&lt;/p&gt;
&lt;p&gt;Alex immediately began antiretroviral treatment, initially taking four pills a day, which was reduced to one pill once his viral load came down to undetectable levels several months later. The latest results confirm that for the past nine years, he has not been able to transmit the virus to anyone, although at the time, medical advice was less definitive.&lt;/p&gt;
&lt;p&gt;Between his diagnosis and now, Alex spent six-and-a-half years in a relationship, and said the possibility – however tiny – of transmitting HIV to his partner was a source of anxiety. “You’d be told it was very unlikely, or that it was only possible under certain circumstances like having an STI,” he said. “But you’re constantly worried about these caveats and you go through this worry together.&lt;/p&gt;
&lt;p&gt;“Now we can say zero risk, which is just so much more empowering for people. It’s a huge weight off your shoulders.”&lt;/p&gt;
&lt;p&gt;Alex hopes the findings will help transform public attitudes about HIV, bringing them in line with medical evidence. “A lot of stigma is driven by fear of being exposed to HIV,” he said. “People still think you can get it from kissing and casual contact. If more people knew about this study, this would change.”&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;bullet&quot;&gt;•&lt;/span&gt; This article was amended on 3 May 2019. An earlier version misspelled the name of Prof Alison Rodger as Rodgers.&lt;/p&gt;


</description>
<pubDate>Fri, 03 May 2019 00:27:16 +0000</pubDate>
<dc:creator>ahakki</dc:creator>
<og:url>http://www.theguardian.com/society/2019/may/02/end-to-aids-in-sight-as-huge-study-finds-drugs-stop-hiv-transmission</og:url>
<og:description>Paper says risk between male partners is zero if virus fully suppressed by antiretrovirals</og:description>
<og:image>https://i.guim.co.uk/img/media/897bd33c25317d4166c3bb3ccc0f902777171ece/49_104_1951_1172/master/1951.jpg?width=1200&amp;height=630&amp;quality=85&amp;auto=format&amp;fit=crop&amp;overlay-align=bottom%2Cleft&amp;overlay-width=100p&amp;overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&amp;s=4509442f679efbd6bc88bcc9b00e2df7</og:image>
<og:type>article</og:type>
<og:title>End to Aids in sight as huge study finds drugs stop HIV transmission</og:title>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theguardian.com/society/2019/may/02/end-to-aids-in-sight-as-huge-study-finds-drugs-stop-hiv-transmission</dc:identifier>
</item>
<item>
<title>Gitlab&amp;#039;s Journey from Azure to GCP</title>
<link>https://about.gitlab.com/2019/05/02/gitlab-journey-from-azure-to-gcp/</link>
<guid isPermaLink="true" >https://about.gitlab.com/2019/05/02/gitlab-journey-from-azure-to-gcp/</guid>
<description>&lt;p&gt;Last June, we had to face the facts: Our SaaS infrastructure for GitLab.com was not ready for mission-critical workloads, error rates were just too high, and availability was too low. To address these challenges, we decided to migrate from Azure to Google Cloud Platform (GCP) and document the journey publicly, end to end. A lot has happened since &lt;a href=&quot;https://about.gitlab.com/2018/06/25/moving-to-gcp/&quot;&gt;we first talked about moving to GCP&lt;/a&gt;, and we’re excited to share the results.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&quot;https://cloud.withgoogle.com/next/sf&quot;&gt;Google Cloud Next '19&lt;/a&gt;, GitLab Staff Engineer &lt;a href=&quot;https://about.gitlab.com/company/team/#suprememoocow&quot;&gt;Andrew Newdigate&lt;/a&gt; presented our migration experience and the steps we took to make it happen. Migrations seldom go as planned but we hope that others can learn from the process. Check out the video to learn more about our journey from Azure to GCP, and find some of our key takeaways below.&lt;/p&gt;
&lt;iframe src=&quot;https://www.youtube.com/embed/Ve_9mbJHPXQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;There were several reasons why we decided on the Google Cloud Platform. One top priority was that we wanted GitLab.com to be suitable for mission-critical workloads, and GCP offered the performance and consistency we needed. A second reason is that we believe &lt;a href=&quot;https://about.gitlab.com/solutions/kubernetes/&quot;&gt;Kubernetes&lt;/a&gt; is the future, and with so much development geared toward cloud native, Google was the clear choice as a partner going forward.&lt;/p&gt;
&lt;p&gt;Our company values are important to us and we apply them to all aspects of our work and our migration from Azure to GCP is no exception.&lt;/p&gt;
&lt;h2 id=&quot;three-core-values-guided-this-project&quot;&gt;Three core values guided this project:&lt;/h2&gt;
&lt;h3 id=&quot;efficiency&quot;&gt;Efficiency&lt;/h3&gt;
&lt;p&gt;At GitLab, &lt;a href=&quot;https://about.gitlab.com/handbook/values/#boring-solutions&quot;&gt;we love boring solutions&lt;/a&gt;. The goal of the project was really simple: Move GitLab.com to GCP. We wanted to find the least complex and most straightforward solution to achieve this goal.&lt;/p&gt;
&lt;h3 id=&quot;iteration&quot;&gt;Iteration&lt;/h3&gt;
&lt;p&gt;We focus on shipping the &lt;a href=&quot;https://about.gitlab.com/handbook/values/#minimum-viable-change-mvc&quot;&gt;minimum viable change&lt;/a&gt; and work in steps. When we practice iteration, we get feedback faster, we’re able to course-correct, and we reduce cycle times.&lt;/p&gt;
&lt;h3 id=&quot;transparency&quot;&gt;Transparency&lt;/h3&gt;
&lt;p&gt;We work &lt;a href=&quot;https://about.gitlab.com/handbook/values/#public-by-default&quot;&gt;publicly by default&lt;/a&gt;, which is why we made &lt;a href=&quot;https://gitlab.com/gitlab-com/migration/&quot;&gt;this project accessible to everyone&lt;/a&gt; and &lt;a href=&quot;https://docs.google.com/document/d/1p3Brri44_SKyakViKB-LGWCmCcwILW6z2A8a8eWFyFc/edit?usp=sharing&quot;&gt;documented our progress&lt;/a&gt; along the way.&lt;/p&gt;
&lt;h2 id=&quot;how-we-did-it&quot;&gt;How we did it&lt;/h2&gt;
&lt;p&gt;Looking for the simplest solution, we considered whether we could just stop the whole site: Copy all the data from Azure to GCP, switch the DNS over to point to GCP, and then start everything up again. The problem was that we had too much data to do this within a reasonable time frame. Once we shut down the site, we'd need to copy all the data between two cloud providers, and once the copy was complete, we'd need to verify all the data (about half a petabyte) and make sure it was correct. This plan meant that GitLab.com could be down for &lt;em&gt;several days&lt;/em&gt;, and considering that thousands and thousands of people rely on GitLab on a daily basis, this wouldn’t work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/gitlab_ee/gitlab_geo_diagram_migrate.png&quot; alt=&quot;GitLab Geo diagram&quot; class=&quot;medium center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We went back to the drawing board. We were working on another feature called &lt;a href=&quot;https://about.gitlab.com/features/gitlab-geo/&quot;&gt;Geo&lt;/a&gt; which allows for full, read-only mirrors of GitLab instances. Besides browsing the GitLab UI, Geo instances can be used for cloning and fetching projects as well as for a planned failover to migrate GitLab instances.&lt;/p&gt;
&lt;p&gt;We hoped that by taking advantage of the replication capabilities we were building for Geo, we could migrate the entire GitLab.com site to a secondary instance in GCP. The process might have taken weeks or months, but thankfully the site would be available throughout the synchronization process. Once all the data was synchronized to GCP, we could verify it and make sure it was correct. Finally, we could just promote the GCP environment and make it our new primary.&lt;/p&gt;
&lt;p&gt;This new plan had many advantages over the first one. Obviously, GitLab.com would be up during the synchronization and we would only have a short period of downtime, maybe an hour or two, rather than weeks. We could do full QA, load testing, and verify all data before the failover.&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;&quot;If it could work for us on GitLab.com, it would pretty much work for any other customer who wanted to use Geo. We could be confident in that.&quot; - Andrew Newdigate, Infrastructure Architect at GitLab&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/blogimages/gitlab-journey-from-azure-to-gcp/helm_charts.png&quot; alt=&quot;Helm charts&quot; class=&quot;medium center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;We were also working on another major project to install and run GitLab on Kubernetes. Much like Omnibus is a package installer for installing GitLab &lt;em&gt;outside&lt;/em&gt; a Kubernetes environment, GitLab’s helm charts &lt;a href=&quot;https://docs.gitlab.com/ee/install/kubernetes/&quot;&gt;install GitLab inside a Kubernetes environment&lt;/a&gt;. The plan evolved to use helm charts to install GitLab in GCP while still using Geo for replication.&lt;/p&gt;
&lt;p&gt;It became apparent there were problems with this approach as we went along:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The changes we needed to make to the application to allow it to become fully cloud native were extensive and required major work.&lt;/li&gt;
&lt;li&gt;The timeframes of the GCP migration and cloud native projects wouldn’t allow us to carry them out simultaneously.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We ultimately decided it would be better to postpone the move to Kubernetes until after migration to GCP.&lt;/p&gt;
&lt;p&gt;We went to the next iteration and decided to use Omnibus to provision the new environment. We also migrated all file artifacts, including CI Artifacts, Traces (CI log files), file attachments, LFS objects and other file uploads to &lt;a href=&quot;https://cloud.google.com/storage/&quot;&gt;Google Cloud Storage&lt;/a&gt; (GCS), moving about 200TB of data off our Azure-based file servers into GCS. Doing this reduced the risk and the scale of the Geo migration.&lt;/p&gt;
&lt;p&gt;The steps for the migration were now fairly straightforward:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set up a Geo secondary in GCP.&lt;/li&gt;
&lt;li&gt;Provision the new environment with Omnibus.&lt;/li&gt;
&lt;li&gt;Replicate all the data from GitLab.com in Azure to GCP.&lt;/li&gt;
&lt;li&gt;Test the new environment and verify all the data is correct.&lt;/li&gt;
&lt;li&gt;Failover to the GCP environment and promote it to primary.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;There was only one major unknown left in this plan: The actual failover operation itself.&lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;strong&gt;Geo didn’t support a failover operation&lt;/strong&gt;, and nobody knew exactly how to do it. It was essential that we executed this perfectly, so we used our value of iteration to get it right.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/blogimages/gitlab-journey-from-azure-to-gcp/issue_template.png&quot; alt=&quot;GitLab failover procedure issue template&quot; class=&quot;medium center&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We set up the failover procedure as an issue template in the GitLab migration issue tracker with each step as a checklist item.&lt;/li&gt;
&lt;li&gt;Every time we practiced, we created a new issue from the template and followed the checklist step by step.&lt;/li&gt;
&lt;li&gt;After each failover, we would review and consider how we could improve the process.&lt;/li&gt;
&lt;li&gt;We would submit these changes as merge requests to the issue template.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The merge requests were thoroughly reviewed before being approved by the team and through this very tight, iterative feedback loop, the checklist grew to cover every possible scenario we experienced. In the beginning, things almost never went according to plan, but with each iteration, we got better. In the end, there were &lt;em&gt;over 140 changes&lt;/em&gt; in that document before we felt confident enough to move forward with the failover. We let Google know and an amazing team was assembled to help us. The failover went smoothly and we didn't experience any major problems.&lt;/p&gt;
&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;Going back to the goals of the project: Did we make GitLab.com suitable for mission-critical workloads? Firstly, let's consider availability on GitLab.com.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/blogimages/gitlab-journey-from-azure-to-gcp/errors_per_day.png&quot; alt=&quot;GitLab Pingdom chart&quot; class=&quot;shadow medium center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;Pingdom&lt;/a&gt; graph shows the number of errors we saw per day, first in Azure and then in GCP. The average for the pre-migration period was 8.2 errors per day, while post-migration it’s down to &lt;strong&gt;just one error a day&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/blogimages/gitlab-journey-from-azure-to-gcp/gitlab_availability.png&quot; alt=&quot;GitLab availability&quot; class=&quot;shadow medium center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Leading up to the migration, our availability was 99.61 percent. &lt;a href=&quot;https://about.gitlab.com/2018/10/11/gitlab-com-stability-post-gcp-migration/&quot;&gt;In our October update&lt;/a&gt; we were at 99.88 percent. As of April 2019, we've improved to &lt;strong&gt;99.93 percent&lt;/strong&gt; and are on track to reach our target of 99.95 percent availability.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/blogimages/gitlab-journey-from-azure-to-gcp/latency.png&quot; alt=&quot;GitLab latency chart&quot; class=&quot;shadow medium center&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This latency histogram compares the site performance of GitLab.com before and after moving to GCP. We took data for one week before the migration and one week after the migration. The GCP line shows us that the latencies in GCP drop off quicker, which means GitLab.com is not only faster, it’s more predictable, with fewer outlier values taking an unacceptably long time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/gitlab/comments/9f71nq/thanks_gitlab_team_for_improving_the_stability_of/&quot;&gt;GitLab users have also noticed the increased stability&lt;/a&gt;, which is an encouraging sign that we've taken steps in the right direction.&lt;/p&gt;
&lt;p&gt;It's important to note that these improvements can't be attributed to the migration alone – we explore some other contributing factors in &lt;a href=&quot;https://about.gitlab.com/2018/10/11/gitlab-com-stability-post-gcp-migration/&quot;&gt;our October update&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-we-learned&quot;&gt;What we learned&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Having this amount of visibility into a large-scale migration project is pretty unusual, but it gave us an opportunity to put our values to the test. By opening our documentation to the world, we can collaborate and help others on their own migration journey.&lt;/li&gt;
&lt;li&gt;Working by our values gave us the ability to get the quick feedback we needed. Even though we weren’t able to use GitLab on Kubernetes during the migration, we course-corrected and came up with the right solutions.&lt;/li&gt;
&lt;li&gt;We were able to see exactly how Google developers work and got an up-close look into how one of the fastest-moving companies in the world actually manages its DevOps lifecycle. This knowledge will have a long-term impact on GitLab and how we support these organizations in the future.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you would like to learn more about how we migrated to GCP, feel free to take a look at the &lt;strong&gt;&lt;a href=&quot;https://gitlab.com/gitlab-com/migration/&quot;&gt;issue tracker&lt;/a&gt;&lt;/strong&gt; and our &lt;strong&gt;&lt;a href=&quot;http://bit.ly/2UrlU4s&quot;&gt;project documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
<pubDate>Thu, 02 May 2019 22:56:11 +0000</pubDate>
<dc:creator>soheilpro</dc:creator>
<og:description>Gitlab Staff Engineer Andrew Newdigate shares how we completed our migration to Google Cloud Platform, and how we overcame challenges along the way.</og:description>
<og:title>GitLab’s journey from Azure to GCP</og:title>
<og:type>article</og:type>
<og:url>https://about.gitlab.com/2019/05/02/gitlab-journey-from-azure-to-gcp/</og:url>
<og:image>https://about.gitlab.com/images/blogimages/gitlab-gke-integration-cover.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://about.gitlab.com/2019/05/02/gitlab-journey-from-azure-to-gcp/</dc:identifier>
</item>
<item>
<title>Android App Reverse Engineering 101</title>
<link>https://maddiestone.github.io/AndroidAppRE/</link>
<guid isPermaLink="true" >https://maddiestone.github.io/AndroidAppRE/</guid>
<description>&lt;p&gt;Welcome to Android&lt;sup&gt;TM&lt;/sup&gt; App Reverse Engineering 101! This workshop’s goal is to give you the foundations to begin reverse engineering Android applications. While this workshop won’t teach you the details of Android app development, Android malware analysis, Android vulnerability hunting, etc., I hope to give you all the necessary foundations through this workshop such that you can apply your new Android reversing skills to doing those things.&lt;/p&gt;
&lt;p&gt;This workshop will be wholly based on reverse engineering through static analysis, or analyzing and understanding an application by examining its code. I won’t be covering dynamic analysis where an analyst runs an application and understands the application by executing it, debugging it, etc. Why? Static analysis tends to be a less approachable skill for people to pick up on their own, so I want to help you do it! (And I really love static analysis)&lt;/p&gt;
&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;
&lt;p&gt;All of the exercises in this workshop can be done in the virtual machine (VM) that is available here.&lt;/p&gt;
&lt;p&gt;The VM is an Ubuntu 18.04 64-bit image. The username is &lt;code class=&quot;highlighter-rouge&quot;&gt;AndroidAppRE&lt;/code&gt; and the password is &lt;code class=&quot;highlighter-rouge&quot;&gt;android&lt;/code&gt;. The VM has the following tools installed:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/skylot/jadx&quot;&gt;jadx&lt;/a&gt; - Android decompiler. We load the APKs into jadx. And are able to analyze the DEX bytecode using jadx.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ghidra-sre.org/&quot;&gt;Ghidra&lt;/a&gt; - Software reverse engineering tool. We use its ARM disassembler/decompiler functionality in the exercises to statically analyze the native libraries.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/#1-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/app_fundamentals.html&quot;&gt;Android Application Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/reversing_intro.html&quot;&gt;Getting Started with Reversing Android Apps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/reversing_dex.html&quot;&gt;Reverse Engineering Android Apps - DEX Bytecode&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/reversing_native_libs.html&quot;&gt;Reverse Engineering Android Apps - Native Libraries&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;This workshop was modeled after the format used my Amanda Rousseau’s (&lt;a href=&quot;https://twitter.com/malwareunicorn&quot;&gt;@malwareunicorn&lt;/a&gt;) RE 101 workshop which she released using GitHub pages. Thanks, Amanda, for the inspiration!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“The Android robot used as the logo is reproduced or modified from work created and shared by Google and used according to terms described in the Creative Commons 3.0 Attribution License.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Android is a trademark of Google LLC.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://maddiestone.github.io/AndroidAppRE/app_fundamentals.html&quot;&gt;&lt;strong&gt;NEXT&lt;/strong&gt; &amp;gt; 2. Android Application Fundamentals&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 22:32:08 +0000</pubDate>
<dc:creator>conductor</dc:creator>
<og:title>Android App Reverse Engineering 101</og:title>
<og:description>Learn to reverse engineer Android applications!</og:description>
<og:url>https://maddiestone.github.io/AndroidAppRE/</og:url>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://maddiestone.github.io/AndroidAppRE/</dc:identifier>
</item>
<item>
<title>JetBlue explains to a passenger how it got a photo of her face</title>
<link>https://boingboing.net/2019/04/23/in-this-twitter-exchange-jetb.html</link>
<guid isPermaLink="true" >https://boingboing.net/2019/04/23/in-this-twitter-exchange-jetb.html</guid>
<description>&lt;div id=&quot;story&quot; readability=&quot;73.911384217335&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;&quot;&lt;a href=&quot;http://mediaroom.jetblue.com/investor-relations/press-releases/2018/11-15-2018-184045420&quot;&gt;Your Face is Your Boarding Pass&lt;/a&gt;&quot; is the headline from a jetBlue press release from November 15, 2018. &quot;JetBlue continues to lead the industry as the first domestic airline to launch a fully-integrated biometric self-boarding gate for international flights...&quot;&lt;/span&gt;&lt;/p&gt;
&lt;span id=&quot;metadata&quot;/&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;Journalist MacKenzie Fegan had first-hand (first-face?) experience with the new procedure, and when she asked jetBlue about it on Twitter, the extraordinary correspondence resulted:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; readability=&quot;11.169811320755&quot;&gt;

&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;I just boarded an international &lt;a href=&quot;https://twitter.com/JetBlue?ref_src=twsrc%5Etfw&quot;&gt;@JetBlue&lt;/a&gt; flight. Instead of scanning my boarding pass or handing over my passport, I looked into a camera before being allowed down the jet bridge. Did facial recognition replace boarding passes, unbeknownst to me? Did I consent to this?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118509708673998848?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;8.1063829787234&quot;&gt;

&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;You're able to opt out of this procedure, MacKenzie. Sorry if this made you feel uncomfortable.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— JetBlue Airways (@JetBlue) &lt;a href=&quot;https://twitter.com/JetBlue/status/1118512763683385347?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;8.10407239819&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;Follow up question. Presumably these facial recognition scanners are matching my image to something in order to verify my identity. How does &lt;a href=&quot;https://twitter.com/JetBlue?ref_src=twsrc%5Etfw&quot;&gt;@JetBlue&lt;/a&gt; know what I look like?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118597524158283776?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;8.16&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;The information is provided by the United States Department of Homeland Security from existing holdings.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— JetBlue Airways (@JetBlue) &lt;a href=&quot;https://twitter.com/JetBlue/status/1118607244290084864?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;11.05035971223&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;So to be clear, the government provided my biometric data to a privately held company? Did I consent to this? How long is my data held by &lt;a href=&quot;https://twitter.com/JetBlue?ref_src=twsrc%5Etfw&quot;&gt;@JetBlue&lt;/a&gt;? And even if I opt out at the scanners...you already have my information, correct?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118614203051466762?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;11.333333333333&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;We should clarify, these photos aren't provided to us, but are securely transmitted to the Customs and Border Protection database. JetBlue does not have direct access to the photos and doesn’t store them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— JetBlue Airways (@JetBlue) &lt;a href=&quot;https://twitter.com/JetBlue/status/1118634258514489344?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;13.996960486322&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;Would love more info about how my image was matched to a name on the flight manifest. I looked at the camera &amp;amp; a few seconds later the gate opened. Was my image, in the space of those seconds, sent to CBP, run through a database, matched to a name, and then sent back to &lt;a href=&quot;https://twitter.com/JetBlue?ref_src=twsrc%5Etfw&quot;&gt;@JetBlue&lt;/a&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118648564224339969?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;5.3805309734513&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;You can learn more about the process here: &lt;a href=&quot;https://t.co/wDZYiNNhoY&quot;&gt;https://t.co/wDZYiNNhoY&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— JetBlue Airways (@JetBlue) &lt;a href=&quot;https://twitter.com/JetBlue/status/1118655132252688384?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;9.2622950819672&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;“There is no pre-registration required.” I’ll say! This press release really doesn’t tell me anything about how it works. &lt;a href=&quot;https://twitter.com/EFF?ref_src=twsrc%5Etfw&quot;&gt;@EFF&lt;/a&gt;, can you shed some light on this? How concerned should I be?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118663611260391425?ref_src=twsrc%5Etfw&quot;&gt;April 17, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;7.1703296703297&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;We found another article that might be interesting to you: &lt;a href=&quot;https://t.co/yT1v05VRYX&quot;&gt;https://t.co/yT1v05VRYX&lt;/a&gt; It talks a bit about the data and how it's processed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— JetBlue Airways (@JetBlue) &lt;a href=&quot;https://twitter.com/JetBlue/status/1118863737711153152?ref_src=twsrc%5Etfw&quot;&gt;April 18, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; readability=&quot;11.497005988024&quot;&gt;

&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;span id=&quot;metadata&quot;&gt;“It took her photo, comparing her picture to a preloaded photo database of all the passengers with tickets on this flight.” It sounds like opting out isn’t really an option. I can not go through the scanner, but my data will have already been accessed and loaded into a database.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;— MacKenzie Fegan (@mackenzief) &lt;a href=&quot;https://twitter.com/mackenzief/status/1118868414406250496?ref_src=twsrc%5Etfw&quot;&gt;April 18, 2019&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;





&lt;/div&gt;&lt;div id=&quot;next-post-thumbnails&quot; readability=&quot;40.764818355641&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;
&lt;div class=&quot;nextstory&quot; readability=&quot;31.383529411765&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/look-and-feel.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;600&quot; height=&quot;228&quot; src=&quot;https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/05/Potolsky-Banner2.png?fit=600%2C228&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/05/Potolsky-Banner2.png?w=820&amp;amp;ssl=1 820w, https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/05/Potolsky-Banner2.png?resize=300%2C114&amp;amp;ssl=1 300w, https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/05/Potolsky-Banner2.png?resize=600%2C228&amp;amp;ssl=1 600w, https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/05/Potolsky-Banner2.png?resize=768%2C292&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;[Matt Potolsky's new book, The National Security Sublime, is a tour through the look-and-feel of mass surveillance, as practiced by the most unlikely of aesthetes: big data authoritarian snoops and the grifter military contractors who wax fat on them. This is a subject dear to my heart. -Cory] The US National Security Agency is big, […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/look-and-feel.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;nextstory&quot; readability=&quot;25.998106060606&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/no-privacy-pls-were-british.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;600&quot; height=&quot;413&quot; src=&quot;https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/05/4.5_Touch2_Standard_01.jpg?fit=600%2C413&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/05/4.5_Touch2_Standard_01.jpg?w=770&amp;amp;ssl=1 770w, https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/05/4.5_Touch2_Standard_01.jpg?resize=300%2C206&amp;amp;ssl=1 300w, https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/05/4.5_Touch2_Standard_01.jpg?resize=600%2C413&amp;amp;ssl=1 600w, https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/05/4.5_Touch2_Standard_01.jpg?resize=768%2C529&amp;amp;ssl=1 768w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;Privacy International's blockbuster Digital Stop and Search report details how British police forces have quietly procured phone-searching tools (including mobile &quot;kiosks&quot; that let them probe devices in the field), often from companies with a track-record of abetting some of the world's worst human rights abusers, and they use these in secret to capture all the […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/no-privacy-pls-were-british.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;nextstory&quot; readability=&quot;25.171232876712&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/04/23/japanese-taxicab-uses-face-rec.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;600&quot; height=&quot;400&quot; src=&quot;https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?fit=600%2C400&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?w=1200&amp;amp;ssl=1 1200w, https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?resize=300%2C200&amp;amp;ssl=1 300w, https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?resize=600%2C400&amp;amp;ssl=1 600w, https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?resize=768%2C512&amp;amp;ssl=1 768w, https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/shutterstock_553390753.jpg?resize=930%2C620&amp;amp;ssl=1 930w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;

&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;Rosa Golijan is a privacy engineer at Google. She snapped this photo of a seatback video display in a Japanese taxicab. The text says: This taxi tablet is using a face recognition system with an image received by the tablet’s front camera. The image data is used to estimate gender in order to deliver the […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/04/23/japanese-taxicab-uses-face-rec.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;div class=&quot;nextstory&quot; readability=&quot;30.21188630491&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/03/this-super-clean-sponge-scrubs.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;600&quot; height=&quot;450&quot; src=&quot;https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26044_product_shots3_image.jpg?fit=600%2C450&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26044_product_shots3_image.jpg?w=630&amp;amp;ssl=1 630w, https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26044_product_shots3_image.jpg?resize=300%2C225&amp;amp;ssl=1 300w, https://i1.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26044_product_shots3_image.jpg?resize=600%2C450&amp;amp;ssl=1 600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;

&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;We shouldn’t be surprised that sponges – the very things you use to clean dishes – are breeding grounds for odor and germs. It’s a sponge, after all. It absorbs things, including all that muck from your plates. Which is why calling the Better Sponge a sponge is a bit of a misnomer. It’s definitely […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/03/this-super-clean-sponge-scrubs.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;nextstory&quot; readability=&quot;33.046460176991&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/02/get-these-lightweight-bluetoot.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;596&quot; height=&quot;447&quot; src=&quot;https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/sale_7004_image_3.jpg?fit=596%2C447&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/sale_7004_image_3.jpg?w=596&amp;amp;ssl=1 596w, https://i0.wp.com/media.boingboing.net/wp-content/uploads/2019/04/sale_7004_image_3.jpg?resize=300%2C225&amp;amp;ssl=1 300w&quot; sizes=&quot;(max-width: 596px) 100vw, 596px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;

&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;Wireless headphones aren’t a mind-bending thing anymore now that Apple made them the standard thing-to-be-outraged-over-in-the-new-iPhone fare, thereby killing the cool factor. But let’s be reasonable here. Wires really are a pain when you’re running, trying to get off the bus, or even just standing up from your desk. Wireless headphones make sense, they just don’t […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/02/get-these-lightweight-bluetoot.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class=&quot;nextstory&quot; readability=&quot;30.963157894737&quot;&gt;&lt;span id=&quot;metadata&quot;/&gt;

&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/save-more-than-50-on-the-ulti.html?utm_source=moreatbb&amp;amp;utm_medium=nextpost&amp;amp;utm_campaign=nextpostthumbnails&quot; onclick=&quot;clickTrack(this.href, 'Next Post Button', 'Next Post Thumbnails');&quot;&gt;&lt;img width=&quot;600&quot; height=&quot;450&quot; src=&quot;https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26455_product_shots3_image.jpg?fit=600%2C450&amp;amp;ssl=1&quot; class=&quot;attachment-medium size-medium wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26455_product_shots3_image.jpg?w=630&amp;amp;ssl=1 630w, https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26455_product_shots3_image.jpg?resize=300%2C225&amp;amp;ssl=1 300w, https://i2.wp.com/media.boingboing.net/wp-content/uploads/2019/04/product_26455_product_shots3_image.jpg?resize=600%2C450&amp;amp;ssl=1 600w&quot; sizes=&quot;(max-width: 600px) 100vw, 600px&quot;/&gt;&lt;/a&gt;&lt;/span&gt;

&lt;p&gt;&lt;span id=&quot;metadata&quot;&gt;You take your gadgets everywhere. You should able to power them up everywhere and do it easily. It doesn’t seem like a lot to ask, but here you are with multiple cords littering the bottom of your commuter bag or laptop case. That’s why our new traveling companion is the GOSPACE SuperCharger, and it might […]&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;metadata&quot;&gt;&lt;a href=&quot;https://boingboing.net/2019/05/01/save-more-than-50-on-the-ulti.html&quot;&gt;READ THE REST&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;/div&gt;</description>
<pubDate>Thu, 02 May 2019 20:32:55 +0000</pubDate>
<dc:creator>wizeman</dc:creator>
<og:type>article</og:type>
<og:title>In this Twitter exchange, jetBlue explains to a passenger how it got a photo of her face -- from the DHS</og:title>
<og:description>In this Twitter exchange, jetBlue explains to a passenger how it got a photo of her face -- from the DHS</og:description>
<og:url>https://boingboing.net/2019/04/23/in-this-twitter-exchange-jetb.html</og:url>
<og:image>https://media.boingboing.net/wp-content/uploads/2019/04/artificial-intelligence-155161_1280.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://boingboing.net/2019/04/23/in-this-twitter-exchange-jetb.html</dc:identifier>
</item>
<item>
<title>Self Studying the MIT Applied Math Curriculum</title>
<link>https://www.harshsikka.me/self-studying-the-mit-applied-math-curriculum/</link>
<guid isPermaLink="true" >https://www.harshsikka.me/self-studying-the-mit-applied-math-curriculum/</guid>
<description>&lt;p&gt;&lt;em&gt;Wow! This post blew up, if you'd like to get updates on how my progress goes, feel free to subscribe &lt;a href=&quot;https://www.harshsikka.me/#subscribe&quot;&gt;here&lt;/a&gt; or follow me on &lt;a href=&quot;https://twitter.com/HarshSikka&quot;&gt;twitter&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I've decided to engage in a pretty interesting self development project this summer: Completing the requirements for the &lt;a href=&quot;http://math.mit.edu/academics/undergrad/major/course18/applied.php&quot;&gt;MIT Applied Math curriculum&lt;/a&gt; through auditing classes, meeting professors, and completing the &lt;a href=&quot;https://ocw.mit.edu/index.htm&quot;&gt;corresponding OCW course assignments and exams where applicable&lt;/a&gt;. In this post, I'll explain my background and motivations for doing this, as well as the specific courses I'll be taking on my journey.&lt;/p&gt;
&lt;p&gt;Feel free to skip straight to the plan if you don't feel like reading the &quot;why&quot;.&lt;/p&gt;
&lt;h2 id=&quot;why-the-hell-would-you-do-this&quot;&gt;Why the hell would you do this?&lt;/h2&gt;
&lt;p&gt;I'm a Master's student at Harvard and Georgia Tech studying Machine Learning and Computational Biology. I'm also a research assistant in a few labs, and my work spans Applied Math, Theoretical Neuroscience, and Machine Learning. Previously, I helped start an ML startup. I'm planning on applying to PhD programs this fall!&lt;/p&gt;
&lt;p&gt;My journey into Machine Learning has been fairly non traditional, I studied mostly biology and cognitive science in my undergraduate career at UCSD and my internships were always in Product Management. I taught myself to code, mostly application development for web and mobile, and slowly started to see parallels between Information Science and Biology, and was fascinated by Neural Networks. This fascination led me to apply for graduate programs in CS and Biology, and I miraculously was accepted! So, with luck and momentum going my way, I dove deep into deep learning research and taught myself whatever mathematical preliminaries were necessary to make sense of the literature.&lt;/p&gt;
&lt;p&gt;The thing is, I've started to really like math in its own right, and while its certainly not necessary to study large swaths of math beyond a few topics like Linear Algebra, Probability Theory, and a little Vector Calculus, I've found that a lot of the brilliant people around me can dip into different topics in mathematics and make new, interesting breakthroughs in ML.&lt;/p&gt;
&lt;p&gt;So, I like math, and getting a more formal foundation seems useful if I'd like to go even deeper into the research I'm doing and think in new interesting ways. After talking to a few of my mentors and colleagues, including Professors and Grad students at Harvard and MIT, I was recommended to try diving into an undergraduate applied math curriculum. I've been graciously offered the chance to sit in some classes and learn for the sake of learning in my free time, so why not make a fun project out of it and share it with everyone! Maybe you can find something useful here :)&lt;/p&gt;
&lt;h2 id=&quot;the-plan&quot;&gt;The Plan&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://math.mit.edu/academics/undergrad/major/course18/applied.php&quot;&gt;MIT Applied Math curriculum&lt;/a&gt; is very well laid out and straightforward, and basically comprises of a collection of core courses and electives to choose from. The courses I'll be taking are mostly available via OCW, and some are offered on campus over the summer, or similar material is being taught at nearby universities. The courses I'm planning on taking currently are as follows, and are a sample track fulfilling the degree requirements, though the specific courses may change if I get feedback that something is better suited for my interests.&lt;/p&gt;
&lt;p&gt;I've included the courses, followed by links to the materials below!&lt;/p&gt;
&lt;h3 id=&quot;core-courses&quot;&gt;Core Courses&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Calculus&lt;/strong&gt; - My calculus is quite strong, so I'll likely just review notes and complete the exams for the single and multivariable classes, but the material can be found here - &amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-01sc-single-variable-calculus-fall-2010/&quot;&gt;18.01&lt;/a&gt;, &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-02sc-multivariable-calculus-fall-2010/&quot;&gt;18.02&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Differential Equations&lt;/strong&gt; - Though I've taken a differential equations class in my undergrad years, I wasn't really paying attention. So, I'll likely focus on this class to fill my foundations -&amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-03-differential-equations-spring-2010/&quot;&gt;18.03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linear Algebra&lt;/strong&gt; - My Linear Algebra is similarly strong, so again I'll likely focus on reviewing and taking the exams found here -&amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/&quot;&gt;18.06&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complex Variables with Applications -&lt;/strong&gt; This is a required core course that covers complex algebra and functions, analyticity, contour integration, Cauchy's theorem, singularities, Taylor and Laurent series, residues, evaluation of integrals, multivalued functions, potential theory in two dimensions, Fourier analysis and Laplace transforms. It sounds interesting -&amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-04-complex-variables-with-applications-fall-2003/&quot;&gt;18.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Principles of Discrete Applied Mathematics&lt;/strong&gt; - I've never taken Discrete Math. I taught myself programming and algorithms without a strong mathematical intuition, and I'm looking forward to developing one in this course -&amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-310-principles-of-discrete-applied-mathematics-fall-2013/&quot;&gt;18.200&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Principles of Continuum Applied Mathematics&lt;/strong&gt; - Principles of Continuum Applied Mathematics covers fundamental concepts in continuous applied mathematics, including applications from traffic flow, fluids, elasticity, granular flows, etc. It also seems largely useful and is a required course so I'll be taking it! -&amp;gt; &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-311-principles-of-applied-mathematics-spring-2014/&quot;&gt;18.300&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;restricted-electives&quot;&gt;Restricted Electives&lt;/h3&gt;
&lt;p&gt;Following the core courses, the curriculum gives students the option of choosing courses from 2 groups, 1. Combinatorics, Computer Science, Probability and Statistics or 2. Numerical Analysis, Physical Mathematics, Nonlinear Dynamics&lt;/p&gt;
&lt;p&gt;4 courses must be taken, with at least 1 from each group. I'll likely be splitting down the middle, as I already have a Computational background that is provided by some of the classes in the first group. The courses I'm tentatively planning on completing are &lt;strong&gt;Probability&lt;/strong&gt; - &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-440-probability-and-random-variables-spring-2014/&quot;&gt;18.600&lt;/a&gt; and &lt;strong&gt;Statistics&lt;/strong&gt; - &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-650-statistics-for-applications-fall-2016/&quot;&gt;18.650&lt;/a&gt; from the first group, and &lt;strong&gt;Partial Differential Equations&lt;/strong&gt; - &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-303-linear-partial-differential-equations-fall-2006/&quot;&gt;18.303&lt;/a&gt; and &lt;strong&gt;Numerical Analysis&lt;/strong&gt; - &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-330-introduction-to-numerical-analysis-spring-2012/&quot;&gt;18.330&lt;/a&gt; from the 2nd group.&lt;/p&gt;
&lt;p&gt;So, that's my plan. I'm not shoehorning this into a set period of time, though I will be actively meeting with Professors and auditing classes this summer while completing a research fellowship. I'm really looking forward to exploring and understanding Math, my plan is to share my updates, studies and intuitions here and perhaps they'll even translate into cool new architecture ideas or interesting collaborations!&lt;/p&gt;
&lt;p&gt;Maybe after this, I'll take a crack at the &lt;a href=&quot;http://math.mit.edu/academics/undergrad/major/course18/pure.php&quot;&gt;Pure Math curriculum&lt;/a&gt; too!&lt;/p&gt;
&lt;p&gt;Do you have any suggestions for me? I'd love to hear them, you can drop me a line on Twitter @harshsikka!&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 19:29:45 +0000</pubDate>
<dc:creator>hsikka</dc:creator>
<og:type>article</og:type>
<og:title>Self Studying the MIT Applied Math Curriculum</og:title>
<og:description>Wow! This post blew up, if you'd like to get updates on how my progress goes, feel free to subscribe here [https://www.harshsikka.me/#subscribe] or follow me on twitter [https://twitter.com/HarshSikka]! I've decided to engage in a pretty interesting self development project this summer: Completing the requirements for the MIT Applied Math curriculum [http://math.mit.edu/academics/undergrad/major/course18/applied.php] through auditing classes, meeting professors, and completing the correspond</og:description>
<og:url>https://www.harshsikka.me/self-studying-the-mit-applied-math-curriculum/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.harshsikka.me/self-studying-the-mit-applied-math-curriculum/</dc:identifier>
</item>
<item>
<title>TurboTax and H&amp;R Block Saw Free Tax Filing as a Threat</title>
<link>https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</link>
<guid isPermaLink="true" >https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</guid>
<description>&lt;div class=&quot;top-notes&quot; readability=&quot;6.1731843575419&quot;&gt;
&lt;div class=&quot;note&quot; id=&quot;newsletter-txt-note&quot; readability=&quot;7.5977653631285&quot;&gt;
&lt;p&gt;ProPublica is a nonprofit newsroom based in New York. Sign up for ProPublica’s &lt;a href=&quot;https://go.propublica.org/20181219-apple&quot;&gt;Big Story&lt;/a&gt; newsletter to receive stories like this one in your inbox as soon as they are published.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;1.0&quot;&gt;Despite signing a deal with the IRS that pledged they would help tens of millions of Americans file taxes for free, tax software giants Intuit, the maker of TurboTax, and H&amp;amp;R Block instead deliberately hid the free option and actively steered customers into paid products, according to an internal document and five current and former employees of the companies.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;1.1&quot;&gt;H&amp;amp;R Block explicitly instructs its customer service staff to push people away from its free offering, according to internal guidance obtained by ProPublica.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;1.2&quot;&gt;“Do not send clients to this Web Site unless they are specifically calling about the Free File program,” the guidance states, referring to the site with the company’s free option. “We want to send users to our paid products before the free product, if at all possible.”&lt;/p&gt;
&lt;aside class=&quot;newsletter newsletter-big-story small right&quot; readability=&quot;27&quot;&gt;&lt;h3&gt;Get Our Top Investigations&lt;/h3&gt;
&lt;p&gt;Subscribe to the Big Story newsletter.&lt;/p&gt;

&lt;/aside&gt;&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.0&quot;&gt;Steering customers away from TurboTax’s truly free option is a “purposeful strategy,” said a former midlevel Intuit employee. For people who find TurboTax through a search engine or an online ad, “the landing page would direct you through a product flow that the company wanted to ensure would not make you aware of Free File.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.1&quot;&gt;When the Free File program launched 16 years ago, it was extolled as the best sort of collaboration between government and private enterprise. With little cost to the IRS, the huge companies that dominate online tax preparation would help millions of Americans file their taxes for free. &lt;a href=&quot;https://www.propublica.org/article/congress-is-about-to-ban-the-government-from-offering-free-online-tax-filing-thank-turbotax&quot;&gt;Intuit and the industry&lt;/a&gt; have spent millions lobbying to make the Free File program permanent because it contains a noncompete provision that restricts the IRS from creating its own free, online filing system.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.2&quot;&gt;But privately, the free filing option is seen for what it is: a threat to the companies’ profits.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.3&quot;&gt;So the companies had to strike a delicate balance: They wanted to preserve their arrangement with the IRS to ward off government competition, but then they also sought to make sure the program didn’t recruit too many customers who actually got something for free.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.4&quot;&gt;The companies set out to convert people who qualify for the program into paying customers. Sure enough, use of the Free File program has collapsed. Soon after it was launched in 2003, more than 5 million Americans filed their taxes for free. Now it’s about half as many, according to the latest IRS data.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.5&quot;&gt;The industry has also succeeded in fending off a pair of grave dangers: the prospect of the government either creating its own easy online filing system or offering tax returns pre-filled with data the IRS already has, a practice common in other countries.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.6&quot;&gt;Now Intuit and H&amp;amp;R Block could be dealt a setback. A bill that would codify the Free File program, which passed the House last month, has stalled in the Senate after ProPublica reported that the companies were making it more difficult for people to find their Free File websites by &lt;a href=&quot;https://www.propublica.org/article/turbotax-deliberately-hides-its-free-file-page-from-search-engines&quot;&gt;hiding them from search engines&lt;/a&gt;.&lt;/p&gt;
&lt;hr/&gt;&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.7&quot;&gt;Both companies employ similar tactics: They lure customers in with products advertised as “free” but that upsell them to paid products — or hit them with surprise charges.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;3.8&quot;&gt;At Intuit, “The entire strategy is make sure people read the word ‘free’ and click our site and never use” an actually free product, the former midlevel employee said. In reality, TurboTax’s Free Edition guides many people to a product that costs them money. It’s only free for people with the simplest tax situations. The “vast majority of people who click that will not pay $0,” the former employee said.&lt;/p&gt;
&lt;h3&gt;“TurboTax’s recent ads consist entirely of the word “free”&lt;/h3&gt;
&lt;p&gt;A TurboTax commercial from 2019.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/7GtJPT3F1uw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.0&quot;&gt;Only a small portion of taxpayers, under 3 million a year, find their way to the program, far below the 100 million who actually qualify. The program is open to anyone who makes under $66,000. The IRS, meanwhile, continues to tout the program as a success, despite its decline. Internal IRS documents show agency officials unconcerned that tens of millions of taxpayers have been drawn to other “free” options.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.1&quot;&gt;In statements in response to questions from ProPublica, &lt;a href=&quot;https://www.documentcloud.org/documents/5984476-Intuit-Statement-5-1-19.html&quot;&gt;Intuit&lt;/a&gt; and &lt;a href=&quot;https://www.documentcloud.org/documents/5985429-HR-Block-5-1-19.html&quot;&gt;H&amp;amp;R Block&lt;/a&gt; both said they were “proud” of the Free File program and cited the fact that millions of taxpayers have used it. They did not specifically address the employee accounts. Intuit’s spokesman said the company “created and paid for 17 marketing initiatives … to raise awareness and educate taxpayers about the IRS Free File program.” He specifically pointed to a &lt;a href=&quot;https://www.aol.com/article/finance/2019/04/10/irs-free-file-alliance-offers-free-tax-filing-including-intuit-turbotax-free-file/23709107/&quot;&gt;press release on AOL.com&lt;/a&gt; about the program “syndicated through AOL at our expense to drive awareness.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.2&quot;&gt;The H&amp;amp;R Block spokeswoman said the company’s Free File offering grew 8.3% this year, and “we have updated our search practices to make H&amp;amp;R Block’s Free File offer even easier to find.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.3&quot;&gt;An IRS spokesman said the agency “continues to support the Free File program.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.4&quot;&gt;At Intuit, it’s an open secret within the company that helping customers find the Free File program would be bad for business.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.5&quot;&gt;One former marketing employee recalled a May 2017 meeting of a marketing team at TurboTax’s San Diego headquarters. The tax filing season had just ended, and a dozen or so staffers up to the senior manager level were brainstorming. A new employee proposed that customers going through TurboTax’s interview-style filing process who were found to be eligible for Free File get a “hard recommendation” — essentially a pop-up window — to be routed to the truly free product.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.6&quot;&gt;The response? Laughter, according to the former employee. The meeting quickly moved on.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.7&quot;&gt;“They have ways of detecting if you’re paying too much, but they just don’t do it,” the former staffer said.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;5.8&quot;&gt;As a result, many people end up paying TurboTax even though they could have filed for free. The company won’t say how many people this is, but it is likely in the millions. Dozens of taxpayers have contacted ProPublica to tell &lt;a href=&quot;https://www.propublica.org/article/here-are-your-stories-of-being-tricked-into-paying-by-turbotax-you-often-need-the-money&quot;&gt;their stories of being charged by TurboTax&lt;/a&gt; despite the fact that they earned under $34,000 a year, qualifying them for TurboTax’s Free File product. An 87-year-old retiree with a gross income of $11,000, for example, &lt;a href=&quot;https://www.propublica.org/article/here-are-your-stories-of-being-tricked-into-paying-by-turbotax-you-often-need-the-money&quot;&gt;was charged $124.98&lt;/a&gt; to file with TurboTax.&lt;/p&gt;
&lt;h3&gt;H&amp;amp;R Block tells staff to steer people away from Free File&lt;/h3&gt;
&lt;p&gt;H&amp;amp;R Block instructs its staff to push people toward its paid products in this internal guidance obtained by ProPublica.&lt;/p&gt;
&lt;img alt=&quot;&quot; src=&quot;https://assets.propublica.org/images/articles/_threeTwo400w/HRB-screenshot.jpg&quot; width=&quot;400&quot; height=&quot;100&quot; srcset=&quot;https://assets.propublica.org/images/articles/_threeTwo400w/HRB-screenshot.jpg 400w, https://assets.propublica.org/images/articles/_threeTwo800w/HRB-screenshot.jpg 800w, https://assets.propublica.org/images/articles/_threeTwo1600w/HRB-screenshot.jpg 1600w, https://assets.propublica.org/images/articles/_threeTwo2000w/HRB-screenshot.jpg 2000w&quot;/&gt;&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.0&quot;&gt;At H&amp;amp;R Block, a former veteran staffer called it “company policy” to steer customers away from the Free File option. “The company is making money from the product, and that money is eating into the clients’ refund,” the former staffer said.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.1&quot;&gt;At Intuit, customers who don’t know about the Free File product will find themselves instead on the “&lt;a href=&quot;https://www.propublica.org/article/turbotax-just-tricked-you-into-paying-to-file-your-taxes&quot;&gt;Free Edition&lt;/a&gt;.” There, they are often pushed to buy deluxe versions of TurboTax they might not need. They can be charged a $39.99 “Refund Processing” fee to have the cost of TurboTax deducted from their refund instead of paying upfront. They are also sold side products such as “audit defense,” which offers expert representation in the event of an audit.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.2&quot;&gt;Executives who have worked at the company boast on resumes reviewed by ProPublica about their success in having diverted customers from “free” offerings to paying products.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.3&quot;&gt;One former marketing manager described her role as “driving new business growth” through TurboTax Free Edition “while mitigating cannibalization of our paid tax offerings.” Another senior product marketing manager boasted that she had helped develop the “monetization strategy of the TurboTax Free Edition product.” She said she applied the principles of the behavioral economist &lt;a href=&quot;http://danariely.com/&quot;&gt;Dan Ariely&lt;/a&gt; to enhance “TurboTax in-product upsell experiences.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.4&quot;&gt;On LinkedIn, Heather Samarin, who was a TurboTax vice president of product management a decade ago, said that she had been “charged with addressing the threat posed by IRS free efile program” and had “revamped TurboTax marketing strategy for low-end tax filers,” driving a “100% increase in revenues.” She did not respond to requests for comment.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.5&quot;&gt;At a meeting in 2014, Intuit’s then-Chief Financial Officer Neil Williams described the prospect of the IRS adopting a system of pre-filled returns as an “existential threat” to the company, according to the former midlevel staffer. Williams didn’t respond to requests for comment.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.6&quot;&gt;Last summer, according to a former marketing employee, the then-head of TurboTax, Dan Wernikoff, attended a meeting about customers who had unnecessarily selected costlier products like TurboTax Deluxe. These customers had tax situations that qualified them for a cheaper or even free product, and the slides shown at the meeting referred to them as having been “overcharged.” According to the former employee, Wernikoff instructed that going forward, employees should never use the word “overcharged.” Instead, they should say that these customers’ use of products intended for higher-earning customers was “aspirational.” Wernikoff didn’t respond to a request for comment.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.7&quot;&gt;The IRS’ Free File program peaked early. In 2005, its third year, 5.1 million taxpayers used the program to file a free return. That early success set the program up for plenty of growth, as every year, millions more Americans were moving away from paper to file their tax returns electronically. In 2005, only 68.5 million returns were filed electronically — about half the number filed electronically last year.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;7.8&quot;&gt;But instead of growing, Free File shrank.&lt;/p&gt;
&lt;p data-pym-src=&quot;https://projects.propublica.org/graphics/embed-free-file-percent?layout=embed&amp;amp;050219&quot;&gt;Loading...&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;9.0&quot;&gt;At the IRS, according to internal management reports obtained by ProPublica through a public records request, executives were ambivalent about the program’s decline. The reason for the drop was that companies “now heavily promote free options outside of IRS Free File,” said a report in November 2009. Two years later, as the numbers slid further, a report blamed the “continued migration of taxpayers to other online free services offered in the marketplace.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;9.1&quot;&gt;By 2017, after the number of Free File users had been cut in half from its 2005 peak, IRS executives were claiming the program’s decline was instead proof of its success. As a November 2017 internal report put it: “We believe the continued decrease is a direct result of the increase in free options available in the broad marketplace. Free File has been successful in generating a free marketplace and stimulating that marketplace, perhaps to the program’s detriment.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;9.2&quot;&gt;Yet the same report conceded that the IRS did not have a “quantitative understanding for the decrease in Free File returns” — in other words, the agency had never actually studied why or how taxpayers were lured to other options in the “free marketplace” or whether those options were actually free.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;9.3&quot;&gt;One year later, an IRS oversight panel contradicted the report’s rosy conclusions. The panel wrote that the agency “&lt;a href=&quot;https://www.documentcloud.org/documents/5910811-Internal-Revenue-Service-Advisory-Council.html#document/p15/a494005&quot;&gt;does not provide adequate oversight of the Free File program&lt;/a&gt;” and that by failing to have clear goals for the program or checking to make sure the companies were following through on their promises, the IRS was putting “vulnerable taxpayers at risk.” Despite the panel’s criticism, the IRS has not announced any significant reforms to oversight of the program. Last October, the IRS signed a deal with Intuit and the other companies renewing the Free File program.&lt;/p&gt;
&lt;aside data-pp-id=&quot;10&quot; data-pp-blocktype=&quot;promo&quot; class=&quot;promo small left&quot;&gt;&lt;h3&gt;Read More&lt;/h3&gt;

&lt;div class=&quot;story-entry&quot;&gt;
&lt;div class=&quot;lead-art thumbnail&quot;&gt;&lt;a class=&quot;aspect-1-1&quot; href=&quot;https://www.propublica.org/article/turbotax-just-tricked-you-into-paying-to-file-your-taxes&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://assets.propublica.org/images/articles/_oneOne75w/20190422-turbotax-ads-1x1.jpg&quot; width=&quot;75&quot; height=&quot;75&quot; srcset=&quot;https://assets.propublica.org/images/articles/_oneOne75w/20190422-turbotax-ads-1x1.jpg 75w, https://assets.propublica.org/images/articles/_oneOne150w/20190422-turbotax-ads-1x1.jpg 150w&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/aside&gt;&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.0&quot;&gt;Intuit’s aggressive lobbying of Congress on tax filing issues is well known inside the company, but it is a topic most employees shy away from discussing openly, according to a former Intuit engineer.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.1&quot;&gt;One employee recalled longtime Intuit CEO Brad Smith, a folksy leader who often invokes his roots in West Virginia, batting back a question at an employee Q&amp;amp;A about whether the IRS should offer Americans pre-filled tax returns. If that happened, Smith argued, the government would take advantage of people, especially those who don’t speak English. A company spokesman didn’t respond to a question about the episode.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.2&quot;&gt;Smith presided over a decade of dramatic growth at Intuit before he was succeeded by Sasan Goodarzi this year. Last year, Intuit’s consumer division, which includes TurboTax, reported &lt;a href=&quot;https://www.documentcloud.org/documents/5955655-Intuit-2018-Annual-Report-on-Form-10-K-PDF.html#document/p41&quot;&gt;$1.6 billion&lt;/a&gt; in operating income.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.3&quot;&gt;After ProPublica &lt;a href=&quot;https://www.propublica.org/article/how-to-get-turbotax-refund&quot;&gt;reported&lt;/a&gt; last month that many people had been charged even though they were eligible to file for free, dozens of readers reported receiving refunds. But in recent days, the company created a special team to handle — and deny — refund requests, according to customer service representatives working for Intuit subcontractors.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.4&quot;&gt;Customer service staff reported being told to blame the 2017 Trump tax law for customers being charged. Multiple readers said they’d been told that the ProPublica stories were “fake news.” Intuit has not answered repeated questions about its refund policy. A spokesman said that no material provided to call agents “included a reference to tax law changes, elected officials or derogatory terms about ProPublica.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;11.5&quot;&gt;Meanwhile, calls to investigate the industry’s attempts to steer taxpayers away from the Free File program are growing.&lt;/p&gt;
&lt;aside class=&quot;ad-300&quot;&gt;

&lt;/aside&gt;&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;13.0&quot;&gt;This week, &lt;a href=&quot;https://projects.propublica.org/represent/members/P000618-katie-porter&quot;&gt;Rep. Katie Porter, D-Calif.&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/RepKatiePorter/status/1122890519636582401&quot;&gt;wrote letters asking&lt;/a&gt; the IRS and Federal Trade Commission to investigate Intuit’s and H&amp;amp;R Block’s attempts to hide their Free File pages from search engines.&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;13.1&quot;&gt;On Wednesday, New York Gov. Andrew Cuomo requested two state agencies to &lt;a href=&quot;https://www.governor.ny.gov/news/governor-cuomo-calls-department-financial-services-and-department-taxation-and-finance&quot;&gt;open an investigation&lt;/a&gt;. In response, the Intuit spokesman said: “Our search and marketing practices around the IRS Free File program have been called into question. These characterizations are untrue and we look forward to sharing the facts with New York regulators.”&lt;/p&gt;
&lt;p data-pp-blocktype=&quot;copy&quot; data-pp-id=&quot;13.2&quot;&gt;The spokesman didn’t respond to requests to specify which characterizations were untrue.&lt;/p&gt;
&lt;div class=&quot;bottom-notes&quot; readability=&quot;5.6502242152466&quot;&gt;
&lt;div class=&quot;note co-publish&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Ariana Tobin contributed to this report.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Thu, 02 May 2019 18:28:24 +0000</pubDate>
<dc:creator>danso</dc:creator>
<og:type>article</og:type>
<og:url>https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</og:url>
<og:title>TurboTax and H&amp;R Block Saw Free Tax Filing as a Threat — and Gutted It — ProPublica</og:title>
<og:description>An internal document and current and former company employees show the companies steered customers away from the government-sponsored free option and made them pay.</og:description>
<og:image>https://assets.propublica.org/images/articles/20190502-borge-1200x630.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</dc:identifier>
</item>
<item>
<title>Facebook Bans Louis Farrakhan, Milo Yiannopoulos, InfoWars and Others</title>
<link>https://edition.cnn.com/2019/05/02/tech/facebook-ban-louis-farrakhan-infowars-alex-jones-milo-laura-loomer/index.html</link>
<guid isPermaLink="true" >https://edition.cnn.com/2019/05/02/tech/facebook-ban-louis-farrakhan-infowars-alex-jones-milo-laura-loomer/index.html</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://edition.cnn.com/2019/05/02/tech/facebook-ban-louis-farrakhan-infowars-alex-jones-milo-laura-loomer/index.html&quot;&gt;https://edition.cnn.com/2019/05/02/tech/facebook-ban-louis-farrakhan-infowars-alex-jones-milo-laura-loomer/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19810897&quot;&gt;https://news.ycombinator.com/item?id=19810897&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 339&lt;/p&gt;
&lt;p&gt;# Comments: 639&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 18:21:10 +0000</pubDate>
<dc:creator>aestetix</dc:creator>
<og:type>article</og:type>
<og:url>https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</og:url>
<og:title>TurboTax and H&amp;R Block Saw Free Tax Filing as a Threat — and Gutted It — ProPublica</og:title>
<og:description>An internal document and current and former company employees show the companies steered customers away from the government-sponsored free option and made them pay.</og:description>
<og:image>https://assets.propublica.org/images/articles/20190502-borge-1200x630.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.propublica.org/article/intuit-turbotax-h-r-block-gutted-free-tax-filing-internal-memo</dc:identifier>
</item>
<item>
<title>Show HN: Risp – Lisp in Rust</title>
<link>https://m.stopa.io/risp-lisp-in-rust-90a0dad5b116</link>
<guid isPermaLink="true" >https://m.stopa.io/risp-lisp-in-rust-90a0dad5b116</guid>
<description>&lt;div class=&quot;uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup&quot;&gt;
&lt;div class=&quot;u-flex0&quot;&gt;&lt;a class=&quot;link u-baseColor--link avatar&quot; href=&quot;https://m.stopa.io/@stepan?source=post_header_lockup&quot; data-action=&quot;show-user-card&quot; data-action-source=&quot;post_header_lockup&quot; data-action-value=&quot;8e420e571341&quot; data-action-type=&quot;hover&quot; data-user-id=&quot;8e420e571341&quot; data-collection-slug=&quot;stepan&quot; dir=&quot;auto&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/fit/c/100/100/0*fK-y1a0R2GlGhd-I.jpg&quot; class=&quot;avatar-image u-size50x50&quot; alt=&quot;Go to the profile of Stepan Parunashvili&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p name=&quot;f8ab&quot; id=&quot;f8ab&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Many years ago, Peter Norvig wrote a beautiful article &lt;a href=&quot;http://norvig.com/lispy.html&quot; data-href=&quot;http://norvig.com/lispy.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;about creating a lisp interpreter in Python&lt;/a&gt;. It’s the most fun tutorial I’ve seen, not just because it teaches you about my favorite language family (Lisp), but because it cuts through to the essence of interpreters, is fun to follow and quick to finish.&lt;/p&gt;
&lt;p name=&quot;8677&quot; id=&quot;8677&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Recently, I had some time and wanted to learn Rust. It’s a beautiful systems language, and I’ve seen some great work come out from those who adopt it. I thought, &lt;em class=&quot;markup--em markup--p-em&quot;&gt;what better way to learn Rust, than to create a lisp interpreter in it?&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;4f8c&quot; id=&quot;4f8c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Hence, Risp — a lisp in rust — was born.&lt;/strong&gt; In this essay you and I will follow along with &lt;a href=&quot;http://norvig.com/lispy.html&quot; data-href=&quot;http://norvig.com/lispy.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Norvig’s Lispy&lt;/a&gt;, but instead of Python, we’ll do it in Rust 🙂.&lt;/p&gt;
&lt;h3 name=&quot;dcf6&quot; id=&quot;dcf6&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Syntax, Semantics and Notes on Following Along&lt;/h3&gt;
&lt;p name=&quot;7011&quot; id=&quot;7011&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;If you haven’t heard of lisp, some Paul Graham’s essays (&lt;a href=&quot;http://www.paulgraham.com/progbot.html&quot; data-href=&quot;http://www.paulgraham.com/progbot.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;one&lt;/a&gt;, &lt;a href=&quot;http://www.paulgraham.com/diff.html&quot; data-href=&quot;http://www.paulgraham.com/diff.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;two&lt;/a&gt;, &lt;a href=&quot;http://www.paulgraham.com/avg.html&quot; data-href=&quot;http://www.paulgraham.com/avg.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;three&lt;/a&gt;), alongside some &lt;a href=&quot;https://m.stopa.io/favorite-rich-hickey-talks-6bcb23da6ff2&quot; data-href=&quot;https://m.stopa.io/favorite-rich-hickey-talks-6bcb23da6ff2&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener&quot; target=&quot;_blank&quot;&gt;Rich Hickey talks&lt;/a&gt; will get you fired up. In short, everything is a list, everything is an expression, and that makes for a very powerful language.&lt;/p&gt;
&lt;p name=&quot;f1f4&quot; id=&quot;f1f4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Our structure will be similar to Norvig’s tutorial, though I depart slightly in two ways:&lt;/p&gt;
&lt;ol class=&quot;postList&quot;&gt;&lt;li name=&quot;ede5&quot; id=&quot;ede5&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Instead of 2 stopping points (Lispy Calculator and Full Lispy), we have 4 stopping points. This reflects the phases I took to build it in Rust.&lt;/li&gt;
&lt;li name=&quot;7c30&quot; id=&quot;7c30&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Norvig’s syntax is based on Scheme. We will base it on Scheme too, but since I’m also a Clojure fan, I sometimes used slightly different naming, and different implementations for a few functions. I will note when I do that in the essay.&lt;/li&gt;
&lt;/ol&gt;&lt;p name=&quot;a422&quot; id=&quot;a422&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Finally, this is the first program I wrote in Rust. I may have misused some things, so if you’re a Rust hacker, I’d love to hear your feedback 🙂.&lt;/p&gt;
&lt;p name=&quot;4faf&quot; id=&quot;4faf&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;With the notes out of the way, let’s get into it.&lt;/p&gt;
&lt;h3 name=&quot;49ee&quot; id=&quot;49ee&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Language 1: &lt;em class=&quot;markup--em markup--h3-em&quot;&gt;Just a Risp calculator&lt;/em&gt;&lt;/h3&gt;
&lt;p name=&quot;e628&quot; id=&quot;e628&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;As Norvig suggests, our first goal is to create a subset of lisp, that can do what a basic calculator can do.&lt;/p&gt;
&lt;p name=&quot;3b34&quot; id=&quot;3b34&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To make it as simple as possible to follow, for language 1, &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;we’ll &lt;em class=&quot;markup--em markup--p-em&quot;&gt;only&lt;/em&gt; support addition and subtraction.&lt;/strong&gt; No variable definitions, no if statements, nada.&lt;/p&gt;
&lt;p name=&quot;1cbd&quot; id=&quot;1cbd&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This departs a bit from Lispy, but I found this stopping point a lot more convenient when writing it in Rust. So, our goal:&lt;/p&gt;
&lt;pre name=&quot;c05a&quot; id=&quot;c05a&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
(+ 10 5 2) //=&amp;gt; 17&lt;br/&gt;(- 10 5 2) //=&amp;gt; 3
&lt;/pre&gt;
&lt;p name=&quot;69ac&quot; id=&quot;69ac&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;The important process we need to remember is the flow of an interpreter:&lt;/p&gt;
&lt;p name=&quot;f9f6&quot; id=&quot;f9f6&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;our program&lt;/em&gt; ⟶ &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;parse&lt;/em&gt;&lt;/strong&gt; ⟶ &lt;em class=&quot;markup--em markup--p-em&quot;&gt;abstract syntax tree&lt;/em&gt; ⟶ &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;eval&lt;/em&gt;&lt;/strong&gt; ⟶ &lt;em class=&quot;markup--em markup--p-em&quot;&gt;result&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;bdcb&quot; id=&quot;bdcb&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We will need to &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;parse&lt;/strong&gt; our program and convert it into an abstract syntax tree. After that, we can &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;eval&lt;/strong&gt; the abstract syntax tree and get our result. (Refer to Norvig’s article for more detailed definitions and explanations).&lt;/p&gt;
&lt;h4 name=&quot;b684&quot; id=&quot;b684&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Type Definitions&lt;/h4&gt;
&lt;p name=&quot;a1c6&quot; id=&quot;a1c6&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Risp can have three kinds of values for now:&lt;/p&gt;

&lt;p name=&quot;b2e7&quot; id=&quot;b2e7&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We’ll also need an error type:&lt;/p&gt;

&lt;p name=&quot;07a8&quot; id=&quot;07a8&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Finally, we’ll need an &lt;em class=&quot;markup--em markup--p-em&quot;&gt;environment&lt;/em&gt; type. This is where we will store defined variables, built-in functions, and so forth:&lt;/p&gt;

&lt;h4 name=&quot;8e08&quot; id=&quot;8e08&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Parsing&lt;/h4&gt;
&lt;p name=&quot;e017&quot; id=&quot;e017&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Our goal is to take our program, and build an abstract syntax tree from it. For us, that is going to be a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt;. To do this, first we will take our program, and cut it up into a bunch of tokens:&lt;/p&gt;
&lt;pre name=&quot;6720&quot; id=&quot;6720&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
tokenize(&quot;(+ 10 5)&quot;) //=&amp;gt; [&quot;(&quot;, &quot;+&quot;, &quot;10&quot;, &quot;5&quot;, &quot;)&quot;]
&lt;/pre&gt;
&lt;p name=&quot;3664&quot; id=&quot;3664&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Here’s how we can do that in Rust:&lt;/p&gt;

&lt;p name=&quot;02b6&quot; id=&quot;02b6&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then, we can parse these tokens, into a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt;:&lt;/p&gt;

&lt;p name=&quot;9a3a&quot; id=&quot;9a3a&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Note:&lt;/em&gt;&lt;/strong&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;I depart slightly from Norvig’s implementation, by using a “start” position, and returning a “next” position. This lets us recurse and parse nested lists, without mutating the tokens vec.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;d7b8&quot; id=&quot;d7b8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We get the token for the current position. If it’s the beginning of a list “(“, we start reading and parsing the tokens that follow, until we hit a closing parenthesis:&lt;/p&gt;

&lt;p name=&quot;5238&quot; id=&quot;5238&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;If it’s a closing tag of a list “)”, we return an error, as read_seq should have skipped past it.&lt;/p&gt;
&lt;p name=&quot;f1d7&quot; id=&quot;f1d7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Otherwise, it can only be an atom, so we parse that:&lt;/p&gt;

&lt;h4 name=&quot;e394&quot; id=&quot;e394&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Environment&lt;/h4&gt;
&lt;p name=&quot;a6c6&quot; id=&quot;a6c6&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Let’s go ahead and create the default, global environment. As Norvig explains, environments are where we will store variable definitions and built-in functions.&lt;/p&gt;
&lt;p name=&quot;d77c&quot; id=&quot;d77c&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To implement built-in operations &lt;code class=&quot;markup--code markup--p-code&quot;&gt;(+, -)&lt;/code&gt;, we need a way to save rust function references. Let’s update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt;, so that we can store rust function references:&lt;/p&gt;

&lt;p name=&quot;3260&quot; id=&quot;3260&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then, we can create a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;default_env&lt;/code&gt; function, that returns a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispEnv&lt;/code&gt;, which implements +, and -&lt;/p&gt;

&lt;p name=&quot;fbed&quot; id=&quot;fbed&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Note:&lt;/em&gt;&lt;/strong&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;I am following Clojure’s spec for + and -.&lt;/em&gt;&lt;/p&gt;
&lt;p name=&quot;44d9&quot; id=&quot;44d9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To make this simpler, I made a quick helper, which enforces that all &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt; that we receive are floats:&lt;/p&gt;

&lt;h4 name=&quot;fd59&quot; id=&quot;fd59&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Evaluation&lt;/h4&gt;
&lt;p name=&quot;80cf&quot; id=&quot;80cf&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Now, time to implement &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;eval.&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;04e5&quot; id=&quot;04e5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If it’s a symbol, we’ll query for that symbol in the environment and return it (for now, it should be a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp::Func&lt;/code&gt;)&lt;/p&gt;
&lt;p name=&quot;ce34&quot; id=&quot;ce34&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If it’s a number, we’ll simply return it.&lt;/p&gt;
&lt;p name=&quot;9bd3&quot; id=&quot;9bd3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;If it’s a list, we’ll evaluate the first form. It should be a &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp::Func&lt;/code&gt;. Then, we’ll call that function with all the other evaluated forms as the arguments.&lt;/p&gt;

&lt;p name=&quot;635b&quot; id=&quot;635b&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Aand, bam, we have eval.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 name=&quot;f643&quot; id=&quot;f643&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Repl&lt;/h4&gt;
&lt;p name=&quot;4eeb&quot; id=&quot;4eeb&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Now, to make this fun and interactive, let’s make a repl.&lt;/p&gt;
&lt;p name=&quot;280d&quot; id=&quot;280d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;We first need a way to convert our &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt; to a string. Let’s implement the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;to_string&lt;/code&gt; trait&lt;/p&gt;

&lt;p name=&quot;2eee&quot; id=&quot;2eee&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then, let’s tie the interpreter process into a loop&lt;/p&gt;

&lt;h4 name=&quot;b63a&quot; id=&quot;b63a&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Aand, voila, language 1.0 is done. &lt;a href=&quot;https://gist.github.com/stopachka/22b4b06b8263687d7178f61fb22e1bf2&quot; data-href=&quot;https://gist.github.com/stopachka/22b4b06b8263687d7178f61fb22e1bf2&quot; class=&quot;markup--anchor markup--h4-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Here’s the code so far&lt;/a&gt; 🙂&lt;/h4&gt;
&lt;p name=&quot;32dc&quot; id=&quot;32dc&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;We can now add and subtract!&lt;/p&gt;
&lt;pre name=&quot;1cb4&quot; id=&quot;1cb4&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;risp &amp;gt;&lt;br/&gt;(+ 10 5 (- 10 3 3))&lt;br/&gt;// 🔥 =&amp;gt; 19&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 name=&quot;b949&quot; id=&quot;b949&quot; class=&quot;graf graf--h3 graf-after--pre&quot;&gt;Language 1.1: Risp calculator++&lt;/h3&gt;
&lt;p name=&quot;35aa&quot; id=&quot;35aa&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Okay, we have a basic calculator. Now, let’s add support for booleans, and introduce some equality comparators.&lt;/p&gt;
&lt;p name=&quot;43c8&quot; id=&quot;43c8&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To implement bools, let’s include it in our &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp&lt;/code&gt;&lt;/p&gt;

&lt;p name=&quot;45e3&quot; id=&quot;45e3&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Rust will tell us to update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;ToString&lt;/code&gt;&lt;/p&gt;

&lt;p name=&quot;c6ad&quot; id=&quot;c6ad&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then Rust will tell us we should change &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval&lt;/code&gt;, to consider bools:&lt;/p&gt;

&lt;p name=&quot;bdd0&quot; id=&quot;bdd0&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Let’s also update our &lt;code class=&quot;markup--code markup--p-code&quot;&gt;parse_atom&lt;/code&gt; function, to consider bools:&lt;/p&gt;

&lt;p name=&quot;7e9e&quot; id=&quot;7e9e&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Now, we &lt;em class=&quot;markup--em markup--p-em&quot;&gt;should&lt;/em&gt; be good to go. To really see these in action though, let’s implement &lt;code class=&quot;markup--code markup--p-code&quot;&gt;=, &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/code&gt;&lt;/p&gt;
&lt;h4 name=&quot;c5e3&quot; id=&quot;c5e3&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Comparison Operators&lt;/h4&gt;
&lt;p name=&quot;9568&quot; id=&quot;9568&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;In clojure, these comparison operators are a bit special. They can take more than 2 args, and return true if they are in a monotonic order that satisfies the operator.&lt;/p&gt;
&lt;p name=&quot;6276&quot; id=&quot;6276&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;For example &lt;code class=&quot;markup--code markup--p-code&quot;&gt;(&amp;gt; 6 5 3 2)&lt;/code&gt; is true, because 6 &amp;gt; 5 &amp;gt; 3 &amp;gt; 2. Let’s do this for Risp:&lt;/p&gt;

&lt;p name=&quot;b2a6&quot; id=&quot;b2a6&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The key here is our helper macro &lt;code class=&quot;markup--code markup--p-code&quot;&gt;ensure_tonicty&lt;/code&gt;. This takes a checker function, and ensures that the conditional passes in a monotonic way:&lt;/p&gt;

&lt;h4 name=&quot;be5a&quot; id=&quot;be5a&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Aand, voila, language 1.1 is done. &lt;a href=&quot;https://gist.github.com/stopachka/ddedb35ca7fc9ea5dd320c218e9054c8&quot; data-href=&quot;https://gist.github.com/stopachka/ddedb35ca7fc9ea5dd320c218e9054c8&quot; class=&quot;markup--anchor markup--h4-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Here’s the code so far&lt;/a&gt; 🙂&lt;/h4&gt;
&lt;p name=&quot;a737&quot; id=&quot;a737&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;We can now use comparators, and see booleans!&lt;/p&gt;
&lt;pre name=&quot;2c0b&quot; id=&quot;2c0b&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;risp &amp;gt;&lt;br/&gt;(&amp;gt; 6 4 3 1)&lt;br/&gt;// 🔥 =&amp;gt; true&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 name=&quot;14c4&quot; id=&quot;14c4&quot; class=&quot;graf graf--h3 graf-after--pre&quot;&gt;Language 1.2: Almost Risp&lt;/h3&gt;
&lt;p name=&quot;bcda&quot; id=&quot;bcda&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Okay, now, let’s make this a &lt;em class=&quot;markup--em markup--p-em&quot;&gt;language.&lt;/em&gt; Let’s introduce &lt;code class=&quot;markup--code markup--p-code&quot;&gt;def&lt;/code&gt; and &lt;code class=&quot;markup--code markup--p-code&quot;&gt;if&lt;/code&gt;.&lt;/p&gt;
&lt;p name=&quot;9db1&quot; id=&quot;9db1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To do this, let’s update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval&lt;/code&gt; to deal with built-in operators:&lt;/p&gt;

&lt;p name=&quot;53f8&quot; id=&quot;53f8&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We take the first form, and try to eval it as a built-in. If we can, voila, otherwise we evaluate as normal.&lt;/p&gt;
&lt;p name=&quot;3128&quot; id=&quot;3128&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Here’s how &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval_built_in_form&lt;/code&gt; looks:&lt;/p&gt;

&lt;h4 name=&quot;43bd&quot; id=&quot;43bd&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;if&lt;/h4&gt;
&lt;p name=&quot;e50f&quot; id=&quot;e50f&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Here’s how we can implement if:&lt;/p&gt;

&lt;h4 name=&quot;4d91&quot; id=&quot;4d91&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;def&lt;/h4&gt;
&lt;p name=&quot;6cd7&quot; id=&quot;6cd7&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;And here’s def:&lt;/p&gt;

&lt;h4 name=&quot;7e46&quot; id=&quot;7e46&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Aand bam, language 1.2 is done. &lt;a href=&quot;https://gist.github.com/stopachka/b862ed8ee719d8532f5c5cdb1bd2867f&quot; data-href=&quot;https://gist.github.com/stopachka/b862ed8ee719d8532f5c5cdb1bd2867f&quot; class=&quot;markup--anchor markup--h4-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Here’s the code so far&lt;/a&gt; 🙂&lt;/h4&gt;
&lt;p name=&quot;2510&quot; id=&quot;2510&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;We now have some coool built-in functions.&lt;/p&gt;
&lt;pre name=&quot;8752&quot; id=&quot;8752&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;risp &amp;gt;&lt;br/&gt;(def a 1)&lt;br/&gt;// 🔥 =&amp;gt; a&lt;br/&gt;risp &amp;gt;&lt;br/&gt;(+ a 1)&lt;br/&gt;// 🔥 =&amp;gt; 2&lt;br/&gt;risp &amp;gt;&lt;br/&gt;(if (&amp;gt; 2 4 6) 1 2)&lt;br/&gt;// 🔥 =&amp;gt; 2&lt;br/&gt;risp &amp;gt;&lt;br/&gt;(if (&amp;lt; 2 4 6) 1 2)&lt;br/&gt;// 🔥 =&amp;gt; 1&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 name=&quot;5891&quot; id=&quot;5891&quot; class=&quot;graf graf--h3 graf-after--pre&quot;&gt;Language 2: Full Risp&lt;/h3&gt;
&lt;p name=&quot;a287&quot; id=&quot;a287&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Now, let’s make this a full-on language. Let’s implement &lt;code class=&quot;markup--code markup--p-code&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;lambdas&lt;/em&gt;&lt;/code&gt;! Our syntax can look like this:&lt;/p&gt;
&lt;pre name=&quot;a660&quot; id=&quot;a660&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;(def add-one (fn (a) (+ 1 a)))&lt;br/&gt;(add-one 1) // =&amp;gt; 2&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 name=&quot;910f&quot; id=&quot;910f&quot; class=&quot;graf graf--h4 graf-after--pre&quot;&gt;First, create the lambda expression&lt;/h4&gt;
&lt;p name=&quot;d565&quot; id=&quot;d565&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;First things first, let’s introduce a Lambda type for our RispExp&lt;/p&gt;

&lt;p name=&quot;c6a9&quot; id=&quot;c6a9&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Rust will tell us to update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;ToString&lt;/code&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;p name=&quot;3dfd&quot; id=&quot;3dfd&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then Rust will tell us to update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval&lt;/code&gt;:&lt;/p&gt;

&lt;h4 name=&quot;6913&quot; id=&quot;6913&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Then, support the built-in constructor&lt;/h4&gt;
&lt;p name=&quot;4d81&quot; id=&quot;4d81&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Now, let’s update &lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;eval,&lt;/strong&gt; to handle fn — this will be the built-in call that creates a Lambda expression:&lt;/p&gt;

&lt;p name=&quot;bd4f&quot; id=&quot;bd4f&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval_lambda_args&lt;/code&gt; can look like this:&lt;/p&gt;

&lt;h4 name=&quot;06d9&quot; id=&quot;06d9&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Then, let’s support scoped environments&lt;/h4&gt;
&lt;p name=&quot;1182&quot; id=&quot;1182&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;For now we only have a global environment. To support lambdas, we need to introduce the concept of scoped environments. Whenever we call a lambda, we’ll need to instantiate a new environment.&lt;/p&gt;
&lt;p name=&quot;e60d&quot; id=&quot;e60d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;To do this, let’s first update our &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispEnv&lt;/code&gt; struct, to keep an outer reference:&lt;/p&gt;

&lt;p name=&quot;1ebd&quot; id=&quot;1ebd&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Let’s update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;default_env&lt;/code&gt;, to specify the lifetime and return None as the outer environment:&lt;/p&gt;

&lt;p name=&quot;5a0d&quot; id=&quot;5a0d&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then, let’s update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval&lt;/code&gt;, to recursively search for symbols in our environment:&lt;/p&gt;

&lt;h4 name=&quot;f666&quot; id=&quot;f666&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Finally, let’s support calling lambdas&lt;/h4&gt;
&lt;p name=&quot;70a1&quot; id=&quot;70a1&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Let’s update &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval&lt;/code&gt;, so that we know what to do when the first form in a list is a lambda:&lt;/p&gt;

&lt;p name=&quot;ef7c&quot; id=&quot;ef7c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;We first have a quick helper function to eval a list of expressions, as we’ll be doing that both for &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp::Func&lt;/code&gt; and &lt;code class=&quot;markup--code markup--p-code&quot;&gt;RispExp::Lambda&lt;/code&gt;&lt;/p&gt;

&lt;p name=&quot;a966&quot; id=&quot;a966&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Then, we create a function call &lt;code class=&quot;markup--code markup--p-code&quot;&gt;env_for_lambda&lt;/code&gt;. This will get the &lt;code class=&quot;markup--code markup--p-code&quot;&gt;params_exp&lt;/code&gt;, and create an environment, where each param corresponds to the argument at that index:&lt;/p&gt;

&lt;p name=&quot;c896&quot; id=&quot;c896&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;To do this, we need the helper &lt;code class=&quot;markup--code markup--p-code&quot;&gt;parse_list_of_symbol_strings&lt;/code&gt;, to make sure all of our param definitions are in fact symbols:&lt;/p&gt;

&lt;p name=&quot;262f&quot; id=&quot;262f&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;With that, we can &lt;code class=&quot;markup--code markup--p-code&quot;&gt;eval(lambda.body_exp, new_env)&lt;/code&gt;, and…&lt;/p&gt;
&lt;h4 name=&quot;5f85&quot; id=&quot;5f85&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Voila…language 2.0 is done. &lt;a href=&quot;https://gist.github.com/stopachka/28b7322eecddf17766e2ee3fa3939cf6&quot; data-href=&quot;https://gist.github.com/stopachka/28b7322eecddf17766e2ee3fa3939cf6&quot; class=&quot;markup--anchor markup--h4-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;Take a look at the code so far&lt;/a&gt; 🙂&lt;/h4&gt;
&lt;p name=&quot;5686&quot; id=&quot;5686&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;We now support lambdas!&lt;/p&gt;
&lt;pre name=&quot;82c4&quot; id=&quot;82c4&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
&lt;code class=&quot;markup--code markup--pre-code&quot;&gt;risp &amp;gt;&lt;br/&gt;(def add-one (fn (a) (+ 1 a)))&lt;br/&gt;// 🔥 =&amp;gt; add-one&lt;br/&gt;risp &amp;gt;&lt;br/&gt;(add-one 1)&lt;br/&gt;// 🔥 =&amp;gt; 2&lt;/code&gt;
&lt;/pre&gt;
&lt;h3 name=&quot;dd7b&quot; id=&quot;dd7b&quot; class=&quot;graf graf--h3 graf-after--pre&quot;&gt;Fin&lt;/h3&gt;
&lt;p name=&quot;1561&quot; id=&quot;1561&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;And with that, we’ve reached the end of this adventure. I hope it’s been fun!&lt;/p&gt;
&lt;p name=&quot;1318&quot; id=&quot;1318&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There’s still a bunch more to implement, and ways we can make this even more elegant. If you get to it, send me your thoughts 🙂.&lt;/p&gt;
&lt;p name=&quot;f690&quot; id=&quot;f690&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;Finally, I have to say, I loved using Rust. It’s the least mental overhead I’ve had to maintain with a systems language, and it was a blast to use. The community is alive and well, plus — &lt;a href=&quot;https://doc.rust-lang.org/book&quot; data-href=&quot;https://doc.rust-lang.org/book&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noreferrer nofollow noopener noopener&quot; target=&quot;_blank&quot;&gt;their guides are phenomenal&lt;/a&gt;! Give it a shot if you haven’t already.&lt;/p&gt;
</description>
<pubDate>Thu, 02 May 2019 17:49:51 +0000</pubDate>
<dc:creator>stopachka</dc:creator>
<og:title>Risp (Lisp (in (Rust)))</og:title>
<og:url>https://m.stopa.io/risp-lisp-in-rust-90a0dad5b116</og:url>
<og:description>Many years ago, Peter Norvig wrote a beautiful article about creating a lisp interpreter in Python. It’s the most fun tutorial I’ve seen…</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://m.stopa.io/risp-lisp-in-rust-90a0dad5b116?gi=268a4a5c9732</dc:identifier>
</item>
<item>
<title>Google Will Soon Let Users Automatically Scrub Location and Web History</title>
<link>https://www.buzzfeednews.com/article/pranavdixit/google-will-soon-let-you-automatically-scrub-your-location</link>
<guid isPermaLink="true" >https://www.buzzfeednews.com/article/pranavdixit/google-will-soon-let-you-automatically-scrub-your-location</guid>
<description>&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;41.060975609756&quot;&gt;

&lt;p&gt;It’s no secret that Google tracks a lot of data about you, from the websites you visit to the videos you watch, the things you’ve searched for, and the places you have visited. Scrubbing this data from your Google account has required you to manually dig into your settings each time. That’s changing soon.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;In the next few weeks, Google will be &lt;a href=&quot;https://blog.google/technology/safety-security/automatically-delete-data/&quot; target=&quot;_blank&quot;&gt;rolling out&lt;/a&gt; a feature to users around the world that will let them set this information to be deleted automatically every three or 18 months.&lt;/p&gt;
&lt;/div&gt;&lt;div data-module=&quot;subbuzz-text&quot; readability=&quot;53.442020665901&quot;&gt;

&lt;p&gt;&quot;We work to keep your data private and secure, and we’ve heard your feedback that we need to provide simpler ways for you to manage or delete it,&quot; Google said in a &lt;a href=&quot;https://blog.google/technology/safety-security/automatically-delete-data/&quot; target=&quot;_blank&quot;&gt;blog post&lt;/a&gt; published Wednesday.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;For now, these controls are only coming to your location history and web and app activity, but it’s likely that they’ll come to more of your data history at some point.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Scrubbing this information from your Google account will make using Google services slightly less useful. After all, Google uses the data it collects about you to personalize its services by recommending restaurants, movies, music; adding appointments to your calendar; telling you whether it’s going to rain in your city; and, of course, serving you ads.&lt;/p&gt;
&lt;p&gt;On the flip side, being able to get a giant corporation that guzzles all of your data to delete it periodically is a definite plus for privacy.&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 02 May 2019 15:37:11 +0000</pubDate>
<dc:creator>siberianbear</dc:creator>
<og:url>https://www.buzzfeednews.com/article/pranavdixit/google-will-soon-let-you-automatically-scrub-your-location</og:url>
<og:image>https://img.buzzfeed.com/buzzfeed-static/static/2019-05/2/12/campaign_images/buzzfeed-prod-web-01/google-will-soon-let-you-automatically-scrub-your-2-11222-1556814245-0_dblbig.jpg</og:image>
<og:title>Google Will Soon Let You Automatically Scrub Your Location And Web History From Your Account Every Few Months</og:title>
<og:description>It’s a plus for privacy.</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.buzzfeednews.com/article/pranavdixit/google-will-soon-let-you-automatically-scrub-your-location</dc:identifier>
</item>
</channel>
</rss>