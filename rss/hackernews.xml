<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>SpaceX Gets FCC Approval to Sell Wireless High-Speed Home Internet from Space</title>
<link>https://www.cordcuttersnews.com/spacex-gets-fcc-approval-to-sell-wireless-high-speed-home-internet-from-space/</link>
<guid isPermaLink="true" >https://www.cordcuttersnews.com/spacex-gets-fcc-approval-to-sell-wireless-high-speed-home-internet-from-space/</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://i0.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745.jpg?ssl=1&quot;&gt;&lt;img class=&quot;aligncenter wp-image-8360&quot; src=&quot;https://i2.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745-1024x589.jpg?resize=556%2C320&amp;amp;ssl=1&quot; alt=&quot;&quot; width=&quot;556&quot; height=&quot;320&quot; srcset=&quot;https://i0.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745.jpg?resize=1024%2C589&amp;amp;ssl=1 1024w, https://i0.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745.jpg?resize=300%2C172&amp;amp;ssl=1 300w, https://i0.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745.jpg?resize=768%2C442&amp;amp;ssl=1 768w, https://i0.wp.com/www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745.jpg?w=2000&amp;amp;ssl=1 2000w&quot; sizes=&quot;(max-width: 556px) 100vw, 556px&quot; data-recalc-dims=&quot;1&quot;/&gt;&lt;/a&gt;SpaceX just received approval from the FCC to launch 4,425 satellites into space to build a low earth orbit network of satellites to sell home Internet.&lt;/p&gt;&lt;p&gt;Unlike current satellite Internet, these devices will be in a far lower orbit and offer far faster speeds without the data caps current satellite systems use.&lt;/p&gt;
&lt;p&gt;The goal is that this new system will offer robust high-speed Internet, especially in developing countries and rural parts of developed nations like the United States. While you may not be running out to buy this if you have fiber Internet, it could bring true wireless Internet options to Americans who currently have no real options.&lt;/p&gt;
&lt;p&gt;“This approval underscores the FCC’s confidence in SpaceX’s plans to deploy its next-generation satellite constellation and connect people around the world with reliable and affordable broadband service,” SpaceX President Gwynne Shotwell said in a statement.&lt;/p&gt;
&lt;p&gt;SpaceX has already launched several test satellites to prove the system works. Now they have permission to move forward with a larger rollout of 4,425 satellites.&lt;/p&gt;
&lt;p&gt;The system also promises to help relief efforts that currently spend hundreds of dollars a day for 5 Mbps Internet. With this system, relief workers can access high speed Internet even in areas hit by a major disaster.&lt;/p&gt;
&lt;p&gt;Source: T&lt;a href=&quot;https://www.theverge.com/2019/4/27/18519778/spacex-starlink-fcc-approval-satellite-internet-constellation-lower-orbit&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;he Verge&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please follow us on &lt;a href=&quot;https://www.facebook.com/CordCuttersNews&quot;&gt;Facebook &lt;/a&gt;and &lt;a href=&quot;https://twitter.com/CordCuttersNews&quot;&gt;Twitter &lt;/a&gt;for more news, tips, and reviews. Need cord cutting tech support? Join our &lt;a href=&quot;https://www.facebook.com/groups/1660471757498986/&quot;&gt;Cord Cutting Tech Support Facebook Group&lt;/a&gt; for help.&lt;/p&gt;
&lt;p&gt;Did you know we have a &lt;a href=&quot;https://www.youtube.com/CordCuttersNews&quot;&gt;YouTube Channel&lt;/a&gt;? Every week we have a live&lt;a href=&quot;https://www.youtube.com/CordCuttersNews&quot;&gt; Cord Cutting Q&amp;amp;A, and weekly Cord Cutting recap shows exclusively on our YouTube Channel&lt;/a&gt;!&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 21:37:45 +0000</pubDate>
<dc:creator>hsnewman</dc:creator>
<og:type>article</og:type>
<og:title>SpaceX Gets FCC Approval to Sell Wireless High-Speed Home Internet from Space - Cord Cutters News</og:title>
<og:description>SpaceX just received approval from the FCC to launch 4,425 satellites into space to build a low earth orbit network of satellites to sell home Internet. Unlike current satellite Internet, these devices will be in a far lower orbit and offer far faster speeds without the data caps current satellite systems use. The goal is …</og:description>
<og:url>https://www.cordcuttersnews.com/spacex-gets-fcc-approval-to-sell-wireless-high-speed-home-internet-from-space/</og:url>
<og:image>https://www.cordcuttersnews.com/wp-content/uploads/2016/08/Streaming-Couple-e1472507396745-1024x589.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.cordcuttersnews.com/spacex-gets-fcc-approval-to-sell-wireless-high-speed-home-internet-from-space/</dc:identifier>
</item>
<item>
<title>Jenkins Is Getting Old</title>
<link>https://itnext.io/jenkins-is-getting-old-2c98b3422f79</link>
<guid isPermaLink="true" >https://itnext.io/jenkins-is-getting-old-2c98b3422f79</guid>
<description>&lt;div class=&quot;uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup&quot;&gt;
&lt;div class=&quot;u-flex0&quot;&gt;
&lt;div class=&quot;u-relative u-inlineBlock u-flex0&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/fit/c/100/100/1*X5jTpYwY9coi7IYYtYvRcg.png&quot; class=&quot;avatar-image u-size50x50&quot; alt=&quot;Go to the profile of Erik Englund&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*ROPvSRRCnJ_9XRVHhWgYtw.jpeg&quot; data-width=&quot;6061&quot; data-height=&quot;4912&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*ROPvSRRCnJ_9XRVHhWgYtw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*ROPvSRRCnJ_9XRVHhWgYtw.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;rawpixel.com&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/grayscale-photo-of-man-1573823/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/grayscale-photo-of-man-1573823/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;p name=&quot;5815&quot; id=&quot;5815&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;For the longest time Jenkins has, in my opinion, really been the only game in town when it came to Continuous Integration (CI) and even to some extent Continuous Deployment (CD). However, after several years of using, and fighting Jenkins I think it may be time to move on. Like so many other programs Jenkins has become a victim of its own success.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*LOFbTP2SxXcFpM_qTsUSuw.png&quot; data-width=&quot;800&quot; data-height=&quot;800&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*LOFbTP2SxXcFpM_qTsUSuw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*LOFbTP2SxXcFpM_qTsUSuw.png&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;6145&quot; id=&quot;6145&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Jenkins began life as Hudson back in 2005. It gained notoriety in 2008 as the winner of the Duke’s Choice award at Java One. When Oracle bought Sun the Open source community decided to fork a new project, Jenkins, in order to maintain it as a truly open source and free endeavor. It has continued to live on as such since then.&lt;/p&gt;
&lt;p name=&quot;6c5f&quot; id=&quot;6c5f&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;I’ve been with Jenkins through much of my career. First as a consumer of Jenkins artifacts when it was still Hudson, and now as a dev ops admin with Jenkins, creating and configuring thousands of jobs across a vast team.&lt;/p&gt;
&lt;p name=&quot;2219&quot; id=&quot;2219&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Jenkins has grown and matured much in those years. But all is not well. I find myself fighting aspects of Jenkins on a daily basis. While some strides have been made to address some of my concerns others are intractable problems that delve to the core of how Jenkins works.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Tu0vVJG1cbV-32gemOzAXw.jpeg&quot; data-width=&quot;4608&quot; data-height=&quot;3456&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Tu0vVJG1cbV-32gemOzAXw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Tu0vVJG1cbV-32gemOzAXw.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@energepic-com-27411?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@energepic-com-27411?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;energepic.com&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/houses-businessman-man-hands-110469/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/houses-businessman-man-hands-110469/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h3 name=&quot;40d0&quot; id=&quot;40d0&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Build Configuration&lt;/h3&gt;
&lt;p name=&quot;eac0&quot; id=&quot;eac0&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Jenkins' core components are Jobs. These are the build configurations that tell Jenkins what and how to do stuff.&lt;/p&gt;
&lt;h4 name=&quot;4c11&quot; id=&quot;4c11&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Web UI&lt;/h4&gt;
&lt;p name=&quot;a9aa&quot; id=&quot;a9aa&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;At first everything was done through the UI. All projects were configured through very easy to use web forms. This was great, at first. But it soon became apparent that this was difficult to backup, and maintain. Also with the growing desire for configuration as code this didn’t fit well. Configuring large numbers of jobs was tedious and error prone. Maintaining those configurations was even harder.&lt;/p&gt;
&lt;h4 name=&quot;b315&quot; id=&quot;b315&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Job DSL&lt;/h4&gt;
&lt;p name=&quot;293e&quot; id=&quot;293e&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Next came &lt;a href=&quot;https://github.com/jenkinsci/job-dsl-plugin&quot; data-href=&quot;https://github.com/jenkinsci/job-dsl-plugin&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Jenkins Job DSL&lt;/a&gt;. This was a welcome step towards configuration driven development. Jenkins Job DSL allowed you to use Groovy to &lt;em class=&quot;markup--em markup--p-em&quot;&gt;code&lt;/em&gt; your jobs. You could create reusable classes and methods to generate 10's, 100’s, 1000’s of jobs with little work as an admin. As an added benefit we could also source control the job configurations.&lt;/p&gt;
&lt;pre name=&quot;cc00&quot; id=&quot;cc00&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
def gitUrl = 'git://github.com/jenkinsci/job-dsl-plugin.git'
&lt;/pre&gt;
&lt;pre name=&quot;b1b3&quot; id=&quot;b1b3&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
job('PROJ-unit-tests') {&lt;br/&gt;scm {&lt;br/&gt;git(gitUrl)&lt;br/&gt;}&lt;br/&gt;triggers {&lt;br/&gt;scm('*/15 * * * *')&lt;br/&gt;}&lt;br/&gt;steps {&lt;br/&gt;maven('-e clean test')&lt;br/&gt;maven('-B release:prepare release:perform')&lt;br/&gt;shell('cleanup.sh')&lt;br/&gt;}&lt;br/&gt;}
&lt;/pre&gt;
&lt;p name=&quot;a1b9&quot; id=&quot;a1b9&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;But all was not well. Job DSL had (has) several key flaws.&lt;/p&gt;
&lt;p name=&quot;d331&quot; id=&quot;d331&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It wasn’t always easy to start from scratch. The seed job pattern was difficult to pull off.&lt;/p&gt;
&lt;p name=&quot;fe0e&quot; id=&quot;fe0e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Testing of build scripts was nearly impossible. This led sys admins to testing configuration in production. Also experimenting on new features was very difficult to do. What if you wanted one branch to build differently than other branches? You could do this but it wasn’t very clean.&lt;/p&gt;
&lt;p name=&quot;6bc4&quot; id=&quot;6bc4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;While the Job DSL was centrally maintained, which the SA’s loved, it left the developers feeling like second class citizens when it came to configuring the jobs. Not all Jobs fell into the exact same pattern. This often led to very complex DSL scripts.&lt;/p&gt;
&lt;h4 name=&quot;a851&quot; id=&quot;a851&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Jenkins Pipeline&lt;/h4&gt;
&lt;p name=&quot;bab1&quot; id=&quot;bab1&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Recently the move has been to &lt;a href=&quot;https://jenkins.io/doc/book/pipeline/jenkinsfile/&quot; data-href=&quot;https://jenkins.io/doc/book/pipeline/jenkinsfile/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Jenkins Pipeline&lt;/a&gt; or as many refer to them as Jenkinsfile, since the build is driven off a special file in the repository of the name Jenkinsfile. Jenkinsfile puts the control back in the developers hands. The build configuration is stored with the code. This allows for different branches to behave differently depending on the Jenkinsfile configuration in that branch. SA’s can still maintain a set of core functionality that the developers can import into their scripts and customize as needed.&lt;/p&gt;
&lt;pre name=&quot;a2d0&quot; id=&quot;a2d0&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
pipeline {&lt;br/&gt;agent any &lt;br/&gt;stages {&lt;br/&gt;stage('Build') { &lt;br/&gt;steps {&lt;br/&gt;// &lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;stage('Test') { &lt;br/&gt;steps {&lt;br/&gt;// &lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;stage('Deploy') { &lt;br/&gt;steps {&lt;br/&gt;// &lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;}
&lt;/pre&gt;
&lt;p name=&quot;afbb&quot; id=&quot;afbb&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;While this does provide the ability to experiment in a more isolated environment it still has several problems. Although, Jenkinsfile is technically groovy you can’t do many groovy things you would normally think you could do because of the tight security concerns. Often this would show up as weird errors like not being able to do a &lt;em class=&quot;markup--em markup--p-em&quot;&gt;for each&lt;/em&gt; on a list. I can’t tell you how many times I’ve been coding in Jenkinsfile just to have something seemingly benign blow up due to security script permissions. This then requires someone to login to Jenkins, approve the call, and run the job again. Rinse and repeat until hopefully the job completes. On top of all those, the whitelist can’t be configured and stored externally. Therefore, when you start a new Jenkins instance with your library you have to go through approving all those same scripts all of again. And you can’t approve a script until after it fails. So, good luck making sure everything is correctly approved.&lt;/p&gt;
&lt;p name=&quot;661e&quot; id=&quot;661e&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Jenkinsfile is split into stages. This allows for nice isolation of build ideas like building, testing, releasing etc. However, the open source version of Jenkins does not support restarting a build from a stage within a Jenkinsfile. It’s all or nothing. For short small builds this isn’t a big deal. For larger builds, this is a deal breaker.&lt;/p&gt;
&lt;p name=&quot;7766&quot; id=&quot;7766&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Cloud bees needs to get its act together here. First they said, that incremental builds would only be supported in the commercial variant of Jenkins. This pissed lots of people off. Then they said, “fine we’ll bring it to the free version.” Then only a few months later they changed their mind again back to commercial only. Look, I get it. We all need to make money, but come on! This is turning Jenkins into cripple-wear.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*Nnuy4-6aLgFNIRybwdjEvw.jpeg&quot; data-width=&quot;4000&quot; data-height=&quot;2666&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*Nnuy4-6aLgFNIRybwdjEvw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*Nnuy4-6aLgFNIRybwdjEvw.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;rawpixel.com&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/red-and-three-blue-jigsaw-puzzles-1246743/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/red-and-three-blue-jigsaw-puzzles-1246743/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h4 name=&quot;794d&quot; id=&quot;794d&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Plugins&lt;/h4&gt;
&lt;p name=&quot;733c&quot; id=&quot;733c&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;On its own the core of Jenkins is fairly small. But no one runs Jenkins this way. You need, and want, plugins. Plugins are awesome. They allow third parties to write new functionality into Jenkins. We get pages with all kinds of content merged together. For example, I can have a build that displays code coverage, units test history, static code analysis trends and more. Wonderful right. On the surface yes.&lt;/p&gt;
&lt;p name=&quot;f182&quot; id=&quot;f182&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;But plugins have a dark side.&lt;/p&gt;
&lt;p name=&quot;3ad7&quot; id=&quot;3ad7&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Because of plugins, and plugin versions, maintaining Jenkins is a nightmare. Plugin’s are deployed INTO Jenkins. As part of the single Jenkins Master web container. This means they all share a common classpath.&lt;/p&gt;
&lt;p name=&quot;db50&quot; id=&quot;db50&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;How do I know if I’m going to break something?&lt;/p&gt;
&lt;p name=&quot;4aed&quot; id=&quot;4aed&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;A lot of times upgrading Jenkins also changes the underlying configuration files. If you use Jenkins Job DSL then you must ensure it stays in sync with your version of Jenkins AND all the installed plugins. This forces you to have multiple Jenkins instances. But you can’t easily do traditional canary deployment patterns with Jenkins.&lt;/p&gt;
&lt;p name=&quot;d430&quot; id=&quot;d430&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;This ends up stagnating new features and delaying upgrades.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*ELZ3FIpFCx4Cbe7Gq24YFA.jpeg&quot; data-width=&quot;2592&quot; data-height=&quot;1728&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*ELZ3FIpFCx4Cbe7Gq24YFA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*ELZ3FIpFCx4Cbe7Gq24YFA.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@pixabay?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@pixabay?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pixabay&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/batch-books-document-education-357514/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/batch-books-document-education-357514/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h4 name=&quot;a8c0&quot; id=&quot;a8c0&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;File Data&lt;/h4&gt;
&lt;p name=&quot;23ca&quot; id=&quot;23ca&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;All the data that Jenkins generates and uses to render all those lovely build result pages is stored as files. Lots, and lots and lots of files. This makes Jenkins performance incredibly IO bound. It is not unusual for large pipeline views to take several seconds to render. These large files also make Jenkins very memory intensive. Lots of times Jenkins parses these files as entire DOM’s, loading the whole contents of the file into memory. It is not unusually for Jenkins to use several Gigabytes of heap size. In fact, our production Jenkins instance has a 32 GB heap just to keep things running.&lt;/p&gt;
&lt;h4 name=&quot;53af&quot; id=&quot;53af&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Memory&lt;/h4&gt;
&lt;p name=&quot;ba80&quot; id=&quot;ba80&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Speaking of memory because all the plugins are actually code that is loaded into Jenkins it is quite common to see large memory leaks. This isn’t the core Jenkins’ fault but it will still take down the server. We now schedule regular restarts of our Jenkins instance to alleviate the memory leaks.&lt;/p&gt;
&lt;h4 name=&quot;bc3a&quot; id=&quot;bc3a&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;System Groovy Scripts&lt;/h4&gt;
&lt;p name=&quot;afc0&quot; id=&quot;afc0&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;If you are every tempted to use System Groovy scripts, DON’T! You can (will) mess up Jenkins all to easilly. This is because the script is not a forked process, instead the script runs IN Jenkins. This is on purpose since as a system groovy script you want access to Jenkins itself and the actual running classes. But that means you also have access to the direct JVM and process that is running Jenkins. Therefore, you can mess with the class path, the heap, and even take the whole thing down (System.exit?)&lt;/p&gt;
&lt;h4 name=&quot;0728&quot; id=&quot;0728&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Jenkins Configuration&lt;/h4&gt;
&lt;p name=&quot;6068&quot; id=&quot;6068&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;While Job DSL and Jenkins file help in the configuration of Jobs they do very little when it comes to configuring Jenkins itself. You WILL need to configure Jenkins to connect to your static slaves or Mesos clusters, or setting up security or configuration environment variables, build tools etc. Job DSL has some libraires you can use to do this but they are hard to understand and impossible to test.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*itpAdE6O7ldkLqBqvW2ZTA.jpeg&quot; data-width=&quot;5472&quot; data-height=&quot;3648&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*itpAdE6O7ldkLqBqvW2ZTA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*itpAdE6O7ldkLqBqvW2ZTA.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@startup-stock-photos?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@startup-stock-photos?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Startup Stock Photos&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/man-wearing-black-and-white-stripe-shirt-looking-at-white-printer-papers-on-the-wall-212286/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/man-wearing-black-and-white-stripe-shirt-looking-at-white-printer-papers-on-the-wall-212286/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h4 name=&quot;a1ef&quot; id=&quot;a1ef&quot; class=&quot;graf graf--h4 graf-after--figure&quot;&gt;Impossible To Test&lt;/h4&gt;
&lt;p name=&quot;9e7f&quot; id=&quot;9e7f&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;I’ve said this once, twice, a thousands times. Jenkins is IMPOSSIBLE to test. Who would use a programming language that you couldn’t test except for in production. No one! Some of you may be saying of course you can test Jenkins. Believe me I’ve tried. How do you truly test it? We’ve tried starting up local instance of Jenkins, but this quickly breaks down when it comes to actually running the builds. What about the actual configuration? You need to configure access to the cluster, mock critical infrastructure like artifactory and DTR. It’s just really hard. And on top of all that you want your tests to not effect the actual system. Several times our “tests” have caused production issues due to the lack of isolation.&lt;/p&gt;
&lt;h4 name=&quot;dd77&quot; id=&quot;dd77&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Upgrades&lt;/h4&gt;
&lt;p name=&quot;f5e9&quot; id=&quot;f5e9&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;I mentioned this briefly in plugins but upgrades are a real problem. When you upgrade a plugin or even Jenkins itself its ALL or nothing. If you have one job that needs an older version of a plugin and another Job that wants a newer version you are stuck. You will need multiple Jenkins instances. Migrating to new versions isn’t always possible since upgrading a plugin can cause the underlying XML to change as well. Therefore, rollbacks can be nearly impossible.&lt;/p&gt;
&lt;h4 name=&quot;8d3d&quot; id=&quot;8d3d&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Jenkins Web UI&lt;/h4&gt;
&lt;p name=&quot;675e&quot; id=&quot;675e&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;The actual web UI is run on a single web container known affectionately as Jenkins Master. You can have only ONE of these. It does not support any kind of clustering or failover. So if you have a very large team of developers all hitting Jenkins the one instance needs to be very beefy and constantly monitored.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*kzvzYS2sDiWuNBU2d3e4Aw.jpeg&quot; data-width=&quot;3991&quot; data-height=&quot;2618&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*kzvzYS2sDiWuNBU2d3e4Aw.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*kzvzYS2sDiWuNBU2d3e4Aw.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@chanaka-318741?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@chanaka-318741?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Chanaka&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/cargo-container-lot-906494/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/cargo-container-lot-906494/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h3 name=&quot;8ed3&quot; id=&quot;8ed3&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Modularization&lt;/h3&gt;
&lt;p name=&quot;83bd&quot; id=&quot;83bd&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The core problem to Jenkins is its a monolith. Everything lives together, the plugins, the configuration, the web ui, Jenkins core, everything in one large web application. Its time we started applying the lessons we’ve learned on our own production systems to Jenkins itself. Jenkins needs to be a cloud native modular system.&lt;/p&gt;
&lt;h4 name=&quot;64c5&quot; id=&quot;64c5&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Jenkins X&lt;/h4&gt;
&lt;p name=&quot;ed6a&quot; id=&quot;ed6a&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Jenkins X is an effort to bring Jenkins to cloud native environment of Kubernetes. Although, my experience with Jenkins X is limited I still feel it doesn’t address many of my concerns of modular disconnected components and easy testing.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*tPL7VedpJjKplVYMRwKfew.jpeg&quot; data-width=&quot;5105&quot; data-height=&quot;3403&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*tPL7VedpJjKplVYMRwKfew.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*tPL7VedpJjKplVYMRwKfew.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@pixabay?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@pixabay?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pixabay&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/calm-daylight-evening-grass-267967/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/calm-daylight-evening-grass-267967/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h3 name=&quot;6f22&quot; id=&quot;6f22&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;My Dream&lt;/h3&gt;
&lt;p name=&quot;8a41&quot; id=&quot;8a41&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;My ideal CI/CD system needs to:&lt;/p&gt;
&lt;ul class=&quot;postList&quot;&gt;&lt;li name=&quot;5253&quot; id=&quot;5253&quot; class=&quot;graf graf--li graf-after--p&quot;&gt;Support some sort of Unit testing of jobs&lt;/li&gt;
&lt;li name=&quot;f61e&quot; id=&quot;f61e&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Be completely disconnected&lt;/li&gt;
&lt;li name=&quot;fbf9&quot; id=&quot;fbf9&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Horizontally scaleable&lt;/li&gt;
&lt;li name=&quot;f2c5&quot; id=&quot;f2c5&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Modular&lt;/li&gt;
&lt;li name=&quot;87e2&quot; id=&quot;87e2&quot; class=&quot;graf graf--li graf-after--li&quot;&gt;Extensible&lt;/li&gt;
&lt;/ul&gt;&lt;p name=&quot;405e&quot; id=&quot;405e&quot; class=&quot;graf graf--p graf-after--li&quot;&gt;Thankfully, there appears to be something that just might fit the bill.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*WvX2qagYxANetLgTwo35_A.png&quot; data-width=&quot;868&quot; data-height=&quot;286&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*WvX2qagYxANetLgTwo35_A.png&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*WvX2qagYxANetLgTwo35_A.png&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;7c3e&quot; id=&quot;7c3e&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Drone.io&lt;/h3&gt;
&lt;p name=&quot;f314&quot; id=&quot;f314&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;a href=&quot;https://drone.io&quot; data-href=&quot;https://drone.io&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Drone.io&lt;/a&gt; is a CI/CD system that is based around docker containers.&lt;/p&gt;
&lt;p name=&quot;7609&quot; id=&quot;7609&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;How is this different than Jenkins on docker?&lt;/p&gt;
&lt;p name=&quot;8732&quot; id=&quot;8732&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Each step is a different container focused on one thing. The job configuration file wires a series of these containers together.&lt;/p&gt;
&lt;pre name=&quot;5ba0&quot; id=&quot;5ba0&quot; class=&quot;graf graf--pre graf-after--p&quot;&gt;
kind: pipeline&lt;br/&gt;name: default
&lt;/pre&gt;
&lt;pre name=&quot;c7c5&quot; id=&quot;c7c5&quot; class=&quot;graf graf--pre graf-after--pre&quot;&gt;
steps:&lt;br/&gt;- name: test&lt;br/&gt;image: maven:3-jdk-10&lt;br/&gt;commands:&lt;br/&gt;- mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V&lt;br/&gt;- mvn test -B
&lt;/pre&gt;
&lt;p name=&quot;c81a&quot; id=&quot;c81a&quot; class=&quot;graf graf--p graf-after--pre&quot;&gt;Why is this important?&lt;/p&gt;
&lt;p name=&quot;6f1b&quot; id=&quot;6f1b&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Now I can run a job on my local machine in the EXACT same environment that the build system would use. Each step is isolated in small contains that are versioned. This allows me to upgrade and add new features without effecting existing jobs.&lt;/p&gt;
&lt;p name=&quot;40b1&quot; id=&quot;40b1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The same could be accomplished in Jenkinsfile. However, there is no easy local interpreter to Jenkinsfile configurations. Also, Jenkinsfile runs in Jenkins. Therefore, even if you could run the script you wouldn’t exactly replicate what Jenkins would do. With drone I could very easily interpret the configuration and run all the steps locally since all the work runs in the containers.&lt;/p&gt;
&lt;p name=&quot;ddb1&quot; id=&quot;ddb1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;What about the artifacts and build-meta data? And all those nice web pages?&lt;/p&gt;
&lt;p name=&quot;cb99&quot; id=&quot;cb99&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;It is the responsibility of the containers to upload any artifacts to other storage instances. Something like S3, Artifactory. These were built to handle large numbers of requests and easily distribute the load. Build meta-data should also be pushed out to other metrics services, like Casandra.&lt;/p&gt;
&lt;p name=&quot;d4a1&quot; id=&quot;d4a1&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Build web pages?&lt;/p&gt;
&lt;p name=&quot;f8c3&quot; id=&quot;f8c3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Well, that does pose a problem. As of now there are no real solutions. You could create Maven sites for each build. This could display all the build results in somewhat nice formats for consumption of developers. But these would only show the results of single runs. Creating metrics and dashboard would still need to be developed externally.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*EU0rotsk2WFup6ia6wpxDA.jpeg&quot; data-width=&quot;3000&quot; data-height=&quot;2627&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*EU0rotsk2WFup6ia6wpxDA.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*EU0rotsk2WFup6ia6wpxDA.jpeg&quot;/&gt;&lt;/div&gt;
Photo by &lt;a href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/@rawpixel?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;rawpixel.com&lt;/a&gt; from &lt;a href=&quot;https://www.pexels.com/photo/black-and-brown-wooden-wall-decor-1811996/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; data-href=&quot;https://www.pexels.com/photo/black-and-brown-wooden-wall-decor-1811996/?utm_content=attributionCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=pexels&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Pexels&lt;/a&gt;
&lt;h3 name=&quot;6b19&quot; id=&quot;6b19&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;What now?&lt;/h3&gt;
&lt;p name=&quot;1d6a&quot; id=&quot;1d6a&quot; class=&quot;graf graf--p graf-after--h3 graf--trailing&quot;&gt;I see a void in the CI/CD space forming. There are several different frameworks coming out but most require you to choose a platform to run on like Google Cloud Build and &lt;a href=&quot;https://aws.amazon.com/getting-started/projects/set-up-ci-cd-pipeline/&quot; data-href=&quot;https://aws.amazon.com/getting-started/projects/set-up-ci-cd-pipeline/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;AWS Pipelines&lt;/a&gt;. Jenkins as is stands today will not work. I can only hope Jenkins X can learn from the lessons of the past and become a true modern CI/CD framework we all desire.&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 18:38:34 +0000</pubDate>
<dc:creator>zdw</dc:creator>
<og:title>Jenkins is Getting Old</og:title>
<og:url>https://itnext.io/jenkins-is-getting-old-2c98b3422f79</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*ROPvSRRCnJ_9XRVHhWgYtw.jpeg</og:image>
<og:description>Jenkins has become a victim of its own success.</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://itnext.io/jenkins-is-getting-old-2c98b3422f79?gi=56c7d5ed3b29</dc:identifier>
</item>
<item>
<title>Burger King is rolling out meatless Impossible Whoppers nationwide</title>
<link>https://www.theverge.com/2019/4/29/18522637/burger-king-impossible-whopper-nationwide-rollout-meatless-vegetarian</link>
<guid isPermaLink="true" >https://www.theverge.com/2019/4/29/18522637/burger-king-impossible-whopper-nationwide-rollout-meatless-vegetarian</guid>
<description>&lt;p id=&quot;pA7L7h&quot;&gt;Burger King is rolling out the Impossible Whopper nationwide, after a successful trial run testing the meatless burger in &lt;a href=&quot;https://www.theverge.com/2019/4/1/18290336/burger-king-impossible-burger-st-louis-meat-free-meatless&quot;&gt;St. Louis&lt;/a&gt;. The chain announced in a statement today that it plans to test in more markets before distributing the burger nationally by the end of this year.&lt;/p&gt;
&lt;p id=&quot;SUw7JE&quot;&gt;The Impossible Whopper is made with startup Impossible Foods’ plant-based patties, which are designed to look and taste like meat. The patties are also designed to “bleed,” just like the real thing, which can be attributed to the use of heme, a soy-based compound found in plants and meat. The burgers have 15 percent less fat and 90 percent less cholesterol than regular Whoppers, and Burger King’s taste test experiments claim that customers and employees can’t tell the difference.&lt;/p&gt;
&lt;p id=&quot;6nDzR8&quot;&gt;Meatless options are gaining popularity at more fast food restaurants. White Castle offers Impossible Burgers, which uses another meat-free patty recipe from Impossible Foods, and Carl’s Jr. sells a veggie burger made by Beyond Meat, a competitor to Impossible Foods.&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 17:55:10 +0000</pubDate>
<dc:creator>thereare5lights</dc:creator>
<og:description>Plant-based patties are coming to a BK near you</og:description>
<og:image>https://cdn.vox-cdn.com/thumbor/8qXuME94x9QRYOP9QzHrufNHDHw=/0x269:3780x2248/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/16199812/1134335296.jpg.jpg</og:image>
<og:title>Burger King is rolling out meatless Impossible Whoppers nationwide</og:title>
<og:type>article</og:type>
<og:url>https://www.theverge.com/2019/4/29/18522637/burger-king-impossible-whopper-nationwide-rollout-meatless-vegetarian</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theverge.com/2019/4/29/18522637/burger-king-impossible-whopper-nationwide-rollout-meatless-vegetarian</dc:identifier>
</item>
<item>
<title>Tsinghua law professor who criticized Xi Jinping barred from leaving China</title>
<link>https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103</link>
<guid isPermaLink="true" >https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103&quot;&gt;https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19780406&quot;&gt;https://news.ycombinator.com/item?id=19780406&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 232&lt;/p&gt;
&lt;p&gt;# Comments: 43&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 17:21:08 +0000</pubDate>
<dc:creator>abc-xyz</dc:creator>
<og:description>China’s liberal thinkers have simmered with anxiety since Beijing stunned the world last March by scrapping a term limit on the Chinese presidency....</og:description>
<og:image>https://cdn.i-scmp.com/sites/default/files/styles/og_image_inkstone_generic/public/d8/images/2019/04/29/china-parliament_rights_hfspek07.jpg?itok=AVGb-5Tn&amp;v=1556523586</og:image>
<og:title>Law professor who criticized President Xi Jinping barred from leaving China</og:title>
<og:type>article</og:type>
<og:url>https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103</dc:identifier>
</item>
<item>
<title>Topics in Advanced Data Structures [pdf]</title>
<link>http://web.stanford.edu/class/cs166/handouts/100%20Suggested%20Final%20Project%20Topics.pdf</link>
<guid isPermaLink="true" >http://web.stanford.edu/class/cs166/handouts/100%20Suggested%20Final%20Project%20Topics.pdf</guid>
<description>&lt;a href=&quot;http://web.stanford.edu/class/cs166/handouts/100%20Suggested%20Final%20Project%20Topics.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Mon, 29 Apr 2019 17:19:36 +0000</pubDate>
<dc:creator>htiek</dc:creator>
<og:description>China’s liberal thinkers have simmered with anxiety since Beijing stunned the world last March by scrapping a term limit on the Chinese presidency....</og:description>
<og:image>https://cdn.i-scmp.com/sites/default/files/styles/og_image_inkstone_generic/public/d8/images/2019/04/29/china-parliament_rights_hfspek07.jpg?itok=AVGb-5Tn&amp;v=1556523586</og:image>
<og:title>Law professor who criticized President Xi Jinping barred from leaving China</og:title>
<og:type>article</og:type>
<og:url>https://www.inkstonenews.com/politics/law-professor-xu-zhangrun-barred-leaving-china/article/3008103</og:url>
<dc:language>en</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>http://web.stanford.edu/class/cs166/handouts/100%20Suggested%20Final%20Project%20Topics.pdf</dc:identifier>
</item>
<item>
<title>Giving up on wlroots-rs</title>
<link>http://way-cooler.org/blog/2019/04/29/rewriting-way-cooler-in-c.html</link>
<guid isPermaLink="true" >http://way-cooler.org/blog/2019/04/29/rewriting-way-cooler-in-c.html</guid>
<description>
&lt;p&gt;&lt;a href=&quot;https://github.com/way-cooler/way-cooler&quot;&gt;Way Cooler&lt;/a&gt; is a Wayland compositor that was written in Rust using &lt;a href=&quot;https://github.com/Cloudef/wlc&quot;&gt;wlc&lt;/a&gt;. Since &lt;a href=&quot;https://github.com/way-cooler/way-cooler/pull/516&quot;&gt;last April&lt;/a&gt; I’ve been rewriting it to use &lt;a href=&quot;https://github.com/swaywm/wlroots&quot;&gt;wlroots&lt;/a&gt;. In order to do that however I had to wrap the library so that it could be used in Rust. I worked on &lt;a href=&quot;https://github.com/swaywm/wlroots-rs&quot;&gt;wlroots-rs&lt;/a&gt; and put Way Cooler on the back burner for a long time. After over 1,000 commits I’m giving up on it.&lt;/p&gt;
&lt;h2 id=&quot;problems-with-wlroots-rs-in-detail&quot;&gt;Problems with wlroots-rs in detail&lt;/h2&gt;
&lt;h3 id=&quot;ownership-with-handles&quot;&gt;Ownership with handles&lt;/h3&gt;
&lt;p&gt;wlroots-rs was going to be the safe Rust wrapper for the very complicated &lt;a href=&quot;https://github.com/swaywm/wlroots&quot;&gt;wlroots library&lt;/a&gt;. wlroots implements large parts of a Wayland compositor and provides pluggable modules that most compositors will want.&lt;/p&gt;
&lt;p&gt;The biggest problem when wrapping wlroots was defining the ownership model of the objects that wlroots exposes. To demonstrate this I will focus on a single resource that illustrates the problem: an output.&lt;/p&gt;
&lt;p&gt;A Wayland “output” is the resource that represents a display device. Commonly this means it handles a computer monitor. This resource could disappear at any time in the life cycle of the application. This is easy enough to imagine: all it takes is a yank of the display’s power cord and the monitor goes away. This is basically the exact opposite of the Rust memory model. Rust likes to own things and give compile-time defined borrows of that memory. This is runtime lifetime management that must be managed in some way.&lt;/p&gt;
&lt;p&gt;You cannot simply define it like so:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output_c_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlr_output&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// Forward all the calls to the c pointer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If this was done then it would be possible to leak the memory using &lt;code class=&quot;highlighter-rouge&quot;&gt;Box::leak&lt;/code&gt; and say that an output will live forever – even though it can’t.&lt;/p&gt;
&lt;p&gt;The simplest way to achieve this safely would be to use reference counted pointers and expose only weak pointers. Here is a (fake) example of how this could look:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// This is a _very_ simple example for clarity.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;// wlroots-rs is not implemented like this.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RealOutput&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lifeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Rc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlr_output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lifeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Weak&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wlr_output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Changes the mode (resolution) of an output.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output_ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lifeline&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.ok_or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;wlr_output_change_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This naive style implementation could work, however it would cause a lot of branching code. Each call to wlroots will require a check to see if the handle has been dropped, even though it almost certainly has not been dropped (it can only be dropped between event callbacks, wlroots/Wayland is callback based). This means there will be unnecessary paths (that are hopefully marked cold) that either panic or return an error.&lt;/p&gt;
&lt;p&gt;This is obviously not wanted so the next best thing is define a range where it is safe to use the reference to the resource: i.e. we want to be able to define a lifetime for a code block. This leads us to the &lt;em&gt;actual&lt;/em&gt; design of wlroots-rs, using handles (note that this &lt;em&gt;is&lt;/em&gt; actual code):&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/// A non-owned reference counted handle to a resource.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// The resource could be destroyed at any time, it depends on the resource.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// For example an output is destroyed when its physical output is&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// &quot;disconnected&quot; on DRM. &quot;disconnected&quot; depends on the output (e.g. sometimes&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// turning it off counts as &quot;disconnected&quot;).&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// However, when the backend is instead headless an output lives until it is&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// destroyed explicitly by the library user.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// Some resources are completely controlled by the user. For example although&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// you refer to a `Seat` with handles it is only destroyed when you call the&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// special destroy method on the seat handle.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// Please refer to the specific resource documentation for a description of&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/// the lifetime particular to that resource.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handleable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NonNull&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Weak&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhantomData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handleable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Upgrades a handle to a reference to the backing object.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// # Safety&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// This returns an &quot;owned&quot; value when really you don't own it all.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Depending on the type, it's possible that the resource will be freed&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// once this returned value is dropped, causing a possible double free.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Potentially it instead is just unbound, it depends on the resource.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Regardless, you should not use this interface. Use the `run` method.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;#[doc(hidden)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HandleResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.handle&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;.ok_or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;HandleErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AlreadyDropped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// NOTE&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// We drop the Rc here because having two would allow a dangling&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// pointer to exist!&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;.and_then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;HandleErr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AlreadyBorrowed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrapper_obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// Run a function with a reference to the resource if its still alive.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Returns the result of the function, if successful.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// # Safety&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// By enforcing a rather harsh limit on the lifetime of the resource&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// to a short lived scope of an anonymous function,&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// this function ensures the resource does not live longer&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// than it exists.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;///&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// # Panics&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// This function will panic if multiple mutable borrows are detected.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// This will happen if you call `upgrade` directly within this callback,&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// or if a handle to the same resource was upgraded some where else up the&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// stack.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HandleResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FnOnce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapped_obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// We catch panics here to deal with an extreme edge case.&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;//&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// If the library user catches panics from the `run` function then their&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// resource used flag will still be set to `true` when it should be set&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// to `false`.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;catch_unwind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;AssertUnwindSafe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(||&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;runner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapped_obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.handle&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// Sanity check that it hasn't been tampered with. If so, we should&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// just panic. If we are currently&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// panicking this will abort.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;wlr_log!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WLR_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;After running callback, mutable lock was false&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;nd&quot;&gt;panic!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Lock in incorrect state!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resume_unwind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The full implementation can be found &lt;a href=&quot;https://github.com/swaywm/wlroots-rs/blob/91a18bd541a6ec565d6ef78d18ee5cc6a413f684/src/utils/handle.rs&quot;&gt;here&lt;/a&gt;, its far too long and complicated to paste into a blog post.&lt;/p&gt;
&lt;p&gt;This code is very complicated, which isn’t what you want for the defining abstraction of your safe library. As far as I’m aware though it is correct. It’s also incredibly ugly to use in practice:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_wlroots_callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;surface_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SurfaceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output_handle&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;surface_handle&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;// maybe some more nested layers...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To avoid this callback hell, I defined two macros to help: &lt;a href=&quot;https://github.com/swaywm/wlroots-rs/blob/91a18bd541a6ec565d6ef78d18ee5cc6a413f684/src/macros.rs#L355&quot;&gt;one normal macro&lt;/a&gt; and a very complicated &lt;a href=&quot;https://github.com/swaywm/wlroots-rs/blob/91a18bd541a6ec565d6ef78d18ee5cc6a413f684/wlroots-dehandle/src/lib.rs&quot;&gt;procedural macro&lt;/a&gt;. Here’s what the procedural macro looks like:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// This does the same thing as the above code, but nicer.&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;#[wlroots_dehandle]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_wlroots_callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OutputHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;surface_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SurfaceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;#[dehandle]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;#[dehandle]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surface&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surface_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This expands out the lines to use the non-proc macro, which in turn becomes the callback hell mess. The only problem with this scheme is now that the control flow is all wrong:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// this is actual code I had to write (simplified)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapped_shells&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;#[dehandle]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surface&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.surface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// If not ready to render, don't render it yet&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surface&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.is_mapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// What we _want_ to write&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// break&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;// What we have to write because this is actually in a callback...&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// actually goes to the next shell in the mapped_shells...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So this solution “works” but it’s not great. Ultimately it’s very confusing for users. It was too confusing for &lt;a href=&quot;https://puri.sm/posts/end-of-year-librem-5-update/&quot;&gt;purism to get working&lt;/a&gt; (this &lt;a href=&quot;https://www.youtube.com/watch?v=oX5yVyLbLZE&quot;&gt;video&lt;/a&gt; was very painful for me to watch - the library was unusable). &lt;a href=&quot;https://github.com/buffet/kiwmi&quot;&gt;Kiwmi&lt;/a&gt; initially tried using wlroots-rs but swiftly gave up and used wlroots itself.&lt;/p&gt;
&lt;h3 id=&quot;the-sheer-amount-of-api-to-wrap&quot;&gt;The sheer amount of API to wrap&lt;/h3&gt;
&lt;p&gt;Currently there is 11 &lt;strong&gt;THOUSAND&lt;/strong&gt; lines of Rust in wlroots-rs. &lt;em&gt;All&lt;/em&gt; of this code is just wrapper code, it doesn’t do anything but memory management. This isn’t just repeated code either, I defined a &lt;a href=&quot;https://github.com/swaywm/wlroots-rs/blob/91a18bd541a6ec565d6ef78d18ee5cc6a413f684/src/macros.rs#L201&quot;&gt;very complicated and ugly macro&lt;/a&gt; to try to make it easier.&lt;/p&gt;
&lt;p&gt;This wrapper code doesn’t cover even half of the API surface of wlroots. It’s exhausting writing wlroots-rs code, memory management is constantly on my mind because that’s the whole purpose of the library. It’s a very boring problem and it’s always at odds with usability - see the motivation for the escape from callback hell described above.&lt;/p&gt;
&lt;p&gt;To do all of this, and then go write Way Cooler, already a big undertaking, is too much for me to commit to. When the benefit at the end of the day is just so I don’t have to write C, that doesn’t really make it worth it. If I got this out of the box by simply linking to the library, like I can in C++, then it would be much more tenable.&lt;/p&gt;
&lt;p&gt;I can always just use unsafe bindings to wlroots, just like I would with any other language. However, the &lt;em&gt;entire point&lt;/em&gt; of Rust is that it’s safe. Doing that is not an option because at that point you lose the entire benefit of the language.&lt;/p&gt;
&lt;h3 id=&quot;custom-wayland-protocols-arent-possible-safely&quot;&gt;Custom Wayland protocols aren’t possible (safely)&lt;/h3&gt;
&lt;p&gt;Even if I accepted the usability problems of the API and I powered through writing all of the wrapper code there is still one major limitation of wlroots-rs that I can’t find a way to work around: it’s impossible to allow a compositor to safely define a custom Wayland protocol with wlroots-rs.&lt;/p&gt;
&lt;p&gt;The way you extend compositors in Wayland is writing protocols. wlroots provides a lot of protocols already, but many compositor will want to write custom ones. Way Cooler will definitely need to write custom protocols to implement the functionality Awesome users have come to expect from their Lua scripts.&lt;/p&gt;
&lt;p&gt;The protocols are written in XML and code is generated from it. The Rust code generator that currently exists is part of the wayland-rs project. Unfortunately, the code generated by this tool requires using wayland-rs in its entirety to manage the Wayland stack. This is because it uses custom data storage exposed by Wayland to handle memory management to ensure safety, whereas it’s normally used by OpenGL (for more information, see &lt;a href=&quot;https://smithay.github.io/wayland-rs-v-0-21.html&quot;&gt;this blog post&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This means I would have to define a &lt;em&gt;different&lt;/em&gt; scanner that would generate code that hopefully could be made safe to use (but probably not). So now there will need to be unsafe code in compositor code even though wlroots-rs was supposed to handle it properly…&lt;/p&gt;
&lt;h2 id=&quot;why-smithay-is-not-a-solution&quot;&gt;Why Smithay is not a solution&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Smithay&quot;&gt;Smithay&lt;/a&gt; is a library similar to wlroots, but is written entirely in Rust. I’m not interested in trying to use Smithay for Way Cooler.&lt;/p&gt;
&lt;p&gt;Smithay is very incomplete. Very, very incomplete compared to wlroots. It is no where near usable and the current trajectory doesn’t look like it will be usable very soon either. wlroots is a great framework and has a strong backing in the community so I don’t see the need to abandon it just so I can keep using Rust.&lt;/p&gt;
&lt;p&gt;Way Cooler will have to talk to C libraries any ways (the rest of the Wayland ecosystem is all C, including libinput, DRM, and OpenGL), so either more bindings will need to be written (again distracting from the main problem of making a working compositor) or they will need to be RiiR.&lt;/p&gt;
&lt;p&gt;I wish them luck, but I don’t feel interested in rewriting the entire world in Rust just so Way Cooler can be in Rust. I like Rust, but not enough to reinvent the wheel so it doesn’t have any C in it.&lt;/p&gt;
&lt;h2 id=&quot;rewriting-way-cooler-in-c&quot;&gt;Rewriting Way Cooler in C&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/way-cooler/way-cooler/pull/609&quot;&gt;Starting with this PR&lt;/a&gt;, the compositor for Way Cooler will be written in C.&lt;/p&gt;
&lt;p&gt;This was a difficult decision to make, not because Way Cooler must be written in Rust, but because I was throwing away quite a bit of work that I invested in wlroots-rs. Thought it had many problems, it came out to be surprisingly usable despite its limitations. However, it wasn’t going to be tenable for Way Cooler (for the reasons listed above) so it must be abandoned.&lt;/p&gt;
&lt;p&gt;Some people have seen this as controversial, politically speaking. I don’t really understand this view point, as the fact that Way Cooler is written in Rust is an implementation incidental. Now it makes sense for it to be written in C, given the constraints that I have discovered through painful trial and error, so it will be written in C.&lt;/p&gt;
&lt;p&gt;Note that the client part of Way Cooler (the part that will implement the AwesomeWM compatibility) is still written in Rust. This is the most pragmatic solution because it can utilize &lt;a href=&quot;https://github.com/Smithay/wayland-rs&quot;&gt;wayland-rs&lt;/a&gt; and &lt;a href=&quot;https://github.com/kyren/rlua&quot;&gt;rlua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As an interesting side note: both developers behind those particular projects have elected to &lt;a href=&quot;https://github.com/kyren/luster&quot;&gt;rewrite&lt;/a&gt; their projects &lt;a href=&quot;https://smithay.github.io/wayland-rs-v-0-21.html&quot;&gt;in Rust&lt;/a&gt;. They are doing this because it’s difficult to write good bindings to C libraries, and so the natural conclusion to making it work well in Rust is to rewrite it.&lt;/p&gt;
&lt;p&gt;I want to make one (mildly controversial) thing clear: rewriting a library for the sake of only using Rust is not good engineering. A literal rewrite of a project to Rust is not interesting, it’s not useful, it just causes churn and splits ecosystems. Time would be better spent either working with existing solutions that already have the effort put in to make them correct or to come up with new green-field projects.&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 14:39:43 +0000</pubDate>
<dc:creator>Bl4ckb0ne</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://way-cooler.org/blog/2019/04/29/rewriting-way-cooler-in-c.html</dc:identifier>
</item>
<item>
<title>Google Staffers Share Stories of ‘Systemic’ Retaliation</title>
<link>https://www.bloomberg.com/news/articles/2019-04-26/google-staffers-share-350-stories-of-systemic-retaliation</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2019-04-26/google-staffers-share-350-stories-of-systemic-retaliation</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2019-04-26/google-staffers-share-350-stories-of-systemic-retaliation&quot;&gt;https://www.bloomberg.com/news/articles/2019-04-26/google-staffers-share-350-stories-of-systemic-retaliation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=19778708&quot;&gt;https://news.ycombinator.com/item?id=19778708&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 204&lt;/p&gt;
&lt;p&gt;# Comments: 204&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 14:36:41 +0000</pubDate>
<dc:creator>mastazi</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=1b688ed0-6adb-11e9-bb8b-73bc50ead8d6&amp;url=L25ld3MvYXJ0aWNsZXMvMjAxOS0wNC0yNi9nb29nbGUtc3RhZmZlcnMtc2hhcmUtMzUwLXN0b3JpZXMtb2Ytc3lzdGVtaWMtcmV0YWxpYXRpb24=</dc:identifier>
</item>
<item>
<title>Ask HN: How do you stay disciplined in the long run?</title>
<link>https://news.ycombinator.com/item?id=19777976</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19777976</guid>
<description>&lt;td colspan=&quot;2&quot;/&gt;&lt;td readability=&quot;29&quot;&gt;My typical cycle of execution is something like this
&lt;p&gt;Find out something through HN/Reddit/Other medium --&amp;gt; Get motivated --&amp;gt; Get good knowledge about it through research --&amp;gt; See others succeed, get motivated a bit more --&amp;gt; Execute and get to, say, 25-50% of the journey --&amp;gt; Get bored --&amp;gt; Abandon --&amp;gt; be passive for couple of months --&amp;gt; repeat.&lt;/p&gt;
&lt;p&gt;Be it creating new websites or new products (probably the reason I have not launched something as a personal project, despite having tried like 10-11 of them with varying degree of success), weight loss journey, running, meditation etc. I have tried breaking things into manageable chunks and then taking them one-by-one, or through methodologies like GTD, or by making others accountable (tough to find someone who takes personal interest in what I would do; also, I have strongly come to perceive myself as being driven by external accountabilities which makes me good at work at office but bad at executing personal projects).&lt;/p&gt;
&lt;p&gt;I see folks who are disciplined, are ruthless executors, are self-motivated, and wonder, what could I improve or work towards to get things in a better shape. Any suggestions?&lt;/p&gt;
&lt;/td&gt;
</description>
<pubDate>Mon, 29 Apr 2019 13:07:02 +0000</pubDate>
<dc:creator>djangovm</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19777976</dc:identifier>
</item>
<item>
<title>Apache Software Foundation joins GitHub open source community</title>
<link>https://github.blog/2019-04-29-apache-joins-github-community/</link>
<guid isPermaLink="true" >https://github.blog/2019-04-29-apache-joins-github-community/</guid>
<description>&lt;div class=&quot;post-featured mb-3 mb-md-9 pb-0 pb-md-4&quot;&gt;
&lt;div class=&quot;post-featured__image&quot;&gt;&lt;img width=&quot;1194&quot; height=&quot;616&quot; src=&quot;https://github.blog/wp-content/uploads/2019/04/apache-blog.png?fit=1194%2C616&quot; class=&quot;attachment-full size-full wp-post-image&quot; alt=&quot;&quot; srcset=&quot;https://github.blog/wp-content/uploads/2019/04/apache-blog.png?w=1194 1194w, https://github.blog/wp-content/uploads/2019/04/apache-blog.png?w=300 300w, https://github.blog/wp-content/uploads/2019/04/apache-blog.png?w=768 768w, https://github.blog/wp-content/uploads/2019/04/apache-blog.png?w=1024 1024w, https://github.blog/wp-content/uploads/2019/04/apache-blog.png?w=804 804w&quot; sizes=&quot;(max-width: 1194px) 100vw, 1194px&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;post__content markdown-body col-12 col-md-10 mb-2 mb-md-4&quot; readability=&quot;64.21547277937&quot;&gt;
&lt;p&gt;&lt;span&gt;Today we’re excited to welcome the&lt;/span&gt; &lt;a href=&quot;https://apache.org/foundation/&quot;&gt;&lt;span&gt;Apache Software Foundation (ASF)&lt;/span&gt;&lt;/a&gt; &lt;span&gt;to GitHub. Apache is the world’s largest open source foundation, with over 200 million lines of code managed by an all-volunteer community of 730 members and 7,000 code contributors. Over their 20 year history, one billion lines of code have been committed across three million code commits.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In 2016, Apache made the decision to start integrating GitHub’s repository and tooling with their own services. After solidifying the integration over the years, they decided to simplify how they work and move all Git projects to GitHub. As of February 2019, Apache’s migration to GitHub was complete, enabling all these projects with a simple platform to host and review code, collaborate on projects, and build software alongside 31 million developers around the world.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;making-the-transition&quot;&gt;Making the transition&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;We’ve been working with Apache to meet their needs and better support open source projects doing important work. We’re grateful to have such an impactful foundation migrate and grow directly on GitHub. With this transition completed, Apache can focus on building software and their community.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Whether we’re working with individual open source maintainers and contributors on some of the world’s largest open source foundations like Apache, GitHub’s mission is to be the home for all developers by supporting open source communities, addressing their unique needs, and helping open source projects thrive.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;More details on this news can be found in the&lt;/span&gt; &lt;a href=&quot;https://s.apache.org/7lio&quot;&gt;&lt;span&gt;press release&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;What’s next&lt;/h2&gt;
&lt;p&gt;We’re actively working with many different communities on their unique challenges and transition plans.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;mailto:opensource@github.com&quot;&gt;&lt;span&gt;Contact us to get involved&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/div&gt;
</description>
<pubDate>Mon, 29 Apr 2019 11:47:08 +0000</pubDate>
<dc:creator>moritzplassnig</dc:creator>
<og:type>article</og:type>
<og:title>Apache Software Foundation joins GitHub open source community</og:title>
<og:description>We’re excited to welcome the Apache Software Foundation (ASF) to GitHub.</og:description>
<og:url>https://github.blog/2019-04-29-apache-joins-github-community/</og:url>
<og:image>https://github.blog/wp-content/uploads/2019/04/apache-blog.png?fit=1194%2C616</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.blog/2019-04-29-apache-joins-github-community/</dc:identifier>
</item>
<item>
<title>Unauthorized access to Docker Hub database</title>
<link>https://success.docker.com/article/docker-hub-user-notification</link>
<guid isPermaLink="true" >https://success.docker.com/article/docker-hub-user-notification</guid>
<description>&lt;h2 id=&quot;issue&quot;&gt;Issue&lt;/h2&gt;
&lt;p&gt;On Thursday, April 25th, 2019, we discovered unauthorized access to a single Docker Hub database storing a subset of non-financial user data. Upon discovery, we acted quickly to intervene and secure the site.&lt;/p&gt;
&lt;p&gt;We want to update you on what we've learned from our ongoing investigation, including which Hub accounts are impacted, and what actions users should take.&lt;/p&gt;
&lt;h2 id=&quot;resolution&quot;&gt;Resolution&lt;/h2&gt;
&lt;p&gt;During a brief period of unauthorized access to a Docker Hub database, sensitive data from approximately 190,000 accounts may have been exposed (less than 5% of Hub users). Data includes usernames and hashed passwords for a small percentage of these users, as well as GitHub and Bitbucket tokens for Docker autobuilds.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We are asking users to change their password on Docker Hub and any other accounts that shared this password.&lt;/li&gt;
&lt;li&gt;For users with autobuilds that may have been impacted, we have revoked GitHub tokens and access keys. This means your autobuilds will fail, and we ask that you reconnect to your repositories and check security logs to see if any unexpected actions have taken place.
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We are enhancing our overall security processes and reviewing our policies. Additional monitoring tools are now in place.&lt;/p&gt;
&lt;h2 id=&quot;frequentlyaskedquestions&quot;&gt;Frequently Asked Questions&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Q: What happened?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There was a brief period of unauthorized access to a Docker Hub database. During this time some sensitive data from approximately 190,000 accounts may have been exposed (less than 5% of Hub users). Data includes usernames and hashed passwords for a small percentage of users as well as GitHub and Bitbucket tokens for Docker autobuilds. All these tokens have been revoked.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Were any of the Docker Official Images impacted by this incident?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No Official Images have been compromised. We have additional security measures in place for our Official Images including GPG signatures on git commits as well as Notary signing to ensure the integrity of each image.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: How do I know if I was impacted by this unauthorized access?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you directly received an email from Docker about this incident, you may have been impacted. If you have received a password reset link, your password hash was potentially exposed. We have invalidated it and sent you a password reset link as a precaution. If you are using autobuilds and your GitHub or Bitbucket repositories have been unlinked from Docker Hub, you will need to relink those repositories for autobuilds to work correctly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: What do I need to do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For all Docker Hub users, there is no action required to preserve your security. A password reset link has been sent to any users who potentially had their password hash exposed. Users who have autobuilds who have had their GitHub or Bitbucket repositories unlinked will need to relink those repositories.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Do I need to reset my password on Docker Hub?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No. If your password hash was potentially exposed, we have invalidated your password and emailed you a reset password link. Even if you did not receive a password reset link, it’s never a bad idea to &lt;a href=&quot;https://id.docker.com/reset-password/?service=43f17c5f-9ba4-4f13-853d-9d0074e349a7&quot;&gt;change your password&lt;/a&gt; if you haven’t changed it in a while.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Why did you delete my GitHub tokens before notifying me?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Revoking the tokens was done as soon as possible to protect users. At that point in time we were working on additional measures to secure the site. Once completed, communications were sent to all potentially impacted users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: If I relink my Docker Hub repository to a GitHub repository will I be at risk?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No. Relinking your Docker Hub repository will create a new read-only deploy key to your GitHub or Bitbucket source repositories.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: I can’t sign in to Docker Hub, have I been hacked?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have sent a password reset link to each user whose password hash may have been impacted. Please check your email to see if you have received a password reset link. If you have any concerns, please contact info@docker.com.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: I have never used the Docker Hub Autobuild feature. Why did I receive an email?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You may have linked your GitHub or Bitbucket account to Docker Hub in the past or your password hash was potentially exposed. If you did link your account to Docker Hub, we have unlinked it. If your password hash was potentially exposed, we have invalidated it and sent you a password reset link as a precaution.&lt;/p&gt;
</description>
<pubDate>Mon, 29 Apr 2019 01:44:31 +0000</pubDate>
<dc:creator>yskchu</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://success.docker.com/article/docker-hub-user-notification</dc:identifier>
</item>
</channel>
</rss>