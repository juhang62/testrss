<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Nest, the company, died at Google I/O 2019</title>
<link>https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/</link>
<guid isPermaLink="true" >https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2016/06/nest-640x452.jpg&quot; alt=&quot;Nest, the company, died at Google I/O 2019&quot;/&gt;&lt;div class=&quot;caption-credit&quot;&gt;Ron Amadeo / Nest&lt;/div&gt;&lt;aside id=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;135 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;135 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;176&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 135 posters participating&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;MOUNTAIN VIEW, Calif.—Don't be distracted by the shiny new &lt;a href=&quot;https://arstechnica.com/gadgets/2019/05/google-combines-the-assistant-and-home-security-with-229-nest-hub-max/&quot;&gt;&quot;Nest&quot; smart display&lt;/a&gt; that was just announced: Nest died at Google I/O 2019. &quot;Google Nest&quot; is the new reality now, where Nest is no longer a standalone company, but instead is a sub-brand (not even a division) of Google. The shut down of Nest as an independent company &lt;a href=&quot;https://arstechnica.com/gadgets/2018/02/nest-is-done-as-a-standalone-alphabet-company-merges-with-google/&quot;&gt;was announced&lt;/a&gt; in 2018, but the pile of announcements at and around I/O 2019 is the first time we're seeing what the future of Nest looks like inside of Google.&lt;/p&gt;
&lt;p&gt;Nest laid out its future in an ominously titled &quot;&lt;a href=&quot;https://nest.com/whats-happening/&quot;&gt;What's Happening&lt;/a&gt;&quot; page on Nest.com, and a notice on the &lt;a href=&quot;https://workswith.nest.com/&quot;&gt;Works with Nest page&lt;/a&gt;. It sounds like a brutal outcome for users, who are looking at a dead-end ecosystem, potentially broken smart homes, and the shattering of the Google/Nest privacy firewall.&lt;/p&gt;
&lt;h2&gt;Meet the &quot;Google Nest Learning Thermostat&quot;&lt;/h2&gt;
&lt;p&gt;First up is Google's salvaging of the Nest brand as a general purpose smart home sub-brand. Just as Google has the &quot;Pixel&quot; brand for smartphones and laptops, it will now use the &quot;Nest&quot; brand similarly, so get used to saying and reading &quot;Google Nest,&quot; which now means &quot;a Google smart home product.&quot;&lt;/p&gt;
&lt;div&gt;The first item announced under this new branding was the &lt;a href=&quot;https://arstechnica.com/gadgets/2019/05/google-combines-the-assistant-and-home-security-with-229-nest-hub-max/&quot;&gt;Google Nest Hub Max&lt;/a&gt;, a bigger version of the &lt;a href=&quot;https://arstechnica.com/gadgets/2018/10/google-home-hub-review-a-minimum-viable-product-with-potential/&quot;&gt;Google Home Hub&lt;/a&gt; smart display. The original Home Hub is getting renamed as well, and is now the Google Nest Hub.&lt;/div&gt;
&lt;p&gt;The new branding hasn't hit the Google Store yet, but dig through &lt;a href=&quot;https://support.google.com/store/answer/2462844?hl=en&quot;&gt;Google's help pages&lt;/a&gt; and you'll see that &lt;em&gt;every &lt;/em&gt;Nest product has been renamed to &quot;Google Nest.&quot; Now we have the &quot;Google Nest Learning Thermostat,&quot; the &quot;Google Nest Protect,&quot; &quot;Google Nest Secure Alarm System,&quot; &quot;Google Nest Hello&quot; (this one is a doorbell), and the &quot;Google Nest Cam IQ Outdoor.&quot; These are all a bit awkward and wordy, but they have nothing on the &quot;&lt;a href=&quot;https://store.nest.com/product/nest-yale-lock-key-free-smart-lock/RB-YRD540-WV-619&quot;&gt;Nest x Yale Lock with Google Nest connect,&lt;/a&gt;&quot; which is the actual name of a Nest door lock now.&lt;/p&gt;
&lt;p&gt;The takeaway here is that since Nest is not a standalone company anymore, &quot;Nest&quot; doesn't get to be a standalone product brand anymore. Officially, it will always be &quot;Google Nest.&quot;&lt;/p&gt;
&lt;p&gt;So far the Google Home speakers have not been renamed, but if Google is really serious about this, we might end up with &quot;Google Nest Speakers&quot; or something similar. Google Wi-Fi is also not yet called &quot;Google Nest Wi-Fi.&quot; The Chromecast has not gotten a name change yet, either—though as a streaming stick named after a web browser, it still has the strangest branding of any Google product.&lt;/p&gt;
&lt;h2&gt;Nest's smart home platform is dead&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/header-2x-9b40ac74dede88fae967d0a9a07398aa.png&quot; class=&quot;enlarge&quot; data-height=&quot;562&quot; data-width=&quot;866&quot; alt=&quot;Works with Nest will no longer work with Nest.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/header-2x-9b40ac74dede88fae967d0a9a07398aa-640x415.png&quot; width=&quot;640&quot; height=&quot;415&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/header-2x-9b40ac74dede88fae967d0a9a07398aa.png 2x&quot; alt=&quot;Works with Nest will no longer work with Nest.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/header-2x-9b40ac74dede88fae967d0a9a07398aa.png&quot; class=&quot;enlarge-link&quot; data-height=&quot;562&quot; data-width=&quot;866&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; Works with Nest will no longer work with Nest.&lt;/div&gt;

&lt;p&gt;The second big thing to come out of the show is that Google is killing the &quot;Works with Nest&quot; platform. This &lt;span&gt;is&lt;/span&gt; was a smart home platform that would let the Nest thermostat act as a hub and coordinator for a lot of your other smart home products. A notice on the Works with Nest &lt;a href=&quot;https://workswith.nest.com/&quot;&gt;webpage&lt;/a&gt; reads &quot;Works with Nest is winding down.&quot; Google's smart home strategy will now revolve around only the &quot;Works with Google Assistant&quot; program and Nest's ecosystem will shut down in a bit over three months, on August 31, 2019.&lt;/p&gt;
&lt;aside class=&quot;related-stories right&quot;&gt;&lt;h2 class=&quot;subheading notched&quot;&gt;Google kills product&lt;/h2&gt;
&lt;span class=&quot;read-more&quot;&gt;&lt;a class=&quot;recommendation-series&quot; href=&quot;https://arstechnica.com/series/google-kills-product/&quot;&gt;View more stories&lt;/a&gt;&lt;/span&gt;&lt;/aside&gt;
 I am sure there are Works with Nest ecosystem users out there that bought products specifically because they &quot;Worked with Nest.&quot; When the service shuts down in August, it sounds like all of those (probably expensive) third-party smart home products will stop working with any Nest-based automation workflows. This mandatory feature removal situation is pretty much a smart home owner's worst nightmare.
&lt;p&gt;Nest-branded products will continue to work with each other, but since &quot;Works with Nest&quot; was a program that let other services talk to Nest, a lot of third-party integrations will be going away. &lt;a href=&quot;https://www.theverge.com/2019/5/9/18537331/google-nest-cancellation-assistant-smart-home-integration-report&quot;&gt;The Verge&lt;/a&gt; has a good rundown of just how many services are going to break, and it's a brutal who's who of smart home products. Amazon Alexa, Philips Hue, IFTTT, Logitech Harmony, Lutron lights, August Home, and Wemo switches will all be affected.&lt;/p&gt;
&lt;p&gt;Alexa, it seems, will be getting special treatment and will continue to work. Google has &lt;a href=&quot;https://nest.com/support/article/Nest-and-Amazon-Alexa&quot;&gt;a special page&lt;/a&gt; for Alexa, which reads &quot;We are working with Amazon to migrate the Nest skill on Amazon Alexa to ensure a smooth transition for Nest customers prior to winding down the Works With Nest program in August.&quot; Google and Amazon have had trouble working together in the past, but they seem to have called a truce lately. Other services have not been so lucky, and there are already emails out from IFTTT, Lutron, and others declaring the death of their Nest integration.&lt;/p&gt;
&lt;p&gt;Works with Nest users will be facing a broken smart home, and will have to pick up the scraps of their smart home ecosystem and MacGyver together another solution out of the pieces. The somewhat good news is that most smart home products are compatible with multiple smart home ecosystems, so it should be rare for something to turn into a complete brick. You'll just have to switch to a new ecosystem, go through a ton of setup, and be ready to deal with all the things that won't work the same way they worked before. Theoretically some of these services could continue to talk to Nest by supporting the Google Assistant system instead.&lt;/p&gt;
&lt;p&gt;Works with Nest was always a bit of a strange solution for smart home management. It made the thermostat the center of your smart home not because that made any sense from a smart home architecture perspective, but because a thermostat was Nest's most popular product. Works with Nest didn't offer any kind of control interface for this ecosystem of smart devices, either. If you for example managed to find a &quot;Works with Nest&quot; smart lighting system, Nest didn't give you a way to actually control the lights—just location detection through the Nest app.&lt;/p&gt;
&lt;p&gt;Works with Google Assistant is a voice and touch-centric smart home solution, which makes a lot more sense. The system revolves around Google Home speakers and Google Nest smart displays, which are both excellent control interfaces. You can turn on lights and lock doors with voice or touch commands; you can raise the temperature on a thermostat; and you can run routines that do a lot of these things at once.&lt;/p&gt;
&lt;h2&gt;Nest accounts and data separation is dead&lt;/h2&gt;
&lt;p&gt;As part of the Googification of Nest, Nest accounts are being phased out of Google's smart home strategy. Existing users won't have their Nest accounts taken away, but the FAQ on Nest.com &quot;strongly recommends&quot; Nest users migrate to a Google account. Nest's FAQ warns that &quot;As Nest offers new connected home devices and services in the future, many of those will only be available to our users with Google Accounts.&quot; New Nest users will be required to use a Google account.&lt;/p&gt;
&lt;p&gt;Migrating to a Google Account means turning all your Nest data over to Google—data that previously had been kept separate. Google says it will use your Nest data in accordance with the &lt;a href=&quot;https://policies.google.com/privacy&quot;&gt;Google Privacy Policy.&lt;/a&gt; Nest data includes a lot of scary feeds from motion sensors, cameras, and microphones and Google has a whole extra page up on &quot;&lt;a href=&quot;https://store.google.com/category/google_nest_privacy&quot;&gt;Google Nest Privacy&lt;/a&gt;&quot; in the home, where it outlines three major principles:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We will be transparent about the data we collect and why&lt;br/&gt;We will never sell your personal information to anyone&lt;br/&gt;We will empower you to review, move, or delete your data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are even special pages outlining principles and data retention for &lt;a href=&quot;https://store.google.com/magazine/google_nest_privacy#3cc7fabc827a9b81&quot;&gt;cameras&lt;/a&gt;, &lt;a href=&quot;https://store.google.com/magazine/google_nest_privacy#ada2d2099fe21107&quot;&gt;microphones&lt;/a&gt;, &lt;a href=&quot;https://store.google.com/magazine/google_nest_privacy#712c9284c76c999c&quot;&gt;home sensors&lt;/a&gt;, and &lt;a href=&quot;https://store.google.com/magazine/google_nest_privacy#cc2fcbc8e67017bf&quot;&gt;Wi-Fi data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Keeping the Nest data separate from Google was a big concession made when Google bought the company, designed to allay privacy fears. Now that that is going away, I would imagine some Nest users are not happy.&lt;/p&gt;
&lt;h2&gt;Other Nest things that will probably die in the future&lt;/h2&gt;
&lt;p&gt;So far it seems like the plan is to remove as many Nest-proprietary things as possible and get Nest people on Google versions of those products and services. Nest's website promises &quot;Over the coming months, you’ll begin seeing changes across our products, accounts, services, and policies as we bring everything together under Nest.&quot; It would not surprise me to hear that all of these &quot;changes&quot; involve shutting down a Nest product or service in favor of a Google version.&lt;/p&gt;
&lt;p&gt;We just had a clash between &quot;Works with Nest&quot; and &quot;Works with Google Assistant&quot; and the Nest product was shut down, so let's whip out our crystal ball and extend this to a few other points of crossover.&lt;/p&gt;
&lt;h3&gt;The Google Home app versus the Nest App&lt;/h3&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.10.29-AM-1.png&quot; class=&quot;enlarge&quot; data-height=&quot;1274&quot; data-width=&quot;1830&quot; alt=&quot;The Nest app.&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.10.29-AM-1-640x446.png&quot; width=&quot;640&quot; height=&quot;446&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.10.29-AM-1-1280x891.png 2x&quot; alt=&quot;The Nest app.&quot;/&gt;&lt;/a&gt;
&lt;div class=&quot;caption-text&quot;&gt;&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.10.29-AM-1.png&quot; class=&quot;enlarge-link&quot; data-height=&quot;1274&quot; data-width=&quot;1830&quot;&gt;Enlarge&lt;/a&gt; &lt;span class=&quot;sep&quot;&gt;/&lt;/span&gt; The Nest app.&lt;/div&gt;

&lt;p&gt;The app situation is a mess right now, with both a &quot;Google Home&quot; app and a &quot;Nest&quot; app. The Nest app is for thermostats, cameras, the security system, smoke detectors, and any other old Nest products, while the smart speakers, Chromecast, and &quot;Google Nest&quot; smart displays use the Google Home app.&lt;/p&gt;

The Google Nest hardware rebranding muddies the app situation. People buying a newly branded Google Nest Hub or Google Nest Hub Max might be tempted to install the Nest app, but that would be &lt;em&gt;wrong&lt;/em&gt;—these products need to be set up in the Google Home app. The Nest Hub Max smart display has a camera on top, and while this is a &quot;Nest cam&quot; that can record video to Nest's security camera cloud system, the video feed is also viewable in the Google Home app.
&lt;p&gt;Having two smart home apps for inconsistently named products seems like a really clunky solution, and with the Google Home app already picking up some basic Nest camera compatibility, it would not surprise me to hear that the Nest app will shut down. As a Nest thermostat user, I would love for the Nest app to die, because the Nest app is awful. It is unable to get basic functionality right like reliable background location, which is kind of important for a &quot;smart&quot; thermostat designed to sync the house temperature with your comings and goings. Nest app crashes frequently and even when it does work, it doesn't follow any of Google's design language.&lt;/p&gt;
&lt;p&gt;The Nest transition FAQ page asks &quot;What will happen to the Nest app?&quot; and gives a curt response of &quot;At this time, the Nest app will continue to be available.&quot; Google could have answered this question with lots of flowery language about how great the Nest app is and how it empowers users to do more with their smart home ecosystem experience, but this answer instead makes it sound like the Nest app will be jettisoned as soon as Google Home re-implements all of its features.&lt;/p&gt;
&lt;h3&gt;Nest Aware versus Google One&lt;/h3&gt;
&lt;p&gt;Another overlap is in the area of cloud storage subscriptions, where Nest has Nest Aware and Google has Google One. Nest Aware gives you online storage of Nest Cam video footage for $5-$30 a month, depending on how far back you want your video history to go. Google One is an upsell for more storage on your Google Account. A basic Google account gets 15GB of storage for Gmail, Drive, documents, and photos, and Google One offers upgrades starting at 100GB for $2 a month and going to stratospherically high prices, like 30 terabytes for $300 a month.&lt;/p&gt;
&lt;p&gt;Double dipping on storage subscriptions would be pretty lame, but given that Nest products will start to use a Google account, and Google One is for more storage on your Google account, it would make sense for Google One to give you storage for Nest camera footage. Google has other subscription products, but those are always for content, like ad-free YouTube, YouTube TV, or Google Music streaming. In these cases Google is paying a third-party for content and that money needs to come from somewhere.&lt;/p&gt;
&lt;h2&gt;RIP Nest the company, hello Google Nest&lt;/h2&gt;
&lt;a href=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.11.54-AM.png&quot; class=&quot;enlarge&quot; data-height=&quot;462&quot; data-width=&quot;1854&quot;&gt;&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.11.54-AM-640x159.png&quot; width=&quot;640&quot; height=&quot;159&quot; srcset=&quot;https://cdn.arstechnica.net/wp-content/uploads/2019/05/Screen-Shot-2019-05-10-at-2.11.54-AM-1280x319.png 2x&quot;/&gt;&lt;/a&gt;


&lt;p&gt;While Google wanted to spin the Google Nest Hub Max unveiling at Google I/O as some kind of positive thing, it feels like we are witnessing the end of Nest as it used to be. The new &quot;Google Nest&quot; will be all Google, all the time, and anything that isn't a built-by-Google device, application, or service now seems like a legacy item. At some point in the future, it seems like only the brand will be left.&lt;/p&gt;
&lt;p&gt;I've gone to Nest product launches several times, and every time the company would talk about how Nest was the most recognized brand in smart homes. Clearly Google still values the Nest mark and wants to keep the brand around inside Google, but first it has to go through a clumsy and awkward shutdown process, which will almost certainly be damaging to the brand's reputation with existing users (and anyone else paying attention).&lt;/p&gt;
&lt;p&gt;Google has been on a bit of a &lt;a href=&quot;https://arstechnica.com/gadgets/2019/04/googles-constant-product-shutdowns-are-damaging-its-brand/&quot;&gt;product shutdown rampage&lt;/a&gt; in 2019, and you can add &quot;Works with Nest&quot; to the list of things Google has murdered lately, along with &lt;a href=&quot;https://arstechnica.com/gadgets/2018/09/google-kills-google-inbox/&quot;&gt;Google Inbox&lt;/a&gt;, Google+ &lt;a href=&quot;https://twitter.com/RonAmadeo/status/1070755806264610820&quot;&gt;Google Hangouts&lt;/a&gt;, &lt;a href=&quot;https://arstechnica.com/gadgets/2018/05/youtube-music-will-replace-google-play-music-but-wont-kill-user-uploads/&quot;&gt;Google Music&lt;/a&gt;, and &lt;a href=&quot;https://arstechnica.com/gadgets/2019/01/google-kills-the-chromecast-audio/&quot;&gt;Chromecast Audio&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Fri, 10 May 2019 12:37:47 +0000</pubDate>
<dc:creator>redm</dc:creator>
<og:url>https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/</og:url>
<og:title>Nest, the company, died at Google I/O 2019</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2016/06/nest-640x215.jpg</og:image>
<og:description>The Nest ecosystem is dead. Nest accounts are dead. Nest's privacy firewall is dead.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/gadgets/2019/05/nest-the-company-died-at-google-io-2019/</dc:identifier>
</item>
<item>
<title>Amazon must remove toxic school supplies, kids’ jewelry from US marketplace</title>
<link>https://www.atg.wa.gov/news/news-releases/ag-ferguson-amazon-must-remove-toxic-school-supplies-kid-s-jewelry-marketplace</link>
<guid isPermaLink="true" >https://www.atg.wa.gov/news/news-releases/ag-ferguson-amazon-must-remove-toxic-school-supplies-kid-s-jewelry-marketplace</guid>
<description>&lt;p&gt;&lt;em&gt;AG investigation found some school supplies with more than 80 times legal limit of lead&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SEATTLE —&lt;/strong&gt; Attorney General Bob Ferguson today announced that Amazon will commit to nationwide corporate reforms after his office’s investigation found dozens of children’s school supplies sold on its online marketplace had illegal levels of toxic metals lead and cadmium.&lt;/p&gt;
&lt;p&gt;Ferguson’s investigation revealed that individuals in Washington and across the country made at least 15,188 purchases of products with illegal levels of lead and cadmium from Amazon.com. When it learned of the results of the investigation, Amazon contacted the purchasers in early 2019 encouraging the disposal of the toxic items and provided more than $200,000 in refunds. To resolve the investigation without a lawsuit, Amazon entered into a nationwide legally binding agreement to block the sale of children’s schools supplies and jewelry on Amazon.com without lab reports and other proof from the sellers that the products are not toxic.&lt;a href=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/Legal%20Limit%20III.pdf&quot;&gt;&lt;img alt=&quot;Image of frog pencil pouch over 80 times legal limit of lead&quot; src=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/Legal%20Limit%20III.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In addition, Amazon will pay the Attorney General’s Office $700,000, which will be used to fund future environmental protection efforts, including future investigations into toxic children’s products.&lt;/p&gt;
&lt;p&gt;“As a parent, when I buy products for my kids, I expect them to be safe,” said Ferguson. “All retailers must ensure that their products do not pose a threat to Washington children. If they don’t, they will hear from my office.”&lt;/p&gt;
&lt;p&gt;“While so many of us benefit from the convenience of online retailers, the products they sell shouldn’t harm our families or the environment where we live,” said Department of Ecology Director Maia Bellon. “This is especially true with products marketed for kids. I appreciate the close collaboration with the Attorney General in supporting the enforcement of the Children’s Safe Product Act, and I’m proud of the long-term difference we at Ecology can make with our product testing efforts.”&lt;/p&gt;
&lt;p&gt;Both state and federal laws prohibit the sale or distribution of children’s products that contain lead or cadmium above certain levels. Lead can cause a variety of neurological problems in children, and in large amounts, can lead to organ failure and death. The federal Consumer Product Safety Improvement Act prohibits levels of lead exceeding 100 parts-per-million (ppm) in any accessible component of a children’s product. Under state law, levels of cadmium, a metal known to cause cancer, cannot exceed 40 ppm.&lt;/p&gt;
&lt;p&gt;The Attorney General’s Office, in partnership with the Washington State Department of Ecology, tested children’s school supplies for harmful levels of lead and cadmium in 2017 and 2018. The tests targeted products the two agencies suspected might contain toxic metals. In total, two rounds of tests identified 51 products sold on Amazon.com that tested positive for illegal levels of lead and cadmium. In the first round of testing, 16 of the 43 products from Amazon tested positive for illegal levels of toxic metals. In the second round of tests, the two agencies found that 35 of 41 products examined exceed the legal limits. The Department of Ecology paid for the first round of testing and the Attorney General’s Office funded the second round. &lt;/p&gt;
&lt;p&gt;These items featured cartoon characters, plush exteriors and bright primary colors and were marketed to children younger than 12. In particular, some sellers’ pencil pouches had component parts containing approximately 8,500 ppm of lead — more than 80 times the legal limit. In one test, a pencil pouch contained more than 35 times the legal limit of lead and nearly 29 times the legal limit of cadmium.&lt;/p&gt;
&lt;p&gt;Amazon also performed its own tests on several products and confirmed that the levels were higher than those allowed by state and federal laws. &lt;img alt=&quot;Spiderman pencil pouches containing illegal levels of toxic metals&quot; src=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/AM-16-8-Spiderman%20Pencil%20Pouch%202-Pack.jpg&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Children’s school supplies and jewelry found to exceed the legal limits of these toxic metals include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Pencil pouches&lt;/li&gt;
&lt;li&gt;Backpacks&lt;/li&gt;
&lt;li&gt;Lunchboxes&lt;/li&gt;
&lt;li&gt;Book covers&lt;/li&gt;
&lt;li&gt;Bracelets&lt;/li&gt;
&lt;li&gt;Necklaces&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The &lt;a href=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/Amazon%20signed%20AOD.pdf&quot;&gt;legally binding agreement&lt;/a&gt;, filed in King County Superior Court, requires Amazon to discontinue the sale of any children’s school supplies or jewelry containing lead and cadmium levels exceeding those allowed by state and federal laws.&lt;/p&gt;
&lt;p&gt;Amazon also will require all current sellers of these children’s products nationwide to provide certifications and lab testing from an accredited lab showing that their products are safe. The company identified approximately 18,000 sellers on its marketplace that offer around 900,000 individual children’s school supplies and jewelry products. These corporate reforms apply nationwide to all products of this type sold &lt;a href=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/Legal%20Limit%20II.pdf&quot;&gt;&lt;img alt=&quot;Image of pencil case that cadmium and lead above legal limits&quot; src=&quot;https://agportal-s3bucket.s3.amazonaws.com/uploadedfiles/Another/News/Press_Releases/Legal%20Limit%20II.png&quot;/&gt;&lt;/a&gt;on Amazon.com, including those sourced from retail vendors (where Amazon is the seller of record) or sold by third-party marketplace sellers (where Amazon is not the seller of record).&lt;/p&gt;
&lt;p&gt;Any future sellers must provide this certification before listing their products for sale. Moreover, if the Attorney General or Washington Department of Ecology advise Amazon of any children’s school supplies or jewelry that exceed safe levels, Amazon must remove the product from its online marketplace within two business days.&lt;/p&gt;
&lt;p&gt;After Ferguson concluded his investigation and shared the results with Amazon, the online retailer contacted the consumers who purchased the more than 15,000 affected products, including nearly 600 of which sold to Washingtonians, and provided more than $200,000 in refunds. Amazon sent these notices to the email address associated with the purchaser’s account. Amazon also delivered this information to the federal Consumer Product Safety Commission to initiate a recall process.&lt;/p&gt;
&lt;p&gt;Assistant Attorneys General Stacey Bernstein, Bill Sherman and Kelly Wood, along with Special Assistant Attorney General Aurora Janke of the Counsel for Environmental Protection Unit and Assistant Attorney General Patricia Bower of the Consumer Protection Division, handled the case for Washington.&lt;/p&gt;
&lt;p&gt;Attorney General Ferguson created the Counsel for Environmental Protection in 2016 to protect our environment and the safety and health of all Washingtonians.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;-30-&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Office of the Attorney General is the chief legal office for the state of Washington with attorneys and staff in 27 divisions across the state providing legal services to roughly 200 state agencies, boards and commissions. Visit&lt;/em&gt; &lt;a href=&quot;http://www.atg.wa.gov&quot;&gt;&lt;em&gt;www.atg.wa.gov&lt;/em&gt;&lt;/a&gt; &lt;em&gt;to learn more.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Contacts:&lt;/p&gt;
&lt;p&gt;Brionna Aho, Communications Director, (360) 753-2727; &lt;a href=&quot;mailto:Brionna.Aho@atg.wa.gov&quot;&gt;Brionna.Aho@atg.wa.gov&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Q7Ghakc5Xp4&quot; width=&quot;560&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 10 May 2019 02:20:19 +0000</pubDate>
<dc:creator>tareqak</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.atg.wa.gov/news/news-releases/ag-ferguson-amazon-must-remove-toxic-school-supplies-kid-s-jewelry-marketplace</dc:identifier>
</item>
<item>
<title>Chelsea Manning released from jail with expiration of grand jury</title>
<link>https://www.washingtonpost.com/local/public-safety/chelsea-manning-released-from-jail-where-she-had-been-held-for-refusing-to-testify-in-wikileaks-case/2019/05/09/dbbbac4c-70ff-11e9-8be0-ca575670e91c_story.html?noredirect=on&amp;utm_term=.95393ab8d565</link>
<guid isPermaLink="true" >https://www.washingtonpost.com/local/public-safety/chelsea-manning-released-from-jail-where-she-had-been-held-for-refusing-to-testify-in-wikileaks-case/2019/05/09/dbbbac4c-70ff-11e9-8be0-ca575670e91c_story.html?noredirect=on&amp;utm_term=.95393ab8d565</guid>
<description>&lt;div class=&quot;author-sig-line-wrapper&quot;&gt;
&lt;div class=&quot;author-sig-line&quot;&gt;
&lt;div class=&quot;author-byline&quot;&gt;
&lt;div class=&quot;author-wrapper&quot; data-authorname=&quot;Rachel Weiner&quot;&gt;

&lt;div class=&quot;author-hover-card&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;author-headshot&quot;&gt;&lt;a href=&quot;https://www.washingtonpost.com/people/rachel-weiner/&quot;&gt;&lt;img class=&quot;unprocessed _1-to-1 placeholder&quot; src=&quot;https://www.washingtonpost.com/resizer/yAFxThroW-CI5t-yu8Q6FsF7kHI=/1x1/www.washingtonpost.com/pb/resources/img/spacer.gif&quot; data-hi-res-src=&quot;https://www.washingtonpost.com/resizer/SJxDbpizXhTRuCi38TUXFF9FTXY=/90x90/s3.amazonaws.com/arc-authors/washpost/9799aab6-795a-49cc-b53d-2b91a9ca1d6d.png&quot; data-low-res-src=&quot;https://www.washingtonpost.com/resizer/KtuOgLBBAbUveqhYy5KzowixwgY=/29x29/s3.amazonaws.com/arc-authors/washpost/9799aab6-795a-49cc-b53d-2b91a9ca1d6d.png&quot; data-raw-src=&quot;https://s3.amazonaws.com/arc-authors/washpost/9799aab6-795a-49cc-b53d-2b91a9ca1d6d.png&quot; data-threshold=&quot;29&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;a class=&quot;author-name&quot; href=&quot;https://www.washingtonpost.com/people/rachel-weiner/&quot;&gt;Rachel Weiner&lt;/a&gt;
&lt;div class=&quot;author-bio&quot;&gt;Local reporter covering federal court in Alexandria, Va. and local court in Arlington and Alexandria.&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;span class=&quot;author-timestamp&quot; itemprop=&quot;datePublished&quot; content=&quot;2019-05-10T08:03-500&quot;&gt;May 10 at 8:03 AM&lt;/span&gt;&lt;/div&gt;&lt;p data-elm-loc=&quot;1&quot;&gt;Former Army intelligence analyst Chelsea Manning has been released from the Alexandria, Va., jail where she was held after refusing to testify in the grand jury investigation of WikiLeaks founder Julian Assange, her lawyers said.&lt;/p&gt;
&lt;p data-elm-loc=&quot;2&quot;&gt;She was released because that grand jury has expired. She has been subpoenaed to appear before a new grand jury on May 16 and may be returned to jail if she again refuses to testify, her support team said in a statement.&lt;/p&gt;
&lt;p data-elm-loc=&quot;3&quot;&gt;“Chelsea will continue to refuse to answer questions, and will use every available legal defense to prove . . . that she has just cause for her refusal to give testimony,” the statement read.&lt;/p&gt;
&lt;p data-elm-loc=&quot;4&quot;&gt;A spokesman with the U.S. Attorney’s Office in the Eastern District of Virginia declined to comment.&lt;/p&gt;
&lt;p data-elm-loc=&quot;5&quot;&gt;Manning shared hundreds of thousands of classified government documents with WikiLeaks in 2010, while serving as an Army intelligence analyst in Iraq. ­Assange, currently jailed in London after seven years in asylum at Ecuador’s British embassy, is &lt;a href=&quot;https://www.washingtonpost.com/local/legal-issues/us-charge-against-wikileaks-founder-julian-assange-unsealed/2019/04/11/90fce90a-5c46-11e9-a00e-050dc7b82693_story.html?utm_term=.af38178f08f3&quot; title=&quot;www.washingtonpost.com&quot;&gt;accused of conspiring&lt;/a&gt; to help Manning break a password that would allow anonymous access to a Defense Department computer.&lt;/p&gt;
&lt;p data-elm-loc=&quot;6&quot;&gt;Manning was initially subpoenaed in January to come before a grand jury but has refused to appear, rejecting an offer of immunity from prosecution in both military and federal court. She was &lt;a href=&quot;https://www.washingtonpost.com/local/public-safety/chelsea-manning-sent-to-jail-for-refusing-to-testify-in-wikileaks-case/2019/03/08/ecb9eda8-41b4-11e9-9361-301ffb5bd5e6_story.html?utm_term=.fbf111e6f999&quot; title=&quot;www.washingtonpost.com&quot;&gt;jailed for civil contempt of court&lt;/a&gt; in March.&lt;/p&gt;
&lt;p data-elm-loc=&quot;7&quot;&gt;While she &lt;a href=&quot;https://www.washingtonpost.com/local/legal-issues/appeals-court-wont-release-chelsea-manning-from-jail-in-julian-assange-case/2019/04/22/cadf874e-64f8-11e9-a1b6-b29b90efa879_story.html?utm_term=.9e6e783f29da&quot; title=&quot;www.washingtonpost.com&quot;&gt;failed to quash the subpoena&lt;/a&gt;, Manning filed an affidavit this week saying she will never cooperate and, therefore, further incarceration is pointless.&lt;/p&gt;
&lt;p data-elm-loc=&quot;8&quot;&gt;“The idea I hold the keys to my own cell is an absurd one, as I face the prospect of suffering either way due to this unnecessary and punitive subpoena: I can either go to jail or betray my principles,” she said in a letter to the court. &lt;span&gt;“The latter exists as a much worse prison than the government can construct.”&lt;/span&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;9&quot;&gt;She added, as she has before, that she does not believe anything she would say would “provide any value to an investigation.”&lt;/p&gt;
&lt;p data-elm-loc=&quot;10&quot;&gt;Court filings indicate prosecutors believe Manning has &lt;a href=&quot;https://www.washingtonpost.com/local/legal-issues/prosecutors-think-chelsea-manning-did-not-tell-truth-about-wikileaks-her-lawyers-say/2019/03/21/ded935a2-4be8-11e9-9663-00ac73f49662_story.html?utm_term=.6c788b887122&quot; title=&quot;www.washingtonpost.com&quot;&gt;offered inconsistent information&lt;/a&gt; regarding her relationship with Assange. In a &lt;a href=&quot;https://www.washingtonpost.com/local/legal-issues/criminal-complaint-details-case-against-julian-assange/2019/04/15/454f5786-5fa7-11e9-bfad-36a7eb36cb60_story.html?utm_term=.6c0cd119557a&quot; title=&quot;www.washingtonpost.com&quot;&gt;criminal complaint&lt;/a&gt; unsealed in April, they note that she claimed in military court that she was never sure if she was speaking directly to the WikiLeaks founder. But in conversations with the hacker who turned her in to authorities, she said she had confirmed Assange’s identity, according to court papers.&lt;/p&gt;
&lt;p data-elm-loc=&quot;11&quot;&gt;Civil contempt is meant to be coercive rather than punitive. Manning’s attorneys previously noted that other grand jury resisters have been freed from jail on the grounds that their incarcerations had become punitive.&lt;/p&gt;
&lt;p data-elm-loc=&quot;12&quot;&gt;“Whatever one may make of her beliefs, it is evident that they are well-developed, robust, and sincerely held,” her attorney Moira Meltzer-Cohen wrote the court. &lt;span&gt;“It is inconceivable that Chelsea Manning will ever change her mind.”&lt;/span&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;13&quot;&gt;Doing so, Meltzer-Cohen added, would damage Manning’s reputation among the activists who supported her both in her initial disclosure of diplomatic and military secrets and in her opposition to the grand jury system.&lt;/p&gt;
&lt;p data-elm-loc=&quot;14&quot;&gt;Manning was convicted at a court-martial in 2013 of crimes related to her disclosures and sentenced to 35 years in prison, but she was released by President Obama after seven years in custody.&lt;/p&gt;
&lt;p data-elm-loc=&quot;15&quot;&gt;&lt;em&gt;An earlier version of this story incorrectly said Manning was an intelligence officer. She was an intelligence analyst.&lt;/em&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;17&quot; class=&quot;interstitial-link&quot;&gt;&lt;strong&gt;Read more:&lt;/strong&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;18&quot; class=&quot;interstitial-link&quot;&gt;&lt;a href=&quot;https://www.washingtonpost.com/local/public-safety/former-intelligence-analyst-charged-with-leaking-drone-details-to-news-outlet/2019/05/09/19eeb9e2-7258-11e9-8be0-ca575670e91c_story.html?utm_term=.e111ce17e8c7&quot;&gt;Former intelligence analyst charged with leaking drone details to news outlet&lt;/a&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;19&quot; class=&quot;interstitial-link&quot;&gt;&lt;a href=&quot;https://www.washingtonpost.com/local/public-safety/dc-court-of-appeals-disbars-paul-manafort-following-felony-convictions/2019/05/09/bcc970ee-71f4-11e9-9f06-5fc2ee80027a_story.html?utm_term=.e50709e7865e&quot;&gt;D.C. Court of Appeals disbars Paul Manafort following felony convictions&lt;/a&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;20&quot; class=&quot;interstitial-link&quot;&gt;&lt;a href=&quot;https://www.washingtonpost.com/local/public-safety/prosecutors-say-ex-dc-jail-worker-had-her-boyfriend-killed-her-lawyer-says-she-has-been-wrongly-accused/2019/05/08/5c3fe4c4-70c8-11e9-8be0-ca575670e91c_story.html?utm_term=.0d57cf3c33a1&quot;&gt;Prosecutors say ex-D.C. jail worker had her boyfriend killed. Her lawyer says she has been wrongly accused.&lt;/a&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;21&quot; class=&quot;interstitial-link&quot;&gt;&lt;a href=&quot;https://subscribe.washingtonpost.com/newsletters/#/bundle/localheads?method=SURL&amp;amp;location=ART&quot;&gt;Local newsletters: Local headlines (8 a.m.) |&lt;/a&gt; &lt;a href=&quot;https://subscribe.washingtonpost.com/newsletters/#/bundle/buzz&quot; title=&quot;subscribe.washingtonpost.com&quot;&gt;Afternoon Buzz (4 p.m.)&lt;/a&gt;&lt;/p&gt;
&lt;p data-elm-loc=&quot;22&quot; class=&quot;interstitial-link&quot;&gt;&lt;a href=&quot;https://www.facebook.com/postlocal&quot;&gt;Like PostLocal on Facebook |&lt;/a&gt; &lt;a href=&quot;https://twitter.com/postlocal&quot; title=&quot;twitter.com&quot;&gt;Follow @postlocal on Twitter&lt;/a&gt; | &lt;a href=&quot;https://www.washingtonpost.com/local/&quot; title=&quot;www.washingtonpost.com&quot;&gt;Latest local news&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 10 May 2019 02:03:43 +0000</pubDate>
<dc:creator>asadhaider</dc:creator>
<og:type>article</og:type>
<og:url>https://www.washingtonpost.com/local/public-safety/chelsea-manning-released-from-jail-where-she-had-been-held-for-refusing-to-testify-in-wikileaks-case/2019/05/09/dbbbac4c-70ff-11e9-8be0-ca575670e91c_story.html</og:url>
<og:image>https://www.washingtonpost.com/resizer/N8tb6XvYGuDSRumGMVieSNn3EdQ=/1484x0/arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/HISEF5TFBYI6TCMFJTZQCR55ZI.jpg</og:image>
<og:title>Chelsea Manning released from jail, where she had been held for refusing to testify in WikiLeaks case</og:title>
<og:description>Manning’s release came because the grand jury investigating Julian Assange has expired.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.washingtonpost.com/local/public-safety/chelsea-manning-released-from-jail-where-she-had-been-held-for-refusing-to-testify-in-wikileaks-case/2019/05/09/dbbbac4c-70ff-11e9-8be0-ca575670e91c_story.html?noredirect=on</dc:identifier>
</item>
<item>
<title>Blue Moon</title>
<link>http://blueorigin.com/blue-moon</link>
<guid isPermaLink="true" >http://blueorigin.com/blue-moon</guid>
<description>&lt;p&gt;Versatility&lt;/p&gt;
&lt;p&gt;Large Lunar Landing Payload Capability&lt;/p&gt;
&lt;div class=&quot;Copy__Primary Copy__PrimaryDark bard&quot; readability=&quot;13&quot;&gt;
&lt;p&gt;Blue Moon can land multiple metric tons of payload on the lunar surface.&lt;/p&gt;
&lt;p&gt;The top deck and lower bays easily accommodate a wide variety of payloads, including large payloads and ESPA-class payloads with standard ring port interfaces. There are lower mounting locations for payloads, useful for closer access to the lunar surface and off-loading. &lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 09 May 2019 21:08:21 +0000</pubDate>
<dc:creator>goshx</dc:creator>
<og:type>website</og:type>
<og:title>Blue Moon</og:title>
<og:description>Earth, in all its beauty, is just our starting place. Blue Origin is opening the promise of space to all.</og:description>
<og:url>https://www-dev.blueorigin.com/blue-moon</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://blueorigin.com/blue-moon</dc:identifier>
</item>
<item>
<title>TensorFlow Graphics: Computer Graphics Meets Deep Learning</title>
<link>https://medium.com/tensorflow/introducing-tensorflow-graphics-computer-graphics-meets-deep-learning-c8e3877b7668</link>
<guid isPermaLink="true" >https://medium.com/tensorflow/introducing-tensorflow-graphics-computer-graphics-meets-deep-learning-c8e3877b7668</guid>
<description>&lt;div class=&quot;uiScale uiScale-ui--regular uiScale-caption--regular u-flexCenter u-marginVertical24 u-fontSize15 js-postMetaLockup&quot;&gt;
&lt;div class=&quot;u-flex0&quot;&gt;
&lt;div class=&quot;u-relative u-inlineBlock u-flex0&quot;&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/fit/c/100/100/1*iDQvKoz7gGHc6YXqvqWWZQ.png&quot; class=&quot;avatar-image u-size50x50&quot; alt=&quot;Go to the profile of TensorFlow&quot;/&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p name=&quot;c91c&quot; id=&quot;c91c&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Posted by&lt;/em&gt; &lt;a href=&quot;https://twitter.com/JPCValentin&quot; data-href=&quot;https://twitter.com/JPCValentin&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Julien Valentin&lt;/em&gt;&lt;/a&gt; &lt;em class=&quot;markup--em markup--p-em&quot;&gt;and&lt;/em&gt; &lt;a href=&quot;https://twitter.com/_sofien_&quot; data-href=&quot;https://twitter.com/_sofien_&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Sofien Bouaziz&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*gS7OPab2UBrXbFnsbr694Q.jpeg&quot; data-width=&quot;1414&quot; data-height=&quot;636&quot; data-is-featured=&quot;true&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*gS7OPab2UBrXbFnsbr694Q.jpeg&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*gS7OPab2UBrXbFnsbr694Q.jpeg&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;291f&quot; id=&quot;291f&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Github repository: &lt;a href=&quot;https://www.google.com/url?q=https://github.com/tensorflow/graphics&amp;amp;sa=D&amp;amp;source=hangouts&amp;amp;ust=1557515531193000&amp;amp;usg=AFQjCNHGtImz3u-RbH6QznsYM5q2EreHfQ&quot; data-href=&quot;https://www.google.com/url?q=https://github.com/tensorflow/graphics&amp;amp;sa=D&amp;amp;source=hangouts&amp;amp;ust=1557515531193000&amp;amp;usg=AFQjCNHGtImz3u-RbH6QznsYM5q2EreHfQ&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noreferrer noopener nofollow noopener&quot; target=&quot;_blank&quot;&gt;https://github.com/tensorflow/graphics&lt;/a&gt;&lt;/p&gt;
&lt;p name=&quot;6715&quot; id=&quot;6715&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The last few years have seen a rise in novel differentiable graphics layers which can be inserted in neural network architectures. From spatial transformers to differentiable graphics renderers, these new layers leverage the knowledge acquired over years of computer vision and graphics research to build new and more efficient network architectures. Explicitly modeling geometric priors and constraints into neural networks opens up the door to architectures that can be trained robustly, efficiently, and more importantly, in a self-supervised fashion.&lt;/p&gt;
&lt;p name=&quot;3b95&quot; id=&quot;3b95&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;At a high level, a computer graphics pipeline requires 3D objects and their absolute positioning in the scene, a description of the material they are made of, lights and a camera. This scene description is then interpreted by a renderer to generate a synthetic rendering.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*cc_31-Ko0Pe6Rw76&quot; data-width=&quot;1280&quot; data-height=&quot;826&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*cc_31-Ko0Pe6Rw76&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*cc_31-Ko0Pe6Rw76&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;59c7&quot; id=&quot;59c7&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;In comparison, a computer vision system would start from an image and try to infer the parameters of the scene. This allows the prediction of which objects are in the scene, what materials they are made of, and their three dimensional position and orientation.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*GQqnYSPWJRUxA4Nl&quot; data-width=&quot;1280&quot; data-height=&quot;831&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*GQqnYSPWJRUxA4Nl&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*GQqnYSPWJRUxA4Nl&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;d1d4&quot; id=&quot;d1d4&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Training machine learning systems capable of solving these complex 3D vision tasks most often requires large quantities of data. As labelling data is a costly and complex process, it is important to have mechanisms to design machine learning models that can comprehend the three dimensional world while being trained without much supervision. Combining computer vision and computer graphics techniques provides a unique opportunity to leverage the vast amounts of readily available unlabelled data. As illustrated in the image below, this can, for instance, be achieved using analysis by synthesis where the vision system extracts the scene parameters and the graphics system renders back an image based on them. If the rendering matches the original image, the vision system has accurately extracted the scene parameters. In this setup, computer vision and computer graphics go hand-in-hand, forming a single machine learning system similar to an autoencoder, which can be trained in a self-supervised manner.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*75G2Q6wIygbNmsR5&quot; data-width=&quot;1280&quot; data-height=&quot;757&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*75G2Q6wIygbNmsR5&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*75G2Q6wIygbNmsR5&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;2037&quot; id=&quot;2037&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Differentiable Graphics Layers&lt;/h3&gt;
&lt;p name=&quot;674a&quot; id=&quot;674a&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;In the following, we will explore some of the functionalities available in TensorFlow Graphics. This tour is not exhaustive; for more information visit our &lt;a href=&quot;https://github.com/tensorflow/graphics/&quot; data-href=&quot;https://github.com/tensorflow/graphics/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt; to discover the new possibilities made available by TensorFlow Graphics.&lt;/p&gt;
&lt;p name=&quot;9259&quot; id=&quot;9259&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Transformations&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;fbde&quot; id=&quot;fbde&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Object transformations control the position of objects in space. In the illustration below, the axis-angle formalism is used to rotate a cube. The rotation axis is pointing up and the angle is positive, leading the cube to rotate counterclockwise. In this &lt;a href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/6dof_alignment.ipynb&quot; data-href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/6dof_alignment.ipynb&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Colab example&lt;/a&gt;, we show how rotation formalisms can be trained in a neural network that is trained to both predict the rotation and translation of an observed object. This task is at the core of many applications, including robots that focus on interacting with their environment. In these scenarios, grasping objects (e.g. by their handle) with a robotic arm requires a precise estimation of the position of these objects with respect to the arm.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*lyCJriyEIb9hHKVQcP8P0A.gif&quot; data-width=&quot;1280&quot; data-height=&quot;554&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*lyCJriyEIb9hHKVQcP8P0A.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*lyCJriyEIb9hHKVQcP8P0A.gif&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;8c67&quot; id=&quot;8c67&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Modelling cameras&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;4dd9&quot; id=&quot;4dd9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Camera models play a fundamental role in computer vision as they greatly influence the appearance of three dimensional objects projected onto the image plane. As can be observed below, the cube appears to be scaling up and down, while in reality the changes are only due to changes in focal length. Try this &lt;a href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/intrinsics_optimization.ipynb&quot; data-href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/intrinsics_optimization.ipynb&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Colab example&lt;/a&gt; for more details about camera models and a concrete example of how to use them in TensorFlow.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*klR2j5WgymcXhovj-mPjeg.gif&quot; data-width=&quot;1280&quot; data-height=&quot;500&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*klR2j5WgymcXhovj-mPjeg.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*klR2j5WgymcXhovj-mPjeg.gif&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;a7c0&quot; id=&quot;a7c0&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Materials&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;c2b3&quot; id=&quot;c2b3&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Material models define how light interacts with objects to give them their unique appearance. For instance, some materials like plaster reflect light uniformly in all directions, where others like mirrors are purely specular. In this interactive &lt;a href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/reflectance.ipynb&quot; data-href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/reflectance.ipynb&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Colab notebook&lt;/a&gt;, you will learn how to generate the following renderings using Tensorflow Graphics. You will also have the opportunity to play with the parameters of the material and the light to develop a good sense of how they interact. Accurately predicting material properties is fundamental to many tasks. For instance, it can allow users to drop virtual furniture in their environment and have the pieces photo-realistically blend with their interior, giving users an accurate perception of how that piece of furniture would look.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*vvIjTfEy9oh1Q6IG&quot; data-width=&quot;950&quot; data-height=&quot;288&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*vvIjTfEy9oh1Q6IG&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*vvIjTfEy9oh1Q6IG&quot;/&gt;&lt;/div&gt;
&lt;p name=&quot;8470&quot; id=&quot;8470&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;&lt;strong class=&quot;markup--strong markup--p-strong&quot;&gt;Geometry — 3D convolutions and pooling&lt;/strong&gt;&lt;/p&gt;
&lt;p name=&quot;20ae&quot; id=&quot;20ae&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In recent years, sensors outputting three dimensional data in the form of point clouds or meshes are becoming part of our everyday life, from smartphone depth sensors to self driving car lidars. Due to their irregular structure, convolutions on these representations are significantly harder to implement compared to images which offer a regular grid structure. TensorFlow Graphics comes with two 3D convolution layers, and one 3D pooling layer, allowing for instance the training of networks to perform semantic part classification on meshes as illustrated below and demonstrated in this &lt;a href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/mesh_segmentation_demo.ipynb&quot; data-href=&quot;https://colab.sandbox.google.com/github/tensorflow/graphics/blob/master/tensorflow_graphics/notebooks/mesh_segmentation_demo.ipynb&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Colab notebook&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*XnV_1p5S3MxQ0Yvr&quot; data-width=&quot;800&quot; data-height=&quot;486&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*XnV_1p5S3MxQ0Yvr&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*XnV_1p5S3MxQ0Yvr&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;ced7&quot; id=&quot;ced7&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;TensorBoard 3d&lt;/h3&gt;
&lt;p name=&quot;53cf&quot; id=&quot;53cf&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;Visual debugging is a great way to assess whether an experiment is going in the right direction. To this end, TensorFlow Graphics comes with a TensorBoard plugin to interactively visualize 3d meshes and point clouds.&lt;/p&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;0*y7sUnS_yx9B34HFr&quot; data-width=&quot;800&quot; data-height=&quot;450&quot; data-action=&quot;zoom&quot; data-action-value=&quot;0*y7sUnS_yx9B34HFr&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/0*y7sUnS_yx9B34HFr&quot;/&gt;&lt;/div&gt;
&lt;h3 name=&quot;324d&quot; id=&quot;324d&quot; class=&quot;graf graf--h3 graf-after--figure&quot;&gt;Get started&lt;/h3&gt;
&lt;p name=&quot;ad24&quot; id=&quot;ad24&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The first release of TensorFlow Graphics supports is compatible with TensorFlow 1.13.1 and above. You will find the API and instructions to install the library by visiting &lt;a href=&quot;https://www.tensorflow.org/graphics/&quot; data-href=&quot;https://www.tensorflow.org/graphics/&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;https://www.tensorflow.org/graphics&lt;/a&gt;.&lt;/p&gt;
&lt;h3 name=&quot;f295&quot; id=&quot;f295&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Acknowledgments&lt;/h3&gt;
&lt;p name=&quot;6ef7&quot; id=&quot;6ef7&quot; class=&quot;graf graf--p graf-after--h3 graf--trailing&quot;&gt;Creating TensorFlow Graphics was a team effort. Special thanks to Cem Keskin, &lt;a href=&quot;https://twitter.com/podlipensky&quot; data-href=&quot;https://twitter.com/podlipensky&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Pavel Pidlypenskyi&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kiamada&quot; data-href=&quot;https://twitter.com/kiamada&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Ameesh Makadia&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/AvneeshSud&quot; data-href=&quot;https://twitter.com/AvneeshSud&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Avneesh Sud&lt;/a&gt; who all made significant contributions.&lt;/p&gt;
</description>
<pubDate>Thu, 09 May 2019 20:38:26 +0000</pubDate>
<dc:creator>lelf</dc:creator>
<og:title>Introducing TensorFlow Graphics: Computer Graphics Meets Deep Learning</og:title>
<og:url>https://medium.com/tensorflow/introducing-tensorflow-graphics-computer-graphics-meets-deep-learning-c8e3877b7668</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*gS7OPab2UBrXbFnsbr694Q.jpeg</og:image>
<og:description>Posted by Julien Valentin and Sofien Bouaziz</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/tensorflow/introducing-tensorflow-graphics-computer-graphics-meets-deep-learning-c8e3877b7668</dc:identifier>
</item>
<item>
<title>Technical Details on the Recent Firefox Add-On Outage</title>
<link>https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/</link>
<guid isPermaLink="true" >https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/</guid>
<description>&lt;p&gt;&lt;em&gt;Editor’s Note: May 9, 8:22 pt – Updated as follows: (1) Fixed verb tense (2) Clarified the situation with downstream distros. For more detail, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1549886&quot;&gt;Bug 1549886&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Recently, Firefox had an incident in which most add-ons stopped working. This was due to an error on our end: we let one of the certificates used to sign add-ons expire which had the effect of disabling the vast majority of add-ons. Now that we’ve fixed the problem for most users and most people’s add-ons are restored, I wanted to walk through the details of what happened, why, and how we repaired it.&lt;/p&gt;
&lt;h2&gt;Background: Add-Ons and Add-On Signing&lt;/h2&gt;
&lt;p&gt;Although many people use Firefox out of the box, Firefox also supports a powerful extension mechanism called “add-ons”. Add-ons allow users to add third party features to Firefox that extend the capabilities we offer by default. Currently there are over 15,000 Firefox add-ons with capabilities ranging from &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ublock-origin/&quot;&gt;blocking ads&lt;/a&gt; to &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/tree-style-tab/&quot;&gt;managing hundreds of tabs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Firefox requires that all add-ons that are installed be &lt;a href=&quot;https://blog.mozilla.org/addons/2015/02/10/extension-signing-safer-experience/&quot;&gt;digitally signed&lt;/a&gt;. This requirement is intended to protect users from malicious add-ons by requiring some minimal standard of review by Mozilla staff. Before we introduced this requirement in 2015, we had &lt;a href=&quot;https://blog.mozilla.org/addons/2015/04/15/the-case-for-extension-signing/&quot;&gt;serious problems&lt;/a&gt; with malicious add-ons.&lt;/p&gt;
&lt;p&gt;The way that the add-on signing works is that Firefox is configured with a preinstalled “root certificate”. That root is stored offline in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Hardware_security_module&quot;&gt;hardware security module (HSM)&lt;/a&gt;. Every few years it is used to sign a new “intermediate certificate” which is kept online and used as part of the signing process. When an add-on is presented for signature, we generate a new temporary “end-entity certificate” and sign that using the intermediate certificate. The end-entity certificate is then used to sign the add-on itself. Shown visually, this looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/05/Add-on-blog-post-visual-May-7-2019.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-33450&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/05/Add-on-blog-post-visual-May-7-2019-250x280.png&quot; alt=&quot;Diagram showing the digital signature workflow from Root to Add-on&quot; width=&quot;359&quot; height=&quot;402&quot; srcset=&quot;https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-May-7-2019-250x280.png 250w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-May-7-2019-768x859.png 768w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-May-7-2019-500x559.png 500w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-May-7-2019.png 987w&quot; sizes=&quot;(max-width: 359px) 100vw, 359px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that each certificate has a “subject” (to whom the certificate belongs) and an “issuer” (the signer). In the case of the root, these are the same entity, but for other certificates, the issuer of a certificate is the subject of the certificate that signed it.&lt;/p&gt;
&lt;p&gt;An important point here is that each add-on is signed by its own end-entity certificate, but nearly all add-ons share the same intermediate certificate &lt;sup&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/#footnote-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. It is this certificate that encountered a problem: Each certificate has a fixed period during which it is valid. Before or after this window, the certificate won’t be accepted, and an add-on signed with that certificate can’t be loaded into Firefox. Unfortunately, the intermediate certificate we were using expired just after 1AM UTC on May 4, and immediately every add-on that was signed with that certificate become unverifiable and could not be loaded into Firefox.&lt;/p&gt;
&lt;p&gt;Although add-ons all expired around midnight, the impact of the outage wasn’t felt immediately. The reason for this is that Firefox doesn’t continuously check add-ons for validity. Rather, all add-ons are checked about every 24 hours, with the time of the check being different for each user. The result is that some people experienced problems right away, some people didn’t experience them until much later. We at Mozilla first became aware of the problem around 6PM Pacific time on Friday May 3 and immediately assembled a team to try to solve the issue.&lt;/p&gt;
&lt;h2&gt;Damage Limitation&lt;/h2&gt;
&lt;p&gt;Once we realized what we were up against, we took several steps to try to avoid things getting any worse.&lt;/p&gt;
&lt;p&gt;First, we disabled signing of new add-ons. This was sensible at the time because we were signing with a certificate that we knew was expired. In retrospect, it might have been OK to leave it up, but it also turned out to interfere with the “hardwiring a date” mitigation we discuss below (though eventually didn’t use) and so it’s good we preserved the option. Signing is now back up.&lt;/p&gt;
&lt;p&gt;Second, we immediately pushed a hotfix which suppressed re-validating the signatures on add-ons. The idea here was to avoid breaking users who hadn’t re-validated yet. We did this before we had any other fix, and have removed it now that fixes are available.&lt;/p&gt;
&lt;h2&gt;Working in Parallel&lt;/h2&gt;
&lt;p&gt;In theory, fixing a problem like this looks simple: make a new, valid certificate and republish every add-on with that certificate. Unfortunately, we quickly determined that this wouldn’t work for a number of reasons:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There are a very large number of add-ons (over 15,000) and the signing service isn’t optimized for bulk signing, so just re-signing every add-on would take longer than we wanted.&lt;/li&gt;
&lt;li&gt;Once add-ons were signed, users would need to get a new add-on. Some add-ons are hosted on Mozilla’s servers and Firefox would update those add-ons within 24 hours, but users would have to manually update any add-ons that they had installed from other sources, which would be very inconvenient.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Instead, we focused on trying to develop a fix which we could provide to all our users with little or no manual intervention.&lt;/p&gt;
&lt;p&gt;After examining a number of approaches, we quickly converged on two major strategies which we pursued in parallel:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Patching Firefox to change the date which is used to validate the certificate. This would make existing add-ons magically work again, but required shipping a new build of Firefox (a “dot release”).&lt;/li&gt;
&lt;li&gt;Generate a replacement certificate that was still valid and somehow convince Firefox to accept it instead of the existing, expired certificate.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;We weren’t sure that either of these would work, so we decided to pursue them in parallel and deploy the first one that looked like it was going to work. At the end of the day, we ended up deploying the second fix, the new certificate, which I’ll describe in some more detail below.&lt;/p&gt;
&lt;h2&gt;A Replacement Certificate&lt;/h2&gt;
&lt;p&gt;As suggested above, there are two main steps we had to follow here:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Generate a new, valid, certificate.&lt;/li&gt;
&lt;li&gt;Install it remotely in Firefox.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In order to understand why this works, you need to know a little more about how Firefox validates add-ons. The add-on itself comes as a bundle of files that includes the certificate chain used to sign it. The result is that the add-on is independently verifiable as long as you know the root certificate, which is configured into Firefox at build time. However, as I said, the intermediate certificate was broken, so the add-on wasn’t actually verifiable.&lt;/p&gt;
&lt;p&gt;However, it turns out that when Firefox tries to validate the add-on, it’s not limited to just using the certificates in the add-on itself. Instead, it tries to build a valid chain of certificates starting at the end-entity certificate and continuing until it gets to the root. The algorithm is complicated, but at a high level, you start with the end-entity certificate and then find a certificate whose subject is equal to the issuer of the end-entity certificate (i.e., the intermediate certificate). In the simple case, that’s just the intermediate that shipped with the add-on, but it could be any certificate that the browser happens to know about. If we can remotely add a new, valid, certificate, then Firefox will try that as well. The figure below shows the situation before and after we install the new certificate.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/05/Add-on-blog-post-visual-2-May-7-2019.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-33451&quot; src=&quot;https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2019/05/Add-on-blog-post-visual-2-May-7-2019-250x169.png&quot; alt=&quot;a diagram showing two workflows, before and after we installed a new valid certificate&quot; width=&quot;519&quot; height=&quot;351&quot; srcset=&quot;https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-2-May-7-2019-250x169.png 250w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-2-May-7-2019-768x520.png 768w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-2-May-7-2019-500x339.png 500w, https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-2-May-7-2019.png 1384w&quot; sizes=&quot;(max-width: 519px) 100vw, 519px&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once the new certificate is installed, Firefox has two choices for how to validate the certificate chain, use the old invalid certificate (which won’t work) and use the new valid certificate (which will work). An important feature here is that the new certificate has the same subject name and public key as the old certificate, so that its signature on the End-Entity certificate is valid. Fortunately, Firefox is smart enough to try both until it finds a path that works, so the add-on becomes valid again. Note that this is the same logic we use for validating TLS certificates, so it’s relatively well understood code that we were able to leverage.&lt;sup&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/#footnote-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The great thing about this fix is that it doesn’t require us to change any existing add-on. As long as we get the new certificate into Firefox, then even add-ons which are carrying the old certificate will just automatically verify. The tricky bit then becomes getting the new certificate into Firefox, which we need to do automatically and remotely, and then getting Firefox to recheck all the add-ons that may have been disabled.&lt;/p&gt;
&lt;h2&gt;Normandy and the Studies System&lt;/h2&gt;
&lt;p&gt;Ironically, the solution to this problem is a special type of add-on called a system add-on (SAO). In order to let us do research studies, we have developed a system called Normandy which lets us serve SAOs to Firefox users. Those SAOs automatically execute on the user’s browser and while they are usually used for running experiments, they also have extensive access to Firefox internal APIs. Important for this case, they can add new certificates to the certificate database that Firefox uses to verify add-ons.&lt;sup&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/#footnote-3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;So the fix here is to build a SAO which does two things:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Install the new certificate we have made.&lt;/li&gt;
&lt;li&gt;Force the browser to re-verify every add-on so that the ones which were disabled become active.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;But wait, you say. Add-ons don’t work so how do we get it to run? Well, we sign it with the new certificate!&lt;/p&gt;
&lt;h2&gt;Putting it all together… and what took so long?&lt;/h2&gt;
&lt;p&gt;OK, so now we’ve got a plan: issue a new certificate to replace the old one, build a system add-on to install it on Firefox, and deploy it via Normandy. Starting from about 6 PM Pacific on Friday May 3, we were shipping the fix in Normandy at 2:44 AM, or after less than 9 hours, and then it took another 6-12 hours before most of our users had it. This is actually quite good from a standing start, but I’ve seen a number of questions on Twitter about why we couldn’t get it done faster. There are a number of steps that were time consuming.&lt;/p&gt;
&lt;p&gt;First, it took a while to issue the new intermediate certificate. As I mentioned above, the Root certificate is in a hardware security module which is stored offline. This is good security practice, as you use the Root very rarely and so you want it to be secure, but it’s obviously somewhat inconvenient if you want to issue a new certificate on an emergency basis. At any rate, one of our engineers had to drive to the secure location where the HSM is stored. Then there were a few false starts where we didn’t issue exactly the right certificate, and each attempt cost an hour or two of testing before we knew exactly what to do.&lt;/p&gt;
&lt;p&gt;Second, developing the system add-on takes some time. It’s conceptually very simple, but even simple programs require taking some care, and we really wanted to make sure we didn’t make things worse. And before we shipped the SAO, we had to test it, and that takes time, especially because it has to be signed. But the signing system was disabled, so we had to find some workarounds for that.&lt;/p&gt;
&lt;p&gt;Finally, once we had the SAO ready to ship, it still takes time to deploy. Firefox clients check for Normandy updates every 6 hours, and of course many clients are offline, so it takes some time for the fix to propagate through the Firefox population. However, at this point we expect that most people have received the update and/or the dot release we did later.&lt;/p&gt;
&lt;h2&gt;Final Steps&lt;/h2&gt;
&lt;p&gt;While the SAO that was deployed with Studies should fix most users, it didn’t get to everyone. In particular, there are a number of types of affected users who will need another approach:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Users who have disabled either Telemetry or Studies.&lt;/li&gt;
&lt;li&gt;Users on Firefox for Android (Fennec), where we don’t have Studies.&lt;/li&gt;
&lt;li&gt;Users of downstream builds of Firefox ESR that don’t opt-in to&lt;br/&gt;telemetry reporting.&lt;/li&gt;
&lt;li&gt;Users who are behind HTTPS Man-in-the-middle proxies, because our add-on installation systems enforce key pinning for these connections, which proxies interfere with.&lt;/li&gt;
&lt;li&gt;Users of very old builds of Firefox which the Studies system can’t reach.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We can’t really do anything about the last group — they should update to a new version of Firefox anyway because older versions typically have quite serious unfixed security vulnerabilities. We know that some people have stayed on older versions of Firefox because they want to run old-style add-ons, but many of these now work with newer versions of Firefox. For the other groups we have developed a patch to Firefox that will install the new certificate once people update. This was released as a “dot release” so people will get it — and probably have already — through the ordinary update channel. If you have a downstream build, you’ll need to wait for your build maintainer to update.&lt;/p&gt;
&lt;p&gt;We recognize that none of this is perfect. In particular, in some cases, users lost data associated with their add-ons (an example here is the &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1549204&quot;&gt;“multi-account containers” add-on&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;We were unable to develop a fix that would avoid this side effect, but we believe this is the best approach for the most users in the short term. Long term, we will be looking at better architectural approaches for dealing with this kind of issue.&lt;/p&gt;
&lt;h2&gt;Lessons&lt;/h2&gt;
&lt;p&gt;First, I want to say that the team here did amazing work: they built and shipped a fix in less than 12 hours from the initial report. As someone who sat in the meeting where it happened, I can say that people were working incredibly hard in a tough situation and that very little time was wasted.&lt;/p&gt;
&lt;p&gt;With that said, obviously this isn’t an ideal situation and it shouldn’t have happened in the first place. We clearly need to adjust our processes both to make this and similar incidents it less likely to happen and to make them easier to fix.&lt;/p&gt;
&lt;p&gt;We’ll be running a formal post-mortem next week and will publish the list of changes we intend to make, but in the meantime here are my initial thoughts about what we need to do. First, we should have a much better way of tracking the status of everything in Firefox that is a potential time bomb and making sure that we don’t find ourselves in a situation where one goes off unexpectedly. We’re still working out the details here, but at minimum we need to inventory everything of this nature.&lt;/p&gt;
&lt;p&gt;Second, we need a mechanism to be able to quickly push updates to our users even when — &lt;em&gt;especially when&lt;/em&gt; — everything else is down.  It was great that we are able to use the Studies system, but it was also an imperfect tool that we pressed into service, and that had some undesirable side effects. In particular, we know that many users have auto-updates enabled but would prefer not to participate in Studies and that’s a reasonable preference (true story: I had it off as well!) but at the same time we need to be able to push updates to our users; whatever the internal technical mechanisms, users should be able to opt-in to updates (including hot-fixes) but opt out of everything else. Additionally, the update channel should be more responsive than what we have today. Even on Monday, we still had some users who hadn’t picked up either the hotfix or the dot release, which clearly isn’t ideal. There’s been some work on this problem already, but this incident shows just how important it is.&lt;/p&gt;
&lt;p&gt;Finally, we’ll be looking more generally at our add-on security architecture to make sure that it’s enforcing the right security properties at the least risk of breakage.&lt;/p&gt;
&lt;p&gt;We’ll be following up next week with the results of a more thorough post-mortem, but in the meantime, I’ll be happy to answer questions by email at ekr-blog@mozilla.com.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a name=&quot;footnote-1&quot;&gt;[1]&lt;/a&gt; A few very old add-ons were signed with a different intermediate.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;&lt;a name=&quot;footnote-2&quot;&gt;[2]&lt;/a&gt; Readers who are familiar with the WebPKI will recognize that this is also the way that cross-certification works.&lt;/small&gt;&lt;br/&gt;&lt;small&gt;&lt;a name=&quot;footnote-3&quot;&gt;[3]&lt;/a&gt; Technical note: we aren’t adding the certificate with any special privileges; it gets its authority by being signed for the root. We’re just adding it to the pool of certificates which can be used by Firefox. So, it’s not like we are adding a new privileged certificate to Firefox.&lt;/small&gt;&lt;/p&gt;
&lt;section class=&quot;about&quot; readability=&quot;2.2857142857143&quot;&gt;
&lt;p&gt;Eric is CTO of the Firefox team at Mozilla.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;url&quot; href=&quot;https://hacks.mozilla.org/author/ekrmozilla-com/&quot;&gt;More articles by Eric Rescorla…&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;</description>
<pubDate>Thu, 09 May 2019 20:19:40 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<og:url>https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage</og:url>
<og:title>Technical Details on the Recent Firefox Add-on Outage – Mozilla Hacks - the Web developer blog</og:title>
<og:description>Recently, Firefox had an incident in which most add-ons stopped working. This was due to an error on our end: we let one of the certificates used to sign add-ons ...</og:description>
<og:image>https://hacks.mozilla.org/files/2019/05/Add-on-blog-post-visual-2-May-7-2019.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://hacks.mozilla.org/2019/05/technical-details-on-the-recent-firefox-add-on-outage/</dc:identifier>
</item>
<item>
<title>Why are 2D vector graphics so much harder than 3D?</title>
<link>https://blog.mecheye.net/2019/05/why-is-2d-graphics-is-harder-than-3d-graphics/</link>
<guid isPermaLink="true" >https://blog.mecheye.net/2019/05/why-is-2d-graphics-is-harder-than-3d-graphics/</guid>
<description>&lt;p&gt;There’s a lot of fantastic research into 2D graphics rendering these days. Petr Kobalicek and Fabian Yzerman have been working on &lt;a href=&quot;https://blend2d.com/&quot;&gt;Blend2D&lt;/a&gt;, one of the fastest and most accurate CPU rasterizers on the market, with a novel JIT approach. Patrick Walton of Mozilla has explored not just one, but &lt;a href=&quot;https://github.com/pcwalton/pathfinder/wiki/Related-approaches&quot;&gt;three separate approaches&lt;/a&gt; in Pathfinder, culminating in now Pathfinder V3. Raph Levien has built a &lt;a href=&quot;https://github.com/linebender/piet-metal&quot;&gt;compute-based pipeline&lt;/a&gt; based on Gan et al’s ahead-of-its-time &lt;a href=&quot;http://w3.impa.br/~diego/projects/GanEtAl14/&quot;&gt;2014 paper on vector textures&lt;/a&gt;. Signed distance fields seem to be getting some further development from both &lt;a href=&quot;https://twitter.com/adamjsimmons/status/730911372532322304&quot;&gt;Adam Simmons&lt;/a&gt; and &lt;a href=&quot;https://www.merl.com/publications/docs/TR2000-15.pdf&quot;&gt;Sarah Frisken&lt;/a&gt; independently.&lt;/p&gt;
&lt;p&gt;One might wonder: why is there so much commotion about 2D? It seriously can’t be that much harder than 3D, right? 3D is a whole other dimension! Real-time raytracing is around the corner, with accurate lighting and and yet we can’t manage dinky 2D graphics with solid colors?&lt;/p&gt;
&lt;p&gt;To those not well-versed in the details of the modern GPU, it’s a very surprising conclusion! But 2D graphics has plenty of unique constraints that make it a difficult problem to solve, and one that doesn’t lend itself well to parallel approaches. Let’s take a stroll down history lane and trace the path that led us here in the first place, shall we?&lt;/p&gt;
&lt;h2&gt;The rise of PostScript&lt;/h2&gt;
&lt;p&gt;In the beginning, there was the plotter. The first graphics devices to interact with computers were &lt;a href=&quot;http://www.hpmuseum.net/display_item.php?hw=82&quot;&gt;“plotters”&lt;/a&gt;, which had one or multiple pens and an arm that could move over the paper. Things were drawn by &lt;a href=&quot;https://www.youtube.com/watch?v=zyp68emXMZM&quot;&gt;submitting a “pen-down” command, moving the arm in some unique way, possibly curved, and then submitting “pen-up”&lt;/a&gt;. HP, manufacturer of some of the earliest plotter printers, used a variant of BASIC called “AGL” on the host computer, which then would send commands to the plotter peripheral itself in a another language like &lt;a href=&quot;https://en.wikipedia.org/wiki/HP-GL&quot;&gt;HP-GL&lt;/a&gt;. During the 1970s, we saw the rise of affordable graphics terminals, starting with the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tektronix_4010&quot;&gt;Tektronix 4010&lt;/a&gt;. It has a CRT for its display, but don’t be fooled: it’s &lt;em&gt;not&lt;/em&gt; a pixel display. Tektronix came from the analog oscilloscope industry, and these machines work by &lt;a href=&quot;https://www.youtube.com/watch?v=tpD1QXvtlcg&quot;&gt;driving the electron beam in a certain path&lt;/a&gt;, not in a grid-like order. As such, the Tektronix 4010 didn’t have pixel output. Instead, you sent commands to it with &lt;a href=&quot;http://vt100.net/docs/vt3xx-gp/chapter13.html#S13.14&quot;&gt;a simple graphing mode&lt;/a&gt; that could draw lines but, again, in a pen-up pen-down fashion.&lt;/p&gt;
&lt;p&gt;Like a lot of other inventions, this all changed at Xerox PARC. Researchers there were starting to develop a new kind of printer, one that was more computationally expressive than what was seen in plotters. This new printer was based on a small, stack-based Turing-complete language similar to Forth, and they named it… the &lt;a href=&quot;https://en.wikipedia.org/wiki/Interpress&quot;&gt;Interpress&lt;/a&gt;! Xerox, obviously, was unable to sell it, so the inventors jumped ship and founded a small, scrappy startup named “Adobe”. They took Interpress with them and tweaked it until was no longer recognizable as Interpress, and they renamed it PostScript. Besides the cute, Turing-complete stack-language language it comes with to calculate its shapes, the original &lt;a href=&quot;http://www.adobe.com/content/dam/acom/en/devnet/actionscript/articles/PLRM.pdf&quot;&gt;PostScript Language Reference&lt;/a&gt; marks up an Imaging Model in Chapter 4, near-identical to the APIs we widely see today. Example 4.1 of the manual has a code example which can be translated to HTML5 &amp;lt;canvas&amp;gt; nearly line-by-line.&lt;/p&gt;
&lt;pre class=&quot;brush: plain; title: ; notranslate&quot; title=&quot;&quot;&gt;
/box {                  function box() {
    newpath                 ctx.beginPath();
    0 0 moveto              ctx.moveTo(0, 0);
    0 1 lineto              ctx.lineTo(0, 1);
    1 1 lineto              ctx.lineTo(1, 1);
    1 0 lineto              ctx.lineTo(1, 0);
    closepath               ctx.closePath();
} def                   }
                        
gsave                   ctx.save();
72 72 scale             ctx.scale(72, 72);
box fill                box(); ctx.fill();
2 2 translate           ctx.translate(2, 2);
box fill                box(); ctx.fill();
grestore                ctx.restore();
&lt;/pre&gt;
&lt;p&gt;This is not a coincidence.&lt;/p&gt;
&lt;p&gt;Apple’s Steve Jobs had met the Interpress engineers on his visit to PARC. Jobs thought that the printing business would be lucrative, and tried to simply buy Adobe at birth. Instead, Adobe countered and eventually sold a five-year license for PostScript to Apple. The third pillar in Jobs’s printing plan was funding a small startup, Aldus, which was making a WSYWIG app to create PostScript documents, “PageMaker”. In early 1985, Apple released the first PostScript-compliant printer, the Apple LaserWriter. The combination of the point-and-click Macintosh, PageMaker, and the LaserWriter singlehandedly turned the printing industry on its head, giving way to “desktop publishing” and solidifying PostScript its place in history. The main competition, Hewlett-Packward, would eventually license PostScript for its competing LaserJet series of printers in 1991, after consumer pressure.&lt;/p&gt;
&lt;p&gt;PostScript slowly moved from being a printer control language to a file format in and of itself. Clever programmers noticed the underlying PostScript sent to the printers, and started writing PostScript documents by hand, introducing charts and graphs and art to their documents, with the PostScript evaluated for on-screen display. Demand sprung up for graphics outside of the printer! Adobe noticed, and quickly rushed out the &lt;a href=&quot;https://en.wikipedia.org/wiki/Encapsulated_PostScript&quot;&gt;Encapsulated PostScript&lt;/a&gt; format, which was nothing more than a few specially-formatted PostScript comments to give metadata about the size of the image, and restrictions about using printer-centric commands like “page feed”. That same year, 1985, Adobe started development on “Illustrator”, an application for artists to draw Encapsulated PostScript files through a point-and-click interface. These files could then be placed into Word Processors, which then created… PostScript documents which were sent to PostScript printers. The whole world was PostScript, and Adobe couldn’t be happier. Microsoft, while working on Windows 1.0, wanted to create its own graphics API for developers, and a primary goal was making it compatible with existing printers so the graphics could be sent to printers as easily as a screen. This API was eventually released as &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd145203(v=vs.85).aspx&quot;&gt;GDI&lt;/a&gt;, a core component used by every engineer during Windows’s meteoric rise to popularity in the 90s. Generations of programmers developing for the Windows platform started to unknowingly equate “2D vector graphics” with the PostScript imaging model, cementing its status as &lt;em&gt;the&lt;/em&gt; 2D imaging model.&lt;/p&gt;
&lt;p&gt;The only major problem with PostScript was its Turing-completeness — viewing page 86 of a document means first running the script for pages 1-85. And that could be slow. Adobe caught wind of this user complaint, and decided to create a new document format that didn’t have these restrictions, called the “Portable Document Format”, or “PDF” for short. It threw out the programming language — but the graphics technology stayed the same. A quote from the &lt;a href=&quot;http://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=34&quot;&gt;PDF specification, Chapter 2.1, “Imaging Model”&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;At the heart of PDF is its ability to describe the appearance of sophisticated graphics and typography. This ability is achieved through the use of the &lt;em&gt;Adobe imaging model&lt;/em&gt;, the same high-level, device-independent representation used in the PostScript page description language.&lt;/p&gt;
&lt;/blockquote&gt;
By the time the W3C wanted to develop a 2D graphics markup language for the web, Adobe championed the XML-based &lt;a href=&quot;https://www.w3.org/TR/1998/NOTE-PGML-19980410&quot;&gt;PGML&lt;/a&gt;, which had the PostScript graphics model front and center.
&lt;blockquote&gt;
&lt;p&gt;PGML should encompass the PDF/PostScript imaging model to guarantee a 2D scalable graphics capability that satisfies the needs of both both casual users and graphics professionals.&lt;/p&gt;
&lt;/blockquote&gt;
Microsoft’s competing format, &lt;a href=&quot;https://www.w3.org/TR/NOTE-VML&quot;&gt;VML&lt;/a&gt;, was based on GDI, which as we know was based on PostScript. The two competing proposals, both still effectively PostScript, were combined to make up W3C’s “Scalable Vector Graphics” (“SVG”) technology we know and love today.
&lt;p&gt;Even though it’s old, let’s not pretend that the innovations PostScript brought to the world are anything less than a technological marvel. Apple’s PostScript printer, the LaserWriter, had a CPU twice as powerful as the Macintosh that was controlling it, just to interpret the PostScript and rasterize the vector paths to points on paper. That might seem excessive, but if you were already buying a fancy printer with a &lt;em&gt;laser&lt;/em&gt; in it, the expensive CPU on the side doesn’t seem so expensive in comparison. In its first incarnation, PostScript invented a fairly sophisticated imaging model, with all the features that we take for granted today. But the most powerful, wowing feature? Fonts. Fonts were, at the time, drawn by hand with ruler and protractor, and cast onto film, to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Phototypesetting&quot;&gt;printed photochemically&lt;/a&gt;. In 1977, Donald Knuth showed the world what could be with his &lt;a href=&quot;https://en.wikipedia.org/wiki/Metafont&quot;&gt;METAFONT&lt;/a&gt; system, introduced together with his typesetting application TeX, but it didn’t catch on. It required the user to describe fonts mathematically, using brushes and curves, which wasn’t a skill that most fontgraphers really wanted to learn. And the fancy curves turned into mush at small sizes: the printers of the time did not have dots small enough, so they tended to bleed and blur into each other. Adobe’s PostScript proposed a novel solution to this: an algorithm to “snap” these paths to the coarser grids that printers had. This is known as “grid-fitting”. To prevent the geometry from getting too distorted, they allowed fonts to specify “hints” about what parts of the geometry were the most important, and how much should be preserved.&lt;/p&gt;
&lt;p&gt;Adobe’s original business model was to sell this font technology to people that make printers, and sell special recreations of fonts, with added hints, to publishers, which is why Adobe, to this day, sells their versions of &lt;a href=&quot;http://www.myfonts.com/fonts/adobe/times/&quot;&gt;Times&lt;/a&gt; and &lt;a href=&quot;http://www.myfonts.com/fonts/adobe/futura/&quot;&gt;Futura&lt;/a&gt;. Adobe can do this, by the way, because fonts, or, more formally, “typefaces”, are one of &lt;a href=&quot;https://www.ecfr.gov/cgi-bin/text-idx?node=se37.1.202_11&quot;&gt;five things explicitly excluded by US Copyright Law&lt;/a&gt;, since they were originally designated as “too plain or utilitarian to be creative works”. What &lt;em&gt;is&lt;/em&gt; sold and copyrighted instead is the &lt;em&gt;digital program&lt;/em&gt; that reproduces the font on the screen. So, to prevent people from copying Adobe’s fonts and adding their own, the &lt;a href=&quot;https://www-cdf.fnal.gov/offline/PostScript/T1_SPEC.PDF&quot;&gt;Type 1 Font&lt;/a&gt; format was originally proprietary to Adobe and contained “font encryption” code. Only Adobe’s PostScript could interpret a Type 1 Font, and only Adobe’s Type 1 Fonts had the custom hinting technology allowing them to be visible at small sizes.&lt;/p&gt;
&lt;p&gt;Grid fitting, by the way, was so universally popular that when Microsoft and Apple were tired of paying licensing fees to Adobe, they invented an alternate method for their font file competitor, &lt;a href=&quot;https://developer.apple.com/fonts/TrueType-Reference-Manual/&quot;&gt;TrueType&lt;/a&gt;. Instead of specifying declarative “hints”, TrueType gives the font author a &lt;a href=&quot;https://developer.apple.com/fonts/TrueType-Reference-Manual/RM03/Chap3.html&quot;&gt;complete Turing-complete stack language&lt;/a&gt; so that the author can control every part of grid-fitting (coincidentally avoiding Adobe’s patents on declarative “hints”). For years, the wars between the Adobe-backed Type 1 and the TrueType raged on, with font foundries being stuck in the middle, having to provide both formats to their users. Eventually, the industry reached a compromise: &lt;a href=&quot;https://www.microsoft.com/en-us/Typography/OpenTypeSpecification.aspx&quot;&gt;OpenType&lt;/a&gt;. But rather than actually decide a winner, they simply plopped both specifications into one file format: Adobe, now in the business of selling Photoshop and Illustrator rather than Type 1 Fonts, removed the encryption bits, gave the format a small amount of spit polish, and released &lt;a href=&quot;http://www.adobe.com/content/dam/Adobe/en/devnet/font/pdfs/5176.CFF.pdf&quot;&gt;CFF&lt;/a&gt; / &lt;a href=&quot;http://www.adobe.com/content/dam/Adobe/en/devnet/font/pdfs/5177.Type2.pdf&quot;&gt;Type 2&lt;/a&gt; fonts, which were grafted into OpenType wholesale as the &lt;a href=&quot;https://www.microsoft.com/typography/otspec/cff.htm&quot;&gt;cff table&lt;/a&gt;. TrueType, on the other hand, got shoved in as &lt;a href=&quot;https://www.microsoft.com/typography/otspec/otff.htm#ttTables&quot;&gt;glyf&lt;/a&gt; and other tables. OpenType, while ugly, seemed to get the job done for users, mostly by war of endurance: just require that all software supports both kinds of fonts, because OpenType requires you to support both kinds of fonts.&lt;/p&gt;
&lt;p&gt;Of course, we’re forced to ask: if PostScript didn’t become popular, what might have happened instead? It’s worth looking at some other alternatives. The previously mentioned METAFONT didn’t use filled paths. Instead, Knuth, in typical Knuth fashion, rigorously defines in his paper &lt;a href=&quot;http://www.math.lsa.umich.edu/~millerpd/docs/501_Winter13/Knuth79.pdf&quot;&gt;Mathematical Typography&lt;/a&gt; the concept of a curve that is “most pleasing”. You specify a number of points, and some algorithm finds the one correct “most pleasing” curve through them. You can stack these paths on top of each other: define such a path as a “pen”, and then “drag the pen” through some other path. Knuth, a computer scientist at heart, managed to introduce recursion to path stroking. Knuth’s thesis student, John Hobby, designed and implemented algorithms for calculating &lt;a href=&quot;http://i.stanford.edu/pub/cstr/reports/cs/tr/85/1047/CS-TR-85-1047.pdf&quot;&gt;the “most pleasing curve”&lt;/a&gt;, &lt;a href=&quot;http://ect.bell-labs.com/who/hobby/thesis.pdf&quot;&gt;the “flattening” of the nesting of paths&lt;/a&gt;, &lt;em&gt;and&lt;/em&gt; &lt;a href=&quot;http://ect.bell-labs.com/who/hobby/87_2-04.pdf&quot;&gt;rasterizing such curves&lt;/a&gt;. For more on METAFONT, curves, and the history of font technology in general, I &lt;em&gt;highly&lt;/em&gt; recommend the detailed reference of &lt;a href=&quot;http://shop.oreilly.com/product/9780596102425.do&quot;&gt;Fonts &amp;amp; Encodings&lt;/a&gt;, and the papers of &lt;a href=&quot;http://ect.bell-labs.com/who/hobby/Publications.shtml&quot;&gt;John D. Hobby&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thankfully, the renewed interest in 2D graphics research means that Knuth and Hobby’s splines are not entirely forgotten. While definitely arcane and non-traditional, they recently made their way into &lt;a href=&quot;https://bosker.wordpress.com/2013/11/13/beyond-bezier-curves/&quot;&gt;Apple’s iWork Suite&lt;/a&gt; where they are now the default spline type.&lt;/p&gt;
&lt;h2&gt;The rise of triangles&lt;/h2&gt;
&lt;p&gt;Without getting too into the math weeds, at a high-level, we call approaches like Bezier curves and Hobby splines &lt;a href=&quot;https://en.wikipedia.org/wiki/Implicit_curve&quot;&gt;implicit curves&lt;/a&gt;, because they are specified as a mathematical function which generates the curve. They are smooth functions which look good at any resolution and zoom level, which happen to be good traits for a 2D image designed to be scalable.&lt;/p&gt;
&lt;p&gt;2D graphics started and maintained forward momentum around these implicit curves, by near necessity in their use in modelling human letterforms and glyphs. The hardware and software to compute these paths in real-time was expensive, but since the big industry push for vector graphics came from the printing industry, most of the rest of the existing industrial equipment was already plenty more expensive than the laser printer with the fancy CPU.&lt;/p&gt;
&lt;p&gt;3D graphics, however, had a very different route. From the very beginning, the near-universal approach was to use straight-edged polygons, often times manually &lt;a href=&quot;https://www.computerhistory.org/revolution/computer-graphics-music-and-art/15/206/560&quot;&gt;marked up&lt;/a&gt; and &lt;a href=&quot;https://www.computerhistory.org/revolution/computer-graphics-music-and-art/15/206/556&quot;&gt;entered into the computer by hand&lt;/a&gt;. Not all approaches, though. The 3D equivalent of an implicit curve is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Implicit_surface&quot;&gt;implicit surface&lt;/a&gt;, made up of basic geometric primitives like spheres, cylinders and boxes. A perfect sphere with infinite resolution can be represented with a simple equation, so for organic geometry, it was a clear winner over &lt;a href=&quot;https://www.youtube.com/watch?v=lAD6Obi7Cag&quot;&gt;the polygon look of early 3D&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Mathematical_Applications_Group&quot;&gt;MAGI&lt;/a&gt; was one of a few companies pushing the limits of implicit surfaces, and combined with some clever artistic use of procedural textures, they won the contract with Disney to design the lightcycle sequences for the 1982 film Tron. Unfortunately, though, that approach quickly fell by the wayside. The number of triangles you could render in a scene was skyrocketing due to research into problems like “hidden surface removal” and faster CPUs, and for complex shapes, it was a lot easier for artists to think about polygons and vertices they could click and drag, rather than use combinations of boxes and cylinders to get the look they wanted.&lt;/p&gt;
&lt;p&gt;This is not to say that implicit surfaces weren’t used in the modelling &lt;em&gt;process&lt;/em&gt;. Tools like &lt;a href=&quot;https://en.wikipedia.org/wiki/Catmull%E2%80%93Clark_subdivision_surface&quot;&gt;Catmull-Clark subdivision&lt;/a&gt; were a ubiquitous industry standard by the early 80s, allowing artists to put a smooth, organic look on otherwise simple geometry. Though Catmull-Clark wasn’t even framed as an “implicit surface” that can be computed with an equation until the early 2000s. Back then, it was seen as an iterative algorithm: a way to subdivide polygons into even more polygons.&lt;/p&gt;
&lt;p&gt;Triangles reined supreme, and so followed the tools used to make 3D content. Up-and-coming artists for video games and CGI films were trained exclusively on polygon mesh modellers like Maya, 3DS Max and Softimage. As the “3D graphics accelerator” came onto the scene in late-80s, it was designed to accelerate the existing content out there: triangles. While some early GPU designs like the &lt;a href=&quot;https://en.wikipedia.org/wiki/NV1&quot;&gt;NVIDIA NV1&lt;/a&gt; had some limited hardware-accelerated curve support, it was buggy and quickly dropped from the product line.&lt;/p&gt;
&lt;p&gt;This culture mostly extends into what we see today. The dominant 2D imaging model, PostScript, started with a product that could render curves in “real-time”, while the 3D industry ignored curves as they were difficult to make work, relying on offline solutions to pre-transform curved surfaces into triangles.&lt;/p&gt;
&lt;h2&gt;Implicit surfaces rise from the dead&lt;/h2&gt;
&lt;p&gt;But why were implicit curves able to be done in real-time on 2D on a printer in the 80s, and yet 3D implicit curves are still too buggy near the early ’00s? Well, one answer is that Catmull-Clark is a lot more complicated than a Bezier curve. Bezier curves do exist in 3D, where they are known as B-splines, and they are computable, but they have the drawback that they limit the ways you can connect your mesh together. Surfaces like Catmull-Clark and NURBS allow for arbitrarily connected meshes to empower artists, but this can lead to polynomials greater than the fourth degree, which &lt;a href=&quot;https://en.wikipedia.org/wiki/Abel%E2%80%93Ruffini_theorem&quot;&gt;tend to have no closed-form solution&lt;/a&gt;. Instead, what you get are approximations based on subdividing polygons, like what happens in Pixar’s &lt;a href=&quot;http://graphics.pixar.com/opensubdiv/docs/intro.html&quot;&gt;OpenSubdiv&lt;/a&gt;. If someone ever finds an analytic closed-form solution to root-finding either Catmull-Clark or NURBS, Autodesk will pay a lot of money for it, for certain. Compared to these, triangles seem a lot nicer: simply compute &lt;a href=&quot;https://fgiesen.wordpress.com/2013/02/06/the-barycentric-conspirac/&quot;&gt;three linear plane equations&lt;/a&gt; and you have yourself an easy test.&lt;/p&gt;
&lt;p&gt;… but what if we don’t need an exact solution? That’s exactly what graphics developer of incredible infamy &lt;a href=&quot;https://www.iquilezles.org/index.html&quot;&gt;Íñigo Quílez&lt;/a&gt; asked when doing research into implicit surfaces again. The solution? Signed distance fields. Instead of telling you the exact intersection point of the surface, it tells you how far away you are from a surface. Analoguous to an analytically computed integral vs. Euler integration, if you have the distance to the closest object, you can “march” through the scene, asking how far away you are at any given point and stepping that distance. Such surfaces have seen a brand new life through the demoscene and places like Shadertoy. A twist on the old MAGI approach to modelling brings us incredible gems like Quílez’s &lt;a href=&quot;https://www.shadertoy.com/view/ldd3DX&quot;&gt;Surfer Boy&lt;/a&gt;, calculated in infinite precision like an implicit surface would. You don’t need to find the algebraic roots of Surfer Boy, you just feel it out as you march through.&lt;/p&gt;
&lt;p&gt;The difficulty, of course, is that &lt;em&gt;only&lt;/em&gt; a legitimate genius like Quílez can create Surfer Boy. There’s no existing tooling for signed-distance field geometry, it’s all code. That said, given the exciting resurgence of implicit surfaces for their organic, curved look, there’s now plenty of interest into the technique. MediaMolecule’s PS4 game &lt;a href=&quot;https://www.playstation.com/en-us/games/dreams-ps4/&quot;&gt;Dreams&lt;/a&gt; is a content-creation kit built around combining implicit surfaces, &lt;a href=&quot;http://advances.realtimerendering.com/s2015/AlexEvans_SIGGRAPH-2015-sml.pdf&quot;&gt;requiring them to tear down and reinvent most of traditional graphics in the process&lt;/a&gt;. It’s a promising approach, and the tools are &lt;a href=&quot;https://www.twitch.tv/videos/411848857?t=6h55m34s&quot;&gt;intuitive and fun&lt;/a&gt;. &lt;a href=&quot;https://www.oculus.com/medium&quot;&gt;Oculus Medium&lt;/a&gt; and &lt;a href=&quot;http://on-demand.gputechconf.com/gtc/2017/presentation/s7777-florian-hoenig-a-road-to-3d-for-everyone.pdf&quot;&gt;unbound.io&lt;/a&gt; are also putting good research into the problem. It’s definitely a promising look into what the future of 3D graphics and next-generation tools might look like.&lt;/p&gt;
&lt;p&gt;But some of these approaches are less adaptable to 2D than you might think. Common 3D game scenes tend to have lush materials and textures but low geometry counts, as many critics and &lt;a href=&quot;https://www.youtube.com/watch?v=00gAbgBu8R4&quot;&gt;snake-oil salesman&lt;/a&gt; are quick to point out. This means that we can rely on smaller amounts of anti-aliasing as silhouettes are not as majorly important. Approaches like 4x MSAA might cut the mustard for a lot of games, but for small fonts with solid colors, instead of &lt;a href=&quot;https://magcius.github.io/xplain/article/rast1.html#antialiasing&quot;&gt;16 fixed sample locations&lt;/a&gt;, you would much rather compute &lt;a href=&quot;http://nothings.org/gamedev/rasterize/&quot;&gt;the exact area under the curve&lt;/a&gt; for each pixel, giving you as much resolution as you want.&lt;/p&gt;
&lt;p&gt;Rotating the viewport around in a 3D game has the effect of causing effects similar to &lt;a href=&quot;https://en.wikipedia.org/wiki/Saccadic_masking&quot;&gt;saccadic masking&lt;/a&gt; as your brain re-adjusts to the new view. For a lot of games, this can help hide artifacts in post-processing effects like &lt;a href=&quot;https://twitter.com/CypherSignal/status/793631118209781760&quot;&gt;temporal antialiasing&lt;/a&gt;, which Dreams and unbound.io heavily lean on to get good performance of their scene. Conversely, in a typical 2D scene, we don’t have this luxury of perspective, so attempting to use it will make our glyphs and shapes boil and jitter with those artifacts in full glory. 2D is viewed differently, and the expectations are higher. Stability is important as you zoom, pan, and scroll.&lt;/p&gt;
&lt;p&gt;None of these effects are impossible to implement on a GPU, but they do show a radical departure from “3D” content, with different priorities. Ultimately, 2D graphics rendering is hard because it’s about shapes — accurate letterforms and glyphs — not materials and lighting, which is mostly a solid color. GPUs, through a consequence of history, chose not to focus on real-time implicit geometry like curves, but instead on everything that goes inside them. Maybe in a world where PostScript didn’t win, we would have a 2D imaging model that didn’t have Bezier as a core realtime requirement. And maybe in a world where triangles were replaced with better geometry representations sooner, we would see content creation tools focus on 3D splines, and GPUs that have realtime curves built right into the hardware. It’s always fun to imagine, after all.&lt;/p&gt;
</description>
<pubDate>Thu, 09 May 2019 19:06:18 +0000</pubDate>
<dc:creator>Jasper_</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.mecheye.net/2019/05/why-is-2d-graphics-is-harder-than-3d-graphics/</dc:identifier>
</item>
<item>
<title>We Can Do Better Than SQL</title>
<link>https://edgedb.com/blog/we-can-do-better-than-sql</link>
<guid isPermaLink="true" >https://edgedb.com/blog/we-can-do-better-than-sql</guid>
<description>&lt;p&gt;The questions we often hear are “Why create a new query language?” and “What’s wrong with SQL?”. This post contains answers to both.&lt;/p&gt;&lt;p&gt;Before we begin, let’s overview some of the history of how the relational model came to be, and how SQL was created.&lt;/p&gt;&lt;div id=&quot;a-brief-history-of-the-relational-model-and-sql&quot; readability=&quot;98.866636731028&quot;&gt;
&lt;h2 id=&quot;a-brief-history-of-the-relational-model-and-sql&quot; class=&quot; src-components-header_link----header_link-module---header---1h6HM&quot;&gt;A Brief History of the Relational Model and SQL&lt;/h2&gt;
&lt;p&gt;The relational model was introduced by Edgar F. Codd in a seminal 1970 paper “A Relational Model of Data for Large Shared Data Banks” &lt;span&gt;[&lt;a id=&quot;id1&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fcodd-1970&quot;&gt;4&lt;/a&gt;]&lt;/span&gt;. There, Codd postulated that all data in a database can be represented in terms of sets of tuples, called &lt;em&gt;relations&lt;/em&gt;. Codd also invented a form of first-order predicate logic to describe the database queries: &lt;em&gt;tuple relational calculus&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Codd’s ideas were revolutionary. For the first time, a database, and a universal way to query it, was described in a succinct, consistent mathematical model. This, naturally, created lots of interest in further research and, importantly, into practical implementation of the relational model.&lt;/p&gt;
&lt;p&gt;In 1974 Donald Chamberlin and Raymond Boyce published a paper &lt;span&gt;[&lt;a id=&quot;id2&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fchamberlin-1974&quot;&gt;2&lt;/a&gt;]&lt;/span&gt;, which introduced “a set of simple operations on tabular structures, […] of equivalent power to the first order predicate calculus”. Chamberlin and Boyce felt that the formal relational query languages proposed at the time were too hard to understand for “users without formal training in mathematics or computer programming” and thought that the “predominant use of the language would be for ad-hoc queries” &lt;span&gt;[&lt;a id=&quot;id3&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fchamberlin-2012&quot;&gt;3&lt;/a&gt;]&lt;/span&gt;. Initially, the authors did not consider SQL to be a “serious” language. Nonetheless, the great interest in the commercial application of the relational model had pushed IBM to quickly adopt and productize SQL, which was also picked up by their quickly-rising competitor–Oracle.&lt;/p&gt;
&lt;p&gt;IBM had an overwhelmingly large influence over the tech market at the time, so SQL became a de facto standard for relational databases, and then a proper standard with the publication of the first ANSI standard in 1989 that essentially circumscribed the most prominent existing implementations of SQL. Subsequent versions of the standard continued to be primarily influenced by the commercial vendors.&lt;/p&gt;
&lt;p&gt;Today, SQL is by far the most widely used database language. But that does not necessarily mean that it represents the best of what we can do. In fact, SQL’s beginnings as a “simple, ad-hoc” language coupled with “design by implementation” from competing vendors had left the language with a baggage of severe issues.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;critique-of-sql&quot; readability=&quot;146.81441737154&quot;&gt;

&lt;p&gt;SQL, especially its earlier versions, was heavily criticized by the experts, including Codd himself &lt;span&gt;[&lt;a id=&quot;id4&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fcodd-1990&quot;&gt;6&lt;/a&gt;]&lt;/span&gt;, as well as C. J. Date, who published a multitude of papers and books on the subject (&lt;span&gt;[&lt;a id=&quot;id5&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fdate-1985&quot;&gt;7&lt;/a&gt;]&lt;/span&gt;, &lt;span&gt;[&lt;a id=&quot;id6&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fdate-1987&quot;&gt;9&lt;/a&gt;]&lt;/span&gt;, &lt;span&gt;[&lt;a id=&quot;id7&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fdate-2009&quot;&gt;10&lt;/a&gt;]&lt;/span&gt;). While many of the early shortcomings were fixed in the later versions of the standard, some of the serious issues had been only further ingrained.&lt;/p&gt;
&lt;p&gt;Some of the complaints here apply to SQL as a whole, while others are specific to a certain implementation. We are primarily using PostgreSQL for the examples.&lt;/p&gt;
&lt;p&gt;SQL’s shortcomings can be grouped into these categories:&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;lack of proper orthogonality — SQL is hard to compose;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;lack of compactness — SQL is a large language;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;lack of consistency — SQL is inconsistent in syntax and semantics;&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;poor system cohesion — SQL does not integrate well enough with application languages and protocols.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;lack-of-orthogonality&quot; readability=&quot;83&quot;&gt;

&lt;p&gt;Orthogonality in a programming language means that a relatively small set of primitive constructs can be combined in a relatively small number of ways. A language with good orthogonality is smaller, more consistent, and is easier to learn due to there being few exceptions from the overall set of rules. Conversely, bad orthogonality leads to a large language with many exceptions and caveats.&lt;/p&gt;
&lt;p&gt;A good example of orthogonality in a programming language is the ability to substitute an arbitrary part of an expression with a variable, or a function call, without any effect on the final result.&lt;/p&gt;
&lt;p&gt;In SQL, such generic substitution is not possible, since there are &lt;em&gt;two&lt;/em&gt; mutually incompatible kinds of expressions:&lt;/p&gt;
&lt;ul readability=&quot;-0.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;A &lt;em&gt;table expression&lt;/em&gt; is a SQL expression that yields a table: &lt;code&gt;SELECT * FROM table&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;A &lt;em&gt;scalar expression&lt;/em&gt; is a SQL expression that yields a single scalar value: &lt;code&gt;SELECT count(*) FROM table&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Table expressions can only be used in a &lt;code&gt;FROM&lt;/code&gt; clause, in a function, or with an operator that specifically expects a table expression as input. What’s worse the scalar and table expressions may have exactly the same syntax, which can be a source of further confusion.&lt;/p&gt;
&lt;p&gt;For example, let’s imagine we needed to list the names of all department heads in a company. This query would do the job:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; name
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; emp
&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; role &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'dept head'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now let’s say we needed to add this bit to a larger query that extracts information about a department. An intuitive way is to simply add the above as a subquery to the target list of our larger query:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;
    dept&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; name &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; emp
     &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; role &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'dept head'&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; deptno &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dept&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;no&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;
    dept
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This is legal, but &lt;em&gt;only&lt;/em&gt; if the subquery returns not more than one row. Otherwise, an error would be raised at run time. To account for multiple department heads, we would need to rewrite the query using a join:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt;
    dept&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    head&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt;
    dept
    &lt;span class=&quot;token keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; emp &lt;span class=&quot;token keyword&quot;&gt;AS&lt;/span&gt; head
        &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;head&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deptno &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dept&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;no&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; head&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;role &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'dept head'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The difference in structure is large enough to make any sort of source-level query reuse impractical.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;lack-of-compactness&quot; readability=&quot;48.952657004831&quot;&gt;

&lt;div class=&quot;src-styles----blog-post-module---blockquote---1B1kK&quot; readability=&quot;33.902017291066&quot;&gt;
&lt;div class=&quot;src-styles----blog-post-module---quote---_LHxm&quot; readability=&quot;37.88379204893&quot;&gt;
&lt;p&gt;Few claim that SQL is an elegant language characterized by orthogonality. Some call it an elephant on clay feet. With each addition, its body grows, and it becomes less stable. SQL standardization is largely the domain of database vendors, not academic researchers without commercial interests or users with user interests. &lt;span&gt;[&lt;a id=&quot;id8&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fatzeni-2013&quot;&gt;1&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---attribution---3SQ4F&quot;&gt;
&lt;p&gt;Paolo Atzeni et al.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;SQL is not a small language. At the time of writing the PostgreSQL implementation contains &lt;strong&gt;469 keywords&lt;/strong&gt;. Just part 2 (out of 14) of the SQL:2016 standard has &lt;strong&gt;1732 pages&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The main reason is that SQL, in line with its original goals, strives to be an English-like language, catered to “non-professionals”. However, with the growth of the language, this verbosity has contributed &lt;em&gt;negatively&lt;/em&gt; to the ability to write and comprehend SQL queries. We learnt this lesson with COBOL, and the world has long since moved on to newer, more succinct programming languages.&lt;/p&gt;
&lt;p&gt;In addition to keyword proliferation, the orthogonality issues discussed above make queries more verbose and harder to read.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;lack-of-consistency&quot; readability=&quot;52&quot;&gt;

&lt;p&gt;SQL is arbitrarily inconsistent both in its syntax and semantics. What makes things even worse is that different databases have their own version of SQL, often incompatible with other SQL variants.&lt;/p&gt;
&lt;p&gt;Here are a few examples of entirely different calling conventions in SQL:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; substring&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'PostgreSQL'&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; substring&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;'PostgreSQL'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; trim&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;both &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'yxSQLxx'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'xyz'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; extract&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;'2001-02-16 20:38:40'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There are two syntaxes that specify the ordering of the input set in an aggregate function:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; array_agg&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; bar&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-sql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; rank&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;WITHIN&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; bar&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The list of inconsistencies like this does not end here and can be continued, but that’s beyond the scope of this blog post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;null-a-bag-of-surprises&quot; readability=&quot;131.83505154639&quot;&gt;

&lt;div class=&quot;src-styles----blog-post-module---blockquote---1B1kK&quot; readability=&quot;32.873563218391&quot;&gt;
&lt;div class=&quot;src-styles----blog-post-module---quote---_LHxm&quot; readability=&quot;35.854251012146&quot;&gt;
&lt;p&gt;In some cases of inadequate handling of missing information, the problem is incorrectly perceived to be a problem of the relational model. In fact, the problem stems from the inadequacies of SQL and its non-conformance to the relational model. &lt;span&gt;[&lt;a id=&quot;id9&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fcodd-1990&quot;&gt;6&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---attribution---3SQ4F&quot;&gt;
&lt;p&gt;Edgar J. Codd&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It has been extensively argued that &lt;code&gt;NULL&lt;/code&gt; is the biggest misfeature of SQL (&lt;span&gt;[&lt;a id=&quot;id10&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fcodd-1987&quot;&gt;5&lt;/a&gt;]&lt;/span&gt;, &lt;span&gt;[&lt;a id=&quot;id11&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fdate-1986&quot;&gt;8&lt;/a&gt;]&lt;/span&gt;, &lt;span&gt;[&lt;a id=&quot;id12&quot; href=&quot;https://edgedb.com/blog/we-can-do-better-than-sql#fdate-1987&quot;&gt;9&lt;/a&gt;]&lt;/span&gt;). In fact, the handling of &lt;code&gt;NULL&lt;/code&gt; in contemporary SQL implementations is so surprising, inconsistent, and dangerous that this topic deserves a separate section.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NULL&lt;/code&gt; is so special that it’s not equal to anything, including itself:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# select NULL = NULL;
 ?column?
----------

(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In fact, almost any operation on &lt;code&gt;NULL&lt;/code&gt; will return &lt;code&gt;NULL&lt;/code&gt; and the effect may be very subtle:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# CREATE TABLE x (a int, b text);
CREATE TABLE
postgres=# INSERT INTO x(a, b)
           VALUES (1, 'one'), (2, 'two'), (NULL, 'three')
           RETURNING a, b;
 a |   b
---+-------
 1 | one
 2 | two
   | three
(3 rows)

postgres=# SELECT * FROM x WHERE a NOT IN (1, null);
 a | b
---+---
(0 rows)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;But, in some cases &lt;code&gt;NULL&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; equal to itself, such as in &lt;code&gt;DISTINCT&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;elvis=# SELECT DISTINCT *
        FROM (VALUES (1), (NULL), (NULL)) AS q;
 column1
---------

       1
(2 rows)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;or &lt;code&gt;UNION&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;elvis=# VALUES (1), (NULL) UNION VALUES (2), (NULL);
 column1
---------

       1
       2
(3 rows)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Much of the traditional logic and boolean algebra rules cannot be safely applied to SQL boolean expressions in the presence of &lt;code&gt;NULL&lt;/code&gt;. For example, the law of excluded middle, &lt;em&gt;p&lt;/em&gt; OR NOT &lt;em&gt;p&lt;/em&gt;, does not evaluate to true if &lt;em&gt;p&lt;/em&gt; is &lt;code&gt;NULL&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT count(*) FROM x WHERE a = 1 OR a != 1;
 count
-------
     2
(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Worse yet:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT
               b,
               CASE WHEN a = 1
               THEN 'one'
               ELSE 'not one'
               END
           FROM x;
   b   |  case
-------+---------
 one   | one
 two   | not one
 three | not one
(3 rows)

postgres=# SELECT
               b,
               CASE WHEN a != 1
               THEN 'not one'
               ELSE 'one'
               END
           FROM x;
   b   |  case
-------+---------
 one   | one
 two   | not one
 three | one
(3 rows)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The the row containing &lt;code&gt;b=3&lt;/code&gt; is classified either as &lt;code&gt;'one'&lt;/code&gt; or &lt;code&gt;'not one'&lt;/code&gt; even though the construction of the &lt;code&gt;CASE&lt;/code&gt; expression appears equivalent in both cases.&lt;/p&gt;
&lt;p&gt;Rows containing &lt;code&gt;NULL&lt;/code&gt; sometimes get counted, and sometimes not:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT count(a) FROM x;
 count
-------
     2
(1 row)

postgres=# SELECT cardinality(array_agg(a)) FROM x;
 cardinality
-------------
           3
(1 row)

postgres=# SELECT count(*) FROM x;
 count
-------
     3
(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Rows containing &lt;code&gt;NULL&lt;/code&gt; cannot be compared:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT (NULL, 1) = (NULL, 1);
 ?column?
----------

(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;And even &lt;code&gt;IS NULL&lt;/code&gt; doesn’t work:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT (NULL, 1) IS NULL;
 ?column?
----------
 f
(1 row)

postgres=# SELECT (NULL, 1) IS NOT NULL;
 ?column?
----------
 f
(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;What’s worse, the databases often uses &lt;code&gt;NULL&lt;/code&gt; to indicate an error condition, so your query might contain &lt;code&gt;NULLs&lt;/code&gt; even if you don’t expect them:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;postgres=# SELECT (ARRAY[1, 2])[3];
 array
-------

(1 row)

postgres=# SELECT to_char(timestamp '2001-02-16 20:38:40', '');
 to_char
---------

(1 row)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In PostgreSQL division by zero is an exception, whereas MySQL simply returns &lt;code&gt;NULL&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;mysql&amp;gt; SELECT 1 / 0;
+-------+
| 1 / 0 |
+-------+
|  NULL |
+-------+
1 row in set, 1 warning (0.00 sec)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There are many more cases like these, and there is no consistency in a single SQL implementation, let alone across all implementations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;why-does-all-this-matter&quot; readability=&quot;60&quot;&gt;

&lt;p&gt;OK, so we have highlighted the shortcomings of SQL. Why do they matter? It’s all about &lt;em&gt;ergonomics&lt;/em&gt;. Orthogonality, compactness, and consistency are all &lt;em&gt;essential&lt;/em&gt; traits of a programming language that is easy to learn and use effectively on every level of expertise, team size, and project complexity.&lt;/p&gt;
&lt;p&gt;We have become accustomed to a constant improvement and reimagination of programming languages. Swift, Rust, Kotlin, Go, just to name a few, are great examples in the advancement of engineer ergonomics and productivity. But SQL, often hidden behind layers of ORMs and frameworks, is still very much the dominant data language.&lt;/p&gt;
&lt;p&gt;The NoSQL movement was born, in part, out of the frustration with the perceived stagnation and inadequacy of SQL databases. Unfortunately, in the pursuit of ditching SQL, the NoSQL approaches also abandoned the relational model and other &lt;em&gt;good&lt;/em&gt; parts of RDBMSes.&lt;/p&gt;
&lt;/div&gt;&lt;div id=&quot;edgeql-query-language-evolution&quot; readability=&quot;83.896276595745&quot;&gt;

&lt;p&gt;The relational model is still the most generally applicable and effective method of representing data. The concept of SQL as a declarative, storage-neutral query language is powerful and versatile. We don’t need to abandon either. What we &lt;em&gt;do&lt;/em&gt; need is a “better SQL”: a query language that affords more power to its users, but that is also simpler and more consistent.&lt;/p&gt;
&lt;p&gt;The is exactly what we are working hard to achieve with &lt;strong&gt;EdgeQL&lt;/strong&gt;. We spent years of research and development, focusing on usability and performance without compromising correctness. In our &lt;a href=&quot;https://edgedb.com/blog/edgedb-1-0-alpha-1/&quot;&gt;earlier blog post&lt;/a&gt; we described some of the great features of the language, but it’s worth getting into some detail here to highlight how we are solving the issues brought up in this post.&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;orthogonality-consistency-and-compactness&quot; readability=&quot;65.973180076628&quot;&gt;
&lt;h3 id=&quot;orthogonality-consistency-and-compactness&quot; class=&quot; src-components-header_link----header_link-module---header---1h6HM&quot;&gt;Orthogonality, Consistency, and Compactness&lt;/h3&gt;
&lt;p&gt;In EdgeQL &lt;a href=&quot;https://edgedb.com/docs/edgeql/overview#everything-is-a-set&quot;&gt;every value is a set&lt;/a&gt; and every expression is a function over sets, returning a set. This means that, syntactically, any part of an EdgeQL expression can be factored out into a view or a function without changing other parts of the query.&lt;/p&gt;
&lt;p&gt;Consider a query returning movies together with the number of reviews for each one:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-edgeql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; Movie {
    description,
    number_of_reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;(.reviews)
};&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Let’s say we need the average number of reviews across all movies:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-edgeql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; math::&lt;span class=&quot;token builtin&quot;&gt;mean&lt;/span&gt;(
    Movie {
        description,
        number_of_reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;(.reviews)
    }.number_of_reviews
);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now we &lt;em&gt;also&lt;/em&gt; need the maximum number of reviews per movie:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-edgeql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; (
    avg &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; math::&lt;span class=&quot;token builtin&quot;&gt;mean&lt;/span&gt;(
        Movie {
            number_of_reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;(.reviews)
        }.number_of_reviews
    ),
    &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt;(
        Movie {
            number_of_reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;(.reviews)
        }.number_of_reviews
    )
);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This is a tad unwieldy, let’s make the query cleaner by factoring out the &lt;code&gt;Movie&lt;/code&gt; expression into a view:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-edgeql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt;
    MovieReviewCount &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; Movie {
        number_of_reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;(.reviews)
    }
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; (
    avg &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; math::&lt;span class=&quot;token builtin&quot;&gt;mean&lt;/span&gt;(MovieReviewCount.number_of_reviews),
    &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;max&lt;/span&gt;(MovieReviewCount.number_of_reviews),
);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Since everything is a function over sets, there are only a handful of keywords in EdgeQL queries, and they are used mostly to delineate the major parts of a query.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;missing-data&quot; readability=&quot;49&quot;&gt;

&lt;p&gt;In EdgeQL, the notion of missing data is simple: it is always an empty set, and any element-wise operation on an empty set is, likewise, an empty set:&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax src-components-code----code-module---repl---7611z&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;{};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;{};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Aggregation is consistent:&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax src-components-code----code-module---repl---7611z&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;count&lt;/span&gt;({});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;6&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;array_agg&lt;/span&gt;(&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;{});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In EdgeQL, sets are flat, i.e. a set (including an empty one) cannot be an element of another set:&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax src-components-code----code-module---repl---7611z&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; {&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;, {&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;}, {}, {}};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The set constructor notation above is actually equivalent to a &lt;code&gt;UNION&lt;/code&gt; operation, which better highlights its set nature:&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax src-components-code----code-module---repl---7611z&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; {&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;} &lt;span class=&quot;token keyword&quot;&gt;UNION&lt;/span&gt; {&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;} &lt;span class=&quot;token keyword&quot;&gt;UNION&lt;/span&gt; {} &lt;span class=&quot;token keyword&quot;&gt;UNION&lt;/span&gt; {};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;An empty set can be coalesced into a non-empty set:&lt;/p&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax src-components-code----code-module---repl---7611z&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
....... 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; empty_set_expr &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;{}
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; empty_set_expr &lt;span class=&quot;token operator&quot;&gt;??&lt;/span&gt; {&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;src-components-code----code-module---block---aABGx&quot; readability=&quot;7&quot;&gt;
&lt;div class=&quot;src-components-code----code-module---codePart---2l876 code-language-edgeql&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
edgedb&amp;gt; 
....... 
&lt;/pre&gt;
&lt;pre&gt;
&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;WITH&lt;/span&gt; empty_set_expr &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;gt;&lt;/span&gt;{}
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; {&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;} &lt;span class=&quot;token keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;EXISTS&lt;/span&gt; empty_set_expr &lt;span class=&quot;token keyword&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;src-styles----blog-post-module---rest_section---aDpQC&quot; id=&quot;system-integration&quot; readability=&quot;54.255216693419&quot;&gt;

&lt;p&gt;In EdgeDB, the data schema is formulated in a way that is &lt;a href=&quot;https://edgedb.com/docs/tutorial/createdb#sdl&quot;&gt;much closer&lt;/a&gt; to the contemporary application data model. This makes the database-application schema reflection straightforward and efficient.&lt;/p&gt;
&lt;p&gt;Unlike SQL, EdgeQL can easily extract arbitrary data trees:&lt;/p&gt;
&lt;pre class=&quot;src-components-code----code-module---code---1IzoY src-styles----blog-post-module---rest_border_box---2usPO prismjs-light-syntax code-language-edgeql eql-block-pre src-components-code----code-module---block---aABGx&quot;&gt;
&lt;span class=&quot;src-components-code----code-module---wrapper---3ZlaG&quot;&gt;&lt;span class=&quot;tokens tokens-normal&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; Movie {
    description,

    directors: {
        full_name,
        image,
    }
    &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; .last_name,

    &lt;span class=&quot;token keyword&quot;&gt;cast&lt;/span&gt;: {
        full_name,
        image,
    }
    &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; .last_name,

    reviews &lt;span class=&quot;token definition punctuation&quot;&gt;:=&lt;/span&gt; (
        &lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; Movie&lt;span class=&quot;token code&quot;&gt;.&amp;lt;&lt;/span&gt;movie[&lt;span class=&quot;token keyword&quot;&gt;IS&lt;/span&gt; Review] {
            body,
            rating,
            author: {
                name,
                image,
            }
        }
        &lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; .creation_time &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;
    ),
};&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Coupled with extensive &lt;a href=&quot;https://edgedb.com/docs/datamodel/scalars/json#constructing-json-values&quot;&gt;JSON support&lt;/a&gt;, this makes writing REST and &lt;a href=&quot;https://edgedb.com/docs/clients/99_graphql/index&quot;&gt;GraphQL&lt;/a&gt; backends an order of magnitude easier.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;final-words&quot; readability=&quot;38.944552529183&quot;&gt;

&lt;p&gt;SQL started with a goal to empower non-programmers to work with the relational data effectively. Despite its shortcomings, it has arguably been wildly successful, with most databases implementing or emulating it. However, like any solution, SQL is facing increasing inadequacy in the support of the new requirements, modes of use and user productivity. It is time we do something about it.&lt;/p&gt;
&lt;aside class=&quot;&quot; readability=&quot;3.7383177570093&quot;&gt;&lt;p&gt;&lt;a href=&quot;mailto:hello@edgedb.com&quot;&gt;Drop us a line&lt;/a&gt; if you have any inquiries or feedback.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/edgedatabase&quot;&gt;Follow EdgeDB&lt;/a&gt; on Twitter, and stay tuned for updates!&lt;/p&gt;
&lt;/aside&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/edgedb/edgedb&quot; class=&quot;src-styles----blog-post-module---github_btn---1ygFZ&quot;&gt;EdgeDB on GitHub&lt;/a&gt;&lt;/p&gt;










&lt;/div&gt;</description>
<pubDate>Thu, 09 May 2019 18:52:54 +0000</pubDate>
<dc:creator>1st1</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://edgedb.com/blog/we-can-do-better-than-sql/</dc:identifier>
</item>
<item>
<title>It&amp;#039;s time to replace GIFs with AV1 video</title>
<link>https://www.singhkays.com/blog/its-time-replace-gifs-with-av1-video/</link>
<guid isPermaLink="true" >https://www.singhkays.com/blog/its-time-replace-gifs-with-av1-video/</guid>
<description>&lt;p&gt;It is 2019 and we need to make a decision about GIFs (&lt;a href=&quot;https://bits.blogs.nytimes.com/2013/05/23/battle-over-gif-pronunciation-erupts/&quot; target=&quot;_blank&quot;&gt;no, not that one! We’re never going to be able to decide that one!&lt;/a&gt;). GIFs take up a massive amount of space &lt;em&gt;(often multiple megabytes!)&lt;/em&gt; and if you’re a web developer, then that’s completely against your ethos! As a web developer, you want to minimize the bits your users need to download so that your website loads fast. That’s why you minify javascript, optimize PNGs, JPEGs and sometimes turn &lt;a href=&quot;https://developers.google.com/speed/webp/&quot; target=&quot;_blank&quot;&gt;JPEGs to WebPs as well&lt;/a&gt;. But then what about the venerable GIF?&lt;/p&gt;
&lt;h2 id=&quot;where-we-are-going-we-don-t-need-no-gifs&quot;&gt;Where we are going, we don’t need no GIFs!&lt;/h2&gt;
&lt;p&gt;If your goal is to improve your website’s loading performance, then a GIF needs to be yanked! But then how do you have moving pictures? The answer is a video. And in most cases, you’ll get better quality as well as almost 50-90% size savings! In life, most things have a pro and a con. When you’re replacing a GIF with a video, in majority of the cases you’ll be hard pressed to find a con&lt;/p&gt;
&lt;h2 id=&quot;replace-all-the-gifs&quot;&gt;Replace all the GIFs!&lt;/h2&gt;
&lt;p&gt;Fortunately, replacing GIFs with video has now been common for a few years so the tools needed to pull off this trick are already in play. In this blog, I’m not going to break new ground, but improve upon what already exists. So, here’s the lowdown on what you can currently do:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Take a GIF and convert it into video&lt;/li&gt;
&lt;li&gt;Encode it with H.264 or VP9 codec i.e. compress it and package in a MP4 of WebM container&lt;/li&gt;
&lt;li&gt;Replace animated GIF &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements with &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set the video to play automatically, sliently and in a loop to replicate the GIF functionality&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/replace-animated-gifs-with-video/&quot; target=&quot;_blank&quot;&gt;Google has a good documentation page describing the process.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;it-is-2019&quot;&gt;It is 2019&lt;/h2&gt;
&lt;p&gt;It’s 2019. Tech moves forward and we need to move with it. Until now you’ve had two choices of codecs that are widely adopted across all browsers and platforms for encoding the video:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;H.264&lt;/strong&gt; – Introduced in 2003 and the most widely used codec today&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VP9&lt;/strong&gt; – Introduced in 2013 and achieves up to 50% more compression compared to H.264 most of the times but it can look worse sometimes according to &lt;a href=&quot;https://www.reddit.com/r/AV1/comments/bjzqly/its_time_to_replace_gifs_with_av1_video/emcohnq/&quot; target=&quot;_blank&quot;&gt;this discussion on reddit&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote readability=&quot;8.2582417582418&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Even though H.265 is the next-gen version of H.264 and competes with VP9, I’m not including it in this comparison becuase of lack of browser support as noted on &lt;a href=&quot;https://caniuse.com/#feat=hevc&quot; target=&quot;_blank&quot;&gt;https://caniuse.com/#feat=hevc&lt;/a&gt;. Licensing costs is the major reason why H.265 is not as widely adopted as H.264 and why Alliance of Open Media consortium is working a royalty-free codec i.e. AV1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Remember, our goal is to reduce the humongous GIF to as small a size as possible to improve our webpage loading time. It wouldn’t be 2019 if we didn’t have a new video compression standard we could encode to. This is called AV1. With AV1, we are able to &lt;a href=&quot;http://compression.ru/video/codec_comparison/hevc_2017/MSU_HEVC_comparison_2017_P5_HQ_encoders.pdf&quot; target=&quot;_blank&quot;&gt;achieve ~30% more compression compared to VP9.&lt;/a&gt; Exciting! :)&lt;/p&gt;
&lt;h2 id=&quot;serving-you-av1-since-2019&quot;&gt;Serving you AV1 since 2019!&lt;/h2&gt;
&lt;h4 id=&quot;on-desktop&quot;&gt;On desktop&lt;/h4&gt;
&lt;p&gt;Recently, support for decoding AV1 video has been enabled in desktop versions of &lt;a href=&quot;https://developers.google.com/web/updates/2018/09/chrome-70-media-updates#av1-decoder&quot; target=&quot;_blank&quot;&gt;Google Chrome 70&lt;/a&gt; and &lt;a href=&quot;https://medium.com/mozilla-tech/mozilla-celebrates-release-of-free-high-quality-video-compression-technology-av1-in-firefox-65-7c95f2b7e56&quot; target=&quot;_blank&quot;&gt;Mozilla Firefox 65&lt;/a&gt;. At present, support in Firefox is buggy and can cause crashes but is expected to improve with the adoption of the &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1533742&quot; target=&quot;_blank&quot;&gt;dav1d decoder&lt;/a&gt; in Firefox 67. For more info on the dav1d decoder and the latest release, see &lt;a href=&quot;http://www.jbkempf.com/blog/post/2019/dav1d-0.3-release%3A-even-faster%21&quot; target=&quot;_blank&quot;&gt;dav1d 0.3.0 release: even faster!&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;on-smartphones&quot;&gt;On smartphones&lt;/h4&gt;
&lt;p&gt;For smartphones, the support is lacking at present but that’s to be expected due to the lack of hardware decoders. Without hardware decoders, the decoding can be done in software without any hiccups but it would cause an increase in battery consumption. The first set of mobile SOCs with hardware decoding support for AV1 are expected to come to market in 2020.&lt;/p&gt;
&lt;h4 id=&quot;target-audience-of-this-article-aka-if-mobile-users-can-t-decode-then-why-adopt-av1&quot;&gt;Target audience of this article AKA “If mobile users can’t decode, then why adopt AV1?”&lt;/h4&gt;
&lt;p&gt;AV1 is a fairly new codec and we’re at the beginning of it’s adoption curve. Think of this article as the build-it phase of “If you build it, they will come” approach. We know with desktop browser support, we can enable a subset of the market and reduce the amount of data downloaded. We an also employ a strategy where we can fallback to supported codecs on user devices if AV1 support is not enabled. When these users upgrade to devices with AV1 support, they will automatically get the smaller AV1 video. To enable this we’ll need to create a video tag like below which will allow us to serve the videos in this preference order - &lt;strong&gt;AV1&lt;/strong&gt;-&amp;gt;&lt;strong&gt;VP9&lt;/strong&gt;-&amp;gt;&lt;strong&gt;H.264&lt;/strong&gt;. If a user has a really old browser or a device that cannot decode any of the videos &lt;em&gt;(highly unlikely with H264 video inluded)&lt;/em&gt;, then they would just get the GIF file 😞&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&amp;lt;&lt;span&gt;video&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;display:block; margin: 0 auto;&quot;&lt;/span&gt; &lt;span&gt;autoplay&lt;/span&gt; &lt;span&gt;loop&lt;/span&gt; &lt;span&gt;muted&lt;/span&gt; &lt;span&gt;playsinline&lt;/span&gt; &lt;span&gt;poster&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;RollingCredits.jpg&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span&gt;source&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;media/RollingCredits.av1.mp4&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;video/mp4&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span&gt;source&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;media/RollingCredits.vp9.webm&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;video/webm&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span&gt;source&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;media/RollingCredits.x264.mp4&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;video/mp4&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span&gt;img&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;media/RollingCredits.gif&quot;&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span&gt;video&lt;/span&gt;&amp;gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;the-av1-recipe&quot;&gt;The AV1 recipe&lt;/h2&gt;
&lt;p&gt;Creating an AV1 video is pretty simple. &lt;a href=&quot;https://ffmpeg.org/download.html&quot; target=&quot;_blank&quot;&gt;Download the latest build of ffmpeg for your platform from here&lt;/a&gt; and use the below commandline. We’re going to be using a 2-pass encoding mode to achieve a target bitrate. For this, we’ll run ffmpeg twice. In the first pass we’ll output to a null file descriptor, not an actual file. This generates a logfile that ffmpeg needs for the second pass.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;# Linux or Mac&lt;/span&gt;
&lt;span&gt;## Pass 1&lt;/span&gt;
ffmpeg -i input.mp4 -c:v libaom-av1 -b:v 200k -filter:v scale&lt;span&gt;=&lt;/span&gt;&lt;span&gt;720&lt;/span&gt;:-1 -strict experimental -cpu-used &lt;span&gt;1&lt;/span&gt; -tile-columns &lt;span&gt;2&lt;/span&gt; -row-mt &lt;span&gt;1&lt;/span&gt; -threads &lt;span&gt;8&lt;/span&gt; -pass &lt;span&gt;1&lt;/span&gt; -f mp4 /dev/null &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span&gt;\
&lt;/span&gt;&lt;span&gt;## Pass 2&lt;/span&gt;
ffmpeg -i input.mp4 -pix_fmt yuv420p -movflags faststart -c:v libaom-av1 -b:v 200k -filter:v scale&lt;span&gt;=&lt;/span&gt;&lt;span&gt;720&lt;/span&gt;:-1 -strict experimental -cpu-used &lt;span&gt;1&lt;/span&gt; -tile-columns &lt;span&gt;2&lt;/span&gt; -row-mt &lt;span&gt;1&lt;/span&gt; -threads &lt;span&gt;8&lt;/span&gt; -pass &lt;span&gt;2&lt;/span&gt; output.mp4

&lt;span&gt;# Windows&lt;/span&gt;
&lt;span&gt;## Pass 1&lt;/span&gt;
ffmpeg.exe -i input.mp4 -c:v libaom-av1 -b:v 200k -filter:v scale&lt;span&gt;=&lt;/span&gt;&lt;span&gt;720&lt;/span&gt;:-1 -strict experimental -cpu-used &lt;span&gt;1&lt;/span&gt; -tile-columns &lt;span&gt;2&lt;/span&gt; -row-mt &lt;span&gt;1&lt;/span&gt; -threads &lt;span&gt;8&lt;/span&gt; -pass &lt;span&gt;1&lt;/span&gt; -f mp4 NUL &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; ^
&lt;span&gt;## Pass 2&lt;/span&gt;
ffmpeg.exe -i input.mp4 -pix_fmt yuv420p -movflags faststart -c:v libaom-av1 -b:v 200k -filter:v scale&lt;span&gt;=&lt;/span&gt;&lt;span&gt;720&lt;/span&gt;:-1 -strict experimental -cpu-used &lt;span&gt;1&lt;/span&gt; -tile-columns &lt;span&gt;2&lt;/span&gt; -row-mt &lt;span&gt;1&lt;/span&gt; -threads &lt;span&gt;8&lt;/span&gt; -pass &lt;span&gt;2&lt;/span&gt; output.mp4&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s an explanation of what the command line options do&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;-i - Used to specify the input file

-pix_fmt - Use to specify the 4:2:0 chroma subsampling for the color information in the video. There are many different pixel formats but 4:2:0 is the most compatible, hence we specify that here.

-c:v - Used to specify the encoder to use i.e. AV1 in this case

-b:v – Used to specify the average bitrate we want to achieve

-filter:v scale - ffmpeg’s scale filter to reduce the resolution of the video. We specify this in the X:-1 format which tells ffmpeg to reduce the width of the video to X while and automatically set height that maintains the aspect ratio 

-strict experimental - Used because AV1 is a fairly new encoder

-cpu-used - Horribly named parameter but this is way to select the level of quality we want to achieve. Valid values are 0-4. Lower values (i.e. closer to 0) mean more quality as well as more encoding time taken

-tile-columns - Used to achieve multi-threading. Tells the AV1 encoder to split the scene into separate columns which can then be encoded independently of each other, thereby increasing CPU usage 

-row-mt – Similar concept as columns above but for rows within those columns

-threads - # of threads the encoder can use

-pass - Which pass the command executes

-f - Only used in the first pass. Specifies the format of the output file in the second pass i.e. MP4 in this case

-movflags faststart - Enables fast start of video by moving some data to the beginning of the file. This  allows the video to be played before it is completely downloaded

&lt;/code&gt;
&lt;/pre&gt;
&lt;h2 id=&quot;gif-recipe&quot;&gt;GIF recipe&lt;/h2&gt;
&lt;p&gt;For generating the GIF, I used the below command. To reduce the size of the GIF, I scaled the GIF to 720px wide and 12 fps instead of 24 fps source video.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./ffmpeg -i /mnt/c/Users/kasing/Desktop/ToS.mov -ss &lt;span&gt;00&lt;/span&gt;:08:08 -t &lt;span&gt;12&lt;/span&gt;
-filter_complex &lt;span&gt;&quot;[0:v] fps=12,scale=720:-1&quot;&lt;/span&gt; -y scene2.gif&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;test-results&quot;&gt;Test Results&lt;/h2&gt;
&lt;p&gt;The proof is in the pudding, right? Let’s see why AV1 is the right codec for this choice of work. I took the open source video Tears of Steel available here &lt;a href=&quot;https://mango.blender.org/&quot; target=&quot;_blank&quot;&gt;https://mango.blender.org/&lt;/a&gt; and encoded it to approximately similar bitrates for AV1, VP9, H.264 codecs. The resulting files are looping below so you can compare between them.&lt;/p&gt;
&lt;blockquote readability=&quot;17.75348189415&quot;&gt;
&lt;p&gt;&lt;strong&gt;NOTE 1:&lt;/strong&gt; If a file below doesn’t load for you, it’s possible you’ll need to update your browser. If your browser doesn’t work, I suggest using browsing in a Chromium based browser such as Chrome, Vivaldi, Brave or Opera. Here’s the latest on browser support for AV1 &lt;a href=&quot;https://caniuse.com/#feat=av1&quot; target=&quot;_blank&quot;&gt;https://caniuse.com/#feat=av1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE 2:&lt;/strong&gt; For Firefox 66 on Linux, you’ll need to set the &lt;code&gt;media.av1.enabled&lt;/code&gt; flag to true in &lt;code&gt;about:config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE 2:&lt;/strong&gt; I’m not including the GIFs inline below due to their large size and amount of data it will take to load this page! (Also would be ironic as that’s what I’m to get us away from :)). But you can view the GIFs here &lt;a href=&quot;https://github.com/singhkays/its-time-replace-gifs-with-av1-video/blob/master/GIFs&quot; target=&quot;_blank&quot;&gt;https://github.com/singhkays/its-time-replace-gifs-with-av1-video/blob/master/GIFs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;scene-1-200-kbps&quot;&gt;Scene 1 @ 200 Kbps&lt;/h3&gt;
&lt;p&gt;This is a high motion scene so it really stresses the encoders at low bitrates. We quickly see how bad H.264 is at this bitrate exhibiting extreme blockiness. VP9 improves things a bit but you can still notice some blockiness. AV1 clearly wins in this test rendering a clearly better image.&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;h-264&quot;&gt;H.264&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;vp9&quot;&gt;VP9&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;av1&quot;&gt;AV1&lt;/h4&gt;
&lt;/p&gt;
&lt;h3 id=&quot;scene-2-200-kbps&quot;&gt;Scene 2 @ 200 Kbps&lt;/h3&gt;
&lt;p&gt;This scene shows off a lot of translucent CGI generated content. The results are a lot closer than the last scene but overall AV1 ends up being the best.&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;h-264&quot;&gt;H.264&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;vp9&quot;&gt;VP9&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;av1&quot;&gt;AV1&lt;/h4&gt;
&lt;/p&gt;
&lt;h3 id=&quot;scene-3-100-kbps&quot;&gt;Scene 3 @ 100 Kbps&lt;/h3&gt;
&lt;p&gt;In this scene, we really dial down the bitrate to 100 Kbps and the results are no surprise. AV1 maintains it’s advantage at this low bitrate as well!&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;h-264&quot;&gt;H.264&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;vp9&quot;&gt;VP9&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;h4 id=&quot;av1&quot;&gt;AV1&lt;/h4&gt;
&lt;/p&gt;
&lt;h2 id=&quot;encore&quot;&gt;Encore&lt;/h2&gt;
&lt;p&gt;To really drive home the point of the amount of space savings compared to a GIF – The total size of all the videos embedded above is …. &lt;strong&gt;1.62 MB!!&lt;/strong&gt; That’s right. 1,708,032 freakin bytes! For comparison, here’s the GIF and AV1 video size for each of the scenes&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th/&gt;
&lt;th&gt;GIF&lt;/th&gt;
&lt;th&gt;AV1&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Scene 1&lt;/td&gt;
&lt;td&gt;11.7 MB&lt;/td&gt;
&lt;td&gt;0.33 MB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Scene 2&lt;/td&gt;
&lt;td&gt;7.27 MB&lt;/td&gt;
&lt;td&gt;0.18 MB&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Scene 3&lt;/td&gt;
&lt;td&gt;5.62 MB&lt;/td&gt;
&lt;td&gt;0.088 MB&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;Absolutely mind blowing! Isn’t it?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;NOTE: I haven’t listed out the file sizes for VP9 and H264 because they are very similar to AV1 because of using the same bitrate for all codecs. Also, it would be redundant to add two more columns with similar sizes just to make the point that these codecs offer much better quality than GIF at highly reduced file sizes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2019-04-28&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Published v1&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;2019-05-09&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Updated size of Scene 2 GIF to 7.27 MB. This was erroneously specified as 9.06 MB before.&lt;/li&gt;
&lt;li&gt;Added links to GIFs based on Hacker News comment&lt;/li&gt;
&lt;li&gt;Added info about why H.265 wasn’t included in this comparison&lt;/li&gt;
&lt;li&gt;Added a link to latest browser support for AV1&lt;/li&gt;
&lt;li&gt;Added more info on desktop vs browser compatibility&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Reach out if you have any questions! Feel free to follow me on&lt;/p&gt;
</description>
<pubDate>Thu, 09 May 2019 18:16:34 +0000</pubDate>
<dc:creator>singhkays</dc:creator>
<og:title>It's time to replace GIFs with AV1 video!</og:title>
<og:description>It is 2019 and we need to make a decision about GIFs (no, not that one! We’re never going to be able to decide that one!). GIFs take up a massive amount of space (often multiple megabytes!) and if you’re a web developer, then that’s completely against your ethos! As a web developer, you want to minimize the bits your users need to download so that your website loads fast.</og:description>
<og:url>https://www.singhkays.com/blog/its-time-replace-gifs-with-av1-video/</og:url>
<og:type>article</og:type>
<og:image>https://www.singhkays.com/blog/its-time-replace-gifs-with-av1-video/media/aint-nobody-got-time-for-gif.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.singhkays.com/blog/its-time-replace-gifs-with-av1-video/</dc:identifier>
</item>
<item>
<title>Open source firmware is important for security</title>
<link>https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/</link>
<guid isPermaLink="true" >https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/</guid>
<description>&lt;p&gt;Wednesday, May 8, 2019&lt;/p&gt;
&lt;p&gt;I gave a talk recently at GoTo Chicago on &lt;a href=&quot;https://docs.google.com/presentation/d/1Qees556dT9LNoooEdf6En8V82L3V-_N8LbPuyGihZeI/edit?usp=sharing&quot;&gt;Why open source firmware is important&lt;/a&gt; and I thought it would be nice to also write a blog post with my findings. This post will focus on why open source firmware is important for security.&lt;/p&gt;
&lt;h2 id=&quot;privilege-levels&quot;&gt;Privilege Levels&lt;/h2&gt;
&lt;p&gt;In your typical “stack” today you have the various levels of privileges.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Ring 3 - Userspace:&lt;/strong&gt; has the least amount of privileges, short of there being a sandbox in userspace that is restricted further.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ring 0 - Kernel:&lt;/strong&gt; The operating system kernel, for open source operating systems you get visibility into the code behind this.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ring -1 - Hypervisor:&lt;/strong&gt; The virtual machine monitor (VMM) that creates and runs virtual machines. For open source hypervisors like Xen, KVM, bhyve, etc you have visibility into the code behind this.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ring -2 -&lt;/strong&gt; &lt;strong&gt;System Management Mode (SMM), UEFI kernel:&lt;/strong&gt; Proprietary code, more on this &lt;a href=&quot;https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/#ring-2-smm-uefi-kernel&quot;&gt;below&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ring -3 - Management Engine:&lt;/strong&gt; Proprietary code, more on this &lt;a href=&quot;https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/#ring-3-management-engine&quot;&gt;below&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The negative rings were made up because there was no other way to express something with more privileges.&lt;/p&gt;
&lt;p&gt;From the above, it’s pretty clear that for Rings -1 to 3, we have the option to use open source software and have a large amount of visibility and control over the software we run. For the privilege levels under Ring -1, we have less control but it is getting better with the open source firmware community and projects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It’s counter-intuitive that the code that we have the least visibility into has the most privileges. This is what open source firmware is aiming to fix.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;ring-2-smm-uefi-kernel&quot;&gt;Ring -2: SMM, UEFI kernel&lt;/h3&gt;
&lt;p&gt;This ring controls all CPU resources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System management mode (SMM)&lt;/strong&gt; is invisible to the rest of the stack on top of it. It has half a kernel. It was originally used for power management and system hardware control. It holds a lot of the proprietary designed code and is a place for vendors to add new proprietary features. It handles system events like memory or chipset errors as well as a bunch of other logic.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;UEFI Kernel&lt;/strong&gt; is extremely complex. It has millions of lines of code. UEFI applications are active after boot. It was built with security from obscurity. The &lt;a href=&quot;https://uefi.org/specifications&quot;&gt;specification&lt;/a&gt; is absolutely insane if you want to dig in.&lt;/p&gt;
&lt;h3 id=&quot;ring-3-management-engine&quot;&gt;Ring -3: Management Engine&lt;/h3&gt;
&lt;p&gt;This is the most privileged ring. In the case of Intel (x86) this is the Intel Management Engine. It can turn on nodes and re-image disks invisibly. It has a kernel that runs &lt;a href=&quot;https://itsfoss.com/fact-intel-minix-case/&quot;&gt;Minix 3&lt;/a&gt; as well as a web server and entire networking stack. It turns out Minix is the most widely used operating system because of this. There is a lot of functionality in the Management Engine, it would probably take me all day to list it off but there are &lt;a href=&quot;https://www.intel.com/content/www/us/en/support/articles/000008927/software/chipset-software.html&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;https://files.bitkeks.eu/docs/intelme-report.pdf&quot;&gt;resources&lt;/a&gt; for digging into more detail, should you want to.&lt;/p&gt;
&lt;p&gt;Between Ring -2 and Ring -3 we have at least 2 and a half other kernels in our stack as well as a bunch of proprietary and unnecessary complexity. Each of these kernels have their own networking stacks and web servers. The code can also modify itself and persist across power cycles and re-installs. &lt;strong&gt;We have very little visibility into what the code in these rings is actually doing, which is horrifying considering these rings have the most privileges.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;they-all-have-exploits&quot;&gt;They all have exploits&lt;/h3&gt;
&lt;p&gt;It should be of no surprise to anyone that Rings -2 and -3 have their fair share of vulnerabilities. They are horrifying when they happen though. Just to use one as an example although I will let you find others on your own, &lt;a href=&quot;https://www.wired.com/2017/05/hack-brief-intel-fixes-critical-bug-lingered-7-dang-years/&quot;&gt;there was a bug in the web server of the Intel Management Engine that was there for seven years&lt;/a&gt; without them realizing.&lt;/p&gt;
&lt;h2 id=&quot;how-can-we-make-it-better&quot;&gt;How can we make it better?&lt;/h2&gt;
&lt;h3 id=&quot;nerf-non-extensible-reduced-firmware&quot;&gt;NERF: Non-Extensible Reduced Firmware&lt;/h3&gt;
&lt;p&gt;NERF is what the open source firmware community is working towards. The goals are to make firmware less capable of doing harm and make its actions more visible. They aim to remove all runtime components but currently with the Intel Management Engine, they cannot remove all but they can take away the web server and IP stack. They also remove UEFI IP stack and other drivers, as well as the Intel Management/UEFI self-reflash capability.&lt;/p&gt;
&lt;h3 id=&quot;me-cleaner&quot;&gt;me_cleaner&lt;/h3&gt;
&lt;p&gt;This is the project used to clean the Intel Management Engine to the smallest necessary capabilities. You can check it out on GitHub: &lt;a href=&quot;https://github.com/corna/me_cleaner&quot;&gt;github.com/corna/me_cleaner&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;u-boot-and-coreboot&quot;&gt;u-boot and coreboot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.chromium.org/developers/u-boot&quot;&gt;u-boot&lt;/a&gt; and &lt;a href=&quot;https://www.coreboot.org/&quot;&gt;coreboot&lt;/a&gt; are open source firmware. They handle silicon and DRAM initialization. Chromebooks use both, coreboot on x86, and u-boot for the rest. This is one part of how they &lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/42038.pdf&quot;&gt;verify boot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Coreboot’s design philosophy is to &lt;a href=&quot;https://doc.coreboot.org/&quot;&gt;“do the bare minimum necessary to ensure that hardware is usable and then pass control to a different program called the&lt;/a&gt; &lt;a href=&quot;https://doc.coreboot.org/&quot;&gt;&lt;em&gt;payload&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;https://doc.coreboot.org/&quot;&gt;.”&lt;/a&gt; The payload in this case is linuxboot.&lt;/p&gt;
&lt;h3 id=&quot;linuxboot&quot;&gt;linuxboot&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linuxboot.org/&quot;&gt;Linuxboot&lt;/a&gt; handles device drivers, network stack, and gives the user a multi-user, multi-tasking environment. It is built with Linux so that a single kernel can work for several boards. Linux is already quite vetted and has a lot of eyes on it since it is used quite extensively. Better to use a open kernel with a lot of eyes on it, than the 2½ other kernels that were all different and closed off. This means that we are lessening the attack surface by using less variations of code and we are making an effort to rely on code that is open source. Linux improves boot reliability by replacing lightly-tested firmware drivers with hardened Linux drivers.&lt;/p&gt;
&lt;p&gt;By using a kernel we already have tooling around firmware devs can build in tools they already know. When they need to write logic for signature verification, disk decryption, etc it’s in a language that is modern, easily auditable, maintainable, and readable.&lt;/p&gt;
&lt;h3 id=&quot;u-root&quot;&gt;u-root&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/u-root/u-root&quot;&gt;u-root&lt;/a&gt; is a set of golang userspace tools and bootloader. It is then used as the initramfs for the Linux kernel from linuxboot.&lt;/p&gt;
&lt;p&gt;Through using the NERF stack they saw boot times were 20x faster. But this blog post is on security so let’s get back to that….&lt;/p&gt;
&lt;p&gt;The NERF stack helps improve the visibility into a lot of the components that were previously very proprietary. There is still a lot of other firmware on devices.&lt;/p&gt;
&lt;h2 id=&quot;what-about-all-the-other-firmware&quot;&gt;What about all the other firmware?&lt;/h2&gt;
&lt;p&gt;We need open source firmware for the network interface controller (NIC), solid state drives (SSD), and base management controller (BMC).&lt;/p&gt;
&lt;p&gt;For the NIC, there is some work being done in the open compute project on &lt;a href=&quot;https://www.opencompute.org/documents/ocp-nic-3-0-draft-0v85b-20181213b-tn-temp-no-cb-pdf&quot;&gt;NIC 3.0&lt;/a&gt;. It should be interesting to see where that goes.&lt;/p&gt;
&lt;p&gt;For the BMC, there is both &lt;a href=&quot;https://github.com/openbmc/openbmc&quot;&gt;OpenBMC&lt;/a&gt; and &lt;a href=&quot;https://github.com/u-root/u-bmc&quot;&gt;u-bmc&lt;/a&gt;. I had written a little about them in &lt;a href=&quot;https://blog.jessfraz.com/post/the-firmware-rabbit-hole/&quot;&gt;a previous blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We need to have all open source firmware to have all the visibility into the stack but also to actually verify the state of software on a machine.&lt;/p&gt;
&lt;h2 id=&quot;roots-of-trust&quot;&gt;Roots of Trust&lt;/h2&gt;
&lt;p&gt;The goal of the root of trust should be to verify that the software installed in every component of the hardware is the software that was intended. This way you can know without a doubt and verify if hardware has been hacked. Since we have very little to no visibility into the code running in a lot of places in our hardware it is hard to do this. How do we really know that the firmware in a component is not vulnerable or that is doesn’t have any backdoors? Well we can’t. Not unless it was all open source.&lt;/p&gt;
&lt;p&gt;Every cloud and vendor seems to have their own way of doing a root of trust. Microsoft has &lt;a href=&quot;https://github.com/opencomputeproject/Project_Olympus/tree/master/Project_Cerberus&quot;&gt;Cerberus&lt;/a&gt;, Google has &lt;a href=&quot;https://cloud.google.com/blog/products/gcp/titan-in-depth-security-in-plaintext&quot;&gt;Titan&lt;/a&gt;, and Amazon has &lt;a href=&quot;https://perspectives.mvdirona.com/2019/02/aws-nitro-system/&quot;&gt;Nitro&lt;/a&gt;. These seem to assume an explicit amount of trust in the proprietary code (the code we cannot see). This leaves me with not a great feeling. &lt;strong&gt;Wouldn’t it be better to be able to use all open source code? Then we could verify without a doubt that the code you can read and build yourself is the same code running on hardware for all the various places we have firmware. We could then verify that a machine was in a correct state without a doubt of it being vulnerable or with a backdoor.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It makes me wonder what the smaller cloud providers like DigitalOcean or Packet have for a root of trust. Often times we only hear of these projects from the big three or five. I asked this on twitter and didn’t get any good answers…&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;5.693023255814&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I’m surprised how many people are responding that they love DigitalOcean but seem entirely unconcerned there’s no answer here. You should be concerned.&lt;/p&gt;
— jessie frazelle 👩🏼‍🚀 (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/1126131424095100929?ref_src=twsrc%5Etfw&quot;&gt;May 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;There is a great talk by &lt;a href=&quot;https://twitter.com/PaulM&quot;&gt;Paul McMillan&lt;/a&gt; and Matt King on &lt;a href=&quot;https://www.youtube.com/watch?v=PEVVRkd-wPM&quot;&gt;Securing Hardware at Scale&lt;/a&gt;. It covers in great detail how to secure bare metal while also giving customers access to the bare metal. When they get back the hardware from customers they need to ensure with consistency and reliability that there is nothing from the customer hiding in any component of the hardware.&lt;/p&gt;
&lt;p&gt;All clouds need to ensure that the hardware they are running has not been compromised after a customer has run compute on it.&lt;/p&gt;
&lt;h2 id=&quot;platform-firmware-resiliency&quot;&gt;Platform Firmware Resiliency&lt;/h2&gt;
&lt;p&gt;As far as chip vendors go, they seem to have a different offering. Intel has &lt;a href=&quot;https://www.intel.com/content/dam/www/public/us/en/documents/solution-briefs/firmware-resilience-blocks-solution-brief.pdf&quot;&gt;Platform Firmware Resilience&lt;/a&gt; and Lattice has &lt;a href=&quot;http://www.latticesemi.com/en/Solutions/Solutions/SolutionsDetails02/PFR&quot;&gt;Platform Firmware Resiliency&lt;/a&gt;. These seem to be more focused on the NIST guidelines for &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-193.pdf&quot;&gt;Platform Firmware Resiliency&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I tried to ask the internet who was using this and heard very little back, so if you are using Platform Firmware Resiliency can you let me know!&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;4.8729281767956&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;It seems that Intel has some effort called Platform Firmware Resiliency (anyone using this one?!) &lt;a href=&quot;https://t.co/fQq2gdLNOm&quot;&gt;https://t.co/fQq2gdLNOm&lt;/a&gt;&lt;/p&gt;
— jessie frazelle 👩🏼‍🚀 (@jessfraz) &lt;a href=&quot;https://twitter.com/jessfraz/status/1126121264819712000?ref_src=twsrc%5Etfw&quot;&gt;May 8, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;From the &lt;a href=&quot;https://www.opencompute.org/files/Intel-System-Firmware-InnovationsMohanKumar-OCP18.pdf&quot;&gt;OCP talk on Intel’s firmware innovations&lt;/a&gt;, it seems Intel’s Platform Firmware Resilience (PFR) and Cerberus go hand in hand. Intel is using PFR to deliver Cerberus’ attestation priniciples. Thanks &lt;a href=&quot;https://twitter.com/_msw_&quot;&gt;@msw&lt;/a&gt; for the clarification.&lt;/p&gt;
&lt;p&gt;It would be nice if there were not so many tools to do this job. I also wish the code was open source so we could verify for ourselves.&lt;/p&gt;
&lt;h2 id=&quot;how-to-help&quot;&gt;How to help&lt;/h2&gt;
&lt;p&gt;I hope this gave you some insight into what’s being built with open source firmware and how making firmware open source is important! If you would like to help with this effort, please help spread the word. Please try and use platforms that value open source firmware components. Chromebooks are a great example of this, as well as &lt;a href=&quot;https://puri.sm/&quot;&gt;Purism&lt;/a&gt; computers. You can ask your providers what they are doing for open source firmware or ensuring hardware security with roots of trust. Happy nerding! :)&lt;/p&gt;
&lt;p&gt;Huge thanks to the open source firmware community for helping me along this journey! Shout out to Ron Minnich, &lt;a href=&quot;https://twitter.com/qrs&quot;&gt;Trammel Hudson&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/hugelgupf&quot;&gt;Chris Koch&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kc8apf&quot;&gt;Rick Altherr&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/_zaolin_&quot;&gt;Zaolin&lt;/a&gt;. And shout out to &lt;a href=&quot;https://twitter.com/bridgetkromhout&quot;&gt;Bridget Kromhout&lt;/a&gt; for always finding time to review my posts!&lt;/p&gt;
</description>
<pubDate>Thu, 09 May 2019 17:44:25 +0000</pubDate>
<dc:creator>eindiran</dc:creator>
<og:title>Why open source firmware is important for security</og:title>
<og:url>https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/</og:url>
<og:image>/img/share.png</og:image>
<og:description>Why open source firmware is important for security.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/</dc:identifier>
</item>
</channel>
</rss>