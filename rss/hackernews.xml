<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Bypassing Firewalls in macOS Big Sur</title>
<link>https://twitter.com/patrickwardle/status/1327726496203476992</link>
<guid isPermaLink="true" >https://twitter.com/patrickwardle/status/1327726496203476992</guid>
<description>In Big Sur Apple decided to exempt many of its apps from being routed thru the frameworks they now require 3rd-party firewalls to use (LuLu, Little Snitch, etc.) üßê

Q: Could this be (ab)used by malware to also bypass such firewalls? ü§î

A: Apparently yes, and trivially so üò¨üò±üò≠ &lt;a href=&quot;https://t.co/CCNcnGPFIB&quot; data-pre-embedded=&quot;true&quot; rel=&quot;nofollow&quot; data-entity-id=&quot;1327725087533907968&quot; dir=&quot;ltr&quot; data-url=&quot;https://twitter.com/patrickwardle/status/1327726496203476992/photo/1&quot; data-tco-id=&quot;CCNcnGPFIB&quot; class=&quot;twitter_external_link dir-ltr tco-link has-expanded-path&quot; target=&quot;_top&quot; data-expanded-path=&quot;/patrickwardle/status/1327726496203476992/photo/1&quot;&gt;pic.twitter.com/CCNcnGPFIB&lt;/a&gt;</description>
<pubDate>Sat, 14 Nov 2020 21:52:18 +0000</pubDate>
<dc:creator>polyrand</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/patrickwardle/status/1327726496203476992</dc:identifier>
</item>
<item>
<title>Does Apple really log every app you run? A technical look</title>
<link>https://blog.jacopo.io/en/post/apple-ocsp/</link>
<guid isPermaLink="true" >https://blog.jacopo.io/en/post/apple-ocsp/</guid>
<description>&lt;p&gt;Apple‚Äôs launch of macOS Big Sur was almost immediately followed by server issues which prevented users from running third-party apps on their computers. While a workaround was soon found by people on Twitter, others raised some privacy concerns related to that issue.&lt;/p&gt;&lt;center readability=&quot;4.4598853868195&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; readability=&quot;11.352435530086&quot;&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hey Apple users:&lt;/p&gt;&lt;p&gt;If you're now experiencing hangs launching apps on the Mac, I figured out the problem using Little Snitch.&lt;/p&gt;&lt;p&gt;It's trustd connecting to &lt;a href=&quot;https://t.co/FzIGwbGRan&quot;&gt;https://t.co/FzIGwbGRan&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Denying that connection fixes it, because OCSP is a soft failure.&lt;/p&gt;&lt;p&gt;(Disconnect internet also fixes.) &lt;a href=&quot;https://t.co/w9YciFltrb&quot;&gt;pic.twitter.com/w9YciFltrb&lt;/a&gt;&lt;/p&gt;
‚Äî Jeff Johnson (@lapcatsoftware) &lt;a href=&quot;https://twitter.com/lapcatsoftware/status/1326990296412991489?ref_src=twsrc%5Etfw&quot;&gt;November 12, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;/center&gt;
&lt;h2 id=&quot;what-is-ocsp&quot;&gt;What is OCSP?&lt;/h2&gt;
&lt;p&gt;OCSP stands for Online Certificate Status Protocol&lt;sup id=&quot;fnref:1&quot;/&gt;. As the name implies, it is used to verify the validity of a certificate without having to download and scan large certificate revocation lists. macOS uses OCSP to make sure that the developer certificate &lt;strong&gt;hasn‚Äôt been revoked&lt;/strong&gt; before an app is launched.&lt;/p&gt;
&lt;p&gt;As Jeff Johnson explains in his tweet above, if macOS cannot reach Apple‚Äôs OCSP responder it skips the check and launches the app anyway - it is basically a fail-open behaviour. The problem is that Apple‚Äôs responder didn‚Äôt go down; it was reachable but became extremely slow, and this prevented the soft failure from triggering and giving up the check.&lt;/p&gt;
&lt;p&gt;It is clear that this mechanism requires macOS to &lt;strong&gt;contact Apple&lt;/strong&gt; before an app is launched. The sudden public awareness of this fact, brought about by Apple‚Äôs issues, raised some privacy concerns and a post from security researcher &lt;strong&gt;Jeffrey Paul&lt;/strong&gt;&lt;sup id=&quot;fnref:2&quot;/&gt; became very popular on Twitter. He claims that&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;In the current version of the macOS, the OS sends to Apple a hash (unique identifier) of each and every program you run, when you run it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That would be creepy indeed.&lt;/p&gt;
&lt;p&gt;To make things worse, it is common for OCSP to use HTTP - I‚Äôm talking about &lt;em&gt;good old &lt;strong&gt;plaintext HTTP&lt;/strong&gt; on port 80, none of that HTTPS rubbish&lt;/em&gt;. There is usually a good reason for this, that becomes especially clear when the OCSP service is used for web browsers: preventing loops. If you used HTTPS for checking a certificate with OCSP then you would need to also check the certificate for the HTTPS connection using OCSP. That would imply opening another HTTPS connection and so on.&lt;/p&gt;
&lt;p&gt;Of course while OCSP does not mandate encryption, it does require that responses are signed by the server. This still doesn‚Äôt solve the initial concern that anyone with a traffic analyzer on your network could evasdrop every app you open and when you open it.&lt;/p&gt;
&lt;h2 id=&quot;diving-deeper&quot;&gt;Diving deeper&lt;/h2&gt;
&lt;p&gt;Knowing some OCSP basics, more questions arise. OCSP is about checking certificates; why should this have anything to do with sending out &lt;em&gt;&lt;strong&gt;hashes&lt;/strong&gt;&lt;/em&gt; of apps you run? Does macOS really compute the hash of each executable at each launch? What about very large ones? That would take a significant amount of time; is it possible that nobody noticed? Maybe the hash is computed only once (e.g. the first time you run the app) and it is stored somewhere. But I‚Äôm not convinced and I think these claims needs more research.&lt;/p&gt;
&lt;p&gt;Capturing a OCSP request is as easy as setting up an HTTP proxy or starting Wireshark. No HTTPS means no encryption, no certificate pinning, no problems whatsoever. I captured the following request while opening Firefox.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-http&quot; data-lang=&quot;http&quot;&gt;&lt;span class=&quot;nf&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;/ocsp-devid01/ME4wTKADAgEAMEUwQzBBMAkGBSsOAwIaBQAEFDOB0e%2FbaLCFIU0u76%2BMSmlkPCpsBBRXF%2B2iz9x8mKEQ4Py%2Bhy0s8uMXVAIIBseUIWx6qTA%3D&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;ocsp.apple.com&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;*/*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;User-Agent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;com.apple.trustd/2.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Accept-Language&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;it-it&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Accept-Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;gzip, deflate&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;keep-alive&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I should also add that after closing Firefox and opening it again, no requests were made. This is reasonable, and indicates that certificate checking isn‚Äôt performed at each launch but only after it hasn‚Äôt been performed for a certain period of time.&lt;/p&gt;
&lt;p&gt;The request is a very simple GET that contains the payload as a base64-encoded string. The actual binary data can be easily dumped to a file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ME4wTKADAgEAMEUwQzBBMAkGBSsOAwIaBQAEFDOB0e/baLCFIU0u76+MSmlkPCpsBBRXF+2iz9x8mKEQ4Py+hy0s8uMXVAIIBseUIWx6qTA='&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; base64 --decode &amp;gt; output.bin
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We obtain an 80-byte-long payload that looks nothing like a hash. Sure enough, it isn‚Äôt. We can use OpenSSL to extract readable information from the binary file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl ocsp -text -reqin output.bin
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;OCSP Request Data:
    Version: 1 (0x0)
    Requestor List:
        Certificate ID:
          Hash Algorithm: sha1
          Issuer Name Hash: 3381D1EFDB68B085214D2EEFAF8C4A69643C2A6C
          Issuer Key Hash: 5717EDA2CFDC7C98A110E0FCBE872D2CF2E31754
          Serial Number: 06C794216C7AA930
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;It is clear that the &lt;code&gt;trustd&lt;/code&gt; service on macOS doesn‚Äôt send out a hash of the apps you launch. Instead, it just sends information about some certificate - as we would certainly expect after understanding what OCSP is in the first place.&lt;/p&gt;
&lt;p&gt;Well, this does not solve the problem, does it? If each app has a unique certificate, then it would still be possible to create a table that associates each serial number to the corresponding app, and thus this would still be a privacy concern. Let‚Äôs check if this is the case.&lt;/p&gt;
&lt;h2 id=&quot;developer-certificates&quot;&gt;Developer certificates‚Ä¶&lt;/h2&gt;
&lt;p&gt;First of all I would like to determine from which certificate this information comes from. I used Apple‚Äôs &lt;code&gt;codesign&lt;/code&gt; utility to extract certificates from the Firefox app in order to look for matching data.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;codesign -d --extract-certificates /Applications/Firefox.app
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command results in several files being created with names &lt;code&gt;codesign0&lt;/code&gt;, &lt;code&gt;codesign1&lt;/code&gt;, etc. The first one is the leaf certificate, while others belong to the certificate chain up until the root. &lt;code&gt;codesign0&lt;/code&gt; should be what we are looking for, and once again we can use OpenSSL to extract some info about it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl x509 -inform der -in codesign0 -text
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 488521955867797808 (0x6c794216c7aa930)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=Developer ID Certification Authority, OU=Apple Certification Authority, O=Apple Inc., C=US
        Validity
            Not Before: May  8 19:08:58 2017 GMT
            Not After : May  9 19:08:58 2022 GMT
        Subject: UID=43AQ936H96, CN=Developer ID Application: Mozilla Corporation (43AQ936H96), OU=43AQ936H96, O=Mozilla Corporation, C=US
        ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Check the serial number we got (&lt;code&gt;0x6c794216c7aa930&lt;/code&gt;) and compare it with the payload of the OCSP request. We have a match! This proves that OCSP requests actually send out information about the app developer certificate.&lt;/p&gt;
&lt;h2 id=&quot;and-their-generality&quot;&gt;‚Ä¶and their generality&lt;/h2&gt;
&lt;p&gt;‚ÄúSo what?‚Äù you might ask. Well, developer certificates aren‚Äôt unique for each app. Once again, don‚Äôt take my word for it. We can quickly verify this by checking the certificate of a different app from Mozilla, say Thunderbird.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;chroma&quot;&gt;
&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;codesign -d --extract-certificates /Applications/Thunderbird.app
openssl x509 -inform der -in codesign0 -text
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;
&lt;code&gt;Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 488521955867797808 (0x6c794216c7aa930)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=Developer ID Certification Authority, OU=Apple Certification Authority, O=Apple Inc., C=US
        Validity
            Not Before: May  8 19:08:58 2017 GMT
            Not After : May  9 19:08:58 2022 GMT
        Subject: UID=43AQ936H96, CN=Developer ID Application: Mozilla Corporation (43AQ936H96), OU=43AQ936H96, O=Mozilla Corporation, C=US
        ...
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;That‚Äôs exactly the same certificate used for Firefox (of course it is!). So Jeffrey Paul‚Äôs analysis isn‚Äôt quite accurate - at least for what concerns these parts (emphasis mine).&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;The OS sends to Apple a hash (unique identifier) of each and every program you run, when you run it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;[An IP address]¬†allows for a table that has the following headings: Date, Time, Computer, ISP, City, State, &lt;strong&gt;Application Hash&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;[This means that Apple knows] what apps you open there, and how often. They know when you open Premiere over at a friend‚Äôs house on their Wi-Fi, and they know when you open Tor Browser in a hotel on a trip to another city.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;macOS does actually send out some opaque information about &lt;strong&gt;the developer&lt;/strong&gt; certificate of those apps, and that‚Äôs quite an important difference on a privacy perspective.&lt;/p&gt;
&lt;h2 id=&quot;a-word-about-notarization&quot;&gt;A word about notarization&lt;/h2&gt;
&lt;p&gt;I would like to clarify something that is probably at the root of this misunderstanding. In fact, there exists a situation where macOS can actually send Apple the hash of an executable, and that is when &lt;strong&gt;Gatekeeper&lt;/strong&gt; checks if a notarization ticket exists on Apple‚Äôs servers upon first launch, in case the ticket isn‚Äôt stapled to the app&lt;sup id=&quot;fnref:3&quot;/&gt;.&lt;/p&gt;
&lt;p&gt;This has nothing to do with OCSP. It happens under specific circumstances and the check is performed via a secure (HTTPS) endpoint located at &lt;code&gt;api.apple-cloudkit.com&lt;/code&gt;. During this process, a pop-up with a progress bar is shown to the user.&lt;/p&gt;
&lt;h2 id=&quot;about-blocking-ocsp&quot;&gt;About blocking OCSP&lt;/h2&gt;
&lt;p&gt;As you probably have already learned during Apple‚Äôs OCSP responder outage, you can block OCSP requests in several ways, the most popular ones being Little Snitch&lt;sup id=&quot;fnref:4&quot;/&gt; and editing your &lt;code&gt;/etc/hosts&lt;/code&gt; file. Personally, I wouldn‚Äôt suggest doing that as it prevents an &lt;strong&gt;important security feature&lt;/strong&gt; from working.&lt;/p&gt;
&lt;p&gt;Now that you know the actual facts, if you think your privacy is put at risk by this feature more than having potential undetected malware running on your system, go ahead. Otherwise, don‚Äôt bother.&lt;/p&gt;
&lt;p&gt;If you use macOS Big Sur, blocking OCSP might not be as trivial. Before crying conspiracy, however, keep in mind that common users are generally not able to fully understand and evaluate the impact of disabling such a complex and delicate security feature on their computer.&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;No, macOS &lt;strong&gt;does not&lt;/strong&gt; send Apple a hash of your apps each time you run them.&lt;/li&gt;
&lt;li&gt;You should be aware that macOS &lt;strong&gt;might transmit&lt;/strong&gt; some opaque information about the developer certificate of the apps you run. This information is sent out in clear text on your network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;You shouldn‚Äôt&lt;/strong&gt; probably block &lt;code&gt;ocsp.apple.com&lt;/code&gt; with Little Snitch or in your hosts file.&lt;/li&gt;
&lt;/ul&gt;</description>
<pubDate>Sat, 14 Nov 2020 20:39:10 +0000</pubDate>
<dc:creator>jacopoj</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.jacopo.io/en/post/apple-ocsp/</dc:identifier>
</item>
<item>
<title>Pimp My Microwave</title>
<link>https://github.com/dekuNukem/pimp_my_microwave/#</link>
<guid isPermaLink="true" >https://github.com/dekuNukem/pimp_my_microwave/#</guid>
<description>&lt;p&gt;&lt;a href=&quot;https://www.kickstarter.com/projects/dekunukem/duckypad-do-it-all-mechanical-macropad&quot; rel=&quot;nofollow&quot;&gt;More about duckyPad&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/4sJCBx5&quot; rel=&quot;nofollow&quot;&gt;Official Discord&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;Mechanical keyboards are all the rage these days! People love the satisfying tactile sensation, and some go on great lengths to customise them to their exact liking.&lt;/p&gt;
&lt;p&gt;That begs the question: If we love it &lt;em&gt;that much&lt;/em&gt;, why stop at just &lt;em&gt;computer&lt;/em&gt; keyboards?&lt;/p&gt;
&lt;p&gt;If you think about it, there are &lt;em&gt;plenty&lt;/em&gt; of everyday input devices in desperate need of mech-ing up!&lt;/p&gt;
&lt;p&gt;For example... a &lt;code&gt;microwave keypad&lt;/code&gt;??&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/title.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/title.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/done.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/done.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yep you heard that right!&lt;/p&gt;
&lt;p&gt;Here is the story of how I added a &lt;a href=&quot;https://www.kickstarter.com/projects/dekunukem/duckypad-do-it-all-mechanical-macropad&quot; rel=&quot;nofollow&quot;&gt;RGB OLED hot-swap mechanical keypad&lt;/a&gt; to create the most pimped-up microwave in the entire world!&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/title.gif&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/title.gif&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BKcvKsYxbbo&quot; rel=&quot;nofollow&quot;&gt;Click me&lt;/a&gt; for high-res video with sound!&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;A year ago, I picked up a used microwave for ¬£5 at a carboot sale. It was a &quot;&lt;code&gt;Proline Micro Chef ST44&lt;/code&gt;&quot;:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/before.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/before.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It appears to be from early 2000s, and is pretty unremarkable in every way. But it was cheap and it works, so good enough for me!&lt;/p&gt;
&lt;h2&gt;Problem!&lt;/h2&gt;
&lt;p&gt;That is, until almost exactly a year later. I pressed the usual buttons to heat up my meal, but nothing happened.&lt;/p&gt;
&lt;p&gt;After the initial disbelief, my thorough investigation by randomly prodding buttons revealed that the membrane keypad is likely broken. At first a few buttons still worked, but soon all the buttons stopped responding.&lt;/p&gt;
&lt;p&gt;At this point I could have just chucked it and still got my money's worth. But it seemed like a waste just because a cheap plastic keypad failed. Plus I could save a few pounds if I fixed it instead of buying a new one.&lt;/p&gt;
&lt;p&gt;So I took it apart and see if there was anything I could do.&lt;/p&gt;
&lt;h2&gt;Disassembly&lt;/h2&gt;
&lt;p&gt;After removing the case, we can see the main circuit board:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/boardin.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/boardin.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul readability=&quot;1.5&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Microcontroller at top-middle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Buzzer at top-right&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Blue ribbon connector for keypad at middle-left&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Transformer and control relays near the bottom&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;Entire board is through-hole, but I guess if it works it works!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here is the front side:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/front.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/front.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The board is well marked, and it's interesting to see it uses a &lt;a href=&quot;https://en.wikipedia.org/wiki/Vacuum_fluorescent_display&quot; rel=&quot;nofollow&quot;&gt;Vacuum Fluorescent Display&lt;/a&gt; (VFD), which was already falling out of favour by the time this was made.&lt;/p&gt;
&lt;p&gt;I also noticed this board, and in fact everything inside, was designed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Daewoo&quot; rel=&quot;nofollow&quot;&gt;Daewoo&lt;/a&gt;, a &lt;strong&gt;Korean&lt;/strong&gt; conglomerate making everything from cars to, well, this.&lt;/p&gt;
&lt;p&gt;Anyway, back to the matter at hand. I thought I could just clean up the ribbon cable contacts and call it a day. Except I didn't notice the contacts were made from carbon(graphite?) instead of the usual metal, and I rubbed some right off:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/scratch.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/scratch.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So if it wasn't broken then, it's definitely broken now. Great job!&lt;/p&gt;
&lt;h2&gt;Enter the Matrix (Scanning)&lt;/h2&gt;
&lt;p&gt;Still, it wasn't the end of the world. The keypad almost certainly uses &lt;strong&gt;&lt;code&gt;Matrix Scanning&lt;/code&gt;&lt;/strong&gt; to interface with the controller.&lt;/p&gt;
&lt;p&gt;There is a &lt;a href=&quot;https://learn.sparkfun.com/tutorials/button-pad-hookup-guide/all&quot; rel=&quot;nofollow&quot;&gt;detailed introduction of this topic&lt;/a&gt; on Sparkfun. But in short, matrix scanning allows us to &lt;strong&gt;read a large number of inputs from limited number of controller pins&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example, there are &lt;em&gt;more than 100 keys&lt;/em&gt; on our computer keyboard. If we simply connect each key to an input pin, the controller chip will need to have more than 100 pins! It will be bulky, difficult to route, and expensive to produce.&lt;/p&gt;
&lt;p&gt;Instead, with a little cleverness in the firmware, we can arrange the buttons in a &lt;strong&gt;grid of columns and rows&lt;/strong&gt;, AKA a matrix, like this:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/matrix.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/matrix.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This way, by &lt;strong&gt;scanning a single row and column at a time&lt;/strong&gt;, we can determine which key(s) are pressed. Of course there are a lot more technicalities, so &lt;a href=&quot;http://blog.komar.be/how-to-make-a-keyboard-the-matrix/&quot; rel=&quot;nofollow&quot;&gt;read more here&lt;/a&gt; if you want.&lt;/p&gt;
&lt;p&gt;Anyway, in the example above, instead of &lt;code&gt;4 * 4 = 16&lt;/code&gt; pins, we only need &lt;code&gt;4 + 4 = 8&lt;/code&gt; pins, a saving of half! And with our computer keyboard, we will only need &lt;a href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/logi.png&quot;&gt;around 20 pins&lt;/a&gt; instead of more than 100!&lt;/p&gt;
&lt;p&gt;Thus, we can see that Matrix Scanning simplifies the pin count and design complexity of input devices.&lt;/p&gt;
&lt;h2&gt;Figuring Out the Matrix&lt;/h2&gt;
&lt;p&gt;Back to our microwave keypad at hand. We can see its ribbon cable comes in two parts, each with 5 pins:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/double.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/double.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So if my assumptions are correct, it would be a 5x5 matrix with 25 buttons. If you scroll all the way back up, you'll find the keypad has 24 buttons, so it checks out!&lt;/p&gt;
&lt;p&gt;Now we know there are 5 columns and 5 rows, it's time to figure out which key is which.&lt;/p&gt;
&lt;p&gt;To do that, I desoldered the ribbon cable connector and replaced it with a straight male header:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/male.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/male.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As a side note, the microcontroller is a &lt;a href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/TMP47C412AN.pdf&quot;&gt;TMP47C412AN&lt;/a&gt; designed by Toshiba. It is a &lt;em&gt;4-bit&lt;/em&gt; processor with 4KB of ROM and 128 &lt;em&gt;Bytes&lt;/em&gt; of RAM. It can also directly drive Vacuum Fluorescent Tubes. So all in all, a very specialised chip for appliances. Very underpowered compared to Arduinos and STM32s. But still, it gets the job done!&lt;/p&gt;
&lt;p&gt;I connected some jumper wires:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/wire.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/wire.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And labeled the rows and columns with 1-5 and A-E:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/label.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/label.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I then put the board back, powered on, and touched each pair of wires to see which button it responds as.&lt;/p&gt;
&lt;p&gt;It took a while, but eventually I figured out the matrix location of the buttons I need:&lt;/p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th/&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;NP_4&lt;/td&gt;
&lt;td&gt;NP_1&lt;/td&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;NP_5&lt;/td&gt;
&lt;td&gt;NP_2&lt;/td&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td&gt;NP_7&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;NP_6&lt;/td&gt;
&lt;td&gt;NP_3&lt;/td&gt;
&lt;td&gt;POWER&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;NP_8&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;STOP&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td/&gt;
&lt;td&gt;NP_9&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;START&lt;/td&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td/&gt;
&lt;td&gt;NP_10&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;So all in all, 10 numpad keys and 4 control buttons. There are a bunch of other buttons, but I didn't bother since I don't use them anyway.&lt;/p&gt;
&lt;p&gt;I quickly whipped up a simple schematic:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/sch.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/sch.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With that, I hard-wired some buttons on a perf board as a quick and dirty fix:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/own.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/own.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It works! At least I'll have hot meals now! And it didn't cost me a dime.&lt;/p&gt;
&lt;p&gt;But as you can see, it is very messy with 10 wires coming out of the case, and I'm sure I could do better.&lt;/p&gt;
&lt;h2&gt;Pimp It Up!&lt;/h2&gt;
&lt;p&gt;Around the same time, I was working on &lt;a href=&quot;https://github.com/dekuNukem/duckyPad&quot;&gt;duckyPad&lt;/a&gt;, a 15-key mechanical macropad with &lt;strong&gt;OLED&lt;/strong&gt;, &lt;strong&gt;hot-swap&lt;/strong&gt;, &lt;strong&gt;RGB&lt;/strong&gt;, and sophisticated input automation with &lt;a href=&quot;https://github.com/dekuNukem/duckyPad/blob/master/duckyscript_info.md&quot;&gt;duckyScript&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/topdown.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/topdown.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dekuNukem/duckyPad&quot;&gt;Feel free to check out the project page&lt;/a&gt; if you're interested!&lt;/p&gt;
&lt;p&gt;I called it a &lt;code&gt;&quot;Do-It-All Macropad&quot;&lt;/code&gt;, so to live up to its name, it was only natural that I get it working on my microwave too!&lt;/p&gt;
&lt;p&gt;And if I pull this off, my lowly 20-year-old second-hand broken microwave will transform into the &lt;em&gt;only one in the entire world&lt;/em&gt; with mechanical switches and RGB lighting! Now that's what I call ... a Korean Custom üòÖ.&lt;/p&gt;
&lt;p&gt;However, it wasn't as easy as it sounds. There are a number of challenges:&lt;/p&gt;
&lt;ul readability=&quot;1&quot;&gt;&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;I want to use the existing duckyPad as-is, so no redesigning.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;
&lt;p&gt;I want to keep it clean and tidy, so the fewer wires the better.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;It has to be powered by the microwave itself too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;PMM Board&lt;/h2&gt;
&lt;p&gt;Right now, there are 10 wires coming out of the case and into my hand-made keypad, very messy.&lt;/p&gt;
&lt;p&gt;Ideally, with duckyPad, I want it to use only 3 wires: &lt;code&gt;Power&lt;/code&gt;, &lt;code&gt;Ground&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt;. With so few wires, they can be inside a single cable, which would be much more clean and tidy.&lt;/p&gt;
&lt;p&gt;However, the microwave controller still expects 10 wires from the keypad matrix. So that means I would need an adapter of some sort. Let's just call it PMM board.&lt;/p&gt;
&lt;p&gt;duckyPad would talk to PMM board, which in turn talks to the microwave controller. Something like this:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/pimp.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/pimp.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Not too bad! However, until now we have been using &lt;strong&gt;real switches&lt;/strong&gt; with the keypad matrix. But with PMM board, we will need to &lt;strong&gt;control the key matrix electronically&lt;/strong&gt; to fool the microwave into thinking we pressed buttons! How do we do it?&lt;/p&gt;
&lt;h2&gt;Blast From the Past&lt;/h2&gt;
&lt;p&gt;It came as a bit of a surprise, but after some digging, it turned out that I solved this &lt;em&gt;exact&lt;/em&gt; problem 3 years ago! Back then, I was trying to automate inputs of &lt;a href=&quot;https://github.com/dekuNukem/joyAnalog&quot;&gt;Nintendo Switch Joycons&lt;/a&gt;, and they also used matrix scanning for their buttons.&lt;/p&gt;
&lt;p&gt;And the answer? &lt;a href=&quot;https://en.wikipedia.org/wiki/Analogue_switch&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;Analogue Switches!&lt;/code&gt;&lt;/a&gt; You can think of them as regular switches, but instead of pushing them with your fingers, they are controlled electronically.&lt;/p&gt;
&lt;p&gt;The chip I used is &lt;a href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/ADG714_715_new.pdf&quot;&gt;ADG714&lt;/a&gt; from Analog Devices. There are 8 switches in one chip, and they are controlled via simple &lt;a href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/spi.pdf&quot;&gt;SPI protocol&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/adg.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/adg.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I quickly designed the PMM board:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/pmms.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/pmms.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's a relatively simple board. A STM32F042F6P6 is used, and I broke out all of its pins on headers in case I need them.&lt;/p&gt;
&lt;p&gt;Since there are 14 buttons that I want to control, two ADG714s are needed. With SPI, they can be daisy-chained easily.&lt;/p&gt;
&lt;p&gt;You can see in the schematic that the analogue switches are wired up in exactly the same way as my shoddy hand-soldered keypad. Except now they can be pressed electronically by the microcontroller.&lt;/p&gt;
&lt;p&gt;I had the PCB made, and soldered on all the components:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/pcb.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/pcb.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I did a preliminary testing with continuity beeper, and it seemed to work fine, but we'll only know for sure once it is installed on the real thing.&lt;/p&gt;
&lt;h2&gt;Serial-ous Talk&lt;/h2&gt;
&lt;p&gt;Now the PMM board can control the button matrix, how should duckyPad talk to it?&lt;/p&gt;
&lt;p&gt;With only 1 wire for data, I reckoned that a simple one-way serial link should be more than enough.&lt;/p&gt;
&lt;p&gt;duckyPad would send a simple serial message at 115200bps every time a key is pressed. The PMM board receives it, and if the format is correct, it would momentarily close the corresponding analog switch, simulating a button press to the microwave.&lt;/p&gt;
&lt;p&gt;I added a top-secret &lt;a href=&quot;https://github.com/dekuNukem/duckyPad/blob/d50d58d3c9f0525f0a07fb0c0667dcfdf63f0721/firmware/code/Src/parser.c#L1086&quot;&gt;&lt;code&gt;UARTPRINT&lt;/code&gt;&lt;/a&gt; command to the duckyScript parser, and &lt;a href=&quot;https://github.com/dekuNukem/duckyPad/blob/master/getting_started.md&quot;&gt;created a profile&lt;/a&gt; for my microwave keypad.&lt;/p&gt;
&lt;p&gt;They keys on duckyPad is arranged as follows:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/keys.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/keys.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Why So Negative?&lt;/h2&gt;
&lt;p&gt;It's all coming together! Which brings us to the final question: How are we going to power it?&lt;/p&gt;
&lt;p&gt;I thought it would be straightforward. There is already a microcontroller on the microwave circuit board, so just tap its power and job done! Turns out, almost but not quite.&lt;/p&gt;
&lt;p&gt;Examining the circuit board in detail, it turns out the whole thing runs on &lt;em&gt;negative voltages&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/neg.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/neg.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can see it gets -26V from the transformer, steps it down to -12V, then again to -5V. The voltage regulator is a &lt;code&gt;S7905PIC&lt;/code&gt; fixed-negative-voltage regulator, further confirming this theory.&lt;/p&gt;
&lt;p&gt;I'm not sure why it is designed this way, probably has something to do with the AC transformer. Still, it doesn't actually matter that much, as it's just from a different point of reference.&lt;/p&gt;
&lt;p&gt;I tapped two power wires from the circuit board to power the PMM board, and in turn, duckyPad:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/tap.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/tap.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To reduce confusion, I marked them &lt;code&gt;0V&lt;/code&gt; and &lt;code&gt;-5V&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Usually, we would connect &lt;code&gt;0V&lt;/code&gt; to GND, and a positive voltage to VCC. But in this case, &lt;code&gt;0V&lt;/code&gt; is actually at the higher potential. So all I needed to do is connect &lt;code&gt;-5V&lt;/code&gt; to GND, and &lt;code&gt;0V&lt;/code&gt; to VCC. The potential difference is still 5V, so everything works.&lt;/p&gt;
&lt;p&gt;(Eagle eyed viewers might notice I also covered the buzzer with a sticker. It was so loud!)&lt;/p&gt;
&lt;h2&gt;A Duckin' Great Time!&lt;/h2&gt;
&lt;p&gt;I reinstalled the circuit board, hooked everything up and did a quick test, it works!&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/test.jpeg&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/test.jpeg&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can see the 3 wires going from duckyPad debug header to PMM board, as well as the 10 wires going into the control board where the blue ribbon cable used to be.&lt;/p&gt;
&lt;p&gt;I attached the duckyPad to the microwave, chopped off the ends of a cheap USB cable, and used the 4 wires inside to connect everything up through a vent at the bottom.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/usb.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/usb.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Voil√†! It's done! The first and (probably) only microwave in the entire universe with mechanical switches, OLED, and RGB lighting!&lt;/p&gt;
&lt;p&gt;Have you ever experienced the crisp and clicky tactile and audible perfection of Gateron Greens while heating up some frozen junk food at 2am because you're too lazy to cook? Well, &lt;em&gt;I&lt;/em&gt; have, so there's that!&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/done.png&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/done.png&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/dekuNukem/pimp_my_microwave/blob/master/resources/pics/title.gif&quot;&gt;&lt;img src=&quot;https://github.com/dekuNukem/pimp_my_microwave/raw/master/resources/pics/title.gif&quot; alt=&quot;Alt text&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BKcvKsYxbbo&quot; rel=&quot;nofollow&quot;&gt;Click me&lt;/a&gt; for high-res video with sound!&lt;/p&gt;
&lt;h2&gt;I want one too!&lt;/h2&gt;
&lt;p&gt;If you're interested in duckyPad, you can &lt;a href=&quot;https://www.kickstarter.com/projects/dekunukem/duckypad-do-it-all-mechanical-macropad&quot; rel=&quot;nofollow&quot;&gt;learn more about it and get one here&lt;/a&gt;üòÖ!&lt;/p&gt;
&lt;p&gt;And if you want the whole package, unfortunately it would be much more involved.&lt;/p&gt;
&lt;p&gt;Each microwave have different keypad matrix layouts, so you'll need to figure them out, and design and build a PMM board yourself. Not a small feat, but at least all the information is here! If you do go down this path, let me know if you have any questions!&lt;/p&gt;
&lt;p&gt;Of course there are high voltages and potential of microwave radiation when you take it apart, so be careful!&lt;/p&gt;
&lt;h2&gt;Other Stuff&lt;/h2&gt;
&lt;p&gt;I've done a few other fun projects over the years, feel free to check them out:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dekuNukem/daytripper&quot;&gt;Daytripper: Hide-my-windows Laser Tripwire&lt;/a&gt;: Saves the day while you slack off!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dekuNukem/exixe&quot;&gt;exixe: Miniture Nixie Tube driver module&lt;/a&gt;: Eliminate the need for vintage chips and multiplexing circuits.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dekuNukem/STM32_tutorials&quot;&gt;From Aduino to STM32&lt;/a&gt;: A detailed tutorial to get you started with STM32 development.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dekuNukem?tab=repositories&quot;&gt;List of all my repos&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Questions or Comments?&lt;/h2&gt;
&lt;p&gt;Please feel free to &lt;a href=&quot;https://github.com/dekuNukem/duckypad/issues&quot;&gt;open an issue&lt;/a&gt;, ask in the &lt;a href=&quot;https://discord.gg/4sJCBx5&quot; rel=&quot;nofollow&quot;&gt;official duckyPad discord&lt;/a&gt;, DM me on discord &lt;code&gt;dekuNukem#6998&lt;/code&gt;, or email &lt;code&gt;dekuNukem&lt;/code&gt;@&lt;code&gt;gmail&lt;/code&gt;.&lt;code&gt;com&lt;/code&gt; for inquires.&lt;/p&gt;
</description>
<pubDate>Sat, 14 Nov 2020 17:16:28 +0000</pubDate>
<dc:creator>sn74hc04</dc:creator>
<og:image>https://repository-images.githubusercontent.com/275606181/bb737380-2502-11eb-9aff-bba571048f79</og:image>
<og:type>object</og:type>
<og:title>dekuNukem/pimp_my_microwave</og:title>
<og:url>https://github.com/dekuNukem/pimp_my_microwave</og:url>
<og:description>Installing a RGB mechanical keypad on my microwave. - dekuNukem/pimp_my_microwave</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/dekuNukem/pimp_my_microwave/</dc:identifier>
</item>
<item>
<title>Intel&amp;#039;s disruption is now complete</title>
<link>https://jamesallworth.medium.com/intels-disruption-is-now-complete-d4fa771f0f2c</link>
<guid isPermaLink="true" >https://jamesallworth.medium.com/intels-disruption-is-now-complete-d4fa771f0f2c</guid>
<description>&lt;div&gt;

&lt;div class=&quot;fd&quot;&gt;
&lt;div class=&quot;n cc fe ff fg&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a rel=&quot;noopener&quot; href=&quot;https://jamesallworth.medium.com/?source=post_page-----d4fa771f0f2c--------------------------------&quot;&gt;&lt;img alt=&quot;James Allworth&quot; class=&quot;s fh fi fj&quot; src=&quot;https://miro.medium.com/fit/c/56/56/1*9U1RFWp7jlUx3ccZUsW4AA.jpeg&quot; width=&quot;28&quot; height=&quot;28&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote class=&quot;fy fz ga&quot; readability=&quot;9&quot;&gt;
&lt;p id=&quot;a6f4&quot; class=&quot;gb gc gd ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;‚ÄúLook, Clayton, I‚Äôm a busy man and I don‚Äôt have time to read drivel from academics but someone you told me you had this theory‚Ä¶ and I‚Äôm wondering if you could come out to present what you‚Äôre learning to me and my staff and tell us how it applies to Intel.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;f4b5&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;So begins the story that Clay Christensen would love to tell about how Andy Grove of Intel famously came to be a convert to the theory of disruption. Christensen shared with Grove his research on how steel minimills, starting at the low end of the market, had gained a foothold and used that to expand the addressable market, continued to move upmarket, and finally disrupted the giant incumbents like US Steel.&lt;/p&gt;
&lt;p id=&quot;395d&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;Grove immediately grokked it.&lt;/p&gt;

&lt;a href=&quot;https://twitter.com/IDSA/status/1221445684227903488&quot; class=&quot;dg id&quot; rel=&quot;noopener nofollow&quot;&gt;Grove and Christensen on the cover of Forbes magazine in 1999&lt;/a&gt;
&lt;p id=&quot;474b&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;A couple of years later, &lt;span id=&quot;rmm&quot;&gt;&lt;span id=&quot;rmm&quot;&gt;a&lt;/span&gt;&lt;/span&gt;fter Grove had retired as CEO of Intel but remained its Executive Chariman, he stood on stage at Comdex. He told the world that the book he now held in his hands ‚Äî Christensen‚Äôs just-published &lt;em class=&quot;gd&quot;&gt;The Innovator‚Äôs Dilemma ‚Äî&lt;/em&gt; was ‚Äúthe most important book he‚Äôd read in a decade‚Äù.&lt;/p&gt;
&lt;p id=&quot;520b&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;Grove used the learnings of Christensen‚Äôs research to guide Intel over his tenure. One of the most &lt;a href=&quot;https://stratechery.com/2016/andy-grove-and-the-iphone-se/&quot; class=&quot;dg id&quot; rel=&quot;noopener nofollow&quot;&gt;famous examples&lt;/a&gt; of this was Grove pushing Intel to do something that companies rarely have the appetite to do: launch a low-margin product that cannibalized its high end products. But Intel did it ‚Äî they introduced the Celeron processor in 1998. It did cannibalize their Pentium processor to an extent, but it also enabled them to capture 35% of the market they were competing in. Perhaps more importantly still though, it staved off threats from the low end.&lt;/p&gt;
&lt;p id=&quot;92c2&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;Under Grove‚Äôs steady hand, Intel built the chips that effectively powered the personal computer that soon sat in in every home and on every desk. Alongside Microsoft, it became synonymous with the desktop computer ‚Äî and famously valuable.&lt;/p&gt;
&lt;p id=&quot;ab86&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;It was not until 2005 that Grove retired from Intel. That happened to be the same year that Paul Otellini took over as CEO. Things seemed to be off to an auspicious start for Intel and Otellini ‚Äî Apple, whose Mac business was on a tear at the time ‚Äî was basically the only desktop computer manufacturer that was a holdout from the x86 world that Intel represented.&lt;/p&gt;
&lt;p id=&quot;f619&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;And Apple converted. Steve Jobs invited Otellini on stage at Macworld to make the announcement:&lt;/p&gt;

&lt;p id=&quot;a1a0&quot; class=&quot;gb gc eg ge b gf gg gh gi gj gk gl gm gn go gp gq gr gs gt gu gv gw gx gy gz db fc&quot;&gt;Intel‚Äôs victory seemed complete.&lt;/p&gt;
</description>
<pubDate>Sat, 14 Nov 2020 15:12:02 +0000</pubDate>
<dc:creator>davnicwil</dc:creator>
<og:type>article</og:type>
<og:title>Intel‚Äôs Disruption is Now Complete</og:title>
<og:description>‚ÄúLook, Clayton, I‚Äôm a busy man and I don‚Äôt have time to read drivel from academics but someone you told me you had this theory‚Ä¶ and I‚Äôm‚Ä¶</og:description>
<og:url>https://jamesallworth.medium.com/intels-disruption-is-now-complete-d4fa771f0f2c</og:url>
<og:image>https://miro.medium.com/max/1200/1*oOmph2TB7_5mCJhnYbgabg.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://jamesallworth.medium.com/intels-disruption-is-now-complete-d4fa771f0f2c</dc:identifier>
</item>
<item>
<title>Google sued: Idle Android eats mobile data to send telemetry and preload ads</title>
<link>https://www.theregister.com/2020/11/14/google_android_data_allowance/</link>
<guid isPermaLink="true" >https://www.theregister.com/2020/11/14/google_android_data_allowance/</guid>
<description>&lt;p&gt;Google on Thursday was sued for allegedly stealing Android users' cellular data allowances though unapproved, undisclosed transmissions to the web giant's servers.&lt;/p&gt;
&lt;p&gt;The lawsuit, Taylor et al v. Google [&lt;a target=&quot;_blank&quot; href=&quot;https://regmedia.co.uk/2020/11/13/taylor-v-google.pdf&quot;&gt;PDF&lt;/a&gt;], was filed in a US federal district court in San Jose on behalf of four plaintiffs based in Illinois, Iowa, and Wisconsin in the hope the case will be certified by a judge as a class action.&lt;/p&gt;
&lt;p&gt;The complaint contends that Google is using Android users' limited cellular data allowances without permission to transmit information about those individuals that's unrelated to their use of Google services.&lt;/p&gt;
&lt;p&gt;Data sent over Wi-Fi is not at issue, nor is data sent over a cellular connection in the absence of Wi-Fi when an Android user has chosen to use a network-connected application. What concerns the plaintiffs is data sent to Google's servers that isn't the result of deliberate interaction with a mobile device ‚Äì we're talking passive or background data transfers via cell network, here.&lt;/p&gt;
&lt;p&gt;&quot;Google designed and implemented its Android operating system and apps to extract and transmit large volumes of information between Plaintiffs‚Äô cellular devices and Google using Plaintiffs‚Äô cellular data allowances,&quot; the complaint claims. &quot;Google‚Äôs misappropriation of Plaintiffs‚Äô cellular data allowances through passive transfers occurs in the background, does not result from Plaintiffs‚Äô direct engagement with Google‚Äôs apps and properties on their devices, and happens without Plaintiffs‚Äô consent.&quot;&lt;/p&gt;
&lt;blockquote class=&quot;pullquote&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Google designed and implemented its Android operating system and apps to extract and transmit large volumes of information between Plaintiffs‚Äô cellular devices and Google using Plaintiffs‚Äô cellular data allowances&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Android users have to accept four agreements to participate in the Google ecosystem: Terms of Service; the Privacy Policy; the Managed Google Play Agreement; and the Google Play Terms of Service. None of these, the court filing contends, disclose that Google spends users' cellular data allowances for these background transfers.&lt;/p&gt;
&lt;p&gt;To support the allegations, the plaintiff's counsel tested a new Samsung Galaxy S7 phone running Android, with a signed-in Google Account and default setting, and found that when left idle, without a Wi-Fi connection, the phone &quot;sent and received 8.88 MB/day of data, with 94 per cent of those communications occurring between Google and the device.&quot;&lt;/p&gt;
&lt;p&gt;The device, stationary, with all apps closed, transferred data to Google about 16 times an hour, or about 389 times in 24 hours. Assuming even half of that data is outgoing, Google would receive about 4.4MB per day or 130MB per month in this manner per device subject to the same test conditions.&lt;/p&gt;
&lt;p&gt;Putting worries of what could be in that data to one side, based on an average price of &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.visualcapitalist.com/cost-of-mobile-data-worldwide/&quot;&gt;$8 per GB of data in the US&lt;/a&gt;, that 130MB works out to about $1 lost to Google data gathering per month ‚Äì if the device is disconnected from Wi-Fi the entire time and does all its passive transmission over a cellular connection.&lt;/p&gt;
&lt;p&gt;An iPhone with Apple's Safari browser open in the background transmits only about a tenth of that amount to Apple, according to the complaint.&lt;/p&gt;
&lt;p&gt;Much of the transmitted data, it's claimed, are log files that record network availability, open apps, and operating system metrics. Google could have delayed transmitting these files until a Wi-Fi connection was available, but chose instead to spend users' cell data so it could gather data at all hours.&lt;/p&gt;
&lt;p&gt;Vanderbilt University Professor Douglas C. Schmidt &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://engineering.vanderbilt.edu/news/2018/study-of-google-data-collection-comes-amid-increased-scrutiny-over-digital-privacy/&quot;&gt;performed a similar study&lt;/a&gt; in 2018 ‚Äì except that the Chrome browser was open ‚Äì and found that Android devices made 900 passive transfers in 24 hours.&lt;/p&gt;
&lt;p&gt;Under active use, Android devices transfer about 11.6MB of data to Google servers daily, or 350MB per month, it's claimed, which is about half the amount transferred by an iPhone.&lt;/p&gt;

&lt;p&gt;The complaint charges that Google conducts these undisclosed data transfers for further its advertising business, sending &quot;tokens&quot; that identify users for targeted advertising and &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.blog.google/products/admob/preloading-interstitial-ads&quot;&gt;preload ads&lt;/a&gt; that generate revenue even if they're never displayed.&lt;/p&gt;
&lt;p&gt;&quot;Users often never view these pre-loaded ads, even though their cellular data was already consumed to download the ads from Google,&quot; the legal filing claims. &quot;And because these pre-loads can count as ad impressions, Google is paid for transmitting the ads.&quot;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Register&lt;/em&gt; asked Google to respond to the lawsuit's allegations. It declined to comment.&lt;/p&gt;
&lt;p&gt;We also asked Marc Goldberg, Chief Revenue Officer at ad analytics biz &lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; href=&quot;https://www.methodmi.com/&quot;&gt;Method Media Intelligence&lt;/a&gt; whether preloaded ads ever get counted as billable events when not shown.&lt;/p&gt;
&lt;p&gt;&quot;Yes they could be,&quot; Goldberg said in an email to &lt;em&gt;The Register&lt;/em&gt;. &quot;It is important for advertisers to understand their billable event. What are they paying for? Auction won? Ads Served? Ads rendered? These simple questions need to be asked and understood.&quot;&lt;/p&gt;
&lt;p&gt;The lawsuit seeks to recover the fair market value of the co-opted cellular data and the &quot;reasonable value of the cellular data used by Google to extract and deliver information that benefited Google,&quot; dating back years to whenever this practice began. ¬Æ&lt;/p&gt;

</description>
<pubDate>Sat, 14 Nov 2020 12:06:43 +0000</pubDate>
<dc:creator>WarOnPrivacy</dc:creator>
<og:image>https://regmedia.co.uk/2016/03/10/android.jpg</og:image>
<og:type>article</og:type>
<og:url>https://www.theregister.com/2020/11/14/google_android_data_allowance/</og:url>
<og:title>New lawsuit: Why do Android phones mysteriously exchange 260MB a month with Google via cellular data when they're not even in use?</og:title>
<og:description>Ad giant sued after mobile allowances eaten by hidden transfers</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.theregister.com/2020/11/14/google_android_data_allowance/</dc:identifier>
</item>
<item>
<title>Using Matrix to replace proprietary and centralized chat apps</title>
<link>https://jae.moe/blog/2020/11/using-matrix-to-replace-proprietary-and-centralized-chat-apps/</link>
<guid isPermaLink="true" >https://jae.moe/blog/2020/11/using-matrix-to-replace-proprietary-and-centralized-chat-apps/</guid>
<description>

Reading time: 3 minutes.

&lt;p&gt;As you may know it, I am a fervent user of the chat protocol Matrix. If you don‚Äôt know what Matrix is, this is basically a protocol developed by the Matrix Foundation. Matrix is made to be federated, it means that servers implementing correctly the Matrix specification can communicate and therefore, users that are not on the same servers can still talk to each other. Some examples of federation would be with Activitypub (Mastodon) or Usenet.&lt;/p&gt;&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;But wait Jae, we already have countless other chat apps already, Telegram, Signal and even XMPP which is federated!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, here are the advantages of Matrix over all of those:&lt;/p&gt;
&lt;ol readability=&quot;10.441231343284&quot;&gt;&lt;li readability=&quot;3&quot;&gt;
&lt;p&gt;Matrix is 100% open-source. As you may know Telegram‚Äôs servers are currently closed-source which poses a problem about trust. Nobody can say what the server is doing nor what it is harvesting which could be very dangerous. On the other hand, Signal, XMPP and Matrix are all fully open-source.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;3.904&quot;&gt;
&lt;p&gt;Matrix isn‚Äôt centralized to a single server. Currently, Telegram and Signal are centralized apps which means if the server goes down, everyone else goes down. moxie0 of Signal even wrote a &lt;a href=&quot;https://signal.org/blog/the-ecosystem-is-moving/&quot;&gt;blog post&lt;/a&gt; on ‚Äòwhy Signal will never have federation‚Äô which is in my opinion a big mistake. XMPP still stands up as it is federated as well and has plenty of server implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;11&quot;&gt;
&lt;p&gt;Matrix has a flagship client which has a great UX. &lt;strong&gt;This&lt;/strong&gt; is a big point, as other federated protocols such as XMPP are kinda like a jungle for new users, you are greeted with a list of all clients which you can use and then comes the step where you have to choose your server. Lots of those servers are sometime hard to find, have very spartan UIs or even no web form or easy way to register whatsoever. On the other hand, Matrix has a flagship, &lt;strong&gt;Element&lt;/strong&gt;, which is deemed as the ‚Äòofficial Matrix client‚Äô since it implements the Matrix specification correctly and is made by basically the same people. While other projects would have only done a server, Element made a polished client, focused mainly on the UX in order for people to take the first steps of moving to anything else easier. Even if the UX is still not perfect and some aspects aren‚Äôt finished yet, moving to Element will be easier than moving to any other XMPP client.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;I have been using Matrix since 2016 now and it has considerably improved over time, coming from ‚Äúbarely usable‚Äù to ‚Äúlet‚Äôs host my own homeserver‚Äù. Even in its current state, lots of things are to be improved such as communities or custom stickers but everything is on the right way. From now on, everything can &lt;strong&gt;only improve&lt;/strong&gt;, we are seeing new server implementations, new clients, bots, communities moving to Matrix.&lt;/p&gt;
&lt;p&gt;Matrix has several other features such as E2EE (end-to-end encryption) which is now enabled by default and bridges which can be used to temporarily bridge a Matrix room and a slack chat for instance.&lt;/p&gt;
&lt;p&gt;If you want to give Matrix a try, download &lt;a href=&quot;https://element.io&quot;&gt;Element&lt;/a&gt; and create an account, it doesn‚Äôt even requires an email address! You can also come and say ‚Äòhello‚Äô in my very own channel &lt;strong&gt;#home:jae.moe&lt;/strong&gt; !&lt;/p&gt;
&lt;p&gt;That‚Äôs all for today, I‚Äôll see you next time! If you like my content, &lt;a href=&quot;https://jae.moe/blog/index.xml&quot;&gt;don‚Äôt forget to subscribe through RSS&lt;/a&gt;!&lt;/p&gt;
&lt;a href=&quot;https://news.ycombinator.com/item?id=25091614&quot;&gt;Talk about it on Hacker News!&lt;/a&gt;</description>
<pubDate>Sat, 14 Nov 2020 11:28:09 +0000</pubDate>
<dc:creator>jaemoe</dc:creator>
<og:title>Using Matrix to replace proprietary and centralized chat apps</og:title>
<og:description>As you may know it, I am a fervent user of the chat protocol Matrix...</og:description>
<og:type>article</og:type>
<og:url>https://jae.moe/blog/2020/11/using-matrix-to-replace-proprietary-and-centralized-chat-apps/</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://jae.moe/blog/2020/11/using-matrix-to-replace-proprietary-and-centralized-chat-apps/</dc:identifier>
</item>
<item>
<title>Don&amp;#039;t use third party auth to sign in</title>
<link>https://gurjeet.singh.im/blog/never-use-google-to-sign-in</link>
<guid isPermaLink="true" >https://gurjeet.singh.im/blog/never-use-google-to-sign-in</guid>
<description>&lt;p&gt;If a website offers you to sign-in using Google (or any third-party service, say Facebook, Github, etc.), don‚Äôt use that feature.&lt;/p&gt;
&lt;p&gt;The long and short of it is that if Google (or third-party of your choice) locks your account for some reason, you will be locked out of &lt;em&gt;all&lt;/em&gt; the services where you signed into using Google. There‚Äôs no shortage of examples where people have been locked out of Google (and other services), with no recourse to re-enable their accounts, and consequently losing all data hosted or protected by that Google account.&lt;/p&gt;
&lt;p&gt;Every respectable service allows you to create accounts using your email address, so please use that method to create your accounts.&lt;/p&gt;
</description>
<pubDate>Sat, 14 Nov 2020 10:38:22 +0000</pubDate>
<dc:creator>gurjeet</dc:creator>
<og:title>Never Use Google to Sign-In</og:title>
<og:description>If a website offers you to sign-in using Google (or any third-party service, say Facebook, Github, etc.), don‚Äôt use that feature.</og:description>
<og:url>http://gurjeet.singh.im/blog/never-use-google-to-sign-in</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gurjeet.singh.im/blog/never-use-google-to-sign-in</dc:identifier>
</item>
<item>
<title>Personal Data Warehouses: Reclaiming Your Data</title>
<link>https://simonwillison.net/2020/Nov/14/personal-data-warehouses/</link>
<guid isPermaLink="true" >https://simonwillison.net/2020/Nov/14/personal-data-warehouses/</guid>
<description>&lt;p&gt;I gave a talk yesterday about personal data warehouses for &lt;a href=&quot;https://octo.github.com/speakerseries/SimonWillison/&quot;&gt;GitHub‚Äôs OCTO Speaker Series&lt;/a&gt;, focusing on my &lt;a href=&quot;https://datasette.io/&quot;&gt;Datasette&lt;/a&gt; and &lt;a href=&quot;https://dogsheep.github.io/&quot;&gt;Dogsheep&lt;/a&gt; projects. The video of the talk is now available, and I‚Äôm presenting that here along with &lt;a href=&quot;https://simonwillison.net/2020/Nov/14/personal-data-warehouses/&quot;&gt;an annotated summary of the talk&lt;/a&gt;, including links to demos and further information.&lt;/p&gt;
&lt;p&gt;There‚Äôs a short technical glitch with the screen sharing in the first couple of minutes of the talk‚ÄîI‚Äôve added screenshots to the notes which show what you would have seen if my screen had been correctly shared.&lt;/p&gt;
&lt;div&gt;&lt;iframe allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/l1EFThsAFgs&quot; width=&quot;560&quot;&gt;[embedded content]&lt;/iframe&gt;

&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;13&quot;&gt;&lt;img alt=&quot;Simon Willison - FOSS Developer and Consultant, Python, Django, Datasette&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-1.jpg&quot; /&gt;&lt;p&gt;I‚Äôm going to be talking about personal data warehouses, what they are, why you want one, how to build them and some of the interesting things you can do once you‚Äôve set one up.&lt;/p&gt;
&lt;p&gt;I‚Äôm going to start with a demo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10&quot;&gt;&lt;img alt=&quot;Cleo wearing a very fine Golden Gate Bridge costume with a prize rosette attached to it&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/cleo-golden-gate-bridge.jpg&quot; /&gt;&lt;p&gt;This is my dog, Cleo‚Äîwhen she won first place in a dog costume competition here, dressed as the Golden Gate Bridge!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12.419642857143&quot;&gt;&lt;img alt=&quot;All of my checkins on a map&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/all-checkins.png&quot; /&gt;&lt;p&gt;So the question I want to answer is: How much of a San Francisco hipster is Cleo?&lt;/p&gt;
&lt;p&gt;I can answer it using my personal data warehouse.&lt;/p&gt;
&lt;p&gt;I have a database of ten year‚Äôs worth of my checkins on Foursquare Swarm‚Äîgenerated using my &lt;a href=&quot;https://github.com/dogsheep/swarm-to-sqlite&quot;&gt;swarm-to-sqlite&lt;/a&gt; tool. Every time I check in somewhere with Cleo I use the Wolf emoji in the checkin message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;9&quot;&gt;&lt;img alt=&quot;All of Cleo's checkins on a map&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/dog-checkins.png&quot; /&gt;&lt;p&gt;I can filter for just checkins where the checkin message includes the wolf emoji.&lt;/p&gt;
&lt;p&gt;Which means I can see just her checkins‚Äîall 280 of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11&quot;&gt;&lt;img alt=&quot;Cleo's top categories&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/dog-categories.png&quot; /&gt;&lt;p&gt;If I facet by venue category, I can see she‚Äôs checked in at 57 parks, 32 dog runs, 19 coffee shops and 12 organic groceries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12&quot;&gt;&lt;img alt=&quot;A map of coffe shops that Cleo has been to&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-2.jpg&quot; /&gt;&lt;p&gt;Then I can facet by venue category and filter down to just her 19 checkins at coffee shops.&lt;/p&gt;
&lt;p&gt;Turns out she‚Äôs a Blue Bottle girl at heart.&lt;/p&gt;
&lt;p&gt;Being able to build a map of the coffee shops that your dog likes is obviously a very valuable reason to build your own personal data warehouse.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11.641196013289&quot;&gt;&lt;img alt=&quot;The Datasette website&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-4.jpg&quot; /&gt;&lt;p&gt;Let‚Äôs take a step back and talk about how this demo works.&lt;/p&gt;
&lt;p&gt;The key to this demo is this web application I‚Äôm running called &lt;a href=&quot;https://datasette.io/&quot;&gt;Datasette&lt;/a&gt;. I‚Äôve been working on this project for three years now, and the goal is to make it as easy and cheap as possible to explore data in all sorts of shapes and sizes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;17.661360347323&quot;&gt;&lt;img alt=&quot;A screenshot of the Guardian Data Blog&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-5.jpg&quot; /&gt;&lt;p&gt;Ten years ago I was working for the Guardian newspaper in London. One of the things I realized when I joined the organization is that newspapers collect enormous amounts of data. Any time they publish a chart or map in the newspaper someone has to collect the underlying information.&lt;/p&gt;
&lt;p&gt;There was a journalist there called Simon Rogers who was a wizard at collecting any data you could think to ask for. He knew exactly where to get it from, and had collected a huge number of brilliant spreadsheets on his desktop computer.&lt;/p&gt;
&lt;p&gt;We decided we wanted to publish the data behind the stories. We started something called &lt;a href=&quot;https://www.theguardian.com/news/datablog/2011/jan/27/data-store-office-for-national-statistics&quot;&gt;the Data Blog&lt;/a&gt;, and aimed to accompany our stories with the raw data behind them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10&quot;&gt;&lt;img alt=&quot;A Google Sheet containing US public debt figures since 2001&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-6.jpg&quot; /&gt;&lt;p&gt;We ended up using Google Sheets to publish the data. It worked, but I always felt like there should be a better way to publish this kind of structured data in a way that was as useful and flexible as possible for our audience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;26.787401574803&quot;&gt;&lt;img alt=&quot;Serverless hosting? Scale to Zero. ... but databases cost extra!&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-7.jpg&quot; /&gt;&lt;p&gt;Fast forward to 2017, when I was looking into this new thing called ‚Äúserverless‚Äù hosting‚Äîin particular one called Zeit Now, which has since rebranded as &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My favourite aspect of Serverless is ‚ÄúScale to zero‚Äù‚Äîthe idea that you only pay for hosting when your project is receiving traffic.&lt;/p&gt;
&lt;p&gt;If you‚Äôre like me, and you love building side-projects but you don‚Äôt like paying $5/month for them for the rest of your life, this is perfect.&lt;/p&gt;
&lt;p&gt;The catch is that serverless providers tend to charge you extra for databases, or require you to buy a hosted database from another provider.&lt;/p&gt;
&lt;p&gt;But what if your database doesn‚Äôt change? Can you bundle your database in the same container as your code?&lt;/p&gt;
&lt;p&gt;This was the initial inspiration behind creating Datasette.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;6.5882352941176&quot;&gt;&lt;img alt=&quot;A GitHub repository containing the Global Power Plant Database&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-9.jpg&quot; /&gt;&lt;p&gt;Like many groups, they publish &lt;a href=&quot;https://github.com/wri/global-power-plant-database&quot;&gt;that data&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10.727506426735&quot;&gt;&lt;img alt=&quot;A Datasette instance showing power plants faceted by country and primary fuel&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-10.jpg&quot; /&gt;&lt;p&gt;I have &lt;a href=&quot;https://github.com/simonw/global-power-plants-datasette/blob/main/.github/workflows/scheduled.yml&quot;&gt;a script&lt;/a&gt; that grabs their most recent data and publishes it using Datasette.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://global-power-plants.datasettes.com/global-power-plants/global-power-plants&quot;&gt;Here‚Äôs the contents of their CSV file&lt;/a&gt; published using Datasette&lt;/p&gt;
&lt;p&gt;Datasette supports plugins. You‚Äôve already seen this plugin in my demo of Cleo‚Äôs coffee shops‚Äîit‚Äôs called &lt;a href=&quot;https://github.com/simonw/datasette-cluster-map&quot;&gt;datasette-cluster-map&lt;/a&gt; and it works by looking for tables with a latitude and longitude column and plotting the data on a map.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12&quot;&gt;&lt;img alt=&quot;A zoomed in map showing two power plants in Antarctica&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-11.jpg&quot; /&gt;&lt;p&gt;Straight away looking at this data you notice that there‚Äôs a couple of power plants down here in Antarctica. This is McMurdo station, and it has a 6.6MW oil generator.&lt;/p&gt;
&lt;p&gt;And oh look, there‚Äôs a wind farm down there too on Ross Island knocking out 1MW of electricity.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;8.2773722627737&quot;&gt;&lt;img alt=&quot;a screen full of JSON&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-13.jpg&quot; /&gt;&lt;p&gt;And anything i can see in the interface, I can get out as JSON. Here‚Äôs &lt;a href=&quot;https://global-power-plants.datasettes.com/global-power-plants/global-power-plants.json?primary_fuel=Nuclear&amp;amp;country_long=France&quot;&gt;a JSON file&lt;/a&gt; showing all of those nuclear power plants in France.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7.0679611650485&quot;&gt;&lt;img alt=&quot;A screen full of CSV&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-14.jpg&quot; /&gt;&lt;p&gt;And here‚Äôs &lt;a href=&quot;https://global-power-plants.datasettes.com/global-power-plants/global-power-plants.csv?primary_fuel=Nuclear&amp;amp;country_long=France&quot;&gt;a CSV export&lt;/a&gt; which I can use to pull the data into Excel or other CSV-compatible software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;8.8442211055276&quot;&gt;&lt;img alt=&quot;An interface for editing a SQL query&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-15.jpg&quot; /&gt;&lt;p&gt;If I click &lt;a href=&quot;https://global-power-plants.datasettes.com/global-power-plants?sql=select+rowid%2C+country%2C+country_long%2C+name%2C+gppd_idnr%2C+capacity_mw%2C+latitude%2C+longitude%2C+primary_fuel%2C+other_fuel1%2C+other_fuel2%2C+other_fuel3%2C+commissioning_year%2C+owner%2C+source%2C+url%2C+geolocation_source%2C+wepp_id%2C+year_of_capacity_data%2C+generation_gwh_2013%2C+generation_gwh_2014%2C+generation_gwh_2015%2C+generation_gwh_2016%2C+generation_gwh_2017%2C+generation_data_source%2C+estimated_generation_gwh+from+%5Bglobal-power-plants%5D+where+%22country_long%22+%3D+%3Ap0+and+%22primary_fuel%22+%3D+%3Ap1+order+by+rowid+limit+101&amp;amp;p0=France&amp;amp;p1=Nuclear&quot;&gt;‚Äúview and edit SQL‚Äù&lt;/a&gt; to get back the SQL query that was used to generate the page‚Äîand I can edit and re-execute that query.&lt;/p&gt;
&lt;p&gt;I can get those custom results back as CSV or JSON as well!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;22&quot;&gt;&lt;img alt=&quot;Results of a custom SQL query&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-16.jpg&quot; /&gt;&lt;p&gt;In most web applications this would be seen as a terrifying security hole‚Äîit‚Äôs a SQL injection attack, as a documented feature!&lt;/p&gt;
&lt;p&gt;A couple of reasons this isn‚Äôt a problem here:&lt;/p&gt;
&lt;p&gt;Firstly, this is setup as a read-only database: INSERT and UPDATE statements that would modify it are not allowed. There‚Äôs a one second time limit on queries as well.&lt;/p&gt;
&lt;p&gt;Secondly, everything in this database is designed to be published. There are no password hashes or private user data that could be exposed here.&lt;/p&gt;
&lt;p&gt;This also means we have a JSON API that lets JavaScript execute SQL queries against a backend! This turns out to be really useful for rapid prototyping.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;20.771739130435&quot;&gt;&lt;img alt=&quot;The SQLite home page&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-17.jpg&quot; /&gt;&lt;p&gt;It‚Äôs worth talking about the secret sauce that makes this all possible.&lt;/p&gt;
&lt;p&gt;This is all built on top of &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;. Everyone watching this talk uses SQLite every day, even if you don‚Äôt know it.&lt;/p&gt;
&lt;p&gt;Most iPhone apps use SQLite, many desktop apps do, it‚Äôs even running inside my Apple Watch.&lt;/p&gt;
&lt;p&gt;One of my favourite features is that a SQLite database is a single file on disk. This makes it easy to copy, send around and also means I can bundle data up in that single file, include it in a Docker file and deploy it to serverless hosts to serve it on the internet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12.335463258786&quot;&gt;&lt;img alt=&quot;A Datasette map of power outages&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-19.jpg&quot; /&gt;&lt;p&gt;Here‚Äôs another demo that helps show how GitHub fits into all of this.&lt;/p&gt;
&lt;p&gt;Last year PG&amp;amp;E‚Äîthe power company that covers much of California‚Äîturned off the power to large swathes of the state.&lt;/p&gt;
&lt;p&gt;I got lucky: six months earlier I had started scraping &lt;a href=&quot;https://m.pge.com/#outages&quot;&gt;their outage map&lt;/a&gt; and recording the history to a GitHub repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12.840336134454&quot;&gt;&lt;img alt=&quot;A list of recent commits to the pge-outages GitHub repository, each one with a commit messages showing the number of incidents added, removed or updated&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-20.jpg&quot; /&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/simonw/pge-outages&quot;&gt;simonw/pge-outages&lt;/a&gt; is a git repository with 34,000 commits tracking the history of outages that PG&amp;amp;E had published on their outage map.&lt;/p&gt;
&lt;p&gt;You can see that two minutes ago they added 35 new outages.&lt;/p&gt;
&lt;p&gt;I‚Äôm using this data to publish a Datasette instance with details of their historic outages. Here‚Äôs a page &lt;a href=&quot;https://pge-outages.simonwillison.net/pge-outages/most_recent_snapshot?_sort_desc=estCustAffected&quot;&gt;showing their current outages&lt;/a&gt; ordered by the most customers affected by the outage.&lt;/p&gt;
&lt;p&gt;Read &lt;a href=&quot;https://simonwillison.net/2019/Oct/10/pge-outages/&quot;&gt;Tracking PG&amp;amp;E outages by scraping to a git repo&lt;/a&gt; for more details on this project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;9.8549222797927&quot;&gt;&lt;img alt=&quot;A screenshot of my blog entry about Git scraping&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-21.jpg&quot; /&gt;&lt;p&gt;I recently decided to give this technique a name. I‚Äôm calling it &lt;strong&gt;Git scraping&lt;/strong&gt;‚Äîthe idea is to take any data source on the web that represents a point-in-time and commit it to a git repository that tells the story of the history of that particular thing.&lt;/p&gt;
&lt;p&gt;Here‚Äôs my article describing the pattern in more detail: &lt;a href=&quot;https://simonwillison.net/2020/Oct/9/git-scraping/&quot;&gt;Git scraping: track changes over time by scraping to a Git repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10.402730375427&quot;&gt;&lt;img alt=&quot;A screenshot of the NYT scraped election results page&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-22.jpg&quot; /&gt;&lt;p&gt;This technique really stood out just last week during the US election.&lt;/p&gt;
&lt;p&gt;This is the &lt;a href=&quot;https://alex.github.io/nyt-2020-election-scraper/battleground-state-changes.html#&quot;&gt;New York Times election scraper website&lt;/a&gt;, built by Alex Gaynor and a growing team of contributors. It scrapes the New York Times election results and uses the data over time to show how the results are trending.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;8.9764150943396&quot;&gt;&lt;img alt=&quot;The nyt-2020-election-scraper GitHub repository page&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-23.jpg&quot; /&gt;&lt;p&gt;It uses a &lt;a href=&quot;https://github.com/alex/nyt-2020-election-scraper&quot;&gt;GitHub Actions script&lt;/a&gt; that runs on a schedule, plus a really clever Python script that turns it into a useful web page.&lt;/p&gt;
&lt;p&gt;You can find more examples of Git scraping under the &lt;a href=&quot;https://github.com/topics/git-scraping&quot;&gt;git-scraping topic&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11.956204379562&quot;&gt;&lt;img alt=&quot;A screenshot of the incident map on fire.ca.gov&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-24.jpg&quot; /&gt;&lt;p&gt;I‚Äôm going to do a bit of live coding to show you how this stuff works.&lt;/p&gt;
&lt;p&gt;This is the &lt;a href=&quot;https://www.fire.ca.gov/incidents/&quot;&gt;incidents page&lt;/a&gt; from the state of California &lt;a href=&quot;https://www.fire.ca.gov/&quot;&gt;CAL FIRE&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;Any time I see a map like this, my first instinct is to open up the browser developer tools and try to figure out how it works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11&quot;&gt;&lt;img alt=&quot;The incident map with an open developer tools network console showing XHR requests ordered by size, largest first&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-25.jpg&quot; /&gt;&lt;p&gt;If I open the network tab, refresh the page and then filter to just XHR requests.&lt;/p&gt;
&lt;p&gt;A neat trick is to order by size‚Äîbecause inevitably the thing at the top of the list is the most interesting data on the page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10.278260869565&quot;&gt;&lt;img alt=&quot;a JSON list of incidents&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-26.jpg&quot; /&gt;&lt;p&gt;This appears to be &lt;a href=&quot;https://www.fire.ca.gov/umbraco/Api/IncidentApi/GetIncidents&quot;&gt;a JSON file&lt;/a&gt; telling me about all of the current fires in the state of California!&lt;/p&gt;
&lt;p&gt;(I set up &lt;a href=&quot;https://github.com/simonw/ca-fires-history&quot;&gt;a Git scraper for this&lt;/a&gt; a while ago.)&lt;/p&gt;
&lt;p&gt;Now I‚Äôm going to take this a step further and turn it into a Datasette instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;The AllYearIncidents section of the JSON&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-27.jpg&quot; /&gt;&lt;p&gt;It looks like the &lt;code&gt;AllYearIncidents&lt;/code&gt; key is the most interesting bit here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10.682692307692&quot;&gt;&lt;img alt=&quot;A screenshot showing the output of curl&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-28.jpg&quot; /&gt;&lt;p&gt;I‚Äôm going to use &lt;a href=&quot;https://curl.se/&quot;&gt;curl&lt;/a&gt; to fetch that data, then pipe it through &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; to filter for just that &lt;code&gt;AllYearIncidents&lt;/code&gt; array.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;curl 'https://www.fire.ca.gov/umbraco/Api/IncidentApi/GetIncidents' \
        | jq .AllYearIncidents&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;Pretty-printed JSON produced by piping to jq&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-29.jpg&quot; /&gt;&lt;p&gt;Now I have a list of incidents for this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;15.598326359833&quot;&gt;&lt;img alt=&quot;A terminal running a command that inserts the data into a SQLite database&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-30.jpg&quot; /&gt;&lt;p&gt;Next I‚Äôm going to pipe it into a tool I‚Äôve been building called &lt;a href=&quot;https://sqlite-utils.readthedocs.io/&quot;&gt;sqlite-utils&lt;/a&gt;‚Äîit‚Äôs a suite of tools for manipulating SQLite databases.&lt;/p&gt;
&lt;p&gt;I‚Äôm going to use the ‚Äúinsert‚Äù command and insert the data into a &lt;code&gt;ca-fires.db&lt;/code&gt; in an &lt;code&gt;incidents&lt;/code&gt; table.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;curl 'https://www.fire.ca.gov/umbraco/Api/IncidentApi/GetIncidents' \
        | jq .AllYearIncidents \
        | sqlite-utils insert ca-fires.db incidents -&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now I‚Äôve got a &lt;code&gt;ca-fires.db&lt;/code&gt; file. I can open that in Datasette:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;datasette ca-fires.db -o&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12&quot;&gt;&lt;img alt=&quot;A map of incidents, where one of them is located at the very bottom of the map in Antarctica&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-31.jpg&quot; /&gt;&lt;p&gt;And here it is‚Äîa brand new database.&lt;/p&gt;
&lt;p&gt;You can straight away see that one of the rows has a bad location, hence it appears in Antarctica.&lt;/p&gt;
&lt;p&gt;But 258 of them look like they are in the right place.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;8&quot;&gt;&lt;img alt=&quot;I list of faceted counties, showing the count of fires for each one&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-32.jpg&quot; /&gt;&lt;p&gt;I can also facet by county, to see which county had the most fires in 2020‚ÄîRiverside had 21.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;9.7598039215686&quot;&gt;&lt;img alt=&quot;datasette publish --help shows a list of hosting providers - cloudrun, heroku and vercel&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-33.jpg&quot; /&gt;&lt;p&gt;I‚Äôm going to take this a step further and put it on the internet, using a command called &lt;a href=&quot;https://docs.datasette.io/en/stable/publish.html#datasette-publish&quot;&gt;datasette publish&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Datasette publish supports a number of different hosting providers. I‚Äôm going to use &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;14&quot;&gt;&lt;img alt=&quot;A terminal running datasette publish&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-34.jpg&quot; /&gt;&lt;p&gt;I‚Äôm going to tell it to publish that database to a project called ‚Äúca-fires‚Äù‚Äîand tell it to install the &lt;code&gt;datasette-cluster-map&lt;/code&gt; plugin.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;datasette publish vercel ca-fires.db \
        --project ca-fires \
        --install datasette-cluster-map&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;This then takes that database file, bundles it up with the Datasette application and deploys it to Vercel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11&quot;&gt;&lt;img alt=&quot;A page on Vercel.com showing a deployment in process&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-35.jpg&quot; /&gt;&lt;p&gt;Vercel gives me a URL where I can watch the progress of the deploy.&lt;/p&gt;
&lt;p&gt;The goal here is to have as few steps as possible between finding some interesting data, turning it into a SQLite database you can use with Datasette and then publishing it online.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;15.717857142857&quot;&gt;&lt;img alt=&quot;Screenshot of Stephen Wolfram's essay Seeking the Productive Life: Some Details of My Personal Infrastructure&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-37.jpg&quot; /&gt;&lt;p&gt;I‚Äôve given you a whistle-stop tour of Datasette for the purposes of publishing data, and hopefully doing some serious data journalism.&lt;/p&gt;
&lt;p&gt;So what does this all have to do with personal data warehouses?&lt;/p&gt;
&lt;p&gt;Last year, I read this essay by Stephen Wolfram: &lt;a href=&quot;https://writings.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/&quot;&gt;Seeking the Productive Life: Some Details of My Personal Infrastructure&lt;/a&gt;. It‚Äôs an incredible exploration of fourty years of productivity hacks that Stephen Wolfram has applied to become the CEO of a 1,000 person company that works remotely. He‚Äôs optimized every aspect of his professional and personal life.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;22&quot;&gt;&lt;img alt=&quot;A screenshot showing the section where he talks about his metasearcher&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-38.jpg&quot; /&gt;&lt;p&gt;It‚Äôs a lot.&lt;/p&gt;
&lt;p&gt;But there was one part of this that really caught my eye. He talks about a thing he calls a ‚Äúmetasearcher‚Äù‚Äîa search engine on his personal homepage that searches every email, journals, files, everything he‚Äôs ever done‚Äîall in one place.&lt;/p&gt;
&lt;p&gt;And I thought to myself, I really want THAT. I love this idea of a personal portal to my own stuff.&lt;/p&gt;
&lt;p&gt;And because it was inspired by Stephen Wolfram, but I was planning on building a much less impressive version, I decided to call it Dogsheep.&lt;/p&gt;
&lt;p&gt;Wolf, ram. Dog, sheep.&lt;/p&gt;
&lt;p&gt;I‚Äôve been building this over the past year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;19&quot;&gt;&lt;img alt=&quot;A screenshot of my personal Dogsheep homepage, showing a list of data sources and saved queries&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-39.jpg&quot; /&gt;&lt;p&gt;So essentially this is my personal data warehouse. It pulls in my personal data from as many sources as I can find and gives me an interface to browse that data and run queries against it.&lt;/p&gt;
&lt;p&gt;I‚Äôve got data from Twitter, Apple HealthKit, GitHub, Swarm, Hacker News, Photos, a copy of my genome... all sorts of things.&lt;/p&gt;
&lt;p&gt;I‚Äôll show a few more demos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7.9375&quot;&gt;&lt;img alt=&quot;Tweets with selfies by Cleo&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-40.jpg&quot; /&gt;&lt;p&gt;Here‚Äôs another one about Cleo. Cleo has &lt;a href=&quot;https://twitter.com/cleopaws&quot;&gt;a Twitter account&lt;/a&gt;, and every time she goes to the vet she posts a selfie and says how much she weighs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;23.503692762186&quot;&gt;&lt;img alt=&quot;A graph showing Cleo's weight over time&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-42.jpg&quot; /&gt;&lt;p&gt;Here‚Äôs a SQL query that finds every tweet that mentions her weight, pulls out her weight in pounds using a regular expression, then uses the &lt;a href=&quot;https://github.com/simonw/datasette-vega&quot;&gt;datasette-vega&lt;/a&gt; charting plugin to show a self-reported chart of her weight over time.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select
    created_at,
    regexp_match('.*?(\d+(\.\d+))lb.*', full_text, 1) as lbs,
    full_text,
    case
        when (media_url_https is not null)
        then json_object('img_src', media_url_https, 'width', 300)
    end as photo
    from
    tweets
    left join media_tweets on tweets.id = media_tweets.tweets_id
    left join media on media.id = media_tweets.media_id
    where
    full_text like '%lb%'
    and user = 3166449535
    and lbs is not null
    group by
    tweets.id
    order by
    created_at desc
    limit
    101&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;19.644670050761&quot;&gt;&lt;img alt=&quot;A screenshot showing the result of running a SQL query against my genome&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-43.jpg&quot; /&gt;&lt;p&gt;I did &lt;a href=&quot;https://www.23andme.com/&quot;&gt;23AndMe&lt;/a&gt; a few years ago, so I have a copy of my genome in Dogsheep. This SQL query tells me what colour my eyes are.&lt;/p&gt;
&lt;p&gt;Apparently they are blue, 99% of the time.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;select rsid, genotype, case genotype
    when 'AA' then 'brown eye color, 80% of the time'
    when 'AG' then 'brown eye color'
    when 'GG' then 'blue eye color, 99% of the time'
    end as interpretation from genome where rsid = 'rs12913832'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;20.25&quot;&gt;&lt;img alt=&quot;A list of tables in my HealthKit database&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-44.jpg&quot; /&gt;&lt;p&gt;I have HealthKit data from my Apple Watch.&lt;/p&gt;
&lt;p&gt;Something I really like about Apple‚Äôs approach to this stuff is that they don‚Äôt just upload all of your data to the cloud.&lt;/p&gt;
&lt;p&gt;This data lives on your watch and on your phone, and there‚Äôs an option in the Health app on your phone to export it‚Äîas a zip file full of XML.&lt;/p&gt;
&lt;p&gt;I wrote a script called &lt;a href=&quot;https://github.com/dogsheep/healthkit-to-sqlite&quot;&gt;healthkit-to-sqlite&lt;/a&gt; that converts that zip file into a SQLite database, and now I have tables for things like my basal energy burned, my body fat percentage, flights of stairs I‚Äôve climbed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;15&quot;&gt;&lt;img alt=&quot;Screenshot showing a Datasette map of my San Francisco Half Marathon route&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-46.jpg&quot; /&gt;&lt;p&gt;But the really fun part is that it turns out any time you track an outdoor workout on your Apple Watch it records your exact location every few seconds, and you can get that data back out again!&lt;/p&gt;
&lt;p&gt;This is a map of my exact route for the San Francisco Half Marathon three years ago.&lt;/p&gt;
&lt;p&gt;I‚Äôve started tracking an ‚Äúoutdoor walk‚Äù every time I go on a walk now, just so I can get the GPS data out again later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;13.125&quot;&gt;&lt;img alt=&quot;Screeshot showing a list of commits to my projects, faceted by repository&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-47.jpg&quot; /&gt;&lt;p&gt;I have a lot of data from GitHub about my projects‚Äîall of my commits, issues, issue comments and releases‚Äîeverything I can get out of the GitHub API using my &lt;a href=&quot;https://github.com/dogsheep/github-to-sqlite&quot;&gt;github-to-sqlite&lt;/a&gt; tool.&lt;/p&gt;
&lt;p&gt;So I can do things like see all of my commits across all of my projects, search and facet them.&lt;/p&gt;
&lt;p&gt;I have a public demo of a subset of this data at &lt;a href=&quot;https://github-to-sqlite.dogsheep.net/&quot;&gt;github-to-sqlite.dogsheep.net&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;div class=&quot;slide&quot; readability=&quot;13&quot;&gt;&lt;img alt=&quot;A faceted interface showing my photos, faceted by city, country and whether they are a favourite&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-50.jpg&quot; /&gt;&lt;p&gt;Apple Photos is a particularly interesting source of data.&lt;/p&gt;
&lt;p&gt;It turns out the Apple Photos app uses a SQLite database, and if you know what you‚Äôre doing you can extract photo metadata from it.&lt;/p&gt;
&lt;p&gt;They actually run machine learning models on your own device to figure out what your photos are of!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;8&quot;&gt;&lt;img alt=&quot;Some photos I have taken of pelicans, inside Datasette&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-51.jpg&quot; /&gt;&lt;p&gt;You can use the machine learning labels to see all of the photos you have taken of pelicans. Here are all of the photos I have taken that Apple Photos have identified as pelicans.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;12&quot;&gt;&lt;img alt=&quot;Screenshot showing some of the columns in my photos table&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-52.jpg&quot; /&gt;&lt;p&gt;It also turns out they have columns called things like ZOVERALLAESTHETICSCORE, ZHARMONIOUSCOLORSCORE, ZPLEASANTCAMERATILTSCORE and more.&lt;/p&gt;
&lt;p&gt;So I can sort my pelican photos with the most aesthetically pleasing first!&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;12.869565217391&quot;&gt;&lt;img alt=&quot;Screenshot of my Dogsheep Beta faceted search interface&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-54.jpg&quot; /&gt;&lt;p&gt;And a few weeks ago I finally got around to building the thing I‚Äôd always wanted: the search engine.&lt;/p&gt;
&lt;p&gt;I called it &lt;a href=&quot;https://github.com/dogsheep/dogsheep-beta&quot;&gt;Dogsheep Beta&lt;/a&gt;, because Stephen Wolfram has a search engine called &lt;a href=&quot;https://www.wolframalpha.com/&quot;&gt;Wolfram Alpha&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is pun-driven development: I came up with this pun a while ago and liked it so much I committed to building the software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11&quot;&gt;&lt;img alt=&quot;Search results for Cupertino, showing photos with maps&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-55.jpg&quot; /&gt;&lt;p&gt;I wanted to know when the last time I had eaten a waffle-fish ice cream was. I knew it was in Cupertino, so I searched Dogsheep Beta for Cupertino and found this photo.&lt;/p&gt;
&lt;p&gt;I hope this illustrates how much you can do if you pull all of your personal data into one place!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;19&quot;&gt;&lt;img alt=&quot;GDPR really helps&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-56.jpg&quot; /&gt;&lt;p&gt;The GDPR law that passed in Europe a few years ago really helps with this stuff.&lt;/p&gt;
&lt;p&gt;Companies have to provide you with access to the data that they store about you.&lt;/p&gt;
&lt;p&gt;Many big internet companies have responded to this by providing a self-service export feature, usually buried somewhere in the settings.&lt;/p&gt;
&lt;p&gt;You can also request data directly from companies, but the self-service option helps them keep their customer support costs down.&lt;/p&gt;
&lt;p&gt;This stuff becomes easier over time as more companies build out these features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;18&quot;&gt;&lt;img alt=&quot;Democratizing access. The future is already here, it's just not evenly distributed - William Gibson&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-57.jpg&quot; /&gt;&lt;p&gt;The other challenge is how we democratize access to this.&lt;/p&gt;
&lt;p&gt;Everything I‚Äôve shown you today is open source: you can install this software and use it yourself, for free.&lt;/p&gt;
&lt;p&gt;But there‚Äôs a lot of assembly required. You need to figure out authentication tokens, find somewhere to host it, set up cron jobs and authentication.&lt;/p&gt;
&lt;p&gt;But this should be accessible to regular non-uber-nerd humans!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;19.487908961593&quot;&gt;&lt;img alt=&quot;Democratizing access. Should users run their own online Dogsheep? So hard and risky! Tailscale and WireGuard are interesting here. Vendors to provide hosted Dogsheep? Not a great business, risky!. Better options: Desktop app, mobile app.&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-57-2.jpg&quot; /&gt;&lt;p&gt;Expecting regular humans to run a secure web server somewhere is pretty terrifying. I‚Äôve been looking at &lt;a href=&quot;https://www.wireguard.com/&quot;&gt;WireGuard&lt;/a&gt; and &lt;a href=&quot;https://tailscale.com/&quot;&gt;Tailscale&lt;/a&gt; to help make secure access between devices easier, but that‚Äôs still very much for super-users only.&lt;/p&gt;
&lt;p&gt;Running this as a hosted service doesn‚Äôt appeal: taking responsibility for people‚Äôs personal data is scary, and it‚Äôs probably not a great business.&lt;/p&gt;
&lt;p&gt;I think the best options are to run on people‚Äôs own personal devices‚Äîtheir mobile phones and their laptops. I think it‚Äôs feasible to get Datasette running in those environments, and I really like the idea of users being able to import their personal data onto a device that they control and analyzing it there.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;6.7692307692308&quot;&gt;&lt;img alt=&quot;Screenshot of Dogsheep on GitHub&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-59.jpg&quot; /&gt;&lt;p&gt;The &lt;a href=&quot;https://github.com/dogsheep&quot;&gt;Dogsheep GitHub organization&lt;/a&gt; has most of the tools that I‚Äôve used to build out my personal Dogsheep warehouse‚Äîmany of them using the naming convention of something-to-sqlite.&lt;/p&gt;
&lt;/div&gt;
&lt;h4&gt;Q&amp;amp;A, from &lt;a href=&quot;https://docs.google.com/document/d/1rFp2tXLvaCK5khbPbSfV8nfVjZLGTX3KkMZ2FMpgi-k/edit&quot;&gt;this Google Doc&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;slide&quot; readability=&quot;20&quot;&gt;&lt;img alt=&quot;Screenshot of the Google Doc&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-60.jpg&quot; /&gt;&lt;p&gt;Q: Is there/will there be a Datasette hosted service that I can pay $ for? I would like to pay $5/month to get access to the latest version of Dogsheep with all the latest plugins!&lt;/p&gt;
&lt;p&gt;I don‚Äôt want to build a hosting site for personal private data because I think people should stay in control of that themselves, plus I don‚Äôt think there‚Äôs a particularly good business model for that.&lt;/p&gt;
&lt;p&gt;Instead, I‚Äôm building a hosted service for Datasette (called Datasette Cloud) which is aimed at companies and organizations. I want to be able to provide newsrooms and other groups with a private, secure, hosted environment where they can share data with each other and run analysis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;21.564129301356&quot;&gt;&lt;img alt=&quot;Screenshot showing an export running on an iPhone in the Health app&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-61.jpg&quot; /&gt;&lt;p&gt;Q: How do you sync your data from your phone/watch to the data warehouse? Is it a manual process?&lt;/p&gt;
&lt;p&gt;The health data is manual: the iOS Health app has an export button which generates a zip file of XML which you can then AirDrop to a laptop. I then run my &lt;a href=&quot;https://github.com/dogsheep/healthkit-to-sqlite&quot;&gt;healthkit-to-sqlite&lt;/a&gt; script against it to generate the DB file and SCP that to my Dogsheep server.&lt;/p&gt;
&lt;p&gt;Many of my other Dogsheep tools use APIs and can run on cron, to fetch the most recent data from Swarm and Twitter and GitHub and so on.&lt;/p&gt;
&lt;p&gt;Q: When accessing Github/Twitter etc do you run queries against their API or you periodically sync (retrieve mostly I guess) the data to the warehouse first and then query locally?&lt;/p&gt;
&lt;p&gt;I always try to get ALL the data so I can query it locally. The problem with APIs that let you run queries is that inevitably there‚Äôs something I want to do that can‚Äôt be done of the API‚Äîso I‚Äôd much rather suck everything down into my own database so I can write my own SQL queries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;11.427419354839&quot;&gt;&lt;img alt=&quot;Screenshot showing how to run swarm-to-sqlite in a terminal&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-62.jpg&quot; /&gt;&lt;p&gt;Here‚Äôs an example of my &lt;a href=&quot;https://github.com/dogsheep/swarm-to-sqlite&quot;&gt;swarm-to-sqlite&lt;/a&gt; script, pulling in just checkins from the past two weeks (using authentication credentials from an environment variable).&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;swarm-to-sqlite swarm.db --since=2w&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Here‚Äôs &lt;a href=&quot;https://gist.github.com/simonw/1299d61d17637d1145955ebc019ea3c4&quot;&gt;a redacted copy&lt;/a&gt; of my Dogsheep crontab.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;10.760869565217&quot;&gt;&lt;img alt=&quot;Screenshot of the SQL.js GitHub page&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-63.jpg&quot; /&gt;&lt;p&gt;Q: Have you explored doing this as a single page app so that it is possible to deploy this as a static site? What are the constraints there?&lt;/p&gt;
&lt;p&gt;It‚Äôs actually possible to query SQLite databases entirely within client-side JavaScript using &lt;a href=&quot;https://github.com/sql-js/sql.js&quot;&gt;SQL.js&lt;/a&gt; (SQLite compiled to WebAssembly)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;6.4262295081967&quot;&gt;&lt;img alt=&quot;Screenshot of an Observable notebook running SQL.js&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-64.jpg&quot; /&gt;&lt;p&gt;&lt;a href=&quot;https://observablehq.com/@mbostock/sqlite&quot;&gt;This Observable notebook&lt;/a&gt; is an example that uses this to run SQL queries against a SQLite database file loaded from a URL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;8.88&quot;&gt;&lt;img alt=&quot;Screenshot of a search for cherry trees on sf-trees.com&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-65.jpg&quot; /&gt;&lt;p&gt;Datasette‚Äôs JSON and GraphQL APIs mean it can easily act as an API backend to SPAs&lt;/p&gt;
&lt;p&gt;I built this site to offer a search engine for trees in San Francisco. View source to see how it hits a Datasette API in the background: &lt;a href=&quot;https://sf-trees.com/?q=palm&quot;&gt;https://sf-trees.com/?q=palm&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;The network pane running against sf-trees.com&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-66.jpg&quot; /&gt;&lt;p&gt;You can use the network pane to see that it‚Äôs running queries against a Datasette backend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;slide&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;Screenshot of view-source on sf-trees.com&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-67.jpg&quot; /&gt;&lt;p&gt;Here‚Äôs the JavaScript code which calls the API.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;slide&quot; readability=&quot;26.597701149425&quot;&gt;&lt;img alt=&quot;Screenshot of Datasette Canned Query documentation&quot; src=&quot;https://static.simonwillison.net/static/2020/octo-github/shot-69.jpg&quot; /&gt;&lt;p&gt;Q: What possibilities for data entry tools do the writable canned queries open up?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.datasette.io/en/stable/sql_queries.html#writable-canned-queries&quot;&gt;Writable canned queries&lt;/a&gt; are a relatively recent Datasette feature that allow administrators to configure a UPDATE/INSERT/DELETE query that can be called by users filling in forms or accessed via a JSON API.&lt;/p&gt;
&lt;p&gt;The idea is to make it easy to build backends that handle simple data entry in addition to serving read-only queries. It‚Äôs a feature with a lot of potential but so far I‚Äôve not used it for anything significant.&lt;/p&gt;
&lt;p&gt;Currently it can generate a VERY basic form (with single-line input values, similar to &lt;a href=&quot;https://latest.datasette.io/fixtures/neighborhood_search&quot;&gt;this search example&lt;/a&gt;) but I hope to expand it in the future to support &lt;a href=&quot;https://github.com/simonw/datasette/issues/1090&quot;&gt;custom form widgets&lt;/a&gt; via plugins for things like dates, map locations or autocomplete against other tables.&lt;/p&gt;
&lt;p&gt;Q: For the local version where you had a 1-line push to deploy a new datasette: how do you handle updates? Is there a similar 1-line update to update an existing deployed datasette?&lt;/p&gt;
&lt;p&gt;I deploy a brand new installation every time the data changes! This works great for data that only changes a few times a day. If I have a project that changes multiple times an hour I‚Äôll run it as a regular VPS instead rather than use a serverless hosting provider.&lt;/p&gt;
&lt;/div&gt;

</description>
<pubDate>Sat, 14 Nov 2020 04:07:15 +0000</pubDate>
<dc:creator>simonw</dc:creator>
<og:url>http://simonwillison.net/2020/Nov/14/personal-data-warehouses/</og:url>
<og:title>Personal Data Warehouses: Reclaiming Your Data</og:title>
<og:image>https://static.simonwillison.net/static/2020/octo-github/shot-1.jpg</og:image>
<og:type>article</og:type>
<og:description>I gave a talk yesterday about personal data warehouses for GitHub‚Äôs OCTO Speaker Series, focusing on my Datasette and Dogsheep projects. The video of the talk is now available, and ‚Ä¶</og:description>
<dc:language>en-gb</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://simonwillison.net/2020/Nov/14/personal-data-warehouses/</dc:identifier>
</item>
<item>
<title>Show HN: A Stargate in 140 chars of JavaScript</title>
<link>https://www.dwitter.net/d/20584</link>
<guid isPermaLink="true" >https://www.dwitter.net/d/20584</guid>
<description>
&lt;div class=&quot;dweet submit-box&quot;&gt;


&lt;div class=&quot;dark-section&quot; readability=&quot;7.5390946502058&quot;&gt;&lt;code class=&quot;function-wrap&quot;&gt;function u(t) {&lt;/code&gt;
&lt;form action=&quot;https://www.dwitter.net/dweet&quot; method=&quot;post&quot; readability=&quot;4.2224669603524&quot;&gt;

&lt;p&gt;
&lt;textarea autocorrect=&quot;off&quot; autocapitalize=&quot;off&quot; spellcheck=&quot;false&quot; name=&quot;code&quot; class=&quot;code-input&quot; rows=&quot;4&quot; id=&quot;editor&quot; oninput=&quot;this.style.height='auto';this.style.height=this.scrollHeight+'px';&quot;&gt;
c.width=1920 // clear the canvas
for(i=0;i&amp;lt;9;i++)
x.fillRect(400+i*100+S(t)*300,400,50,200) // draw 50x200 rects
&lt;/textarea&gt;&lt;/p&gt;
&lt;code class=&quot;function-wrap&quot;&gt;} //&lt;/code&gt;
&lt;p&gt;&lt;code class=&quot;function-wrap&quot;&gt;122/140&lt;/code&gt;&lt;/p&gt;
&lt;br/&gt;&lt;div class=&quot;dweet-changed&quot; readability=&quot;6.8910891089109&quot;&gt;&lt;p&gt;Please &lt;a href=&quot;https://www.dwitter.net/accounts/login/&quot;&gt;log in&lt;/a&gt; (or &lt;a href=&quot;https://www.dwitter.net/accounts/register/&quot;&gt;register&lt;/a&gt;) to post a dweet (copy-paste the code somewhere safe to save it meanwhile)&lt;/p&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;br/&gt;&lt;code class=&quot;submit-help&quot;&gt;u(t) is called 60 times per second. t: Elapsed time in seconds. S: Shorthand for Math.sin. C: Shorthand for Math.cos. T: Shorthand for Math.tan. R: Function that generates rgba-strings, usage ex.: R(255, 255, 255, 0.5) c: A 1920x1080 canvas. x: A 2D context for that canvas.&lt;/code&gt;&lt;/div&gt;
&lt;div class=&quot;dweet-wrapper&quot;&gt;
&lt;div class=&quot;dweet&quot;&gt;



&lt;br/&gt;&lt;div class=&quot;dark-section&quot; readability=&quot;7.8098471986418&quot;&gt;&lt;code class=&quot;function-wrap&quot;&gt;function u(t) {&lt;/code&gt;
&lt;form action=&quot;https://www.dwitter.net/d/20584/reply&quot; method=&quot;post&quot; readability=&quot;4.3900523560209&quot;&gt;

&lt;p&gt;
&lt;textarea autocorrect=&quot;off&quot; autocapitalize=&quot;off&quot; spellcheck=&quot;false&quot; name=&quot;code&quot; class=&quot;code-input&quot; rows=&quot;4&quot; oninput=&quot;this.style.height='auto';this.style.height=this.scrollHeight+'px';&quot;&gt;
eval(unescape(escape`©°Ø¨†®®∞Æ≠±©©Å¥™ÄΩúêπú†¨§†ΩùÄ∏õÅ©üê∏úÄ∂ùÄª™ê≠õêªÆÄÆ©°©´Å¨§°•®±¥öÅìö∞πù†¨•Ä´ùê¥õÅÉöÅç®ë¥™ÄÆ®ë¥®ëÆú†®§∞Ω™ê•ûê∑õëíõÅîüë©õ∞πù∞≠§†¨¨†ΩöÅìö°ìö±îö°îöê™ö†Æùê©ö†πöê™ú†∞õë≤ô†¥ùÄ¶ô°≤ü†≥ù†ø¨†ºùÄ≤ü±îõ±íû°ìõ±íû†±õÅ≤ü†≥ù†ø¨†º§†∫Æ†®ú∞©õ∞µöê©Æ†Ω´†Ωü°Æõê≠ô†¶†∞®•ÄØú†´§∞™•ÄØ§†´≠Ä™ûê©ö°ÉöÅîõ∞¥õë∫öÅÆöê™ú†©õë≤õ∞∂`.replace(/u../g,'')))
&lt;/textarea&gt;&lt;/p&gt;
&lt;p class=&quot;dweet-timestamp&quot;&gt;&lt;time datetime=&quot;2020-11-13 01:17&quot;&gt;Nov 13 2020 1:17 AM UTC&lt;/time&gt;&lt;/p&gt;
&lt;code class=&quot;function-wrap&quot;&gt;}//&lt;/code&gt;
&lt;p&gt;&lt;code class=&quot;function-wrap&quot;&gt;140/140&lt;/code&gt;&lt;/p&gt;
&lt;br/&gt;&lt;div class=&quot;dweet-changed&quot; readability=&quot;6.9333333333333&quot;&gt;&lt;p&gt;Please &lt;a href=&quot;https://www.dwitter.net/accounts/login/&quot;&gt;log in&lt;/a&gt; (or &lt;a href=&quot;https://www.dwitter.net/accounts/register/&quot;&gt;register&lt;/a&gt;) to post as a new dweet (copy-paste code somewhere safe to save it meanwhile).&lt;/p&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code id=&quot;submit-help&quot;&gt;u(t) is called 60 times per second. t: elapsed time in seconds. c: A 1920x1080 canvas. x: A 2D context for that canvas. S: Math.sin C: Math.cos T: Math.tan R: Generates rgba-strings, ex.: R(255, 255, 255, 0.5)&lt;/code&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 13 Nov 2020 23:12:17 +0000</pubDate>
<dc:creator>tomxor</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.dwitter.net/d/20584</dc:identifier>
</item>
<item>
<title>gping: Ping, but with a graph</title>
<link>https://github.com/orf/gping</link>
<guid isPermaLink="true" >https://github.com/orf/gping</guid>
<description>&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github.githubassets.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars0.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars1.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars2.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://avatars3.githubusercontent.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://github-cloud.s3.amazonaws.com&quot;/&gt;&lt;link rel=&quot;dns-prefetch&quot; href=&quot;https://user-images.githubusercontent.com/&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-K+2SY5WIogVf/13vJ9BeX4zVI7sQjuctb6bSHvfTYr6EjQSM0YWKa9kCnnlZYAbPazx/aK3+IfeU2Q8m0y3ePA==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/frameworks-2bed92639588a2055fff5def27d05e5f.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-+vE1jwFyeeB/OJsQ0SNmkX8SHwOyVfTi4bH4MJbnJxuzr7BOWmOVIdKLa+UxfbVJo6tX5Uo4xzT3EEkC+tDFVw==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/site-faf1358f017279e07f389b10d1236691.css&quot; type=&quot;text/css&quot;/&gt;&lt;link crossorigin=&quot;anonymous&quot; media=&quot;all&quot; integrity=&quot;sha512-Zxhh7C+KcFbqWUXADidvQ4JIB+REm2XgupIkCq+YhyngxKwhucQo+1FT3bjI8UbQdY7zx3IFkh/n1A1cwQwBDg==&quot; rel=&quot;stylesheet&quot; href=&quot;https://github.githubassets.com/assets/github-671861ec2f8a7056ea5945c00e276f43.css&quot; type=&quot;text/css&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;/&gt;&lt;title&gt;GitHub - orf/gping: Ping, but with a graph&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;Ping, but with a graph. Contribute to orf/gping development by creating an account on GitHub.&quot;/&gt;&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; href=&quot;/opensearch.xml&quot; title=&quot;GitHub&quot;/&gt;&lt;link rel=&quot;fluid-icon&quot; href=&quot;https://github.com/fluidicon.png&quot; title=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;fb:app_id&quot; content=&quot;1401488693436528&quot;/&gt;&lt;meta name=&quot;apple-itunes-app&quot; content=&quot;app-id=1477376905&quot;/&gt;&lt;meta name=&quot;twitter:image:src&quot; content=&quot;https://avatars3.githubusercontent.com/u/1027207?s=400&amp;amp;v=4&quot;/&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@github&quot;/&gt;&lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;/&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;orf/gping&quot;/&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;Ping, but with a graph. Contribute to orf/gping development by creating an account on GitHub.&quot;/&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://avatars3.githubusercontent.com/u/1027207?s=400&amp;amp;v=4&quot;/&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;GitHub&quot;/&gt;&lt;meta property=&quot;og:type&quot; content=&quot;object&quot;/&gt;&lt;meta property=&quot;og:title&quot; content=&quot;orf/gping&quot;/&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://github.com/orf/gping&quot;/&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Ping, but with a graph. Contribute to orf/gping development by creating an account on GitHub.&quot;/&gt;&lt;link rel=&quot;assets&quot; href=&quot;https://github.githubassets.com/&quot;/&gt;&lt;meta name=&quot;request-id&quot; content=&quot;BFB9:58BE:146F38D:1CE7BC8:5FB07DF1&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;html-safe-nonce&quot; content=&quot;fd229cae31ae68559bc5630b4af00c874c40b6e0176b10d5fdb5a64f2e3cef66&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-payload&quot; content=&quot;eyJyZWZlcnJlciI6Imh0dHA6Ly93d3cuZ29vZ2xlLmNvLnVrL3VybD9zYT10XHUwMDI2c291cmNlPXdlYlx1MDAyNmNkPTEiLCJyZXF1ZXN0X2lkIjoiQkZCOTo1OEJFOjE0NkYzOEQ6MUNFN0JDODo1RkIwN0RGMSIsInZpc2l0b3JfaWQiOiI0NjIzNDEwMTQ2ODc5NTAzODU3IiwicmVnaW9uX2VkZ2UiOiJpYWQiLCJyZWdpb25fcmVuZGVyIjoiaWFkIn0=&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;visitor-hmac&quot; content=&quot;c346bc2a22b587e203bd965c207ffab088f7103dae668cbdfe13e695bd3d785f&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;cookie-consent-required&quot; content=&quot;false&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;hovercard-subject-tag&quot; content=&quot;repository:44440501&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;github-keyboard-shortcuts&quot; content=&quot;repository&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;selected-link&quot; value=&quot;repo_source&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA&quot;/&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc&quot;/&gt;&lt;meta name=&quot;octolytics-host&quot; content=&quot;collector.githubapp.com&quot;/&gt;&lt;meta name=&quot;octolytics-app-id&quot; content=&quot;github&quot;/&gt;&lt;meta name=&quot;octolytics-event-url&quot; content=&quot;https://collector.githubapp.com/github-external/browser_event&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-ga_id&quot; content=&quot;&quot; class=&quot;js-octo-ga-id&quot;/&gt;&lt;meta name=&quot;analytics-location&quot; content=&quot;/&amp;lt;user-name&amp;gt;/&amp;lt;repo-name&amp;gt;&quot; data-pjax-transient=&quot;true&quot;/&gt;&lt;meta name=&quot;optimizely-datafile&quot; content=&quot;{&amp;quot;version&amp;quot;: &amp;quot;4&amp;quot;, &amp;quot;rollouts&amp;quot;: [], &amp;quot;typedAudiences&amp;quot;: [], &amp;quot;anonymizeIP&amp;quot;: true, &amp;quot;projectId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;variables&amp;quot;: [], &amp;quot;featureFlags&amp;quot;: [], &amp;quot;experiments&amp;quot;: [{&amp;quot;status&amp;quot;: &amp;quot;Running&amp;quot;, &amp;quot;audienceIds&amp;quot;: [], &amp;quot;variations&amp;quot;: [{&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18630402174&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;launchpad&amp;quot;}, {&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18866331456&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;control&amp;quot;}], &amp;quot;id&amp;quot;: &amp;quot;18651193356&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;_features_redesign_rollout&amp;quot;, &amp;quot;layerId&amp;quot;: &amp;quot;18645992876&amp;quot;, &amp;quot;trafficAllocation&amp;quot;: [{&amp;quot;entityId&amp;quot;: &amp;quot;18630402174&amp;quot;, &amp;quot;endOfRange&amp;quot;: 500}, {&amp;quot;entityId&amp;quot;: &amp;quot;18866331456&amp;quot;, &amp;quot;endOfRange&amp;quot;: 1000}, {&amp;quot;entityId&amp;quot;: &amp;quot;18630402174&amp;quot;, &amp;quot;endOfRange&amp;quot;: 5000}, {&amp;quot;entityId&amp;quot;: &amp;quot;18630402174&amp;quot;, &amp;quot;endOfRange&amp;quot;: 5500}, {&amp;quot;entityId&amp;quot;: &amp;quot;18866331456&amp;quot;, &amp;quot;endOfRange&amp;quot;: 10000}], &amp;quot;forcedVariations&amp;quot;: {&amp;quot;143327983.1601483920&amp;quot;: &amp;quot;launchpad&amp;quot;, &amp;quot;1955030087.1562868941&amp;quot;: &amp;quot;launchpad&amp;quot;, &amp;quot;1983887325.1550021416&amp;quot;: &amp;quot;launchpad&amp;quot;, &amp;quot;1947530619.1600461583&amp;quot;: &amp;quot;launchpad&amp;quot;}}, {&amp;quot;status&amp;quot;: &amp;quot;Running&amp;quot;, &amp;quot;audienceIds&amp;quot;: [], &amp;quot;variations&amp;quot;: [{&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19157301901&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;launchpad&amp;quot;}, {&amp;quot;variables&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19115494094&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;control&amp;quot;}], &amp;quot;id&amp;quot;: &amp;quot;19139621248&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;signup_prompt_launchpad&amp;quot;, &amp;quot;layerId&amp;quot;: &amp;quot;19159450734&amp;quot;, &amp;quot;trafficAllocation&amp;quot;: [{&amp;quot;entityId&amp;quot;: &amp;quot;19115494094&amp;quot;, &amp;quot;endOfRange&amp;quot;: 5000}, {&amp;quot;entityId&amp;quot;: &amp;quot;19157301901&amp;quot;, &amp;quot;endOfRange&amp;quot;: 10000}], &amp;quot;forcedVariations&amp;quot;: {&amp;quot;262350301.1605284875&amp;quot;: &amp;quot;launchpad&amp;quot;, &amp;quot;550830608.1557172966&amp;quot;: &amp;quot;launchpad&amp;quot;}}], &amp;quot;audiences&amp;quot;: [{&amp;quot;conditions&amp;quot;: &amp;quot;[\&amp;quot;or\&amp;quot;, {\&amp;quot;match\&amp;quot;: \&amp;quot;exact\&amp;quot;, \&amp;quot;name\&amp;quot;: \&amp;quot;$opt_dummy_attribute\&amp;quot;, \&amp;quot;type\&amp;quot;: \&amp;quot;custom_attribute\&amp;quot;, \&amp;quot;value\&amp;quot;: \&amp;quot;$opt_dummy_value\&amp;quot;}]&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;$opt_dummy_audience&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Optimizely-Generated Audience for Backwards Compatibility&amp;quot;}], &amp;quot;groups&amp;quot;: [], &amp;quot;attributes&amp;quot;: [{&amp;quot;id&amp;quot;: &amp;quot;16822470375&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;user_id&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;17143601254&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;spammy&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18175660309&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;organization_plan&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;18813001570&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;is_logged_in&amp;quot;}, {&amp;quot;id&amp;quot;: &amp;quot;19073851829&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;geo&amp;quot;}], &amp;quot;botFiltering&amp;quot;: false, &amp;quot;accountId&amp;quot;: &amp;quot;16737760170&amp;quot;, &amp;quot;events&amp;quot;: [{&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;17911811441&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;hydro_click.dashboard.teacher_toolbox_cta&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18124116703&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organizations.complete_sign_up&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18145892387&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;no_metric.tracked_outside_of_optimizely&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18178755568&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.add_repo&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18180553241&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.repository_imports.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18186103728&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.help.learn_more_about_repository_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18188530140&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;test_event.do_not_use_in_production&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18191963644&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.transfer_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18195612788&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.import_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18210945499&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.invite_members&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18211063248&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.empty_org_repo_cta.create_repository&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18215721889&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.update_profile&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18224360785&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.org_onboarding_checklist.dismiss&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18234832286&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_activation.complete&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18252392383&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_repository.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18257551537&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.org_member_invitation.create&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18259522260&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;submit.organization_profile.update&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18564603625&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18568612016&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_sign_in_click&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18572592540&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_name&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18574203855&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18582053415&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_select_organization&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18589463420&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591323364&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_create_first_classroom&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18591652321&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.classroom_grant_access&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18607131425&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;view.classroom_creation&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;18831680583&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;upgrade_account_plan&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [&amp;quot;19139621248&amp;quot;], &amp;quot;id&amp;quot;: &amp;quot;19064064515&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.signup&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19075373687&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.view_account_billing_page&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [&amp;quot;19139621248&amp;quot;], &amp;quot;id&amp;quot;: &amp;quot;19077355841&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.dismiss_signup_prompt&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19079713938&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.contact_sales&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19120963070&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.compare_account_plans&amp;quot;}, {&amp;quot;experimentIds&amp;quot;: [], &amp;quot;id&amp;quot;: &amp;quot;19151690317&amp;quot;, &amp;quot;key&amp;quot;: &amp;quot;click.upgrade_account_cta&amp;quot;}], &amp;quot;revision&amp;quot;: &amp;quot;319&amp;quot;}&quot;/&gt;&lt;meta name=&quot;hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;user-login&quot; content=&quot;&quot;/&gt;&lt;meta name=&quot;expected-hostname&quot; content=&quot;github.com&quot;/&gt;&lt;meta name=&quot;enabled-features&quot; content=&quot;MARKETPLACE_PENDING_INSTALLATIONS&quot;/&gt;&lt;meta http-equiv=&quot;x-pjax-version&quot; content=&quot;cd350aa16ef661d633b69b0a2d8f6f2d0950ea7a72e47a1b1a701cbf0c11eb5c&quot;/&gt;&lt;link href=&quot;https://github.com/orf/gping/commits/master.atom&quot; rel=&quot;alternate&quot; title=&quot;Recent Commits to gping:master&quot; type=&quot;application/atom+xml&quot;/&gt;&lt;meta name=&quot;go-import&quot; content=&quot;github.com/orf/gping git https://github.com/orf/gping.git&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_id&quot; content=&quot;1027207&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-user_login&quot; content=&quot;orf&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_id&quot; content=&quot;44440501&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_nwo&quot; content=&quot;orf/gping&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_public&quot; content=&quot;true&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_is_fork&quot; content=&quot;false&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_id&quot; content=&quot;44440501&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_network_root_nwo&quot; content=&quot;orf/gping&quot;/&gt;&lt;meta name=&quot;octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown&quot; content=&quot;false&quot;/&gt;&lt;link rel=&quot;canonical&quot; href=&quot;https://github.com/orf/gping&quot; data-pjax-transient=&quot;&quot;/&gt;&lt;meta name=&quot;browser-stats-url&quot; content=&quot;https://api.github.com/_private/browser/stats&quot;/&gt;&lt;meta name=&quot;browser-errors-url&quot; content=&quot;https://api.github.com/_private/browser/errors&quot;/&gt;&lt;meta name=&quot;browser-optimizely-client-errors-url&quot; content=&quot;https://api.github.com/_private/browser/optimizely_client/errors&quot;/&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;https://github.githubassets.com/pinned-octocat.svg&quot; color=&quot;#000000&quot;/&gt;&lt;link rel=&quot;alternate icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/png&quot; href=&quot;https://github.githubassets.com/favicons/favicon.png&quot;/&gt;&lt;link rel=&quot;icon&quot; class=&quot;js-site-favicon&quot; type=&quot;image/svg+xml&quot; href=&quot;https://github.githubassets.com/favicons/favicon.svg&quot;/&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#1e2327&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/manifest.json&quot; crossorigin=&quot;use-credentials&quot;/&gt;&lt;/head&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot; readability=&quot;38.260025873221&quot;&gt;


&lt;div data-pjax-replace=&quot;&quot; id=&quot;js-flash-container&quot;&gt;
&lt;div class=&quot;flash flash-full {{ className }}&quot;&gt;
&lt;div class=&quot; px-2&quot;&gt;
&lt;p&gt;{{ message }}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;application-main&quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
&lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
&lt;div class=&quot;bg-gray-light pt-3 hide-full-screen mb-5&quot;&gt;

&lt;div class=&quot;d-block d-md-none mb-2 px-3 px-md-4 px-lg-5&quot;&gt;
&lt;p class=&quot;f4 mb-3&quot;&gt;Ping, but with a graph&lt;/p&gt;



&lt;/div&gt;
&lt;nav aria-label=&quot;Repository&quot; data-pjax=&quot;#js-repo-pjax-container&quot; class=&quot;js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5 bg-gray-light&quot;&gt;
&lt;/nav&gt;&lt;/div&gt;
&lt;div class=&quot;container-xl clearfix new-discussion-timeline px-3 px-md-4 px-lg-5&quot;&gt;
&lt;div class=&quot;repository-content&quot;&gt;

&lt;div class=&quot;js-control signup-prompt p-4 text-center mb-4 rounded-1&quot; readability=&quot;31.129518072289&quot;&gt;
&lt;div class=&quot;position-relative&quot; readability=&quot;9.578313253012&quot;&gt;&lt;button type=&quot;button&quot; class=&quot;position-absolute top-0 right-0 btn-link link-gray&quot; data-action=&quot;click:signup-prompt#dismiss&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Dismiss, text:dismiss&quot; data-optimizely-event=&quot;click.dismiss_signup_prompt, 1618255646.1605402097&quot;&gt;Dismiss&lt;/button&gt;
&lt;h3 class=&quot;pt-2&quot;&gt;Join GitHub today&lt;/h3&gt;
&lt;p class=&quot;col-6 mx-auto&quot;&gt;GitHub is home to over 50 million developers working together to host and review code, manage projects, and build software together.&lt;/p&gt;
&lt;a class=&quot;btn btn-primary&quot; data-ga-click=&quot;(Logged out) Sign up prompt, clicked Sign up, text:sign-up&quot; data-optimizely-event=&quot;click.signup, 1618255646.1605402097&quot; data-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;authentication.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;location_in_page&amp;quot;:&amp;quot;files signup prompt&amp;quot;,&amp;quot;repository_id&amp;quot;:null,&amp;quot;auth_type&amp;quot;:&amp;quot;SIGN_UP&amp;quot;,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/orf/gping&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-hydro-click-hmac=&quot;8b192c4fb6a3b3f9edcd566ee89fb9ae16d369288c3bcdc1345beb532f5d71ce&quot; href=&quot;https://github.com/join?source=prompt-code&amp;amp;source_repo=orf%2Fgping&quot;&gt;Sign up&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;js-launchpad position-relative p-4 p-lg-5 mb-4&quot; hidden=&quot;&quot;&gt;
&lt;div class=&quot;d-sm-flex&quot; readability=&quot;6.9618834080717&quot;&gt;
&lt;div class=&quot;col-sm-8 col-md-9 col-lg-8&quot; readability=&quot;9.2825112107623&quot;&gt;
&lt;h3 class=&quot;h2 lh-condensed mt-sm-1 mt-lg-0&quot;&gt;GitHub is where the world builds software&lt;/h3&gt;
&lt;p class=&quot;f4 text-gray mt-2 mb-3&quot;&gt;Millions of developers and companies build, ship, and maintain their software on GitHub ‚Äî the largest and most advanced development platform in the world.&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;gutter-condensed gutter-lg flex-column flex-md-row d-flex&quot;&gt;
&lt;div class=&quot;flex-shrink-0 col-12 col-md-9 mb-4 mb-md-0&quot; readability=&quot;3.7094430992736&quot;&gt;

&lt;div class=&quot;Box mb-3&quot; readability=&quot;2.675&quot;&gt;

&lt;h2 id=&quot;files&quot; class=&quot;sr-only&quot;&gt;Files&lt;/h2&gt;
&lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;https://github.com/orf/gping/tree/31794778471269fcf9ed61e32a8cd437d61e88f6&quot;&gt;Permalink&lt;/a&gt;
&lt;p&gt;Failed to load latest commit information.&lt;/p&gt;
&lt;div class=&quot;js-details-container Details&quot;&gt;
&lt;div role=&quot;grid&quot; aria-labelledby=&quot;files&quot; class=&quot;Details-content--hidden-not-important js-navigation-container js-active-navigation-container d-md-block&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;sr-only&quot; role=&quot;row&quot;&gt;
&lt;p&gt;Type&lt;/p&gt;
&lt;p&gt;Name&lt;/p&gt;
&lt;p&gt;Latest commit message&lt;/p&gt;
&lt;p&gt;Commit time&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 14, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 14, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 14, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 13, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 13, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 13, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 14, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;div role=&quot;row&quot; class=&quot;Box-row Box-row--focus-gray py-2 d-flex position-relative js-navigation-item&quot;&gt;



&lt;p&gt;Nov 13, 2020&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;readme&quot; class=&quot;Box md js-code-block-container Box--responsive&quot;&gt;

&lt;div class=&quot;Box-body px-5 pb-5&quot; readability=&quot;31.197204968944&quot;&gt;
&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot; readability=&quot;32.883540372671&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://crates.io/crates/gping&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/95fa52146408deef81f421e9a085719faa3fc0f691aa91fc71083417d23de302/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f6770696e672e737667&quot; alt=&quot;Crates.io&quot; data-canonical-src=&quot;https://img.shields.io/crates/v/gping.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/orf/gping/actions&quot;&gt;&lt;img src=&quot;https://github.com/orf/gping/workflows/CI/badge.svg&quot; alt=&quot;Actions Status&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ping, but with a graph.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/orf/gping/blob/master/images/readme-example.gif&quot;&gt;&lt;img src=&quot;https://github.com/orf/gping/raw/master/images/readme-example.gif&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;FYI:&lt;/strong&gt; The old Python version can be found under the &lt;a href=&quot;https://github.com/orf/gping/tree/python&quot;&gt;&lt;code&gt;python&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Homebrew (MacOS + Linux)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;brew tap orf/brew&lt;/code&gt;, then &lt;code&gt;brew install gping&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Binaries (Windows)&lt;/h2&gt;
&lt;p&gt;Download the latest release from &lt;a href=&quot;https://github.com/orf/gping/releases&quot;&gt;the github releases page&lt;/a&gt;. Extract it and move it to a directory on your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Cargo&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cargo install gping&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Just run &lt;code&gt;gping [host]&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;$ gping --help
gping 0.1.0
Ping, but with a graph.

USAGE:
    gping &amp;lt;host&amp;gt;

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

ARGS:
    &amp;lt;host&amp;gt;    Host or IP to ping
&lt;/code&gt;
&lt;/pre&gt;&lt;/article&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;flex-shrink-0 col-12 col-md-3&quot;&gt;
&lt;div class=&quot;BorderGrid BorderGrid--spacious&quot; data-pjax=&quot;&quot;&gt;
&lt;div class=&quot;BorderGrid-row hide-sm hide-md&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot;&gt;
&lt;h2 class=&quot;mb-3 h4&quot;&gt;About&lt;/h2&gt;
&lt;p class=&quot;f4 mt-3&quot;&gt;Ping, but with a graph&lt;/p&gt;
&lt;h3 class=&quot;sr-only&quot;&gt;Resources&lt;/h3&gt;

&lt;h3 class=&quot;sr-only&quot;&gt;License&lt;/h3&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;BorderGrid-row&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot;&gt;


&lt;div class=&quot;ml-2 min-width-0&quot;&gt;
&lt;p&gt;&lt;span class=&quot;css-truncate css-truncate-target text-bold mr-2&quot;&gt;v0.1.6&lt;/span&gt; &lt;span title=&quot;Label: Latest&quot; class=&quot;Label Label--green flex-shrink-0&quot;&gt;Latest&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Nov 13, 2020&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;BorderGrid-row&quot;&gt;
&lt;div class=&quot;BorderGrid-cell&quot;&gt;

&lt;p&gt;No packages published&lt;br/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can‚Äôt perform that action at this time.&lt;/p&gt;
&lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;&lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;https://github.com/orf/gping&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt; &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;https://github.com/orf/gping&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;&lt;/div&gt;
&lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm&quot; open=&quot;&quot;&gt;
&lt;/details&gt;
&lt;div class=&quot;js-cookie-consent-banner&quot; hidden=&quot;&quot;&gt;
&lt;div class=&quot;hx_cookie-banner p-2 p-sm-3 p-md-4&quot;&gt;
&lt;div class=&quot;Box hx_cookie-banner-box box-shadow-medium mx-auto&quot;&gt;
&lt;div class=&quot;Box-body border-0 py-0 px-3 px-md-4&quot;&gt;
&lt;div class=&quot;js-main-cookie-banner hx_cookie-banner-main&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;d-md-flex flex-items-center py-3&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;f5 flex-1 mb-3 mb-md-0&quot;&gt;We use &lt;span class=&quot;text-bold&quot;&gt;optional&lt;/span&gt; third-party analytics cookies to understand how you use GitHub.com so we can build better products. &lt;span class=&quot;btn-link js-cookie-consent-learn-more&quot;&gt;Learn more&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;button class=&quot;btn btn-outline flex-1 mr-1 mx-sm-1 m-md-0 ml-md-2 js-cookie-consent-accept&quot;&gt;Accept&lt;/button&gt; &lt;button class=&quot;btn btn-outline flex-1 ml-1 m-md-0 ml-md-2 js-cookie-consent-reject&quot;&gt;Reject&lt;/button&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;js-cookie-details hx_cookie-banner-details&quot; hidden=&quot;&quot; readability=&quot;7.085201793722&quot;&gt;
&lt;div class=&quot;d-md-flex flex-items-center py-3&quot; readability=&quot;9.3436293436293&quot;&gt;
&lt;p class=&quot;f5 flex-1 mb-2 mb-md-0&quot;&gt;We use &lt;span class=&quot;text-bold&quot;&gt;optional&lt;/span&gt; third-party analytics cookies to understand how you use GitHub.com so we can build better products.&lt;br/&gt;You can always update your selection by clicking &lt;span class=&quot;text-bold&quot;&gt;Cookie Preferences&lt;/span&gt; at the bottom of the page. For more information, see our &lt;a href=&quot;https://docs.github.com/en/free-pro-team@latest/github/site-policy/github-privacy-statement&quot;&gt;Privacy Statement&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;d-md-flex flex-items-center py-3 border-top&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;f5 flex-1 mb-2 mb-md-0&quot; readability=&quot;8.2857142857143&quot;&gt;
&lt;h5 class=&quot;mb-1&quot;&gt;Essential cookies&lt;/h5&gt;
&lt;p class=&quot;f6 mb-md-0&quot;&gt;We use essential cookies to perform essential website functions, e.g. they're used to log you in. &lt;a href=&quot;https://docs.github.com/en/github/site-policy/github-subprocessors-and-cookies&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;h5 class=&quot;text-blue&quot;&gt;Always active&lt;/h5&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;d-md-flex flex-items-center py-3 border-top&quot; readability=&quot;7.2011952191235&quot;&gt;
&lt;div class=&quot;f5 flex-1 mb-2 mb-md-0&quot; readability=&quot;9.57805907173&quot;&gt;
&lt;h5 class=&quot;mb-1&quot;&gt;Analytics cookies&lt;/h5&gt;
&lt;p class=&quot;f6 mb-md-0&quot;&gt;We use analytics cookies to understand how you use our websites so we can make them better, e.g. they're used to gather information about the pages you visit and how many clicks you need to accomplish a task. &lt;a href=&quot;https://docs.github.com/en/github/site-policy/github-subprocessors-and-cookies&quot;&gt;Learn more&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;text-right&quot;&gt;
&lt;p&gt;&lt;button class=&quot;btn btn-outline BtnGroup-item js-accept-analytics-cookies&quot; type=&quot;button&quot;&gt;Accept&lt;/button&gt; &lt;button class=&quot;btn btn-outline BtnGroup-item js-reject-analytics-cookies&quot; type=&quot;button&quot;&gt;Reject&lt;/button&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;button class=&quot;btn btn-primary js-save-cookie-preferences&quot; type=&quot;button&quot; disabled=&quot;disabled&quot;&gt;Save preferences&lt;/button&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Fri, 13 Nov 2020 22:03:02 +0000</pubDate>
<dc:creator>orf</dc:creator>
<og:image>https://avatars3.githubusercontent.com/u/1027207?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>orf/gping</og:title>
<og:url>https://github.com/orf/gping</og:url>
<og:description>Ping, but with a graph. Contribute to orf/gping development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/orf/gping</dc:identifier>
</item>
</channel>
</rss>