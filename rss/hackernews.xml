<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>China harvested organs from political prisoners, says tribunal</title>
<link>https://www.bmj.com/content/363/bmj.k5250</link>
<guid isPermaLink="true" >https://www.bmj.com/content/363/bmj.k5250</guid>
<description>&lt;div class=&quot;contributors&quot;&gt;
&lt;ol class=&quot;contributor-list&quot; id=&quot;contrib-group-1&quot;&gt;&lt;li class=&quot;last&quot; id=&quot;contrib-1&quot;&gt;&lt;span class=&quot;name&quot;&gt;Richard Hurley&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;ol class=&quot;affiliation-list&quot;&gt;&lt;li class=&quot;aff&quot;&gt;
&lt;address&gt;The BMJ&lt;/address&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;p id=&quot;p-1&quot;&gt;Forced harvesting of organs from prisoners of conscience in China has been “substantial,” says an interim judgment of an independent “people’s tribunal” set up to determine whether the country’s transplantation practices breached international criminal law.&lt;/p&gt;
&lt;p id=&quot;p-2&quot;&gt;The former English judge Geoffrey Nice QC, the tribunal’s chair, said after a three day evidence gathering session, “We, the tribunal members, are all certain, unanimously, beyond reasonable doubt, that in China forced organ harvesting from prisoners of conscience has been practised for a substantial period of time, involving a very substantial number of victims . . . by state organised or approved organisations or individuals.”&lt;/p&gt;
&lt;p id=&quot;p-3&quot;&gt;The tribunal found that the practices breached the Universal Declaration of Human Rights, including articles 3 (right to life), 6 (recognition as a person before the law), 7 (equality before the law), 9 (not to be subject to arbitrary arrest), 10 (full equality to a fair and public …&lt;/p&gt;
</description>
<pubDate>Thu, 13 Dec 2018 18:48:30 +0000</pubDate>
<dc:creator>crunchiebones</dc:creator>
<og:title>China harvested organs from political prisoners on substantial scale, says tribunal</og:title>
<og:url>https://www.bmj.com/content/363/bmj.k5250</og:url>
<og:image>https://www.bmj.com/sites/default/files/highwire/bmj/363/8180.cover-source.jpg</og:image>
<og:description>Forced harvesting of organs from prisoners of conscience in China has been “substantial,” says an interim judgment of an independent “people’s tribunal” set up to determine whether the country’s transplantation practices breached international criminal law. The former English judge Geoffrey Nice QC, the tribunal’s chair, said after a three day evidence gathering session, “We, the tribunal members, are all certain, unanimously, beyond reasonable doubt, that in China forced organ harvesting from prisoners of conscience has been practised for a substantial period of time, involving a very substantial number of victims . . . by state organised or approved organisations or individuals.” The tribunal found that the practices breached the Universal Declaration of Human Rights, including articles 3 (right to life), 6 (recognition as a person before the law), 7 (equality before the law), 9 (not to be subject to arbitrary arrest), 10 (full equality to a fair and public …</og:description>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bmj.com/content/363/bmj.k5250</dc:identifier>
</item>
<item>
<title>Virgin Galactic successfully reaches space</title>
<link>https://www.bbc.com/news/business-46550862</link>
<guid isPermaLink="true" >https://www.bbc.com/news/business-46550862</guid>
<description>&lt;figure class=&quot;media-landscape has-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;Virgin Galactic plane&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/1E38/production/_104763770_vg_third_powered_flight_-_take_off_hd_ready.jpg&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Virgin Galactic&lt;/span&gt;
                
            &lt;/span&gt;
            
            &lt;figcaption class=&quot;media-caption&quot;&gt;&lt;span class=&quot;off-screen&quot;&gt;Image caption&lt;/span&gt;
                &lt;span class=&quot;media-caption__text&quot;&gt;
                    Virgin Galactic's plane will be carried to a height of 12,000m before its rocket ignites
                &lt;/span&gt;
            &lt;/figcaption&gt;&lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;The latest test flight by Sir Richard Branson's Virgin Galactic successfully rocketed to the edge of space and back. &lt;/p&gt;&lt;p&gt;The firm's SpaceShipTwo passenger rocket ship reached a height of 82.7km, beyond the altitude at which US agencies have awarded astronaut wings.&lt;/p&gt;&lt;p&gt;It marked the plane's fourth test flight and followed earlier setbacks in the firm's space programme.&lt;/p&gt;&lt;p&gt;Sir Richard is in a race with Elon Musk and Jeff Bezos to send the first fee-paying passengers into space.&lt;/p&gt;&lt;p&gt;He founded the commercial spaceflight company in 2004, shortly after Mr Musk started SpaceX and Jeff Bezos established Blue Origin.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/science-environment-45494204&quot; class=&quot;story-body__link&quot;&gt;Champagne for space tourists takes flight&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/business-45919650&quot; class=&quot;story-body__link&quot;&gt;The billionaires fuelling a space race&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;In 2008, Virgin Galactic first promised sub-orbital spaceflight trips for tourists would be taking place &quot;within 18 months&quot;. It has since regularly made similar promises to have space flights airborne in the near future.&lt;/p&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;figure class=&quot;media-landscape no-caption full-width&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                
                
                
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p&gt;But delays and a fatal crash in 2014 prevented Sir Richard's original ambitions.&lt;/p&gt;&lt;p&gt;On Thursday, the SpaceShipTwo passenger rocket ship took off from the Mojave Desert in California.&lt;/p&gt;&lt;p&gt;The company said the space ship's motor burned for 60 seconds, travelling at 2.9 times the speed of sound as it gained height.&lt;/p&gt;&lt;p&gt;The rocket carried two pilots and a mannequin named Annie as a stand-in passenger, as well as four research experiments for NASA.  &lt;/p&gt;&lt;p&gt;&quot;Today we have shown Virgin Galactic can open space to the world,&quot; Sir Richard said.&lt;/p&gt;&lt;p&gt;The US government has awarded astronaut wings to pilots who ventured farther than roughly 80km beyond earth's surface.&lt;/p&gt;&lt;p&gt;But Thursday's flight did not breach the 100km Karman Line, which many organisations use to resolve debates about where space begins. &lt;/p&gt;&lt;p&gt;While the trip marked a milestone for Virgin Galactic, the firm's rivals have already ventured farther - albeit without humans on board.&lt;/p&gt;&lt;p&gt;SpaceX, in partnership with NASA, is planning crewed missions for early next year. Mr Bezos has also said Blue Origin plans to send its first crew to space in 2019. &lt;/p&gt;&lt;p&gt;Virgin Galactic, which is charging $250,000 for a 90-minute flight, has said more than 600 people have bought tickets or put down deposits for an eventual voyage.  &lt;/p&gt;
            </description>
<pubDate>Thu, 13 Dec 2018 17:33:51 +0000</pubDate>
<dc:creator>adzicg</dc:creator>
<og:title>Branson's Virgin reaches edge of space</og:title>
<og:type>article</og:type>
<og:description>The latest test flight by Sir Richard Branson's Virgin Galactic makes it to the edge of space and back.</og:description>
<og:url>https://www.bbc.com/news/business-46550862</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/1E38/production/_104763770_vg_third_powered_flight_-_take_off_hd_ready.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.com/news/business-46550862</dc:identifier>
</item>
<item>
<title>Robinhood launches 3% checking account</title>
<link>https://techcrunch.com/2018/12/13/robinhood-free-checking-and-savings-accounts/</link>
<guid isPermaLink="true" >https://techcrunch.com/2018/12/13/robinhood-free-checking-and-savings-accounts/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;Robinhood is undercutting the big banks by forgoing brick-and-mortar branches with its new zero-fee checking and savings account features. With no overdraft or monthly fees, a juicy 3 percent interest rate and a claim of more U.S. ATMs than the five biggest banks combined, Robinhood is using the scalability of software to pass impressive perks on to customers. &lt;span&gt;The free stock trading app already used that approach to attack brokers like E*Trade and Charles Schwab that charge a per-trade fee. Now it’s breaking into the larger financial services market with a model that could put the squeeze on Wells Fargo, Chase and Bank of America.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Today Robinhood &lt;a href=&quot;https://blog.robinhood.com/news/2018/12/13/introducing-robinhood-checking-amp-savings&quot;&gt;launches&lt;/a&gt; checking and savings accounts in the U.S. with a Mastercard debit card issued through Sutton Bank that starts shipping December 18th. Users earn 3 percent on all the dough they keep with Robinhood, yet there’s no minimum balance or fees for monthly membership, overdrafts, foreign transactions or card replacements. That’s a pretty sweet deal compared to the other leading banks that all charge for some of that or offer much lower interest rates. The trade-off is that while customers get 24/7 live text chat support, they won’t be able to walk into a local bank branch. Users who want early access can &lt;a href=&quot;https://checking.robinhood.com/&quot;&gt;sign up here&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-1758478&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/12/RH_Checking_Savings_Phone-Grid.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;453&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Robinhood expects to turn a profit thanks to a lean 300-employee operation, earning a margin on investing your money in U.S. treasuries and a revenue share with Mastercard on interchange fees charged to merchants when you swipe. The launch could be critical to keeping Robinhood worthy of its $5.6 billion valuation from when it took a $363 million Series D in March just a year after raising at a $1.3 billion valuation. The 6 million-user app invested in&lt;/span&gt;&lt;span&gt; launching a free cryptocurrency trading exchange early this year only to see coin prices plummet and mainstream interest fall off. But with banks hammering users with surprise fees and mediocre user experience, there’s a huge opportunity for a mobile-first startup to disrupt how we store money.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;“Brick-and-mortar locations are costly. Our goal with this product was to build a completely digital experience so we can reduce our overhead so we can pass more of the value back to customers,” Robinhood co-CEO Baiju Bhatt tells me. [Disclosure: I know Bhatt and co-CEO Vlad Tenev from college.] “Saving accounts in the U.S. pay on average 0.09 percent and we all know the banks are making far more than that from the deposits. With Robinhood you earn 3 percent off all of your money. Mental math is hard, so if you look at the median U.S. household that has about $8,000 in liquid savings, they’d earn&lt;span class=&quot;Apple-converted-space&quot;&gt; &lt;/span&gt;$240 a year.”&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-1758506&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/12/Robinhood-Checking-Savings-Fee-Comparison-Chart.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;327&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Robinhood will be sending invites to users in January for the new feature that they can use exclusively or alongside their existing bank. Anyone approved to use Robinhood’s stock brokerage is eligible, but users can also sign up directly for checking and savings with no obligation to trade stocks. Robinhood claims signing up won’t impact your credit score. Users get to customize a Robinhood-branded debit card that’s accepted wherever Mastercard is. Because the feature is run within Robinhood’s brokerage, it’s ensured by the SIPC instead of the FDIC, but you still get the same insurance on up to $250,000 cash.&lt;/p&gt;
&lt;p&gt;One of the most appealing features of Robinhood checking and savings is getting access to 75,000 free-to-use ATMs in places like Target, Walgreens and 7-Eleven. Users won’t be able to tell just by looking at an ATM whether it’s in the network, but the Robinhood app features a map for finding the nearest one. You can deposit checks via Robinhood’s app too, and if you need to send a check, you can just tell the startup how much to deliver to whom and it will mail the check for you.&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;“These fees like overdraft fees — they’re not fees millionaires are paying. It’s ordinary folks paying. It’s actually more expensive for those that have less money and it’s cheaper for those that have more money. We think that isn’t right and we think that’s bad business,” Bhatt gripes. Because Robinhood built its own clearing house for moving money, and it lacks the overhead of traditional banks, it’s able to save enough money to make its no-fee structure work. “We want to build a financial services company that democratizes America’s financial system.”&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;aligncenter size-large wp-image-1758489&quot; src=&quot;https://techcrunch.com/wp-content/uploads/2018/12/Robinhood-debit-card.png?w=680&quot; alt=&quot;&quot; width=&quot;680&quot; height=&quot;453&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Robinhood will have to convince users it’s worthy of their trust, as a security breach could be disastrous. There’s also the question of whether people are ready to ditch their bank branch. “Behaviors about and going into a branch are definitely changing,” says Bhatt. My biggest concern was not having any consistency in who I talk to when I need banking help. Bhatt tells me the company plans to roll out more personalized customer service features in the coming months, but there may always be edge cases that make the lack of in-person support annoying.&lt;/p&gt;
&lt;p&gt;Getting into banking could open a lucrative revenue stream for Robinhood as it charts its path to IPO. The startup &lt;a href=&quot;https://techcrunch.com/2018/11/27/robinhood-hires-20-year-amazon-veteran-to-cfo-role-as-high-flying-startup-eyes-ipo/&quot;&gt;recently hired Jason Warnick&lt;/a&gt;, a 20-year veteran of Amazon, to be its CFO and get it prepped to go public. Wall Street will want to see a more robust business that’s not as vulnerable to foes like stock brokerage Charles Schwab, which is already lowering fees to stay competitive with Robinhood. Not only will checking and savings see users move more money into their Robinhood accounts that it can invest to earn a profit, but it also poises the startup to tackle more financial services in the future. More lucrative products like loans could make paying 3 percent much easier for Robinhood to handle.&lt;/p&gt;

</description>
<pubDate>Thu, 13 Dec 2018 15:31:09 +0000</pubDate>
<dc:creator>ccwilson10</dc:creator>
<og:title>Robinhood launches no-fee checking/savings with Mastercard &amp; the most ATMs</og:title>
<og:description>Robinhood is undercutting the big banks by forgoing brick-and-mortar branches with its new zero-fee checking and savings account features. With no overdraft or monthly fees, a juicy 3 percent interest rate and a claim of more U.S. ATMs than the five biggest banks combined, Robinhood is using the sc…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2018/12/Robinhood-Checking-and-savings.png?w=740</og:image>
<og:url>http://social.techcrunch.com/2018/12/13/robinhood-free-checking-and-savings-accounts/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2018/12/13/robinhood-free-checking-and-savings-accounts/</dc:identifier>
</item>
<item>
<title>Don&amp;#039;t Post Evergreen Content on Medium</title>
<link>https://bts.nomadgate.com/medium-evergreen-content</link>
<guid isPermaLink="true" >https://bts.nomadgate.com/medium-evergreen-content</guid>
<description>&lt;p&gt;Over the last few years, I've seen more and more blogs move over completely or partially to Medium. And while a few years ago that might have seemed like a good idea, that's definitely not the case anymore.&lt;/p&gt;
&lt;p&gt;Particularly for &lt;em&gt;evergreen&lt;/em&gt; content.&lt;/p&gt;
&lt;p&gt;Here's why.&lt;/p&gt;
&lt;h2 id=&quot;my-history-with-medium&quot;&gt;My history with Medium&lt;/h2&gt;
&lt;p&gt;In 2015, &lt;a href=&quot;https://nomadgate.com&quot;&gt;Nomad Gate&lt;/a&gt; was born as a side project—on Medium. To benefit from Medium's strong domain authority, I decided to not use a custom domain on Medium but rather hosted the site on &lt;em&gt;medium.com/nomad-gate&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I wrote three long-form, in-depth articles that summer, and before long, two of them started to see a good amount of traffic every month. One was about the Estonian e-Residency program and the other about the world's best banks for nomads and frequent international travelers.&lt;/p&gt;
&lt;p&gt;While I stopped writing new articles for nearly two years after joining &lt;a href=&quot;https://teleport.org&quot;&gt;Teleport&lt;/a&gt;, I did continue to update those articles based on reader feedback and tips. I would also update them whenever banks changed their offerings and as the e-Residency program evolved.&lt;/p&gt;
&lt;p&gt;When I picked up the Nomad Gate project again in the spring of 2017, I decided to host the site myself on &lt;em&gt;nomadgate.com&lt;/em&gt;, using the static site generator &lt;em&gt;Jekyll&lt;/em&gt; to build the site.&lt;/p&gt;
&lt;p&gt;All articles that I wrote from this point onwards were posted on my own site, but I left the old articles on Medium for the time being.&lt;/p&gt;
&lt;p&gt;Although I believed this would give me more flexibility to grow Nomad Gate, I was far from certain I was making the right decision. After all, how would articles I posted on a new domain with no domain authority be able to rank well on Google?&lt;/p&gt;
&lt;p&gt;Luckily, it was the best decision I could have made.&lt;/p&gt;
&lt;h2 id=&quot;why-nomad-gate-left-medium&quot;&gt;Why Nomad Gate left Medium&lt;/h2&gt;
&lt;p&gt;Most of the articles on Nomad Gate are potentially &lt;em&gt;evergreen&lt;/em&gt;, at least as long as I regularly keep them up to date. The main issue evergreen content is facing on Medium is that you can't update the date of an article.&lt;/p&gt;
&lt;p&gt;Why is this important?&lt;/p&gt;
&lt;p&gt;SEO, of course.&lt;/p&gt;
&lt;p&gt;Not only does Google prefer to feature more recent content in its search results, but users are also more likely to click an article with a recent date listed next to it.&lt;/p&gt;
&lt;p&gt;The articles I had published on Medium had been updated continuously and were as fresh and relevant then as they were in 2015. However, I could see them starting to slip in the Google results.&lt;/p&gt;
&lt;p&gt;Self-hosting, this wouldn't be an issue. Hence I made the move to &lt;em&gt;nomadgate.com&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;migrating-my-old-articles-off-medium&quot;&gt;Migrating my old articles off Medium&lt;/h2&gt;
&lt;p&gt;After re-launching Nomad Gate on my own domain, I noticed that the new articles I posted there also ranked well in Google. And not only that, but I also saw first hand how much it helped to update the &lt;em&gt;published date&lt;/em&gt; whenever I updated an article.&lt;/p&gt;
&lt;p&gt;Yet, I still wasn't sure what the impact would be on my old Medium articles if I moved them over as well. But in July 2018 I decided to find out.&lt;/p&gt;
&lt;p&gt;I did a proper rewrite of the banking article I originally wrote back in 2015, making sure it was completely up to date and relevant. And instead of updating the version of the article that lived on Medium, I posted it on nomadgate.com.&lt;/p&gt;
&lt;p&gt;In order to benefit from the existing SEO juice of the version on Medium and avoid Google marking the new article as a duplicate, I reached out to the Medium team (yourfriends@medium.com) and asked if they could update the &lt;em&gt;canonical URL&lt;/em&gt; of the article so that it pointed to the new version on nomadgate.com.&lt;/p&gt;
&lt;p&gt;It worked out really well. After a few days Google had discovered the new canonical link, and the nomadgate.com version basically took over the medium.com version's spot in the search results within a week. About ten days later the new article had as much traffic per day as the old Medium article had before the switch, and another week later it had about 40% more.&lt;/p&gt;
&lt;p&gt;And if that wasn't good enough, moving the article to nomadgate.com seemed to improve the rankings of all the other articles on the same domain. Overall, the visits to nomadgate.com more than doubled in less than a month, and the direct traffic to the banking article was only responsible for about half of the increase.&lt;/p&gt;
&lt;p&gt;So when I decided to do a major update of the Estonian e-Residency article in December 2018, I obviously decided to follow the same procedure...only to discover that it was &lt;em&gt;no longer possible&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Luckily, I've figured out a workaround.&lt;/p&gt;
&lt;h2 id=&quot;why-medium-is-now-a-worse-choice-than-ever-before&quot;&gt;Why Medium is now a worse choice than ever before&lt;/h2&gt;
&lt;p&gt;Over the past year, Medium has quietly been making a series of changes that are all bad news for writers who still publish articles on their platform.&lt;/p&gt;
&lt;p&gt;I discovered the most recent—and most significant—change when I emailed the Medium support a few days ago asking to update the canonical links of the e-Residency article that I had just re-written and updated on nomadgate.com.&lt;/p&gt;
&lt;h3 id=&quot;its-no-longer-possible-to-change-canonical-links-of-articles&quot;&gt;It's no longer possible to change canonical links of articles&lt;/h3&gt;
&lt;p&gt;After emailing yourfriends@medium.com with the new canonical link that I wanted for the article (like I had done a few months earlier), I quickly got a reply from the same person that had helped me the last time. His email read:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;If you simply copy/paste posts from your site to Medium, we set the canonical tag to point to the new Medium post and there is no way for you (or us) to set it to something else.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote readability=&quot;5.65&quot;&gt;
&lt;p&gt;To make sure that your Medium posts have a canonical tag that points to the original URL, use our import tool (&lt;a href=&quot;https://medium.com/p/import&quot;&gt;https://medium.com/p/import&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Oh, shit.&lt;/p&gt;
&lt;p&gt;Of course I knew that the only way to set the canonical URL correctly from the beginning is to use the import tool.&lt;/p&gt;
&lt;p&gt;But this was the bit that surprised me: &quot;there is no way for you &lt;strong&gt;(or us)&lt;/strong&gt; to set it to something else.&quot;&lt;/p&gt;
&lt;p&gt;Here's the same guy who made the same exact change for me a few months earlier saying that it's not &lt;em&gt;possible&lt;/em&gt; for them to make the change.&lt;/p&gt;
&lt;p&gt;If he had said that they no longer &lt;em&gt;want&lt;/em&gt; to do it, that would have been one thing. A heads-up would have been nice, but still, that's their prerogative.&lt;/p&gt;
&lt;p&gt;But to say that it's not &lt;em&gt;possible&lt;/em&gt; for them is clearly a lie.&lt;/p&gt;
&lt;p&gt;Medium, if you ever read this: I don't appreciate being lied to.&lt;/p&gt;
&lt;p&gt;To top it off, they simply ignored &lt;a href=&quot;https://cl.ly/93ce51946717&quot;&gt;the two (polite) follow-up emails&lt;/a&gt; I sent them.&lt;/p&gt;
&lt;p&gt;Not so friendly anymore, or what, Medium? Maybe consider changing your &lt;em&gt;YourFriends&lt;/em&gt;@medium.com address?&lt;/p&gt;
&lt;h3 id=&quot;its-no-longer-possible-to-add-custom-domains&quot;&gt;It's no longer possible to add custom domains&lt;/h3&gt;
&lt;p&gt;If I had used a custom domain for my Medium publication, it wouldn't have been much of an issue. In that case, I could have just set up &lt;em&gt;301 redirects&lt;/em&gt; to the new articles and deleted the old ones from Medium. All the SEO juice would have been preserved, and Google would have shown the updated article in the search results.&lt;/p&gt;
&lt;p&gt;Unfortunately, after a bit of Googling I found out that Medium removed the possibility to add your own custom domains, so it was too late for my Nomad Gate publication to get on that gravy train.&lt;/p&gt;
&lt;p&gt;But thanks to a great deal of luck and good fortune, &lt;strong&gt;I eventually discovered a workaround&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;While I can't change the canonical links of my remaining Medium posts, I found a way to add 301 redirects to them instead—which in many ways is even better!&lt;/p&gt;
&lt;p&gt;Try going to &lt;a href=&quot;https://medium.com/nomad-gate/estonian-e-residency-ultimate-guide-banking-taxes-cc27fe39c368&quot;&gt;https://medium.com/nomad-gate/estonian-e-residency-ultimate-guide-banking-taxes-cc27fe39c368&lt;/a&gt; and see where you end up.&lt;/p&gt;
&lt;p&gt;Yup, that's right!&lt;/p&gt;
&lt;p&gt;You won't even land on medium.com, but rather be redirected instantly to the &lt;a href=&quot;https://nomadgate.com/estonian-e-residency-guide/&quot;&gt;new version of the article on nomadgate.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm not sure if I should share the workaround publicly (in case it will trigger Medium to block it), so let me just say that it's pretty easy to spot what I did if you're a bit tech-savvy.&lt;/p&gt;
&lt;p&gt;If you want to know, you can always &lt;a href=&quot;https://nomadgate.com/contact/&quot;&gt;contact me&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;limitations-on-embeds-making-list-building-harder&quot;&gt;Limitations on embeds making list building harder&lt;/h3&gt;
&lt;p&gt;Not only has Medium made it more difficult to leave their platform, but it's also harder than ever to grow your audience on Medium.&lt;/p&gt;
&lt;p&gt;Anyone who's been publishing on Medium for a while knows that a follower on Medium is only worth a tiny fraction of a newsletter subscriber on your own blog. For a while, you were allowed to use services like &lt;a href=&quot;https://upscri.be/&quot;&gt;Upscribe&lt;/a&gt; to embed a signup form in your Medium articles.&lt;/p&gt;
&lt;p&gt;However, early in 2018, those embeds were all but made useless. Now you'll have to send readers over to an external website before asking them to sign up.&lt;/p&gt;
&lt;h3 id=&quot;new-restrictions-on-business-models&quot;&gt;New restrictions on business models&lt;/h3&gt;
&lt;p&gt;I recently discovered that HackerNoon, one of the most read publications on Medium is &lt;a href=&quot;https://www.startengine.com/hackernoon&quot;&gt;raising funds to leave the platform&lt;/a&gt;. Their reasons include a new ban on all types of third-party ads on Medium, including sponsorships—which is how HackerNoon had been monetizing.&lt;/p&gt;
&lt;p&gt;Having your own website as a hub for all your content means that no one else can restrict your choice of business model.&lt;/p&gt;
&lt;p&gt;And honestly, hosting all your content with a tech company with its own set of incentives is a terrible idea. And their current incentives are mainly to redirect your readers to other (mostly premium) stories on Medium so that they will start paying them $5 per month.&lt;/p&gt;
&lt;p&gt;Does that sound like a good idea to you?&lt;/p&gt;
&lt;h3 id=&quot;you-can-build-a-much-more-user-friendly-experience&quot;&gt;You can build a much more user-friendly experience&lt;/h3&gt;
&lt;p&gt;While Medium initially provided a great reading experience, that's no longer the case.&lt;/p&gt;
&lt;p&gt;This is what your readers who are not logged in to a Medium account encounter when they visit your articles:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://bts.nomadgate.com/static/6510f5e52b8ce21645247abfe2567ebd/8b0d4/medium.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Popups on Medium&quot; title=&quot;&quot; src=&quot;https://bts.nomadgate.com/static/6510f5e52b8ce21645247abfe2567ebd/44d6a/medium.png&quot; srcset=&quot;/static/6510f5e52b8ce21645247abfe2567ebd/f4799/medium.png 173w, /static/6510f5e52b8ce21645247abfe2567ebd/b3b1d/medium.png 345w, /static/6510f5e52b8ce21645247abfe2567ebd/44d6a/medium.png 690w, /static/6510f5e52b8ce21645247abfe2567ebd/bc0f7/medium.png 1035w, /static/6510f5e52b8ce21645247abfe2567ebd/b50e5/medium.png 1380w, /static/6510f5e52b8ce21645247abfe2567ebd/0ed32/medium.png 2070w, /static/6510f5e52b8ce21645247abfe2567ebd/8b0d4/medium.png 3058w&quot; sizes=&quot;(max-width: 690px) 100vw, 690px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's how readers on Nomad Gate see the same article:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://bts.nomadgate.com/static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/8b0d4/nomadgate.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;span class=&quot;gatsby-resp-image-background-image&quot;&gt;&lt;img class=&quot;gatsby-resp-image-image&quot; alt=&quot;Article on Nomad Gate&quot; title=&quot;&quot; src=&quot;https://bts.nomadgate.com/static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/44d6a/nomadgate.png&quot; srcset=&quot;/static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/f4799/nomadgate.png 173w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/b3b1d/nomadgate.png 345w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/44d6a/nomadgate.png 690w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/bc0f7/nomadgate.png 1035w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/b50e5/nomadgate.png 1380w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/0ed32/nomadgate.png 2070w, /static/ac13d1ffa26c9fa5e6e0f857b9ec96a2/8b0d4/nomadgate.png 3058w&quot; sizes=&quot;(max-width: 690px) 100vw, 690px&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No annoying popups, no cookie notices, no ad tracking (only anonymized Google Analytics), no bullshit. Just the article you came to read, and nothing more.&lt;/p&gt;
&lt;p&gt;The above is just one example of how Medium will annoy your readers. Check out &lt;a href=&quot;https://medium.com/@nikitonsky/medium-is-a-poor-choice-for-blogging-bb0048d19133&quot;&gt;this article&lt;/a&gt; (ironically posted on Medium) for a lot more examples.&lt;/p&gt;
&lt;p&gt;Your readers deserve better than Medium.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use-medium-in-2019&quot;&gt;How to use Medium in 2019&lt;/h2&gt;
&lt;p&gt;Is it still OK to post on Medium?&lt;/p&gt;
&lt;p&gt;Sure, with some caveats:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Always publish to your own domain first.&lt;/li&gt;
&lt;li&gt;When cross-posting to Medium, always, always use their somewhat hidden &lt;a href=&quot;https://medium.com/p/import&quot;&gt;Import Story feature&lt;/a&gt;. That will set the canonical link for the story to your domain.&lt;/li&gt;
&lt;li&gt;Always promote your own version of the article. Don't send traffic to someone else's domain.&lt;/li&gt;
&lt;li&gt;Provide plenty of links back to your own website within the stories you post on Medium.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Is it worth it?&lt;/p&gt;
&lt;p&gt;Honestly, I'm not sure. With a few thousand followers on Medium, an article I cross-posted there in July had only seen a bit more than 100 views generated by Medium by December. The version of that article on Nomad Gate has continued to gain traffic since then.&lt;/p&gt;
&lt;p&gt;I'm not sure if posting on Medium had anything to do with it, but at least it seems safe to continue syndicating articles there—as long as you follow the steps above.&lt;/p&gt;

&lt;p&gt;This article made it to the front page of Hacker News, so &lt;a href=&quot;https://news.ycombinator.com/item?id=18672288&quot; rel=&quot;nofollow&quot;&gt;check out the discussion there&lt;/a&gt;. Lots of good comments!&lt;/p&gt;
</description>
<pubDate>Thu, 13 Dec 2018 13:54:01 +0000</pubDate>
<dc:creator>tkrunning</dc:creator>
<og:url>https://nomadgate.com/bts/medium-evergreen-content</og:url>
<og:type>article</og:type>
<og:title>Posting Evergreen Content on Medium is a Terrible Idea</og:title>
<og:description>Over the last few years, I've seen more and more blogs move over completely or partially to Medium. And while a few years ago that might…</og:description>
<og:image>https://nomadgate.com/bts/https://unsplash.it/400/300?random&amp;BoldMage</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://bts.nomadgate.com/medium-evergreen-content/</dc:identifier>
</item>
<item>
<title>Free Hotel Wifi with Python and Selenium</title>
<link>https://gkbrk.com/2018/12/free-hotel-wifi-with-python-and-selenium/</link>
<guid isPermaLink="true" >https://gkbrk.com/2018/12/free-hotel-wifi-with-python-and-selenium/</guid>
<description>&lt;p&gt;Recently I took my annual leave and decided to visit my friend during the holidays. I stayed at a hotel for a few days but to my surprise, the hotel charged money to use their wifi. In &lt;em&gt;$DEITY&lt;/em&gt;‘s year &lt;em&gt;2000 + 18&lt;/em&gt;, can you imagine?&lt;/p&gt;
&lt;p&gt;But they are not so cruel. You see, these generous people let you use the wifi for 20 minutes. &lt;em&gt;20 whole minutes.&lt;/em&gt; That’s almost half a Minecraft video.&lt;/p&gt;
&lt;p&gt;If they let each device use the internet for a limited amount of time, they must have a way of identifying each device. And a router tells devices apart is by their MAC addresses. Fortunately for us, we can change our MAC address easily.&lt;/p&gt;
&lt;h2&gt;Enter macchanger&lt;/h2&gt;
&lt;p&gt;There is a really useful command-line tool called &lt;a href=&quot;https://wiki.archlinux.org/index.php/MAC_address_spoofing#macchanger&quot;&gt;&lt;em&gt;macchanger&lt;/em&gt;&lt;/a&gt;. It lets you manually change, randomize and restore the MAC address of your devices. The idea here is randomizing our MAC regularly &lt;em&gt;(every 20 minutes)&lt;/em&gt; in order to use the free wifi over and over indefinitely.&lt;/p&gt;
&lt;p&gt;There are 3 small commands you need to run. This is needed because macchanger can’t work while your network interface is connected to the router.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;
&lt;code&gt;&lt;span&gt;# Bring network interface down&lt;/span&gt;
ifconfig wlp3s0 down

&lt;span&gt;# Get random MAC address&lt;/span&gt;
macchanger &lt;span&gt;-r&lt;/span&gt; wlp3s0

&lt;span&gt;# Bring the interface back up&lt;/span&gt;
ifconfig wlp3s0 up
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the commands above, &lt;em&gt;wlp3s0&lt;/em&gt; is the name of my network interface. You can find yours by running &lt;code&gt;ip a&lt;/code&gt;. If you run those commands, you can fire up your browser and you will be greeted with the page asking you to pay or try it for 20 minutes. After your time is up, you can run the commands again and keep doing it.&lt;/p&gt;
&lt;p&gt;But this is manual labor, and doing it 3 times an hour is too repetitive. Hmm. What’s a good tool to automate repetitive stuff?&lt;/p&gt;
&lt;h2&gt;Enter Selenium&lt;/h2&gt;
&lt;p&gt;First, lets get those commands out of the way. Using the &lt;em&gt;os&lt;/em&gt; module, we can run macchanger from our script.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight python&quot;&gt;
&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;os&lt;/span&gt;

&lt;span&gt;interface&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;'wlp3s0'&lt;/span&gt;

&lt;span&gt;os&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;system&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'sudo ifconfig {interface} down'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;os&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;system&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'sudo macchanger -r {interface}'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;os&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;system&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;'sudo ifconfig {interface} up'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After these commands our computer should automatically connect to the network as a completely different device. Let’s fire up a browser and try to use the internet.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight python&quot;&gt;
&lt;code&gt;&lt;span&gt;d&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;webdriver&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;Chrome&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'http://example.com'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'https://www.wifiportal.example/cp/sponsored.php'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;sponsored.php&lt;/em&gt; URL is where I ended up after pressing the &lt;strong&gt;Free Wifi&lt;/strong&gt; link, so the script should open the registration form for us. Let’s fill the form.&lt;/p&gt;
&lt;p&gt;In my case, all it asked for was an email address and a full name. If there are more fields, you can fill them in a similar fashion.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight python&quot;&gt;
&lt;code&gt;&lt;span&gt;num&lt;/span&gt;   &lt;span&gt;=&lt;/span&gt; &lt;span&gt;random&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;randint&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;99999&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;email&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span&gt;f&lt;/span&gt;&lt;span&gt;'test{num}@gmail.com'&lt;/span&gt;

&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;find_element_by_name&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'email'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;send_keys&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;email&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;find_element_by_name&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'name'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;send_keys&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'John Doe&lt;/span&gt;&lt;span&gt;\n&lt;/span&gt;&lt;span&gt;'&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should fill the form and press enter to submit it. Afterwards, the portal asked me if I wanted to subscribe to their emails or something like that. Of course, we click &lt;em&gt;Reject&lt;/em&gt; without even reading it and close the browser.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;7&quot;&gt;
&lt;pre class=&quot;highlight python&quot;&gt;
&lt;code&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;find_elements_by_class_name&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;'reject'&lt;/span&gt;&lt;span&gt;)[&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;click&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;close&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After this, you should have an internet connection. You can either run the script whenever you notice your connection is gone, or put it on a cron job / while loop.&lt;/p&gt;
&lt;hr/&gt;

&lt;hr/&gt;&lt;h3&gt;Comments &lt;span&gt;BETA&lt;/span&gt;&lt;/h3&gt;

&lt;br/&gt;</description>
<pubDate>Thu, 13 Dec 2018 09:24:29 +0000</pubDate>
<dc:creator>janvdberg</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://gkbrk.com/2018/12/free-hotel-wifi-with-python-and-selenium/</dc:identifier>
</item>
<item>
<title>The Titanic Was on Fire for Days Before the Iceberg Hit</title>
<link>https://medium.com/dialogue-and-discourse/the-titanic-was-on-fire-for-days-before-the-iceberg-hit-94fa26471dfa</link>
<guid isPermaLink="true" >https://medium.com/dialogue-and-discourse/the-titanic-was-on-fire-for-days-before-the-iceberg-hit-94fa26471dfa</guid>
<description>&lt;h3 name=&quot;16d7&quot; id=&quot;16d7&quot; class=&quot;graf graf--h3 graf--leading&quot;&gt;The New Evidence&lt;/h3&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*qu46l1rEJYjYO2ffAEKkdw.jpeg&quot; data-width=&quot;620&quot; data-height=&quot;349&quot; data-is-featured=&quot;true&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*qu46l1rEJYjYO2ffAEKkdw.jpeg&quot;/&gt;&lt;/div&gt;
Dark mark on the Titanic’s hull — picture from &lt;a href=&quot;https://www.cbsnews.com/news/documentary-identifies-second-culprit-in-the-sinking-of-the-titanic/&quot; data-href=&quot;https://www.cbsnews.com/news/documentary-identifies-second-culprit-in-the-sinking-of-the-titanic/&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;CBS News&lt;/a&gt;
&lt;blockquote name=&quot;3711&quot; id=&quot;3711&quot; class=&quot;graf graf--pullquote graf--startsWithDoubleQuote graf-after--figure&quot; readability=&quot;7.0671140939597&quot;&gt;
&lt;p&gt;“The fire was known about, but it was played down. She should never have been put to sea.” — Senan Molony, &lt;a href=&quot;https://www.youtube.com/watch?v=ORUKjNZzPbQ&quot; data-href=&quot;https://www.youtube.com/watch?v=ORUKjNZzPbQ&quot; class=&quot;markup--anchor markup--pullquote-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;“Titanic: The New Evidence,”&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;2d5b&quot; id=&quot;2d5b&quot; class=&quot;graf graf--p graf-after--pullquote&quot;&gt;&lt;a href=&quot;https://www.nytimes.com/2017/01/03/world/europe/titanic-coal-fire-iceberg.html&quot; data-href=&quot;https://www.nytimes.com/2017/01/03/world/europe/titanic-coal-fire-iceberg.html&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Senan Molony&lt;/a&gt; is a journalist in Ireland who has been studying the Titanic for over 30 years. He recently came across an amazing discovery hidden in an attic in England. This hidden gem was pictures taken of the Titanic by the ship-building firm before it left the shipyard. One of these amazing pictures shows a 30 foot long dark marking on the hull, right where the iceberg was known to have struck the ship. This mark was judged by engineers at the Imperial College of London to be caused by the coal fire that took place in the three story-high coal bunker on the ship.&lt;/p&gt;
&lt;p name=&quot;66d9&quot; id=&quot;66d9&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The fact that a coal fire was going on aboard is well documented. During the inquiry after the sinking, &lt;a href=&quot;http://titanicspeakersbureau.com/?p=353&quot; data-href=&quot;http://titanicspeakersbureau.com/?p=353&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Charles Hendrickson&lt;/a&gt; was brought up to testify and talked about the fire. He mentioned that the fire was known of before the Titanic left Belfast and Hendrickson and three to four other men worked to put out the fire. The only way to put out a coal fire in a bunker like this, was to put the burning coal into ship’s furnace.&lt;/p&gt;
&lt;h3 name=&quot;91ec&quot; id=&quot;91ec&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;The Problems With A Coal Fire&lt;/h3&gt;
&lt;p name=&quot;dd18&quot; id=&quot;dd18&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;The obvious question you might come up with at this point is, “why can’t you just put out the fire?” That’s because of the incendiary nature of coal. In general, a coal fire is extremely difficult to deal with under the best circumstances. If you had all the resources in the world and a good deal of space to work, they can be impossible to put out. Aboard a ship in tight quarters, it gets even more difficult.&lt;/p&gt;
&lt;p name=&quot;5a79&quot; id=&quot;5a79&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;An example of the difficulties with a coal fire would be the coal fire in &lt;a href=&quot;https://en.wikipedia.org/wiki/Centralia_mine_fire&quot; data-href=&quot;https://en.wikipedia.org/wiki/Centralia_mine_fire&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Centralia, Pennsylvania&lt;/a&gt;. This fire broke out in a mine in the Northeast United States and has proven impossible to put out. How impossible you ask? It’s been burning since May 27, 1962.&lt;/p&gt;
&lt;h4 name=&quot;3ff1&quot; id=&quot;3ff1&quot; class=&quot;graf graf--h4 graf-after--p&quot;&gt;Yes, I’m being totally serious, it’s been burning for 56 years.&lt;/h4&gt;
&lt;p name=&quot;7d0f&quot; id=&quot;7d0f&quot; class=&quot;graf graf--p graf-after--h4&quot;&gt;Despite numerous efforts to deal with the fire, nothing has been able to stop it. It’s estimated that some sections where the fire is burning are about 1000 degrees Fahrenheit and put up lethal gas clouds of carbon monoxide. Eventually, the federal government gave up trying to put out the fire and just bought all the land from the inhabitants, who moved. Centralia is now a tourist attraction, where visitors come to see the smoke and abandoned buildings.&lt;/p&gt;
&lt;h3 name=&quot;b6d9&quot; id=&quot;b6d9&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Damage Resulting From The Coal Fire&lt;/h3&gt;
&lt;blockquote name=&quot;05e6&quot; id=&quot;05e6&quot; class=&quot;graf graf--pullquote graf-after--h3&quot; readability=&quot;5.8333333333333&quot;&gt;
&lt;p&gt;Testimony of &lt;a href=&quot;http://www.titanicinquiry.org/BOTInq/BOTInq04Barrett02.php&quot; data-href=&quot;http://www.titanicinquiry.org/BOTInq/BOTInq04Barrett02.php&quot; class=&quot;markup--anchor markup--pullquote-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Frederick Barrett&lt;/a&gt; (lead stoker) during the British Wreck Commissioner’s Inquiry, day 4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;57c7&quot; id=&quot;57c7&quot; class=&quot;graf graf--blockquote graf-after--pullquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Attorney:&lt;/strong&gt; What was the condition of the bulkhead running through the bunker?&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Barret:&lt;/strong&gt; It was damaged from the bottom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;4f3d&quot; id=&quot;4f3d&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Attorney:&lt;/strong&gt; Badly damaged?&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Barret:&lt;/strong&gt; The bottom of the watertight compartment was dinged aft and the other part was dinged forward.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;2ed2&quot; id=&quot;2ed2&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;&lt;em class=&quot;markup--em markup--blockquote-em&quot;&gt;Commissioner:&lt;/em&gt;&lt;/strong&gt; What do you attribute that to?&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Barret:&lt;/strong&gt; The fire.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote name=&quot;9b0a&quot; id=&quot;9b0a&quot; class=&quot;graf graf--blockquote graf-after--blockquote&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Attorney:&lt;/strong&gt; Do you mean to say the firing of the coal would dinge the bulkhead?&lt;br/&gt;&lt;strong class=&quot;markup--strong markup--blockquote-strong&quot;&gt;Barret:&lt;/strong&gt; Yes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p name=&quot;be68&quot; id=&quot;be68&quot; class=&quot;graf graf--p graf-after--blockquote&quot;&gt;In Senan Molony’s new documentary, &lt;a href=&quot;https://www.youtube.com/watch?v=ORUKjNZzPbQ&quot; data-href=&quot;https://www.youtube.com/watch?v=ORUKjNZzPbQ&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;noopener nofollow&quot; target=&quot;_blank&quot;&gt;“Titanic: The New Evidence,”&lt;/a&gt; he examines the damage of the coal fire. The area in the coal bunker where the fire broke out was against one of the main bulk heads of the ship. These are watertight walls designed to keep sea water from spreading in case of a hull breach. Molony interviews Dr. Guillermo Rein of the Imperial College of London. Dr. Rein concentrates in the science of coal fires. He estimates that the temperature of that fire could have hit about 1800 degrees Fahrenheit. Dr. Rein also says that usually by the time a coal fire is noticed, it’s probably been burning for days or weeks.&lt;/p&gt;
&lt;p name=&quot;18df&quot; id=&quot;18df&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The testimony of the coal stokers and firemen aboard the Titanic seem to indicate that the bulkhead by the coal area was significantly damaged by the fire. Some even reporting a movement of the metal or a buckling. Nothing was really done to address the damage. It also appears from the previous picture that a visible mark on the hull was present from the fire damage as well.&lt;/p&gt;
&lt;h3 name=&quot;9e12&quot; id=&quot;9e12&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Speed Of The Titanic&lt;/h3&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*scPP8GUcBeQiH5uxfnBJ8w.jpeg&quot; data-width=&quot;454&quot; data-height=&quot;599&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*scPP8GUcBeQiH5uxfnBJ8w.jpeg&quot;/&gt;&lt;/div&gt;
Stern And Rudder For the Titanic / Olympic 1911: Photo Taken By &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Olympic_stern_and_rudder.jpg&quot; data-href=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Olympic_stern_and_rudder.jpg&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Robert John Welch&lt;/a&gt;
&lt;p name=&quot;f4d6&quot; id=&quot;f4d6&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;Another issue that has always caused confusion was the Titanic’s speed. It was running at full speed when crossing the Atlantic Ocean, even when there were warnings of icebergs in the area. There were rumors that the ship was trying to break some kind of speed record, but the Titanic was not built for speed. This mammoth ship was a luxury liner. Molony indicates that this could have been caused by the fire-fighting activities.&lt;/p&gt;
&lt;p name=&quot;a8a4&quot; id=&quot;a8a4&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;In order to fight the fire, the stokers had been shoveling the burning coal into furnaces to burn the fire away. If the stokers had been shoveling as much coal as possible that could be the reason for the speed of the ship. As excess coal was burnt, the engines would work harder, generating speed. The stokers had been shoveling coal into the furnaces nonstop for 3 days fighting the fire during the maiden voyage. Molony thinks this is the reason why the ship was going at full speed when it hit the iceberg.&lt;/p&gt;
&lt;h3 name=&quot;fb77&quot; id=&quot;fb77&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Failure Of The Bulkhead&lt;/h3&gt;
&lt;p name=&quot;8ad6&quot; id=&quot;8ad6&quot; class=&quot;graf graf--p graf-after--h3&quot;&gt;At 11:40PM on the 14th of April 1912, the Titanic struck an iceberg, which tore into its hull. Right after the strike, according to Molony’s &lt;a href=&quot;https://www.youtube.com/watch?v=G4MGrWONkVw&quot; data-href=&quot;https://www.youtube.com/watch?v=G4MGrWONkVw&quot; class=&quot;markup--anchor markup--p-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;documentary&lt;/a&gt;, the bulkhead compartments appeared to be doing their job and holding the water back. The Titanic’s designer happened to be aboard the ship and evaluated the strike damage and seemed to think that ship wouldn’t sink — as long as the bulkheads held up. However, one of the main bulkheads had been damaged in the previously reported fire.&lt;/p&gt;
&lt;p name=&quot;01c5&quot; id=&quot;01c5&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Molony reports from a transcript of the American Inquiry into the sinking where a lead fireman / stoker, Fred Barret, reports about a failure to the bulkhead. Barret had been below when the iceberg struck and took refuge in another watertight compartment in the ship. He actually stood behind the bulkhead that had been damaged by the fire. Approximately two hours afterwards, Barret reported seeing, “a wave of green foam come tearing between the boilers.” At this point, the bulkhead failed and Barret escaped the incoming torrent of water. In Molony’s investigation, the ship began sinking rapidly after this event.&lt;/p&gt;
&lt;h3 name=&quot;02f8&quot; id=&quot;02f8&quot; class=&quot;graf graf--h3 graf-after--p&quot;&gt;Conclusion&lt;/h3&gt;
&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot;&gt;

&lt;img class=&quot;graf-image&quot; data-image-id=&quot;1*zfKcH1srOY13ol85xkMgcg.jpeg&quot; data-width=&quot;415&quot; data-height=&quot;599&quot; src=&quot;https://cdn-images-1.medium.com/max/1600/1*zfKcH1srOY13ol85xkMgcg.jpeg&quot;/&gt;&lt;/div&gt;
Colorised &lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/7/73/Titanic_paperboy_crop.jpg&quot; data-href=&quot;https://upload.wikimedia.org/wikipedia/commons/7/73/Titanic_paperboy_crop.jpg&quot; class=&quot;markup--anchor markup--figure-anchor&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;photo&lt;/a&gt; of Ned Parfett, best known as the “Titanic paperboy” April 16, 1912. Photographer unknown.
&lt;p name=&quot;cf9c&quot; id=&quot;cf9c&quot; class=&quot;graf graf--p graf-after--figure&quot;&gt;The work of Molony in his documentary is compelling and seems to make logical sense. The hidden fire caused damage to a bulkhead in the ship. The increased speed of the ship was due to the excess burning of coal to fight the fire. Also the failure of the bulkhead was due to the incredible heat generated by the coal fire, which was right against the bulkhead. In Molony’s opinion if the bulkheads held, the passengers on the ship may have been rescued. There was a ship hailed and on the way. If the Titanic could have stayed afloat for a few hours longer, a historic tragedy may have been averted.&lt;/p&gt;
&lt;p name=&quot;db29&quot; id=&quot;db29&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;The bulkheads were the Titanic’s prime defense against the ocean. One of the reasons given for the lack of lifeboats was because the Titanic itself was thought to be a lifeboat. The bulkheads were designed to keep the water out in case of a breach, which would give time for a rescue to be conducted. If the bulkheads failed however, a disaster would be imminent.&lt;/p&gt;
&lt;p name=&quot;579d&quot; id=&quot;579d&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Molony also searches into why the ship would leave with a fire on board. According to interviews conducted and research into the White Star Line (operator of the Titanic), the company was in financial trouble. There had already been a delay in the introduction to the Titanic. The sister ship of the Titanic had also been damaged, causing more economic losses. It appeared that the Titanic would have to sail or the company might have imploded otherwise.&lt;/p&gt;
&lt;p name=&quot;4080&quot; id=&quot;4080&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;There are those who differ with Molony’s conclusions, however. David Hill, a previous secretary of the British Titanic Society disagrees with Molony’s findings. Hill admits there was a fire, but in the grand scheme of things it really didn’t make any difference — the iceberg was the prime villain. Molony can’t prove all his theories completely, but there’s lots of evidence to back up his claims. The ultimate thing that can’t be denied is that there was a fire and it was burning at the time of the voyage. The image of the Titanic has forever been associated with ice, but it appears a new image of fire may have to be adapted.&lt;/p&gt;
&lt;p name=&quot;3296&quot; id=&quot;3296&quot; class=&quot;graf graf--p graf-after--p&quot;&gt;Despite the new evidence appearing, nothing changes the fact that the story of the Titanic is a tragedy. The events that happened could have surely been avoided and all those unfortunates aboard needlessly died horrible deaths. In the end, the only thing the new evidence shows us is a new level of negligence shown by the White Star Line and their employees. A ship that was ill equipped with lifeboats was sailed, on fire, through an iceberg infested area at full speed. To make matters worse, the British inquiry buried the testimony about the fire and moved onto other aspects of the disaster. Even 100 years after this event, just restating those facts brings a level of anger to a modern reader — including me. It’s not hard to put yourself in the shoes of those victims, whose only crime was to believe that they were safe aboard an “unsinkable” ship.&lt;/p&gt;
&lt;p name=&quot;8c86&quot; id=&quot;8c86&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot;&gt;&lt;em class=&quot;markup--em markup--p-em&quot;&gt;Thank you for reading my ramblings. If you enjoyed what you’ve read, please share.&lt;/em&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 13 Dec 2018 09:14:28 +0000</pubDate>
<dc:creator>Osiris30</dc:creator>
<og:title>The Titanic Was On Fire For Days Before The Iceberg Hit</og:title>
<og:url>https://medium.com/dialogue-and-discourse/the-titanic-was-on-fire-for-days-before-the-iceberg-hit-94fa26471dfa</og:url>
<og:image>https://cdn-images-1.medium.com/max/1200/1*qu46l1rEJYjYO2ffAEKkdw.jpeg</og:image>
<og:description>“From the day we sailed the Titanic was on fire” — John Dilley, fireman aboard the Titanic</og:description>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/dialogue-and-discourse/the-titanic-was-on-fire-for-days-before-the-iceberg-hit-94fa26471dfa</dc:identifier>
</item>
<item>
<title>50 CVEs in 50 Days: Fuzzing Adobe Reader</title>
<link>https://research.checkpoint.com/50-adobe-cves-in-50-days/</link>
<guid isPermaLink="true" >https://research.checkpoint.com/50-adobe-cves-in-50-days/</guid>
<description>&lt;p&gt;&lt;strong&gt;A Fuzzing Drill Hits the Motherlode&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Research By:&lt;/strong&gt; Yoav Alon, Netanel Ben-Simon&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The year 2017 was an inflection point in the vulnerability landscape. The number of new vulnerabilities reported that year was around 14,000, which is over twice the number from the year before (see table below). The probable reason for this is the increased popularity of automatic vulnerability finding tools, also known as “fuzzers”.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig1-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20154&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig1-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The mere existence of fuzzers is not breaking news; they’ve been around for over two decades. The news is that fuzzers have grown up. They’ve become more capable, more accessible, and overall more mature. Still, using fuzzers has somewhat of a reputation as a “dark art”, a lot of researchers don’t bother with fuzzers because they are perceived as a hassle to use.&lt;/p&gt;
&lt;p&gt;Given all the above, we found it natural to ask: Yes, more researchers are using fuzzers to find more vulnerabilities — but are *all* the researchers using fuzzers to find *all* the vulnerabilities? How many low-hanging fruits are still out there, just waiting for the first person to press the big shiny button that says ‘FUZZ’?&lt;/p&gt;
&lt;p&gt;To find out, we constructed the most vanilla experiment we could think of. We took one of the most common Windows fuzzing frameworks, WinAFL, and aimed it at Adobe Reader, which is one of the most popular software products in the world. We set a time-frame of 50 days for the entire endeavor – reverse-engineering the code, looking for potential vulnerable libraries, writing harnesses and, finally, running the fuzzer itself.&lt;/p&gt;
&lt;p&gt;The results left us flabbergasted. In those 50 days, we were able to find over 50 new vulnerabilities in Adobe Reader. On average, that’s 1 vulnerability per day — not quite the usual pace for this kind of research.&lt;/p&gt;
&lt;p&gt;In this paper, we lay out the entire story of this research. We share a novel methodology we used to increase the scope of our search, improvements that we were able to make to WinAFL, and, finally, the insights we gained along the way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is WinAFL?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://lcamtuf.coredump.cx/afl/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AFL&lt;/a&gt; is a coverage guided genetic fuzzer, which has a rock solid implementation and clever heuristics that have proven to be very (&lt;a href=&quot;http://lcamtuf.coredump.cx/afl/#bugs&quot;&gt;!&lt;/a&gt;) successful in finding real bugs in real software.&lt;/p&gt;
&lt;p&gt;WinAFL is a fork of AFL for Windows, created and maintained by Ivan Fratric (Google Project Zero). The Windows version uses a different style of instrumentation which enables us to target closed source binaries.&lt;/p&gt;
&lt;p&gt;We recommend reading the AFL &lt;a href=&quot;http://lcamtuf.coredump.cx/afl/technical_details.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;technical paper&lt;/a&gt;, which goes into detail on how AFL works. It also points out the tool’s shortcomings and helps you debug when things go wrong.&lt;/p&gt;
&lt;p&gt;We found WinAFL to be extremely effective in finding file format bugs, especially in compressed binary formats (images / videos / archives).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attacking Acrobat Reader DC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The easiest place to start is the main executable, AcroRd32.exe. This is a (relatively) thin wrapper around AcroRd32.dll, which is approximately 30MB in size. AcroRd32.dll has a lot of code, some of which contains parsers for PDF objects, but a lot of it is GUI code (not the place you usually want to look for bugs).&lt;/p&gt;
&lt;p&gt;We know that WinAFL is better at binary formats, so we decided to focus our efforts and attack a specific parser. The challenge is to locate a parser and write a harness for it. We’ll explain what exactly is a harness is a bit later on.&lt;/p&gt;
&lt;p&gt;We want a binary format parser with minimal dependencies that we can load without also loading the entire Reader process.&lt;/p&gt;
&lt;p&gt;We explored the DLLs in Acrobat’s folder and found that JP2KLib.dll fits all categories:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig2-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20155&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig2-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JP2KLib.dll is a parser for the JPEG2000 format, which is a complex binary format (753 KB), and has exported functions which are pretty descriptive.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig3.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20156&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig3.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The research was conducted on the following versions:&lt;br/&gt;Acrobat Reader DC 2018.011.20038 and earlier&lt;br/&gt;JP2KLib.dll version 1.2.2.39492&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Is a Target Function?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://github.com/googleprojectzero/winafl#how-to-select-a-target-function&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;target function&lt;/a&gt; is a term that WinAFL uses to describe the function that is used as the entry point to the fuzzing process. The function is called in a loop for &lt;em&gt;fuzz_iterations&lt;/em&gt; times, each time mutating the input file on disk. The function must:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open the input file, read the file, parse the input and &lt;u&gt;close&lt;/u&gt; the file.&lt;/li&gt;
&lt;li&gt;Return normally – without throwing a &lt;em&gt;C++&lt;/em&gt; exception or calling &lt;em&gt;TerminateProcess&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Finding such a function in nature is pretty uncommon. When targeting a complex software, we usually need to write a harness.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Is a Harness?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A harness is a small program that triggers the functionality we want to fuzz. The harness includes a function which will be used as our target function. Here’s an example for a &lt;a href=&quot;https://github.com/googleprojectzero/winafl/blob/master/gdiplus.cpp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;minimal harness&lt;/a&gt; for gdiplus from the WinAFL repository:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig4-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20157&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig4-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first argument to &lt;em&gt;main&lt;/em&gt; is a path. Within the function, we call the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/api/gdiplusheaders/nf-gdiplusheaders-image-image%28inconstwchar_inbool%29&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Image::Image&lt;/em&gt;&lt;/a&gt; parser, which is the API we wanted to fuzz. Notice that in error cases, we don’t terminate the process and at the end we free all resources.&lt;/p&gt;
&lt;p&gt;This process is relatively easy for documented API. We can copy a sample code or write a simple program using the documentation. But where’s the fun in that?&lt;/p&gt;
&lt;p&gt;We chose to target Adobe Reader, which is a closed sourced binary. The process of writing a harness for this type of target looks something like this:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Find the functionality we want to fuzz.&lt;/li&gt;
&lt;li&gt;Reverse-engineer it a little bit.&lt;/li&gt;
&lt;li&gt;Write a program that calls the reversed API.&lt;/li&gt;
&lt;li&gt;Repeat until we have a fully functional harness.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In the following section, we describe in detail how we reverse-engineered JP2KLib, and wrote a working harness for it. We also share a few tips. Readers who are only interested in our fuzzing methodology can skip to the next section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing a Harness for JP2KLib.dll&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before starting to reverse-engineer JP2KLib.dll, we checked whether the library is open source or has public symbols. This is a big time saver and is more common than you might think. But in our case, we weren’t so lucky.&lt;/p&gt;
&lt;p&gt;As we wanted our harness to be as similar as possible to how Adobe Reader uses JP2KLib, the first thing we had to do is to find a PDF file that triggers the behavior we wanted to fuzz. This enables us to easily locate the relevant parts of the program.&lt;/p&gt;
&lt;p&gt;In our case, we have a large corpus of PDFs for testing our products. We &lt;em&gt;grep&lt;/em&gt;ped the string “/JPXDecode“, which is the PDF filter for JPEG2000, and used the smallest example that came up. We could also have googled for a sample file or used Acrobat Pro / Phantom PDF to generate a test case.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Pro Tip 1:&lt;/strong&gt; The reader has a sandbox, which is sometimes annoying for debugging/triaging, but this can be disabled –&lt;/em&gt; &lt;a href=&quot;https://forums.adobe.com/thread/2110951&quot;&gt;&lt;em&gt;https://forums.adobe.com/thread/2110951&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Pro Tip 2:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;We turned on&lt;/em&gt; &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/gflags-and-pageheap&quot;&gt;&lt;em&gt;PageHeap&lt;/em&gt;&lt;/a&gt; &lt;em&gt;to assist in the reverse-engineering efforts, as it helps in tracking allocation place and size.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We extracted the jp2 file from our sample, so we could use it for our harness without the PDF wrapper. This will be used as our testing input for the harness.&lt;/p&gt;
&lt;p&gt;Now that we had a minimal working example, we placed a breakpoint on the load event of JP2KLib.dll using &lt;em&gt;“sxe ld jp2klib”&lt;/em&gt;. When the breakpoint hit, we placed a breakpoint command on all exported functions of JP2KLib. The breakpoint command logs the call stack, the first few arguments, and the return value:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bm /a jp2klib!* “.echo callstack; k L5; .echo parameters:;  dc esp L8;  .echo return value: ; pt; ”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We loaded the sample PDF and got the following output:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig5-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20158&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig5-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JP2KLibInitEx is the first function called after loading JP2KLib. We noticed that JP2KLibInitEx takes only one argument. Let’s examine it:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig6-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20159&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig6-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We can see that it’s a struct of size 0x20 and it contains pointers to functions in AcroRd32.dll. When we encounter an unknown function, we don’t rush into reversing it as we don’t know if it’s going to be used by the target code. Instead, we point each address to a unique empty function we call “nopX” (where X is a number).&lt;/p&gt;
&lt;p&gt;We now have enough information to start writing our harness skeleton:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Get input file from command line arguments.&lt;/li&gt;
&lt;li&gt;Load JP2KLib.dll.&lt;/li&gt;
&lt;li&gt;Get a pointer to JP2KLibInitEx and call it with a struct of 8 nop functions.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig7-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20160&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig7-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use LOAD_FUNC as a convenience macro. We also have a NOP(x) macro for creating nop functions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/screent.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20179&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/screent.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We compile, run it with sample.jp2 – and it works!&lt;/p&gt;
&lt;p&gt;Let’s continue (“g”). We then move to the next function JP2KGetMemObjEx which doesn’t take any arguments, so we call it and save the return value.&lt;/p&gt;
&lt;p&gt;The next function JP2KDecOptCreate also doesn’t take any arguments, so we call it and save the return value. However, we notice that JP2KDecOptCreate internally calls nop4 and nop7, which means we need to implement them.&lt;/p&gt;
&lt;p&gt;Our next move is to understand what “nop4” does. We placed a breakpoint on the original function pointer to “nop4” &lt;em&gt;AcroRd32!CTJPEGDecoderRelease+0xa992&lt;/em&gt; and continued execution:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig8.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20161&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig8.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Which took us to:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig9-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20162&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig9-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And after few steps:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig10-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20163&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig10-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So it turns out that nop4 is a thin wrapper around malloc. We implemented it in our harness and replaced it with “nop4”. We repeated this procedure again for nop7 and found out it was &lt;em&gt;memset&lt;/em&gt;!. We looked around and saw that nop5 and nop6 and were &lt;em&gt;free&lt;/em&gt; and &lt;em&gt;memcpy&lt;/em&gt; respectively.&lt;/p&gt;
&lt;p&gt;The next function, JP2KDecOptInitToDefaults, was called with one argument. This was the return value from JP2KDecOptCreate, so we passed the value to it.&lt;/p&gt;
&lt;p&gt;The next function, JP2KImageCreate, takes no arguments, so we called it and saved the return value.&lt;/p&gt;
&lt;p&gt;Currently, our harness looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig11-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20164&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig11-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The next function is JP2KImageInitDecoderEx, which takes &lt;strong&gt;&lt;u&gt;5!&lt;/u&gt;&lt;/strong&gt; arguments.&lt;/p&gt;
&lt;p&gt;We matched 3 out of 5 parameters to return values from: JP2KImageCreate, JP2KDecOptCreate and JP2KGetMemObjEx&lt;/p&gt;
&lt;p&gt;We noticed that the 3rd parameter points to a vtable. We did the same trick as before – created a struct with the same size that points to “nop” functions.&lt;br/&gt;The 2nd parameter points to another struct, only this time it doesn’t seem to contain function pointers. We decided to send the const value 0xbaaddaab.&lt;/p&gt;
&lt;p&gt;At this point the code looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig12-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20165&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig12-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We ran our harness and quickly arrived at nop10. We set a breakpoint in Adobe Reader on the corresponding function and got to the following call stack:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig13-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20166&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig13-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Looking at JP2KCodeStm::IsSeekable in IDA:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig14-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20167&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig14-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Looking at WinDbg, we can see that JP2KCodeStm at offset 0x24 contains our vtable and offset 0x18 contains 0xbaaddaab. We can see that JP2KCodeStm::IsSeekable calls a function from our vtable passing 0xbaaddaab as the first parameter, so it’s basically a thin wrapper around our vtable function #7.&lt;/p&gt;
&lt;p&gt;In general, every parser is a bit different but usually they consume an input stream which could be in a familiar file interface (like FILE / ifstream). More often than not, it’s some sort of a custom type that abstracts the underlying input stream (network / file / memory). So when we saw how JP2KCodeStm was used, we knew what we were looking at.&lt;/p&gt;
&lt;p&gt;Back to our case, 0xbaaddaab is the stream object and the vtable functions operate on the stream object.&lt;/p&gt;
&lt;p&gt;We moved to IDA and looked at all the other JP2KCodeStm::XXX functions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig15-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20168&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig15-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They were all very similar, so we went ahead and created our own file object, and implemented all the necessary methods. The resulting code looks like:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig16-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20169&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig16-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We made sure we checked the return value from JP2KImageInitDecoderEx and bailed in case of error. In our case, JP2KImageInitDecoderEx returns 0 on success. It took us a few tries to implement the stream functions correctly, but we finally got our desired return value.&lt;/p&gt;
&lt;p&gt;The next function, JP2KImageDataCreate, takes no arguments and its return value is passed to the following function JP2KImageGetMaxRes. We called them both and moved on.&lt;/p&gt;
&lt;p&gt;We got to the JP2KImageDecodeTileInterleaved function which takes &lt;strong&gt;7!&lt;/strong&gt; Arguments, of which 3 are return values from JP2KImageCreate, JP2KImageGetMaxRes, and JP2KImageDataCreate.&lt;/p&gt;
&lt;p&gt;The 2nd and 6th parameters were found to be null after xrefing and looking inside AcroRd32 in IDA.&lt;/p&gt;
&lt;p&gt;We remained with the 4th and 5th arguments. We concluded that they depend on the color depth (8/16), so we decided to fuzz with constant depth.&lt;/p&gt;
&lt;p&gt;Finally we got:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig17-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20170&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig17-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At last, we called the functions JP2KImageDataDestroy, JP2KImageDestroy, and JP2KDecOptDestroy to release the objects we created and avoid memory leaks. This is critical for WinAFL when &lt;em&gt;fuzz_iterations&lt;/em&gt; are high.&lt;/p&gt;
&lt;p&gt;Done! We have a working harness!&lt;/p&gt;
&lt;p&gt;In one final tweak, we separated the initialization code – loading JP2KLib and finding the functions from the parsing code. This improves performance, as we don’t have to pay for initialization in every fuzz iteration. We called the new function “fuzzme”. We will also export “fuzzme” (you can export functions in an exe file) as it’s easier than finding the relevant offset in the binary.&lt;/p&gt;
&lt;p&gt;Anecdote: When testing our harness in WinAFL, we found out that WinAFL generates files with duplicate magic. After we dug a bit, we found that Adobe used different SEEK constants than the ones defined in libc, causing us to mix SEEK_SET and SEEK_CUR.&lt;/p&gt;
&lt;p&gt;We decided to not publicly share the harness source for obvious reasons, but researchers from the security industry who wish to get the code for learning purposes are welcome to contact Yoav Alon at &lt;a href=&quot;mailto:yoaval@checkpoint.com&quot;&gt;yoaval@checkpoint.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fuzzing Methodology&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Basic tests for the harness
&lt;ol&gt;&lt;li&gt;Stability&lt;/li&gt;
&lt;li&gt;Paths&lt;/li&gt;
&lt;li&gt;Timeouts&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Fuzzing Setup&lt;/li&gt;
&lt;li&gt;Initial corpus&lt;/li&gt;
&lt;li&gt;Initial line coverage&lt;/li&gt;
&lt;li&gt;Fuzzing loop
&lt;ol&gt;&lt;li&gt;Fuzz&lt;/li&gt;
&lt;li&gt;Check coverage / crashes&lt;/li&gt;
&lt;li&gt;cmin &amp;amp; repeat&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Triage&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Basic Tests for the Harness&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before starting a big fuzzing session, we do a few sanity tests to make sure we’re not just heating servers. The first thing we check is that the fuzzer is reaching new paths with our harness, meaning that the &lt;em&gt;total path&lt;/em&gt; count is steadily rising.&lt;/p&gt;
&lt;p&gt;If the path count is zero or almost zero, there are a few pitfalls we can check for:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The target function was inlined by the compiler which causes WinAFL to miss the entry to the target function and results in WinAFL termination with program abort.&lt;/li&gt;
&lt;li&gt;This could also happen if the number of arguments (-nargs) is not correct or that the calling convention is not the default.&lt;/li&gt;
&lt;li&gt;Timeouts – Sometimes the timeout is too low and causes the fuzzer to kill the harness too quickly. The solution is to raise the timeout.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;We let the fuzzer run for a few minutes and then checked the stability of the fuzzer. If the stability is low (under 80%), we try to debug the issue. The stability of the harness is important, as it affects the accuracy and performance of the fuzzer.&lt;/p&gt;
&lt;p&gt;Common pitfalls:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Check for random elements. For example, some hash table implementations use random to prevent collision, but this is really bad for coverage accuracy. We just patch the random seed to a constant value.&lt;/li&gt;
&lt;li&gt;Sometimes the software has a cache for certain global objects. We usually just do a nop run before calling the &lt;em&gt;target function&lt;/em&gt; to reduce this effect&lt;/li&gt;
&lt;li&gt;For 32-bit targets on a Windows 10 64-bit machine, the stack alignment is not always ~8 bytes. This means that sometimes &lt;em&gt;memcpy&lt;/em&gt; and other AVX optimized code will act differently and that does affect coverage. One solution is to add code in the harness to align the &lt;a href=&quot;https://github.com/googleprojectzero/winafl/issues/111#issuecomment-393149203&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;stack&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If all the above fail, we use DynamoRIO to do instruction tracing for the harness and diff the output.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fuzzing Setup&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our setup consists of a VM with 8-16 cores and 32 GB of RAM, running Windows 10 x64.&lt;/p&gt;
&lt;p&gt;We fuzz on a RAM disk drive using &lt;a href=&quot;https://sourceforge.net/projects/imdisk-toolkit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ImDisk toolkit&lt;/a&gt;&lt;u&gt;.&lt;/u&gt; We discovered that with fast targets, writing test cases to disk is a performance bottleneck.&lt;/p&gt;
&lt;p&gt;We disable Windows Defender because it hurts performance and because some of the test cases generated by WinAFL were discovered by Windows Defender as a known exploit (“Exploit:Win32/CVE-2010-2889”).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig18-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20171&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig18-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We disable the Windows Indexing Service for performance.&lt;/p&gt;
&lt;p&gt;We disable Windows Update because it interferes with the fuzzing efforts (restarts the machine and replaces fuzzed DLLs).&lt;/p&gt;
&lt;p&gt;We enable page heap for the harness process because it has proven to find bugs that we wouldn’t detect otherwise.&lt;/p&gt;
&lt;p&gt;We use the &lt;a href=&quot;http://lcamtuf.coredump.cx/afl/technical_details.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;edge&lt;/a&gt; as the coverage type instead of the default basic block as it proved better in finding bugs, despite the fact that it’s slower than basic block mode.&lt;/p&gt;
&lt;p&gt;This is an example command for running our adobe_jp2k harness:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;afl-fuzz.exe -i R:\jp2k\in -o R:\jp2k\out -t 20000+ -D c:\DynamoRIO-Windows-7.0.0-RC1\bin32 -S Slav02 — -fuzz_iterations 10000 -coverage_module JP2KLib.dll -target_module adobe_jp2k.exe -target_method fuzzme -nargs 1 -covtype edge — adobe_jp2k.exe @@&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial Corpus&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once we have a working harness, we create an initial corpus for it, usually from:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Online corpuses (&lt;a href=&quot;http://lcamtuf.coredump.cx/afl/demo/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;afl corpus&lt;/a&gt;, &lt;a href=&quot;https://github.com/uclouvain/openjpeg-data&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;openjpeg-data&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Test suites from open source projects&lt;/li&gt;
&lt;li&gt;Crawling google / duckduckgo&lt;/li&gt;
&lt;li&gt;Corpuses from our older fuzzing projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Corpus Minimization&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using a big corpus of files that produce the same coverage hurts the performance of the fuzzer. AFL handles this by minimizing the corpus using afl-cmin. WinAFL has a port for the tool called winafl-cmin.py.&lt;/p&gt;
&lt;p&gt;We take all the files that we gathered and run them through winafl-cmin.py, which results in a minimal corpus.&lt;/p&gt;
&lt;p&gt;We run winafl-cmin at least two times to see if we get the same set of files. If we got two different sets, it usually means that there’s non-determinism in our harness. This is something we try to investigate, using afl-showmap or other tools.&lt;/p&gt;
&lt;p&gt;Once we finished minimizing successfully, we save the set of files as our initial corpus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initial Line Coverage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now that we have a minimal corpus, we want to take a look at our line coverage. Line coverage means which assembly instructions we actually executed. To get line coverage, we use DynamoRIO: &lt;em&gt;“[dynamoriodir]\bin32\drrun.exe -t drcov — harness.exe testcase”&lt;/em&gt;  for each test case. Next, we load the results to IDA using &lt;a href=&quot;https://github.com/gaasedelen/lighthouse&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig19-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20172&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig19-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We note the initial line coverage, as it helps us to evaluate how effective the fuzzing session was.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fuzzing Cycle&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next step is pretty straight forward:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Run the fuzzers.&lt;/li&gt;
&lt;li&gt;Check coverage and crashes.&lt;/li&gt;
&lt;li&gt;Investigate coverage, cmin and repeat.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Running the fuzzers, does not require anything special. Just run the fuzzers in the configuration we listed above.&lt;/p&gt;
&lt;p&gt;We have a bot with the following features:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Status of all fuzzers (using winafl-whatsapp.py).&lt;/li&gt;
&lt;li&gt;Graph of paths over time for each fuzzer (using winafl-plot.py).&lt;/li&gt;
&lt;li&gt;Crash triage and generate report (we will talk about this in the next section).&lt;/li&gt;
&lt;li&gt;Restart dead fuzzers.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;We can’t stress enough how important it is to automate those tasks. Otherwise, fuzzing is tedious and error-prone.&lt;/p&gt;
&lt;p&gt;We check the status of the fuzzers every couple of hours and the paths over time. If we see that the graph plateaus, we try to investigate the coverage.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig20.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20173&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig20.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We copy all the queues of all the fuzzers and run them through cmin and look at the results in IDA. We look for functions that are relatively large and have very small coverage. We try to understand what functionality is related to this function and proactively find samples that will trigger this functionality. In JP2K, this wasn’t very helpful but in other targets, especially text formats, this phase is a big win!&lt;/p&gt;
&lt;p&gt;This stage is very important; in one case, we added a single sample and after a few hours of fuzzing it contributed 1.5% line coverage and we discovered 3 new security bugs.&lt;/p&gt;
&lt;p&gt;We then repeated the cycle until we ran out of time or we didn’t see any coverage improvement. This usually means we must either change the target or try to improve the harness.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Triage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once we have a set of test cases that causes a crash, we manually examined the crashes and each crashing input. We quickly changed strategy, as we had a lot of duplicates. We started using &lt;a href=&quot;https://github.com/SkyLined/BugId&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BugId&lt;/a&gt; to automatically find duplicates and minimize the set to only unique crashes. We used our bot for that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig21-1.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-20174&quot; src=&quot;https://research.checkpoint.com/wp-content/uploads/2018/12/fig21-1.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What We Found&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This strategy eventually allowed us to find 53 critical bugs in Adobe Reader and Adobe Pro.&lt;/p&gt;
&lt;p&gt;We repeated this process for different parsers such as images, stream decoders and xslt module, which resulted in the following list of CVEs:&lt;/p&gt;
&lt;p&gtlt;/p&gt;

&lt;p&gt;One of the bugs we found in jp2k was actually reported to Adobe just a short while before we found it, as it seems it was already discovered &lt;a href=&quot;https://www.welivesecurity.com/2018/05/15/tale-two-zero-days/&quot;&gt;being exploited in the wild&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, Adobe Reader is sandboxed, and Reader Protected Mode greatly increases the complexity of turning an exploitable crash inside the sandbox into system compromise, which usually requires another PE exploit, as was used in the mentioned in-the-wild exploit.&lt;/p&gt;
&lt;p&gt;We love WinAFL and hope to see it used more.&lt;/p&gt;
&lt;p&gt;While using WinAFL, we encountered a number of bugs / missing features. We added support for those new features and upstreamed the patches. These include adding support for App verifier in Windows 10, CPU affinity for workers, fixed a few bugs and added some GUI features.&lt;/p&gt;

&lt;p&gt;You can view the commits here:&lt;/p&gt;
&lt;p&gt;Netanel’s commits – &lt;a href=&quot;https://github.com/googleprojectzero/winafl/commits?author=netanel01&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/googleprojectzero/winafl/commits?author=netanel01&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yoava’s commits – &lt;a href=&quot;https://github.com/googleprojectzero/winafl/commits?author=yoava333&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/googleprojectzero/winafl/commits?author=yoava333&lt;/a&gt;&lt;/p&gt;




</description>
<pubDate>Thu, 13 Dec 2018 03:48:05 +0000</pubDate>
<dc:creator>myinnerbanjo</dc:creator>
<og:type>article</og:type>
<og:title>50 CVEs in 50 Days: Fuzzing Adobe Reader - Check Point Research</og:title>
<og:description>A Fuzzing Drill Hits the Motherlode Research By: Yoav Alon, Netanel Ben-Simon Introduction The year 2017 was an inflection point in the vulnerability landscape. The number of new vulnerabilities reported that year was around 14,000, which is over twice the number from the year before (see table below). The probable reason for this is the... Click to Read More</og:description>
<og:url>https://research.checkpoint.com/50-adobe-cves-in-50-days/</og:url>
<og:image>//research.checkpoint.com/wp-content/uploads/2018/12/AdobeVulnerabilities_1021x580.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://research.checkpoint.com/50-adobe-cves-in-50-days/</dc:identifier>
</item>
<item>
<title>Why should I have written ZeroMQ in C, not C++ (2012)</title>
<link>http://250bpm.com/blog:4</link>
<guid isPermaLink="true" >http://250bpm.com/blog:4</guid>
<description>&lt;div class=&quot;list-pages-box&quot; readability=&quot;4.5652173913043&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.7826086956522&quot;&gt;
&lt;p&gt;&lt;strong&gt;Previous:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:3&quot;&gt;Silicon Valley, Hollywood and Iceland as the New Superpower&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;3.9574468085106&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.0851063829787&quot;&gt;
&lt;p&gt;&lt;strong&gt;Next:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:5&quot;&gt;Distributed Computing: The Survey Pattern&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Just to be clear from the very beginning: This is not going to be a Torvalds-ish rant against C++ from the point of view of die-hard C programmer.&lt;/p&gt;
&lt;p&gt;I've been using C++ whole my professional career and it's still my language of choice when doing most projects.&lt;/p&gt;
&lt;p&gt;Naturally, when I started ZeroMQ project back in 2007, I've opted for C++. The main reasons were:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Library of data structures and algorithms (STL) is part of the language. With C I would have to either depend on a 3rd party library or had to write basic algorithms of my own in 1970's manner.&lt;/li&gt;
&lt;li&gt;C++ enforces some basic consistency in the coding style. For example, having the implicit 'this' parameter doesn't allow to pass pointer to the object being worked on using several disparate mechanisms as it often happens to be the case with C projects. Same applies to explicit marking of member variables as private and many other features of the language.&lt;/li&gt;
&lt;li&gt;This point is actually a subset of the previous one, but it's worth of explicit mention: Implementing virtual functions in C is pretty complex and tends to be slightly different for each class which makes understanding and managing the code a pain.&lt;/li&gt;
&lt;li&gt;And finally: Everybody loves destructors being invoked automatically at the end of the block.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Now, almost 5 years later, I would like to publicly admit that using C++ was a poor choice and explain why I believe it is so.&lt;/p&gt;
&lt;p&gt;First, it's important to take into account that ZeroMQ was intended to be a piece of infrastructure with continuous uptime. It should never fail and never exhibit undefined behaviour. Thus, the error handling was of utmost importance. It had to be very explicit and unforgiving.&lt;/p&gt;
&lt;p&gt;C++ exceptions just didn't fill the bill. They are great for guaranteeing that program doesn't fail — just wrap the main function in try/catch block and you can handle all the errors in a single place.&lt;/p&gt;
&lt;p&gt;However, what's great for avoiding straightforward failures becomes a nightmare when your goal is to guarantee that no undefined behaviour happens. The decoupling between raising of the exception and handling it, that makes avoiding failures so easy in C++, makes it virtually impossible to guarantee that the program never runs info undefined behaviour.&lt;/p&gt;
&lt;p&gt;With C, the raising of the error and handling it are tightly couped and reside at the same place in the source code. This makes it easy to understand what happens if error happens:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;int rc = fx ();
if (rc != 0)
    handle_error ();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With C++ you just throw the error. What happens then is not at all obvious:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;int rc = fx ();
if (rc != 0)
    throw std::exception ();&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with that is that you have no idea of who and where is going to handle the exception. As long as the handling code is in the same function the error handling often remains more of less sane although not very readable:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;8&quot;&gt;
&lt;pre&gt;
&lt;code&gt;try {
    ...
    int rc = fx ();
    if (rc != 0)
        throw std::exception (&quot;Error!&quot;);
    ...
catch (std::exception &amp;amp;e) {
    handle_exception ();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, consider what happens when there are two different errors thrown in the same function:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class exception1 {};
class exception2 {};

try {
    ...
    if (condition1)
        throw my_exception1 ();
    ...
    if (condition2)
        throw my_exception2 ();
    ...
}
catch (my_exception1 &amp;amp;e) {
    handle_exception1 ();
}
catch (my_exception2 &amp;amp;e) {
    handle_exception2 ();
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compare that to its C equivalent:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;...
if (condition1)
   handle_exception1 ();
...
if (condition2)
   handle_exception2 ();
...&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's far more readable and — as a bonus — compiler is likely to produce more efficient code.&lt;/p&gt;
&lt;p&gt;However, it doesn't end there. Consider the case when the exception is not handled in the function that raises it. In such case the handling of the error can happen anywhere, depending on where the function is called from.&lt;/p&gt;
&lt;p&gt;While the possibility to handle the exceptions differently in different contexts may seem appealing at the first sight, it quickly turns into a nightmare.&lt;/p&gt;
&lt;p&gt;As you fix individual bugs you'll find out that you are replicating almost the same error handling code in many places. Adding a new function call to the code introduces that possibility that different types of exceptions will bubble up to the calling function where there are not yet properly handled. Which means new bugs.&lt;/p&gt;
&lt;p&gt;If you don't give up on the &quot;no undefined behaviour&quot; principle, you'll have to introduce new exception types all the time to distinguish between different failure modes. However, adding a new exception type means that it can bubble up to different places. Pieces of code have to be added to all those places, otherwise you end up with undefined behaviour.&lt;/p&gt;
&lt;p&gt;At this point you may be screaming: That's what exception specifications are for!&lt;/p&gt;
&lt;p&gt;Well, the problem is that exception specifications are just a tool to handle the problem of exponential growth of the exception handling code in a more systematic manner, but it doesn't solve the problem itself. It can even be said it makes it worse as now you have to write code for the new exception types, new exception handling code *and* new exception specifications.&lt;/p&gt;
&lt;p&gt;Taking the problems described above into account I've decided to use C++ minus exceptions. That's exactly how ZeroMQ and Crossroads I/O looks like today.&lt;/p&gt;
&lt;p&gt;Unfortunately, the problems don't end up here…&lt;/p&gt;
&lt;p&gt;Consider what happens when initialisation of an object can fail. Constructors have no return values, so failure can be reported only by throwing an exception. However, I've decided not to use exceptions. So we have to go for something like this:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    foo ();
    int init ();
    ...
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you create an instance of the class, constructor is called (which cannot fail) and then you explicitly call init function (which can fail).&lt;/p&gt;
&lt;p&gt;This is more complex that what you would do with C:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;struct foo
{
    ...
};

int foo_init (struct foo *self);&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the really bad thing about the C++ version of the code is what happens when developers put some actual code into the constructor instead of systematically keeping the constructors empty.&lt;/p&gt;
&lt;p&gt;If that's the case a special new object state comes into being. It's the 'semi-initialised' state when object has been constructed but init function haven't been called yet. The object (and specifically the destructor) should be modified in such a way as to decently handle the new state. Which in the end means adding new condition to every method.&lt;/p&gt;
&lt;p&gt;Now you say: But that's just a consequence of your artificial restriction of not using exceptions! If exception is thrown in a constructor, C++ runtime cleans the object as appropriate and there is no 'semi-initalised' state whatsoever!&lt;/p&gt;
&lt;p&gt;Fair enough. However, it's beside the point. If you start using exceptions you have to handle all the exception-related complexity as described in the beginning. And that is not a reasonable option for an infrastructure component with the need to be very robust in the face of failures.&lt;/p&gt;
&lt;p&gt;Moreover, even if initialisation wasn't a problem, termination definitely is. You can't really throw exceptions in the destructor. Not because of some self-imposed artificial restrictions but because if the destructor is invoked in the process or unwinding the stack and it happens to throw an exception, it crashes the entire process.&lt;/p&gt;
&lt;p&gt;Thus, if termination can fail, you need two separate functions to handle it:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    ...
    int term ();
    ~foo ();
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we are back to the problem we've had with the initialisation: There's a new 'semi-terminated' state that we have to handle somehow, add new conditions to individual member functions etc.&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo
{
public:
    foo () : state (semi_initialised)
    {
         ...
    }

    int init ()
    {
        if (state != semi_initialised)
            handle_state_error ();
        ...
        state = intitialised;
    }

    int term ()
    {
         if (state != initialised)
             handle_state_error ();
         ...
         state = semi_terminated;
    }

    ~foo ()
    {
         if (state != semi_terminated)
             handle_state_error ();
         ...
    }

    int bar ()
    {
         if (state != initialised)
             handle_state_error ();
         ...
    }
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compare the above to the C implementation. There are only two states. Not initialised object/memory where all the bets are off and the structure can contain random data. And there is initialised state, where the object is fully functional. Thus, there's no need to incorporate a state machine into the object:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;struct foo
{
    ...
};

int foo_init ()
{
    ...
}

int foo_term ()
{
    ...
}

int foo_bar ()
{
    ...
}&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now consider what happens when you add inheritance to the mix. C++ allows to initialise base classes as a part of derived class' constructor. Throwing an exception will destruct the parts of the object that were already successfully initialised:&lt;/p&gt;
&lt;div class=&quot;code&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;code&gt;class foo : public bar
{
public:
    foo () : bar () {}
    ...
};&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, once you introduce separate init functions, the number of states starts to grow. In addition to uninitialised, semi-initialised, initialised and semi-terminated states you encounter combinations of the states. As an example you can imagine a fully initialised base class with semi-initialised derived class.&lt;/p&gt;
&lt;p&gt;With objects like these it's almost impossible to guarantee predictable behaviour. There's a lot of different combinations of semi-initialised and semi-terminated parts of the object and given that failures that cause them are often very rare the most of the related code probably goes into the production untested.&lt;/p&gt;
&lt;p&gt;To summarise the above, I believe that requirement for fully-defined behaviour breaks the object-oriented programming model. The reasoning is not specific to C++. It applies to any object-oriented language with constructors and destructors.&lt;/p&gt;
&lt;p&gt;Consequently is seems that object-oriented languages are better suited for the environments where the need for rapid development beats the requirement for no undefined behaviour.&lt;/p&gt;
&lt;p&gt;There's no silver bullet here. The systems programming will have to live on with C.&lt;/p&gt;
&lt;p&gt;By the way, I've started experimenting with translating ZeroMQ into C lately. The code looks great!&lt;/p&gt;
&lt;p&gt;EDIT: The endeavour evolved into a new project called &lt;em&gt;nanomsg&lt;/em&gt; in the meantime. Check it &lt;a href=&quot;http://nanomsg.org&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read &lt;a href=&quot;http://250bpm.com/blog:8&quot;&gt;part II of the article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Martin Sústrik, May 10th, 2012&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;4.5652173913043&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.7826086956522&quot;&gt;
&lt;p&gt;&lt;strong&gt;Previous:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:3&quot;&gt;Silicon Valley, Hollywood and Iceland as the New Superpower&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;list-pages-box&quot; readability=&quot;3.9574468085106&quot;&gt;
&lt;div class=&quot;list-pages-item&quot; readability=&quot;4.0851063829787&quot;&gt;
&lt;p&gt;&lt;strong&gt;Next:&lt;/strong&gt; &lt;a href=&quot;http://250bpm.com/blog:5&quot;&gt;Distributed Computing: The Survey Pattern&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


</description>
<pubDate>Wed, 12 Dec 2018 23:40:06 +0000</pubDate>
<dc:creator>sytelus</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://250bpm.com/blog:4</dc:identifier>
</item>
<item>
<title>Puzzle-solving &amp;#039;doesn&amp;#039;t slow down mental decline in older people&amp;#039;</title>
<link>https://www.nhs.uk/news/older-people/puzzle-solving-doesnt-slow-down-mental-decline-older-people/</link>
<guid isPermaLink="true" >https://www.nhs.uk/news/older-people/puzzle-solving-doesnt-slow-down-mental-decline-older-people/</guid>
<description>&lt;p&gt;&quot;Crosswords do not prevent dementia but can make your brain sharper to start off with,&quot; reports the Mail Online.&lt;/p&gt;
&lt;p&gt;The question of whether doing puzzles and problem-solving activities can stave off mental decline in older age is often debated.&lt;/p&gt;
&lt;p&gt;This study of 498 people born in Scotland in 1936 found people who enjoyed intellectually stimulating tasks had better mental functioning at around age 64 than less intellectually active people, but that their rate of mental decline from that point was the same.&lt;/p&gt;
&lt;p&gt;Unlike most previous research, this study was able to take account of the effects of childhood intelligence, as everyone in the study had taken an intelligence test aged 11.&lt;/p&gt;
&lt;p&gt;It's still possible that those who enjoy crosswords and puzzles tend to naturally have a higher mental ability to start with. Or it could be that doing these activities over many years from an early age can help sharpen minds.&lt;/p&gt;
&lt;p&gt;So a possible message to take from this research is: if you enjoy regularly exercising your brain in this way, don't leave it until retirement age before you start. It could be that the earlier you do this, the better.&lt;/p&gt;
&lt;p&gt;There's no way to definitely prevent dementia. But we do know that what's good for the heart and circulation is also usually good for the brain.&lt;/p&gt;
&lt;p&gt;Physical exercise, a healthy diet, not smoking and not drinking too much alcohol may all help reduce the risk.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nhs.uk/conditions/alzheimers-disease/prevention/&quot;&gt;Find out more about ways to reduce your risk of dementia&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;where-did-the-story-come-from&quot;&gt;Where did the story come from?&lt;/h2&gt;
&lt;p&gt;The researchers who carried out the study were from the University of Aberdeen, NHS Grampian and the National University of Ireland.&lt;/p&gt;
&lt;p&gt;The study was funded by the Henry Smith Charity, the Biology and Biotechnology Science Research Council, the Medical Research Council, the Wellcome Trust, the Scottish Government Health Department and Alzheimer's Research UK.&lt;/p&gt;
&lt;p&gt;It was published in the &lt;a href=&quot;https://www.nhs.uk/news/health-news-glossary#peer-review&quot;&gt;peer-reviewed&lt;/a&gt; British Medical Journal on an open access basis, so it's &lt;a href=&quot;https://www.bmj.com/content/bmj/363/bmj.k4925.full.pdf&quot;&gt;free to read online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most of the UK media carried reasonably balanced accounts of the study, although the Metro's assertion that &quot;People who do puzzles to try and stave off age-related mental decline may be wasting their time&quot; is a little harsh.&lt;/p&gt;
&lt;p&gt;And the stories all focused on crossword or Sudoko puzzles, but the study actually asked whether people enjoyed solving complicated problems, not whether they did puzzles.&lt;/p&gt;
&lt;h2 id=&quot;what-kind-of-research-was-this&quot;&gt;What kind of research was this?&lt;/h2&gt;
&lt;p&gt;This &lt;a href=&quot;https://www.nhs.uk/news/health-news-glossary#cohort-study&quot;&gt;cohort study&lt;/a&gt; used childhood data plus tests done over 15 years from the age of around 64 to measure mental ability in older adulthood.&lt;/p&gt;
&lt;p&gt;The researchers wanted to see if people's self-reported level of intellectual engagement (such as reading, problem-solving, thinking and being curious about the world) related to their mental ability, and to changes in mental ability as people got older.&lt;/p&gt;
&lt;p&gt;This type of study is useful for comparing how factors relate to each other, but can't prove that 1 factor (in this case, intellectual engagement) directly causes another (slower mental decline).&lt;/p&gt;
&lt;p&gt;Too many other factors may be involved, such as genetic and lifestyle factors and initial intellectual ability.&lt;/p&gt;
&lt;h2 id=&quot;what-did-the-research-involve&quot;&gt;What did the research involve?&lt;/h2&gt;
&lt;p&gt;Researchers recruited 498 Scottish adults aged around 64 who'd taken intelligence tests on the same day in 1947, when aged 11 or 12.&lt;/p&gt;
&lt;p&gt;They were asked to fill in questionnaires about their intellectual engagement, and were then tested on their reading abilities.&lt;/p&gt;
&lt;p&gt;They did 2 tests of mental ability (1 for memory and the other for information processing), which were repeated on up to 5 occasions over the next 14 years.&lt;/p&gt;
&lt;p&gt;Researchers looked for the possible effects of intellectual engagement on mental ability and changes in mental ability over time, while taking account of people's childhood abilities and education.&lt;/p&gt;
&lt;p&gt;Intellectual engagement was measured by questions asking about:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;reading – for example, whether people enjoy reading complicated novels and read 10 books or more a year&lt;/li&gt;
&lt;li&gt;abstract thinking – for example, whether people like to think deeply about things, even if they have no practical outcome&lt;/li&gt;
&lt;li&gt;problem-solving – for example, if they enjoy coming up with new solutions to complicated problems&lt;/li&gt;
&lt;li&gt;intellectual curiosity – for example, if they enjoy learning about new things in a wide range of fields&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The mental ability tests included remembering a list of words read aloud, and matching symbols with corresponding digits. The tests measure verbal memory and speed of mental processing.&lt;/p&gt;
&lt;h2 id=&quot;what-were-the-basic-results&quot;&gt;What were the basic results?&lt;/h2&gt;
&lt;p&gt;People who had higher scores on childhood intelligence tests were more likely to be intellectually engaged. Women also scored higher on mental processing and intellectual engagement than men.&lt;/p&gt;
&lt;p&gt;As expected, people's mental ability scores declined as they got older, from an average age of 64 to an average age of 78 at the end of the study.&lt;/p&gt;
&lt;p&gt;Many people also dropped out of the study. Only 96 of the 498 people recruited took part in the last round of testing.&lt;/p&gt;
&lt;p&gt;The researchers lost touch with 13 people, while 57 people died and 332 declined to take part.&lt;/p&gt;
&lt;p&gt;Intellectual engagement in the problem solving area was linked to having higher test results for mental ability, even after accounting for childhood ability and education.&lt;/p&gt;
&lt;p&gt;While intellectual engagement in other areas was also linked to higher test results, these tended to be explained by childhood ability, education or female gender.&lt;/p&gt;
&lt;p&gt;But none of the measures of intellectual engagement was linked to the speed of decline of people's mental abilities over time.&lt;/p&gt;
&lt;h2 id=&quot;how-did-the-researchers-interpret-the-results&quot;&gt;How did the researchers interpret the results?&lt;/h2&gt;
&lt;p&gt;The researchers said their study &quot;suggests that engagement adds to an individual's cognitive reserve – that is, individuals who engage in regular problem-solving activities might require greater age-related neuropathological burdens [such as damage to the brain from Alzheimer's disease] before clinical thresholds of impairment are crossed and symptoms of cognitive decline are noted&quot;.&lt;/p&gt;
&lt;p&gt;In other words, people who like problem-solving may have a similar decline in mental ability, but it takes more damage to the brain for them to reach the point at which it becomes noticeable, because they start from a higher level of functioning.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As we live longer, many of us fear losing our mental faculties with age. The idea that we can stave off decline by doing crossword puzzles is attractive, but this study suggests it's more complicated than that.&lt;/p&gt;
&lt;p&gt;While problem-solving seems to be linked with improved mental abilities, it doesn't necessarily protect against the decline of those abilities with age.&lt;/p&gt;
&lt;p&gt;The study has a few limitations worth pointing out. The first is the problem of drop-out over time.&lt;/p&gt;
&lt;p&gt;People are more likely to agree to continued testing if they feel their intellectual abilities remain sharp, and those who have dementia may not be able to take part.&lt;/p&gt;
&lt;p&gt;This means the study may underestimate the possible protective effects of intellectual engagement, as those tested in the later phases of the study were likely to have higher intellectual engagement and higher mental abilities than those who dropped out.&lt;/p&gt;
&lt;p&gt;The study benefited from having results of childhood tests of intelligence, but we don't know how those tests may have compared with modern IQ or intelligence testing.&lt;/p&gt;
&lt;p&gt;Even if comparable, it's always going to be difficult to ensure that the analyses have completely ruled out the influence of a person's natural mental abilities from the start.&lt;/p&gt;
&lt;p&gt;Observational cohort studies can never prove that 1 factor is the main cause of another, so even if the study had found slower mental decline among people who liked problem-solving, we couldn't say for sure that puzzles were the reason for this.&lt;/p&gt;
&lt;p&gt;But the study does seem to show that life-long intellectual engagement and problem-solving is linked to higher mental functioning, so it's not the case that giving your brain a workout is a waste of time, especially if you find those activities enjoyable and fulfilling.&lt;/p&gt;
&lt;p&gt;Other ways you can try to keep your brain healthy throughout life are:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;not smoking&lt;/li&gt;
&lt;li&gt;not driking too much alcohol&lt;/li&gt;
&lt;li&gt;eating a healthy, balanced diet, including at least 5 portions of fruit and vegetables every day&lt;/li&gt;
&lt;li&gt;exercising for at least 150 minutes every week by doing moderate-intensity aerobic activity (such as cycling or fast walking), or as much as you're able to&lt;/li&gt;
&lt;li&gt;making sure your blood pressure is checked and controlled through regular health tests&lt;/li&gt;
&lt;li&gt;if you have diabetes, making sure you keep to the recommended diet and take your medication&lt;/li&gt;
&lt;/ul&gt;&lt;div class=&quot;author&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Analysis by Bazian&lt;br/&gt;Edited by NHS Website&lt;/p&gt;
&lt;/div&gt;


</description>
<pubDate>Wed, 12 Dec 2018 23:37:45 +0000</pubDate>
<dc:creator>open-source-ux</dc:creator>
<og:url>https://www.nhs.uk/news/older-people/puzzle-solving-doesnt-slow-down-mental-decline-older-people/</og:url>
<og:title>Puzzle-solving 'doesn't slow mental decline in older people'</og:title>
<og:description>&quot;Crosswords do not prevent dementia but can make your brain sharper to start off with,&quot; reports the Mail Online. The question of whether doing puzzles and problem-solving activities can stave off mental decline in older age is often debated. This study of 498 people born in Scotland in 1936 found people who enjoyed intellectually stimulating tasks had better mental functioning at around age 64 than less intellectually active people, but that their rate of mental decline from that point was the same.</og:description>
<og:type>website</og:type>
<og:image>https://www.nhs.uk/static/nhsuk_behind_the_headlines/img/open-graph.b2674bec1a4b.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nhs.uk/news/older-people/puzzle-solving-doesnt-slow-down-mental-decline-older-people/</dc:identifier>
</item>
<item>
<title>Why Use F#?</title>
<link>https://fsharpforfunandprofit.com/why-use-fsharp/</link>
<guid isPermaLink="true" >https://fsharpforfunandprofit.com/why-use-fsharp/</guid>
<description>&lt;h2&gt;&lt;img src=&quot;https://fsharpforfunandprofit.com/assets/img/glyphicons/glyphicons_280_settings.png&quot; class=&quot;bs-icon&quot;/&gt; Completeness&lt;/h2&gt;
&lt;p&gt;Although it is a functional language at heart, F# does support other styles which are not 100% pure, which makes it much easier to interact with the non-pure world of web sites, databases, other applications, and so on. In particular, F# is designed as a hybrid functional/OO language, so it can do &lt;a href=&quot;https://fsharpforfunandprofit.com/posts/completeness-anything-csharp-can-do/&quot;&gt;virtually everything that C# can do&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, F# is &lt;a href=&quot;https://fsharpforfunandprofit.com/posts/completeness-seamless-dotnet-interop/&quot;&gt;part of the .NET ecosystem&lt;/a&gt;, which gives you seamless access to all the third party .NET libraries and tools. It runs on most platforms, including Linux and smart phones (via Mono).&lt;/p&gt;
&lt;p&gt;Finally, it is well integrated with Visual Studio, which means you get a great IDE with IntelliSense support, a debugger, and many plug-ins for unit tests, source control, and other development tasks. Or on Linux, you can use the MonoDevelop IDE instead.&lt;/p&gt;
</description>
<pubDate>Wed, 12 Dec 2018 23:31:29 +0000</pubDate>
<dc:creator>adgasf</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://fsharpforfunandprofit.com/why-use-fsharp/</dc:identifier>
</item>
</channel>
</rss>