<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Sonos&amp;#039;s “recycle mode” intentionally bricks devices so they can&amp;#039;t be reused</title>
<link>https://twitter.com/atomicthumbs/status/1210662988828442624</link>
<guid isPermaLink="true" >https://twitter.com/atomicthumbs/status/1210662988828442624</guid>
<description>&lt;p&gt;To add insult to injury, there are complaints on Sonos' support forums from people who've managed to accidentally put their devices into recycling mode, and been told by Sonos support that there's no way to stop the countdown, forcing them to buy new devices after 21 days.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Dec 2019 21:57:02 +0000</pubDate>
<dc:creator>gyger</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/atomicthumbs/status/1210662988828442624</dc:identifier>
</item>
<item>
<title>Electric vehicle is Turkey’s first fully domestically-produced car</title>
<link>https://www.reuters.com/article/us-turkey-autos/new-turkish-electric-car-project-investment-seen-at-3-7-billion-idUSKBN1YV09E</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-turkey-autos/new-turkish-electric-car-project-investment-seen-at-3-7-billion-idUSKBN1YV09E</guid>
<description>&lt;p&gt;ISTANBUL (Reuters) - Turkey unveiled its first fully domestically-produced car on Friday, saying it aimed to eventually produce up to 175,000 a year of the electric vehicle in a project expected to cost 22 billion lira ($3.7 billion) over 13 years.&lt;/p&gt;
&lt;div class=&quot;PrimaryAsset_container&quot; readability=&quot;8&quot;&gt;
&lt;div class=&quot;Image_container&quot; tabindex=&quot;-1&quot; readability=&quot;11&quot;&gt;
&lt;div class=&quot;LazyImage_container LazyImage_dark&quot;&gt;&lt;img src=&quot;https://s3.reutersmedia.net/resources/r/?m=02&amp;amp;d=20191227&amp;amp;t=2&amp;amp;i=1469079835&amp;amp;r=LYNXMPEFBQ0QJ&amp;amp;w=20&quot; aria-label=&quot;Turkish President Tayyip Erdogan poses with a prototype of the domestic electric car project in Gebze, Turkey, December 27, 2019. Presidential Press Office/Handout via REUTERS&quot;/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span&gt;Turkish President Tayyip Erdogan poses with a prototype of the domestic electric car project in Gebze, Turkey, December 27, 2019. Presidential Press Office/Handout via REUTERS&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The project has been a long-time goal of President Tayyip Erdogan and his ruling AK Party as a demonstration of the country’s growing economic power.&lt;/p&gt;
&lt;p&gt;Speaking at the unveiling ceremony, Erdogan said Turkey aimed not only to sell the car domestically but also wanted it to become a global brand, starting with Europe.&lt;/p&gt;
&lt;p&gt;“We’re all together witnessing Turkey’s 60-year-old dream become reality,” he said, referring to failed plans in the past to build a fully home-produced car. “When we see this car on roads around the whole world, we will have reached our goal.”&lt;/p&gt;
&lt;p&gt;Following his speech, a red SUV model of the car and another grey sedan one were raised onto the stage, sporting the TOGG label of the consortium that is building them.&lt;/p&gt;
&lt;p&gt;Erdogan said the charging infrastructure for electric cars would be ready nationwide by 2022.&lt;/p&gt;
&lt;p&gt;Turkey is already a big exporter to Europe of cars made domestically by firms such as Ford (&lt;span id=&quot;”symbol_F.N_0”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/F.N&quot;&gt;F.N&lt;/a&gt;&lt;/span&gt;), Fiat Chrysler (&lt;span id=&quot;”symbol_FCHA.MI_1”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/FCHA.MI&quot;&gt;FCHA.MI&lt;/a&gt;&lt;/span&gt;), Renault (&lt;span id=&quot;”symbol_RENA.PA_2”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/RENA.PA&quot;&gt;RENA.PA&lt;/a&gt;&lt;/span&gt;), Toyota (&lt;span id=&quot;”symbol_7203.T_3”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/7203.T&quot;&gt;7203.T&lt;/a&gt;&lt;/span&gt;) and Hyundai (&lt;span id=&quot;”symbol_005380.KS_4”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/005380.KS&quot;&gt;005380.KS&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The new project, launched in October, will receive state support such as tax breaks, and establish a production facility in the automotive hub of Bursa in northwest Turkey, according to a presidential decision in the country’s Official Gazette.&lt;/p&gt;
&lt;p&gt;Five models of the car will be produced, the statement said, adding the government had guaranteed to buy 30,000 of the vehicles by 2035.&lt;/p&gt;
&lt;p&gt;Erdogan first revealed plans in November 2017 &lt;a href=&quot;https://fr.reuters.com/article/bankingfinancial-SP/idUKL8N1N851Z&quot;&gt;here&lt;/a&gt; to launch a car made entirely in Turkey by 2021.&lt;/p&gt;
&lt;p&gt;The consortium, called Turkey’s Automobile Initiative Group (TOGG), was established in mid 2018 by five industrial groups: Anadolu Group, BMC, Kok Group, mobile phone operator Turkcell (&lt;span id=&quot;”symbol_TCELL.IS_5”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/TCELL.IS&quot;&gt;TCELL.IS&lt;/a&gt;&lt;/span&gt;) and Zorlu Holding, the parent of TV maker Vestel (&lt;span id=&quot;”symbol_VESTL.IS_6”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/VESTL.IS&quot;&gt;VESTL.IS&lt;/a&gt;&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;TOGG’s CEO is former Bosch executive Gurcan Karakas and its chief operating officer is Sergio Rocha, former General Motors Korea chief executive. It said it would begin production in 2022 with compact SUVs.&lt;/p&gt;
&lt;p&gt;In October, Volkswagen (&lt;span id=&quot;”symbol_VOWG_p.DE_7”&quot;&gt;&lt;a href=&quot;https://www.reuters.com/companies/VOWG_p.DE&quot;&gt;VOWG_p.DE&lt;/a&gt;&lt;/span&gt;) said it had postponed a final decision on whether to build a car plant in Turkey amid international criticism of an October Turkish military operation in Syria.&lt;/p&gt;
&lt;p&gt;($1 = 5.9339 liras)&lt;/p&gt;
&lt;div class=&quot;Attribution_container&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;Attribution_attribution&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;Attribution_content&quot;&gt;Additional reporting by Ebru Tuncay; Writing by Daren Butler and Ali Kucukgocmen; Editing by Jonathan Spicer and Mark Potter&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;StandardArticleBody_trustBadgeContainer&quot;&gt;&lt;span class=&quot;StandardArticleBody_trustBadgeTitle&quot;&gt;Our Standards:&lt;/span&gt;&lt;span class=&quot;trustBadgeUrl&quot;&gt;&lt;a href=&quot;http://thomsonreuters.com/en/about-us/trust-principles.html&quot;&gt;The Thomson Reuters Trust Principles.&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 27 Dec 2019 19:13:03 +0000</pubDate>
<dc:creator>emrehan</dc:creator>
<og:title>Turkey unveils first fully homemade car in $3.7 billion bet on electric</og:title>
<og:url>https://www.reuters.com/article/us-turkey-autos-idUSKBN1YV09E</og:url>
<og:type>article</og:type>
<og:description>Turkey unveiled its first fully domestically-produced car on Friday, saying it a...</og:description>
<og:image>https://s3.reutersmedia.net/resources/r/?m=02&amp;d=20191227&amp;t=2&amp;i=1469079835&amp;w=1200&amp;r=LYNXMPEFBQ0QJ</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-turkey-autos/new-turkish-electric-car-project-investment-seen-at-3-7-billion-idUSKBN1YV09E</dc:identifier>
</item>
<item>
<title>Apple News No Longer Supports RSS</title>
<link>https://mjtsai.com/blog/2019/12/26/apple-news-no-longer-supports-rss/</link>
<guid isPermaLink="true" >https://mjtsai.com/blog/2019/12/26/apple-news-no-longer-supports-rss/</guid>
<description>&lt;p&gt;&lt;a href=&quot;http://osxdaily.com/2016/02/08/add-rss-feeds-sites-news-app-ios/&quot;&gt;OSXDaily&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;http://osxdaily.com/2016/02/08/add-rss-feeds-sites-news-app-ios/&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;Want to add an RSS feed of a site to News app? Can’t find a site you like in the Apple approved list on News app? No problem, here’s how you can add them yourself from Safari in iOS and subscribe directly[…]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/#comment-3138416&quot;&gt;David A. Desrosiers&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;https://mjtsai.com/blog/2018/04/18/switching-from-rss-to-apple-news-format/#comment-3138416&quot; readability=&quot;22&quot;&gt;
&lt;p&gt;Apple News on iOS and macOS no longer supports adding RSS or ATOM feeds from anywhere. Full-stop, period. It will immediately fetch, then reject those feeds and fail to display them, silently without any message or error. I can see in my own server's log that they make the request using the correct app on iOS and macOS, but then ignore the feed completely; a validated, clean feed.&lt;/p&gt;
&lt;p&gt;They ONLY support their own, hand-picked, curated feeds now. You can visit a feed in Safari, and it will prompt you to open the feed in Apple News, then silently ignore that request, after fetching the full feed content from the remote site.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Previously:&lt;/p&gt;

&lt;blockquote cite=&quot;https://birchtree.me/blog/apple-news-drops-support-for-rss/&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;I wish I could remember who it was, but there were some folks who thought I was crazy to use Apple News and an RSS reader since Apple News could aggregate my RSS feeds too. I didn’t use it at the time because I thought it was a bad RSS reader and didn’t do what I wanted. Now I’m happy that I didn’t put my eggs (of feeds) in one basket; a basket that doesn’t have an export option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See also: &lt;a href=&quot;https://news.ycombinator.com/item?id=21889414&quot;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/daveverwer/status/1210517673496449024&quot;&gt;Dave Verwer&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;https://twitter.com/daveverwer/status/1210517673496449024&quot; readability=&quot;12&quot;&gt;
&lt;p&gt;I was all ready to celebrate this change until I realised that the News app still captures the click when you visit an RSS feed, but then just refuses to do anything with it.&lt;/p&gt;
&lt;p&gt;Apple News isn’t (what I consider) an RSS reader, yet insisted on capturing every RSS feed I clicked on. Now it’s even worse. Just let it open in Safari like it used to so I can get the RSS URL myself and add it to my &lt;em&gt;actual&lt;/em&gt; feed reader. I really hope this gets fixed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/simonw/status/1210622665607860224&quot;&gt;Simon Willison&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;https://twitter.com/simonw/status/1210622665607860224&quot; readability=&quot;10&quot;&gt;
&lt;p&gt;What bothers me is that in Mobile Safari the Apple News app still hijacks clicks on Atom/RSS feeds - so if you click a feed icon you’ll be bounced to the News app, which will then display an error message.&lt;/p&gt;
&lt;p&gt;I don’t think there’s a workaround for this. Atom links just look broken.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/satefan/status/1210624991085125632&quot;&gt;Stefan Arentz&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;https://twitter.com/satefan/status/1210624991085125632&quot; readability=&quot;11&quot;&gt;
&lt;p&gt;This is fine, there are plenty great RSS readers for iOS. What is not fine is that Apple News is still claiming the &lt;code&gt;rss://&lt;/code&gt; scheme. What Apple needs to do is implement a proper system wide setting that lets you pick the applications that &lt;em&gt;you&lt;/em&gt; want for http, rss, mail, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Previously:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/satefan/status/1210626021566877696&quot;&gt;Stefan Arentz&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote cite=&quot;https://twitter.com/satefan/status/1210626021566877696&quot; readability=&quot;6&quot;&gt;
&lt;p&gt;On iOS 13.3, tapping on an RSS link in Safari ..&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;tags&quot;&gt;&lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/apple-news/&quot;&gt;Apple News&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/atom-syndication-format/&quot;&gt;Atom Syndication Format&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/ios/&quot;&gt;iOS&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/ios-13/&quot;&gt;iOS 13&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/mac/&quot;&gt;Mac&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/macos-10-15/&quot;&gt;macOS 10.15 Catalina&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/mobilesafari/&quot;&gt;MobileSafari&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/rss/&quot;&gt;RSS&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/top-posts/&quot;&gt;Top Posts&lt;/a&gt; &lt;a rel=&quot;tag&quot; href=&quot;https://mjtsai.com/blog/tag/web/&quot;&gt;Web&lt;/a&gt;&lt;/p&gt;



















&lt;p&gt;Stay up-to-date by subscribing to the &lt;a href=&quot;https://mjtsai.com/blog/2019/12/26/apple-news-no-longer-supports-rss/feed/&quot;&gt;Comments RSS Feed&lt;/a&gt; for this post.&lt;/p&gt;


</description>
<pubDate>Fri, 27 Dec 2019 17:34:33 +0000</pubDate>
<dc:creator>newscracker</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://mjtsai.com/blog/2019/12/26/apple-news-no-longer-supports-rss/</dc:identifier>
</item>
<item>
<title>Shopify CEO says long hours aren&amp;#039;t necessary for success</title>
<link>https://twitter.com/tobi/status/1210242184341000192</link>
<guid isPermaLink="true" >https://twitter.com/tobi/status/1210242184341000192</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://twitter.com/tobi/status/1210242184341000192&quot;&gt;https://twitter.com/tobi/status/1210242184341000192&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21892492&quot;&gt;https://news.ycombinator.com/item?id=21892492&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 459&lt;/p&gt;
&lt;p&gt;# Comments: 202&lt;/p&gt;
</description>
<pubDate>Fri, 27 Dec 2019 17:10:26 +0000</pubDate>
<dc:creator>sjs</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://mobile.twitter.com/tobi/status/1210242184341000192</dc:identifier>
</item>
<item>
<title>Show HN: CoreUI Icons – open-source icons with marks in SVG, Webfont and raster</title>
<link>https://github.com/coreui/coreui-icons/tree/1.0.0</link>
<guid isPermaLink="true" >https://github.com/coreui/coreui-icons/tree/1.0.0</guid>
<description>&lt;p align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/9e713cc2684d2a13d17aed8a8319373cacb48b36/68747470733a2f2f636f726575692e696f2f696d616765732f6272616e64732f636f726575692d69636f6e732e737667&quot;&gt;&lt;img height=&quot;50&quot; src=&quot;https://camo.githubusercontent.com/9e713cc2684d2a13d17aed8a8319373cacb48b36/68747470733a2f2f636f726575692e696f2f696d616765732f6272616e64732f636f726575692d69636f6e732e737667&quot; data-canonical-src=&quot;https://coreui.io/images/brands/coreui-icons.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.npmjs.com/package/@coreui/icons&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;npm (scoped)&quot; src=&quot;https://camo.githubusercontent.com/85969db2292a6544a663c48507919c20eb9a2a72/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40636f726575692f69636f6e73&quot; data-canonical-src=&quot;https://img.shields.io/npm/v/@coreui/icons&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/@coreui/icons&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;npm&quot; src=&quot;https://camo.githubusercontent.com/aa5c909036f2ef852e934ee30b1c08e8755c0de6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f40636f726575692f69636f6e73&quot; data-canonical-src=&quot;https://img.shields.io/npm/dw/@coreui/icons&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoreUI Icons is an open-source icon set with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/6b9a71a7be4404bf82449d16e82b200b1e7e691d/68747470733a2f2f636f726575692e696f2f696d616765732f69636f6e735f667265655f62675f7365742e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/6b9a71a7be4404bf82449d16e82b200b1e7e691d/68747470733a2f2f636f726575692e696f2f696d616765732f69636f6e735f667265655f62675f7365742e706e67&quot; alt=&quot;CoreUI Free Icons&quot; data-canonical-src=&quot;https://coreui.io/images/icons_free_bg_set.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Preview &amp;amp; Docs&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://coreui.io/icons/&quot; rel=&quot;nofollow&quot;&gt;https://coreui.io/icons/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;CDN&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@coreui/icons/css/all.min.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@coreui/icons/css/free.min.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@coreui/icons/css/brand.min.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@coreui/icons/css/flag.min.css&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;NPM&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
npm install @coreui/icons --save
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Yarn&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
yarn add @coreui/icons
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can also clone or &lt;a href=&quot;https://github.com/coreui/coreui-icons/archive/master.zip&quot;&gt;download this repository&lt;/a&gt; as zip.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;h3&gt;Basic Use&lt;/h3&gt;
&lt;p&gt;You can place CoreUI Icons just about anywhere using a CSS style prefix and the icon’s name. CoreUI Icons are designed to be used with inline elements ex. &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please use &lt;code&gt;cil-&lt;/code&gt; prefix for linear icons, &lt;code&gt;cib-&lt;/code&gt; prefix for brand icons, and &lt;code&gt;cif-&lt;/code&gt; prefix for flag icons.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cil-energy&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cib-twitter&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cif-us&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;i&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;SVG Sprites&lt;/h3&gt;
&lt;p&gt;SVG sprites let you quickly use vector icons in your website. We have prepared all the icon set styles into their own SVG sprites.&lt;/p&gt;
&lt;p&gt;Place sprite files with the rest of your static files, like images and styles, in your project. Make sure to add a proper path to the SVG sprite file, and use the fragment identifier specific to the SVG icon or symbol you want to display.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;34&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;xlink:href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;path/to/free.svg#cil-airplane-mode&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;xlink:href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;path/to/brand.svg#cib-twitter&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;xlink:href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;path/to/flag.svg#cif-uss&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;SVG Symbols&lt;/h3&gt;
&lt;p&gt;When you download your icon set, it comes with a sprites directory that contains SVG icon definitions. These icons can be referenced and used as inline SVGs like so:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;35&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&amp;lt;!--&lt;/span&gt; Define the symbols &lt;span class=&quot;pl-c&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;cil-apple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;viewBox&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;0 0 24 24&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;title&lt;/span&gt;&amp;gt;apple&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;title&lt;/span&gt;&amp;gt;
&amp;lt;path d=&quot;M21.207 9.987c-0.497-1.275-1.29-2.262-2.293-2.863-0.25 0.477-0.524 0.888-0.835 1.267l0.010-0.013c0.002 0.001 0.004 0.002 0.005 0.003 1.494 0.859 2.364 3.054 2.114 5.338-0.414 3.784-1.563 6.377-3.236 7.302-1.087 0.601-2.444 0.516-4.031-0.254l-0.155-0.075h-1.143l-0.155 0.075c-1.588 0.77-2.944 0.856-4.031 0.254-1.673-0.925-2.822-3.518-3.236-7.302-0.25-2.284 0.619-4.479 2.114-5.338 0.445-0.259 0.979-0.411 1.549-0.411 0.011 0 0.023 0 0.034 0l-0.002-0c1.132 0 2.436 0.53 3.853 1.578l0.051 0.037s2.043-0.248 2.852-0.616c2.439-1.107 2.976-2.867 3.072-3.106 0.262-0.632 0.414-1.366 0.414-2.135 0-0.813-0.17-1.587-0.476-2.287l0.014 0.037-0.191-0.477-0.513 0.005c-3.151 0.036-5.692 2.598-5.692 5.755 0 0.255 0.017 0.507 0.049 0.754l-0.003-0.029c-0.886-0.496-1.747-0.813-2.573-0.944-1.169-0.186-2.241-0.005-3.186 0.538-1.038 0.596-1.855 1.601-2.364 2.906-0.463 1.186-0.638 2.57-0.493 3.895 0.475 4.344 1.859 7.267 4.001 8.452 0.655 0.37 1.438 0.588 2.272 0.588 0.010 0 0.021-0 0.031-0h-0.002c0.918-0 1.904-0.244 2.952-0.73h0.461c1.987 0.923 3.754 0.971 5.253 0.142 2.142-1.185 3.526-4.107 4.001-8.452 0.145-1.325-0.030-2.709-0.493-3.895zM15.376 2.851c0.322-0.143 0.697-0.251 1.088-0.305l0.022-0.003c0.106 0.354 0.167 0.761 0.167 1.182 0 2.15-1.593 3.927-3.663 4.215l-0.022 0.003c-0.106-0.354-0.167-0.76-0.167-1.181 0-1.743 1.048-3.242 2.547-3.901l0.027-0.011z&quot;&amp;gt;&amp;lt;/path&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;symbol&lt;/span&gt;&amp;gt;

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;&amp;lt;!--&lt;/span&gt; Use the defined symbols &lt;span class=&quot;pl-c&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;xlink:href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;#cil-apple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also possible to link to an external SVG containing the definitions:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;icon-home&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;xlink:href&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;path/to/free.svg#cil-apple&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;use&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;svg&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Referencing an external SVG has the advantage that your icons get cached, with one HTTP request. But the external SVG and the HTML should be served from the same domain. This approach works fine in modern browsers except for IE 9+. In order to support IE 9+, You should use &lt;code&gt;/js/svgxuse.js&lt;/code&gt; or &lt;code&gt;/js/svgxuse.min.js&lt;/code&gt;. This polyfill detects if the icons are loaded properly; if they aren't, it sends one HTTP request to fetch and cache symbol definitions.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-text-html-basic&quot; readability=&quot;32&quot;&gt;
&lt;pre&gt;
&amp;lt;&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;pl-e&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/@coreui/icons/js/svgxuse.js&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span class=&quot;pl-ent&quot;&gt;script&lt;/span&gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;CoreUI Icons PRO&lt;/h2&gt;
&lt;p&gt;If our free icon set is insufficient you can buy &lt;a href=&quot;https://coreui.io/icons/pro/&quot; rel=&quot;nofollow&quot;&gt;CoreUI Icons Pro&lt;/a&gt; with more than 2000 icons, and more styles - Solid, Duo-Tone and Linear.&lt;/p&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;h3&gt;CoreUI Icons Free Icons&lt;/h3&gt;
&lt;p&gt;CoreUI Icons Free is free, open source, and GPL friendly. You can use it for commercial projects, open source projects, or really almost whatever you want.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Icons — CC BY 4.0 License
&lt;ul&gt;&lt;li&gt;In the CoreUI Icons Free, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fonts — SIL OFL 1.1 License
&lt;ul&gt;&lt;li&gt;In the CoreUI Icons Free, the SIL OLF license applies to all icons packaged as web and desktop font files.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Code — MIT License
&lt;ul&gt;&lt;li&gt;In the CoreUI Icons Free, the MIT license applies to all non-font and non-icon files.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;CoreUI Icons Brand and Flag Icons&lt;/h3&gt;
&lt;h4&gt;Brand Icons&lt;/h4&gt;
&lt;p&gt;All brand icons are trademarks of their respective owners. The use of these trademarks does not indicate endorsement of the trademark holder by Font Awesome, nor vice versa. &lt;strong&gt;Please do not use brand logos for any purpose except to represent the company, product, or service to which they refer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CC0 1.0 Universal&lt;/strong&gt; Statement of Purpose&lt;/p&gt;
&lt;p&gt;The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an &quot;owner&quot;) of an original work of authorship and/or a database (each, a &quot;Work&quot;).&lt;/p&gt;
&lt;p&gt;Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (&quot;Commons&quot;) that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.&lt;/p&gt;
&lt;p&gt;For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the &quot;Affirmer&quot;), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (&quot;Copyright and Related Rights&quot;). Copyright and Related Rights include, but are not limited to, the following:&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;i. the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;&lt;/p&gt;
&lt;p&gt;ii. moral rights retained by the original author(s) and/or performer(s);&lt;/p&gt;
&lt;p&gt;iii. publicity and privacy rights pertaining to a person's image or likeness depicted in a Work;&lt;/p&gt;
&lt;p&gt;iv. rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;&lt;/p&gt;
&lt;p&gt;v. rights protecting the extraction, dissemination, use and reuse of data in a Work;&lt;/p&gt;
&lt;p&gt;vi. database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and&lt;/p&gt;
&lt;p&gt;vii. other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.&lt;/p&gt;
&lt;ol start=&quot;2&quot; readability=&quot;20&quot;&gt;&lt;li readability=&quot;22&quot;&gt;
&lt;p&gt;Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the &quot;Waiver&quot;). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;16&quot;&gt;
&lt;p&gt;Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the &quot;License&quot;). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Limitations and Disclaimers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;a. No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.&lt;/p&gt;
&lt;p&gt;b. Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.&lt;/p&gt;
&lt;p&gt;c. Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.&lt;/p&gt;
&lt;p&gt;d. Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.&lt;/p&gt;
&lt;p&gt;For more information, please see &lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/&quot; rel=&quot;nofollow&quot;&gt;http://creativecommons.org/publicdomain/zero/1.0/&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 27 Dec 2019 12:55:19 +0000</pubDate>
<dc:creator>mrholek</dc:creator>
<og:image>https://repository-images.githubusercontent.com/130593655/d58bb280-20f5-11ea-9aff-c7cc7e9e8e15</og:image>
<og:type>object</og:type>
<og:title>coreui/coreui-icons</og:title>
<og:url>https://github.com/coreui/coreui-icons</og:url>
<og:description>CoreUI Free Icons - Premium designed free icon set with marks in SVG, Webfont and raster formats - coreui/coreui-icons</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/coreui/coreui-icons/tree/1.0.0</dc:identifier>
</item>
<item>
<title>Scientists Likely Found Way to Grow New Teeth for Patients</title>
<link>https://www.sciencetimes.com/articles/24252/20191111/scientists-likely-found-way-to-grow-new-teeth-for-patients.htm</link>
<guid isPermaLink="true" >https://www.sciencetimes.com/articles/24252/20191111/scientists-likely-found-way-to-grow-new-teeth-for-patients.htm</guid>
<description>&lt;img title=&quot;Scientists Likely Found Way To Grow New Teeth For Patients&quot; class=&quot;max&quot; src=&quot;https://1721181113.rsc.cdn77.org/data/images/full/25495/scientists-likely-found-way-to-grow-new-teeth-for-patients.jpeg&quot; alt=&quot;Scientists Likely Found Way To Grow New Teeth For Patients&quot;/&gt; (Photo : pexel) &lt;p&gt;Tooth loss is an unfortunate health condition that people all over the world can suffer from. Whether from decay, gum disease, or fractures, you can experience tooth loss in a variety of ways. But what if there was a way to grow back those lost teeth?&lt;/p&gt;&lt;p&gt;Scientists believe that they might have found a way to regrow lost or damaged teeth through the use of stem cell technology and bioengineering. Several research groups are currently tackling the same question; all in an effort to find a way for humans to regrow lost or damaged teeth as noninvasively and as affordably as possible. We asked &lt;a href=&quot;http://www.ironwooddental.com/&quot;&gt;dentist Dr. Sood&lt;/a&gt; what he knew about this latest breakthrough and this is what he taught us.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Columbia University&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://techventures.columbia.edu/news-and-events/latest-news/recruiting-body-help-regrow-new-joints&quot;&gt;Researchers&lt;/a&gt; at the New York City Columbia University Medical Center have been working to see if they could find a way for patients to regrow an anatomically correct tooth by using their own stem cells. The tooth might even be able to grow directly into a patient's empty tooth socket, so it will be able to merge with the surround gum tissue as if it had always been there. So far, they have proven that they can grow teeth, but not in a person's mouth...yet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Experiment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While the researchers have not grown teeth inside of people's mouths yet, they have been experimenting on growing teeth using rats. The experiment involved 22 rats. The researchers implanted growth factors into the rats' mouths and found that new bone material was able to regenerate and integrate in only 9 weeks. So far, this is the first time that teeth have been able to be regenerated inside of a living organism.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;School of Biomedicine&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While Columbia has been working with stem cells and rats, the School of Biomedicine has been researching how human dental tissue is formed prenatally. This way, the scientists are hoping to mimic the same process in regrowing not just teeth, but maybe even internal organs. They have been experimenting with the concept, but have not yet been successful in achieving it. They are not using the same bio-engineering approach as Columbia is using, but the fact that they are both working on the same problem is promising for the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Benefits&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is no doubt that if this can be successfully done with humans that it will be revolutionary. At this time, the only means for tooth replacement are implants, bridges, and dentures, all of which are designed to mimic a real tooth, but none of which are real teeth. Each replacement method also comes with its own pros and cons. Dental implants are thus far the most effective, but they are also the most expensive and many patients cannot afford it. Researchers believe that the use of stem cell technology will be less expensive than implants. Additionally, there should be a shorter recovery period and a much lower risk for failure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Future&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While we wait for this technology to become a reality, we will have to make do with the technology that exists. Implants are the closest thing that we have right now to genuine tooth replacement. They do have a low failure rate and are placed directly into your jaw to act like a genuine tooth. The healing time for an implant is long, however, and the cost excludes many people who might benefit from it. But until we can regrow our own teeth, implants will have to do.&lt;/p&gt;
&lt;p&gt;Thankfully, several research groups are on the case, looking for a variety of ways to solve the issue of tooth loss. Tooth loss is an epidemic on a global level and if there is hope of giving people a reason to smile again, improve their health, and eat without difficulty, then researchers will hopefully stay on the case until a solution is found.&lt;/p&gt;


&lt;div class=&quot;i-sum&quot; readability=&quot;7.1544715447154&quot;&gt;©2017 ScienceTimes.com All rights reserved. Do not reproduce without permission. The window to the world of &lt;a href=&quot;http://www.sciencetimes.com/&quot;&gt;science times&lt;/a&gt;.&lt;/div&gt;
</description>
<pubDate>Fri, 27 Dec 2019 12:08:54 +0000</pubDate>
<dc:creator>elorant</dc:creator>
<og:type>article</og:type>
<og:url>https://www.sciencetimes.com/articles/24252/20191111/scientists-likely-found-way-to-grow-new-teeth-for-patients.htm</og:url>
<og:image>https://1721181113.rsc.cdn77.org/data/thumbs/full/25495/650/0/0/0/scientists-likely-found-way-to-grow-new-teeth-for-patients.jpeg</og:image>
<og:title>Scientists Likely Found Way To Grow New Teeth For Patients</og:title>
<og:description>Tooth loss is an unfortunate health condition that people all over the world can suffer from. Whether from decay, gum disease, or fractures, you can experience tooth loss in a variety of ways. But what if there was a way to grow back those lost teeth?</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sciencetimes.com/articles/24252/20191111/scientists-likely-found-way-to-grow-new-teeth-for-patients.htm</dc:identifier>
</item>
<item>
<title>36th Chaos Communication Congress – Streams</title>
<link>https://streaming.media.ccc.de/36c3</link>
<guid isPermaLink="true" >https://streaming.media.ccc.de/36c3</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://streaming.media.ccc.de/36c3&quot;&gt;https://streaming.media.ccc.de/36c3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=21889926&quot;&gt;https://news.ycombinator.com/item?id=21889926&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 242&lt;/p&gt;
&lt;p&gt;# Comments: 52&lt;/p&gt;
</description>
<pubDate>Fri, 27 Dec 2019 08:14:35 +0000</pubDate>
<dc:creator>sgruetter</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://streaming.media.ccc.de/36c3</dc:identifier>
</item>
<item>
<title>WiFi deauthentication attacks and home security</title>
<link>https://mjg59.dreamwidth.org/53968.html</link>
<guid isPermaLink="true" >https://mjg59.dreamwidth.org/53968.html</guid>
<description>I live in a large apartment complex (it's literally a city block big), so I spend a disproportionate amount of time walking down corridors. Recently one of my neighbours installed a &lt;a href=&quot;https://ring.com&quot;&gt;Ring&lt;/a&gt; wireless doorbell. By default these are motion activated (and the process for disabling motion detection is &lt;a href=&quot;https://support.ring.com/hc/en-us/articles/360022461232-Motion-Detection-in-Powered-Ring-Devices&quot;&gt;far from obvious&lt;/a&gt;), and if the owner subscribes to an appropriate plan these recordings are &lt;a href=&quot;https://support.ring.com/hc/en-us/articles/360030587812-Video-Recordings&quot;&gt;stored in the cloud&lt;/a&gt;. I'm not super enthusiastic about the idea of having my conversations recorded while I'm walking past someone's door, so I decided to look into the security of these devices.&lt;p&gt;One visit to Amazon later and I had a refurbished Ring Video Doorbell 2™ sitting on my desk. Tearing it down revealed it uses a &lt;a href=&quot;http://www.ti.com/product/CC3220S&quot;&gt;TI SoC&lt;/a&gt; that's optimised for this sort of application, linked to a DSP that presumably does stuff like motion detection. The device spends most of its time in a sleep state where it generates no network activity, so on any wakeup it has to reassociate with the wireless network and start streaming data.&lt;/p&gt;&lt;p&gt;So we have a device that's silent and undetectable until it starts recording you, which isn't a great place to start from. But fortunately wifi has a few, uh, interesting design choices that mean we can still do something. The first is that even on an encrypted network, the packet headers are unencrypted and contain the address of the access point and whichever device is communicating. This means that it's possible to just dump whatever traffic is floating past and build up a collection of device addresses. Address ranges are allocated by the IEEE, so it's possible to map the addresses you see to manufacturers and get some idea of what's actually on the network[1] even if you can't see what they're actually transmitting. The second is that various management frames aren't encrypted, and so can be faked even if you don't have the network credentials.&lt;/p&gt;&lt;p&gt;The most interesting one here is the deauthentication frame that access points can use to tell clients that they're no longer welcome. These can be sent for a variety of reasons, including resource exhaustion or authentication failure. And, by default, they're entirely unprotected. Anyone can inject such a frame into your network and cause clients to believe they're no longer authorised to use the network, at which point they'll have to go through a new authentication cycle - and while they're doing that, they're not able to send any other packets.&lt;/p&gt;&lt;p&gt;So, the attack is to simply monitor the network for any devices that fall into the address range you want to target, and then immediately start shooting deauthentication frames at them once you see one. I hacked &lt;a href=&quot;https://www.aircrack-ng.org/doku.php?id=airodump-ng&quot;&gt;airodump-ng&lt;/a&gt; to ignore all clients that didn't look like a Ring, and then pasted in code from &lt;a href=&quot;https://www.aircrack-ng.org/doku.php?id=aireplay-ng&quot;&gt;aireplay-ng&lt;/a&gt; to send deauthentication packets once it saw one. The problem here is that wifi cards can only be tuned to one frequency at a time, so unless you know the channel your potential target is on, you need to keep jumping between frequencies while looking for a target - and that means a target can potentially shoot off a notification while you're looking at other frequencies.&lt;/p&gt;&lt;p&gt;But even with that proviso, this seems to work reasonably reliably. I can hit the button on my Ring, see it show up in my hacked up code and see my phone receive no push notification. Even if it does get a notification, the doorbell is no longer accessible by the time I respond.&lt;/p&gt;&lt;p&gt;There's a couple of ways to avoid this attack. The first is to use &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_802.11w-2009&quot;&gt;802.11w&lt;/a&gt; which protects management frames. A lot of hardware supports this, but it's generally disabled by default. The second is to just ignore deauthentication frames in the first place, which is a spec violation but also you're already building a device that exists to record strangers engaging in a range of legal activities so paying attention to social norms is clearly not a priority in any case.&lt;/p&gt;&lt;p&gt;Finally, none of this is even slightly new. A presentation from Def Con in 2016 &lt;a href=&quot;https://www.youtube.com/watch?v=XkJ2tH21Wf8&quot;&gt;covered this&lt;/a&gt;, demonstrating that Nest cameras could be blocked in the same way. The industry doesn't seem to have learned from this.&lt;/p&gt;&lt;p&gt;[1] The Ring Video Doorbell 2 just uses addresses from TI's range rather than anything Ring specific, unfortunately&lt;/p&gt;</description>
<pubDate>Fri, 27 Dec 2019 07:48:56 +0000</pubDate>
<dc:creator>edward</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://mjg59.dreamwidth.org/53968.html</dc:identifier>
</item>
<item>
<title>C Is Not a Low-level Language (2018)</title>
<link>https://queue.acm.org/detail.cfm?id=3212479</link>
<guid isPermaLink="true" >https://queue.acm.org/detail.cfm?id=3212479</guid>
<description>&lt;div class=&quot;navbar&quot;&gt;

&lt;a href=&quot;https://queue.acm.org/&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/acmqueue_logo.gif&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot; target=&quot;_new&quot;&gt;&lt;img src=&quot;https://queue.acm.org/app/2019_09-10_lrg.png&quot; with=&quot;90&quot; height=&quot;120&quot; alt=&quot;September/October 2019 issue of acmqueue&quot;/&gt;&lt;/a&gt; &lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/app/&quot;&gt;The September/October 2019 issue of acmqueue is out now&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://cdn.coverstand.com/3rd_pty/acm/login.html?&amp;amp;btx_i=613940&quot;&gt;Subscribers and ACM Professional members login here&lt;/a&gt;&lt;br clear=&quot;all&quot;/&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;br/&gt;&lt;h4&gt;&lt;a href=&quot;https://queue.acm.org/listing.cfm?item_topic=Programming%20Languages&amp;amp;qc_type=theme_list&amp;amp;filter=Programming%20Languages&amp;amp;page_title=Programming%20Languages&amp;amp;order=desc&quot;&gt;Programming Languages&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;  &lt;a href=&quot;https://dl.acm.org/ft_gateway.cfm?id=3212479&amp;amp;ftid=1962356&amp;amp;dwn=1&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/icon_pdf.png&quot; alt=&quot;Download PDF version of this article&quot;/&gt; PDF&lt;/a&gt;&lt;/p&gt;
&lt;label&gt;April 30, 2018&lt;br/&gt;&lt;strong&gt;&lt;a class=&quot;descriptor&quot; href=&quot;https://queue.acm.org/issuedetail.cfm?issue=3212477&quot;&gt;Volume 16, issue 2&lt;/a&gt;&lt;/strong&gt;&lt;/label&gt;

&lt;h2&gt;Your computer is not a fast PDP-11.&lt;/h2&gt;
&lt;h3&gt;David Chisnall&lt;/h3&gt;
&lt;p&gt;In the wake of the recent Meltdown and Spectre vulnerabilities, it's worth spending some time looking at root causes. Both of these vulnerabilities involved processors speculatively executing instructions past some kind of access check and allowing the attacker to observe the results via a side channel. The features that led to these vulnerabilities, along with several others, were added to let C programmers continue to believe they were programming in a low-level language, when this hasn't been the case for decades.&lt;/p&gt;
&lt;p&gt;Processor vendors are not alone in this. Those of us working on C/C++ compilers have also participated.&lt;/p&gt;
&lt;h3&gt;What Is a Low-Level Language?&lt;/h3&gt;
&lt;p&gt;Computer science pioneer Alan Perlis defined low-level languages this way:&lt;/p&gt;
&lt;p&gt;&quot;A programming language is low level when its programs require attention to the irrelevant.&quot;&lt;sup&gt;5&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;While, yes, this definition applies to C, it does not capture what people desire in a low-level language. Various attributes cause people to regard a language as low-level. Think of programming languages as belonging on a continuum, with assembly at one end and the interface to the Starship &lt;em&gt;Enterprise&lt;/em&gt;'s computer at the other. Low-level languages are &quot;close to the metal,&quot; whereas high-level languages are closer to how humans think.&lt;/p&gt;
&lt;p&gt;For a language to be &quot;close to the metal,&quot; it must provide an abstract machine that maps easily to the abstractions exposed by the target platform. It's easy to argue that C was a low-level language for the PDP-11. They both described a model in which programs executed sequentially, in which memory was a flat space, and even the pre- and post-increment operators cleanly lined up with the PDP-11 addressing modes.&lt;/p&gt;
&lt;h3&gt;Fast PDP-11 Emulators&lt;/h3&gt;
&lt;p&gt;The root cause of the Spectre and Meltdown vulnerabilities was that processor architects were trying to build not just fast processors, but fast processors that expose the same abstract machine as a PDP-11. This is essential because it allows C programmers to continue in the belief that their language is close to the underlying hardware.&lt;/p&gt;
&lt;p&gt;C code provides a mostly serial abstract machine (until C11, an entirely serial machine if nonstandard vendor extensions were excluded). Creating a new thread is a library operation known to be expensive, so processors wishing to keep their execution units busy running C code rely on ILP (instruction-level parallelism). They inspect adjacent operations and issue independent ones in parallel. This adds a significant amount of complexity (and power consumption) to allow programmers to write mostly sequential code. In contrast, GPUs achieve very high performance without any of this logic, at the expense of requiring explicitly parallel programs.&lt;/p&gt;
&lt;p&gt;The quest for high ILP was the direct cause of Spectre and Meltdown. A modern Intel processor has up to 180 instructions in flight at a time (in stark contrast to a sequential C abstract machine, which expects each operation to complete before the next one begins). A typical heuristic for C code is that there is a branch, on average, every seven instructions. If you wish to keep such a pipeline full from a single thread, then you must guess the targets of the next 25 branches. This, again, adds complexity; it also means that an incorrect guess results in work being done and then discarded, which is not ideal for power consumption. This discarded work has visible side effects, which the Spectre and Meltdown attacks could exploit.&lt;/p&gt;
&lt;p&gt;On a modern high-end core, the register rename engine is one of the largest consumers of die area and power. To make matters worse, it cannot be turned off or power gated while any instructions are running, which makes it inconvenient in a dark silicon era when transistors are cheap but powered transistors are an expensive resource. This unit is conspicuously absent on GPUs, where parallelism again comes from multiple threads rather than trying to extract instruction-level parallelism from intrinsically scalar code. If instructions do not have dependencies that need to be reordered, then register renaming is not necessary.&lt;/p&gt;
&lt;p&gt;Consider another core part of the C abstract machine's memory model: flat memory. This hasn't been true for more than two decades. A modern processor often has three levels of cache in between registers and main memory, which attempt to hide latency.&lt;/p&gt;
&lt;p&gt;The cache is, as its name implies, hidden from the programmer and so is not visible to C. Efficient use of the cache is one of the most important ways of making code run quickly on a modern processor, yet this is completely hidden by the abstract machine, and programmers must rely on knowing implementation details of the cache (for example, two values that are 64-byte-aligned may end up in the same cache line) to write efficient code.&lt;/p&gt;
&lt;h3&gt;Optimizing C&lt;/h3&gt;
&lt;p&gt;One of the common attributes ascribed to low-level languages is that they're fast. In particular, they should be easy to translate into fast code without requiring a particularly complex compiler. The argument that a sufficiently smart compiler can make a language fast is one that C proponents often dismiss when talking about other languages.&lt;/p&gt;
&lt;p&gt;Unfortunately, simple translation providing fast code is not true for C. In spite of the heroic efforts that processor architects invest in trying to design chips that can run C code fast, the levels of performance expected by C programmers are achieved only as a result of incredibly complex compiler transforms. The Clang compiler, including the relevant parts of LLVM, is around 2 million lines of code. Even just counting the analysis and transform passes required to make C run quickly adds up to almost 200,000 lines (excluding comments and blank lines).&lt;/p&gt;
&lt;p&gt;For example, in C, processing a large amount of data means writing a loop that processes each element sequentially. To run this optimally on a modern CPU, the compiler must first determine that the loop iterations are independent. The C &lt;code&gt;restrict&lt;/code&gt; keyword can help here. It guarantees that writes through one pointer do not interfere with reads via another (or if they do, that the programmer is happy for the program to give unexpected results). This information is far more limited than in a language such as Fortran, which is a big part of the reason that C has failed to displace Fortran in high-performance computing.&lt;/p&gt;
&lt;p&gt;Once the compiler has determined that loop iterations are independent, then the next step is to attempt to vectorize the result, because modern processors get four to eight times the throughput in vector code that they achieve in scalar code. A low-level language for such processors would have native vector types of arbitrary lengths. LLVM IR (intermediate representation) has precisely this, because it is always easier to split a large vector operation into smaller ones than to construct larger vector operations.&lt;/p&gt;
&lt;p&gt;Optimizers at this point must fight the C memory layout guarantees. C guarantees that structures with the same prefix can be used interchangeably, and it exposes the offset of structure fields into the language. This means that a compiler is not free to reorder fields or insert padding to improve vectorization (for example, transforming a structure of arrays into an array of structures or vice versa). That's not necessarily a problem for a low-level language, where fine-grained control over data structure layout is a feature, but it does make it harder to make C fast.&lt;/p&gt;
&lt;p&gt;C also requires padding at the end of a structure because it guarantees no padding in arrays. Padding is a particularly complex part of the C specification and interacts poorly with other parts of the language. For example, you must be able to compare two &lt;code&gt;struct&lt;/code&gt;s using a type-oblivious comparison (e.g., &lt;code&gt;memcmp&lt;/code&gt;), so a copy of a &lt;code&gt;struct&lt;/code&gt; must retain its padding. In some experimentation, a noticeable amount of total runtime on some workloads was found to be spent in copying padding (which is often awkwardly sized and aligned).&lt;/p&gt;
&lt;p&gt;Consider two of the core optimizations that a C compiler performs: SROA (scalar replacement of aggregates) and loop unswitching. SROA attempts to replace &lt;code&gt;struct&lt;/code&gt;s (and arrays with fixed lengths) with individual variables. This then allows the compiler to treat accesses as independent and elide operations entirely if it can prove that the results are never visible. This has the side effect of deleting padding in some cases but not others.&lt;/p&gt;
&lt;p&gt;The second optimization, loop unswitching, transforms a loop containing a conditional into a conditional with a loop in both paths. This changes flow control, contradicting the idea that a programmer knows what code will execute when low-level language code runs. It can also cause significant problems with C's notions of unspecified values and undefined behavior.&lt;/p&gt;
&lt;p&gt;In C, a read from an uninitialized variable is an unspecified value and is allowed to be any value each time it is read. This is important, because it allows behavior such as lazy recycling of pages: for example, on FreeBSD the &lt;code&gt;malloc&lt;/code&gt; implementation informs the operating system that pages are currently unused, and the operating system uses the first write to a page as the hint that this is no longer true. A read to newly &lt;code&gt;malloc&lt;/code&gt;ed memory may initially read the old value; then the operating system may reuse the underlying physical page; and then on the next write to a different location in the page replace it with a newly zeroed page. The second read from the same location will then give a zero value.&lt;/p&gt;
&lt;p&gt;If an unspecified value for flow control is used (for example, using it as the condition in an &lt;code&gt;if&lt;/code&gt; statement), then the result is undefined behavior: anything is allowed to happen. Consider the loop-unswitching optimization, this time in the case where the loop ends up being executed zero times. In the original version, the entire body of the loop is dead code. In the unswitched version, there is now a branch on the variable, which may be uninitialized. Some dead code has now been transformed into undefined behavior. This is just one of many optimizations that a close investigation of the C semantics shows to be unsound.&lt;/p&gt;
&lt;p&gt;In summary, it is possible to make C code run quickly but only by spending thousands of person-years building a sufficiently smart compiler—and even then, only if you violate some of the language rules. Compiler writers let C programmers pretend that they are writing code that is &quot;close to the metal&quot; but must then generate machine code that has very different behavior if they want C programmers to keep believing that they are using a fast language.&lt;/p&gt;
&lt;h3&gt;Understanding C&lt;/h3&gt;
&lt;p&gt;One of the key attributes of a low-level language is that programmers can easily understand how the language's abstract machine maps to the underlying physical machine. This was certainly true on the PDP-11, where each C expression mapped trivially to one or two instructions. Similarly, the compiler performed a straightforward lowering of local variables to stack slots and mapped primitive types to things that the PDP-11 could operate on natively.&lt;/p&gt;
&lt;p&gt;Since then, implementations of C have had to become increasingly complex to maintain the illusion that C maps easily to the underlying hardware and gives fast code. A 2015 survey of C programmers, compiler writers, and standards committee members raised several issues about the comprehensibility of C.&lt;sup&gt;3&lt;/sup&gt; For example, C permits an implementation to insert padding into structures (but not into arrays) to ensure that all fields have a useful alignment for the target. If you zero a structure and then set some of the fields, will the padding bits all be zero? According to the results of the survey, 36 percent were sure that they would be, and 29 percent didn't know. Depending on the compiler (and optimization level), it may or may not be.&lt;/p&gt;
&lt;p&gt;This is a fairly trivial example, yet a significant proportion of programmers either believe the wrong thing or are not sure. When you introduce pointers, the semantics of C become a lot more confusing. The BCPL model was fairly simple: values are words. Each word is either some data or the address of some data. Memory is a flat array of storage cells indexed by address.&lt;/p&gt;
&lt;p&gt;The C model, in contrast, was intended to allow implementation on a variety of targets, including segmented architectures (where a pointer might be a segment ID and an offset) and even garbage-collected virtual machines. The C specification is careful to restrict valid operations on pointers to avoid problems for such systems. The response to Defect Report 260&lt;sup&gt;1&lt;/sup&gt; included the notion of &lt;em&gt;pointer provenance&lt;/em&gt; in the definition of pointer:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;&quot;Implementations are permitted to track the origins of a bit pattern and treat those representing an indeterminate value as distinct from those representing a determined value. They may also treat pointers based on different origins as distinct even though they are bitwise identical.&quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, the word &lt;em&gt;provenance&lt;/em&gt; does not appear in the C11 specification at all, so it is up to compiler writes to decide what it means. GCC (GNU Compiler Collection) and Clang, for example, differ on whether a pointer that is converted to an integer and back retains its provenance through the casts. Compilers are free to determine that two pointers to different &lt;code&gt;malloc&lt;/code&gt; results or stack allocations always compare as not-equal, even when a bitwise comparison of the pointers may show them to describe the same address.&lt;/p&gt;
&lt;p&gt;These misunderstandings are not purely academic in nature. For example, security vulnerabilities have been observed from signed integer overflow (undefined behavior in C) and from code that dereferenced a pointer before a null check, indicating to the compiler that the pointer could not be null because dereferencing a null pointer is undefined behavior in C and therefore can be assumed not to happen (https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1897).&lt;/p&gt;
&lt;p&gt;In light of such issues, it is difficult to argue that a programmer can be expected to understand exactly how a C program will map to an underlying architecture.&lt;/p&gt;
&lt;h3&gt;Imagining a Non-C Processor&lt;/h3&gt;
&lt;p&gt;The proposed fixes for Spectre and Meltdown impose significant performance penalties, largely offsetting the advances in microarchitecure in the past decade. Perhaps it's time to stop trying to make C code fast and instead think about what programming models would look like on a processor designed to be fast.&lt;/p&gt;
&lt;p&gt;We have a number of examples of designs that have not focused on traditional C code to provide some inspiration. For example, highly multithreaded chips, such as Sun/Oracle's UltraSPARC Tx series, don't require as much cache to keep their execution units full. Research processors&lt;sup&gt;2&lt;/sup&gt; have extended this concept to very large numbers of hardware-scheduled threads. The key idea behind these designs is that with enough high-level parallelism, you can suspend the threads that are waiting for data from memory and fill your execution units with instructions from others. The problem with such designs is that C programs tend to have few busy threads.&lt;/p&gt;
&lt;p&gt;ARM's SVE (Scalar Vector Extensions)—and similar work from Berkeley&lt;sup&gt;4&lt;/sup&gt;—provides another glimpse at a better interface between program and hardware. Conventional vector units expose fixed-sized vector operations and expect the compiler to try to map the algorithm to the available unit size. In contrast, the SVE interface expects the programmer to describe the degree of parallelism available and relies on the hardware to map it down to the available number of execution units. Using this from C is complex, because the autovectorizer must infer the available parallelism from loop structures. Generating code for it from a functional-style map operation is trivial: the length of the mapped array is the degree of available parallelism.&lt;/p&gt;
&lt;p&gt;Caches are large, but their size isn't the only reason for their complexity. The &lt;em&gt;cache coherency protocol&lt;/em&gt; is one of the hardest parts of a modern CPU to make both fast and correct. Most of the complexity involved comes from supporting a language in which data is expected to be both shared and mutable as a matter of course. Consider in contrast an Erlang-style abstract machine, where every object is either thread-local or immutable (Erlang has a simplification of even this, where there is only one mutable object per thread). A cache coherency protocol for such a system would have two cases: mutable or shared. A software thread being migrated to a different processor would need its cache explicitly invalidated, but that's a relatively uncommon operation.&lt;/p&gt;
&lt;p&gt;Immutable objects can simplify caches even more, as well as making several operations even cheaper. Sun Labs' Project Maxwell noted that the objects in the cache and the objects that would be allocated in a young generation are almost the same set. If objects are dead before they need to be evicted from the cache, then never writing them back to main memory can save a lot of power. Project Maxwell proposed a young-generation garbage collector (and allocator) that would run in the cache and allow memory to be recycled quickly. With immutable objects on the heap and a mutable stack, a garbage collector becomes a very simple state machine that is trivial to implement in hardware and allows for more efficient use of a relatively small cache.&lt;/p&gt;
&lt;p&gt;A processor designed purely for speed, not for a compromise between speed and C support, would likely support large numbers of threads, have wide vector units, and have a much simpler memory model. Running C code on such a system would be problematic, so, given the large amount of legacy C code in the world, it would not likely be a commercial success.&lt;/p&gt;
&lt;p&gt;There is a common myth in software development that parallel programming is hard. This would come as a surprise to Alan Kay, who was able to teach an actor-model language to young children, with which they wrote working programs with more than 200 threads. It comes as a surprise to Erlang programmers, who commonly write programs with thousands of parallel components. It's more accurate to say that parallel programming in a language with a C-like abstract machine is difficult, and given the prevalence of parallel hardware, from multicore CPUs to many-core GPUs, that's just another way of saying that C doesn't map to modern hardware very well.&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;p&gt;1. C Defect Report 260. 2004; &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_260.htm&quot;&gt;http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_260.htm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;2. Chadwick, G. A. 2013. Communication centric, multi-core, fine-grained processor architecture. Technical Report 832. University of Cambridge, Computer Laboratory; &lt;a href=&quot;https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-832.pdf&quot;&gt;http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-832.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;3. Memarian, K., Matthiesen, J., Lingard, J., Nienhuis, K., Chisnall, D. Watson, R. N. M., Sewell, P. 2016. Into the depths of C: elaborating the de facto standards. &lt;em&gt;Proceedings of the 37&lt;sup&gt;th&lt;/sup&gt; ACM SIGPLAN Conference on Programming Language Design and Implementation&lt;/em&gt;: 1-15; &lt;a href=&quot;https://dl.acm.org/authorize?N04455&quot;&gt;http://dl.acm.org/authorize?N04455&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;4. Ou, A., Nguyen, Q., Lee, Y., Asanović, K. 2014. A case for MVPs: mixed-precision vector processors. Second International Workshop on Parallelism in Mobile Platforms at the 41st International Symposium on Computer Architecture.&lt;/p&gt;
&lt;p&gt;5. Perlis, A. 1982. Epigrams on programming. &lt;em&gt;ACM SIGPLAN&lt;/em&gt; &lt;em&gt;Notices&lt;/em&gt; 17(9).&lt;/p&gt;
&lt;h4&gt;Related articles&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2543971&quot;&gt;The Challenge of Cross-language Interoperability&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;David Chisnall&lt;br/&gt;Interfacing between languages is increasingly important.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2543971&quot;&gt;https://queue.acm.org/detail.cfm?id=2543971&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2620662&quot;&gt;Finding More than One Worm in the Apple&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Mike Bland&lt;br/&gt;If you see something, say something.&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=2620662&quot;&gt;https://queue.acm.org/detail.cfm?id=2620662&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1113336&quot;&gt;Coding for the Code&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;Friedrich Steimann, Thomas Kühne&lt;br/&gt;Can models provide the DNA for software development?&lt;br/&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=1113336&quot;&gt;https://queue.acm.org/detail.cfm?id=1113336&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;David Chisnall&lt;/strong&gt; is a researcher at the University of Cambridge, where he works on programming language design and implementation. He spent several years consulting in between finishing his Ph.D. and arriving at Cambridge, during which time he also wrote books on Xen and the Objective-C and Go programming languages, as well as numerous articles. He also contributes to the LLVM, Clang, FreeBSD, GNUstep, and Étoilé open-source projects, and he dances the Argentine tango.&lt;/p&gt;
&lt;p&gt;Copyright © 2018 held by owner/author. Publication rights licensed to ACM.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;floatLeft&quot; src=&quot;https://queue.acm.org/img/q%20stamp_small.jpg&quot; width=&quot;26&quot; height=&quot;45&quot; alt=&quot;acmqueue&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Originally published in Queue vol. 16, no. 2&lt;/em&gt;—&lt;br/&gt;see this item in the &lt;a href=&quot;https://portal.acm.org/citation.cfm?id=3212479&quot;&gt;ACM Digital Library&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;ACMQueue&quot;&gt;Tweet&lt;/a&gt; 
&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;
Related:
&lt;p&gt;&lt;span&gt;Matt Godbolt&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3372264&quot;&gt;&lt;strong&gt;Optimizations in C++ Compilers&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;A practical journey&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ulan Degenbaev, Michael Lippautz, Hannes Payer&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3325132&quot;&gt;&lt;strong&gt;Garbage Collection as a Joint Venture&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;A collaborative approach to reclaiming memory in heterogeneous software systems&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tobias Lauinger, Abdelberi Chaabane, Christo Wilson&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3205288&quot;&gt;&lt;strong&gt;Thou Shalt Not Depend on Me&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;A look at JavaScript libraries in the wild&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Robert C. Seacord&lt;/span&gt; - &lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3041020&quot;&gt;&lt;strong&gt;Uninitialized Reads&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;Understanding the proposed revisions to the C language&lt;/p&gt;
&lt;br/&gt;&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;(newest first)&lt;/p&gt;
&lt;blockquote readability=&quot;3.0508474576271&quot;&gt;
&lt;p&gt;&lt;strong&gt;Displaying 10 most recent comments. &lt;a href=&quot;https://queue.acm.org/fullcomments.cfm?id=3212479&quot;&gt;Read the full list here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;author&quot;&gt;Dave | Fri, 27 Dec 2019 06:53:32 UTC&lt;/p&gt;
This article seems un-informed about how GPUs work. I've been out of the graphics business for a decade, but GPUs definitely had register renaming, and have since atleast shader model 2 (2003). Typically branches run both sets of code and discard the wrong one. They also tend to do work in blocks of pixels. ATI chose 2x2 blocks, while nVidia chose a larger value like 16x16, which is why ATI cards were so much better at branching and dealing with detailed stencil shapes during that era. Again, you might do 4 (or 256) threads when you only needed 1.
&lt;p&gt;Also, the number of threads a GPU could run in parallel would depend on the number of registers a shader used, as you would run out of virtual registers at some point.&lt;/p&gt;
&lt;p&gt;During that era, ATI hid the fact that they didn't use full sized floats to gain speed, while nVidia did use full floats, and paid a performance penalty.&lt;/p&gt;
&lt;p&gt;There are &quot;shenanigans&quot; in every performance oriented processor.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;CodeLurker | Sat, 22 Dec 2018 17:30:15 UTC&lt;/p&gt;
OK. &quot;C&quot; is not a low-level language. Why is it that, in the now defunct Game of Benchmarks site, C++ programs were usually the fastest; with FORTRAN beating C++ in only occasional number-crunching tasks? I'll admit that a language with cheaper parallelism, cache management primitives, and parallelism cues would in principle be faster than C++. I'd bet you real money, that in the real world, such a language would share with C++: 1) that it is not using garbage collection in most benchmarks (unless they are run in an way not to incur its performance disadvantages), and 2) it is not interpretive. Take that, you academician know-it-alls!
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Juneyoung Lee | Sat, 27 Oct 2018 17:01:43 UTC&lt;/p&gt;
For the unspecified value thing - you may want to add PLDI'17 to your reference? :) (https://dl.acm.org/citation.cfm?id=3062343 )
&lt;p&gt;For the provenance thing - this OOPSLA'18 exactly is about the issue! (https://sf.snu.ac.kr/llvmtwin/ )&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Roberto Maurizzi | Tue, 16 Oct 2018 02:33:17 UTC&lt;/p&gt;
C doesn't guarantee anything about memory protection: the CPU (or better its MMU) does, as anyone that wrote C programs on MMU-less processors can tell you. On those systems (typically single-task but not always, see Commodore Amiga) a program had full access (read and write) to the full address space of the processor and a 'lost pointer' could easily fill all the memory with garbage and crash the OS. What Intel and friends did is even worse actually: for the sake of compatibility they hid the real internal structure of the processor from the 'external' assembly language and architecture, then they didn't emulate this memory protection architecture probably for the sake of speeding up things. They allow things that would be illegal for the processor they're emulating because they wanted speed AND backward compatibility, because Microsoft back in the day was refusing to even think about porting Windows to different architectures.
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Tom Sobota | Thu, 12 Jul 2018 13:51:16 UTC&lt;/p&gt;
Years ago I programmed a lot on the PDP-11, be it in assembler, Fortran or C. So I find that the author is right when he says that C is a low-level language on those machines. It is, or better, it was. When I started to program for the X86 architecture, back in the eighties, I also couldn't but notice that the code generated by C was not so low-level anymore, since the PDP-11 instructions like pre- or post- increment weren't there, and the address modes were different.
&lt;p&gt;I have nothing against C/C++, I still use them frequently. But I wonder if some new language than could give us that sensation of control over the program execution wouldn't be welcome. Ditto for a processor architecture with execution parallelism controllable from the language. RISC-V or something?&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Blue | Fri, 06 Jul 2018 11:37:57 UTC&lt;/p&gt;
The author simply assumes the x86 platform then ? A good part of C code in existence isn't written for desktop and server applications anyways, but for sequentially working MCU's which are a lot closer to the original 8086 chip. Also; &quot;For example, in C, processing a large amount of data means writing a loop that processes each element sequentially.&quot; isn't always true, depending on the use case (For example Binary search or jump search don't need to iterate through each element of ordered data).
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Anon | Thu, 24 May 2018 03:22:29 UTC&lt;/p&gt;
I can only assume the author is a big fan of Intels EPIC efforts?
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;mlwmohawk | Mon, 14 May 2018 21:36:07 UTC&lt;/p&gt;
This is an excellent troll and strawman argument. The &quot;C&quot; programming language enforces nothing in the way of memory model or threads or processor layout. The language itself can be applied to almost any hypothetical processor system. All that is required is some sort of sane operational characteristic that can be programmed. I will grant that most developers and generic libraries assume thing like malloc, stacks, cache, serial execution but not C. C takes an expression and translate it to a set of instructions, nothing less and nothing more.
&lt;p&gt;What would be really interesting is if you could describe a programming model that would be better than C *and* not be implemented in C.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;Eric S. Raymond | Thu, 10 May 2018 14:22:21 UTC&lt;/p&gt;
I have blogged a detailed response at
&lt;p&gt;http://esr.ibiblio.org/?p=7979&lt;/p&gt;
&lt;p&gt;In brief, I think Chisnall's critique is thought-provoking but his prescription mistaken; there are simply too many key algorithms that are what I call SICK (&quot;Serial, Intrinsically; Cope, Kiddo&quot;) for his ideas about pocessor design to play well with real workloads.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;p class=&quot;author&quot;&gt;John Payson | Wed, 09 May 2018 20:58:19 UTC&lt;/p&gt;
Perhaps the simplest rebuttal to the author's primary point is to quote from the introdution to the published rationale for C99:
&lt;p&gt;&quot;C code can be non-portable. Although it strove to give programmers the opportunity to write truly portable programs, the C89 Committee did not want to force programmers into writing portably, to preclude the use of C as a high-level assembler: the ability to write machine-specific code is one of the strengths of C. It is this principle which largely motivates drawing the distinction between strictly conforming program and conforming program.&quot;&lt;/p&gt;
&lt;p&gt;To be sure, the C Standard does not require that implementations be suitable for low-level program. On the other hand, it does not require that they be suitable for *any* particular purpose. The C89 Rationale notes, in 2.4.4.1, &quot;While a deficient implementation could probably contrive a program that meets this requirement, yet still succeed in being useless, the Committee felt that such ingenuity would probably require more work than making something useful.&quot;&lt;/p&gt;
&lt;p&gt;While the C Standard itself makes no reference to &quot;quality&quot;, except with regard to the &quot;randomness&quot; produced by rand() and random(), the rationale uses the phrase &quot;quality of implementation&quot; a fair number of times. From Seciton 3 of the C99 Rationale: &quot;The goal of adopting this categorization is to allow a certain variety among implementations which permits quality of implementation to be an active force in the marketplace as well as to allow certain popular extensions, without removing the cachet of conformance to the Standard.&quot;&lt;/p&gt;
&lt;p&gt;For some reason, it has become fashionable to view the &quot;ingenuity&quot; alluded to in 2.4.4.1 of the C89 Rationale as a good thing, but the text makes it clear it isn't. The only reason the authors didn't explicitly discourage it is that they thought the effort required would be adequate deterrent. Alas, they were mistaken.&lt;/p&gt;
&lt;hr size=&quot;1&quot; noshade=&quot;noshade&quot; width=&quot;160&quot;/&gt;&lt;blockquote readability=&quot;3.0508474576271&quot;&gt;
&lt;p&gt;&lt;strong&gt;Displaying 10 most recent comments. &lt;a href=&quot;https://queue.acm.org/fullcomments.cfm?id=3212479&quot;&gt;Read the full list here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;hr noshade=&quot;noshade&quot; size=&quot;1&quot;/&gt;&lt;p&gt;&lt;a href=&quot;https://queue.acm.org/detail.cfm?id=3212479#&quot;&gt;&lt;img src=&quot;https://queue.acm.org/img/logo_acm.gif&quot;/&gt;&lt;/a&gt;&lt;br/&gt;© 2019 ACM, Inc. All Rights Reserved.&lt;/p&gt;
</description>
<pubDate>Fri, 27 Dec 2019 00:33:40 +0000</pubDate>
<dc:creator>pcr910303</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://queue.acm.org/detail.cfm?id=3212479</dc:identifier>
</item>
<item>
<title>Effects of Intermittent Fasting on Health, Aging, and Disease [pdf]</title>
<link>https://www.gwern.net/docs/longevity/2019-decabo.pdf</link>
<guid isPermaLink="true" >https://www.gwern.net/docs/longevity/2019-decabo.pdf</guid>
<description>&lt;a href=&quot;https://www.gwern.net/docs/longevity/2019-decabo.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Thu, 26 Dec 2019 23:56:20 +0000</pubDate>
<dc:creator>SQL2219</dc:creator>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://www.gwern.net/docs/longevity/2019-decabo.pdf</dc:identifier>
</item>
</channel>
</rss>