<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Revolut CFO resigns following money laundering controversy</title>
<link>https://techcrunch.com/2019/03/01/revolut-cfo-peter-ohiggins-resigns/</link>
<guid isPermaLink="true" >https://techcrunch.com/2019/03/01/revolut-cfo-peter-ohiggins-resigns/</guid>
<description>&lt;p id=&quot;speakable-summary&quot;&gt;This hasn’t been a good week for challenger bank &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/revolut&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;revolut&quot;&gt;Revolut&lt;/a&gt;. The company, which offers digital banking services and &lt;a href=&quot;https://techcrunch.com/2018/04/25/revolunicorn/&quot;&gt;is valued at $1.7 billion&lt;/a&gt;, confirmed today that embattled CFO Peter O’Higgins has resigned and left the business.&lt;/p&gt;
&lt;p&gt;The startup and O’Higgins have been under pressure after &lt;a href=&quot;https://www.telegraph.co.uk/technology/2019/02/28/revolut-failed-block-suspicious-transactions/&quot;&gt;a Daily Telegraph report&lt;/a&gt; revealed that Revolut switched off an anti-money laundering system that flags suspect transactions because it was prone to throwing out false positives.&lt;/p&gt;
&lt;p&gt;According to the Telegraph, the system was inactive between July-September 2018, which potentially allowed illegal transactions to pass across the banking platform. Revolut did not contact the &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/financial-conduct-authority&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;financial-conduct-authority&quot;&gt;Financial Conduct Authority&lt;/a&gt; to inform the regulator of the lapse, &lt;a href=&quot;https://twitter.com/JamesLiamCook/status/1101204901974237186&quot;&gt;Telegraph reporter James Cook said&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O’Higgins, who joined the company from JP Morgan three years ago, made no mention of the saga in his resignation statement:&lt;/p&gt;
&lt;blockquote readability=&quot;11&quot;&gt;
&lt;p&gt;Having been at Revolut for almost three years, I am immensely proud to have taken the company from £1m revenue to £50m revenue during this time. However, as Revolut begins to scale globally and applies to become a bank in multiple jurisdictions, the time has come to pass the reigns over to someone who has global retail banking experience at this level. My time at Revolut has been invaluable and I’m so proud of what myself and the team have achieved. There is no doubt in my mind that Revolut will go on to build one of the largest and most trusted financial institutions in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a separate statement received by TechCrunch, Revolut CEO Nik Storonsky said that O’Higgins had been “absolutely pivotal to our success.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Storonsky also responded to the Telegraph story with &lt;a href=&quot;https://blog.revolut.com/let-me-sec-the-record-straight/&quot;&gt;a blog post&lt;/a&gt; that denies any wrongdoing. He claimed Revolut suspended the use of “a more advanced sanctions screening system” and instead reverted to a previous one.&lt;/p&gt;
&lt;p&gt;Here’s an excerpt:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;At no point during this time did we fail to meet our legal or regulatory requirements. We conducted a thorough review of all transactions that were processed during this time, which confirmed that there were no breaches. Unfortunately, this fact was not included in the original news story. This roll-out did not result in a breach of any sanctions or money laundering laws and requirements – so we did not send a formal notification to the regulator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;The original version of this post continues below…&lt;/em&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;The resignation caps a terrible few days for Revolut, which was the subject of &lt;a href=&quot;https://www.wired.co.uk/article/revolut-trade-unions-labour-fintech-politics-storonsky&quot;&gt;a report from Wired&lt;/a&gt; earlier this week that delved into allegations around its challenging workplace culture and high employee churn rate.&lt;/p&gt;
&lt;p&gt;“Former Revolut employees say this high-speed growth has come at a high human cost – with unpaid work, unachievable targets, and high-staff turnover,” wrote guest reporter Emiliano Mellino, citing the experiences of numerous former employees.&lt;/p&gt;
&lt;p&gt;Those incidents included prospective staff being told to canvass for new customers as part of the interview process. The candidates were not compensated for their efforts, according to Wired. Revolut later removed the demands from its hiring processes.&lt;/p&gt;
&lt;p&gt;Revolut is headquartered in the U.K., where it launched its service in the summer of 2015. Today, it claims over four million registered users across Europe — it is available in EEA countries — although its plans to extend its presence to other parts of the world are taking longer than expected.&lt;/p&gt;
&lt;p&gt;The company said last year &lt;a href=&quot;https://techcrunch.com/2018/11/28/revolut-is-ready-to-launch-in-singapore-and-japan/&quot;&gt;it aims to launch in Singapore and Japan in Q1&lt;/a&gt; of this year — so far neither has happened — while it also harbors North American market plans. Entries to the U.S. and Canada were supposed to happen by the end of 2018, &lt;a href=&quot;https://techcrunch.com/2018/09/06/look-out-us-main-street-banks-the-revolut-is-coming/&quot;&gt;according to an interview with Storonsky at TechCrunch Disrupt in September&lt;/a&gt;, but they also appear to have been delayed.&lt;/p&gt;
&lt;p&gt;Revolut is generally considered to be the largest challenger bank in Europe, in terms of valuation and registered users, but other rivals include &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/n26&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;n26&quot;&gt;N26,&lt;/a&gt; &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/monzo&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;monzo&quot;&gt;Monzo&lt;/a&gt; and Starling. Even &lt;a class=&quot;crunchbase-link&quot; href=&quot;https://crunchbase.com/organization/transferwise&quot; target=&quot;_blank&quot; data-type=&quot;organization&quot; data-entity=&quot;transferwise&quot;&gt;TransferWise,&lt;/a&gt; the global remittance service, now includes border-less banking features and an accompanying debit card.&lt;/p&gt;
</description>
<pubDate>Fri, 01 Mar 2019 12:00:27 +0000</pubDate>
<dc:creator>braythwayt</dc:creator>
<og:title>Revolut CFO resigns following money laundering controversy</og:title>
<og:description>This hasn’t been a good week for challenger bank Revolut . The company, which offers digital banking services and is valued at $1.7 billion, confirmed today that embattled CFO Peter O’Higgins has resigned and left the business. The startup and O’Higgins have been under pressure af…</og:description>
<og:image>https://techcrunch.com/wp-content/uploads/2017/02/revolut-app-card-v-3.jpg?w=599</og:image>
<og:url>http://social.techcrunch.com/2019/03/01/revolut-cfo-peter-ohiggins-resigns/</og:url>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://techcrunch.com/2019/03/01/revolut-cfo-peter-ohiggins-resigns/</dc:identifier>
</item>
<item>
<title>AdNauseam – clicking ads so you don&amp;#039;t have to</title>
<link>https://adnauseam.io/</link>
<guid isPermaLink="true" >https://adnauseam.io/</guid>
<description>&lt;p id=&quot;p1&quot;&gt;As online advertising becomes ever more ubiquitous and unsanctioned, AdNauseam works to complete the cycle by automating Ad clicks universally and blindly on behalf of its users. Built atop uBlock Origin, AdNauseam quietly clicks on every blocked ad, registering a visit on ad networks' databases. As the collected data gathered shows an omnivorous click-stream, user tracking, targeting and surveillance become futile.&lt;/p&gt;&lt;p id=&quot;p2&quot; class=&quot;&quot;&gt;&lt;strong class=&quot;highlight&quot;&gt;AdNauseam&lt;/strong&gt; is a free browser extension designed to obfuscate browsing data and protect users from tracking by advertising networks. At the same time, AdNauseam serves as a means of amplifying users' discontent with advertising networks that disregard privacy and facilitate bulk surveillance agendas.&lt;/p&gt;
&lt;p id=&quot;p3&quot; class=&quot;&quot;&gt;AdNauseam joins a broader class of technical systems that attempt to serve ethical, political, and expressive ends. In light of the industry's &lt;a href=&quot;http://www.theregister.co.uk/2013/10/28/do_not_track_w3c_split/&quot;&gt;failure&lt;/a&gt; to self-regulate or otherwise address the excesses of network tracking, AdNauseam allows individual users to take matters into their own hands, fighting back against unilateral surveillance. Taken in this light, the software follows an approach similar to that of &lt;a href=&quot;http://cs.nyu.edu/trackmenot/&quot;&gt;TrackMeNot&lt;/a&gt;, employing obfuscation as a strategy to shift the balance of power between the trackers and the tracked. For further information on this approach, please see this &lt;a href=&quot;https://cs.nyu.edu/trackmenot/resources/trackmenot2009.pdf&quot;&gt;paper&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Fri, 01 Mar 2019 08:58:48 +0000</pubDate>
<dc:creator>JoachimS</dc:creator>
<og:title>AdNauseam - Clicking Ads So You Don't Have To</og:title>
<og:description>A browser extension that clicks on every blocked ad to fight advertising surveillance.</og:description>
<og:url>http://adnauseam.io</og:url>
<og:image>http://adnauseam.io/AdNauseam/img/adnauseam.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://adnauseam.io/</dc:identifier>
</item>
<item>
<title>JSON with Sqlite</title>
<link>https://www.sqlite.org/json1.html</link>
<guid isPermaLink="true" >https://www.sqlite.org/json1.html</guid>
<description>&lt;div class=&quot;nosearch&quot;&gt;
&lt;p&gt;The JSON1 Extension&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;json1&lt;/strong&gt; extension is a &lt;a href=&quot;https://www.sqlite.org/loadext.html&quot;&gt;loadable extension&lt;/a&gt; that implements fifteen &lt;a href=&quot;https://www.sqlite.org/c3ref/create_function.html&quot;&gt;application-defined SQL functions&lt;/a&gt; and two &lt;a href=&quot;https://www.sqlite.org/vtab.html#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; that are useful for managing &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; content stored in an SQLite database. There are thirteen scalar functions:&lt;/p&gt;
&lt;ol&gt;&lt;li value=&quot;1&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jmini&quot;&gt;json&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;2&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jarray&quot;&gt;json_array&lt;/a&gt;(&lt;em&gt;value1&lt;/em&gt;,&lt;em&gt;value2&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;3&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jarraylen&quot;&gt;json_array_length&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;br /&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jarraylen&quot;&gt;json_array_length&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;4&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jex&quot;&gt;json_extract&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;5&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jins&quot;&gt;json_insert&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;,&lt;em&gt;value&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;6&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jobj&quot;&gt;json_object&lt;/a&gt;(&lt;em&gt;label1&lt;/em&gt;,&lt;em&gt;value1&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;7&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jpatch&quot;&gt;json_patch&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;1,json2)&lt;/li&gt;
&lt;li value=&quot;8&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jrm&quot;&gt;json_remove&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;9&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jrepl&quot;&gt;json_replace&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;,&lt;em&gt;value&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;10&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jset&quot;&gt;json_set&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;,&lt;em&gt;value&lt;/em&gt;,...)&lt;/li&gt;
&lt;li value=&quot;11&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jtype&quot;&gt;json_type&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;br /&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jtype&quot;&gt;json_type&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;12&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jvalid&quot;&gt;json_valid&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;13&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jvalid&quot;&gt;json_quote&lt;/a&gt;(&lt;em&gt;value&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;There are two aggregate SQL functions:&lt;/p&gt;
&lt;ol&gt;&lt;li value=&quot;14&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jgrouparray&quot;&gt;json_group_array&lt;/a&gt;(&lt;em&gt;value&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;15&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jgroupobject&quot;&gt;json_group_object&lt;/a&gt;(name,&lt;em&gt;value&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The two &lt;a href=&quot;https://www.sqlite.org/vtab.html#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; are:&lt;/p&gt;
&lt;ol&gt;&lt;li value=&quot;16&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jeach&quot;&gt;json_each&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;br /&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jeach&quot;&gt;json_each&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;)&lt;/li&gt;
&lt;li value=&quot;17&quot;&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jtree&quot;&gt;json_tree&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;)&lt;br /&gt;&lt;a href=&quot;https://www.sqlite.org/json1.html#jtree&quot;&gt;json_tree&lt;/a&gt;(&lt;em&gt;json&lt;/em&gt;,&lt;em&gt;path&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.sqlite.org/loadext.html&quot;&gt;loadable extensions&lt;/a&gt; documentation describes how to &lt;a href=&quot;https://www.sqlite.org/loadext.html#build&quot;&gt;compile loadable extensions&lt;/a&gt; as shared libraries. The techniques described there work fine for the json1 module.&lt;/p&gt;
&lt;p&gt;The json1 source code is included with the SQLite &lt;a href=&quot;https://www.sqlite.org/amalgamation.html&quot;&gt;amalgamation&lt;/a&gt;, though it is disabled by default. Add the &lt;a href=&quot;https://www.sqlite.org/compile.html#enable_json1&quot;&gt;-DSQLITE_ENABLE_JSON1&lt;/a&gt; compile-time option to enable the json1 extension that is built into the &lt;a href=&quot;https://www.sqlite.org/amalgamation.html&quot;&gt;amalgamation&lt;/a&gt;. The standard makefiles include -DSQLITE_ENABLE_JSON1 when building the &lt;a href=&quot;https://www.sqlite.org/cli.html&quot;&gt;command-line shell&lt;/a&gt; and some of the test utilities so this extension is normally available in the &lt;a href=&quot;https://www.sqlite.org/cli.html&quot;&gt;command-line shell&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The json1 extension (currently) stores JSON as ordinary text.&lt;/p&gt;
&lt;p&gt;Backwards compatibility constraints mean that SQLite is only able to store values that are NULL, integers, floating-point numbers, text, and BLOBs. It is not possible to add a sixth &quot;JSON&quot; type.&lt;/p&gt;
&lt;p&gt;The json1 extension does not (currently) support a binary encoding of JSON. Experiments have been unable to find a binary encoding that is significantly smaller or faster than a plain text encoding. (The present implementation parses JSON text at over 1 GB/s.) All json1 functions currently throw an error if any of their arguments are BLOBs because BLOBs are reserved for a future enhancement in which BLOBs will store the binary encoding for JSON.&lt;/p&gt;
&lt;p&gt;The &quot;1&quot; at the end of the name for the json1 extension is deliberate. The designers anticipate that there will be future incompatible JSON extensions building upon the lessons learned from json1. Once sufficient experience is gained, some kind of JSON extension might be folded into the SQLite core. For now, JSON support remains an extension.&lt;/p&gt;
&lt;h2 id=&quot;json_arguments&quot;&gt;&lt;span&gt;3.1.&lt;/span&gt; JSON arguments&lt;/h2&gt;
&lt;p&gt;For functions that accept JSON as their first argument, that argument can be a JSON object, array, number, string, or null. SQLite numeric values and NULL values are interpreted as JSON numbers and nulls, respectively. SQLite text values can be understood as JSON objects, arrays, or strings. If an SQLite text value that is not a well-formed JSON object, array, or string is passed into json1 function, that function will usually throw an error. (Exceptions to this rule are &lt;a href=&quot;https://www.sqlite.org/json1.html#jvalid&quot;&gt;json_valid()&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/json1.html#jquote&quot;&gt;json_quote()&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;For the purposes of determining validity, leading and trailing whitespace on JSON inputs is ignored. Interior whitespace is also ignored, in accordance with the JSON spec. These routines accept exactly the &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc7159.txt&quot;&gt;rfc-7159 JSON syntax&lt;/a&gt; — no more and no less.&lt;/p&gt;
&lt;h2 id=&quot;path_arguments&quot;&gt;&lt;span&gt;3.2.&lt;/span&gt; PATH arguments&lt;/h2&gt;
&lt;p&gt;For functions that accept PATH arguments, that PATH must be well-formed or else the function will throw an error. A well-formed PATH is a text value that begins with exactly one '$' character followed by zero or more instances of &quot;.&lt;em&gt;objectlabel&lt;/em&gt;&quot; or &quot;[&lt;em&gt;arrayindex&lt;/em&gt;]&quot;.&lt;/p&gt;
&lt;h2 id=&quot;value_arguments&quot;&gt;&lt;span&gt;3.3.&lt;/span&gt; VALUE arguments&lt;/h2&gt;
&lt;p&gt;For functions that accept &quot;&lt;em&gt;value&lt;/em&gt;&quot; arguments (also shown as &quot;&lt;em&gt;value1&lt;/em&gt;&quot; and &quot;&lt;em&gt;value2&lt;/em&gt;&quot;), those arguments is usually understood to be a literal strings that are quoted and becomes JSON string values in the result. Even if the input &lt;em&gt;value&lt;/em&gt; strings look like well-formed JSON, they are still interpreted as literal strings in the result.&lt;/p&gt;
&lt;p&gt;However, if a &lt;em&gt;value&lt;/em&gt; argument come directly from the result of another json1 function, then the argument is understood to be actual JSON and the complete JSON is inserted rather than a quoted string.&lt;/p&gt;
&lt;p&gt;For example, in the following call to json_object(), the &lt;em&gt;value&lt;/em&gt; argument looks like a well-formed JSON array. However, because it is just ordinary SQL text, it is interpreted as a literal string and added to the result as a quoted string:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('ex','[52,3.14159]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;ex&quot;:&quot;[52,3.14159]&quot;}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;But if the &lt;em&gt;value&lt;/em&gt; argument in the outer json_object() call is the result of another json1 function like &lt;a href=&quot;https://www.sqlite.org/json1.html#jmini&quot;&gt;json()&lt;/a&gt; or &lt;a href=&quot;https://www.sqlite.org/json1.html#jarray&quot;&gt;json_array()&lt;/a&gt;, then the value is understood to be actual JSON and is inserted as such:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('ex',json('[52,3.14159]'))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;ex&quot;:[52,3.14159]}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('ex',json_array(52,3.14159))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;ex&quot;:[52,3.14159]}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To be clear: &quot;&lt;em&gt;json&lt;/em&gt;&quot; arguments are always interpreted as JSON regardless of where the value for that argument comes from. But &quot;&lt;em&gt;value&lt;/em&gt;&quot; arguments are only interpreted as JSON if those arguments come directly from another json1 function.&lt;/p&gt;
&lt;h2 id=&quot;compatibility&quot;&gt;&lt;span&gt;3.4.&lt;/span&gt; Compatibility&lt;/h2&gt;
&lt;p&gt;The json1 extension uses the &lt;a href=&quot;https://www.sqlite.org/c3ref/value_subtype.html&quot;&gt;sqlite3_value_subtype()&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/c3ref/result_subtype.html&quot;&gt;sqlite3_result_subtype()&lt;/a&gt; interfaces that were introduced with SQLite version 3.9.0 (2015-10-14) The json1 extension will not work in earlier versions of SQLite.&lt;/p&gt;
&lt;p&gt;The current implementation of this JSON library uses a recursive descent parser. In order to avoid using excess stack space, any JSON input that has more than 2000 levels of nesting is considered invalid. Limits on nesting depth are allowed for compatible implementations of JSON by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159#section-9&quot;&gt;RFC-7159 section 9&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following sections provide additional detail on the operation of the various functions that are part of the json1 extension. &lt;/p&gt;
&lt;h2 id=&quot;the_json_function&quot;&gt;&lt;span&gt;4.1.&lt;/span&gt; The json() function&lt;/h2&gt;
&lt;p&gt;The json(X) function verifies that its argument X is a valid JSON string and returns a minified version of that JSON string (with all unnecessary whitespace removed). If X is not a well-formed JSON string, then this routine throws an error.&lt;/p&gt;
&lt;p&gt;If the argument X to json(X) contains JSON objects with duplicate labels, then it is undefined whether or not the duplicates are preserved. The current implementation preserves duplicates. However, future enhancements to this routine may choose to silently remove duplicates.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json(' { &quot;this&quot; : &quot;is&quot;, &quot;a&quot;: [ &quot;test&quot; ] } ')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;this&quot;:&quot;is&quot;,&quot;a&quot;:[&quot;test&quot;]}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_array_function&quot;&gt;&lt;span&gt;4.2.&lt;/span&gt; The json_array() function&lt;/h2&gt;
&lt;p&gt;The json_array() SQL function accepts zero or more arguments and returns a well-formed JSON array that is composed from those arguments. If any argument to json_array() is a BLOB then an error is thrown.&lt;/p&gt;
&lt;p&gt;An argument with SQL type TEXT it is normally converted into a quoted JSON string. However, if the argument is the output from another json1 function, then it is stored as JSON. This allows calls to json_array() and &lt;a href=&quot;https://www.sqlite.org/json1.html#jobj&quot;&gt;json_object()&lt;/a&gt; to be nested. The &lt;a href=&quot;https://www.sqlite.org/json1.html#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array(1,2,'3',4)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[1,2,&quot;3&quot;,4]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array('[1,2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[&quot;[1,2]&quot;]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array(json_array(1,2))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[[1,2]]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array(1,null,'3','[4,5]','{&quot;six&quot;:7.7}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[1,null,&quot;3&quot;,&quot;[4,5]&quot;,&quot;{\&quot;six\&quot;:7.7}&quot;]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array(1,null,'3',json('[4,5]'),json('{&quot;six&quot;:7.7}'))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[1,null,&quot;3&quot;,[4,5],{&quot;six&quot;:7.7}]'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_array_length_function&quot;&gt;&lt;span&gt;4.3.&lt;/span&gt; The json_array_length() function&lt;/h2&gt;
&lt;p&gt;The json_array_length(X) function returns the number of elements in the JSON array X, or 0 if X is some kind of JSON value other than an array. The json_array_length(X,P) locates the array at path P within X and returns the length of that array, or 0 if path P locates an element or X other than a JSON array, and NULL if path P does not locate any element of X. Errors are thrown if either X is not well-formed JSON or if P is not a well-formed path.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('[1,2,3,4]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 4&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('[1,2,3,4]', '$')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 4&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('[1,2,3,4]', '$[2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 0&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('{&quot;one&quot;:[1,2,3]}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 0&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('{&quot;one&quot;:[1,2,3]}', '$.one')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 3&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_array_length('{&quot;one&quot;:[1,2,3]}', '$.two')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ NULL&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The json_extract(X,P1,P2,...) extracts and returns one or more values from the well-formed JSON at X. If only a single path P1 is provided, then the SQL datatype of the result is NULL for a JSON null, INTEGER or REAL for a JSON numeric value, an INTEGER zero for a JSON false value, an INTEGER one for a JSON true value, the dequoted text for a JSON string value, and a text representation for JSON object and array values. If there are multiple path arguments (P1, P2, and so forth) then this routine returns SQLite text which is a well-formed JSON array holding the various values.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$.c')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[4,5,{&quot;f&quot;:7}]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$.c[2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;f&quot;:7}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$.c[2].f')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 7&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5],&quot;f&quot;:7}','$.c','$.a')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[[4,5],2]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$.x')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ NULL&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_extract('{&quot;a&quot;:2,&quot;c&quot;:[4,5,{&quot;f&quot;:7}]}', '$.x', '$.a')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[null,2]'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;  
&lt;h2 id=&quot;the_json_insert_json_replace_and_json_set_functions&quot;&gt;&lt;span&gt;4.5.&lt;/span&gt; The json_insert(), json_replace, and json_set() functions&lt;/h2&gt;
&lt;p&gt;The json_insert(), json_replace, and json_set() functions all take a single JSON value as their first argument followed by zero or more pairs of path and value arguments, and return a new JSON string formed by updating the input JSON by the path/value pairs. The functions differ only in how they deal with creating new values and overwriting preexisting values.&lt;/p&gt;
&lt;center&gt;
&lt;table border=&quot;1&quot; cellpadding=&quot;3&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Overwrite if already exists?&lt;/th&gt;
&lt;th&gt;Create if does not exist?&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;json_insert()&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;No&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;Yes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;json_replace()&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;No&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;json_set()&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;Yes&lt;/td&gt;
&lt;td align=&quot;'center'&quot;&gt;Yes&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;
&lt;p&gt;The json_insert(), json_replace(), and json_set() functions always take an odd number of arguments. The first argument is always the original JSON to be edited. Subsequent arguments occur in pairs with the first element of each pair being a path and the second element being the value to insert or replace or set on that path.&lt;/p&gt;
&lt;p&gt;Edits occurs sequentially from left to right. Changes caused by prior edits can affect the path search for subsequent edits.&lt;/p&gt;
&lt;p&gt;If the value of a path/value pair is an SQLite TEXT value, then it is normally inserted as a quoted JSON string, even if the string looks like valid JSON. However, if the value is the result of another json1 function (such as &lt;a href=&quot;https://www.sqlite.org/json1.html#jmini&quot;&gt;json()&lt;/a&gt; or &lt;a href=&quot;https://www.sqlite.org/json1.html#jarray&quot;&gt;json_array()&lt;/a&gt; or &lt;a href=&quot;https://www.sqlite.org/json1.html#jobj&quot;&gt;json_object()&lt;/a&gt;) then it is interpreted as JSON and is inserted as JSON retaining all of its substructure.&lt;/p&gt;
&lt;p&gt;These routines throw an error if the first JSON argument is not well-formed or if any PATH argument is not well-formed or if any argument is a BLOB.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_insert('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.a', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_insert('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.e', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:4,&quot;e&quot;:99}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_replace('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.a', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:99,&quot;c&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_replace('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.e', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_set('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.a', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:99,&quot;c&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_set('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.e', 99)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:4,&quot;e&quot;:99}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_set('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.c', '[97,96]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:&quot;[97,96]&quot;}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_set('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.c', json('[97,96]'))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:[97,96]}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_set('{&quot;a&quot;:2,&quot;c&quot;:4}', '$.c', json_array(97,96))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:[97,96]}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_object_function&quot;&gt;&lt;span&gt;4.6.&lt;/span&gt; The json_object() function&lt;/h2&gt;
&lt;p&gt;The json_object() SQL function accepts zero or more pairs of arguments and returns a well-formed JSON object that is composed from those arguments. The first argument of each pair is the label and the second argument of each pair is the value. If any argument to json_object() is a BLOB then an error is thrown.&lt;/p&gt;
&lt;p&gt;The json_object() function currently allows duplicate labels without complaint, though this might change in a future enhancement.&lt;/p&gt;
&lt;p&gt;An argument with SQL type TEXT it is normally converted into a quoted JSON string even if the input text is well-formed JSON. However, if the argument is the direct result from another json1 function, then it is treated as JSON and all of its JSON type information and substructure is preserved. This allows calls to json_object() and &lt;a href=&quot;https://www.sqlite.org/json1.html#jarray&quot;&gt;json_array()&lt;/a&gt; to be nested. The &lt;a href=&quot;https://www.sqlite.org/json1.html#jmini&quot;&gt;json()&lt;/a&gt; function can also be used to force strings to be recognized as JSON.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('a',2,'c',4)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('a',2,'c','{e:5}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:&quot;{e:5}&quot;}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_object('a',2,'c',json_object('e',5))&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:2,&quot;c&quot;:{&quot;e&quot;:5}}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_patch_function&quot;&gt;&lt;span&gt;4.7.&lt;/span&gt; The json_patch() function&lt;/h2&gt;
&lt;p&gt;The json_patch(T,P) SQL function runs the &lt;a href=&quot;https://tools.ietf.org/html/rfc7396&quot;&gt;RFC-7396&lt;/a&gt; MergePatch algorithm to apply patch P against input T. The patched copy of T is returned.&lt;/p&gt;
&lt;p&gt;MergePatch can add, modify, or delete elements of a JSON Object, and so for JSON Objects, the json_patch() routine is a generalized replacement for &lt;a href=&quot;https://www.sqlite.org/json1.html#jset&quot;&gt;json_set()&lt;/a&gt; and &lt;a href=&quot;https://www.sqlite.org/json1.html#jrm&quot;&gt;json_remove()&lt;/a&gt;. However, MergePatch treats JSON Array objects as atomic. MergePatch cannot append to an Array nor modify individual elements of an Array. It can only insert, replace, or delete the whole Array as a single unit. Hence, json_patch() is not as useful when dealing with JSON that includes Arrays, especially Arrays with lots of substructure.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_patch('{&quot;a&quot;:1,&quot;b&quot;:2}','{&quot;c&quot;:3,&quot;d&quot;:4}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_patch('{&quot;a&quot;:[1,2],&quot;b&quot;:2}','{&quot;a&quot;:9}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:9,&quot;b&quot;:2}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_patch('{&quot;a&quot;:[1,2],&quot;b&quot;:2}','{&quot;a&quot;:null}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;b&quot;:2}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_patch('{&quot;a&quot;:1,&quot;b&quot;:2}','{&quot;a&quot;:9,&quot;b&quot;:null,&quot;c&quot;:8}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:9,&quot;c&quot;:8}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_patch('{&quot;a&quot;:{&quot;x&quot;:1,&quot;y&quot;:2},&quot;b&quot;:3}','{&quot;a&quot;:{&quot;y&quot;:9},&quot;c&quot;:8}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;a&quot;:{&quot;x&quot;:1,&quot;y&quot;:9},&quot;b&quot;:3,&quot;c&quot;:8}'&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_remove_function&quot;&gt;&lt;span&gt;4.8.&lt;/span&gt; The json_remove() function&lt;/h2&gt;
&lt;p&gt;The json_remove(X,P,...) function takes a single JSON value as its first argument followed by zero or more path arguments. The json_remove(X,P,...) function returns a new JSON value that is the X with all the elements identified by path arguments removed. Paths that select elements not found in X are silently ignored.&lt;/p&gt;
&lt;p&gt;Removals occurs sequentially from left to right. Changes caused by prior removals can affect the path search for subsequent arguments.&lt;/p&gt;
&lt;p&gt;If the json_remove(X) function is called with no path arguments, then it returns the input X reformatted, with excess whitespace removed.&lt;/p&gt;
&lt;p&gt;The json_remove() function throws an error if the first argument is not well-formed JSON or if any later argument is not a well-formed path, or if any argument is a BLOB.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('[0,1,2,3,4]','$[2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[0,1,3,4]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('[0,1,2,3,4]','$[2]','$[0]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[1,3,4]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('[0,1,2,3,4]','$[0]','$[2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '[1,2,4]'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('{&quot;x&quot;:25,&quot;y&quot;:42}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;x&quot;:25,&quot;y&quot;:42}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('{&quot;x&quot;:25,&quot;y&quot;:42}','$.z')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;x&quot;:25,&quot;y&quot;:42}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('{&quot;x&quot;:25,&quot;y&quot;:42}','$.y')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ '{&quot;x&quot;:25}'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_remove('{&quot;x&quot;:25,&quot;y&quot;:42}','$')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ NULL&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_type_function&quot;&gt;&lt;span&gt;4.9.&lt;/span&gt; The json_type() function&lt;/h2&gt;
&lt;p&gt;The json_type(X) function returns the &quot;type&quot; of the outermost element of X. The json_type(X,P) function returns the &quot;type&quot; of the element in X that is selected by path P. The &quot;type&quot; returned by json_type() is on of the following an SQL text values: 'null', 'true', 'false', 'integer', 'real', 'text', 'array', or 'object'. If the path P in json_type(X,P) selects an element that does not exist in X, then this function returns NULL.&lt;/p&gt;
&lt;p&gt;The json_type() function throws an error if any of its arguments are not well-formed or is a BLOB.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'object'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'object'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'array'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[0]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'integer'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[1]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'real'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[2]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'true'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[3]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'false'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[4]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'null'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[5]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 'text'&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_type('{&quot;a&quot;:[2,3.5,true,false,null,&quot;x&quot;]}','$.a[6]')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ NULL&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_valid_function&quot;&gt;&lt;span&gt;4.10.&lt;/span&gt; The json_valid() function&lt;/h2&gt;
&lt;p&gt;The json_valid(X) function return 1 if the argument X is well-formed JSON and return 0 if the argument X is not well-formed JSON.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_valid('{&quot;x&quot;:35}')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_valid('{&quot;x&quot;:35')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 0&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the_json_quote_function&quot;&gt;&lt;span&gt;4.11.&lt;/span&gt; The json_quote() function&lt;/h2&gt;
&lt;p&gt;The json_quote(X) function converts the SQL value X (a number or a string) into its corresponding JSON representation.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_quote(3.14159)&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ 3.14159&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;jex&quot;&gt;json_quote('verdant')&lt;/span&gt; &lt;span class=&quot;jans&quot;&gt;→ &quot;verdant&quot;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt; 
&lt;h2 id=&quot;the_json_group_array_and_json_group_object_aggregate_sql_functions&quot;&gt;&lt;span&gt;4.12.&lt;/span&gt; The json_group_array() and json_group_object() aggregate SQL functions&lt;/h2&gt;
&lt;p&gt;The json_group_array(X) function is an &lt;a href=&quot;https://www.sqlite.org/lang_aggfunc.html&quot;&gt;aggregate SQL function&lt;/a&gt; that returns a JSON array comprised of all X values in the aggregation. Similarly, the json_group_object(NAME,VALUE) function returns a JSON object comprised of all NAME/VALUE pairs in the aggregation.  &lt;/p&gt;
&lt;h2 id=&quot;the_json_each_and_json_tree_table_valued_functions&quot;&gt;&lt;span&gt;4.13.&lt;/span&gt; The json_each() and json_tree() table-valued functions&lt;/h2&gt;
&lt;p&gt;The json_each(X) and json_tree(X) &lt;a href=&quot;https://www.sqlite.org/vtab.html#tabfunc2&quot;&gt;table-valued functions&lt;/a&gt; walk the JSON value provided as their first argument and return one row for each element. The json_each(X) function only walks the immediate children of the top-level array or object or or just the top-level element itself if the top-level element is a primitive value. The json_tree(X) function recursively walks through the JSON substructure starting with the top-level element.&lt;/p&gt;
&lt;p&gt;The json_each(X,P) and json_tree(X,P) functions work just like their one-argument counterparts except that they treat the element identified by path P as the top-level element.&lt;/p&gt;
&lt;p&gt;The schema for the table returned by json_each() and json_tree() is as follows:&lt;/p&gt;
&lt;blockquote readability=&quot;22&quot;&gt;
&lt;pre&gt;
CREATE TABLE json_tree(
    key ANY,             -- key for current element relative to its parent
    value ANY,           -- value for the current element
    type TEXT,           -- 'object','array','string','integer', etc.
    atom ANY,            -- value for primitive types, null for array &amp;amp; object
    id INTEGER,          -- integer ID for this element
    parent INTEGER,      -- integer ID for the parent of this element
    fullkey TEXT,        -- full path describing the current element
    path TEXT,           -- path to the container of the current row
    json JSON HIDDEN,    -- 1st input parameter: the raw JSON
    root TEXT HIDDEN     -- 2nd input parameter: the PATH at which to start
);
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;The &quot;key&quot; column is the integer array index for elements of a JSON array and the text label for elements of a JSON object. The key column is NULL in all other cases.&lt;/p&gt;
&lt;p&gt;The &quot;atom&quot; column is the SQL value corresponding to primitive elements - elements other than JSON arrays and objects. The &quot;atom&quot; column is NULL for a JSON array or object. The &quot;value&quot; column is the same as the &quot;atom&quot; column for primitive JSON elements but takes on the text JSON value for arrays and objects.&lt;/p&gt;
&lt;p&gt;The &quot;type&quot; column is an SQL text value taken from ('null', 'true', 'false', 'integer', 'real', 'text', 'array', 'object') according to the type of the current JSON element.&lt;/p&gt;
&lt;p&gt;The &quot;id&quot; column is an integer that identifies a specific JSON element within the complete JSON string. The &quot;id&quot; integer is an internal housekeeping number, the computation of which might change in future releases. The only guarantee is that the &quot;id&quot; column will be different for every row.&lt;/p&gt;
&lt;p&gt;The &quot;parent&quot; column is always NULL for json_each(). For json_tree(), the &quot;parent&quot; column is the &quot;id&quot; integer for the parent of the current element, or NULL for the top-level JSON element or the element identified by the root path in the second argument.&lt;/p&gt;
&lt;p&gt;The &quot;fullkey&quot; column is a text path that uniquely identifies the current row element within the original JSON string. The complete key to the true top-level element is returned even if an alternative starting point is provided by the &quot;root&quot; argument.&lt;/p&gt;
&lt;p&gt;The &quot;path&quot; column is the path to the array or object container the holds the current row, or the path to the current row in the case where the iteration starts on a primitive type and thus only provides a single row of output.&lt;/p&gt;
&lt;h3 id=&quot;examples_using_json_each_and_json_tree_&quot;&gt;&lt;span&gt;4.13.1.&lt;/span&gt; Examples using json_each() and json_tree()&lt;/h3&gt;
&lt;p&gt;Suppose the table &quot;CREATE TABLE user(name,phone)&quot; stores zero or more phone numbers as a JSON array object in the user.phone field. To find all users who have any phone number with a 704 area code:&lt;/p&gt;
&lt;blockquote readability=&quot;6&quot;&gt;
&lt;pre&gt;
SELECT DISTINCT user.name
  FROM user, json_each(user.phone)
 WHERE json_each.value LIKE '704-%';
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Now suppose the user.phone field contains plain text if the user has only a single phone number and a JSON array if the user has multiple phone numbers. The same question is posed: &quot;Which users have a phone number in the 704 area code?&quot; But now the json_each() function can only be called for those users that have two or more phone numbers since json_each() requires well-formed JSON as its first argument:&lt;/p&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;pre&gt;
SELECT name FROM user WHERE phone LIKE '704-%'
UNION
SELECT user.name
  FROM user, json_each(user.phone)
 WHERE json_valid(user.phone)
   AND json_each.value LIKE '704-%';
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Consider a different database with &quot;CREATE TABLE big(json JSON)&quot;. To see a complete line-by-line decomposition of the data:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;pre&gt;
SELECT big.rowid, fullkey, value
  FROM big, json_tree(big.json)
 WHERE json_tree.type NOT IN ('object','array');
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;In the previous, the &quot;type NOT IN ('object','array')&quot; term of the WHERE clause suppresses containers and only lets through leaf elements. The same effect could be achieved this way:&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;pre&gt;
SELECT big.rowid, fullkey, atom
  FROM big, json_tree(big.json)
 WHERE atom IS NOT NULL;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Suppose each entry in the BIG table is a JSON object with a '$.id' field that is a unique identifier and a '$.partlist' field that can be a deeply nested object. You want to find the id of every entry that contains one or more references to uuid '6fa5181e-5721-11e5-a04e-57f3d7b32808' anywhere in its '$.partlist'.&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;pre&gt;
SELECT DISTINCT json_extract(big.json,'$.id')
  FROM big, json_tree(big.json, '$.partlist')
 WHERE json_tree.key='uuid'
   AND json_tree.value='6fa5181e-5721-11e5-a04e-57f3d7b32808';
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
<pubDate>Fri, 01 Mar 2019 03:59:49 +0000</pubDate>
<dc:creator>ausjke</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.sqlite.org/json1.html</dc:identifier>
</item>
<item>
<title>A community-driven port of Emacs to Rust</title>
<link>https://github.com/remacs/remacs</link>
<guid isPermaLink="true" >https://github.com/remacs/remacs</guid>
<description>&lt;div class=&quot;Box-body p-6&quot;&gt;
&lt;article class=&quot;markdown-body entry-content&quot; itemprop=&quot;text&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://gitter.im/remacs-discuss/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/c309a484f077b17bf94b8828ccc3484020f64eba/68747470733a2f2f6261646765732e6769747465722e696d2f72656d6163732d646973637573732f4c6f6262792e737667&quot; alt=&quot;Join the chat at https://gitter.im/remacs-discuss/Lobby&quot; data-canonical-src=&quot;https://badges.gitter.im/remacs-discuss/Lobby.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://travis-ci.org/remacs/remacs&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9ef2ff52a2adcce65e02d1adbb1d122afe66c9a7/68747470733a2f2f7472617669732d63692e6f72672f72656d6163732f72656d6163732e7376673f6272616e63683d6d6173746572&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/remacs/remacs.svg?branch=master&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A community-driven port of &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot; rel=&quot;nofollow&quot;&gt;Emacs&lt;/a&gt; to &lt;a href=&quot;https://www.rust-lang.org&quot; rel=&quot;nofollow&quot;&gt;Rust&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Emacs will change how you think about programming.&lt;/p&gt;
&lt;p&gt;Emacs is &lt;strong&gt;totally introspectable&lt;/strong&gt;. You can always find out 'what code runs when I press this button?'.&lt;/p&gt;
&lt;p&gt;Emacs is an &lt;strong&gt;incremental programming environment&lt;/strong&gt;. There's no edit-compile-run cycle. There isn't even an edit-run cycle. You can execute snippets of code and gradually turn them into a finished project. There's no distinction between your editor and your interpreter.&lt;/p&gt;
&lt;p&gt;Emacs is a &lt;strong&gt;mutable environment&lt;/strong&gt;. You can set variables, tweak functions with advice, or redefine entire functions. Nothing is off-limits.&lt;/p&gt;
&lt;p&gt;Emacs &lt;strong&gt;provides functionality without applications&lt;/strong&gt;. Rather than separate applications, functionality is all integrated into your Emacs instance. Amazingly, this works. Ever wanted to use the same snippet tool for writing C++ classes as well as emails?&lt;/p&gt;
&lt;p&gt;Emacs is full of &lt;strong&gt;incredible software concepts that haven't hit the mainstream yet&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Many platforms have a single item clipboard. Emacs has an &lt;strong&gt;infinite clipboard&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If you undo a change, and then continue editing, you can't redo the original change. Emacs allows &lt;strong&gt;undoing to any historical state&lt;/strong&gt;, even allowing tree-based exploration of history.&lt;/li&gt;
&lt;li&gt;Emacs supports a &lt;strong&gt;reverse variable search&lt;/strong&gt;: you can find variables with a given value.&lt;/li&gt;
&lt;li&gt;You can perform &lt;strong&gt;structural editing&lt;/strong&gt; of code, allowing you to make changes without breaking syntax. This works for lisps (paredit) and non-lisps (smartparens).&lt;/li&gt;
&lt;li&gt;Many applications use a modal GUI: for example, you can't do other edits during a find-and-replace operation. Emacs provides &lt;strong&gt;recursive editing&lt;/strong&gt; that allow you to suspend what you're currently doing, perform other edits, then continue the original task.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Emacs has a &lt;strong&gt;documentation culture&lt;/strong&gt;. Emacs includes a usage manual, a lisp programming manual, pervasive docstrings and even an interactive tutorial.&lt;/p&gt;
&lt;p&gt;Emacs has &lt;strong&gt;a broad ecosystem&lt;/strong&gt;. If you want to edit code in a niche language, there's probably an Emacs package for it.&lt;/p&gt;
&lt;p&gt;Emacs doesn't have a monopoly on good ideas, and there are other great tools out there. Nonetheless, we believe the &lt;a href=&quot;https://i.stack.imgur.com/7Cu9Z.jpg&quot; rel=&quot;nofollow&quot;&gt;Emacs learning curve pays off&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rust is a great alternative to C.&lt;/p&gt;
&lt;p&gt;Rust has &lt;strong&gt;a fantastic learning curve&lt;/strong&gt;. &lt;a href=&quot;https://doc.rust-lang.org/&quot; rel=&quot;nofollow&quot;&gt;The documentation is superb&lt;/a&gt;, and the community is very helpful if you get stuck.&lt;/p&gt;
&lt;p&gt;Rust has &lt;strong&gt;excellent tooling&lt;/strong&gt;. The compiler makes great suggestions, the unit test framework is good, and &lt;code&gt;rustfmt&lt;/code&gt; helps ensure formatting is beautiful and consistent.&lt;/p&gt;
&lt;p&gt;The Rust &lt;strong&gt;packaging story is excellent&lt;/strong&gt;. It's easy to reuse the great libraries available, and just as easy to factor out code for the benefit of others. We can replace entire C files in Emacs with well-maintained Rust libraries.&lt;/p&gt;
&lt;p&gt;Code written in Rust &lt;strong&gt;easily interoperates with C&lt;/strong&gt;. This means we can &lt;strong&gt;port to Rust incrementally&lt;/strong&gt;, and having a working Emacs at each step of the process.&lt;/p&gt;
&lt;p&gt;Rust provides &lt;strong&gt;many compile-time checks&lt;/strong&gt;, making it much easier to write fast, correct code (even when using multithreading). This also makes it much easier for newcomers to contribute.&lt;/p&gt;
&lt;p&gt;Give it a try. We think you'll like it.&lt;/p&gt;

&lt;p&gt;Emacs is a widely used tool with a long history, broad platform support and strong backward compatibility requirements. The core team is understandably cautious in making far-reaching changes.&lt;/p&gt;
&lt;p&gt;Forking is a longstanding tradition in the Emacs community for trying different approaches. Notable Emacs forks include &lt;a href=&quot;http://www.xemacs.org/&quot; rel=&quot;nofollow&quot;&gt;XEmacs&lt;/a&gt;, &lt;a href=&quot;https://www.emacswiki.org/emacs/GuileEmacs&quot; rel=&quot;nofollow&quot;&gt;Guile Emacs&lt;/a&gt;, and &lt;a href=&quot;https://github.com/burtonsamograd/emacs-jit&quot;&gt;emacs-jit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There have also been separate elisp implementations, such as &lt;a href=&quot;https://github.com/hraberg/deuce&quot;&gt;Deuce&lt;/a&gt;, &lt;a href=&quot;http://jemacs.sourceforge.net/&quot; rel=&quot;nofollow&quot;&gt;JEmacs&lt;/a&gt; and &lt;a href=&quot;https://github.com/tromey/el-compilador&quot;&gt;El Compilador&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By forking, we can &lt;strong&gt;explore new development approaches&lt;/strong&gt;. We can use a pull request workflow with integrated CI.&lt;/p&gt;
&lt;p&gt;We can &lt;strong&gt;drop legacy platforms and compilers&lt;/strong&gt;. Remacs will never run on MS-DOS, and that's OK.&lt;/p&gt;
&lt;p&gt;There's a difference between &lt;strong&gt;the idea of Emacs&lt;/strong&gt; and the &lt;strong&gt;current implementation of Emacs&lt;/strong&gt;. Forking allows us to explore being even more Emacs-y.&lt;/p&gt;

&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;
&lt;p&gt;You will need &lt;a href=&quot;https://www.rust-lang.org/en-US/install.html&quot; rel=&quot;nofollow&quot;&gt;Rust installed&lt;/a&gt;. The file &lt;code&gt;rust-toolchain&lt;/code&gt; indicates the version that gets installed. This happens automatically, so don't override the toolchain manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will need a C compiler and toolchain. On Linux, you can do something like:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; apt install build-essential automake clang libclang-dev
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On macOS, you'll need Xcode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; apt install texinfo libjpeg-dev libtiff-dev \
   libgif-dev libxpm-dev libgtk-3-dev libgnutls28-dev \
   libncurses5-dev libxml2-dev libxt-dev
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;macOS:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt; brew install gnutls texinfo autoconf
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;To use the installed version of &lt;code&gt;makeinfo&lt;/code&gt; instead of the built-in (&lt;code&gt;/usr/bin/makeinfo&lt;/code&gt;) one, you'll need to make sure &lt;code&gt;/usr/local/opt/texinfo/bin&lt;/code&gt; is before &lt;code&gt;/usr/bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt;. Mojave install libxml2 headers with: &lt;code&gt;open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Dockerized development environment&lt;/h2&gt;
&lt;p&gt;If you don't want to bother with the above setup you can use the provided Docker environment. Make sure you have &lt;a href=&quot;https://www.docker.com/&quot; rel=&quot;nofollow&quot;&gt;docker&lt;/a&gt; 1.12+ and &lt;a href=&quot;https://github.com/docker/compose&quot;&gt;docker-compose&lt;/a&gt; 1.8+ available.&lt;/p&gt;
&lt;p&gt;To spin up the environment run&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
docker-compose up -d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first time you run this command, Docker will build the image. After that any subsequent startups will happen in less than a second. If this command fails because of needing absolute paths, make sure to set the PWD environment variable before calling the command like so:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
PWD=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;$(&lt;/span&gt;pwd&lt;span class=&quot;pl-pds&quot;&gt;)&lt;/span&gt;&lt;/span&gt; docker-compose up -d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The working directory with remacs will be mounted under the same path in the container so editing the files on your host machine will automatically be reflected inside the container. To build remacs use the steps from &lt;a href=&quot;https://github.com/remacs/remacs#building-remacs&quot;&gt;Building Remacs&lt;/a&gt; prefixed with &lt;code&gt;docker-compose exec remacs&lt;/code&gt;, this will ensure the commands are executed inside the container.&lt;/p&gt;
&lt;h2&gt;Building Remacs&lt;/h2&gt;
&lt;pre&gt;
&lt;code&gt;$ ./autogen.sh
$ ./configure --enable-rust-debug
$ make
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;For a release build, don't pass &lt;code&gt;--enable-rust-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Makefile obeys cargo's RUSTFLAGS variable and additional options can be passed to cargo with CARGO_FLAGS.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
$ make CARGO_FLAGS=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;-vv&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; RUSTFLAGS=&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;-Zunstable-options --cfg MARKER_DEBUG&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Running Remacs&lt;/h2&gt;
&lt;p&gt;You can now run your shiny new Remacs build!&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; Using -q to ignore your .emacs.d, so Remacs starts up quickly.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; RUST_BACKTRACE is optional, but useful if your instance crashes.&lt;/span&gt;
$ RUST_BACKTRACE=1 src/remacs -q
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;: Remacs should not break existing elisp code, and ideally provide the same FFI too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leverage Rust itself&lt;/strong&gt;: Remacs should make best use of Rust to ensure code is robust and performant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leverage the Rust ecosystem&lt;/strong&gt;: Remacs should use existing Rust crates wherever possible, and create new, separate crates where our code could benefit others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Great docs&lt;/strong&gt;: Emacs has excellent documentation, Remacs should be no different.&lt;/p&gt;

&lt;p&gt;At this point we focus on porting lisp functions from C to Rust. Currently there are 580 functions in Rust and 879 in C (February 2019).&lt;/p&gt;
&lt;p&gt;We have a &lt;a href=&quot;https://github.com/Wilfred/remacs/wiki/Progress&quot;&gt;progress section&lt;/a&gt; in our wiki and there's also a list of &lt;a href=&quot;https://github.com/Wilfred/remacs/projects/1&quot;&gt;long-term goals&lt;/a&gt; under projects.&lt;/p&gt;

&lt;p&gt;The first thing to look at is the C implementation for the &lt;code&gt;atan&lt;/code&gt; function. It takes an optional second argument, which makes it interesting. The complicated mathematical bits, on the other hand, are handled by the standard library. This allows us to focus on the porting process without getting distracted by the math.&lt;/p&gt;
&lt;p&gt;The Lisp values we are given as arguments are tagged pointers; in this case they are pointers to doubles. The code has to check the tag and follow the pointer to retrieve the real values. Note that this code invokes a C macro (called &lt;code&gt;DEFUN&lt;/code&gt;) that reduces some of the boilerplate. The macro declares a static varable called &lt;code&gt;Satan&lt;/code&gt; that holds the metadata the Lisp compiler will need in order to successfully call this function, such as the docstring and the pointer to the &lt;code&gt;Fatan&lt;/code&gt; function, which is what the C implementation is named:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-c&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-en&quot;&gt;DEFUN&lt;/span&gt; (&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;atan&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, Fatan, Satan, &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;,
       doc: &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; Return the inverse tangent of the arguments.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;If only one argument Y is given, return the inverse tangent of Y.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;If two arguments Y and X are given, return the inverse tangent of Y&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;divided by X, i.e. the angle in radians between the vector (X, Y)&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;and the x-axis.  &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;)
  (Lisp_Object y, Lisp_Object x)
{
  &lt;span class=&quot;pl-k&quot;&gt;double&lt;/span&gt; d = &lt;span class=&quot;pl-c1&quot;&gt;extract_float&lt;/span&gt; (y);
  &lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-c1&quot;&gt;NILP&lt;/span&gt; (x))
    d = &lt;span class=&quot;pl-c1&quot;&gt;atan&lt;/span&gt; (d);
  &lt;span class=&quot;pl-k&quot;&gt;else&lt;/span&gt;
    {
      &lt;span class=&quot;pl-k&quot;&gt;double&lt;/span&gt; d2 = &lt;span class=&quot;pl-c1&quot;&gt;extract_float&lt;/span&gt; (x);
      d = &lt;span class=&quot;pl-c1&quot;&gt;atan2&lt;/span&gt; (d, d2);
    }
  &lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;make_float&lt;/span&gt; (d);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;extract_float&lt;/code&gt; checks the tag (signalling an &quot;invalid argument&quot; error if it's not the tag for a double), and returns the actual value. &lt;code&gt;NILP&lt;/code&gt; checks to see if the tag indicates that this is a null value, indicating that the user didn't supply a second argument at all.&lt;/p&gt;
&lt;p&gt;Next take a look at the current Rust implementation. It must also take an optional argument, and it also invokes a (Rust) macro to reduce the boilerplate of declaring the static data for the function. However, it also takes care of all of the type conversions and checks that we need to do in order to handle the arguments and return value:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-rust&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;/// Return the inverse tangent of the arguments.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;/// If only one argument Y is given, return the inverse tangent of Y.&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;/// If two arguments Y and X are given, return the inverse tangent of Y&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;/// divided by X, i.e. the angle in radians between the vector (X, Y)&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;/// and the x-axis&lt;/span&gt;
#[lisp_fn(min = &lt;span class=&quot;pl-s&quot;&gt;&quot;1&quot;&lt;/span&gt;)]
&lt;span class=&quot;pl-k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;atan&lt;/span&gt;(y: EmacsDouble, x: &lt;span class=&quot;pl-k&quot;&gt;Option&lt;/span&gt;&amp;lt;EmacsDouble&amp;gt;) -&amp;gt; EmacsDouble {
    &lt;span class=&quot;pl-k&quot;&gt;match&lt;/span&gt; x {
        &lt;span class=&quot;pl-c1&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; y.&lt;span class=&quot;pl-en&quot;&gt;atan&lt;/span&gt;(),
        &lt;span class=&quot;pl-c1&quot;&gt;Some&lt;/span&gt;(x) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; y.&lt;span class=&quot;pl-en&quot;&gt;atan2&lt;/span&gt;(x)
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see that we don't have to check to see if our arguments are of the correct type, the code generated by the &lt;code&gt;lisp_fn&lt;/code&gt; macro does this for us. We also asked for the second argument to be an &lt;code&gt;Option&amp;lt;EmacsDouble&amp;gt;&lt;/code&gt;. This is the Rust type for a value which is either a valid double or isn't specified at all. We use a match statement to handle both cases.&lt;/p&gt;
&lt;p&gt;This code is so much better that it's hard to believe just how simple the implementation of the macro is. It just calls &lt;code&gt;.into()&lt;/code&gt; on the arguments and the return value; the compiler does the rest when it dispatches this method call to the correct implementation.&lt;/p&gt;

&lt;p&gt;Pull requests welcome, no copyright assignment required. This project is under the &lt;a href=&quot;https://www.rust-lang.org/policies/code-of-conduct&quot; rel=&quot;nofollow&quot;&gt;Rust code of conduct&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's lots to do! We keep a list of &lt;a href=&quot;https://github.com/Wilfred/remacs/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;low hanging fruit&lt;/a&gt; here so you can easily choose one. You can find information in the &lt;a href=&quot;https://github.com/Wilfred/remacs/wiki/Porting-cookbook&quot;&gt;Porting cookbook&lt;/a&gt; or ask for help in our gitter channel.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 01 Mar 2019 00:08:07 +0000</pubDate>
<dc:creator>dangom</dc:creator>
<og:image>https://avatars1.githubusercontent.com/u/47589425?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>remacs/remacs</og:title>
<og:url>https://github.com/remacs/remacs</og:url>
<og:description>Rust :heart: Emacs. Contribute to remacs/remacs development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/remacs/remacs</dc:identifier>
</item>
<item>
<title>Redesigning GitHub Repository Page</title>
<link>http://tonsky.me/blog/github-redesign/</link>
<guid isPermaLink="true" >http://tonsky.me/blog/github-redesign/</guid>
<description>&lt;img src=&quot;http://tonsky.me/blog/github-redesign/00_cover.png&quot; /&gt; Illustration by &lt;a href=&quot;https://www.behance.net/yuliaprokopova&quot; target=&quot;_blank&quot;&gt;Yulia Prokopova&lt;/a&gt;
&lt;p&gt;Github design is pretty good: it gets the job done, it’s clean, has consistent visual language, its design is calm and suitable for everyday use.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/10_as-is.png&quot; /&gt;&lt;p&gt;Given all that, there are still many areas that could be improved. Today we’ll take one interface—repository page—and look what UI problems it has and if we can fix them.&lt;/p&gt;
&lt;h2 id=&quot;first-problem-nested-tabs&quot;&gt;First problem: nested tabs&lt;/h2&gt;
&lt;p&gt;Let’s start with the biggest issue right away: information architecture. Take tabs. Currently there’re two levels of tabs, one nested under the other:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/20_tabs.png&quot; /&gt;&lt;p&gt;If you are a programmer, you might be surprised but other people normally don’t like hierarchies. Nested structures are hard to grasp, remember, navigate, and grouping is very often non-intuitive. Nested tabs are one of the worst UI patterns out there.&lt;/p&gt;
&lt;p&gt;Then there’s a plain usability issue: let’s say I’m in Wiki and need to see Releases. What should I do? There’s no Releases tab visible, so I must figure out somehow that Releases are part of the Code (?). That makes almost no sense. Releases are as much part of the Code as Issues or Wiki are.&lt;/p&gt;
&lt;p&gt;Solution here is to flatten all tabs into a single navigational control:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/30_tabs-merged.png&quot; /&gt;&lt;p&gt;Organized that way, tabs are immediately accessible &lt;em&gt;from anywhere&lt;/em&gt; in the repo. &lt;em&gt;This is a big deal&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As a bonus, we also won quite a bit of vertical space without sacrificing anything! Vertical space is very important, it lets you see more content and get to it faster—all good things.&lt;/p&gt;
&lt;p&gt;We still have one problem though: tabs don’t fit. We’re going to solve it by removing icons, but let me build up a case for that first.&lt;/p&gt;
&lt;h2 id=&quot;problem-2-redundant-icons&quot;&gt;Problem 2: Redundant icons&lt;/h2&gt;
&lt;p&gt;Icons are visual cues that help you scan the UI quickly. “Quickly” here means faster than reading text labels. If for some reason reading labels is still faster then icons aren’t working.&lt;/p&gt;
&lt;p&gt;One example of icons misuse: if you put too many icons in a row and they are &lt;em&gt;all&lt;/em&gt; different, they won’t work.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/35_icons.png&quot; /&gt;&lt;p&gt;Prioritizing, or highlighting, something means deprioritizing everything else. You can’t highlight everything.&lt;/p&gt;
&lt;p&gt;Another way to fail at icons: if you use obscure graphics, people will have to read labels anyways, so, again, not working.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/37_obscure_icons.jpeg&quot; /&gt;&lt;p&gt;Now let’s be honest: the domain of repository and project management is pretty abstract. No matter how good you are at design and how hard you try, you won’t come up with a great icon for a commit. Or a release. Or an issue. Or a license. A great icon is something &lt;em&gt;other&lt;/em&gt; people know and understand. And for repositories, there’s simply none. I mean,&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/40_is-this-a-commit.png&quot; /&gt;&lt;p&gt;So Github tab icons are purely decorative. If you don’t believe me, look at what Github itself is doing. They dim icons:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/45_commits.png&quot; /&gt;&lt;p&gt;That’s a sure sign that they, too, think it’s near impossible to figure out why backward clock means “Commit”. Github knows people will be looking at the labels anyways.&lt;/p&gt;
&lt;p&gt;But even being decorative, they’re bad at it. I mean, Icon + Label + Counter make for a symmetric and weak composition:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/50_composition.png&quot; /&gt;&lt;p&gt;By removing icons we:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;free up a lot of horizontal space,&lt;/li&gt;
&lt;li&gt;make design stronger, and&lt;/li&gt;
&lt;li&gt;get rid of visual noize.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Win-win-win! Here’s the result, tabs without icons:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/60_icons-removed.png&quot; /&gt;&lt;p&gt;Test yourself, see if you can find Releases tab without an icon and if it was harder than before? It wasn’t, was it?&lt;/p&gt;
&lt;p&gt;A note on this design: I am using the same limitations Github already uses: English language only, locked page width of 1020px. For different conditions, say, for the adaptive design we might want a different solution.&lt;/p&gt;
&lt;p&gt;Another note: I had to remove Contributors tab (which was actually not a tab, but a sub-tab from Insights that was duplicated in Code for some reason) to accommodate for Settings tab. Don’t worry, we’ll get Contributors back later.&lt;/p&gt;
&lt;h2 id=&quot;problem-3-vanity-counters&quot;&gt;Problem 3: Vanity counters&lt;/h2&gt;
&lt;p&gt;This is the “vanity menu”:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/70_vanity.png&quot; /&gt;&lt;p&gt;The thing with vanity metrics is that there should be just one. One metrics is simple to understand and focus. Two or three split attention, making everything weaker.&lt;/p&gt;
&lt;p&gt;Luckily for us, both watchers and forks perform poorly as metrics anyways. For watches, people tend not to watch too much. For forks, people tend to fork for no reason.&lt;/p&gt;
&lt;p&gt;But stars work. They work because they have no other function but to represent vanity. So let’s keep stars and move them to the left to get more attention:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/73_vanity.png&quot; /&gt;&lt;h2 id=&quot;problem-4-watch-button-ambiguity&quot;&gt;Problem 4: “Watch” button ambiguity&lt;/h2&gt;
&lt;p&gt;In the watch button we have a classic “button or status” UX dilemma. Buttons tell us what can be done but don’t say what the current status is. Status tells current state but it’s not clear what it would change to.&lt;/p&gt;
&lt;p&gt;In Github case “Watch” has a button label but it doesn’t act as a button: clicking on it won’t make you watch the repo. It’s not a status either: if you see “Watch” it means you are &lt;em&gt;not&lt;/em&gt; watching. Same for the other two states: they are neither buttons nor states.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/75_vanity.png&quot; /&gt;&lt;p&gt;The problem here is that a single button can’t be used to switch between three states. But dropdown can! Dropdowns are a well-established UI component that shows status &lt;em&gt;and&lt;/em&gt; can be used to change it at the same time.&lt;/p&gt;
&lt;p&gt;Funny, but Github is already using a dropdown! We just need to fix it to work as any other dropdown on Earth works: to show current status. Trivial fix, really:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/77_vanity.png&quot; /&gt;&lt;p&gt;Minor, but annoying: that checkmark is really hard to spot. Let’s highlight the whole row:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/78_vanity.png&quot; /&gt;&lt;p&gt;All together so far:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/80_vanity-reorganized.png&quot; /&gt;&lt;p&gt;Uff, we’ve done a lot! If you need a little break, now would be a perfect time for it. Don’t worry, I’ll wait.&lt;/p&gt;
&lt;p&gt;Back? Great! Let’s move on.&lt;/p&gt;
&lt;h2 id=&quot;problem-5-repo-description&quot;&gt;Problem 5: Repo description&lt;/h2&gt;
&lt;p&gt;This is the repository description:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/90_details.png&quot; /&gt;&lt;p&gt;The problem with it is: why is it located under the Code tab? It’s a description of the whole repository, not just its code, right?&lt;/p&gt;
&lt;p&gt;To fix this let’s move it above the tabs, to the area that belongs to the whole repository:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/100_details-moved.png&quot; /&gt;&lt;p&gt;It still needs a couple of touches.&lt;/p&gt;
&lt;p&gt;First, font is neither big nor small (it’s 16px, standing between 18px repository name and 14px tabs). Let’s make it 14px so that there’re only two distinct font sizes. Also I’m sure there’s no need to render “https://” in the URL:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/112_details.png&quot; /&gt;&lt;p&gt;The second change is to move topics right next to the repository name. There’re usually just a few of those, so it seems wasteful to dedicate a whole line to them:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/114_details.png&quot; /&gt;&lt;p&gt;Look at us, winning more vertical space again!&lt;/p&gt;
&lt;h2 id=&quot;problem-6-removing-background-color&quot;&gt;Problem 6: Removing background color&lt;/h2&gt;
&lt;p&gt;Blue topics on blue background became harder to read. This is because they used to be on #FFF and now they’re on Github’s #FAFBFC “very light dirty blue”.&lt;/p&gt;
&lt;p&gt;Let’s change tab’s background to #FFF too:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/115_details.png&quot; /&gt;&lt;p&gt;But why was that background there in the first place? What did it do?&lt;/p&gt;
&lt;p&gt;My guess is Github had to add it because the structure of their menu layers was becoming too complex and they needed visual cues to help you “split” it in order to understand. The black top bar serves the same purpose: to separate. I mean, they were literally spending a good half of 768px screen at navigation alone.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/116_details.png&quot; /&gt;&lt;p&gt;When split into layers, at least you are not immediately scared by it. Without a background, it would be a mess.&lt;/p&gt;
&lt;p&gt;But because we simplified the whole header so much and removed one intermediate layer, we don’t need that color coding anymore. Instead, we can enjoy fresh crisp white:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/119_details.png&quot; /&gt;&lt;p&gt;And look at all that free space! Finally, we can see some content in the top half of the screen too.&lt;/p&gt;
&lt;h2 id=&quot;problem-7-description-editing&quot;&gt;Problem 7: Description editing&lt;/h2&gt;
&lt;p&gt;A small touch. If you own the repository, you get to edit both its description and its topics:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/120_details.png&quot; /&gt;&lt;p&gt;First, the “Edit” button is badly misplaced — too far, easy to miss.&lt;/p&gt;
&lt;p&gt;Second, separate edit button for topics is an artifact of topics system being developed at a different time, maybe by a different team. There’s really no need to have two separate buttons.&lt;/p&gt;
&lt;p&gt;The solution? How many edit buttons do we need? I say none.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/122_details.png&quot; /&gt;&lt;p&gt;“But… Where did edit buttons go?” You might ask.&lt;/p&gt;
&lt;p&gt;You see, the nature of description and topics is that it’s important to get people to fill them when they first create their repo. After that, people rarely change them at all.&lt;/p&gt;
&lt;p&gt;When there is no description or no topics, we will show a button to add one:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/124_details.png&quot; /&gt;&lt;p&gt;And if description/topics are already filled, go to Settings to change them. Problem solved!&lt;/p&gt;
&lt;h2 id=&quot;problem-8-files-description&quot;&gt;Problem 8: Files description&lt;/h2&gt;
&lt;p&gt;The traditional Windows File Explorer, together with macOS Finder, have established a simple pattern for file browsing: files on the left, details on the right.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/132_file_explorer.png&quot; /&gt;&lt;p&gt;Github decided to copy that pattern, but they put a very unexpected thing as details: a message from the last commit when that particular file was changed.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/130_code_browser.png&quot; /&gt;&lt;p&gt;Why? I don’t know. Commits often touch files for completely arbitrary reasons, so the last commit tells you almost nothing. I can’t think of any case when somebody would need that particular information.&lt;/p&gt;
&lt;p&gt;Maybe they wanted Github to be “about git” more than about traditional file browsing, and this was the only thing they could think of? That’s my speculation, anyway.&lt;/p&gt;
&lt;p&gt;The problem with those details is not that such a huge area is filled with something so rarely useful. The problem is that it looks &lt;em&gt;so much&lt;/em&gt; like file description it confuses me every time. “Tweak layout” is not a description of the “Docs” folder. “Need these debug tools too” for “Tools”—why should I care?&lt;/p&gt;
&lt;p&gt;That means we can get rid of the descriptions without really losing anything:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/135_no_description.png&quot; /&gt;&lt;h2 id=&quot;problem-9-repository-overview&quot;&gt;Problem 9: Repository overview&lt;/h2&gt;
&lt;p&gt;When you get to the repository, the first page you see should not necessarily be Code. We better call it Overview—something to get a quick idea of what’s going on.&lt;/p&gt;
&lt;p&gt;Now, the Github repository is more than just a list of files. It’s also about how those files change over time. What new features were added? Which bugs were fixed? Were there any new releases recently? All those are as important as the files themselves.&lt;/p&gt;
&lt;p&gt;That’s why I suggest we add a list of recent commits to the Overview page next to files.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/140_code_commits.png&quot; /&gt;&lt;p&gt;You can now see if a project is actively developed, maintained or abandoned, if an issue you care about was recently fixed, if a new version was recently published etc (notice tags and branches pills in commit list—I miss this feature on Commits tab SO MUCH).&lt;/p&gt;
&lt;p&gt;What about that free space on the right? We can put useful stats there:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/150_lang_stats.png&quot; /&gt;&lt;p&gt;First, I added contributors. Github is all about people and collaboration, that’s why they put so much emphasis on Fork and PR buttons. Well, people are the face of that collaboration. They put their free time and energy to make that code happen. It’s only fair to see some of their faces.&lt;/p&gt;
&lt;p&gt;Activity is a relatively new feature that hasn’t found its place on repository page yet—until now. Helps you see how much momentum the project has.&lt;/p&gt;
&lt;p&gt;Language statistics was unfairly hidden away, now it’s front and foremost. I also added code size in lines of code — an obvious addition that Github still doesn’t have for some reason.&lt;/p&gt;
&lt;p&gt;Altogether, in my opinion, the new Overview tab is more helpful in everyday use.&lt;/p&gt;
&lt;h2 id=&quot;problem-10-contextualizing-buttons&quot;&gt;Problem 10: Contextualizing buttons&lt;/h2&gt;
&lt;p&gt;Both “Create new file”, “Upload files” and “Find files” all relate to files, so it will be reasonable to move them right next to the thing they operate on: Files.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/160_files_buttons.png&quot; /&gt;&lt;h2 id=&quot;problem-11-hidden-clone-link&quot;&gt;Problem 11: Hidden clone link&lt;/h2&gt;
&lt;p&gt;Github always used to have clone URL directly on a page. That was pretty useful—when you needed to grab the code, no additional clicks were required.&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/165_clone.png&quot; /&gt;&lt;p&gt;Unfortunately, during one of the redesigns Github hid the clone URL behind a button. My guess is they did it because there was simply not enough space. But people kept looking for it so they had to paint the button green.&lt;/p&gt;
&lt;p&gt;Well, after moving file buttons we have enough space to restore full-length Clone link:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/170_clone.png&quot; /&gt;&lt;p&gt;I also unified all four ways to get the repo into a single control, because semantically they are pretty much the same: a way to get the code on your machine.&lt;/p&gt;
&lt;h2 id=&quot;last-problem-dated-look&quot;&gt;Last problem: dated look&lt;/h2&gt;
&lt;p&gt;This is how Github &lt;a href=&quot;https://blog.github.com/2013-06-17-repository-next/&quot;&gt;used to look back in 2013&lt;/a&gt;:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/180_github_2013.jpg&quot; /&gt;&lt;p&gt;And this is &lt;a href=&quot;https://blog.github.com/2015-11-16-a-new-look-for-repositories/&quot;&gt;a screenshot from 2015&lt;/a&gt;:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/190_github_2015.png&quot; /&gt;&lt;p&gt;Finally, this is how it looks today:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/10_as-is.png&quot; /&gt;&lt;p&gt;As you can see, the color scheme and main UI elements haven’t changed much since at least 2013. It’s not necessarily bad and mostly proves that the original design was good enough to stand the test of time.&lt;/p&gt;
&lt;p&gt;But maybe it’s time to fresh it up a little? Get rid of gradients, dirty washed-out colors, unnecessary separators, add a little more air. Something like this:&lt;/p&gt;
&lt;img src=&quot;http://tonsky.me/blog/github-redesign/200_new_look.png&quot; /&gt;&lt;p&gt;If you feel disoriented, give it a minute. Once you are used to it, you might notice it’s actually easier on the eyes and a bit lighter.&lt;/p&gt;
&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;
&lt;p&gt;Current Github design next to my proposal (click to open in a new window):&lt;/p&gt;
&lt;a href=&quot;http://tonsky.me/blog/github-redesign/210_compare.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://tonsky.me/blog/github-redesign/210_compare.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;We’ve added ~4 more files to the screen of the same vertical size, 6 last commits, 3 branches, 10 contributors’ faces, project activity AND expanded language stats WITHOUT losing any information.&lt;/p&gt;
&lt;p&gt;If you know someone at Github, send them a link to this article. Maybe someone there will like my ideas and eventually get to implement them—who knows?&lt;/p&gt;

&lt;div class=&quot;about&quot; readability=&quot;8.456043956044&quot;&gt;

&lt;div class=&quot;about_inner&quot; readability=&quot;12.461538461538&quot;&gt;
&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I’m Nikita. Here I write about programming and UI design &lt;a class=&quot;btn-subscribe&quot; href=&quot;http://tonsky.me/blog/how-to-subscribe/&quot; target=&quot;_blank&quot;&gt;Subscribe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also create open-source stuff: Fira Code, AnyBar, DataScript and Rum. If you like what I do and want to get early access to my articles (along with other benefits), you should &lt;a href=&quot;https://patreon.com/tonsky&quot; target=&quot;_blank&quot;&gt;support me on Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Thu, 28 Feb 2019 22:47:07 +0000</pubDate>
<dc:creator>kirushik</dc:creator>
<og:title>Redesigning Github repository page</og:title>
<og:url>http://tonsky.me/blog/github-redesign/</og:url>
<og:type>article</og:type>
<og:description>Better design for Github repository page</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://tonsky.me/blog/github-redesign/</dc:identifier>
</item>
<item>
<title>$35,000 Tesla Model 3 Available Now</title>
<link>https://www.tesla.com/blog/35000-tesla-model-3-available-now</link>
<guid isPermaLink="true" >https://www.tesla.com/blog/35000-tesla-model-3-available-now</guid>
<description>&lt;p&gt;We are incredibly excited to announce that the standard Model 3, with 220 miles of range, a top speed of 130 mph and 0-60 mph acceleration of 5.6 seconds is now available at $35,000! Although lower in cost, it is built to achieve the same perfect &lt;a href=&quot;https://www.tesla.com/blog/model-3-lowest-probability-injury-any-vehicle-ever-tested-nhtsa&quot;&gt;5-star safety rating&lt;/a&gt; as the longer-ranged version, which has the lowest probability of injury of any car ever tested by the U.S. Government.&lt;/p&gt;
&lt;p&gt;In addition, we are introducing the Model 3 Standard Range Plus, which offers 240 miles of range, a top speed of 140 mph, 0-60 mph acceleration of just 5.3 seconds and most premium interior features at $37,000 before incentives. For 6% more money, you get 9% more range, more power, and an upgraded interior.&lt;/p&gt;
&lt;p&gt;To achieve these prices while remaining financially sustainable, Tesla is shifting sales worldwide to online only. You can now buy a Tesla in North America via your phone in about 1 minute, and that capability will soon be extended worldwide. We are also making it much easier to try out and return a Tesla, so that a test drive prior to purchase isn’t needed. You can now return a car within 7 days or 1,000 miles for a full refund. Quite literally, you could buy a Tesla, drive several hundred miles for a weekend road trip with friends and then return it for free. With the highest consumer satisfaction score of any car on the road, we are confident you will want to keep your Tesla.&lt;/p&gt;
&lt;p&gt;Shifting all sales online, combined with other ongoing cost efficiencies, will enable us to lower all vehicle prices by about 6% on average, allowing us to achieve the $35,000 Model 3 price point earlier than we expected. Over the next few months, we will be winding down many of our stores, with a small number of stores in high-traffic locations remaining as galleries, showcases and Tesla information centers. The important thing for customers in the United States to understand is that, with online sales, anyone in any state can quickly and easily buy a Tesla.&lt;/p&gt;
&lt;p&gt;At the same time, we will be increasing our investment in the Tesla service system, with the goal of same-day, if not same-hour service, and with most service done by us coming to you, rather than you coming to us. Moreover, we guarantee service availability anywhere in any country in which we operate.&lt;/p&gt;
&lt;p&gt;We’re also excited to announce that we’re implementing a number of firmware upgrades for both new and existing customers. These upgrades will increase the range of the Long Range Rear-Wheel Drive Model 3 to 325 miles, increase the top speed of Model 3 Performance to 162 mph, and add an average of approximately 5% peak power to all Model 3 vehicles.&lt;/p&gt;
&lt;p&gt;Tesla is committed to making not just the best electric cars, but the best cars, period. And our products are the reason we continue to &lt;a href=&quot;https://www.consumerreports.org/car-reliability-owner-satisfaction/10-most-satisfying-cars-owner-satisfaction/&quot; target=&quot;_blank&quot;&gt;rank #1 in Consumer Reports owner satisfaction survey&lt;/a&gt; and have every single year since Tesla was first eligible to be included in 2013. Both Model 3 Standard and Standard Plus are available starting today at &lt;a href=&quot;https://www.tesla.com/&quot;&gt;Tesla.com&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 22:08:57 +0000</pubDate>
<dc:creator>felipemesquita</dc:creator>
<og:image>https://www.tesla.com/sites/default/files/blog_images/tesla_announcement_social.jpg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.tesla.com/blog/35000-tesla-model-3-available-now</dc:identifier>
</item>
<item>
<title>Show HN: I wrote a book about WebAssembly</title>
<link>https://news.ycombinator.com/item?id=19274941</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=19274941</guid>
<description>&lt;tr class=&quot;athing comtr&quot; id=&quot;19277452&quot; readability=&quot;5.7365269461078&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8682634730539&quot;&gt;&lt;tr readability=&quot;5.7365269461078&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;5.7365269461078&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;10.885892116183&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Congratulations on shipping! You accomplished something that vanishingly few people do. You should be incredibly proud of yourself.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Always Remember: the people on this site complaining about price are not your customers, and that’s ok. There are &lt;em&gt;always&lt;/em&gt; people on this site that complain about price. When I launched my book and it got on here half the comments were about the price instead of the book itself. Ignore them. They’re noise. Focus on selling to your audience.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277477&quot; readability=&quot;1.4444444444444&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277924&quot; readability=&quot;3.1181102362205&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278213&quot; readability=&quot;2.5588235294118&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2794117647059&quot;&gt;&lt;tr readability=&quot;2.5588235294118&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext cdd&quot;&gt;Well here it’s more a self published pdf than a book. It didn’t pass a publisher screening nor got an ISBN so it’s hardly a &quot;real&quot; book.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279098&quot; readability=&quot;6.6482412060302&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.3241206030151&quot;&gt;&lt;tr readability=&quot;6.6482412060302&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;If I remember correctly you can get an ISBN for any self published book without much hassle. I used to do a magazine with a friend and we self published with an edition of 100 for each issue. Getting the ISBN was easy. Congratulations on writing a book, and don't let anyone tell you it's not a real book, just because you don't have a publisher or it didn't get printed yet!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278397&quot; readability=&quot;2.0963855421687&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279243&quot; readability=&quot;4.2432432432432&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1216216216216&quot;&gt;&lt;tr readability=&quot;4.2432432432432&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.8189189189189&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.75&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;FWIW, my second printing of Donald Knuth's &lt;em&gt;Fundamental Algorithms&lt;/em&gt; from 1969 lacks an ISBN.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;So either it is also not a book, or else OP is in good company.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279221&quot; readability=&quot;2.625&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.3125&quot;&gt;&lt;tr readability=&quot;2.625&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.5&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.7770700636943&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;As a Canadian resident I get free ISBN's for the books I self publish. It takes about 2 minutes online to get one assigned.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;In the US you just buy them&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277784&quot; readability=&quot;5.4427244582043&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7213622291022&quot;&gt;&lt;tr readability=&quot;5.4427244582043&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.6284829721362&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.8817567567568&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Nice work. A small note - you might want to redirect http-&amp;gt;https on your site, especially as you are taking payments. You wouldn't want a MITM to redirect your customers to another payment processing page.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Also my browser is reporting your https certificate as invalid so sort that out too.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277830&quot; readability=&quot;5.16&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.58&quot;&gt;&lt;tr readability=&quot;5.16&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks for the tip! Luckily I don’t process payments myself but use Gumroad to do that, so payments are safe, but I’ll get an https certificate for the landing page.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277886&quot; readability=&quot;3.3142857142857&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6571428571429&quot;&gt;&lt;tr readability=&quot;3.3142857142857&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;if someone mitms your landing page, they'd be hijacking the payment links to redirect to their phishing hook rather than your payment service.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277046&quot; readability=&quot;6.3620178041543&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277133&quot; readability=&quot;2.9532710280374&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275737&quot; readability=&quot;3.6965517241379&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.848275862069&quot;&gt;&lt;tr readability=&quot;3.6965517241379&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;The capstone project and little pacman game look pretty interesting. Think you can spare a short portion of the book to show what the writing is like? I find them to be some of the best litmus tests of what I'm about to get myself into on a technical book purchase.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275957&quot; readability=&quot;6.1861575178998&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276110&quot; readability=&quot;0.74285714285714&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276283&quot; readability=&quot;3.3670886075949&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6835443037975&quot;&gt;&lt;tr readability=&quot;3.3670886075949&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;No problem, thanks for the idea! I added the TOC and sample chapter to the landing page too since it seems like a common question.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276349&quot; readability=&quot;7.6124031007752&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.8062015503876&quot;&gt;&lt;tr readability=&quot;7.6124031007752&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.6608527131783&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.868421052632&quot;&gt;&lt;span class=&quot;commtext c73&quot;&gt;Hey, if it's about web why not provide the option of reading it on web itself? Today I saw someone selling 'offline-first' on dead-tree medium and thought to myself: Really? Does he not believe in offline-first capability of web enough that he went with the older more inefficient medium for offline reading?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;Can we as developers not do better?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;Above aside, congrats on publishing your book!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c73&quot;&gt;WebAssembly is super-interesting, I have bookmarked the page and will buy as soon as I get home.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276399&quot; readability=&quot;3.2248062015504&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6124031007752&quot;&gt;&lt;tr readability=&quot;3.2248062015504&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks marvindanig. Sorry I should make it more clear--the book is digital, so no dead trees here! :)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279577&quot; readability=&quot;2.4893617021277&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2446808510638&quot;&gt;&lt;tr readability=&quot;2.4893617021277&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;As someone who spent 2 days fighting with an Emscripten config I can say that good information is worth the money.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279801&quot; readability=&quot;3.2222222222222&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6111111111111&quot;&gt;&lt;tr readability=&quot;3.2222222222222&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Yes, I felt the exact same way about those configs when I was learning WebAssembly (╯°□°）╯︵ ┻━┻&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278597&quot; readability=&quot;2.4882352941176&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2441176470588&quot;&gt;&lt;tr readability=&quot;2.4882352941176&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This seems to be a book about unsing emscripten to get c/c++ to run in the browser. What if I want a book about writing wasm from scratch?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279026&quot; readability=&quot;1.7&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279017&quot; readability=&quot;8.578856152513&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2894280762565&quot;&gt;&lt;tr readability=&quot;8.578856152513&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;8.1022530329289&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;15.855334538879&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Congrats! Any comments on how straightforward you found completing the book? Did you get stuck at any point? What was the most difficult part?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Also, do you have a marketing plan? How are potential buyers going to find this?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Random SEO tips from a quick look: clean up you heading hierarchy (start with H1, nest H2 - H5 appropriately; right now they're pretty random), add ALT text to all images (the ones with source code could get you more search hits for example), add a meta description and also add HTTPS (very important for security as well).&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19280018&quot; readability=&quot;11.099195710456&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.5495978552279&quot;&gt;&lt;tr readability=&quot;11.099195710456&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thank you for the tips! I'll be writing an article in coming weeks about my experience writing this book. This is the second book I self-publish, and unlike the first one, I actually tracked how much time I spent on each category of tasks (writing, editing, marketing, head scratching, etc), so the article will also include that. Stay tuned!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275584&quot; readability=&quot;2.4905660377358&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2452830188679&quot;&gt;&lt;tr readability=&quot;2.4905660377358&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That's a really expensive (and I can afford it). How did you figure out these prices?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276088&quot; readability=&quot;3.6350364963504&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.8175182481752&quot;&gt;&lt;tr readability=&quot;3.6350364963504&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Seems like it's in the same price range as a lot of other similar books and courses. Authority and Marketing for Developers are two that spring to mind. I'm sure if you subscribe to his mailing list there'll be some sort of sale on at some point.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276154&quot; readability=&quot;1.4505494505495&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277309&quot; readability=&quot;1.0545454545455&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275642&quot; readability=&quot;1.4226804123711&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275679&quot; readability=&quot;2.3360655737705&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277403&quot; readability=&quot;3.4535519125683&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7267759562842&quot;&gt;&lt;tr readability=&quot;3.4535519125683&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This very common line of thinking is how books that ought to be 75 pages balloon out to 225 pages, using 3x the words to convey the same amount of content.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279032&quot; readability=&quot;5.4705882352941&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7352941176471&quot;&gt;&lt;tr readability=&quot;5.4705882352941&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.1029411764706&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;7.8581560283688&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Should you not set the price on the value of the content, not the amount content?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;If the book enabled you to e.g. create and sell a WebAssembly project quicker or win a big client project that requires WebAssembly then $29 shouldn't be worth thinking about to most developers.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279309&quot; readability=&quot;1.3636363636364&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279764&quot; readability=&quot;4.4019138755981&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.200956937799&quot;&gt;&lt;tr readability=&quot;4.4019138755981&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I agree. Look for example on book called &quot;Learn WebAssembly&quot; by Mike Rourke which contain similar content on 328 pages and is priced at €16.00, have free preview and code examples&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275868&quot; readability=&quot;3.2280701754386&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6140350877193&quot;&gt;&lt;tr readability=&quot;3.2280701754386&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Unless it is of great quality perhaps. But I do agree, it seems like just a bit too much.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277311&quot; readability=&quot;1.3424657534247&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277485&quot; readability=&quot;1.0645161290323&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279308&quot; readability=&quot;5.6431718061674&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.8215859030837&quot;&gt;&lt;tr readability=&quot;5.6431718061674&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.113436123348&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;11.860465116279&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Congratulations on your book! May I ask why you choose self-publishing road instead of publishing it on publisher? I am not saying one way is better than the other. I am just wondering.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Is it because no interest from the publishers? Or is it because you think the royalty percentage from publishers is too low? Or you don't have any particular reason? It's just feel natural to do self-publishing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Also, do you hire editors?&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279881&quot; readability=&quot;6.5&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.25&quot;&gt;&lt;tr readability=&quot;6.5&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.6428571428571&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.8773841961853&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks! I like to self-publish mostly because I can craft the book in my own way and move faster. I also enjoy being able to touch all aspects of the book, including the design and marketing.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;This is actually my second self-published book (first one was about wrangling data on the command line with bash), so it does feel natural to self-publish at this point!&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19280240&quot; readability=&quot;6.5971223021583&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.2985611510791&quot;&gt;&lt;tr readability=&quot;6.5971223021583&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This looks really neat! I noticed that it talks about how to call command line programs from my own webassembly program. Does it talk about techniques that could be used for package management, where someone publishes webassembly binaries and people consume them in their own webassembly binary? If so, does that work even when the webassembly &quot;packages&quot; are written in different languages?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278857&quot; readability=&quot;5.3656387665198&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.6828193832599&quot;&gt;&lt;tr readability=&quot;5.3656387665198&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Intersting, I've been looking into this recently and this might be the thing I need to finally get stuck into it. Pricing seems reasonable, I'm not sure about other comments saying it's a little high.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279028&quot; readability=&quot;3.5531914893617&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7765957446809&quot;&gt;&lt;tr readability=&quot;3.5531914893617&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.4414893617021&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;8.7352941176471&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Looks cool!&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;If I don't know any C++ (and never plan to) but am learning Rust, do you think there is value here? Or is really focusing on the C++ -&amp;gt; WASM experience?&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279920&quot; readability=&quot;9.2631578947368&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.6315789473684&quot;&gt;&lt;tr readability=&quot;9.2631578947368&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;6.4842105263158&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;12.816901408451&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Thanks! Yes the book focuses on C/C++, but you don't need very much C/C++ knowledge to follow along in the book.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Most of the time, we treat C/C++ libraries as black boxes that we compile to WASM, though in some cases like Pacman, we do have to modify the original code, but you should be able to infer what we're doing from the context and the text.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279512&quot; readability=&quot;8.4517766497462&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;4.2258883248731&quot;&gt;&lt;tr readability=&quot;8.4517766497462&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;7.5126903553299&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;14.798927613941&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Why not place the compiled demos directly on the website?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;This could show the practicality of the approach, e.g. that the demos work in every browser. It also shows (hopefully) something that can be done only in WebAssembly, and not in plain JavaScript, which can provide motivation to actually learn about WebAssembly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Also, I'd like to see a TOC and sample chapter.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279821&quot; readability=&quot;4.2755344418052&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19279113&quot; readability=&quot;2.4736842105263&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2368421052632&quot;&gt;&lt;tr readability=&quot;2.4736842105263&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I'm getting your book - thank you. Also wanted to say I really like the site you have put together. Minimal yet everything there. Perfect.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19280026&quot; readability=&quot;1.1764705882353&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275741&quot; readability=&quot;1.6326530612245&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;0.81632653061224&quot;&gt;&lt;tr readability=&quot;1.6326530612245&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;3.265306122449&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;6.578313253012&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Table of contents and sample chapter?&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Webassembly for genomics sounds cool :)&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275959&quot; readability=&quot;6.2470588235294&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276556&quot; readability=&quot;1.1&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277353&quot; readability=&quot;1.4716981132075&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277420&quot; readability=&quot;3.3450292397661&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.672514619883&quot;&gt;&lt;tr readability=&quot;3.3450292397661&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;80&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;That's so cool, thanks for sharing! Do you know where I can find more info about how it was built/which portion of the app uses WebAssembly?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277458&quot; readability=&quot;11.306306306306&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;5.6531531531532&quot;&gt;&lt;tr readability=&quot;11.306306306306&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;120&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;13.190690690691&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;25.805491990847&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;This provides access to hundreds of public and tens of thousands of restricted access cancer genomes (and often the matching &quot;normal&quot; samples): so you can see and visually verify mutations. Interestingly, too, you can check out germline polymorphisms which might predispose someone to get cancer.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Basically all the work is done in the browser : gzip decompression, custom parsing of sequencing alignment, png generation, etc. Lots of data are pushed to the client at load time like gene location information for genome build &quot;hg38&quot; (the latest). Server only provides reference sequence and sample genomic alignment &quot;slices&quot; for the region of interest. So, all the state is handled in the browser, server only provides trivial &quot;wget&quot; requests.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It is mostly wasm (source is C compiled with emcc). The front page is the requisite html/javascript start page. Pages are created in wasm code and pushed to JS for updating the DOM. Lots of calls to emscripten_run_script(&quot;your javascript here&quot;). DOM manipulation straight from Rust/Go/C would be cool but it is not here yet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Upside is server simplicity and security ... and no downloading and setting up complicated software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;&lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5987889/&quot; rel=&quot;nofollow&quot;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5987889/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Code is done by the government so it's public domain. (Your tax dollars at work !)&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277471&quot; readability=&quot;3.1111111111111&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19276091&quot; readability=&quot;2.3684210526316&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278604&quot; readability=&quot;1.3333333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278620&quot; readability=&quot;7.3399339933993&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6699669966997&quot;&gt;&lt;tr readability=&quot;7.3399339933993&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Looks nice. If you are planning to expand this, I would be interested in a comparison of the different toolchains (e.g. Emscripten vs. Go vs. Rust). Currently, I would choose the toolkit of my favorite language, but I have no idea what kind of consequences such a choice has.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19275689&quot; readability=&quot;3.3636363636364&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6818181818182&quot;&gt;&lt;tr readability=&quot;3.3636363636364&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;The book looks good (I like the demos of the examles), but what motivated you to choose that pricing scheme?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277260&quot; readability=&quot;2.3243243243243&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278669&quot; readability=&quot;2.5102040816327&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2551020408163&quot;&gt;&lt;tr readability=&quot;2.5102040816327&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;I see the sample chapter has an autoconf porting example. Is porting a CMake based project covered anywhere in the book?&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19280339&quot; readability=&quot;3.2447552447552&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.6223776223776&quot;&gt;&lt;tr readability=&quot;3.2447552447552&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Looks interesting, unfortunately I don't have the time now but I will for sure maybe buy this book in the future!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278469&quot; readability=&quot;3.0291262135922&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277313&quot; readability=&quot;2.4850746268657&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.2425373134328&quot;&gt;&lt;tr readability=&quot;2.4850746268657&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Just picked up the “complete edition”. Really looking forward to going through it all. This looks great!&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277354&quot; readability=&quot;2.0232558139535&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277349&quot; readability=&quot;0.6875&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277407&quot; readability=&quot;1.3150684931507&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277432&quot; readability=&quot;1.3333333333333&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277446&quot; readability=&quot;3.8709677419355&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277459&quot; readability=&quot;1.1481481481481&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277323&quot; readability=&quot;2.1944444444444&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277382&quot; readability=&quot;5.4125874125874&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.7062937062937&quot;&gt;&lt;tr readability=&quot;5.4125874125874&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Yes! Chapter 8 talks about graphics; the Pacman example shows how to port a C++/SDL2 Pacman clone to WebAssembly and OpenGL (with Emscripten). That said, the focus of that chapter is porting games like that, but it doesn't go into writing OpenGL directly.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278630&quot; readability=&quot;1.2666666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19280063&quot; readability=&quot;3.5914893617021&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;1.7957446808511&quot;&gt;&lt;tr readability=&quot;3.5914893617021&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Region specific pricing would boost adoption a lot. you can buy full courses on Coursera/other MOOCs for 30bucks in some countries and your pdf+cheat sheet costs more = guaranteed your book shows up on libgen&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19278503&quot; readability=&quot;7.3414634146341&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6707317073171&quot;&gt;&lt;tr readability=&quot;7.3414634146341&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;How can web assembly deal with per-env variables? Need to recompile for every environment? That means recompile at startup, since I deploy the same artifact to different envs and allow the env to define its vars. For this reason, as a sys admin, I hate web assembly (and most other asset pipelines)&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277252&quot; readability=&quot;1.3066666666667&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277431&quot; readability=&quot;1.7704918032787&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr coll&quot; id=&quot;19277257&quot; readability=&quot;1.4390243902439&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277332&quot; readability=&quot;2.2352941176471&quot;&gt;&lt;td&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277330&quot; readability=&quot;4.3783783783784&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;2.1891891891892&quot;&gt;&lt;tr readability=&quot;4.3783783783784&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;0&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;4.8162162162162&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;9.6969696969697&quot;&gt;&lt;span class=&quot;commtext c9c&quot;&gt;Honest feedback: Pricing is high.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c9c&quot;&gt;Also, to me, this doesn't look like a good way to use Show HN. A link to Amazon wouldn't be different than what you just did.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277457&quot; readability=&quot;13.614800759013&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;6.8074003795066&quot;&gt;&lt;tr readability=&quot;13.614800759013&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot; readability=&quot;14.587286527514&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot; readability=&quot;28.858949416342&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;While shameless self-promotion would be an issue, I think this is exactly in line with what HN (and even Show HN) is for. Although that's really up to Dang et al.&lt;/span&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;It's a topic that is highly relevant to this community and for which there is high demand, given the number of Web Assembly tutorials that make it to the front page. Obviously, it's commercial, but so are many of the projects in Show HN. The ones that aren't are still self-promotional in some manner.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;I often find that looking at book sites is an interesting way to learn what technologies are getting popular and I'm always curious to see the projects used to teach these things. Posting a book's website can start a conversation, whereas an Amazon link is more likely to start purchases and little more.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Finally, writing a technical book is an impressive accomplishment. Specifically, it's an impressive technical accomplishment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;commtext c00&quot;&gt;Regarding price, $29 seems quite reasonable for a technical book. Many cost $35-45, and that's without getting into textbooks.&lt;/span&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr class=&quot;athing comtr&quot; id=&quot;19277615&quot; readability=&quot;7.2352941176471&quot;&gt;&lt;td&gt;
&lt;table border=&quot;0&quot; readability=&quot;3.6176470588235&quot;&gt;&lt;tr readability=&quot;7.2352941176471&quot;&gt;&lt;td class=&quot;ind&quot;&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;1&quot; width=&quot;40&quot;/&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;default&quot;&gt;

&lt;br/&gt;&lt;div class=&quot;comment&quot;&gt;&lt;span class=&quot;commtext c00&quot;&gt;Show HN is explicitly self-promotional... sure, it's &lt;em&gt;usually&lt;/em&gt; used for software projects of some sort, but I don't see any reason that it shouldn't be used for a book you wrote, especially when it's very topical, relative to the community here.&lt;/span&gt;

&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Thu, 28 Feb 2019 20:38:00 +0000</pubDate>
<dc:creator>raboukhalil</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=19274941</dc:identifier>
</item>
<item>
<title>YouTube bans comments on all videos of children</title>
<link>https://www.bbc.co.uk/news/technology-47408969</link>
<guid isPermaLink="true" >https://www.bbc.co.uk/news/technology-47408969</guid>
<description>&lt;figure class=&quot;media-landscape no-caption full-width lead&quot;&gt;&lt;span class=&quot;image-and-copyright-container&quot;&gt;
                
                &lt;img class=&quot;js-image-replace&quot; alt=&quot;YouTube logo&quot; src=&quot;https://ichef.bbci.co.uk/news/320/cpsprodpb/E2D0/production/_105846085_ytkids.png&quot; width=&quot;976&quot; height=&quot;549&quot;/&gt;&lt;span class=&quot;off-screen&quot;&gt;Image copyright&lt;/span&gt;
                 &lt;span class=&quot;story-image-copyright&quot;&gt;Getty Images&lt;/span&gt;
                
            &lt;/span&gt;
            
        &lt;/figure&gt;&lt;p class=&quot;story-body__introduction&quot;&gt;YouTube says it will switch off comments on almost all videos featuring under-18s, in an attempt to &quot;better protect children and families&quot;.&lt;/p&gt;&lt;p&gt;Several brands stopped advertising on YouTube after discovering that paedophiles were leaving predatory comments on videos of children.&lt;/p&gt;&lt;p&gt;YouTube had originally disabled comments on videos that were attracting predatory and obscene comments.&lt;/p&gt;&lt;p&gt;But it will now disable comments on almost all videos of minors by default.&lt;/p&gt;&lt;p&gt;It said the change would take effect over several months.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What was happening?&lt;/h2&gt;&lt;p&gt;The &lt;a href=&quot;https://www.bbc.co.uk/news/technology-42110068&quot; class=&quot;story-body__link&quot;&gt;BBC first reported that paedophiles were leaving explicit comments&lt;/a&gt; on YouTube videos back in 2017.&lt;/p&gt;&lt;p&gt;As well as leaving obscene or sexual comments, they were also using the comments section to signal content of interest to other paedophiles.&lt;/p&gt;&lt;p&gt;At the time, YouTube said it was &quot;working urgently&quot; to clean up the site.&lt;/p&gt;&lt;p&gt;However, in February this year advertisers including AT&amp;amp;T, Nestle and Hasbro suspended their ads after more predatory activity was found.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What has YouTube announced?&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://youtube-creators.googleblog.com/2019/02/more-updates-on-our-actions-related-to.html&quot; class=&quot;story-body__link-external&quot;&gt;In a blog post&lt;/a&gt;, YouTube said its new policy meant videos of very young children would automatically have the comments section disabled.&lt;/p&gt;&lt;p&gt;The move is likely to include videos of toddlers uploaded by parents, as well as short films featuring children by established YouTube stars.&lt;/p&gt;&lt;p&gt;Videos of older children and teenagers will typically not have the comments disabled, unless a specific video is likely to attract predatory attention. That could include, for example, a video of a teenager doing gymnastics.&lt;/p&gt;&lt;p&gt;YouTube told the BBC it would use algorithms to detect which videos contained children.&lt;/p&gt;&lt;p&gt;Millions of hours of footage are uploaded to YouTube every day.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;When will comments be permitted?&lt;/h2&gt;&lt;p&gt;A small number of YouTube content creators will be allowed to enable comments on videos featuring children.&lt;/p&gt;&lt;p&gt;These channels will be trusted partners such as family video-bloggers or known YouTube stars. &lt;/p&gt;&lt;p&gt;However, they will be required to actively moderate their comments and demonstrate that their videos carry a low risk of attracting predatory comments.&lt;/p&gt;&lt;ul class=&quot;story-body__unordered-list&quot;&gt;&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/business-47325893&quot; class=&quot;story-body__link&quot;&gt;AT&amp;amp;T and Hasbro pull YouTube ads over abuse claims&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;story-body__list-item&quot;&gt;&lt;a href=&quot;https://www.bbc.co.uk/news/technology-42110068&quot; class=&quot;story-body__link&quot;&gt;Predatory comments prompt YouTube ad suspension&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;YouTube said it had developed a system that was better at detecting predatory comments and removing them.&lt;/p&gt;&lt;p&gt;Previously, it had said it would stop video-makers earning ad revenue if paedophiles left explicit comments on their videos, but this will no longer be necessary.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;What further action is being taken?&lt;/h2&gt;&lt;p&gt;In addition to updating its comments policy, YouTube said it had terminated several channels that were &quot;endangering&quot; children.&lt;/p&gt;&lt;p&gt;The ban included several channels that were adding shocking content in the middle of children's cartoons.&lt;/p&gt;&lt;p&gt;It named FilthyFrankClips as one of the banned channels. It had released a video instructing children how to cut themselves.&lt;/p&gt;&lt;p&gt;&quot;Nothing is more important to us than ensuring the safety of young people on the platform,&quot; said YouTube chief executive &lt;a href=&quot;https://twitter.com/SusanWojcicki/status/1101182716593135621&quot; class=&quot;story-body__link-external&quot;&gt;Susan Wojcicki on Twitter&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;YouTube's app for children - YouTube Kids - has been criticised for using algorithms to curate content. Inappropriate videos have repeatedly been discovered on the service.&lt;/p&gt;&lt;h2 class=&quot;story-body__crosshead&quot;&gt;How have creators responded?&lt;/h2&gt;&lt;p&gt;The comments left by fans on YouTube videos help the platform's algorithms decide which videos to serve up and recommend to viewers.&lt;/p&gt;&lt;p&gt;Creators have expressed concern that being forced to disable comments on their videos will affect the growth of their channels.&lt;/p&gt;&lt;p&gt;Despite the wide-ranging new policy, comments will remain part of the recommendation algorithm.&lt;/p&gt;&lt;p&gt;&quot;We understand that comments are an important way creators build and connect with their audiences,&quot; YouTube said in a statement. &quot;We also know that this is the right thing to do to protect the YouTube community.&quot;&lt;/p&gt;&lt;p&gt;Andy Burrows from the child protection charity NSPCC said the announcement was an &quot;important step&quot;.&lt;/p&gt;&lt;p&gt;&quot;We know that offenders are twisting YouTube videos for their own sexual gratification, using them to contact other predators and using the comments section as shop window to child abuse image sites,&quot; he said.&lt;/p&gt;&lt;p&gt;However, he called for an &quot;independent statutory regulator&quot; that could &quot;force social networks to follow the rules or face tough consequences&quot;.&lt;/p&gt;
            </description>
<pubDate>Thu, 28 Feb 2019 19:45:20 +0000</pubDate>
<dc:creator>_wmd</dc:creator>
<og:title>YouTube bans comments on all videos of kids</og:title>
<og:type>article</og:type>
<og:description>The streaming platform is disabling comments on videos of children after paedophiles left predatory comments.</og:description>
<og:url>https://www.bbc.com/news/technology-47408969</og:url>
<og:image>https://ichef.bbci.co.uk/news/1024/branded_news/E2D0/production/_105846085_ytkids.png</og:image>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbc.co.uk/news/technology-47408969</dc:identifier>
</item>
<item>
<title>Announcing Rust 1.33.0</title>
<link>https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</link>
<guid isPermaLink="true" >https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</guid>
<description>&lt;p&gt;Feb. 28, 2019 · The Rust Release Team&lt;/p&gt;&lt;div readability=&quot;84.361211094643&quot;&gt;
&lt;p&gt;The Rust team is happy to announce a new version of Rust, 1.33.0. Rust is a programming language that is empowering everyone to build reliable and efficient software.&lt;/p&gt;
&lt;p&gt;If you have a previous version of Rust installed via rustup, getting Rust 1.33.0 is as easy as:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-console&quot;&gt;$ rustup update stable
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;If you don't have it already, you can &lt;a href=&quot;https://www.rust-lang.org/install.html&quot;&gt;get &lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; from the appropriate page on our website, and check out the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes for 1.33.0&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;h2&gt;What's in 1.33.0 stable&lt;/h2&gt;
&lt;p&gt;The two largest features in this release are significant improvements to &lt;code&gt;const fn&lt;/code&gt;s, and the stabilization of a new concept: &quot;pinning.&quot;&lt;/p&gt;
&lt;h3&gt;&lt;code&gt;const fn&lt;/code&gt; improvements&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;const fn&lt;/code&gt;, you can &lt;a href=&quot;https://github.com/rust-lang/rust/pull/57175/&quot;&gt;now do way more things!&lt;/a&gt; Specifically:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;irrefutable destructuring patterns (e.g. &lt;code&gt;const fn foo((x, y): (u8, u8)) { ... }&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;let&lt;/code&gt; bindings (e.g. &lt;code&gt;let x = 1;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;mutable &lt;code&gt;let&lt;/code&gt; bindings (e.g. &lt;code&gt;let mut x = 1;&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;assignment (e.g. &lt;code&gt;x = y&lt;/code&gt;) and assignment operator (e.g. &lt;code&gt;x += y&lt;/code&gt;) expressions, even where the assignment target is a projection (e.g. a struct field or index operation like &lt;code&gt;x[3] = 42&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;expression statements (e.g. &lt;code&gt;3;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;You're also &lt;a href=&quot;https://github.com/rust-lang/rust/pull/57067/&quot;&gt;able to call &lt;code&gt;const unsafe fn&lt;/code&gt;s inside a &lt;code&gt;const fn&lt;/code&gt;&lt;/a&gt;, like this:&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;const unsafe fn foo() -&amp;gt; i32 { 5 }
const fn bar() -&amp;gt; i32 {
    unsafe { foo() }
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;With these additions, many more functions in the standard library are able to be marked as &lt;code&gt;const&lt;/code&gt;. We'll enumerate those in the library section below.&lt;/p&gt;
&lt;h3&gt;Pinning&lt;/h3&gt;
&lt;p&gt;This release introduces a new concept for Rust programs, implemented as two types: the &lt;a href=&quot;https://doc.rust-lang.org/std/pin/struct.Pin.html&quot;&gt;&lt;code&gt;std::pin::Pin&amp;lt;P&amp;gt;&lt;/code&gt; type&lt;/a&gt;, and the &lt;a href=&quot;https://doc.rust-lang.org/std/marker/trait.Unpin.html&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt; marker trait&lt;/a&gt;. The core idea is elaborated on in &lt;a href=&quot;https://doc.rust-lang.org/std/pin/index.html&quot;&gt;the docs for &lt;code&gt;std::pin&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote readability=&quot;17&quot;&gt;
&lt;p&gt;It is sometimes useful to have objects that are guaranteed to not move, in the sense that their placement in memory does not change, and can thus be relied upon. A prime example of such a scenario would be building self-referential structs, since moving an object with pointers to itself will invalidate them, which could cause undefined behavior.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; ensures that the pointee of any pointer type &lt;code&gt;P&lt;/code&gt; has a stable location in memory, meaning it cannot be moved elsewhere and its memory cannot be deallocated until it gets dropped. We say that the pointee is &quot;pinned&quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This feature will largely be used by library authors, and so we won't talk a lot more about the details here. Consult the docs if you're interested in digging into the details. However, the stabilization of this API is important to Rust users generally because it is a significant step forward towards a highly anticipated Rust feature: &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;. We're not quite there yet, but this stabilization brings us one step closer. You can track all of the necessary features at &lt;a href=&quot;https://areweasyncyet.rs/&quot;&gt;areweasyncyet.rs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Import as &lt;code&gt;_&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/56303/&quot;&gt;You can now import an item as &lt;code&gt;_&lt;/code&gt;&lt;/a&gt;. This allows you to import a trait's impls, and not have the name in the namespace. e.g.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rust&quot;&gt;use std::io::Read as _;

// Allowed as there is only one `Read` in the module.
pub trait Read {}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Library stabilizations&lt;/h3&gt;
&lt;p&gt;Here's all of the stuff that's been made &lt;code&gt;const&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57566&quot;&gt;The methods &lt;code&gt;overflowing_{add, sub, mul, shl, shr}&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57105&quot;&gt;The methods &lt;code&gt;rotate_left&lt;/code&gt;, &lt;code&gt;rotate_right&lt;/code&gt;, and &lt;code&gt;wrapping_{add, sub, mul, shl, shr}&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57105&quot;&gt;The methods &lt;code&gt;is_positive&lt;/code&gt; and &lt;code&gt;is_negative&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; functions for all signed numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57167&quot;&gt;The &lt;code&gt;get&lt;/code&gt; method for all &lt;code&gt;NonZero&lt;/code&gt; types is now &lt;code&gt;const&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57234&quot;&gt;The methods &lt;code&gt;count_ones&lt;/code&gt;, &lt;code&gt;count_zeros&lt;/code&gt;, &lt;code&gt;leading_zeros&lt;/code&gt;, &lt;code&gt;trailing_zeros&lt;/code&gt;, &lt;code&gt;swap_bytes&lt;/code&gt;, &lt;code&gt;from_be&lt;/code&gt;, &lt;code&gt;from_le&lt;/code&gt;, &lt;code&gt;to_be&lt;/code&gt;, &lt;code&gt;to_le&lt;/code&gt; are now &lt;code&gt;const&lt;/code&gt; for all numeric types.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/57234&quot;&gt;&lt;code&gt;Ipv4Addr::new&lt;/code&gt; is now a &lt;code&gt;const&lt;/code&gt; function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Additionally, these APIs have become stable:&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Cargo features&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/cargo/pull/6484/&quot;&gt;Cargo should now rebuild a crate if a file was modified during the initial build.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/rust-lang/rust/blob/stable/RELEASES.md#version-1330-2019-02-28&quot;&gt;detailed release notes&lt;/a&gt; for more.&lt;/p&gt;
&lt;h3&gt;Crates.io&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://users.rust-lang.org/t/a-verified-email-address-will-be-required-to-publish-to-crates-io-starting-on-2019-02-28/22425&quot;&gt;As previously announced&lt;/a&gt;, coinciding with this release, crates.io will require that you have a verified email address to publish. Starting at 2019-03-01 00:00 UTC, if you don't have a verified email address and run &lt;code&gt;cargo publish&lt;/code&gt;, you'll get an error.&lt;/p&gt;
&lt;p&gt;This ensures we can comply with DMCA procedures. If you haven't heeded the warnings cargo printed during the last release cycle, head on over to &lt;a href=&quot;https://crates.io/me&quot;&gt;crates.io/me&lt;/a&gt; to set and verify your email address. This email address will never be displayed publicly and will only be used for crates.io operations.&lt;/p&gt;
&lt;h2&gt;Contributors to 1.33.0&lt;/h2&gt;
&lt;p&gt;Many people came together to create Rust 1.33.0. We couldn't have done it without all of you. &lt;a href=&quot;https://thanks.rust-lang.org/rust/1.33.0&quot;&gt;Thanks!&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Thu, 28 Feb 2019 19:11:34 +0000</pubDate>
<dc:creator>steveklabnik</dc:creator>
<og:title>Announcing Rust 1.33.0 | Rust Blog</og:title>
<og:description>Empowering everyone to build reliable and efficient software.</og:description>
<og:image>http://new-rust-www.herokuapp.com/static/images/rust-social-wide.jpg</og:image>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.rust-lang.org/2019/02/28/Rust-1.33.0.html</dc:identifier>
</item>
<item>
<title>UC terminates subscriptions with Elsevier in push for open access</title>
<link>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</link>
<guid isPermaLink="true" >https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</guid>
<description>&lt;p&gt;As a leader in the global movement toward open access to publicly funded research, the University of California is taking a firm stand by deciding not to renew its subscriptions with Elsevier. Despite months of contract negotiations, Elsevier was unwilling to meet UC’s key goal: securing universal open access to UC research while containing the rapidly escalating costs associated with for-profit journals.&lt;/p&gt;
&lt;p&gt;In negotiating with Elsevier, UC aimed to accelerate the pace of scientific discovery by ensuring that research produced by UC’s 10 campuses — which accounts for nearly 10 percent of all U.S. publishing output — would be immediately available to the world, without cost to the reader. Under Elsevier’s proposed terms, the publisher would have charged UC authors large publishing fees on top of the university’s multi-million dollar subscription, resulting in much greater cost to the university and much higher profits for Elsevier.&lt;/p&gt;
&lt;p&gt;“Knowledge should not be accessible only to those who can pay,” said Robert May, chair of UC’s faculty Academic Senate. “The quest for full open access is essential if we are to truly uphold the mission of this university.” The Academic Senate issued a &lt;a href=&quot;https://senate.universityofcalifornia.edu/_files/reports/academic-council-statement-elsevier-feb28.pdf&quot;&gt;statement&lt;/a&gt; today endorsing UC’s position.&lt;/p&gt;
&lt;p&gt;Open access publishing, which makes research freely available to anyone, anywhere in the world, fulfills UC’s mission by transmitting knowledge more broadly and facilitating new discoveries that build on the university’s research and scholarly work. This follows UC’s faculty-driven &lt;a href=&quot;https://senate.universityofcalifornia.edu/_files/committees/ucolasc/scholcommprinciples-20180425.pdf&quot;&gt;principles&lt;/a&gt; on scholarly communication.&lt;/p&gt;
&lt;p&gt;“I fully support our faculty, staff and students in breaking down paywalls that hinder the sharing of groundbreaking research,” said UC President Janet Napolitano. “This issue does not just impact UC, but also countless scholars, researchers and scientists across the globe — and we stand with them in their push for full, unfettered access.”&lt;/p&gt;
&lt;p&gt;Elsevier is the largest scholarly publisher in the world, disseminating about 18 percent of journal articles produced by UC faculty. The transformative model that UC faculty and libraries are championing would make it easier and more affordable for UC authors to publish in an open access environment.&lt;/p&gt;
&lt;p&gt;“Make no mistake: The prices of scientific journals now are so high that not a single university in the U.S. — not the University of California, not Harvard, no institution — can afford to subscribe to them all,” said Jeffrey MacKie-Mason, university librarian and economics professor at UC Berkeley, and co-chair of UC’s negotiation team. “Publishing our scholarship behind a paywall deprives people of the access to and benefits of publicly funded research. That is terrible for society.”&lt;/p&gt;
&lt;p&gt;Elsevier was unwilling to meet UC’s reasonable contract terms, which would integrate subscription charges and open access publishing fees, making open access the default for any article by a UC scholar and stabilizing journal costs for the university.&lt;/p&gt;
&lt;p&gt;“The university’s, and the world’s, move toward open access has been a long time in the making. Many institutions and countries agree that the current system is both financially unsustainable and ill-suited to the needs of today’s global research enterprise,” said Ivy Anderson, associate executive director of UC’s California Digital Library and co-chair of UC’s negotiation team. “Open access will spur faster and better research — and greater global equity of access to new knowledge.”&lt;/p&gt;
&lt;p&gt;To learn more about UC’s efforts to establish open access, visit the UC Office of Scholarly Communication’s &lt;a href=&quot;https://osc.universityofcalifornia.edu/open-access-at-uc/publisher-negotiations/uc-and-elsevier/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;
</description>
<pubDate>Thu, 28 Feb 2019 18:51:11 +0000</pubDate>
<dc:creator>tingletech</dc:creator>
<og:type>article</og:type>
<og:title>UC terminates subscriptions with world’s largest scientific publisher in push for open access to publicly funded research</og:title>
<og:url>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</og:url>
<og:description>As a leader in the global movement toward open access to publicly funded research, the University of California is taking a firm stand by deciding not to renew its subscriptions with Elsevier. Despite months of contract negotiations, Elsevier was unwilling to meet UC’s key goal: securing universal open access to UC research while containing the rapidly escalating costs associated with for-profit journals.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.universityofcalifornia.edu/press-room/uc-terminates-subscriptions-worlds-largest-scientific-publisher-push-open-access-publicly</dc:identifier>
</item>
</channel>
</rss>