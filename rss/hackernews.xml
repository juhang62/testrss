<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>I bought netflix.soy</title>
<link>https://tinyprojects.dev/posts/i_bought_netflix_dot_soy</link>
<guid isPermaLink="true" >https://tinyprojects.dev/posts/i_bought_netflix_dot_soy</guid>
<description>&lt;head&gt;&lt;title&gt;I bought netflix.soy | Tiny Projects&lt;/title&gt;&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;meta name=&quot;description&quot; content=&quot;An exploration into top level domains. How I ended up buying netflix.soy and domains from facebook, microsoft and google.&quot;/&gt;&lt;meta name=&quot;keywords&quot; content=&quot;programming, projects, blog, domain names, top level domains, netflix.soy, tiny projects&quot;/&gt;&lt;meta name=&quot;author&quot; content=&quot;Benjamin Stokes&quot;/&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;/&gt;&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;../img/favicon/apple-touch-icon.png&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;../img/favicon/favicon-32x32.png&quot;/&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;../img/favicon/favicon-16x16.png&quot;/&gt;&lt;link rel=&quot;manifest&quot; href=&quot;../img/favicon/site.webmanifest&quot;/&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;../styles/global.css&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;128.98810126582&quot;&gt;
&lt;nav&gt;&lt;a href=&quot;https://tinyprojects.dev/&quot;&gt;Home&lt;/a&gt; &lt;a href=&quot;https://tinyprojects.dev/projects&quot;&gt;Projects&lt;/a&gt; &lt;a href=&quot;https://tinyprojects.dev/guides&quot;&gt;Guides&lt;/a&gt; &lt;a href=&quot;https://tinyprojects.dev/blog&quot;&gt;Blog&lt;/a&gt;&lt;/nav&gt;
&lt;h3&gt;(plus &lt;a href=&quot;https://facebook.%E7%BD%91%E7%AB%99&quot; target=&quot;_blank&quot;&gt;facebook.网站&lt;/a&gt;, &lt;a href=&quot;https://microsoft.%E3%81%BF%E3%82%93%E3%81%AA&quot; target=&quot;_blank&quot;&gt;microsoft.みんな&lt;/a&gt; and &lt;a href=&quot;https://google.xn--9dbq2a/&quot; target=&quot;_blank&quot;&gt;google.קום&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;May 25th 2020&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The other day I had a mental lapse whilst looking for a new domain name, and for some reason typed 'google' into the domain search box. This is what I saw:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.gyazo.com/34ea1af980fdb95bc05c88cc08566df6.png&quot; alt=&quot;google domains unavailable&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Unsurprisingly, all 200+ domain name endings had been taken. All snapped up by Google presumably.&lt;/p&gt;
&lt;p&gt;My curiosity had piqued though, so I tried some other big technology companies: Facebook, Apple, Microsoft and Amazon. Still nothing, absolutely no top level domains left.&lt;/p&gt;
&lt;p&gt;I was about to get on with my day when I decided to try one last company: Netflix.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.gyazo.com/8f11f41a99d6738fed4b888849fd1e18.png&quot; alt=&quot;netflix.soy domain on google domains&quot;/&gt;&lt;/p&gt;
&lt;p&gt;There was one left: &lt;a href=&quot;https://netflix.soy&quot; target=&quot;_blank&quot;&gt;netflix.soy&lt;/a&gt; (if you didn't click the link, soy means &quot;I am&quot; in Spanish). I was sort of in disbelief when I was able to just go ahead and buy it.&lt;/p&gt;
&lt;p&gt;I was still really curious though. The site I was on had around 200 domain endings for sale, GoDaddy, for example, has nearly 500, but in total there are currently over 1500 top level domains in the world, from .horse to .wtf.&lt;/p&gt;
&lt;p&gt;I had one question: &lt;strong&gt;What if there were still actually some Google domains left out there?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Checking all 1500 endings across every domain registrar would take far too long, so I wrote a tiny script to perform WHOIS lookups on each top level domain and tell me which were available. This was the result for Google:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.gyazo.com/357c8123697fbd2a4878abf91e2e85e0.png&quot; alt=&quot;available domains&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Great! So there were actually some available.&lt;/p&gt;
&lt;p&gt;I started going down the list of English domain endings: .autos, .au, .bm; quickly discovering that each one had a restriction meaning the average person couldn't register it. For example, I actually paid for google.gi (gi for Gibraltar), only to get this email a few hours later:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.gyazo.com/b520d89b885034adde58b1fa91cbf436.png&quot; alt=&quot;google gi rejection&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Although I had once been on a nice holiday to the rock, I was not Gibraltarian. Google themselves own google.com.gi and apparently aren't even able to register google.gi on the basis that they are also not Gibraltarians.&lt;/p&gt;
&lt;p&gt;Exhausting all the English domain endings, and realising I'd wasted far too much time doing this, I decided to call it a day. I was just a soy boy with my &lt;a href=&quot;https://netflix.soy&quot; target=&quot;_blank&quot;&gt;netflix.soy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A couple of days later whilst doing actual useful work, I realised I'd never checked out what those weird .xn--zfr164b domains were. What the heck were they? I thought they must have been erroneous domains or something.&lt;/p&gt;
&lt;p&gt;Meticulously going through each one, I realised they actually represented characters from other languages: Chinese, Japanese, Russian, Greek, you name it.&lt;/p&gt;
&lt;p&gt;Again, they all had strange restrictions, were privately owned, or reserved for Google. No luck.&lt;/p&gt;
&lt;p&gt;Until... &lt;a href=&quot;https://google.xn--9dbq2a/&quot; target=&quot;_blank&quot;&gt;google.קום&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;google.com in Hebrew! And I could actually buy it. It bloody worked.&lt;/p&gt;
&lt;p&gt;I felt like Ash Ketchum and wanted to catch'em all. Next I picked up &lt;a href=&quot;https://facebook.%E7%BD%91%E7%AB%99&quot; target=&quot;_blank&quot;&gt;facebook.网站&lt;/a&gt; (facebook.website in Chinese) and &lt;a href=&quot;https://microsoft.%E3%81%BF%E3%82%93%E3%81%AA&quot; target=&quot;_blank&quot;&gt;microsoft.みんな&lt;/a&gt; (microsoft.everyone in Japanese). They were all dirt cheap too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.gyazo.com/e07e13f23144aa8dca29c96e6b8e6769.png&quot; alt=&quot;domain name lineup&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So, why did I waste time and money doing this? Am I going to sit on these domains for years until Google, Microsoft, Netflix and Facebook pay large sums of cash to get their domains back, then retire as a domain name investing billionaire?&lt;/p&gt;
&lt;p&gt;No. They're welcome to have them back anytime they want. They could probably do it pretty forcibly if I refused to budge too (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_v._MikeRoweSoft&quot; target=&quot;_blank&quot;&gt;Microsoft vs. MikeRoweSoft&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Truthully, I think its pretty bad that I was able to do this. If I was evil, I could knock up a fake looking Google login page and be phishing for innocent people's usernames &amp;amp; passwords within hours. People may generally trust a .com domain, but with more and more top level domains being released, .coms are slowly becoming less relevant.&lt;/p&gt;
&lt;p&gt;Did you know it costs a minimum of $185,000 to create your own domain name ending? For that kind of money, I think ICANN, the registries and registrar sites have a massive responsibility to ensure that this never happens.&lt;/p&gt;
&lt;p&gt;Oh, and my application for &lt;a&gt;apple.beer&lt;/a&gt; is still pending.&lt;/p&gt;
&lt;footer readability=&quot;2&quot;&gt;&lt;p&gt;I make &lt;a href=&quot;https://tinyprojects.dev&quot;&gt;tiny projects&lt;/a&gt; each week.&lt;/p&gt;
&lt;p&gt;Follow me:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get in touch via email: &lt;a href=&quot;mailto:tinyprojectsdev@gmail.com&quot;&gt;tinyprojectsdev@gmail.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/footer&gt;&lt;/body&gt;</description>
<pubDate>Mon, 25 May 2020 20:28:41 +0000</pubDate>
<dc:creator>stokesyio</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://tinyprojects.dev/posts/i_bought_netflix_dot_soy</dc:identifier>
</item>
<item>
<title>I wrote Task Manager and I just remembered something</title>
<link>https://old.reddit.com/r/techsupport/comments/gqb915/i_wrote_task_manager_and_i_just_remembered/</link>
<guid isPermaLink="true" >https://old.reddit.com/r/techsupport/comments/gqb915/i_wrote_task_manager_and_i_just_remembered/</guid>
<description>&lt;p&gt;Figured I should write this stuff down before I forget it all, and where better for TaskManager than &lt;a href=&quot;https://old.reddit.com/r/techsupport&quot;&gt;r/techsupport&lt;/a&gt;! If there's any appetite for this, I'll expand on it! I don't blog, so here goes...&lt;/p&gt;
&lt;p&gt;Some Task Manager lore: I'm the Microsoft (Redmond, '93) developer that wrote TaskMgr at home in my den in about 1994 and then the NT silverback devs let me check it into the main tree even though I was a greenhorn at the time. So that meant I got to bring it into work and polish it up and make it an official part of Windows, where it remains to this day. So I got to define my own day job, actually, which was nice! I don't know if it's still like that, but great culture and people.&lt;/p&gt;
&lt;p&gt;This is all based on XP, as I left long ago, but it's still the same core app underneath. In no particular order:&lt;/p&gt;
&lt;p&gt;- If Task Manager ever hangs or crashes, start another by pressing ctrl-shift-esc. Winlogon will look for an existing instance and try to revive it for up to 10 seconds. If the old Taskmgr doesn't start making sense by responding with a secret code within that time, another one will be launched. That way, you're never without a Taskmgr as long as there are some resources available.&lt;/p&gt;
&lt;p&gt;- Task Manager will load in reduced mode if resources are short, like only loading the Processes page if that's what's needed to get going. It's one of the very few apps that won't just &quot;fail and bail&quot; when things go wrong.&lt;/p&gt;
&lt;p&gt;- If Task Manager ever becomes internally corrupted, kill/close it. Restart it while holding down CTRL, ALT, and SHIFT, and Task Manager will reset ALL internal settings to factory fresh if it sees that key combo at startup. Same works for every app I've written, btw, I think!&lt;/p&gt;
&lt;p&gt;- If all your titlebars disappear and you just have a graph, double-click dead client space to switch back to normal mode. This no-titlebar mode is a mode I added to follow the NT clock, where you could remove borders as well, but it confused more people than it ever helped I'm sure!&lt;/p&gt;
&lt;p&gt;- I initially drew the meters as 7-segment LEDs but that wasn't localizable to all cultures (How do you do a right-to-left reading 7-segment LED for Saudi Arabia?) so they only lasted for one version or so.&lt;/p&gt;
&lt;p&gt;- CTRL-SHIFT-ESC will launch Taskmgr without any help from the Shell, so if the Shell/Explorer is dead use this key combo to bring up TM and then reset/restart the shell. Even if your tray is missing and gone, this combo should start it.&lt;/p&gt;
&lt;p&gt;- If the shell can't start something or is hung, try Task Manager. It has a mode where it will load without ANY references to the shell32.dll and allow you to start programs like CMD.EXE without the start menu.&lt;/p&gt;
&lt;p&gt;- You can find the binary for any executing process in the process table by right clicking and pick &quot;Show File Location&quot;. You can also search it online, but I don't know if they have useful info for much.&lt;/p&gt;
&lt;p&gt;- There should be nothing that TaskMgr can't kill - it will even escalate privilege and (if you have it) enable debug privilege to attach to and kill apps that way if needed. If TM can't kill it, you've got a kernel problem.&lt;/p&gt;
&lt;p&gt;- A lot of people don't seem to know you can add many additional columns, remove others, drag them around to reorder, etc.&lt;/p&gt;
&lt;p&gt;- The reason there's a Window class called &quot;DavesFrameWndProc&quot; is because to get flicker-free resizing I needed group boxes to not try to paint on one another, so subclass them, give them their own wndproc, and enabling WS_CLIPSIBLINGS during WM_CREATE. At least I think so!&lt;/p&gt;
&lt;p&gt;- TM is one of the apps I'm most proud of because it is probably the first or at least most visually complicated app to ever be fully resizable in all dimensions without any flicker up till then. I was hardcore about memory and flicker in my day, so it was under 100K for the exe and never flashed or crashed, that was my thing! Having the GDI32 and User32 guys down the hall sure helped.&lt;/p&gt;
&lt;p&gt;I also wrote/ported Space Cadet pinball, zip folders, worked on start menu, shell, calc, ole32, product activation, and some other stuff. I was in MS-DOS before that but I doubt anyone is still supporting MS-DOS!&lt;/p&gt;
&lt;p&gt;Edit: Looks like comments have been locked, so I'll update this one time with some answers to the most interesting/common questions below!&lt;/p&gt;
&lt;p&gt;- On the command line, I'm stumped, as I don't remember command line args to it at all!&lt;/p&gt;
&lt;p&gt;- On Space Cadet, yes, you can run it on Windows 10, but I doubt it's official or legal, so will point you at your favorite search engine for that one, but it's easy. And on Space Cadet, reminder that Maxis did the very original (M. Ridgeway) and mine was just a rewrite in 32-bit portable C using their art. That way it ran on the PowerPC, Alpha, and MIPS as well. And yes, in the original there is a &quot;God Mode&quot; where you can drag the ball around, click on targets, etc. Search is your friend there as well.&lt;/p&gt;
&lt;p&gt;- On what I'm doing these days, I volunteer to teach kids to program at school, or used to until recently, so now I'm mostly coding and working on my coding channel, which you can follow here: &lt;a href=&quot;https://bit.ly/36wDLJK&quot;&gt;https://bit.ly/36wDLJK&lt;/a&gt; and I also restore old musclecars, pickups, etc. So yes, I still code every day!&lt;/p&gt;
&lt;p&gt;- On the notion that there are some things that Taskmgr can't kill, there were post-XP for sure but they were intentional limits. I remember something about journalists making news by using TM to kill the root winlogon session, for example, which would bugcheck the machine intentionally. But the fact you could bluescreen NT didn't look good, I suspect, so they likely started to protect people from themselves by disallowing killing win32k.sys and other essential components.&lt;/p&gt;
&lt;p&gt;- Thanks to the mods for being flexible on this one!&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 20:20:25 +0000</pubDate>
<dc:creator>notRobot</dc:creator>
<og:description>Figured I should write this stuff down before I forget it all, and where better for TaskManager than r/techsupport! If there's any appetite for...</og:description>
<og:title>I wrote Task Manager and I just remembered something...</og:title>
<og:image>https://external-preview.redd.it/1mPRFnLCZOoUr0CPUbsAj-IVT2x-q9zlPQULag5H7oM.jpg?width=900&amp;height=471.204188482&amp;auto=webp&amp;crop=900:471.204188482,smart&amp;s=094a469e8b7594348708d83757724016bbb9851e</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://old.reddit.com/r/techsupport/comments/gqb915/i_wrote_task_manager_and_i_just_remembered/</dc:identifier>
</item>
<item>
<title>Tell HN: Triplebyte reverses, emails apology</title>
<link>https://news.ycombinator.com/item?id=23303037</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=23303037</guid>
<description>This just landed in my inbox. The discussion on hackernews (&lt;a href=&quot;https://news.ycombinator.com/item?id=23279837&quot; rel=&quot;nofollow&quot;&gt;https://news.ycombinator.com/item?id=23279837&lt;/a&gt;) surely helped Triplebyte understand that it was a mistake to create public profiles of their users by default:
&lt;p&gt;Email by Triplebyte CEO, Ammon: ---&lt;/p&gt;&lt;p&gt;Hi xxxxx,&lt;/p&gt;
&lt;p&gt;There’s no other way to put this--I screwed up badly. On Friday evening, I sent an email to you about a new feature called public Triplebyte profiles. We failed to think through the effects of this feature on our community, and made the profiles default public with an option to opt out. Many of you were rightfully angry. I am truly sorry. As CEO, this is my fault. I made this decision. Effective immediately, we are canceling this feature.&lt;/p&gt;
&lt;p&gt;You came to us with the goal of landing a great software engineering job. As part of that, you entrusted us with your personal, sensitive information, including both the fact that you are job searching as well as the results of your assessments with us. Launching a profile feature that would automatically make any of that data public betrayed that trust.&lt;/p&gt;
&lt;p&gt;Rather than safeguarding the fact that you are or were job searching, we threatened exposure. Current employers might retaliate if they saw that you were job searching. You did not expect that any personal information you’d given us, in the context of a private, secure job search, would be used publicly without your explicit consent. I sincerely apologize. It was my failure.&lt;/p&gt;
&lt;p&gt;So, what happened? How did I screw this up? I’ve been asking myself this question a bunch over the past 48 hours. I can point to two factors (which by no means excuse the decision). The first was that the profiles as spec’d were an evolution of a feature we already had (Triplebyte Certificates--these are not default public). I failed to see the significance of “default public” in my head. The second factor was the speed we were trying to move at to respond to the COVID recession. We’re a hiring company and hiring is in crisis. The floor has fallen out on parts of our business, and other parts are under unprecedented growth. We've been in a state of churn as we quickly try various things to adapt. But I let myself get caught in this rush and did not look critically enough at the features we were shipping. Inexcusably, I ignored our users’ very real privacy concerns. This was a breach of trust not only in the decision, but in my actual thought process. The circumstances don’t excuse this. The privacy violation should have been obvious to me from the beginning, and the fact that I did not see this coming was a major failure on my part.&lt;/p&gt;
&lt;p&gt;Our mission at Triplebyte has always been to build a background-blind hiring process. I graduated at the height of the financial crisis as most companies were doing layoffs (similar to what many recent-grads are experiencing today). My LinkedIn profile and resume had nothing on them other than the name of a school few people had heard of. I applied to over 100 jobs the summer after I graduated, and I remember just never hearing back. I know that a lot of people are going through the same thing right now. I finally got my first job at a company that had a coding challenge rather than a resume screen. They cared about what I could do, not what was on my resume. This was a foundational insight for me. It's still the case today, though, that companies rely primarily on resume screens that don’t pick up what most candidates can actually do--making the hiring problem much worse than it needs to be. This is the problem we're trying to fix.&lt;/p&gt;
&lt;p&gt;We believed that we could do so by building a better Linkedin profile that was focused on your skills, rather than where you went to school, where you worked, or who you knew. I still believe there's a need for something like this. But to release it as a default public feature was not just a major mistake, it was a betrayal. I'm ashamed and I'm sorry.&lt;/p&gt;
&lt;p&gt;Triplebyte can’t function without the trust of the engineering community. Last Friday I lost a big chunk of that trust. We’re now going to try to earn it back. I’m not sure that’s fully possible, but we have to try. What I will do now is slow down, take a step back, and learn the lessons I need to avoid repeating this.&lt;/p&gt;
&lt;p&gt;I understand that cancelling this feature does not undo the harm. It’s only one necessary step. Please let me know any other concerns or questions that I can answer (replies to this email go to me). I am sorry to all of you for letting you down.&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;p&gt;-Ammon&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 17:34:54 +0000</pubDate>
<dc:creator>trianx</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=23303037</dc:identifier>
</item>
<item>
<title>A No. 1 hit vanished from Poland’s charts – it’s not going quietly</title>
<link>https://www.nytimes.com/2020/05/22/arts/music/poland-chart-song-removed.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2020/05/22/arts/music/poland-chart-song-removed.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;WARSAW — Last Friday, Kazik Staszewski, a rock legend in Poland, achieved a stunningly short-lived success in the country’s oldest music chart.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;His song “Your Pain Is Better Than Mine” was named No. 1 on the beloved “Radio Three Chart” show — but only for a few moments. Within minutes of the show ending, the results disappeared from the website of the show’s state-run broadcaster. Mr. Staszewski’s anthem had vanished, along with the rest of the chart.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Since Mr. Staszewski’s song chastised one of Poland’s most powerful politicians, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2018/06/16/world/europe/poland-kaczynski-smolensk.html&quot; title=&quot;&quot;&gt;Jaroslaw Kaczynski&lt;/a&gt;, its disappearance was immediately interpreted by critics as censorship. Over the following week, the furor set off a string of resignations, including from some of Radio Three’s most prominent hosts, and saw high-profile artists calling to withdraw their music from the broadcaster.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The Radio Three station has long been a favorite of Poland’s intelligentsia. Commonly called Trojka, it is known for promoting noncommercial musical genres, such as alternative rock and jazz, though it also features speech-based programming, including spirited intellectual debates. Under communism, it was the only institution that was allowed to broadcast music from beyond the Iron Curtain.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Since 2016, Mr. Kaczynski’s party, Law and Justice, has exerted &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2016/07/04/world/europe/polands-conservative-government-puts-curbs-on-state-tv-news.html&quot; title=&quot;&quot;&gt;ever-greater control&lt;/a&gt; over Poland’s state-funded television and radio outlets, effectively turning them into mouthpieces of the government and promoting a conservative agenda, often steeped in xenophobia, homophobia and nationalism.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Trojka’s musical focus had, to some extent, spared it the fate of other public broadcasters, which have seen loyalists of the Law and Justice Party brought in to replace some journalists and hosts.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;But since the station erased Mr. Staszewski’s song from the charts, some artists and politicians have been calling for a boycott. Tomasz Kowalczewski, the station’s director, initially tried to blame the incident on the chart show’s longtime host, Marek Niedzwiecki, who Mr. Kowalczewski said had manipulated the vote. Because the poll had been “falsified,” Mr. Kowalczewski said in a statement, it had to be annulled.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Mr. Niedzwiecki, who has hosted the show since it first went on air in 1982, denied the charges in a statement, and resigned on Sunday, outraged by the accusation of fraud. He later demanded an apology from the station and threatened a lawsuit.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Station employees told local news outlets that Mr. Kowalczewski had intervened after “Your Pain Is Better Than Mine” topped the chart, calling the head of the music department, Piotr Metz, to take the chart down from the website. On a TV talk show on Tuesday, Mr. Metz showed a text message from Mr. Kowalczewski demanding the radio station stop playing Mr. Staszewski’s song, sent just hours after the chart show ended.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“Your Pain Is Better Than Mine,” which on Friday had more than nine million views on YouTube, is a not-so-veiled censure of a privilege extended to a top politician during the coronavirus lockdown. Mr. Kaczynski, whom the song does not mention by name, was allowed a visit to a Warsaw cemetery in April while it was closed to the public. The visit took place on the anniversary of the &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2010/04/11/world/europe/11poland.html&quot; title=&quot;&quot;&gt;Smolensk crash&lt;/a&gt;, in which Mr. Kaczynski’s twin brother, Lech, Poland’s president at the time, died. The opening of the cemetery especially for Mr. Kaczynski was sharply criticized on social media.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“You alone can soothe your pain, everyone else is in trouble. Two limousines, or one, the entire cemetery just for you,” Mr. Staszewski sings to the mockingly cheerful sounds of an accordion.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Mr. Staszewski, who has been recording since 1979, declined through a spokesman to comment for this article. But in an interview with the Polish radio station RMF FM on Friday, he said that the song was about “inequality before the law.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Through the week, nine anchors followed Mr. Niedzwiecki’s lead and resigned, joining about a dozen other prominent hosts who have parted ways with Trojka in recent months.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Mr. Metz, the music department director, who started working at Trojka as an anchor in 1982 and continued broadcasting after he became a manager, was among those who stepped down. He said in an interview that even the Communist regime had more respect for the freedom of speech at Trojka than the current government has.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“Until now, the music department has been mostly free from political pressures,” he said. “The news and opinion desks were not so lucky, though. In those last years, Trojka has been promoting one ideology, one political camp and a very simplistic narrative that went against what this radio station used to stand for.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The scandal over Mr. Staszewski’s song has also been the last straw for many Polish artists, who called on the station to stop playing their music.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;

&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Tomasz Organek, the frontman of Organek, an alternative rock band, said in an interview that Trojka had been like “home to him and other independent artists” and that “the decision to part ways is a painful one.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“But this last politically motivated manipulation is unacceptable,” he said. “We’ve been seeing signs of that for years with Trojka, and it’s a real shame because it was once a bulwark of independent thought and sound thinking.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;The artists calling on Trojka to stop playing their music, who include some of Poland’s most popular singers and bands, have been joined by Mystic Production, one of the country’s biggest independent record labels. Mystic Production holds the Polish rights to music by many foreign artists, including Nick Cave, Deep Purple and Skunk Anansie.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Since those requests are not legally binding, it will be up to Trojka to decide whether they will respect them. Mr. Kowalczewski, the station director, did not immediately respond to requests for comment.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;Even some senior government figures have condemned the station’s actions. &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2016/11/10/arts/design/museum-of-the-second-world-war-in-poland-debate.html&quot; title=&quot;&quot;&gt;Piotr Glinski&lt;/a&gt;, Poland’s deputy prime minister and minister of culture, called the move to take down Mr. Staszewski’s song “a provocation.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“At times, some artists say nonsense. Even outrageous nonsense,” he &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://twitter.com/PiotrGlinski/status/1261765213038301186&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;wrote on Twitter&lt;/a&gt;. “But it’s even more outrageous to remove a song for ‘being wrongheaded.’”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;A handful of Trojka’s longest-serving anchors have decided to stay for now. And some of them staged a protest on social media this week, sharing a manifesto in which they denounced “censorship” and “outrageous treatment of journalists” at the station.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-158dogj evys1bk0&quot;&gt;“There’s almost nothing of the old Trojka left,” Mr. Metz said. “I imagine I will turn it on some time from now, and, for the first time ever not recognize it right away.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-ew4tgv&quot; aria-label=&quot;companion column&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 25 May 2020 16:45:58 +0000</pubDate>
<dc:creator>adrian_mrd</dc:creator>
<og:url>https://www.nytimes.com/2020/05/22/arts/music/poland-chart-song-removed.html</og:url>
<og:type>article</og:type>
<og:title>A No. 1 Hit Vanished From Poland’s Charts. It’s Not Going Quietly.</og:title>
<og:image>https://static01.nyt.com/images/2020/05/25/world/19poland-radio/19poland-radio-facebookJumbo.jpg</og:image>
<og:description>In a furor over censorship, prominent broadcasters resigned and artists asked for the state-run radio station at the center of the controversy to stop playing their music.</og:description>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2020/05/22/arts/music/poland-chart-song-removed.html</dc:identifier>
</item>
<item>
<title>Show HN: PgTyped – Typesafe SQL in TypeScript and Postgres</title>
<link>https://github.com/adelsz/pgtyped</link>
<guid isPermaLink="true" >https://github.com/adelsz/pgtyped</guid>
<description>&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/adelsz/pgtyped/master/header.png&quot;&gt;&lt;img width=&quot;340&quot; height=&quot;150&quot; align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/adelsz/pgtyped/master/header.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/8a55fac72631616843522f742c7607c0f61b7286/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40706774797065642f636c69&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/8a55fac72631616843522f742c7607c0f61b7286/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40706774797065642f636c69&quot; alt=&quot;npm&quot; data-canonical-src=&quot;https://img.shields.io/npm/v/@pgtyped/cli&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/adelsz/pgtyped/actions&quot;&gt;&lt;img src=&quot;https://github.com/adelsz/pgtyped/workflows/CI/badge.svg&quot; alt=&quot;Actions Status&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PgTyped makes it possible to use raw SQL in TypeScript with guaranteed type-safety.&lt;br/&gt;No need to map or translate your DB schema to TypeScript, PgTyped automatically generates types and interfaces for your SQL queries by using your running Postgres database as the source of type information.&lt;/p&gt;
&lt;hr/&gt;&lt;h2&gt;Features:&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Automatically generates TS types for parameters/results of SQL queries of any complexity.&lt;/li&gt;
&lt;li&gt;Supports extracting and typing queries from both SQL and TS files.&lt;/li&gt;
&lt;li&gt;Generate query types as you write them, using watch mode.&lt;/li&gt;
&lt;li&gt;Useful parameter interpolation helpers for arrays and objects.&lt;/li&gt;
&lt;li&gt;No need to define your DB schema in TypeScript, your running DB is the live source of type data.&lt;/li&gt;
&lt;li&gt;Prevents SQL injections by not doing explicit parameter substitution. Instead, queries and parameters are sent separately to the DB driver, allowing parameter substitution to be safely done by the PostgreSQL server.&lt;/li&gt;
&lt;/ol&gt;&lt;h2&gt;Table of contents:&lt;/h2&gt;
&lt;h2&gt;Supported file sources:&lt;/h2&gt;
&lt;p&gt;PgTyped can extract and process queries from both SQL and TS files:&lt;/p&gt;
&lt;h3&gt;Queries defined in SQL files:&lt;/h3&gt;
&lt;p&gt;Query code in &lt;code&gt;books/queries.sql&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-sql&quot; readability=&quot;7&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt; @name FindBookById &lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;FROM&lt;/span&gt; books &lt;span class=&quot;pl-k&quot;&gt;WHERE&lt;/span&gt; id &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; :bookId;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PgTyped parses the SQL file, extracting all queries and generating strictly typed TS queries in &lt;code&gt;books/queries.ts&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;11&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;/** Types generated for queries found in &quot;src/books/queries.sql&quot; */&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;//...&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/** 'FindBookById' parameters type */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;IFindBookByIdParams&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;bookId&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;number&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/** 'FindBookById' return type */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;IFindBookByIdResult&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;rank&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;number&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;author_id&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;number&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * Query generated from SQL:&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; * SELECT * FROM books WHERE id = :commentId&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;findBookById&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;PreparedQuery&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&quot;pl-smi&quot;&gt;IFindBookByIdParams&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-smi&quot;&gt;IFindBookByIdResult&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;...&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Query &lt;code&gt;findBookById&lt;/code&gt; is now statically typed, with types inferred from the PostgreSQL schema.&lt;br/&gt;This generated query can be imported and executed as follows:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;17&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Client&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;'pg'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;findBookById&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;'./src/books/queries.sql'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;host&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;user&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;password&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;'example'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;database&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;books&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;findBookById&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;pl-c1&quot;&gt;bookId&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;'carl-sagan-76'&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-s1&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-smi&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;`Book name: &lt;span class=&quot;pl-s1&quot;&gt;&lt;span class=&quot;pl-kos&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;books&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/span&gt;`&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-en&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information on consuming queries from SQL files checkout the &lt;a href=&quot;https://github.com/adelsz/pgtyped/blob/master/docs/annotated-sql.md&quot;&gt;Annotated SQL&lt;/a&gt; guide.&lt;/p&gt;
&lt;h3&gt;Queries defined in TS files:&lt;/h3&gt;
&lt;p&gt;Query code in &lt;code&gt;users/queries.ts&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;@pgtyped/query&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsQuery&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;./queries.types.ts&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;selectUserIds&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsQuery&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;`select id from users where id = $id and age = $age`&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PgTyped parses &lt;code&gt;sql&lt;/code&gt; queries and generates corresponding TS interfaces in &lt;code&gt;users/queries.types.ts&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;/** Types generated for queries found in &quot;users/queries.ts&quot; */&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/** 'selectUserIds' query type */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsQuery&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;params&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsParams&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;result&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsResult&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/** 'selectUserIds' parameters type */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsParams&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;number&lt;/span&gt; | &lt;span class=&quot;pl-smi&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;/** 'selectUserIds' return type */&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ISelectUserIdsResult&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the &lt;code&gt;selectUserIds&lt;/code&gt; query:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;9&quot;&gt;
&lt;pre&gt;
  &lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;selectAllUsers&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;some-user-id&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;pl-smi&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information on consuming queries from TS files checkout the &lt;a href=&quot;https://github.com/adelsz/pgtyped/blob/master/docs/sql-in-ts.md&quot;&gt;SQL-in-TS&lt;/a&gt; guide.&lt;/p&gt;
&lt;h2&gt;Getting started:&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;npm install @pgtyped/cli @pgtyped/query typescript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a PgTyped &lt;code&gt;config.json&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npx pgtyped -w -c config.json&lt;/code&gt; to start PgTyped in watch mode.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;Refer to the &lt;a href=&quot;https://github.com/adelsz/pgtyped/blob/master/packages/example/README.md&quot;&gt;example app&lt;/a&gt; for a preconfigured example.&lt;/p&gt;
&lt;h3&gt;Configuration:&lt;/h3&gt;
&lt;p&gt;PgTyped requires a &lt;code&gt;config.json&lt;/code&gt; file to run, a basic config file looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-json&quot; readability=&quot;17&quot;&gt;
&lt;pre&gt;
{
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;transforms&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
    {
      &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;mode&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;sql&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
      &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;include&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;**/*.sql&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
      &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;emitTemplate&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;{{dir}}/{{name}}.queries.ts&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    }
  ],
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;srcDir&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;./src/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;failOnError&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;,
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;db&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;host&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;db&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;test&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;dbName&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;test&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;password&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;example&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to PgTyped &lt;a href=&quot;https://github.com/adelsz/pgtyped/blob/master/packages/cli/README.md&quot;&gt;CLI docs&lt;/a&gt; for more info on the config file, available CLI flags and env variables.&lt;/p&gt;
&lt;p&gt;To find out more on how to write typed queries in TS or SQL files:&lt;/p&gt;
&lt;h2&gt;Parameter expansions:&lt;/h2&gt;
&lt;p&gt;PgTyped also supports parameter expansions to help you build more complicated queries. For example, a typical insert query looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-sql&quot; readability=&quot;10&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;  @name InsertComment&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;  @param comments -&amp;gt; ((userId, commentBody)...)&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;INSERT INTO&lt;/span&gt; book_comments (user_id, body)
&lt;span class=&quot;pl-k&quot;&gt;VALUES&lt;/span&gt; :comments;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the expansion &lt;code&gt;comments -&amp;gt; ((userId, commentBody)...)&lt;/code&gt; that allows to pass an array of objects as &lt;code&gt;comments&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;pl-c1&quot;&gt;userId&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;pl-c1&quot;&gt;commentBody&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;What a great book, highly recommended!&quot;&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;pl-c1&quot;&gt;userId&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;pl-c1&quot;&gt;commentBody&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;Good read, but there is much more to the subject..&quot;&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Expanded query:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-sql&quot; readability=&quot;14&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;INSERT INTO&lt;/span&gt; book_comments (user_id, body)
&lt;span class=&quot;pl-k&quot;&gt;VALUES&lt;/span&gt; (
  (&lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;What a great book, highly recommended!&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;),
  (&lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Good read, but there is much more to the subject.&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
);
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can learn more about supported expansion types here:&lt;/p&gt;
&lt;h3&gt;Project state:&lt;/h3&gt;
&lt;p&gt;This project is being actively developed and its APIs might change. All issue reports, feature requests and PRs appreciated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/adelsz/pgtyped/blob/master/docs/roadmap.md&quot;&gt;Project Goals and Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;License&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/adelsz/pgtyped/tree/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright (c) 2019-present, Adel Salakh&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 16:29:02 +0000</pubDate>
<dc:creator>alde</dc:creator>
<og:image>https://avatars2.githubusercontent.com/u/761605?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>adelsz/pgtyped</og:title>
<og:url>https://github.com/adelsz/pgtyped</og:url>
<og:description>PgTyped - Typesafe SQL in TypeScript. Contribute to adelsz/pgtyped development by creating an account on GitHub.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/adelsz/pgtyped</dc:identifier>
</item>
<item>
<title>Solving the “Miracle Sudoku” in Prolog</title>
<link>https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/</link>
<guid isPermaLink="true" >https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/</guid>
<description>&lt;p&gt;If you haven't seen it already, you owe it to yourself to watch this video on “CrackingTheCryptic” of a competitive Sudoku solver working through the Miracle Sudoku puzzle:&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/yKf9aUIxdb4&quot; allowfullscreen=&quot;&quot; title=&quot;YouTube Video&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Watching that video reminded me of a programming languages course I took, where we wrote a simple Sudoku solver in &lt;a href=&quot;https://en.wikipedia.org/wiki/Prolog&quot;&gt;Prolog&lt;/a&gt;. Since Prolog is a declarative language, writing a Sudoku solver is remarkably concise. In essence, all the programmer needs to do is define the constraints of the game, and Prolog is smart enough to find solutions:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;61&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;:- &lt;span&gt;use_module&lt;/span&gt;(&lt;span&gt;library&lt;/span&gt;(&lt;span&gt;clpfd&lt;/span&gt;)).

&lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;) :-
    &lt;span&gt;length&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;same_length&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Vs&lt;/span&gt;), &lt;span&gt;Vs&lt;/span&gt; &lt;span&gt;ins&lt;/span&gt; &lt;span&gt;1.&lt;/span&gt;&lt;span&gt;.9&lt;/span&gt;,
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;all_different&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;transpose&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Columns&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;all_different&lt;/span&gt;, &lt;span&gt;Columns&lt;/span&gt;),
    &lt;span&gt;Rows&lt;/span&gt; = [&lt;span&gt;As&lt;/span&gt;,&lt;span&gt;Bs&lt;/span&gt;,&lt;span&gt;Cs&lt;/span&gt;,&lt;span&gt;Ds&lt;/span&gt;,&lt;span&gt;Es&lt;/span&gt;,&lt;span&gt;Fs&lt;/span&gt;,&lt;span&gt;Gs&lt;/span&gt;,&lt;span&gt;Hs&lt;/span&gt;,&lt;span&gt;Is&lt;/span&gt;],
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;As&lt;/span&gt;, &lt;span&gt;Bs&lt;/span&gt;, &lt;span&gt;Cs&lt;/span&gt;),
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;Ds&lt;/span&gt;, &lt;span&gt;Es&lt;/span&gt;, &lt;span&gt;Fs&lt;/span&gt;),
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;Gs&lt;/span&gt;, &lt;span&gt;Hs&lt;/span&gt;, &lt;span&gt;Is&lt;/span&gt;).

&lt;span&gt;blocks&lt;/span&gt;([], [], []).
&lt;span&gt;blocks&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N2&lt;/span&gt;,&lt;span&gt;N3&lt;/span&gt;|&lt;span&gt;Ns1&lt;/span&gt;], [&lt;span&gt;N4&lt;/span&gt;,&lt;span&gt;N5&lt;/span&gt;,&lt;span&gt;N6&lt;/span&gt;|&lt;span&gt;Ns2&lt;/span&gt;], [&lt;span&gt;N7&lt;/span&gt;,&lt;span&gt;N8&lt;/span&gt;,&lt;span&gt;N9&lt;/span&gt;|&lt;span&gt;Ns3&lt;/span&gt;]) :-
        &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N2&lt;/span&gt;,&lt;span&gt;N3&lt;/span&gt;,&lt;span&gt;N4&lt;/span&gt;,&lt;span&gt;N5&lt;/span&gt;,&lt;span&gt;N6&lt;/span&gt;,&lt;span&gt;N7&lt;/span&gt;,&lt;span&gt;N8&lt;/span&gt;,&lt;span&gt;N9&lt;/span&gt;]),
        &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;Ns1&lt;/span&gt;, &lt;span&gt;Ns2&lt;/span&gt;, &lt;span&gt;Ns3&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above is from the &lt;a href=&quot;https://www.swi-prolog.org/pldoc/man?section=clpfd-sudoku&quot;&gt;SWI Prolog docs&lt;/a&gt;, which uses a Constraint Logic Programming extension. You can play around with it in the &lt;a href=&quot;https://swish.swi-prolog.org/example/clpfd_sudoku.pl&quot;&gt;SWISH online Prolog environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The cool thing about this code is that it works both as a Sudoku &lt;em&gt;solver&lt;/em&gt; and as a Sudoku &lt;em&gt;generator&lt;/em&gt;. You can query it with a partially solved board, and it will find all valid solutions. This means that you can also give it an empty board, and Prolog will generate all possible Sudoku solutions (although, this will take some time as there are $6.7 \times 10^{21}$ valid boards&lt;sup id=&quot;fnref:1&quot;/&gt;).&lt;/p&gt;
&lt;p&gt;As a disclaimer, I don't know Prolog very well. I've only barely tinkered with it, so I'm sure that my usage of it is suboptimal. Despite this, I was able to write a working Miracle Sudoku solver. 😄&lt;/p&gt;
&lt;h2 id=&quot;a-miracle-sudoku-solver&quot;&gt;A Miracle Sudoku Solver&lt;/h2&gt;
&lt;p&gt;To write a solver for the Miracle Sudoku puzzle, we need to encode the following rules:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Normal Sudoku rules apply:
&lt;ul&gt;&lt;li&gt;All rows/columns must contain 1..9 exactly once.&lt;/li&gt;
&lt;li&gt;Each 3x3 block must contain 1..9 exactly once.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Any two cells separated by a &lt;strong&gt;knight's&lt;/strong&gt; move or &lt;strong&gt;king's&lt;/strong&gt; move cannot contain the same digit.&lt;/li&gt;
&lt;li&gt;Any two orthogonally adjacent cells (i.e., cells sharing an edge) cannot contain consecutive digits.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The &lt;strong&gt;Orthogonal Adjacency&lt;/strong&gt; constraint is the easiest to encode. For each 3x3 grid on the board, we need to make sure that the corners differ from their neighbors by at least one. (We use the corners instead of the middle to handle boundary cases at the edge of the grid.)&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;%- [[N1, N2, N3],&lt;/span&gt;
&lt;span&gt;%-  [N4, N5, N6],&lt;/span&gt;
&lt;span&gt;%-  [N7, N8, N9]]&lt;/span&gt;
&lt;span&gt;ortho_adjacent&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N2&lt;/span&gt;,&lt;span&gt;N3&lt;/span&gt;|&lt;span&gt;Ns1&lt;/span&gt;], [&lt;span&gt;N4&lt;/span&gt;,&lt;span&gt;N5&lt;/span&gt;,&lt;span&gt;N6&lt;/span&gt;|&lt;span&gt;Ns2&lt;/span&gt;], [&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N8&lt;/span&gt;,&lt;span&gt;N9&lt;/span&gt;|&lt;span&gt;Ns3&lt;/span&gt;]) :-
    &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N1&lt;/span&gt; - &lt;span&gt;N2&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N1&lt;/span&gt; - &lt;span&gt;N4&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,
    &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N3&lt;/span&gt; - &lt;span&gt;N2&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N3&lt;/span&gt; - &lt;span&gt;N6&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,
    &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N7&lt;/span&gt; - &lt;span&gt;N4&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N7&lt;/span&gt; - &lt;span&gt;N8&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,
    &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N9&lt;/span&gt; - &lt;span&gt;N8&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;abs&lt;/span&gt;(&lt;span&gt;N9&lt;/span&gt; - &lt;span&gt;N6&lt;/span&gt;) &lt;span&gt;#&amp;gt;&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N3&lt;/span&gt;], &lt;span&gt;Ns1&lt;/span&gt;, &lt;span&gt;Z1&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;], &lt;span&gt;Ns2&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N8&lt;/span&gt;, &lt;span&gt;N9&lt;/span&gt;], &lt;span&gt;Ns3&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Z1&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;).
&lt;span&gt;ortho_adjacent&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]). &lt;span&gt;%- Base case&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next is the &lt;strong&gt;King's Move&lt;/strong&gt; constraint, which is just as simple. I decided to use the &lt;code&gt;all_different&lt;/code&gt; function as a shortcut for inequality. We could have used the &lt;code&gt;#\=&lt;/code&gt; operator on &lt;code&gt;N5&lt;/code&gt;'s neighbors, but we also need to handle the edge cases of the grid, which is why we also need to constrain the corners – &lt;code&gt;N1&lt;/code&gt;, &lt;code&gt;N3&lt;/code&gt;, &lt;code&gt;N7&lt;/code&gt;, and &lt;code&gt;N9&lt;/code&gt;. Unfortunately, this creates some duplicate constraints.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;69&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;%- [[N1, N2, N3],&lt;/span&gt;
&lt;span&gt;%-  [N4, N5, N6],&lt;/span&gt;
&lt;span&gt;%-  [N7, N8, N9]]&lt;/span&gt;
&lt;span&gt;kings_move&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N2&lt;/span&gt;,&lt;span&gt;N3&lt;/span&gt;|&lt;span&gt;Ns1&lt;/span&gt;], [&lt;span&gt;N4&lt;/span&gt;,&lt;span&gt;N5&lt;/span&gt;,&lt;span&gt;N6&lt;/span&gt;|&lt;span&gt;Ns2&lt;/span&gt;], [&lt;span&gt;N7&lt;/span&gt;,&lt;span&gt;N8&lt;/span&gt;,&lt;span&gt;N9&lt;/span&gt;|&lt;span&gt;Ns3&lt;/span&gt;]) :-
        &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;, &lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N4&lt;/span&gt;]), &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N4&lt;/span&gt;, &lt;span&gt;N7&lt;/span&gt;, &lt;span&gt;N8&lt;/span&gt;]),
        &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N3&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;]), &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N8&lt;/span&gt;, &lt;span&gt;N9&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;]),
        &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N4&lt;/span&gt;, &lt;span&gt;N2&lt;/span&gt;]), &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;]),
        &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;, &lt;span&gt;N7&lt;/span&gt;]), &lt;span&gt;all_different&lt;/span&gt;([&lt;span&gt;N4&lt;/span&gt;, &lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N8&lt;/span&gt;]),
        &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N3&lt;/span&gt;], &lt;span&gt;Ns1&lt;/span&gt;, &lt;span&gt;Z1&lt;/span&gt;),
        &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;], &lt;span&gt;Ns2&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;),
        &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N8&lt;/span&gt;, &lt;span&gt;N9&lt;/span&gt;], &lt;span&gt;Ns3&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;),
        &lt;span&gt;kings_move&lt;/span&gt;(&lt;span&gt;Z1&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;).
&lt;span&gt;kings_move&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I initially thought the &lt;strong&gt;Knight's Move&lt;/strong&gt; constraint would be more difficult to write, but it turns out that it tiles just as well as the others: all of the “L” movements of a knight also fix within a 3x3 grid.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;53&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;%- [[N1, N2, N3],&lt;/span&gt;
&lt;span&gt;%-  [N4, N5, N6],&lt;/span&gt;
&lt;span&gt;%-  [N7, N8, N9]]&lt;/span&gt;
&lt;span&gt;knights_move&lt;/span&gt;([&lt;span&gt;N1&lt;/span&gt;,&lt;span&gt;N2&lt;/span&gt;,&lt;span&gt;N3&lt;/span&gt;|&lt;span&gt;Ns1&lt;/span&gt;], [&lt;span&gt;N4&lt;/span&gt;,&lt;span&gt;N5&lt;/span&gt;,&lt;span&gt;N6&lt;/span&gt;|&lt;span&gt;Ns2&lt;/span&gt;], [&lt;span&gt;N7&lt;/span&gt;,&lt;span&gt;N8&lt;/span&gt;,&lt;span&gt;N9&lt;/span&gt;|&lt;span&gt;Ns3&lt;/span&gt;]) :-
    &lt;span&gt;N1&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N6&lt;/span&gt;, &lt;span&gt;N1&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N8&lt;/span&gt;,
    &lt;span&gt;N3&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N8&lt;/span&gt;, &lt;span&gt;N3&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N4&lt;/span&gt;,
    &lt;span&gt;N7&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N7&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N6&lt;/span&gt;,
    &lt;span&gt;N9&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N4&lt;/span&gt;, &lt;span&gt;N9&lt;/span&gt; &lt;span&gt;#\=&lt;/span&gt; &lt;span&gt;N2&lt;/span&gt;,
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N2&lt;/span&gt;, &lt;span&gt;N3&lt;/span&gt;], &lt;span&gt;Ns1&lt;/span&gt;, &lt;span&gt;Z1&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N5&lt;/span&gt;, &lt;span&gt;N6&lt;/span&gt;], &lt;span&gt;Ns2&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;N8&lt;/span&gt;, &lt;span&gt;N9&lt;/span&gt;], &lt;span&gt;Ns3&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;),
    &lt;span&gt;knights_move&lt;/span&gt;(&lt;span&gt;Z1&lt;/span&gt;, &lt;span&gt;Z2&lt;/span&gt;, &lt;span&gt;Z3&lt;/span&gt;).
&lt;span&gt;knights_move&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;], [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we've written relations for the Miracle Sudoku rules, we need to add them to the original &lt;code&gt;sudoku&lt;/code&gt; function. Each function takes 3 rows at a time, and needs to operate over each window of three rows in the board. A verbose way to do this is as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;39&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;) :-
    ...
    &lt;span&gt;Rows&lt;/span&gt; = [&lt;span&gt;As&lt;/span&gt;,&lt;span&gt;Bs&lt;/span&gt;,&lt;span&gt;Cs&lt;/span&gt;,&lt;span&gt;Ds&lt;/span&gt;,&lt;span&gt;Es&lt;/span&gt;,&lt;span&gt;Fs&lt;/span&gt;,&lt;span&gt;Gs&lt;/span&gt;,&lt;span&gt;Hs&lt;/span&gt;,&lt;span&gt;Is&lt;/span&gt;],
    ...
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;As&lt;/span&gt;, &lt;span&gt;Bs&lt;/span&gt;, &lt;span&gt;Cs&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Bs&lt;/span&gt;, &lt;span&gt;Cs&lt;/span&gt;, &lt;span&gt;Ds&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Cs&lt;/span&gt;, &lt;span&gt;Ds&lt;/span&gt;, &lt;span&gt;Es&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Ds&lt;/span&gt;, &lt;span&gt;Es&lt;/span&gt;, &lt;span&gt;Fs&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Es&lt;/span&gt;, &lt;span&gt;Fs&lt;/span&gt;, &lt;span&gt;Gs&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Fs&lt;/span&gt;, &lt;span&gt;Gs&lt;/span&gt;, &lt;span&gt;Hs&lt;/span&gt;),
    &lt;span&gt;ortho_adjacent&lt;/span&gt;(&lt;span&gt;Gs&lt;/span&gt;, &lt;span&gt;Hs&lt;/span&gt;, &lt;span&gt;Is&lt;/span&gt;),
    ...
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We're asserting the &lt;code&gt;ortho_adjacent&lt;/code&gt; relation on rows &lt;code&gt;(A, B, C)&lt;/code&gt;, then on &lt;code&gt;(B, C, D)&lt;/code&gt;, and so on. We can use &lt;code&gt;maplist&lt;/code&gt; to make this more compact:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;40&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;) :-
    ...
    &lt;span&gt;Rows&lt;/span&gt; = [&lt;span&gt;As&lt;/span&gt;,&lt;span&gt;Bs&lt;/span&gt;,&lt;span&gt;Cs&lt;/span&gt;,&lt;span&gt;Ds&lt;/span&gt;,&lt;span&gt;Es&lt;/span&gt;,&lt;span&gt;Fs&lt;/span&gt;,&lt;span&gt;Gs&lt;/span&gt;,&lt;span&gt;Hs&lt;/span&gt;,&lt;span&gt;Is&lt;/span&gt;],
    ...
    &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Chunk1&lt;/span&gt;,       [&lt;span&gt;_&lt;/span&gt;, &lt;span&gt;_&lt;/span&gt;], &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;|&lt;span&gt;Chunk2&lt;/span&gt;],   [&lt;span&gt;_&lt;/span&gt;],    &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;|&lt;span&gt;Chunk3&lt;/span&gt;], [],     &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;ortho_adjacent&lt;/span&gt;, &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;knights_move&lt;/span&gt;,   &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;kings_move&lt;/span&gt;,     &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To explain: we use &lt;code&gt;append&lt;/code&gt; to create 3 “chunks” of rows. &lt;code&gt;Chunk1&lt;/code&gt; is equivalent to &lt;code&gt;[As,Bs,Cs,Ds,Es,Fs,Gs]&lt;/code&gt;, &lt;code&gt;Chunk2&lt;/code&gt; is &lt;code&gt;[Bs,Cs,Ds,Es,Fs,Gs, Hs]&lt;/code&gt;, and &lt;code&gt;Chunk3&lt;/code&gt; is &lt;code&gt;[Cs,Ds,Es,Fs,Gs,Hs,Is]&lt;/code&gt;. Then, we use &lt;code&gt;maplist&lt;/code&gt; to apply these chunks to our relations. When you pass multiple lists to &lt;code&gt;maplist&lt;/code&gt;, it calls the provided relation with the &lt;code&gt;i&lt;/code&gt;th element of the &lt;code&gt;j&lt;/code&gt;th list as an argument to the relation.&lt;/p&gt;
&lt;p&gt;The notation from the &lt;code&gt;maplist&lt;/code&gt; documentation explains its pattern of argument application:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;maplist(P, [X11,...,X1n], ..., [Xm1,...,Xmn]) :-
    P(X11, ..., Xm1),
    ...
    P(X1n, ..., Xmn).
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Now we have a concise way of describing the Miracle Sudoku problem in Prolog!&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;63&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;) :-
    &lt;span&gt;length&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;same_length&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Vs&lt;/span&gt;), &lt;span&gt;Vs&lt;/span&gt; &lt;span&gt;ins&lt;/span&gt; &lt;span&gt;1.&lt;/span&gt;&lt;span&gt;.9&lt;/span&gt;,
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;all_different&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;transpose&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Columns&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;all_different&lt;/span&gt;, &lt;span&gt;Columns&lt;/span&gt;),
    &lt;span&gt;Rows&lt;/span&gt; = [&lt;span&gt;As&lt;/span&gt;,&lt;span&gt;Bs&lt;/span&gt;,&lt;span&gt;Cs&lt;/span&gt;,&lt;span&gt;Ds&lt;/span&gt;,&lt;span&gt;Es&lt;/span&gt;,&lt;span&gt;Fs&lt;/span&gt;,&lt;span&gt;Gs&lt;/span&gt;,&lt;span&gt;Hs&lt;/span&gt;,&lt;span&gt;Is&lt;/span&gt;],
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;As&lt;/span&gt;, &lt;span&gt;Bs&lt;/span&gt;, &lt;span&gt;Cs&lt;/span&gt;),
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;Ds&lt;/span&gt;, &lt;span&gt;Es&lt;/span&gt;, &lt;span&gt;Fs&lt;/span&gt;),
    &lt;span&gt;blocks&lt;/span&gt;(&lt;span&gt;Gs&lt;/span&gt;, &lt;span&gt;Hs&lt;/span&gt;, &lt;span&gt;Is&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Chunk1&lt;/span&gt;,       [&lt;span&gt;_&lt;/span&gt;, &lt;span&gt;_&lt;/span&gt;], &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;|&lt;span&gt;Chunk2&lt;/span&gt;],   [&lt;span&gt;_&lt;/span&gt;],    &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;([&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;|&lt;span&gt;Chunk3&lt;/span&gt;], [],     &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;ortho_adjacent&lt;/span&gt;, &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;knights_move&lt;/span&gt;,   &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;kings_move&lt;/span&gt;,     &lt;span&gt;Chunk1&lt;/span&gt;, &lt;span&gt;Chunk2&lt;/span&gt;, &lt;span&gt;Chunk3&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;does-it-work&quot;&gt;Does it Work?&lt;/h2&gt;
&lt;p&gt;The original Miracle Sudoku from &lt;a href=&quot;https://youtube.com/watch?v=yKf9aUIxdb4&quot;&gt;the video&lt;/a&gt; starts with this clue:&lt;/p&gt;
&lt;a href=&quot;https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/problem1.png&quot;&gt;&lt;img src=&quot;https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/problem1_hu92ca89aefadaea462b4f3470e33f2e01_2040_0x250_resize_box_2.png&quot;/&gt;&lt;/a&gt;
&lt;p&gt;We can encode this problem in Prolog by creating a 9x9 board and populating it with the 2 digit hints. We leave the rest of the board as &lt;code&gt;'_'&lt;/code&gt;s to let Prolog know that these are free variables. Our solver will keep the &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; in the positions that they're set, but is free to choose any value for the rest of the &lt;code&gt;'_'&lt;/code&gt;s, subject to the constraints of the puzzle.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;90&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;, [[&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]]).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we can query for solutions with our solver:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;label&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;portray_clause&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's what the query is doing:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;problem(1, Rows)&lt;/code&gt; asserts that &lt;code&gt;Rows&lt;/code&gt; must match the hint.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudoku(Rows)&lt;/code&gt; asserts that the solution must match the Miracle Sudoku constraints.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maplist(label, Rows)&lt;/code&gt; tells Prolog to find concrete values for each of the free variables in &lt;code&gt;Rows&lt;/code&gt;. (Otherwise, we just get a list of the constraints on each variable)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maplist(portray_clause, Rows)&lt;/code&gt; pretty prints the solution.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And the result?&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;89&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;?-&lt;/span&gt; &lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;labeling&lt;/span&gt;([&lt;span&gt;ffc&lt;/span&gt;, &lt;span&gt;enum&lt;/span&gt;]), &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;portray_clause&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;).

[&lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;].
[&lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;].
[&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;].
[&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;].
[&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;].
[&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;].
[&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;].
[&lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;].
[&lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;].
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The solver works! To check that we didn't just get lucky, it'd be nice to try this out against another instance of the puzzle. Fortunately, the CrackingTheCryptic channel later posted a follow-up video with a &lt;a href=&quot;https://www.youtube.com/watch?v=Tv-48b-KuxI&quot;&gt;second puzzle&lt;/a&gt;:&lt;/p&gt;
&lt;a href=&quot;https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/problem2.png&quot;&gt;&lt;img src=&quot;https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/problem2_hube14d45dbb772c4f21a076cd727e9599_2234_0x250_resize_box_2.png&quot;/&gt;&lt;/a&gt;
&lt;p&gt;Plugging this into our solver, we're able to find a solution quickly:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;169&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;2&lt;/span&gt;, [[&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;4&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]]).
&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;label&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;portray_clause&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;).

[&lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;].
[&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;].
[&lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;].
[&lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;].
[&lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;].
[&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;].
[&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;].
[&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;].
[&lt;span&gt;5&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;].
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Correct again! One useful aspect of the Prolog solver is that it's able to find &lt;em&gt;all valid solutions&lt;/em&gt; for any given hint. In the Prolog REPL, once a solution has been found you can press &lt;code&gt;;&lt;/code&gt; to iterate to the next solution. In both of the above puzzles, the hint has exactly one valid solution. By definition, Sudoku puzzles should &lt;a href=&quot;https://puzzling.stackexchange.com/questions/2/what-is-the-maximum-number-of-solutions-a-sudoku-puzzle-can-have&quot;&gt;only have one solution&lt;/a&gt;, so these puzzles are in fact valid.&lt;/p&gt;
&lt;h2 id=&quot;generating-puzzles&quot;&gt;Generating Puzzles&lt;/h2&gt;
&lt;p&gt;Now that we have a solver for Miracle Sudoku problems, can we generate some of our own? To test this, I queried the solver with a completely blank board:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;96&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;, [[&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;],
            [&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;,&lt;span&gt;_&lt;/span&gt;]]).
&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;label&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;), &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;portray_clause&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the result? Well… nothing. Just the sound of my laptop's fans spinning. I think that the way I'm instructing Prolog to search for solutions is too naive to generate boards without prompting. My bet is that &lt;code&gt;maplist(label, Rows)&lt;/code&gt; is performing “guess and check” search of the entire space, which is much too slow to generate boards without the constraint of a hint.&lt;/p&gt;
&lt;p&gt;It's a bit disappointing not to be able to generate novel boards with this solver. Perhaps someone with more Prolog knowledge could implement a more efficient solution.&lt;/p&gt;
&lt;h2 id=&quot;digression-picat&quot;&gt;Digression: Picat&lt;/h2&gt;
&lt;p&gt;While writing this article, I stumbled upon &lt;a href=&quot;http://www.hakank.org/picat/&quot;&gt;Hakan Kjellerstrand&lt;/a&gt;‘s Miracle Sudoku solver written in &lt;a href=&quot;http://picat-lang.org/&quot;&gt;Picat&lt;/a&gt;, a logic-based programming language I'd never heard of before.&lt;/p&gt;
&lt;p&gt;Hakan's solver is much faster than mine – it's so fast that it can generate all possible Miracle Sudoku boards in about the time it takes mine to solve a single puzzle instance. Surprisingly, there are only 72 solution boards that meet the Miracle Sudoku constraints&lt;sup id=&quot;fnref:2&quot;/&gt;. I know even less about Picat than I do about Prolog, so I'm not sure how Hakan's solution is &lt;em&gt;so much faster&lt;/em&gt; than mine.&lt;/p&gt;
&lt;p&gt;I'd recommend reading through the Picat solver &lt;a href=&quot;http://www.hakank.org/picat/miracle_sudoku.pi&quot;&gt;source code&lt;/a&gt;. Since Hakan's solution is so fast, it's able to discover a couple other interesting properties of the Miracle Sudoku puzzle:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The minimal number of hints necessary to uniquely define a solution board is 2.&lt;/li&gt;
&lt;li&gt;Boards with just 1 placed hint have 8 solutions, always – no matter which digit the hint is or where it's placed.&lt;/li&gt;
&lt;li&gt;There are many, many valid 2-digit hints. For example, there are &lt;a href=&quot;https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/hints.txt&quot;&gt;2320 ways&lt;/a&gt; to place a &lt;code&gt;1&lt;/code&gt; and a &lt;code&gt;2&lt;/code&gt; on the board which lead to a unique solution. Since there are only 72 unique solution boards, you'd run out of interesting solutions before you ran out of hints.&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I don't have many uses for Prolog in my day-to-day work, but it's fun to work in a (relatively) obscure language like this when it's well suited for the task. I've made a mental note to check out Picat, too. Hakan's site has a &lt;a href=&quot;http://www.hakank.org/picat/&quot;&gt;wealth&lt;/a&gt; of example problems with solutions.&lt;/p&gt;
&lt;p&gt;I also had no idea that there were puzzle makers extending traditional Sudoku – there are &lt;a href=&quot;https://en.wikipedia.org/wiki/Sudoku#Variants&quot;&gt;over a dozen variants&lt;/a&gt; listed on its Wikipedia page. There's ample fodder in the &lt;a href=&quot;https://www.youtube.com/channel/UCC-UOdK8-mIjxBQm_ot1T-Q&quot;&gt;CrackingTheCryptic Youtube channel&lt;/a&gt; for puzzle variants to write solvers for.&lt;/p&gt;
&lt;h2 id=&quot;see-also&quot;&gt;See Also&lt;/h2&gt;
&lt;hr/&gt;&lt;h3 id=&quot;updates&quot;&gt;Updates&lt;/h3&gt;
&lt;p&gt;Per &lt;a href=&quot;https://news.ycombinator.com/item?id=23302424&quot;&gt;this comment&lt;/a&gt; by triska on the &lt;a href=&quot;https://news.ycombinator.com/item?id=23302102&quot;&gt;Hacker News discussion&lt;/a&gt;, we can speed up the solution substantially by changing the search strategy that Prolog uses:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;),
    &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Vs&lt;/span&gt;),
    &lt;span&gt;labeling&lt;/span&gt;([&lt;span&gt;ff&lt;/span&gt;], &lt;span&gt;Vs&lt;/span&gt;),
    &lt;span&gt;maplist&lt;/span&gt;(&lt;span&gt;portray_clause&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is still much slower than the Picat solution, but this labeling approach allows us to generate novel boards! The SWIPL docs for &lt;a href=&quot;https://swish.swi-prolog.org/pldoc/man?predicate=labeling/2&quot;&gt;&lt;code&gt;labeling&lt;/code&gt;&lt;/a&gt; has some more information on configuring the search strategy.&lt;/p&gt;
&lt;p&gt;We can also now verify that our number of solutions matches the Picat solver by querying Prolog for all valid solutions:&lt;/p&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;16&quot;&gt;
&lt;pre&gt;
&lt;code class=&quot;language-prolog&quot; data-lang=&quot;prolog&quot;&gt;&lt;span&gt;aggregate_all&lt;/span&gt;(&lt;span&gt;count&lt;/span&gt;,
   (&lt;span&gt;problem&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;, &lt;span&gt;Rows&lt;/span&gt;),
     &lt;span&gt;sudoku&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;),
     &lt;span&gt;append&lt;/span&gt;(&lt;span&gt;Rows&lt;/span&gt;, &lt;span&gt;Vs&lt;/span&gt;),
     &lt;span&gt;labeling&lt;/span&gt;([&lt;span&gt;ff&lt;/span&gt;], &lt;span&gt;Vs&lt;/span&gt;)),
   &lt;span&gt;Count&lt;/span&gt;).
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is 72, as expected. 😄&lt;/p&gt;
&lt;p&gt;An earlier version of this post used &lt;code&gt;all_distinct&lt;/code&gt; instead of &lt;code&gt;all_different&lt;/code&gt;. Again, per the comment linked above by triska (thanks!) we can improve the performance of the search by changing the way we form the constraints.&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 15:36:05 +0000</pubDate>
<dc:creator>andrelaszlo</dc:creator>
<og:title>Solving the &quot;Miracle Sudoku&quot; in Prolog</og:title>
<og:description>Writing a solver for “Miracle Sudoku” puzzles in Prolog.</og:description>
<og:type>article</og:type>
<og:url>https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/</og:url>
<og:image>https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/cover.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://benjamincongdon.me/blog/2020/05/23/Solving-the-Miracle-Sudoku-in-Prolog/</dc:identifier>
</item>
<item>
<title>Two capacitor paradox</title>
<link>https://en.wikipedia.org/wiki/Two_capacitor_paradox</link>
<guid isPermaLink="true" >https://en.wikipedia.org/wiki/Two_capacitor_paradox</guid>
<description>&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#mw-head&quot;&gt;Jump to navigation&lt;/a&gt;
		&lt;a class=&quot;mw-jump-link&quot; href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#p-search&quot;&gt;Jump to search&lt;/a&gt;
		&lt;div id=&quot;mw-content-text&quot; lang=&quot;en&quot; dir=&quot;ltr&quot; class=&quot;mw-content-ltr&quot;&gt;&lt;div class=&quot;mw-parser-output&quot;&gt;&lt;div class=&quot;thumb tright&quot;&gt;&lt;div class=&quot;thumbinner&quot; style=&quot;width:222px;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/File:Two_capacitor_paradox.svg&quot; class=&quot;image&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Two_capacitor_paradox.svg/220px-Two_capacitor_paradox.svg.png&quot; decoding=&quot;async&quot; width=&quot;220&quot; height=&quot;134&quot; class=&quot;thumbimage&quot; srcset=&quot;//upload.wikimedia.org/wikipedia/commons/thumb/8/86/Two_capacitor_paradox.svg/330px-Two_capacitor_paradox.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/86/Two_capacitor_paradox.svg/440px-Two_capacitor_paradox.svg.png 2x&quot; data-file-width=&quot;306&quot; data-file-height=&quot;187&quot;/&gt;&lt;/a&gt;  &lt;div class=&quot;thumbcaption&quot;&gt;Circuit of the paradox, showing initial voltages before the switch is closed&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The &lt;b&gt;two capacitor paradox&lt;/b&gt; or &lt;b&gt;capacitor paradox&lt;/b&gt; is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Paradox&quot; title=&quot;Paradox&quot;&gt;paradox&lt;/a&gt;, or counterintuitive &lt;a href=&quot;https://en.wikipedia.org/wiki/Thought_experiment&quot; title=&quot;Thought experiment&quot;&gt;thought experiment&lt;/a&gt;, in &lt;a href=&quot;https://en.wikipedia.org/wiki/Circuit_theory&quot; class=&quot;mw-redirect&quot; title=&quot;Circuit theory&quot;&gt;electric circuit theory&lt;/a&gt;.&lt;sup id=&quot;cite_ref-Tam_1-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-Tam-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-Levine_2-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-Levine-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-McDonald_3-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-McDonald-3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;  The thought experiment is usually described as follows:  
Two identical &lt;a href=&quot;https://en.wikipedia.org/wiki/Capacitor&quot; title=&quot;Capacitor&quot;&gt;capacitors&lt;/a&gt; are connected in parallel with an open switch between them.  One of the capacitors is charged with a voltage of &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle V_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle V_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/f300b83673e961a9d48f3862216b167f94e5668c&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:2.155ex; height:2.509ex;&quot; alt=&quot;V_{i}&quot;/&gt;&lt;/span&gt;, the other is uncharged.  When the switch is closed, some of the charge &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle Q=CV_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle Q=CV_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/630adc777fbd1a4b7fb66ba64a22ae035bee7ebf&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:8.858ex; height:2.509ex;&quot; alt=&quot;{\displaystyle Q=CV_{i}}&quot;/&gt;&lt;/span&gt; on the first capacitor flows into the second, reducing the voltage on the first and increasing the voltage on the second.  When a steady state is reached and the current goes to zero, the voltage on the two capacitors must be equal since they are connected together.  Since they both have the same capacitance &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle C}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle C}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/4fc55753007cd3c18576f7933f6f089196732029&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.338ex; width:1.766ex; height:2.176ex;&quot; alt=&quot;C&quot;/&gt;&lt;/span&gt; the charge will be divided equally between the capacitors so each capacitor will have a charge of &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle {Q \over 2}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle {Q \over 2}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/6602066a400c3103cdd4a0221df707210eba5eb0&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -1.838ex; width:2.674ex; height:5.343ex;&quot; alt=&quot;{\displaystyle {Q \over 2}}&quot;/&gt;&lt;/span&gt; and a voltage of &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle V_{f}={Q \over 2C}={V_{i} \over 2}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle V_{f}={Q \over 2C}={V_{i} \over 2}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/f05d5272b779d4c5b7781ab1b80af40188125b49&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -2.005ex; width:15.444ex; height:5.509ex;&quot; alt=&quot;{\displaystyle V_{f}={Q \over 2C}={V_{i} \over 2}}&quot;/&gt;&lt;/span&gt;.  At the beginning of the experiment the total initial energy &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/7301a4cfd04d4f5db4549fdf23746a0d2ce9f387&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:2.993ex; height:2.509ex;&quot; alt=&quot;W_{i}&quot;/&gt;&lt;/span&gt; in the circuit is the energy stored in the charged capacitor: 
&lt;/p&gt;
&lt;dl&gt;&lt;dd&gt;&lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{i}={1 \over 2}CV_{i}^{2}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{i}={1 \over 2}CV_{i}^{2}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/d967977df30104b5d9fa02e10b50ddb5a48ad30e&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -1.838ex; width:12.828ex; height:5.176ex;&quot; alt=&quot;{\displaystyle W_{i}={1 \over 2}CV_{i}^{2}}&quot;/&gt;&lt;/span&gt;.&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;At the end of the experiment the final energy &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{f}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{f}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/be4b9d6bd5dd43b7af74b0fb256a847c85355f3e&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -1.005ex; width:3.33ex; height:2.843ex;&quot; alt=&quot;W_f&quot;/&gt;&lt;/span&gt; is equal to the sum of the energy in the two capacitors 
&lt;/p&gt;
&lt;dl&gt;&lt;dd&gt;&lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{f}={1 \over 2}CV_{f}^{2}+{1 \over 2}CV_{f}^{2}=CV_{f}^{2}=C({V_{i} \over 2})^{2}={1 \over 4}CV_{i}^{2}={1 \over 2}W_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{f}={1 \over 2}CV_{f}^{2}+{1 \over 2}CV_{f}^{2}=CV_{f}^{2}=C({V_{i} \over 2})^{2}={1 \over 4}CV_{i}^{2}={1 \over 2}W_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/f26bc5a4182ddbad58d08fcaa3f87a68e37ecdb1&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -1.838ex; width:59.221ex; height:5.176ex;&quot; alt=&quot;{\displaystyle W_{f}={1 \over 2}CV_{f}^{2}+{1 \over 2}CV_{f}^{2}=CV_{f}^{2}=C({V_{i} \over 2})^{2}={1 \over 4}CV_{i}^{2}={1 \over 2}W_{i}}&quot;/&gt;&lt;/span&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Thus the final energy &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{f}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{f}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/be4b9d6bd5dd43b7af74b0fb256a847c85355f3e&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -1.005ex; width:3.33ex; height:2.843ex;&quot; alt=&quot;W_f&quot;/&gt;&lt;/span&gt; is equal to half of the initial energy &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle W_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;msub&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle W_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/7301a4cfd04d4f5db4549fdf23746a0d2ce9f387&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:2.993ex; height:2.509ex;&quot; alt=&quot;W_{i}&quot;/&gt;&lt;/span&gt;.  Where did the other half of the initial energy go?
&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Solutions&quot;&gt;Solutions&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;This is an old problem which has been discussed extensively in electronics literature.&lt;sup id=&quot;cite_ref-Zucker_4-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-Zucker-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-Mita_5-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-Mita-5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-Epsilon_6-0&quot; class=&quot;reference&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_note-Epsilon-6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt;  Unlike some other paradoxes in science, this paradox is not due to the underlying physics, but to the limitations of the 'ideal circuit' conventions used in &lt;a href=&quot;https://en.wikipedia.org/wiki/Circuit_theory&quot; class=&quot;mw-redirect&quot; title=&quot;Circuit theory&quot;&gt;circuit theory&lt;/a&gt;.  The description specified above is not physically realizable if the circuit is assumed to be made of ideal &lt;a href=&quot;https://en.wikipedia.org/wiki/Circuit_element&quot; class=&quot;mw-redirect&quot; title=&quot;Circuit element&quot;&gt;circuit elements&lt;/a&gt;, as is usual in circuit theory.   If the wires connecting the two capacitors, the switch, and the capacitors themselves are idealized as having no &lt;a href=&quot;https://en.wikipedia.org/wiki/Electrical_resistance&quot; class=&quot;mw-redirect&quot; title=&quot;Electrical resistance&quot;&gt;electrical resistance&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Inductance&quot; title=&quot;Inductance&quot;&gt;inductance&lt;/a&gt; as is usual, then closing the switch would connect points at different voltage with a perfect conductor,  causing an infinite current to flow.  Therefore a solution requires that one or more of the 'ideal' characteristics of the elements in the circuit be relaxed, which was not specified in the above description.  The solution differs depending on which of the assumptions about the actual characteristics of the circuit elements is abandoned:   
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the wires are assumed to have inductance but no resistance, the current will not be infinite, but the circuit still does not have any energy dissipating components, so it will not settle to a steady state, as assumed in the description. It will constitute an &lt;a href=&quot;https://en.wikipedia.org/wiki/LC_circuit&quot; title=&quot;LC circuit&quot;&gt;LC circuit&lt;/a&gt; with no &lt;a href=&quot;https://en.wikipedia.org/wiki/Damping&quot; class=&quot;mw-redirect&quot; title=&quot;Damping&quot;&gt;damping&lt;/a&gt;, so the charge will oscillate perpetually back and forth between the two capacitors; the voltage on the two capacitors plus the current will vary sinusoidally.  None of the initial energy will be lost, at any point the sum of the energy in the two capacitors and the energy stored in the magnetic field around the wires will equal the initial energy.&lt;/li&gt;
&lt;li&gt;If the connecting wires, in addition to having inductance and no resistance, are assumed to have a nonzero length, the oscillating circuit will act as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Antenna_(radio)&quot; title=&quot;Antenna (radio)&quot;&gt;antenna&lt;/a&gt; and lose energy by radiating &lt;a href=&quot;https://en.wikipedia.org/wiki/Electromagnetic_wave&quot; class=&quot;mw-redirect&quot; title=&quot;Electromagnetic wave&quot;&gt;electromagnetic waves&lt;/a&gt; (radio waves).  The effect of this energy loss is exactly the same as if there were a resistance called the &lt;a href=&quot;https://en.wikipedia.org/wiki/Radiation_resistance&quot; title=&quot;Radiation resistance&quot;&gt;radiation resistance&lt;/a&gt; in the circuit, so the circuit will be equivalent to an &lt;a href=&quot;https://en.wikipedia.org/wiki/RLC_circuit&quot; title=&quot;RLC circuit&quot;&gt;RLC circuit&lt;/a&gt;.   The oscillating current in the wires will be an &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_decay&quot; title=&quot;Exponential decay&quot;&gt;exponentially decaying&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Sinusoid&quot; class=&quot;mw-redirect&quot; title=&quot;Sinusoid&quot;&gt;sinusoid&lt;/a&gt;.  Since none of the original charge is lost, the final state of the capacitors will be as described above, with half the initial voltage on each capacitor.  Since in this state the capacitors contain half the initial energy, the missing half of the energy will have been radiated away by the electromagnetic waves.&lt;/li&gt;
&lt;li&gt;If the wires are assumed to have any nonzero resistance at all, it is an &lt;a href=&quot;https://en.wikipedia.org/wiki/RC_circuit&quot; title=&quot;RC circuit&quot;&gt;RC circuit&lt;/a&gt;, and the current will &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_decay&quot; title=&quot;Exponential decay&quot;&gt;decrease exponentially&lt;/a&gt; to zero.  As in the previous case, since no charge is lost, the circuit will settle into the static final state as described above.  Since in this state the two capacitors together are left with half the energy,  regardless of the amount of resistance half of the initial energy will be dissipated as heat in the wire resistance.&lt;/li&gt;
&lt;li&gt;If in addition to resistance and inductance the wires have nonzero length and act as an antenna, the total energy loss will be the same, but will be divided between the radiated electromagnetic waves and heat dissipated in the resistance.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Various additional solutions have been devised, based on more detailed assumptions about the characteristics of the components.
&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;Alternate_versions&quot;&gt;Alternate versions&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;There are several alternate versions of the paradox.  One is the original circuit with the two capacitors initially charged with equal and opposite voltages &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle +V_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle +V_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/712d10fdec2e78b849829355523391bf646df9be&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:3.963ex; height:2.509ex;&quot; alt=&quot;{\displaystyle +V_{i}}&quot;/&gt;&lt;/span&gt; and &lt;span class=&quot;mwe-math-element&quot;&gt;&lt;span class=&quot;mwe-math-mathml-inline mwe-math-mathml-a11y&quot; style=&quot;display: none;&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; alttext=&quot;{\displaystyle -V_{i}}&quot;&gt;&lt;semantics&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mstyle displaystyle=&quot;true&quot; scriptlevel=&quot;0&quot;&gt;&lt;mo&gt;−&lt;!-- &amp;minus; --&gt;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;{\displaystyle -V_{i}}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/415ae691b92db16b60a8300bcfe6eec71eeb720c&quot; class=&quot;mwe-math-fallback-image-inline&quot; aria-hidden=&quot;true&quot; style=&quot;vertical-align: -0.671ex; width:3.963ex; height:2.509ex;&quot; alt=&quot;{\displaystyle -V_{i}}&quot;/&gt;&lt;/span&gt;.  Another equivalent version is a single charged capacitor &lt;a href=&quot;https://en.wikipedia.org/wiki/Short_circuit&quot; title=&quot;Short circuit&quot;&gt;short circuited&lt;/a&gt; by a perfect conductor.  In these cases in the final state the entire charge has been neutralized, the final voltage on the capacitors is zero, so the entire initial energy has vanished.  The solutions to where the energy went are similar to those described in the previous section.
&lt;/p&gt;
&lt;h2&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;References&quot;&gt;References&lt;/span&gt;&lt;/h2&gt;
&lt;div class=&quot;reflist&quot; style=&quot;list-style-type: decimal;&quot;&gt;
&lt;div class=&quot;mw-references-wrap&quot;&gt;&lt;ol class=&quot;references&quot;&gt;&lt;li id=&quot;cite_note-Tam-1&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-Tam_1-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFTam&quot; class=&quot;citation web&quot;&gt;Tam. &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.users.on.net/~ithilien/tam/electronics/CapacitorParadox.html&quot;&gt;&quot;Capacitor Paradox&quot;&lt;/a&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;12 June&lt;/span&gt; 2018&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;amp;rft.genre=unknown&amp;amp;rft.btitle=Capacitor+Paradox&amp;amp;rft.au=Tam&amp;amp;rft_id=http%3A%2F%2Fwww.users.on.net%2F~ithilien%2Ftam%2Felectronics%2FCapacitorParadox.html&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt;&lt;style data-mw-deduplicate=&quot;TemplateStyles:r951705291&quot;&gt;&lt;![CDATA[.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:&quot;\&quot;&quot;&quot;\&quot;&quot;&quot;'&quot;&quot;'&quot;}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg&quot;);background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background-image:url(&quot;//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png&quot;);background-image:linear-gradient(transparent,transparent),url(&quot;//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg&quot;);background-repeat:no-repeat;background-size:12px;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}]]&gt;&lt;/style&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-Levine-2&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-Levine_2-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFLevine1967&quot; class=&quot;citation journal&quot;&gt;Levine, Richard C. (December 1967). &quot;Apparent Nonconservation of Energy in the Discharge of an Ideal Capacitor&quot;. &lt;i&gt;IEEE Transactions on Education&lt;/i&gt;. Institute of Electrical and Electronic Engineers. &lt;b&gt;10&lt;/b&gt; (4): 197–202. &lt;a href=&quot;https://en.wikipedia.org/wiki/Bibcode_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Bibcode (identifier)&quot;&gt;Bibcode&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://ui.adsabs.harvard.edu/abs/1967ITEdu..10..197L&quot;&gt;1967ITEdu..10..197L&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Doi_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Doi (identifier)&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1109%2FTE.1967.4320288&quot;&gt;10.1109/TE.1967.4320288&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/ISSN_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;ISSN (identifier)&quot;&gt;ISSN&lt;/a&gt; &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.worldcat.org/issn/1557-9638&quot;&gt;1557-9638&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=IEEE+Transactions+on+Education&amp;amp;rft.atitle=Apparent+Nonconservation+of+Energy+in+the+Discharge+of+an+Ideal+Capacitor&amp;amp;rft.volume=10&amp;amp;rft.issue=4&amp;amp;rft.pages=197-202&amp;amp;rft.date=1967-12&amp;amp;rft.issn=1557-9638&amp;amp;rft_id=info%3Adoi%2F10.1109%2FTE.1967.4320288&amp;amp;rft_id=info%3Abibcode%2F1967ITEdu..10..197L&amp;amp;rft.aulast=Levine&amp;amp;rft.aufirst=Richard+C.&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-McDonald-3&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-McDonald_3-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFMcDonald2018&quot; class=&quot;citation journal&quot;&gt;McDonald, Kirk T. (11 January 2018). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://www.physics.princeton.edu/~mcdonald/examples/twocaps.pdf&quot;&gt;&quot;A Capacitor Paradox&quot;&lt;/a&gt; &lt;span class=&quot;cs1-format&quot;&gt;(PDF)&lt;/span&gt;. Physics Dept., Princeton University&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;12 June&lt;/span&gt; 2018&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.atitle=A+Capacitor+Paradox&amp;amp;rft.date=2018-01-11&amp;amp;rft.aulast=McDonald&amp;amp;rft.aufirst=Kirk+T.&amp;amp;rft_id=http%3A%2F%2Fwww.physics.princeton.edu%2F~mcdonald%2Fexamples%2Ftwocaps.pdf&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt; &lt;span class=&quot;cs1-hidden-error error citation-comment&quot;&gt;Cite journal requires &lt;code class=&quot;cs1-code&quot;&gt;|journal=&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Help:CS1_errors#missing_periodical&quot; title=&quot;Help:CS1 errors&quot;&gt;help&lt;/a&gt;)&lt;/span&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-Zucker-4&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-Zucker_4-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFZucker1955&quot; class=&quot;citation journal&quot;&gt;Zucker, Charles (October 1955). &quot;Condenser problem&quot;. &lt;i&gt;American Journal of Physics&lt;/i&gt;. American Association of Physics Teachers. &lt;b&gt;23&lt;/b&gt; (7): 469. &lt;a href=&quot;https://en.wikipedia.org/wiki/Bibcode_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Bibcode (identifier)&quot;&gt;Bibcode&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://ui.adsabs.harvard.edu/abs/1955AmJPh..23..469Z&quot;&gt;1955AmJPh..23..469Z&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Doi_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Doi (identifier)&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1119%2F1.1934050&quot;&gt;10.1119/1.1934050&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=American+Journal+of+Physics&amp;amp;rft.atitle=Condenser+problem&amp;amp;rft.volume=23&amp;amp;rft.issue=7&amp;amp;rft.pages=469&amp;amp;rft.date=1955-10&amp;amp;rft_id=info%3Adoi%2F10.1119%2F1.1934050&amp;amp;rft_id=info%3Abibcode%2F1955AmJPh..23..469Z&amp;amp;rft.aulast=Zucker&amp;amp;rft.aufirst=Charles&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-Mita-5&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-Mita_5-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFMitaBoufaida1999&quot; class=&quot;citation journal&quot;&gt;Mita, K.; Boufaida, M. (August 1999). &quot;Ideal capacitor circuits and energy conservation&quot;. &lt;i&gt;American Journal of Physics&lt;/i&gt;. American Association of Physics Teachers. &lt;b&gt;67&lt;/b&gt; (8): 737. &lt;a href=&quot;https://en.wikipedia.org/wiki/Bibcode_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Bibcode (identifier)&quot;&gt;Bibcode&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://ui.adsabs.harvard.edu/abs/1999AmJPh..67..737M&quot;&gt;1999AmJPh..67..737M&lt;/a&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Doi_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;Doi (identifier)&quot;&gt;doi&lt;/a&gt;:&lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://doi.org/10.1119%2F1.19363&quot;&gt;10.1119/1.19363&lt;/a&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=American+Journal+of+Physics&amp;amp;rft.atitle=Ideal+capacitor+circuits+and+energy+conservation&amp;amp;rft.volume=67&amp;amp;rft.issue=8&amp;amp;rft.pages=737&amp;amp;rft.date=1999-08&amp;amp;rft_id=info%3Adoi%2F10.1119%2F1.19363&amp;amp;rft_id=info%3Abibcode%2F1999AmJPh..67..737M&amp;amp;rft.aulast=Mita&amp;amp;rft.aufirst=K.&amp;amp;rft.au=Boufaida%2C+M.&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li id=&quot;cite_note-Epsilon-6&quot;&gt;&lt;span class=&quot;mw-cite-backlink&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Two_capacitor_paradox#cite_ref-Epsilon_6-0&quot;&gt;^&lt;/a&gt;&lt;/b&gt;&lt;/span&gt; &lt;span class=&quot;reference-text&quot;&gt;&lt;cite id=&quot;CITEREFEpsilon1978&quot; class=&quot;citation journal&quot;&gt;Epsilon (December 1978). &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.americanradiohistory.com/Archive-Wireless-World/70s/Wireless-World-1978-12.pdf&quot;&gt;&quot;Did you know?&quot;&lt;/a&gt; &lt;span class=&quot;cs1-format&quot;&gt;(PDF)&lt;/span&gt;. &lt;i&gt;Wireless World&lt;/i&gt;. London: IPC Business Press, Ltd. &lt;b&gt;84&lt;/b&gt; (1516): 67. &lt;a href=&quot;https://en.wikipedia.org/wiki/ISSN_(identifier)&quot; class=&quot;mw-redirect&quot; title=&quot;ISSN (identifier)&quot;&gt;ISSN&lt;/a&gt; &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;https://www.worldcat.org/issn/0043-6062&quot;&gt;0043-6062&lt;/a&gt;&lt;span class=&quot;reference-accessdate&quot;&gt;. Retrieved &lt;span class=&quot;nowrap&quot;&gt;12 June&lt;/span&gt; 2018&lt;/span&gt;.&lt;/cite&gt;&lt;span title=&quot;ctx_ver=Z39.88-2004&amp;amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;amp;rft.genre=article&amp;amp;rft.jtitle=Wireless+World&amp;amp;rft.atitle=Did+you+know%3F&amp;amp;rft.volume=84&amp;amp;rft.issue=1516&amp;amp;rft.pages=67&amp;amp;rft.date=1978-12&amp;amp;rft.issn=0043-6062&amp;amp;rft.au=Epsilon&amp;amp;rft_id=https%3A%2F%2Fwww.americanradiohistory.com%2FArchive-Wireless-World%2F70s%2FWireless-World-1978-12.pdf&amp;amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATwo+capacitor+paradox&quot; class=&quot;Z3988&quot;/&gt;&lt;link rel=&quot;mw-deduplicated-inline-style&quot; href=&quot;mw-data:TemplateStyles:r951705291&quot;/&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!-- 
NewPP limit report
Parsed by mw1290
Cached time: 20200525195711
Cache expiry: 2592000
Dynamic content: false
Complications: [vary&amp;#8208;revision&amp;#8208;sha1]
CPU time usage: 0.148 seconds
Real time usage: 0.222 seconds
Preprocessor visited node count: 437/1000000
Post&amp;#8208;expand include size: 11319/2097152 bytes
Template argument size: 85/2097152 bytes
Highest expansion depth: 8/40
Expensive parser function count: 0/500
Unstrip recursion depth: 1/20
Unstrip post&amp;#8208;expand size: 24932/5000000 bytes
Number of Wikibase entities loaded: 0/400
Lua time usage: 0.080/10.000 seconds
Lua memory usage: 2.53 MB/50 MB
--&gt;
&lt;!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  148.490      1 Template:Reflist
100.00%  148.490      1 -total
 63.16%   93.783      1 Template:Cite_web
 16.21%   24.073      4 Template:Cite_journal
  6.97%   10.351      1 Template:Cite_document
  2.17%    3.219      1 Template:Main_other
--&gt;

&lt;!-- Saved in parser cache with key enwiki:pcache:idhash:57671069-0!canonical!math=5 and timestamp 20200525195711 and revision id 958803573
 --&gt;
&lt;/div&gt;&lt;noscript&gt;&lt;img src=&quot;https://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1&quot; alt=&quot;&quot; title=&quot;&quot; width=&quot;1&quot; height=&quot;1&quot; style=&quot;border: none; position: absolute;&quot;/&gt;&lt;/noscript&gt;&lt;/div&gt;
		&lt;div class=&quot;printfooter&quot;&gt;Retrieved from &quot;&lt;a dir=&quot;ltr&quot; href=&quot;https://en.wikipedia.org/w/index.php?title=Two_capacitor_paradox&amp;amp;oldid=958803573&quot;&gt;https://en.wikipedia.org/w/index.php?title=Two_capacitor_paradox&amp;amp;oldid=958803573&lt;/a&gt;&quot;&lt;/div&gt;
		
		&lt;div class=&quot;visualClear&quot;/&gt;
		
	</description>
<pubDate>Mon, 25 May 2020 14:21:48 +0000</pubDate>
<dc:creator>rathel</dc:creator>
<og:image>https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Two_capacitor_paradox.svg/1200px-Two_capacitor_paradox.svg.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://en.wikipedia.org/wiki/Two_capacitor_paradox</dc:identifier>
</item>
<item>
<title>Swiss companies must pay share of rent for employees working from home</title>
<link>https://www.swissinfo.ch/eng/court-decision_companies-must-pay-share-of-rent-for-employees-working-from-home/45781126</link>
<guid isPermaLink="true" >https://www.swissinfo.ch/eng/court-decision_companies-must-pay-share-of-rent-for-employees-working-from-home/45781126</guid>
<description>&lt;div class=&quot;teaser-in-article&quot;&gt;
&lt;div class=&quot;edged&quot;&gt;
&lt;div class=&quot;item first-item w2 picture&quot;&gt;
&lt;div&gt;&lt;img src=&quot;https://www.swissinfo.ch/image/45781116/3x2/305/203/8d483e39ede6777c5ea8e5162cef94c3/ic/home-office.jpg&quot; data-interchange=&quot;[/image/45781116/3x2/305/203/8d483e39ede6777c5ea8e5162cef94c3/ic/home-office.jpg, (img_small)],[/image/45781116/3x2/640/426/8d483e39ede6777c5ea8e5162cef94c3/ZZ/home-office.jpg, (img_medium)]&quot; alt=&quot;home office&quot; title=&quot;Whether an employee did or did not rent an additional room or a larger apartment to work from home was also irrelevant according to the court’s ruling. (© Keystone / Christian Beutler)&quot; itemprop=&quot;https://schema.org/image&quot; class=&quot;var-&quot;/&gt;&lt;/div&gt;
&lt;p&gt;Whether an employee did or did not rent an additional room or a larger apartment to work from home was also irrelevant according to the court’s ruling.&lt;br/&gt;&lt;/p&gt;
&lt;cite class=&quot;source&quot;&gt;(© Keystone / Christian Beutler)&lt;/cite&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;lead-text&quot;&gt;German-language paper Tages-Anzeiger reports that Switzerland’s top court has ruled that employers are required to contribute to employees’ rent payments if they are expected to work from home.&lt;/p&gt;
&lt;p&gt;According to the &lt;a rel=&quot;external&quot; href=&quot;https://www.tagesanzeiger.ch/bundesgericht-verknurrt-arbeitgeber-zu-homeoffice-entschaedigung-287707410182&quot;&gt;paper&lt;span class=&quot;show-for-sr&quot;&gt;external link&lt;/span&gt;&lt;/a&gt;, the federal court decision, which has not been made public, concerns an &lt;a rel=&quot;external&quot; href=&quot;http://relevancy.bger.ch/php/aza/http/index.php?highlight_docid=aza%3A%2F%2F23-04-2019-4A_533-2018&amp;amp;lang=de&amp;amp;type=show_document&quot;&gt;accounting firm&lt;span class=&quot;show-for-sr&quot;&gt;external link&lt;/span&gt;&lt;/a&gt; that had let an employee work from home.&lt;/p&gt;
&lt;p&gt;The company argued that they had not reached an agreement with the employee ahead of time and therefore was not obligated to cover part of his rent. The court rejected this argument and added that the employee could even request rent compensation retroactively after leaving the company.&lt;/p&gt;
&lt;p&gt;Whether an employee did or did not rent an additional room or a larger apartment to work from home was also irrelevant according to the court’s ruling. The judges estimated a monthly compensation of CHF150 ($154) for the employee’s rent to be justified.&lt;/p&gt;
&lt;p&gt;This is the first time Switzerland’s highest court has dealt with the topic of rent allowances for employees working from home. Thomas Geiser, a professor of labor law at the University of St Gallen, told the paper that the verdict is not surprising as the “law obliges employers to reimburse their employees for all expenses incurred to carry out their work”.&lt;/p&gt;
&lt;p&gt;Geiser points out that the decision applies to employees who work from home upon the employer’s request. However, employees that work from home on their own behest may not receive rental compensation.&lt;/p&gt;
&lt;p&gt;For some trade union representatives this leaves out some workers, who may not be contractually obliged to work from home but may be driven to do so because of a range of reasons. Luca Cirigliano, General Secretary of the Swiss Confederation of Trade Unions, told the paper that companies often use flexible workstations in order to save money on office rent.&lt;/p&gt;
&lt;p&gt;It is extremely unfair as well as illegal for employers to pass costs on to employees in this way, Cirigliano told the paper.&lt;/p&gt;
&lt;p&gt;The decision comes during an unprecedented increase in working from home due to the coronavirus pandemic. Some employers are exploring whether to extend flexible work arrangements and make “home office” a mainstay for some employees.&lt;/p&gt;


&lt;address&gt;
&lt;p&gt;&lt;span itemprop=&quot;publisher&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/Organization&quot;&gt;&lt;span itemprop=&quot;logo&quot; itemscope=&quot;&quot; itemtype=&quot;https://schema.org/ImageObject&quot;/&gt; &lt;span itemprop=&quot;name&quot;&gt;Tages-Anzeiger/jdp&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/address&gt;

&lt;div class=&quot;embed-in-article html-fragment external&quot;&gt;
&lt;div class=&quot;edged&quot;&gt;
&lt;div aria-describedby=&quot;html-fragment-43546512&quot;&gt;
&lt;h3 class=&quot;show-for-sr&quot;&gt;Neuer Inhalt&lt;/h3&gt;
&lt;p id=&quot;html-fragment-43546512&quot; class=&quot;show-for-sr&quot;&gt;Horizontal Line&lt;/p&gt;
&lt;hr/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;embed-in-article html-fragment external&quot;&gt;
&lt;div class=&quot;edged&quot;&gt;
&lt;div aria-describedby=&quot;html-fragment-45760212&quot;&gt;
&lt;h3 class=&quot;show-for-sr&quot;&gt;The citizens' meeting&lt;/h3&gt;
&lt;p id=&quot;html-fragment-45760212&quot; class=&quot;show-for-sr&quot;&gt;How the Swiss are moving back to the mountains&lt;/p&gt;
&lt;a href=&quot;https://stories.swissinfo.ch/how-the-swiss-are-moving-back-to-the-mountains?utm_campaign=200518_200524_longform_bergwelt&amp;amp;utm_medium=display&amp;amp;utm_source=swissinfoch&amp;amp;utm_content=o&quot;&gt;&lt;img src=&quot;https://www.swissinfo.ch/blob/45759722/90460684ef398e91b9f4aed4aff21fcd/nl_alps-eng-data.png&quot; alt=&quot;How the Swiss are moving back to the mountains&quot; width=&quot;100%&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;embed-in-article html-fragment external&quot;&gt;
&lt;div class=&quot;edged&quot;&gt;
&lt;div aria-describedby=&quot;html-fragment-42152632&quot;&gt;
&lt;h3 class=&quot;show-for-sr&quot;&gt;subscription form&lt;/h3&gt;
&lt;p id=&quot;html-fragment-42152632&quot; class=&quot;show-for-sr&quot;&gt;Form for signing up for free newsletter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sign up for our free newsletters and get the top stories delivered to your inbox.&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
<pubDate>Mon, 25 May 2020 12:25:36 +0000</pubDate>
<dc:creator>malthaus</dc:creator>
<og:image>https://www.swissinfo.ch/image/45781116/2x1/1200/630/68d586a89f431f1998250e86f4696c09/sd/home-office.jpg</og:image>
<og:type>article</og:type>
<og:title>Companies must pay share of rent for employees working from home</og:title>
<og:description>According to media reports, Switzerland’s top court has ruled that employers are required to contribute to employees’ rent if they work from home.</og:description>
<og:url>https://www.swissinfo.ch/eng/business/court-decision_companies-must-pay-share-of-rent-for-employees-working-from-home/45781126</og:url>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.swissinfo.ch/eng/court-decision_companies-must-pay-share-of-rent-for-employees-working-from-home/45781126</dc:identifier>
</item>
<item>
<title>Org Mode – Organize Your Life in Plain Text</title>
<link>http://doc.norang.ca/org-mode.html</link>
<guid isPermaLink="true" >http://doc.norang.ca/org-mode.html</guid>
<description>&lt;p&gt;Okay, I admit it. I'm a clocking fanatic.&lt;/p&gt;
&lt;p&gt;I clock everything at work. Org-mode makes this really easy. I'd rather clock too much stuff than not enough so I find it's easier to get in the habit of clocking everything.&lt;/p&gt;
&lt;p&gt;This makes it possible to look back at the day and see where I'm spending too much time, or not enough time on specific projects. This also helps a lot when you need to estimate how long something is going to take to do – you can use your clocking data from similar tasks to help tune your estimates so they are more accurate.&lt;/p&gt;
&lt;p&gt;Without clocking data it's hard to tell how long something took to do after the fact.&lt;/p&gt;
&lt;p&gt;I now use the concept of &lt;code&gt;punching in&lt;/code&gt; and &lt;code&gt;punching out&lt;/code&gt; at the start and end of my work day. I punch in when I arrive at work, punch out for lunch, punch in after lunch, and punch out at the end of the day. Every minute is clocked between punch-in and punch-out times.&lt;/p&gt;
&lt;p&gt;Punching in defines a default task to clock time on whenever the clock would normally stop. I found that with the default org-mode setup I would lose clocked minutes during the day, a minute here, a minute there, and that all adds up. This is especially true if you write notes when moving to a DONE state - in this case the clock normally stops before you have composed the note – and good notes take a few minutes to write.&lt;/p&gt;
&lt;p&gt;My clocking setup basically works like this:&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;Punch in (start the clock)
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;This clocks in a predefined task by &lt;code&gt;org-id&lt;/code&gt; that is the default task to clock in whenever the clock normally stops&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Clock in tasks normally, and let moving to a DONE state clock out
&lt;ul class=&quot;org-ul&quot;&gt;&lt;li&gt;clocking out automatically clocks time on a parent task or moves back to the predefined default task if no parent exists.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Continue clocking whatever tasks you work on&lt;/li&gt;
&lt;li&gt;Punch out (stop the clock)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I'm free to change the default task multiple times during the day but with the clock moving up the project tree on clock out I no longer need to do this. I simply have a single task that gets clocked in when I punch-in.&lt;/p&gt;
&lt;p&gt;If I punch-in with a prefix on a task in &lt;code&gt;Project X&lt;/code&gt; then that task automatically becomes the default task and all clocked time goes on that project until I either punch out or punch in some other task.&lt;/p&gt;
&lt;p&gt;My org files look like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;todo.org&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;
&lt;span&gt;#+FILETAGS: PERSONAL&lt;/span&gt;
...
&lt;span&gt;* Tasks&lt;/span&gt;
&lt;span&gt;** Organization&lt;/span&gt;
&lt;span&gt;   :PROPERTIES:&lt;/span&gt;
   &lt;span&gt;:CLOCK_MODELINE_TOTAL:&lt;/span&gt; today
   &lt;span&gt;:ID:&lt;/span&gt;       eb155a82-92b2-4f25-a3c6-0304591af2f9
&lt;span&gt;   :END:&lt;/span&gt;
   ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I am working on some task, then I simply clock in on the task. Clocking out moves the clock up to a parent task with a todo keyword (if any) which keeps the clock time in the same subtree. If there is no parent task with a todo keyword then the clock moves back to the default clocking task until I punch out or clock in some other task. When an interruption occurs I start a capture task which keeps clocked time on the interruption task until I close it with C-c C-c.&lt;/p&gt;
&lt;p&gt;This works really well for me.&lt;/p&gt;
&lt;p&gt;For example, consider the following org file:&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;src src-org&quot;&gt;
&lt;span&gt;* &lt;/span&gt;&lt;span&gt;TODO&lt;/span&gt;&lt;span&gt; Project A&lt;/span&gt;
&lt;span&gt;** &lt;/span&gt;&lt;span&gt;NEXT&lt;/span&gt;&lt;span&gt; TASK 1&lt;/span&gt;
&lt;span&gt;** &lt;/span&gt;&lt;span&gt;TODO&lt;/span&gt;&lt;span&gt; TASK 2&lt;/span&gt;
&lt;span&gt;** &lt;/span&gt;&lt;span&gt;TODO&lt;/span&gt;&lt;span&gt; TASK 3&lt;/span&gt;
&lt;span&gt;* Tasks&lt;/span&gt;
&lt;span&gt;** &lt;/span&gt;&lt;span&gt;TODO&lt;/span&gt;&lt;span&gt; Some miscellaneous task&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'll work on this file in the following sequence:&lt;/p&gt;
&lt;ol class=&quot;org-ol&quot; readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;I punch in with &lt;code&gt;F9-I&lt;/code&gt; at the start of my day
&lt;p&gt;That clocks in the &lt;code&gt;Organization&lt;/code&gt; task by id in my &lt;code&gt;todo.org&lt;/code&gt; file.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;&lt;code&gt;F12-SPC&lt;/code&gt; to review my block agenda
&lt;p&gt;Pick 'TODO Some miscellaneous task' to work on next and clock that in with &lt;code&gt;I&lt;/code&gt; The clock is now on 'TODO Some miscellaneous task'&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;I complete that task and mark it done with &lt;code&gt;C-c C-t d&lt;/code&gt;
&lt;p&gt;This stops the clock and moves it back to the &lt;code&gt;Organization&lt;/code&gt; task.&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;0&quot;&gt;Now I want to work on &lt;code&gt;Project A&lt;/code&gt; so I clock in &lt;code&gt;Task 1&lt;/code&gt;
&lt;p&gt;I work on Task 1 and mark it &lt;code&gt;DONE&lt;/code&gt;. This clocks out &lt;code&gt;Task 1&lt;/code&gt; and moves the clock to &lt;code&gt;Project A&lt;/code&gt;. Now I work on &lt;code&gt;Task 2&lt;/code&gt; and clock that in.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;The entire time I'm working on and clocking some subtask of &lt;code&gt;Project A&lt;/code&gt; all of the clock time in the interval is applied somewhere to the &lt;code&gt;Project A&lt;/code&gt; tree. When I eventually mark &lt;code&gt;Project A&lt;/code&gt; done then the clock will move back to the default organization task.&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 11:24:35 +0000</pubDate>
<dc:creator>gjvc</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://doc.norang.ca/org-mode.html</dc:identifier>
</item>
<item>
<title>Software will eat software in a remote-first world</title>
<link>https://themargins.substack.com/p/software-will-eat-software-in-a-remote</link>
<guid isPermaLink="true" >https://themargins.substack.com/p/software-will-eat-software-in-a-remote</guid>
<description>&lt;p&gt;&lt;em&gt;Hi, &lt;a href=&quot;https://twitter.com/can&quot;&gt;Can&lt;/a&gt; here! Today, we talk about remote work.&lt;/em&gt;&lt;/p&gt;
&lt;a class=&quot;image-link image2&quot; target=&quot;_blank&quot; href=&quot;https://cdn.substack.com/image/fetch/c_limit,f_auto,q_auto:good/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd53c0991-fc5d-4528-a8a1-e25463920a56_512x369.jpeg&quot;&gt;&lt;img src=&quot;https://cdn.substack.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd53c0991-fc5d-4528-a8a1-e25463920a56_512x369.jpeg&quot; data-attrs=&quot;{&amp;quot;src&amp;quot;:&amp;quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/d53c0991-fc5d-4528-a8a1-e25463920a56_512x369.jpeg&amp;quot;,&amp;quot;height&amp;quot;:369,&amp;quot;width&amp;quot;:512,&amp;quot;resizeWidth&amp;quot;:null,&amp;quot;bytes&amp;quot;:null,&amp;quot;alt&amp;quot;:&amp;quot;2-rent.com | Telepresence robot | N/A&amp;quot;,&amp;quot;title&amp;quot;:null,&amp;quot;type&amp;quot;:null,&amp;quot;href&amp;quot;:null}&quot; alt=&quot;2-rent.com | Telepresence robot | N/A&quot;/&gt;&lt;/a&gt;
&lt;p&gt;As someone who works in &lt;em&gt;software&lt;/em&gt; and lives in the &lt;em&gt;world&lt;/em&gt;, the idea of software eating the world has been top of mind for quite some time. I mean, I don’t think we should remake the world in the image of software and definitely not in that of the software people, but I do think we are in a time of transformational change in our societies because of it. At the same time, if software is eating the world, I do think that it should take a breather before taking another bite.&lt;/p&gt;
&lt;p&gt;Meanwhile, one of my related, and if not slightly &lt;em&gt;contrarian&lt;/em&gt; bets around software and its dietary habits has been “software is eating software”. We are coming to a point where software is developing so fast and the abstractions getting better that soon we will have more software written by a smaller number of people. In other words, just like software made legions of people working in other industries obsolete, it will soon make its creators less valuable too. In short, software will eat software. Or maybe, software will eat software people? I’m still working on it…&lt;/p&gt;
&lt;p&gt;I’ve been thinking of this for a while now, but the recent announcement from various large tech companies on how they are going full-remote has brought it into full focus for me. &lt;a href=&quot;https://www.buzzfeednews.com/article/alexkantrowitz/twitter-will-allow-employees-to-work-at-home-forever&quot;&gt;Twitter started it&lt;/a&gt; (bear with me), &lt;a href=&quot;https://blog.coinbase.com/post-covid-19-coinbase-will-be-a-remote-first-company-cdac6e621df7&quot;&gt;Coinbase joined&lt;/a&gt; and now &lt;a href=&quot;https://www.nytimes.com/2020/05/21/business/coronavirus-stock-market-today.html&quot;&gt;Facebook is joining too&lt;/a&gt;. Many tech firms, particularly those in Silicon Valley and Seattle, have been in Work from Home (WFH) mode for a while, but more are now saying that they’ll “lean” more into it, by turning the current setup where people do not regularly come into an office permanent.&lt;/p&gt;
&lt;p&gt;Obviously, none of this is really new, as many other firms like Gitlab have been fully distributed &lt;a href=&quot;https://about.gitlab.com/company/culture/all-remote/&quot;&gt;from day one.&lt;/a&gt; Other firms like Stripe had hybrid approaches where there is still an HQ but remote workers are considered as part of an “&lt;a href=&quot;https://stripe.com/blog/remote-hub&quot;&gt;office-in-the-cloud&lt;/a&gt;” of some sorts. And even the most remote-unfriendly companies have a few people who are able to pull off working remotely, generally through some form of nepotism, organizational apathy, politics, and occasionally genuine need. But, whatever the terms are, it does seem like a huge, very accelerated switch to how the next generation of tech companies will operate is in progress. And we are nowhere near figuring out what that will all mean.&lt;/p&gt;
&lt;p&gt;I believe one of the more subtle impacts of this new way of working will be the tech workers losing some of the leverage they have over their employers. &lt;strong&gt;This will result in the further commodification of tech work, potentially less collective action by employees, and probably lower the salaries in the long run&lt;/strong&gt;. Put another way, the technology industry will soon get a taste of what has been going on in other industries.&lt;/p&gt;
&lt;h2&gt;No-Code means No-Coders&lt;/h2&gt;
&lt;p&gt;Start with the commodification of work.  As a former software engineer, I’ve seen first-hand how fast this happens already. In my first job at a small start-up, we had tons of physical servers. Now, it’s hard to imagine any &quot;webby” tech company ever interacting with any hardware at all. Whatever it took multiple ops people is now a few buttons and links on an AWS console. But, the impact of increasing abstractions in technology is more subtle than that and is hard to appreciate unless you work in the weeds of tech day-to-day.&lt;/p&gt;
&lt;p&gt;We have come to a place where thanks to many libraries and frameworks, and overall improving software, what would’ve once used many developers to build from scratch is now more often than not, a bunch of people plumbing different things together. Software is creating software faster than we can use it. This is also why you are seeing so many of these “no-code” or “low-code” solutions pop up all over the place. There are increasingly fewer reasons to write code, and those who are writing code should, and do, increasingly write less of it. This will only be more accelerated by shifting to remote work due to how it’s going to change how we decide what code to write.&lt;/p&gt;
&lt;p&gt;Again, I’ve seen this. When I was at Uber, we had to develop some unique technology due to our scale and unique problems, but a lot of what many people (including me) did was translating the business requirements into code using off-the-shelf technologies. As workers are more and more removed from the business, companies will get better at identifying what can be “automated”.&lt;/p&gt;
&lt;p&gt;Anyone who’s spent a few months at a sizable tech company can tell you that a lot of software seems to exist primarily &lt;em&gt;because&lt;/em&gt; companies have hired people to write and maintain them. In some ways, the software serves not the business, but the people who have written it, and then those who need to maintain it. This is stupid, but also very, very true.&lt;/p&gt;
&lt;p&gt;When you don’t have to think about the people, but can simply reduce them to their contributions, it becomes a much easier mental task to figure out how you can get rid of the human part. In some ways, this is a prosocial artifact of our wiring: when the times are good, people are less inclined to think of ways to fire people by automating them out of a job. Tougher times with strained margins change that calculus. But it is also partly a cognitive load issue. When you can actually remove the human from the equation, it becomes mentally easier to figure out how you could actually not write that piece of code over and over again. This is a lesson Marx figured out when he mused on alienation and is a dark one that the techies will also be learning quite soon.&lt;/p&gt;
&lt;p&gt;I don’t mean to imply that we should jettison people out of jobs because it’s the right thing to do for the bottom line. In fact, the opposite might be true. When I give people advice about jobs, I tell them once you’ve got an offer or two where your main requirements are met, you should decide primarily based on who your coworkers will be. For better or worse, work is how many people socialize for significant parts of the day. As someone who’s relatively extraverted, the lack of social interaction with my coworkers during this quarantine has been quite detrimental to my mental well-being already.&lt;/p&gt;
&lt;h2&gt;Borders Rule Everything Around Me&lt;/h2&gt;
&lt;p&gt;Let’s switch to salaries. I’ve talked about &lt;a href=&quot;https://themargins.substack.com/p/the-good-the-bad-and-the-ugly-of&quot;&gt;this before&lt;/a&gt; but here’s a short recap of how salaries are calculated. Most people would like to believe salaries are determined by a cost-plus model, where you get a tiny bit less than the value you add to the company. However, in reality, they are really determined by the competition. Companies are forced to pay as much as possible to keep the talent for leaving. In a competitive labor market, this is often a good thing for the employees.&lt;/p&gt;
&lt;p&gt;Obviously, things can get quite weird when you take this model to its logical end. In the Bay Area, where the companies are giant, the geography tiny and the housing policies extremely questionable, this has resulted in salaries ballooning to insane levels. Getting a six-figure salary straight out of college barely raises an eyebrow anymore at many big firms. Companies have gone to great lengths, including some &lt;a href=&quot;https://www.reuters.com/article/us-apple-google-lawsuit-exclusive/exclusive-apple-google-to-pay-324-million-to-settle-conspiracy-lawsuit-idUSBREA3N28Z20140425&quot;&gt;illegal ones&lt;/a&gt; to curb this competitive behavior to depress the salaries.&lt;/p&gt;
&lt;p&gt;The remote-first mentality will be a god-send simply because you’ll no longer be restricted to a tiny piece of land with a questionable housing policy to source your talent. People estimate 40% of all VC funding going to landlords in the Bay, and I think that’s too conservative.&lt;/p&gt;
&lt;p&gt;Again, this is a touchy topic. When Facebook announced they would be “localizing” salaries, there was a decent pushback on Twitter. Blair Reeves, a friend, and an occasional &lt;a href=&quot;https://themargins.substack.com/p/the-rise-of-distributed-teams&quot;&gt;Margins contributor&lt;/a&gt; (on remote teams) wrote a &lt;a href=&quot;http://blairreeves.me/2020/05/22/paying-remote-employees-fairly/&quot;&gt;persuasive piece&lt;/a&gt; on how companies should people based on what value they add, not pay them differently based on where they want to live. In some ways, I understand. People who live in more expensive neighborhoods in NYC or SF should not get paid more than those who decide to live farther away.&lt;/p&gt;
&lt;p&gt;At the same time, I also think with companies as big as Facebook, at some point it becomes untenable to pay someone living in Turkey (or a cheaper US city) the same amount to those living in San Francisco. A huge American company paying Turkish people American salaries would be good for those employees, but it’d put an insane burden on other Turkish companies. Not localizing the pay would be a centralizing force for larger companies with nationwide or global reach.&lt;/p&gt;
&lt;h2&gt;Remote-First, Collective-Last&lt;/h2&gt;
&lt;p&gt;Lastly, let’s talk about the impact of remote-first on labor. Many months, before the virus hit, a CEO friend of mine “jokingly” told me that he believed all the “remote” buzz was as much about reducing the collective power of the employees as it was about saving a dime on salaries. He personally did not want his company to go full-remote but was under some pressure from investors to consider it. We were both hammered at the time, and I didn’t put too much thought into it, but it feels right the more I think about it.&lt;/p&gt;
&lt;p&gt;Again, according to the seating chart theory of organizational behavior, it seems like employees who spend more time with each other would find it easier to connect, bond, find common ground, and be able to form a cohesive group. Collective action in the tech industry has been a big sore thumb for many of the tech companies, especially since Trump become president. And here, I actually do have sympathy for the management.&lt;/p&gt;
&lt;p&gt;For a long time, most American companies could ignore the politics of their employees, &lt;a href=&quot;https://themargins.substack.com/p/a-place-to-not-just-live-but-breathe&quot;&gt;which is a feature&lt;/a&gt;, not a bug, of stable liberal democracies. However, having to straddle the thin line between becoming an accomplice of an at best incompetent, and at worst dangerous and vicious government while maintaining a happy-go-round workplace is no easy task. As the tech talent has woken up to their power, which they’ve previously used to get free breakfast and Herman Miller chairs, they’ve increasingly exercised it to get their bosses to make meaningful and painful-for-the-bottom-line changes, like &lt;a href=&quot;https://www.theguardian.com/technology/2018/nov/27/google-employees-letter-censored-search-engine-china-project-dragonfly&quot;&gt;dropping entire projects&lt;/a&gt;. Any company in their right mind would opt for a chance to break this stronghold.&lt;/p&gt;
&lt;p&gt;In a world where most employees are remote, this can be harder to do. Not only employees could be in touch with each other less, and in less personal ways, they might not be even able to do so without having non-monitored places. There will always be ways to employees to sneak around monitoring and surveillance, but it’ll be harder when everything is fully remote, and you’ll have less trust in those who will bond (or conspire with, depending on your POV) with you.&lt;/p&gt;
&lt;h2&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;This topic is really too big to fit in a single newsletter, and we are already at more than a thousand words. On the one hand, I do welcome these changes. I fundamentally believe that I’ve lucked into the technology industry, and many of the opportunities I’ve exploited were available to me because only I was in the right room at the right time, a few times quite literally so. If software eats the world, and we get rid of some of the geographical inequalities through it, that’d be an improvement.&lt;/p&gt;
&lt;p&gt;However, I do think that going head-first into a new way of working will only cement the centralizing forces at play with software. We already know, for example, how the software margins generally end up with larger companies who can erect big fixed-cost barriers earning disproportionately more. As software eats not the margins, but the societal frictions now, we can end up with a similar situation for the workplaces too. We can, maybe, stop software eating software before its too late.&lt;/p&gt;

&lt;p&gt;PS: A quick note from the &lt;a href=&quot;https://themargins.substack.com/p/links-on-the-margins-may-21st-2020&quot;&gt;last issue&lt;/a&gt;’s fundraiser for Frontline Foods. I’m still going through the list of people who have donated and reached out. You have not been forgotten, and I’ll hold my end of the deal! And if you haven’t donated, you still have time!&lt;/p&gt;
</description>
<pubDate>Mon, 25 May 2020 03:21:45 +0000</pubDate>
<dc:creator>sidhanthp</dc:creator>
<og:type>article</og:type>
<og:title>Software will eat software in a remote-first world</og:title>
<og:description>Is that a good thing?</og:description>
<og:image>https://cdn.substack.com/image/fetch/h_600,c_limit,f_auto,q_auto:good/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd53c0991-fc5d-4528-a8a1-e25463920a56_512x369.jpeg</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://themargins.substack.com/p/software-will-eat-software-in-a-remote</dc:identifier>
</item>
</channel>
</rss>