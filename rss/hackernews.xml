<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>New Linux port for the Nintendo 64</title>
<link>https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#m0862c3484e0da7195dc8989421d30f01b3b1c63a</link>
<guid isPermaLink="true" >https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#m0862c3484e0da7195dc8989421d30f01b3b1c63a</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;title&gt;[RFC 0/6] Nintendo 64 Linux port&lt;/title&gt;&lt;link rel=&quot;alternate&quot; title=&quot;Atom feed&quot; href=&quot;../../new.atom&quot; type=&quot;application/atom+xml&quot; /&gt;&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;../../null.css?0&quot; title=&quot;default&quot; /&gt;&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;../../216light.css?5dc3504d&quot; media=&quot;screen,(prefers-color-scheme:light)&quot; title=&quot;216light&quot; /&gt;&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;../../216dark.css?5d0a9431&quot; media=&quot;screen,(prefers-color-scheme:dark)&quot; title=&quot;216dark&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;39.512463768116&quot;&gt;

&lt;pre&gt;
&lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#e0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; id=&quot;m0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; name=&quot;m0862c3484e0da7195dc8989421d30f01b3b1c63a&quot;&gt;*&lt;/a&gt; &lt;u id=&quot;u&quot;&gt;&lt;strong&gt;[RFC 0/6] Nintendo 64 Linux port&lt;/strong&gt;&lt;/u&gt;
&lt;strong&gt;@ 2020-12-25 17:05 Lauri Kasanen&lt;/strong&gt;
  &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#r0862c3484e0da7195dc8989421d30f01b3b1c63a&quot;&gt;0 siblings, 0 replies; only message in thread&lt;/a&gt;
From: Lauri Kasanen @ 2020-12-25 17:05 UTC (&lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/&quot;&gt;permalink&lt;/a&gt; / &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/raw&quot;&gt;raw&lt;/a&gt;)
  To: linux-mips; &lt;strong&gt;+Cc:&lt;/strong&gt; tsbogend

Hi all,

Here's a port for the Nintendo 64.

At least two people have done such a port before, but didn't submit.
This is not based on either.

RFC because I'm not sure if it's useful to have this merged. Old,
niche, and limited platform.

&quot;But why&quot;, I hear from the back. Having Linux available makes it easier
to port emulators and fb or console games.
www.linux-mips.org/wiki/Nintendo_64 can be edited to no longer say
&quot;vaporware&quot;.
Most importantly, because I can.

There's a ready ROM at &lt;a href=&quot;https://github.com/clbr/n64bootloader/releases&quot;&gt;https://github.com/clbr/n64bootloader/releases&lt;/a&gt;
for folks with a flashcart to play with.

- Lauri

&lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#m0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; id=&quot;e0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; name=&quot;e0862c3484e0da7195dc8989421d30f01b3b1c63a&quot;&gt;^&lt;/a&gt; &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/&quot;&gt;permalink&lt;/a&gt; &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/raw&quot;&gt;raw&lt;/a&gt; &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/#R&quot;&gt;reply&lt;/a&gt;       [&lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#u&quot;&gt;&lt;strong&gt;flat&lt;/strong&gt;&lt;/a&gt;|&lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/t/#u&quot;&gt;nested&lt;/a&gt;] &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#r0862c3484e0da7195dc8989421d30f01b3b1c63a&quot;&gt;only message in thread&lt;/a&gt;
&lt;/pre&gt;
&lt;hr /&gt;&lt;pre&gt;
only message in thread, back to &lt;a href=&quot;https://lore.kernel.org/linux-mips/&quot;&gt;index&lt;/a&gt;

&lt;strong id=&quot;t&quot;&gt;Thread overview:&lt;/strong&gt; (only message) (download: &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/t.mbox.gz&quot;&gt;mbox.gz&lt;/a&gt; / follow: &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/t.atom&quot;&gt;Atom feed&lt;/a&gt;)
-- links below jump to the message on this page --
2020-12-25 17:05 &lt;a href=&quot;https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/#m0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; id=&quot;r0862c3484e0da7195dc8989421d30f01b3b1c63a&quot; name=&quot;r0862c3484e0da7195dc8989421d30f01b3b1c63a&quot;&gt;[RFC 0/6] Nintendo 64 Linux port&lt;/a&gt; Lauri Kasanen
&lt;/pre&gt;
&lt;hr /&gt;&lt;pre&gt;
Linux-MIPS Archive on lore.kernel.org

Archives are clonable:
        git clone --mirror https://lore.kernel.org/linux-mips/0 linux-mips/git/0.git

        # If you have public-inbox 1.1+ installed, you may
        # initialize and index your mirror using the following commands:
        public-inbox-init -V2 linux-mips linux-mips/ https://lore.kernel.org/linux-mips \
                linux-mips@vger.kernel.org
        public-inbox-index linux-mips

Example &lt;a href=&quot;https://lore.kernel.org/linux-mips/_/text/config/raw&quot;&gt;config snippet&lt;/a&gt; for mirrors

Newsgroup available over NNTP:
        &lt;a href=&quot;nntp://nntp.lore.kernel.org/org.kernel.vger.linux-mips&quot;&gt;nntp://nntp.lore.kernel.org/org.kernel.vger.linux-mips&lt;/a&gt;


AGPL code for this site: git clone &lt;a href=&quot;https://public-inbox.org/public-inbox.git&quot;&gt;https://public-inbox.org/public-inbox.git&lt;/a&gt;
&lt;/pre&gt;
&lt;/body&gt;</description>
<pubDate>Fri, 25 Dec 2020 21:52:58 +0000</pubDate>
<dc:creator>MegaDeKay</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://lore.kernel.org/linux-mips/20201225190503.12353218812e1655f56f0bf8@gmx.com/T/</dc:identifier>
</item>
<item>
<title>Ask HN: Why does Pinterest dominate Google text search results?</title>
<link>https://news.ycombinator.com/item?id=25538586</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=25538586</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#CC1010&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: Why does Pinterest dominate Google text search results?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;10.65889212828&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;7.1059280855199&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;25538586&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=25538586&quot; class=&quot;storylink&quot;&gt;Ask HN: Why does Pinterest dominate Google text search results?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.68354430379747&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_25538586&quot;&gt;372 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=Winterflow3r&quot; class=&quot;hnuser&quot;&gt;Winterflow3r&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=25538586&quot;&gt;5 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_25538586&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=25538586&amp;amp;goto=item%3Fid%3D25538586&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Why%20does%20Pinterest%20dominate%20Google%20text%20search%20results%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=25538586&amp;amp;auth=c17b5b0bf9105bcc091074b48b0c697e79da10e4&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=25538586&quot;&gt;199Â comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;17&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;13&quot;&gt;More and more often when I search (using text queries, not image search, which I know has been polluted by Pinterest for years), I get pages upon pages of Pinterest results, sometimes the same Pinterest page but from the different pinterest country domains like pinterest.fi for Finland and pinterest.se for Sweden. Does anyone know if Google gives Pinterest preferential treatement in SEO rankings?
&lt;p&gt;Edit: A few comments were asking what my queries were to generate search results where Pinterest dominates, so clarifying that a bit. I run a site that has a colour search engine for lipsticks and since Google is one of the dominant ways in which people land on my site (searching for things like &quot;nyx budapest lipstick dupes&quot;), I was studying various makeup related queries to see which sites ranked highest .&lt;/p&gt;
&lt;p&gt;Edit2: Edited the title for clarity - I mean text search, not image search&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.71604938271605&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Fri, 25 Dec 2020 19:52:25 +0000</pubDate>
<dc:creator>Winterflow3r</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=25538586</dc:identifier>
</item>
<item>
<title>Dasung just released a 25 inch eInk monitor</title>
<link>https://www.reddit.com/r/eink/comments/kjvsoj/dasung_just_released_a_25_inch_eink_monitor/</link>
<guid isPermaLink="true" >https://www.reddit.com/r/eink/comments/kjvsoj/dasung_just_released_a_25_inch_eink_monitor/</guid>
<description>&lt;p class=&quot;_1qeIAgB0cPwnLhDF9XSiJM&quot;&gt;this is the most amazing e ink technology i have ever seen. how did they do it? what a merry christmas Dasung gave us. probably in ten years &amp;lt;1500 usd. now in 2020 for e ink size not a problem, android not a problem, color not a problem, cellular connectivity not a problem, camera not a problem, video not a problem. what a year, e ink can do everything now. Maybe an e ink mid range spec laptop is the last bridge to cross in the next couple years for consumer products.&lt;/p&gt;
</description>
<pubDate>Fri, 25 Dec 2020 18:47:50 +0000</pubDate>
<dc:creator>tyler109</dc:creator>
<og:title>r/eink - Dasung just released a 25 inch eink monitor</og:title>
<og:type>website</og:type>
<og:url>https://www.reddit.com/r/eink/comments/kjvsoj/dasung_just_released_a_25_inch_eink_monitor/</og:url>
<og:description>85 votes and 61 comments so far on Reddit</og:description>
<og:image>https://external-preview.redd.it/elUs0dGLP_1KyxpgH2030TkNEcMqxg095swflFXeaho.jpg?auto=webp&amp;s=ac5787417555ba2bab703240d504b73baed3cdb6</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reddit.com/r/eink/comments/kjvsoj/dasung_just_released_a_25_inch_eink_monitor/</dc:identifier>
</item>
<item>
<title>Show HN: Mountain Peaks in WebGL</title>
<link>https://felixpalmer.github.io/peaks-of-austria/</link>
<guid isPermaLink="true" >https://felixpalmer.github.io/peaks-of-austria/</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://felixpalmer.github.io/peaks-of-austria/&quot;&gt;https://felixpalmer.github.io/peaks-of-austria/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=25537377&quot;&gt;https://news.ycombinator.com/item?id=25537377&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 205&lt;/p&gt;
&lt;p&gt;# Comments: 31&lt;/p&gt;
</description>
<pubDate>Fri, 25 Dec 2020 16:37:30 +0000</pubDate>
<dc:creator>pheelicks</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://felixpalmer.github.io/peaks-of-austria/</dc:identifier>
</item>
<item>
<title>Ask HN: Best Talks of 2020?</title>
<link>https://news.ycombinator.com/item?id=25537230</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=25537230</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#CC1010&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: Best Talks of 2020?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;4.986301369863&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;4.1552511415525&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;25537230&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=25537230&quot; class=&quot;storylink&quot;&gt;Ask HN: Best Talks of 2020?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.72972972972973&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_25537230&quot;&gt;505 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=sid6376&quot; class=&quot;hnuser&quot;&gt;sid6376&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=25537230&quot;&gt;8 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_25537230&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=25537230&amp;amp;goto=item%3Fid%3D25537230&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20Best%20Talks%20of%202020%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=25537230&amp;amp;auth=32f55c50262cedca6d72b976d04591211e786d42&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=25537230&quot;&gt;121Â comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;11.5&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;14&quot;&gt;2019: https://news.ycombinator.com/item?id=21858866
&lt;p&gt;2018: https://news.ycombinator.com/item?id=18740939&lt;/p&gt;
&lt;p&gt;2017: https://news.ycombinator.com/item?id=16045859&lt;/p&gt;
&lt;p&gt;2016: https://news.ycombinator.com/item?id=12637239&lt;/p&gt;
&lt;p&gt;Ever: https://news.ycombinator.com/item?id=18217762&lt;/p&gt;
&lt;p&gt;It's been a weird year, wonder if there were still good tech talks in 2020.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.71604938271605&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Fri, 25 Dec 2020 16:13:33 +0000</pubDate>
<dc:creator>sid6376</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=25537230</dc:identifier>
</item>
<item>
<title>Planner 2.6 â An open-source Todoist alternative for Linux</title>
<link>https://useplanner.com/release/2020/12/24/merry-christmas-everyone-planner-2-6-is-here/</link>
<guid isPermaLink="true" >https://useplanner.com/release/2020/12/24/merry-christmas-everyone-planner-2-6-is-here/</guid>
<description>&lt;h2 id=&quot;board-view-is-here&quot;&gt;Board View is here&lt;/h2&gt;
&lt;p&gt;For Todoist users, the Board View was introduced in this new update, a more visual way to organize your Planner projects. This new layout makes it easy to see the big picture of your projects and make progress from start to finish.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/board.png&quot; alt=&quot;Planner 2.6 Planner Board&quot;/&gt;&lt;/p&gt;
&lt;p&gt;To see your projects in the &lt;strong&gt;Board View&lt;/strong&gt;, press the three dots icon in the top right, and select &lt;strong&gt;View as board&lt;/strong&gt;. Youâll be able to rearrange your sections, create new ones, and drag your tasks to anywhere on your board.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/board-settings.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;sub-project&quot;&gt;Sub-project&lt;/h2&gt;
&lt;p&gt;One of the most requested features comes to Planner 2.6, keep your ever-growing project list neat and organized with sub-projects.&lt;/p&gt;
&lt;p&gt;You can collapse sub-projects under their âparentâ projects to temporarily hide them from view. This helps to focus on the right projects at the right time, without getting distracted by everything else.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/sub-project.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;how-to-turn-a-project-into-a-sub-project&quot;&gt;How to turn a project into a sub-project&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Right click on a project.&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Move&lt;/strong&gt; option.&lt;/li&gt;
&lt;li&gt;Select a project.&lt;/li&gt;
&lt;/ol&gt;&lt;h2 id=&quot;new-features&quot;&gt;New Features&lt;/h2&gt;
&lt;h3 id=&quot;quick-search&quot;&gt;Quick Search&lt;/h3&gt;
&lt;p&gt;A big update for the Quick Find feature is here, with new views and feactures.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/Quick%20Search.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Quick Search now saves your last searches, so you can hop around without even typing.&lt;/li&gt;
&lt;li&gt;Added new &lt;strong&gt;Tomorrow&lt;/strong&gt; view.&lt;/li&gt;
&lt;li&gt;Now it is possible to search between &lt;strong&gt;Sections&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;task-defaults&quot;&gt;Task defaults&lt;/h3&gt;
&lt;p&gt;Added a new view in &lt;strong&gt;Preferences&lt;/strong&gt; to edit task defaults.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/tasks-defaults.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;New tasks on top: Indicate the position where the new tasks were created.&lt;/li&gt;
&lt;li&gt;Underline completed tasks.&lt;/li&gt;
&lt;li&gt;Default priority: Select the default priority when creating a task.&lt;/li&gt;
&lt;/ul&gt;&lt;h3 id=&quot;add-tasks-projects-sections-asynchronously&quot;&gt;Add tasks, projects, sections asynchronously&lt;/h3&gt;
&lt;p&gt;Adding a task, project or section is a quick process but sometimes this process stops or does not respond mainly to problems with the internet connection. Planner 2.6 creates the tasks asynchronously with the possibility of being able to cancel the process at any time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/AsyncTask.gif&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;filter-your-projects-by-labels&quot;&gt;Filter your projects by labels&lt;/h3&gt;
&lt;p&gt;It is now possible to filter the tasks within a project by labels.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/filter-labels.gif&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Labels have been added in the sidebar to make the use of filter by labels much faster.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/label-sidebar.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;more-customization&quot;&gt;More customization&lt;/h3&gt;
&lt;p&gt;It is now possible to sort the position &lt;strong&gt;Inbox&lt;/strong&gt;, &lt;strong&gt;Today&lt;/strong&gt; and &lt;strong&gt;Upcoming&lt;/strong&gt; by Drag &amp;amp; Drop.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://useplanner.com/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/ActionMoved.png&quot; alt=&quot;Planner 2.6 Planner Board 2&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;code-cleanup--performance-improvement&quot;&gt;Code cleanup &amp;amp; performance improvement&lt;/h3&gt;
&lt;p&gt;A giant code cleanup was done and resource usage was improved. Now Planner is faster and works much better.&lt;/p&gt;
&lt;p&gt;Planner 2.6 is available for download now on &lt;a href=&quot;https://appcenter.elementary.io/com.github.alainm23.planner/&quot;&gt;AppCenter&lt;/a&gt; and &lt;a href=&quot;https://flathub.org/apps/details/com.github.alainm23.planner&quot;&gt;Flathub&lt;/a&gt;. We hope youâll enjoy these improvements.&lt;/p&gt;
&lt;p&gt;Planner is being developed with â¤ï¸ and passion for Open Source. However, if you like Planner and want to support its development, consider donating to via:&lt;/p&gt;
&lt;div class=&quot;blog-navigation&quot;&gt;&lt;a class=&quot;prev&quot; href=&quot;https://useplanner.com/release/2020/10/02/what-s-new-in-v2-5/&quot;&gt;Â« What's new in v2.5&lt;/a&gt;&lt;/div&gt;

&lt;noscript readability=&quot;1.15625&quot;&gt;
&lt;p&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt;</description>
<pubDate>Fri, 25 Dec 2020 11:19:22 +0000</pubDate>
<dc:creator>rayrag</dc:creator>
<og:title>Merry Christmas everyone, Planner 2.6 is here.</og:title>
<og:description>New Board View, Sub-project and more.</og:description>
<og:url>https://planner-todo.web.app/release/2020/12/24/merry-christmas-everyone-planner-2-6-is-here/</og:url>
<og:image>https://planner-todo.web.app/images/blogs/2020-12-24-merry-christmas-everyone-planner-2-6-is-here/1.png</og:image>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://useplanner.com/release/2020/12/24/merry-christmas-everyone-planner-2-6-is-here/</dc:identifier>
</item>
<item>
<title>Slower News</title>
<link>https://www.slowernews.com/</link>
<guid isPermaLink="true" >https://www.slowernews.com/</guid>
<description>&lt;hr/&gt;&lt;h3&gt;WTF is this?&lt;/h3&gt;&lt;p&gt;These are, somehow, curated news extracting relevant trends and some edge cases for borderline nerds, that donât want to miss out, nor spend a shit-ton of time distilling trivia.&lt;/p&gt;
&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;I wanted to read something like this - an information flood is drowning our times - but I couldnât find it elsewhere. So, as most projects, it started while Â«scratching my own itchÂ» and before becoming a website it lived as a markdown file.&lt;/p&gt;
&lt;p&gt;Making sense of a chaotic world is a sisyphean task but I see it as a &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;http://www.structuredprocrastination.com/&quot;&gt;way of using my research/procrastination positively&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;How do you curate articles?&lt;/h3&gt;
&lt;p&gt;I cherry-pick articles that dissect trends or unveil lesser known trends and interesting edge cases, and are relevant, at least, for some months. Itâs certainly affected by my biases (&lt;a href=&quot;https://github.com/slowernews/slowernews#footnote1&quot;&gt;Iâm aware of these&lt;/a&gt;) and most articles were on Hacker News. The articlesâ listing order is, often, not random.&lt;/p&gt;
&lt;h3&gt;How often is Slower News updated?&lt;/h3&gt;
&lt;p&gt;Only when relevant. Visit every month and Â«youâre good to goÂ». New articles are easy to spot and there is &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.slowernews.com/rss.xml&quot;&gt;RSS&lt;/a&gt; also.&lt;/p&gt;
&lt;h3 id=&quot;contribute&quot;&gt;Can I contribute?&lt;/h3&gt;
&lt;p&gt;Open an issue or pull request &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/slowernews/slowernews&quot;&gt;the repository&lt;/a&gt; with relevant links, corrections or suggestions. Iâm curating only two pages (this and one about &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.slowernews.com/portugal&quot;&gt;Portugal&lt;/a&gt;) but &lt;a href=&quot;https://github.com/slowernews/slowernews#so-what-pages-can-i-create&quot;&gt;I accept pull requests creating/curating more&lt;/a&gt; - if you can handle the burden of using raw HTML. For now, this is my filter to accept them.&lt;/p&gt;
&lt;h3&gt;Feeling grateful?&lt;/h3&gt;
&lt;p&gt;Shop through my &lt;a href=&quot;https://amzn.to/2xAL8zb&quot;&gt;Amazon&lt;/a&gt;, &lt;a href=&quot;https://amzn.to/2xvNQ9k&quot;&gt;Amazon.ca&lt;/a&gt;, &lt;a href=&quot;https://amzn.to/2JcTuUC&quot;&gt;Amazon.uk&lt;/a&gt; and &lt;a href=&quot;https://amzn.to/2YtjT5A&quot;&gt;Amazon.de&lt;/a&gt; affiliate links. You pay exactly the same but it keeps my motivation high. I donât want to publish intrusive ads neither data farm with yet another stupid login.&lt;/p&gt;
&lt;h3&gt;Colophon&lt;/h3&gt;
&lt;p&gt;Hand coded - fully functional without JS - and statically hosted at Netlify via a Github repository. Tufte CSS (adapted) with native darkmode. No images, no tracking (GDPR friendly analytics with &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://slowernews.goatcounter.com&quot;&gt;Goatcounter&lt;/a&gt;) and &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://gtmetrix.com/reports/www.slowernews.com/LWJR6AaG/&quot;&gt;no bloat&lt;/a&gt;. Ok, it uses non-standard fonts but web design is mostly typography.&lt;/p&gt;
&lt;hr/&gt;&lt;small&gt;Updated: 2020-12-15 | &lt;a href=&quot;https://github.com/slowernews/slowernews#slower-news---faq&quot;&gt;All FAQ&lt;/a&gt; | &lt;a href=&quot;https://www.slowernews.com/rss.xml&quot;&gt;RSS&lt;/a&gt;&lt;/small&gt;</description>
<pubDate>Fri, 25 Dec 2020 09:50:50 +0000</pubDate>
<dc:creator>galfarragem</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.slowernews.com/</dc:identifier>
</item>
<item>
<title>Working at Apple (2011)</title>
<link>http://worrydream.com/#!/Apple</link>
<guid isPermaLink="true" >http://worrydream.com/#!/Apple</guid>
<description>&lt;head&gt;&lt;title&gt;Apple&lt;/title&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;base target=&quot;_top&quot; /&gt;&lt;/head&gt;&lt;body id=&quot;readabilityBody&quot; readability=&quot;55&quot;&gt;
&lt;p&gt;I was at Apple from August 2007 to November 2010.&lt;/p&gt;
&lt;p&gt;&lt;img id=&quot;card&quot; src=&quot;http://worrydream.com/Apple/card.jpg&quot; width=&quot;400&quot; height=&quot;243&quot; alt=&quot;&quot; name=&quot;card&quot; /&gt;&lt;/p&gt;
&lt;p&gt;My job was to play with experimental hardware platforms and input technologies, and come up with new user-interface and application concepts for them. I would then design and prototype apps to demo these ideas. These concept apps were shown around internally, presumably to inspire the people who did the real work.&lt;/p&gt;
&lt;p&gt;A few things I became known for include pervasively direct-manipulation interfaces (where users do their thing by moving and gesturing with meaningful objects, instead of relying on verb buttons and other indirect controls), new forms of creative tools and new ways of learning information, and being easily frustrated with the realities of corporate research.&lt;/p&gt;
&lt;p&gt;I made many, many things. The ones I cared deeply about mostly didn't catch on.&lt;/p&gt;
&lt;p&gt;I would love to show you these things -- maybe they'll inspire you instead. In the box below, I have put all of my creations that I can show publicly:&lt;/p&gt;

&lt;p&gt;FAQ:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q -&lt;/strong&gt; But that box is &lt;em&gt;empty!&lt;/em&gt;Â  It's an &lt;em&gt;empty box!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A -&lt;/strong&gt; Yes, exactly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q -&lt;/strong&gt; Oh, okay, I thought you had made some sort of &lt;em&gt;mistake.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A -&lt;/strong&gt; Yes, exactly.&lt;/p&gt;
&lt;/body&gt;</description>
<pubDate>Fri, 25 Dec 2020 09:38:36 +0000</pubDate>
<dc:creator>sturza</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>http://worrydream.com/Apple/</dc:identifier>
</item>
<item>
<title>The impact of Apple Silicon Macs on Broadway</title>
<link>https://brianli.com/2020/12/the-impact-of-apple-silicon-macs-on-broadway/</link>
<guid isPermaLink="true" >https://brianli.com/2020/12/the-impact-of-apple-silicon-macs-on-broadway/</guid>
<description>&lt;p&gt;In a previous life, I was an electronic music designer working on Broadway shows in New York City. Broadway shows look glamorous and expensive on the outside, but itâs often quite the opposite on the inside âÂ at least for the music department. One of the toughest parts of my job as an electronic music designer was to find the best performance-to-cost ratio for computer rigs powering keyboards, guitars, playback tracks, and more.&lt;/p&gt;
&lt;p&gt;Over the past decade, Broadway has replaced large sections of traditional orchestras with synthesizers, playback systems, and electronic drum pads. Iâm not in support of that, but thatâs a story for another day. The point here is that Broadwayâs reliance on computer-driven rigs has increased, while the typical budget required to build high-end stable rigs hasnât increased at the same rate.&lt;/p&gt;
&lt;p&gt;Some shows Iâve worked at set aside a $10,000-$12,000 budget for two keyboard rigs. That sounds like a lot of money at first, but itâs not. For live shows, itâs usually best to have a 1:1 backup in case the main rig fails. That fact alone means you have to design a rig that fits within 50% of the proposed budget. Furthermore, a high-quality keyboard controller alone is $1,500-2,000 âÂ so that means thereâs $3,000 left for a computer and everything else.&lt;/p&gt;
&lt;p&gt;Due to budget constraints, many shows end up using Mac minis. Historically speaking, the Mac miniâs computing power has been a bottleneck for electronic music designers on Broadway. In a perfect world, weâd all like to use the best-sounding sample libraries for our work, but that was never feasible with the Mac mini. Thus, the compromise was always to reduce sound quality to fit within the Mac miniâs compute constraints.&lt;/p&gt;
&lt;p&gt;Apple Silicon changes everything for Broadway electronic music designers. The new M1 Mac mini is capable of running high-end sample libraries and virtual instruments in a stable manner, and itâs only going to get better with M2, M3, and M4-series chips in the future. The performance per dollar characteristics of Apple Silicon machines are going to have a huge impact on Broadwayâs sound, and Iâm very excited to see, or hear, what happens.&lt;/p&gt;

</description>
<pubDate>Fri, 25 Dec 2020 07:14:23 +0000</pubDate>
<dc:creator>da02</dc:creator>
<og:title>The Impact of Apple Silicon Macs on Broadway | BrianLi.com</og:title>
<og:type>article</og:type>
<og:url>https://brianli.com/2020/12/the-impact-of-apple-silicon-macs-on-broadway/</og:url>
<og:description>Apple Silicon changes everything for Broadway electronic music designers. The new M1 Mac mini is capable of running high-end sample libraries and virtual instruments in a stable manner, and it's only going to get better with M2, M3, and M4-series chips in the future.</og:description>
<og:image>https://cdn.brianli.com/uploads/2020/12/20201221_APPLE-M1-CHIP.jpg?w=1920&amp;fit=max&amp;auto=format&amp;fm=pjpg&amp;q=65&amp;gif-q=50</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://brianli.com/2020/12/the-impact-of-apple-silicon-macs-on-broadway/</dc:identifier>
</item>
<item>
<title>Ruby 3.0</title>
<link>https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/</link>
<guid isPermaLink="true" >https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/</guid>
<description>&lt;p class=&quot;post-info&quot;&gt;Posted by naruse on 25 Dec 2020&lt;/p&gt;
&lt;p&gt;We are pleased to announce the release of Ruby 3.0.0. From 2015 we developed hard toward Ruby 3, whose goal is performance, concurrency, and Typing. Especially about performance, Matz stated âRuby3 will be 3 times faster than Ruby2â a.k.a. &lt;a href=&quot;https://blog.heroku.com/ruby-3-by-3&quot;&gt;Ruby 3x3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cache.ruby-lang.org/pub/media/ruby3x3.png&quot; alt=&quot;Optcarrot 3000 frames&quot; width=&quot;100%&quot;/&gt;&lt;/p&gt;
&lt;p&gt;With &lt;a href=&quot;https://github.com/mame/optcarrot&quot;&gt;Optcarrot benchmark&lt;/a&gt;, which measures single thread performance based on NESâs game emulation workload, it achieved 3x faster performance than Ruby 2.0!&lt;/p&gt;
&lt;details&gt;These were measured at the environment written in https://benchmark-driver.github.io/hardware.html. &lt;a href=&quot;http://github.com/ruby/ruby/commit/8c510e4095&quot;&gt;8c510e4095&lt;/a&gt; was used as Ruby 3.0. It may not be 3x faster depending on your environment or benchmark.&lt;/details&gt;&lt;p&gt;Ruby 3.0.0 covers those goals by&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Performance
&lt;/li&gt;
&lt;li&gt;Concurrency
&lt;ul&gt;&lt;li&gt;Ractor&lt;/li&gt;
&lt;li&gt;Fiber Scheduler&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Typing (Static Analysis)
&lt;ul&gt;&lt;li&gt;RBS&lt;/li&gt;
&lt;li&gt;TypeProf&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;With above performance improvement Ruby 3.0 introduces a number of new features described below.&lt;/p&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;When I first declared âRuby3x3â in the conference keynote, many including members of the core team felt âMatz is a boasterâ. In fact, I felt so too. But we did. I am honored to see the core team actually accomplished to make Ruby3.0 three times faster than Ruby2.0 (in some benchmarks). â Matz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;MJIT&lt;/h3&gt;
&lt;p&gt;Many improvements were implemented in MJIT. See NEWS for details.&lt;/p&gt;
&lt;p&gt;As of Ruby 3.0, JIT is supposed to give performance improvements in limited workloads, such as games (&lt;a href=&quot;https://benchmark-driver.github.io/benchmarks/optcarrot/commits.html#chart-1&quot;&gt;Optcarrot&lt;/a&gt;), AI (&lt;a href=&quot;https://benchmark-driver.github.io/benchmarks/rubykon/commits.html&quot;&gt;Rubykon&lt;/a&gt;), or whatever application that spends majority of time in calling a few methods many times.&lt;/p&gt;
&lt;p&gt;Although Ruby 3.0 &lt;a href=&quot;https://twitter.com/k0kubun/status/1256142302608650244&quot;&gt;significantly decreased a size of JIT-ed code&lt;/a&gt;, it is still not ready for optimizing workloads like Rails, which often spend time on so many methods and therefore suffer from i-cache misses exacerbated by JIT. Stay tuned for Ruby 3.1 for further improvements on this issue.&lt;/p&gt;
&lt;h2&gt;Concurrency / Parallel&lt;/h2&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Itâs multi-core age today. Concurrency is very important. With Ractor, along with Async Fiber, Ruby will be a real concurrent language. â Matz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Ractor (experimental)&lt;/h3&gt;
&lt;p&gt;Ractor is an Actor-model like concurrent abstraction designed to provide a parallel execution feature without thread-safety concerns.&lt;/p&gt;
&lt;p&gt;You can make multiple ractors and you can run them in parallel. Ractor enables you to make thread-safe parallel programs because ractors can not share normal objects. Communication between ractors are supported by exchaning messages.&lt;/p&gt;
&lt;p&gt;To limit sharing of objects, Ractor introduces several restrictions to the Rubyâs syntax (without multiple Ractors, there is no restriction).&lt;/p&gt;
&lt;p&gt;The specification and implementation are not matured and may be changed in the future, so this feature is marked as experimental and show the âexperimental featureâ warning when the first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ractor.new&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following small program measures the execution time of famous benchmark tak function (&lt;a href=&quot;https://en.wikipedia.org/wiki/Tak_(function)&quot;&gt;Tak (function) - Wikipedia&lt;/a&gt;), by executing it 4 times sequentially or 4 times in parallel with ractors.&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot; readability=&quot;14.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'benchmark'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# sequential version&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'seq'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# parallel version&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'par'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Ractor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tarai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:take&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;31.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;8&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;Benchmark result:
          user     system      total        real
seq  64.560736   0.001101  64.561837 ( 64.562194)
par  66.422010   0.015999  66.438009 ( 16.685797)
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The result wasãmeasured on Ubuntu 20.04, Intel(R) Core(TM) i7-6700 (4 cores, 8 hardware threads). It shows that the parallel version is 3.87 times faster than the sequential version.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/ruby/blob/master/doc/ractor.md&quot;&gt;doc/ractor.md&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Fiber Scheduler&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fiber#scheduler&lt;/code&gt; is introduced for intercepting blocking operations. This allows for light-weight concurrency without changing existing code. Watch &lt;a href=&quot;https://www.youtube.com/watch?v=Y29SSOS4UOc&quot;&gt;âDonât Wait For Me, Scalable Concurrency for Ruby 3â&lt;/a&gt; for an overview of how it works.&lt;/p&gt;
&lt;p&gt;Currently supported classes/methods:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mutex#lock&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mutex#unlock&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mutex#sleep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConditionVariable#wait&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Queue#pop&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SizedQueue#push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread#join&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kernel#sleep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Process.wait&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IO#wait&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IO#read&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IO#write&lt;/code&gt; and related methods (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#wait_readable&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#gets&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#puts&lt;/code&gt; and so on).&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IO#select&lt;/code&gt; is &lt;em&gt;not supported&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;This example program will perform several HTTP requests concurrently:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'async'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'net/http'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'uri'&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ruby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rails&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;async&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://www.google.com/search?q=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It uses &lt;a href=&quot;https://github.com/socketry/async&quot;&gt;async&lt;/a&gt; which provides the event loop. This event loop uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fiber#scheduler&lt;/code&gt; hooks to make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Net::HTTP&lt;/code&gt; non-blocking. Other gems can use this interface to provide non-blocking execution for Ruby, and those gems can be compatible with other implementations of Ruby (e.g. JRuby, TruffleRuby) which can support the same non-blocking hooks.&lt;/p&gt;
&lt;h2&gt;Static Analysis&lt;/h2&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;2010s were an age of statically type programming languages. Ruby seeks the future with static type checking, without type declaration, using abstract interpretation. RBS &amp;amp; TypeProf are the first step to the future. More steps to come. â Matz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;RBS&lt;/h3&gt;
&lt;p&gt;RBS is a language to describe the types of Ruby programs.&lt;/p&gt;
&lt;p&gt;Type checkers including TypeProf and other tools supporting RBS will understand Ruby programs much better with RBS definitions.&lt;/p&gt;
&lt;p&gt;You can write down the definition of classes and modules: methods defined in the class, instance variables and their types, and inheritance/mix-in relations.&lt;/p&gt;
&lt;p&gt;The goal of RBS is to support commonly seen patterns in Ruby programs and it allows writing advanced types including union types, method overloading, and generics. It also supports duck typing with &lt;em&gt;interface types&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ruby 3.0 ships with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbs&lt;/code&gt; gem, which allows parsing and processing type definitions written in RBS. The following is a small example of RBS with class, module, and constant definitions.&lt;/p&gt;
&lt;pre&gt;
&lt;code class=&quot;language-rbs&quot;&gt;module ChatApp
  VERSION: String
  class Channel
    attr_reader name: String
    attr_reader messages: Array[Message]
    attr_reader users: Array[User | Bot]              # `|` means union types, `User` or `Bot`.
    def initialize: (String) -&amp;gt; void
    def post: (String, from: User | Bot) -&amp;gt; Message   # Method overloading is supported.
            | (File, from: User | Bot) -&amp;gt; Message
  end
end
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/rbs&quot;&gt;README of rbs gem&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;h3&gt;TypeProf&lt;/h3&gt;
&lt;p&gt;TypeProf is a type analysis tool bundled in the Ruby package.&lt;/p&gt;
&lt;p&gt;Currently, TypeProf serves as a kind of type inference.&lt;/p&gt;
&lt;p&gt;It reads plain (non-type-annotated) Ruby code, analyzes what methods are defined and how they are used, and generates a prototype of type signature in RBS format.&lt;/p&gt;
&lt;p&gt;Here is a simple demo of TypeProf.&lt;/p&gt;
&lt;p&gt;An example input:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot; readability=&quot;9&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;13&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# test.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:age&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;age: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;An example output:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;$ typeprof test.rb
# Classes
class User
  attr_reader name : String
  attr_reader age : Integer
  def initialize : (name: String, age: Integer) -&amp;gt; [String, Integer]
end
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can run TypeProf by saving the input as âtest.rbâ and invoke a command called âtypeprof test.rbâ.&lt;/p&gt;
&lt;p&gt;You can also &lt;a href=&quot;https://mame.github.io/typeprof-playground/#rb=%23+test.rb%0Aclass+User%0A++def+initialize%28name%3A%2C+age%3A%29%0A++++%40name%2C+%40age+%3D+name%2C+age%0A++end%0A++%0A++attr_reader+%3Aname%2C+%3Aage%0Aend%0A%0AUser.new%28name%3A+%22John%22%2C+age%3A+20%29&amp;amp;rbs=&quot;&gt;try TypeProf online&lt;/a&gt;. (It runs TypeProf on the server side, so sorry if it is out!)&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/typeprof/blob/master/doc/doc.md&quot;&gt;the documentation&lt;/a&gt; and &lt;a href=&quot;https://github.com/ruby/typeprof/blob/master/doc/demo.md&quot;&gt;demos&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;TypeProf is experimental and not so mature yet; only a subset of the Ruby language is supported, and the detection of type errors is limited. But it is still growing rapidly to improve the coverage of language features, the analysis performance, and usability. Any feedback is very welcome.&lt;/p&gt;
&lt;h2&gt;Other Notable New Features&lt;/h2&gt;
&lt;ul readability=&quot;2&quot;&gt;&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;One-line pattern matching is redesigned. (experimental)&lt;/p&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Find pattern is added. (experimental)&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot; readability=&quot;14.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;24&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [&quot;a&quot;, 1]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;b&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;c&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [2, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, 3]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Endless method definition is added.&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hash#except&lt;/code&gt; is now built-in.&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot; readability=&quot;7.5&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;10&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;a: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;b: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;c: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; {:b=&amp;gt;2, :c=&amp;gt;3}&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-1&quot;&gt;
&lt;p&gt;Memory view is added as an experimental feature&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This is a new C-API set to exchange a raw memory area, such as a numeric array and a bitmap image, between extension libraries. The extension libraries can share also the metadata of the memory area that consists of the shape, the element format, and so on. Using these kinds of metadata, the extension libraries can share even a multidimensional array appropriately. This feature is designed by referring to Pythonâs buffer protocol.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Performance improvements&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Pasting long code to IRB is 53 times faster than bundled with Ruby 2.7.0. For example, the time required to paste &lt;a href=&quot;https://gist.github.com/aycabta/30ab96334275bced5796f118c9220b0b&quot;&gt;this sample code&lt;/a&gt; goes from 11.7 seconds to 0.22 seconds.&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;Other notable changes since 2.7&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Keyword arguments are separated from other arguments.
&lt;/li&gt;
&lt;li&gt;Pattern matching (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case/in&lt;/code&gt;) is no longer experimental.&lt;/li&gt;
&lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$SAFE&lt;/code&gt; feature was completely removed; now it is a normal global variable.&lt;/li&gt;
&lt;li&gt;The order of backtrace had been reversed at Ruby 2.5, and is reverted. Now it behaves like Ruby 2.4; an error message and the line number where the exception occurs are printed first, and its callers are printed later.&lt;/li&gt;
&lt;li&gt;Some standard libraries are updated.
&lt;ul&gt;&lt;li&gt;RubyGems 3.2.3&lt;/li&gt;
&lt;li&gt;Bundler 2.2.3&lt;/li&gt;
&lt;li&gt;IRB 1.3.0&lt;/li&gt;
&lt;li&gt;Reline 0.2.0&lt;/li&gt;
&lt;li&gt;Psych 3.3.0&lt;/li&gt;
&lt;li&gt;JSON 2.5.1&lt;/li&gt;
&lt;li&gt;BigDecimal 3.0.0&lt;/li&gt;
&lt;li&gt;CSV 3.1.9&lt;/li&gt;
&lt;li&gt;Date 3.1.0&lt;/li&gt;
&lt;li&gt;Digest 3.0.0&lt;/li&gt;
&lt;li&gt;Fiddle 1.0.6&lt;/li&gt;
&lt;li&gt;StringIO 3.0.0&lt;/li&gt;
&lt;li&gt;StringScanner 3.0.0&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The following libraries are no longer bundled gems or standard libraries. Install the corresponding gems to use these features.
&lt;ul&gt;&lt;li&gt;sdbm&lt;/li&gt;
&lt;li&gt;webrick&lt;/li&gt;
&lt;li&gt;net-telnet&lt;/li&gt;
&lt;li&gt;xmlrpc&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The following default gems are now bundled gems.
&lt;/li&gt;
&lt;li&gt;The following stdlib files are now default gems and are published on rubygems.org.
&lt;ul&gt;&lt;li&gt;English&lt;/li&gt;
&lt;li&gt;abbrev&lt;/li&gt;
&lt;li&gt;base64&lt;/li&gt;
&lt;li&gt;drb&lt;/li&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;li&gt;erb&lt;/li&gt;
&lt;li&gt;find&lt;/li&gt;
&lt;li&gt;net-ftp&lt;/li&gt;
&lt;li&gt;net-http&lt;/li&gt;
&lt;li&gt;net-imap&lt;/li&gt;
&lt;li&gt;net-protocol&lt;/li&gt;
&lt;li&gt;open-uri&lt;/li&gt;
&lt;li&gt;optparse&lt;/li&gt;
&lt;li&gt;pp&lt;/li&gt;
&lt;li&gt;prettyprint&lt;/li&gt;
&lt;li&gt;resolv-replace&lt;/li&gt;
&lt;li&gt;resolv&lt;/li&gt;
&lt;li&gt;rinda&lt;/li&gt;
&lt;li&gt;set&lt;/li&gt;
&lt;li&gt;securerandom&lt;/li&gt;
&lt;li&gt;shellwords&lt;/li&gt;
&lt;li&gt;tempfile&lt;/li&gt;
&lt;li&gt;tmpdir&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;tsort&lt;/li&gt;
&lt;li&gt;un&lt;/li&gt;
&lt;li&gt;weakref&lt;/li&gt;
&lt;li&gt;digest&lt;/li&gt;
&lt;li&gt;io-nonblock&lt;/li&gt;
&lt;li&gt;io-wait&lt;/li&gt;
&lt;li&gt;nkf&lt;/li&gt;
&lt;li&gt;pathname&lt;/li&gt;
&lt;li&gt;syslog&lt;/li&gt;
&lt;li&gt;win32ole&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/ruby/ruby/blob/v3_0_0/NEWS.md&quot;&gt;NEWS&lt;/a&gt; or &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_7_0...v3_0_0&quot;&gt;commit logs&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;With those changes, &lt;a href=&quot;https://github.com/ruby/ruby/compare/v2_7_0...v3_0_0#file_bucket&quot;&gt;4028 files changed, 200058 insertions(+), 154063 deletions(-)&lt;/a&gt; since Ruby 2.7.0!&lt;/p&gt;
&lt;blockquote readability=&quot;8&quot;&gt;
&lt;p&gt;Ruby3.0 is a milestone. The language is evolved, keeping compatibility. But itâs not the end. Ruby will keep progressing, and become even greater. Stay tuned! â Matz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Merry Christmas, Happy Holidays, and enjoy programming with Ruby 3.0!&lt;/p&gt;
&lt;h2&gt;Download&lt;/h2&gt;
&lt;ul readability=&quot;0&quot;&gt;&lt;li readability=&quot;-0.82424242424242&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.tar.gz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 19539509
SHA1: 233873708c1ce9fdc295e0ef1c25e64f9b98b062
SHA256: a13ed141a1c18eb967aac1e33f4d6ad5f21be1ac543c344e0d6feeee54af8e28
SHA512: e62f4f63dc12cff424e8a09adc06477e1fa1ee2a9b2b6e28ca22fd52a211e8b8891c0045d47935014a83f2df2d6fc7c8a4fd87f01e63c585afc5ef753e1dd1c1
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.82424242424242&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.tar.xz&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.tar.xz&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 14374176
SHA1: c142899d70a1326c5a71311b17168f98c15e5d89
SHA256: 68bfaeef027b6ccd0032504a68ae69721a70e97d921ff328c0c8836c798f6cb1
SHA512: 2a23c2894e62e24bb20cec6b2a016b66d7df05083668726b6f70af8338211cfec417aa3624290d1f5ccd130f65ee7b52b5db7d428abc4a9460459c9a5dd1a450
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li readability=&quot;-0.83180428134557&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.zip&quot;&gt;https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.0.zip&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot; readability=&quot;32&quot;&gt;
&lt;div class=&quot;highlight&quot; readability=&quot;9&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;
&lt;code&gt;SIZE: 23862057
SHA1: 2a9629102d71c7fe7f31a8c91f64e570a40d093c
SHA256: a5e4fa7dc5434a7259e9a29527eeea2c99eeb5e82708f66bb07731233bc860f4
SHA512: e5bf742309d79f05ec1bd1861106f4b103e4819ca2b92a826423ff451465b49573a917cb893d43a98852435966323e2820a4b9f9377f36cf771b8c658f80fa5b
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;What is Ruby&lt;/h2&gt;
&lt;p&gt;Ruby was first developed by Matz (Yukihiro Matsumoto) in 1993, and is now developed as Open Source. It runs on multiple platforms and is used all over the world especially for web development.&lt;/p&gt;
</description>
<pubDate>Fri, 25 Dec 2020 05:59:36 +0000</pubDate>
<dc:creator>0x54MUR41</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/</dc:identifier>
</item>
</channel>
</rss>