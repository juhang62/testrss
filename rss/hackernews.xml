<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Microsoft Wins Pentagon’s $10B Contract</title>
<link>https://www.nytimes.com/2019/10/25/technology/dod-jedi-contract.html</link>
<guid isPermaLink="true" >https://www.nytimes.com/2019/10/25/technology/dod-jedi-contract.html</guid>
<description>&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;SAN FRANCISCO — The Department of Defense on Friday &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.defense.gov/Newsroom/Contracts/Contract/Article/1999639/&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;awarded a $10 billion technology contract&lt;/a&gt; to Microsoft, in what was a scrutinized contest after &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/07/18/us/politics/trump-amazon-defense-department-contract.html?module=inline&quot; title=&quot;&quot;&gt;President Trump said he might intervene&lt;/a&gt; in the hard-fought commercial battle.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The 10-year contract for the Joint Enterprise Defense Infrastructure, known by the cinematic acronym JEDI, had set off a showdown among Amazon, Microsoft, IBM, Oracle and Google. Intended to transform and modernize the military’s cloud computing systems, the contract is considered more important than its size because of its centrality to new forms of war. Much of the military operates on 1980s and 1990s computer systems, and the Pentagon has spent billions of dollars trying to make them talk to one another.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The decision was a surprise because &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/08/02/us/politics/amazon-pentagon-contract-trump.html?module=inline&quot; title=&quot;&quot;&gt;Amazon had been considered a front-runner&lt;/a&gt; to win the contract. But that was before Mr. Trump began his criticisms of Jeff Bezos, the founder of Amazon and, for the past several years, the owner of The Washington Post — a news organization the president refers to as the “Amazon Washington Post.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;A speechwriter for former Defense Secretary Jim Mattis, who over time became an enthusiast of moving Pentagon operations to the cloud, &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.washingtonpost.com/national-security/2019/10/23/syria-disagreement-with-trump-used-pretext-mattiss-departure-pentagon-chief-new-book-says/&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;alleged in a book&lt;/a&gt; scheduled for publication next week that Mr. Trump had wanted to “screw” Amazon and give the contract to another company. In public, Mr. Trump said there were other “great companies” he wanted to make sure had a chance at the contract.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot; aria-label=&quot;companion column&quot; aria-hidden=&quot;false&quot;/&gt;&lt;/div&gt;&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The issue quickly became radioactive at the Pentagon. The new defense secretary, Mark T. Esper, at first said he wanted to &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/08/01/us/politics/amazon-pentagon-contract.html?module=inline&quot; title=&quot;&quot;&gt;take several months to review the issue&lt;/a&gt; and then, a few days ago, recused himself from the bidding. He said he could not participate because his son worked for IBM, another competitor for the contract.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;As recently as this month, the betting was that Microsoft would, at most, get only part of the contract — and that the Pentagon, like many companies, would use multiple suppliers for its cloud services. Microsoft was considered in the lead for other government cloud programs, including an intelligence contract. Its Azure cloud program is considered a worthy competitor, but only recently has Microsoft opened enough classified server facilities to be able to handle data on the scale of the Pentagon contract.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“This contract will address critical and urgent unmet warfighter requirements for modern cloud infrastructure at all three classification levels delivered out to the tactical edge,” the Defense Department said in a statement on Friday.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Microsoft did not immediately have a comment. Amazon, which calls its cloud platform Amazon Web Services, or AWS, said in a statement that it was surprised by the decision.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“AWS is the clear leader in cloud computing, and a detailed assessment purely on the comparative offerings clearly led to a different conclusion,” Drew Herdener, a spokesman for Amazon, said. “We remain deeply committed to continuing to innovate for the new digital battlefield where security, efficiency, resiliency, and scalability of resources can be the difference between success and failure.”&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot; aria-label=&quot;companion column&quot; aria-hidden=&quot;false&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The award to Microsoft is likely to fuel suspicions that Mr. Trump may have weighed in privately as well as publicly against Amazon. Experts on federal contracting said it would be highly improper, and possibly unprecedented, for a president to intervene in the awarding of a contract.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Price Floyd, a former head of public affairs at the Pentagon who consulted briefly for Amazon, said he thought Mr. Trump’s vocal criticism of Amazon would give it ample grounds to protest the award to Microsoft.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“He’s the commander in chief, and he hasn’t been subtle about his hostility toward Amazon,” Mr. Floyd said.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The concept of unifying information in the cloud has obvious benefits for the Pentagon as war fighters move to greater use of remote sensors, semiautonomous weapons and ultimately artificial intelligence. It is particularly crucial at a moment that United States Cyber Command has been elevated to a full combat command, equivalent to Central Command, which runs operations in the Middle East, or Northern Command, which defends the continental United States.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;But some critics argued that such a large contract should not be awarded to any one technology company, while proponents said using a single provider would protect war fighters by eliminating glitches in military systems and streamlining communications.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The initial reaction on Friday from some lawmakers was positive, mostly because the long-delayed contract had finally been issued.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Representative Jim Langevin, a Rhode Island Democrat who has immersed himself in cyber issues, suggested that the military was finally catching up with private industry.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot; aria-label=&quot;companion column&quot; aria-hidden=&quot;false&quot;/&gt;&lt;/div&gt;
&lt;div class=&quot;css-1fanzo5 StoryBodyCompanionColumn&quot;&gt;
&lt;div class=&quot;css-53u6y8&quot;&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“Advanced general-purpose cloud is the industry norm, and it’s past time the Department of Defense had access to these capabilities,” said Mr. Langevin, the chairman of the Armed Services Subcommittee on Intelligence and Emerging Threats and Capabilities. “I look forward to continuing to use my position in Congress to increase access to next-generation technologies that support our war fighters.”&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Amazon, Microsoft, IBM, Oracle and Google began battling for the JEDI contract more than a year ago. &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.bloomberg.com/news/articles/2018-10-08/google-drops-out-of-pentagon-s-10-billion-cloud-competition&quot; title=&quot;&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Google dropped out&lt;/a&gt; last October without submitting a formal bid, saying the military work conflicted with its principles for the ethical use of artificial intelligence.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;The Pentagon said in April that only &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/04/10/technology/amazon-microsoft-jedi-pentagon.html?module=inline&quot; title=&quot;&quot;&gt;Amazon and Microsoft met its technical requirements&lt;/a&gt; for fulfilling the contract. In &lt;a class=&quot;css-1g7m0tk&quot; href=&quot;https://www.nytimes.com/2019/03/20/technology/military-contract-deap-ubhi.html?module=inline&quot; title=&quot;&quot;&gt;an unsuccessful legal challenge, Oracle&lt;/a&gt; alleged that Amazon had biased the process in its favor by tapping Defense Department employees who worked on the bidding process to work at Amazon.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;In August, the Defense Department’s inspector general announced that it had “assembled a multidisciplinary team of auditors, investigators, and attorneys to review matters related to the Joint Enterprise Defense Infrastructure cloud program that were referred to us by members of Congress and through the DoD hotline,” which provides tips of abuse.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;But while that was underway, Mr. Trump raised his objections. The process froze, and Pentagon officials said time was being wasted — which would ultimately put the United States at a military disadvantage.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;“In 20 years of covering tech, I’ve never seen a battle for any type of contract reach this level of nastiness,” said Daniel Ives, an analyst for Wedbush Securities who has closely followed the JEDI saga.&lt;/p&gt;
&lt;p class=&quot;css-exrw3m evys1bk0&quot;&gt;Mr. Ives said he saw the ferocity of the contest mainly as a response to Amazon’s enormous success as the pioneer of cloud computing, which has swiftly become the foundation of much of the digital infrastructure of private industry. He said Amazon’s revenue from federal government contracts, about $200 million in 2014, had reached $2 billion this year, much of it from the C.I.A. and other intelligence agencies.&lt;/p&gt;
&lt;/div&gt;
&lt;aside class=&quot;css-o6xoe7&quot; aria-label=&quot;companion column&quot; aria-hidden=&quot;false&quot;/&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 25 Oct 2019 23:06:58 +0000</pubDate>
<dc:creator>aaronbrethorst</dc:creator>
<og:url>https://www.nytimes.com/2019/10/25/technology/dod-jedi-contract.html</og:url>
<og:type>article</og:type>
<og:title>Microsoft Wins Pentagon’s $10 Billion JEDI Contract, Thwarting Amazon</og:title>
<og:image>https://static01.nyt.com/images/2019/10/25/business/25jedi/25jedi-facebookJumbo-v2.jpg</og:image>
<og:description>Amazon was considered a front-runner for the cloud computing project before President Trump began criticizing the company’s founder, Jeff Bezos.</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nytimes.com/2019/10/25/technology/dod-jedi-contract.html</dc:identifier>
</item>
<item>
<title>My company sold for $100M and I got zilch – how can that be?</title>
<link>https://medium.com/help-me-heidi/my-company-sold-for-100-million-and-i-got-zilch-how-can-that-be-f7be0563f1f8</link>
<guid isPermaLink="true" >https://medium.com/help-me-heidi/my-company-sold-for-100-million-and-i-got-zilch-how-can-that-be-f7be0563f1f8</guid>
<description>&lt;p id=&quot;2289&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Dear Former Millionaire:&lt;/p&gt;
&lt;p id=&quot;1384&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;I feel your pain. I really do. I’ve always thought it unfortunate that common practice is to tell employees share amounts and strike prices, but not give them all the other numbers needed to help them evaluate what their options will end up being worth. For what it’s worth, I encourage all the companies I work with to be more transparent. I guess yours wasn’t.&lt;/p&gt;
&lt;p id=&quot;f5ca&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;There are probably multiple issues at play here, but I’m going to guess the biggest one is your preference overhang. Let me explain.&lt;/p&gt;
&lt;p id=&quot;3c1f&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;When venture capitalists buy equity, they typically do not buy the same shares employees get, which are common shares. They buy preferred shares. You can even guess from the name that these are somehow better. After all, if you were given the option of something &lt;em class=&quot;hb&quot;&gt;preferred&lt;/em&gt; or something &lt;em class=&quot;hb&quot;&gt;common&lt;/em&gt;, which would you take? There are all sorts of reasons this is so, including the obligation VCs have to protect the downside of investing the money they get from their Limited Partners — who are often entities like pension funds and school endowments. There are also some advantages to common shareholders by having two classes of stock — for example, this allows the company to price your common stock options at less than what the VCs pay because they have different attributes and, therefore, different values. (You can read more about preferred versus common &lt;a href=&quot;https://www.priorilegal.com/legal-for-industries/startup/common-vs-preferred-stock-in-startups&quot; class=&quot;fu cf hn ho hp hq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.)&lt;/p&gt;
&lt;p id=&quot;c6f4&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;The principal benefit of preferred shares for those who own them is that they get their money out first if the company is sold. While common practice is they get the same out that they put in, it is not unheard of for some of that money to carry a multiple, 2x or even more (meaning they might get two times or more their money out first), especially if the company had to raise money at a time when no one wanted to put any in without additional downside protection. Point is, this is the market, and it has been that way for a long time, and there is nothing inherently wrong with these terms. But if you don’t know about it, it sucks.&lt;/p&gt;
&lt;p id=&quot;3edf&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Most employees think that, if they own 1% of a company sold for $100 million, they will get $1 million. But that’s not the whole equation. What they will really get is the following:&lt;/p&gt;
&lt;p id=&quot;974f&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Sales price minus legal fees minus carve-out minus banker fees minus preferred overhang, then that remainder is divvied up by percent of company-owned. (Whether the preferred stock is participating or not creates a further wrinkle which you can read about &lt;a href=&quot;http://www.startupcompanylawyer.com/2007/06/15/what-is-the-difference-between-non-participating-preferred-stock-and-participating-preferred-stock/&quot; class=&quot;fu cf hn ho hp hq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;, but for now, this captures most of what you need.)&lt;/p&gt;
&lt;p id=&quot;79be&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;The “easiest” way for your 1% to be worth nothing is to have that preferred overhang be a lot of money since all the other things in the equation usually do not end up being more than about 15–20% of the total value being received in the sale.&lt;/p&gt;
&lt;p id=&quot;3268&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;And often that preferred overhang is a lot. If you raised multiple rounds (&lt;strong class=&quot;gp hc&quot;&gt;&lt;em class=&quot;hb&quot;&gt;regardless of the valuation of those rounds&lt;/em&gt;&lt;/strong&gt;) and if you raised more than your company is now being sold for, you will get nothing.&lt;/p&gt;
&lt;p id=&quot;3e92&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;This might be easier to understand by example, so let me paint a hypothetical picture from what you’ve told me about your situation that would result in your goose egg payout.&lt;/p&gt;
&lt;p id=&quot;4f00&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Let’s say your company raises a $2 million seed round, a $15 million Series A, and then a $50 million Series B. These have standard 1x preferences, meaning they will get their money out first in any sale of the company.&lt;/p&gt;
&lt;p id=&quot;5395&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Then the company runs into problems, and no new investors are willing to come in. The board decides to start a sale process since the company is unprofitable and so cannot exist without new capital. But the company only has enough money to cover payroll for sixty days — not enough time to find a buyer and get a sale done. To increase the time they have to find a buyer, the existing investors offer an additional $10 million in a loan, or “bridge note” — but in exchange they will only put that in if they can get a 2x preference, in other words, they will get the first $20 million of any sale proceeds for doing this.&lt;/p&gt;
&lt;p id=&quot;a4be&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Four more months pass, and the company secures two competing bids to buy the company, the highest being $100 million. So they agree to sell for $100 million. The lawyers and bankers get paid $3 million for their work. Certain key employees were incentivized with a “ &lt;a href=&quot;https://www.fenwick.com/FenwickDocuments/Carving-Up-the-Pie.pdf&quot; class=&quot;fu cf hn ho hp hq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;carve-out&lt;/a&gt; “ in order to stay through the transaction and make sure it would happen, they get 10% of the deal, or $10 million. The seed, Series A, and Series B investors get their money back, or $67 million, and the bridge note would be paid $20 million. So, $3 plus $10 plus $67 plus $20 equals $100 million — &lt;strong class=&quot;gp hc&quot;&gt;&lt;em class=&quot;hb&quot;&gt;and zero for all common shareholders, including you.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p id=&quot;b7a8&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Again, let me emphasize, this is not inherently unfair. When I raised capital as an entrepreneur about a million years ago, I sold preferred shares too. I even had the preferred overhang number on the wall in my office, to remind me how much money would have to go out the door before I or my team could make a single penny when the company finally got sold. The problem is most companies hide it.&lt;/p&gt;
&lt;p id=&quot;5765&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;In fact, one of my kids was recently interviewing at a startup and I told her to ask about the preferred overhang — she said the interviewer looked at her like she was asking about his sex life! She didn’t get a call-back.&lt;/p&gt;
&lt;p id=&quot;9ef3&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Sadly, while I can explain to you why you have ended up in this predicament, I can’t tell you how to fix it, at least not for this at-bat. However, I hope this explanation helps you go into your next endeavor with eyes open and hopefully with better data. You can actually find out the preference stack for many companies by simply Googling “how much money has company X raised?” While that won’t give you any indication if the money was raised at other than a 1x, it will at least give you the ballpark preference overhang number. Even better, just ask what it is. But, be prepared for offended glares and raised eyebrows!&lt;/p&gt;
&lt;p id=&quot;af8b&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;Wishing you better outcomes in your future&lt;/p&gt;
&lt;p id=&quot;3832&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;&lt;strong class=&quot;gp hc&quot;&gt;&lt;em class=&quot;hb&quot;&gt;— Heidi&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p id=&quot;fb1d&quot; class=&quot;gn go ep ba gp b gq gr gs gt gu gv gw gx gy gz ha&quot;&gt;&lt;strong class=&quot;gp hc&quot;&gt;&lt;em class=&quot;hb&quot;&gt;Send me questions at HelpmeHeidi@threshold.vc&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Fri, 25 Oct 2019 19:43:06 +0000</pubDate>
<dc:creator>rmason</dc:creator>
<og:type>article</og:type>
<og:title>My company sold for $100 million and I got Zilch. How can that be?</og:title>
<og:description>Dear Heidi:</og:description>
<og:url>https://medium.com/help-me-heidi/my-company-sold-for-100-million-and-i-got-zilch-how-can-that-be-f7be0563f1f8</og:url>
<og:image>https://miro.medium.com/max/1200/1*6G_YubFAdsqg2fLVkmgLGw@2x.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://medium.com/help-me-heidi/my-company-sold-for-100-million-and-i-got-zilch-how-can-that-be-f7be0563f1f8</dc:identifier>
</item>
<item>
<title>Economists are now admitting that they were wrong about globalization</title>
<link>https://foreignpolicy.com/2019/10/22/economists-globalization-trade-paul-krugman-china/</link>
<guid isPermaLink="true" >https://foreignpolicy.com/2019/10/22/economists-globalization-trade-paul-krugman-china/</guid>
<description>&lt;div class=&quot;feature-header-text&quot;&gt;
&lt;h3 class=&quot;department&quot;&gt;&lt;a href=&quot;https://foreignpolicy.com/category/the-big-think/&quot; class=&quot;department-name&quot;&gt;The Big Think&lt;/a&gt;&lt;/h3&gt;

&lt;/div&gt;
&lt;img class=&quot;wide_header_bg&quot; src=&quot;https://foreignpolicy.com/wp-content/uploads/2019/10/economics-globalization-paul-krugman-illustration.jpg&quot;/&gt;&lt;p&gt;&lt;span class=&quot;attribution&quot;&gt;Foreign Policy illustration/Panayiotis Tzamaros/NurPhoto via Getty Images&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;feature-header-text&quot;&gt;
&lt;h2 class=&quot;dek-heading&quot;&gt;Paul Krugman and other mainstream trade experts are now admitting that they were wrong about globalization: It hurt American workers far more than they thought it would. Did America’s free market economists help put a protectionist demagogue in the White House?&lt;/h2&gt;
&lt;hr/&gt;
&lt;/div&gt;
&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;54.666503428012&quot;&gt;
&lt;p class=&quot;wide_intro_lead first_lead&quot;&gt;Paul Krugman has never suffered fools gladly. The Nobel Prize-winning economist rose to international fame—and a coveted space on the &lt;em&gt;New York Times&lt;/em&gt; op-ed page—by lacerating his intellectual opponents in the most withering way. In a series of books and articles beginning in the 1990s, Krugman branded just about everybody who questioned the rapid pace of globalization a fool who didn’t understand economics very well. “Silly” was a word Krugman used a lot to describe pundits who raised fears of economic competition from other nations, especially China. Don’t worry about it, he said: Free trade will have only minor impact on your prosperity.&lt;/p&gt;
&lt;p&gt;Now Krugman has come out and admitted, offhandedly, that his own understanding of economics has been seriously deficient as well. In a &lt;a href=&quot;https://www.bloomberg.com/opinion/articles/2019-10-10/inequality-globalization-and-the-missteps-of-1990s-economics&quot;&gt;recent essay&lt;/a&gt; titled “What Economists (Including Me) Got Wrong About Globalization,” adapted from a forthcoming book on inequality, Krugman writes that he and other mainstream economists “missed a crucial part of the story” in failing to realize that globalization would lead to “hyperglobalization” and huge economic and social upheaval, particularly of the industrial middle class in America. And many of these working-class communities have been hit hard by Chinese competition, which economists made a “major mistake” in underestimating, Krugman says.&lt;/p&gt;

&lt;p&gt;It was quite a “whoops” moment, considering all the ruined American communities and displaced millions of workers we’ve seen in the interim. And a newly humbled Krugman must consider an even more disturbing idea: Did he and other mainstream economists help put a protectionist populist, Donald Trump, in the White House with a lot of bad advice about free markets?&lt;/p&gt;
&lt;p&gt;To be fair, Krugman has been forthright in recent years in second-guessing his earlier assertions about the effects of open trade. He has also become a leading and sometimes harsh critic of his own profession, especially in the aftermath of the financial crisis and Great Recession, when he declared that much of the past 30 years of macroeconomics was “spectacularly useless at best, and positively harmful at worst.” He admirably held the Obama administration to account for its timid financial and economic reforms. He even had some kind things to say about proto-progressives such as Robert Reich, the former Clinton administration labor secretary who worried about global competition and sought better protections and retraining for American workers, and whom Krugman had &lt;a href=&quot;https://www.newsweek.com/great-debunker-175732&quot;&gt;once dismissed to me&lt;/a&gt;—back in his lacerating days in the ’90s—as an “offensive figure, a brilliant coiner of one-liners but not a serious thinker.”&lt;/p&gt;
&lt;p&gt;“I’m glad he’s finally seen the light on trade,” Reich told me in an email. Krugman, in another email, wrote: “I regret having said that about Reich, but if he foresaw hyperglobalization or the localized effects of the China shock, that’s news to me.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;scandal_entry&quot; readability=&quot;32&quot;&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;“I’m glad he’s finally seen the light on trade,” former Clinton administration labor secretary Robert Reich told me in an email.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;50.801749271137&quot;&gt;
&lt;p&gt;Yet it has taken an awful long time for economists to admit that their profession has been far too sure of itself—or, as a penitent Krugman put it himself in a &lt;a href=&quot;https://www.nytimes.com/2009/09/06/magazine/06Economic-t.html&quot;&gt;2009 article&lt;/a&gt; in the &lt;em&gt;New York Times Magazine&lt;/em&gt;, that “economists, as a group, mistook beauty, clad in impressive-looking mathematics, for truth.” As the journalist Binyamin Appelbaum writes in his new book, &lt;em&gt;The Economists’ Hour: False Prophets, Free Markets, and the Fracture of Society&lt;/em&gt;, economists came to dominate policymaking in Washington in a way they never had before and, starting in the late 1960s, seriously misled the nation, helping to disrupt and divide it socially with a false sense of scientific certainty about the wonders of free markets. The economists pushed efficiency at all costs at the expense of social welfare and “subsumed the interests of Americans as producers to the interests of Americans as consumers, trading well-paid jobs for low-cost electronics.” &lt;/p&gt;
&lt;p&gt;David Autor, an economist at the Massachusetts Institute of Technology (MIT) whose documentation of the surprising effects of China’s rapid rise on the U.S. labor market is cited by Krugman in his new essay, gives the &lt;em&gt;Times&lt;/em&gt; columnist a lot of credit for admitting error. “How rare is that?!” Autor wrote via email. He said he doesn’t blame Krugman or other defenders of “the prior consensus” for making faulty predictions about trade. “I honestly think that getting this one right &lt;em&gt;ex ante&lt;/em&gt; would have been akin to accurately forecasting the date, time and location of an earthquake.” The bigger problem was the pro-free trade zeitgeist, Autor said. “I think that the received wisdom inhibited economists from closely evaluating the evidence of what was underway. … One could say that there was something of a guild orthodoxy: The key dictum was that policymakers should be told that trade was good for everyone in all places and times.”&lt;/p&gt;
&lt;p&gt;Dani Rodrik, a Harvard University economist who in 1997 published a then-heretical book called &lt;em&gt;Has Globalization Gone Too Far?&lt;/em&gt;, said last week that he wrote it precisely because he believed that “the profession was so blasé about globalization.” Now his views are mainstream, and Rodrik is president-elect of the International Economic Association. But the economists have barely begun to clean up the mess they left behind, as a conference on inequality at the Peterson Institute for International Economics in Washington, organized by Rodrik and former International Monetary Fund (IMF) chief economist Olivier Blanchard, made clear last week. And now in some ways it’s too late because, as Rodrik says, it’s not even possible to have a reasonable discussion under Trump. The U.S. president has effectively discarded modern economics, reembraced crude protectionism, and, like the mercantilists of the pre-Adam Smith era, appears to see trade as a zero-sum game in which surpluses are in effect profits and deficits are losses. His ignorance of basic economics “is without parallel among modern American presidents,” Appelbaum writes in &lt;em&gt;The Economists’ Hour&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;scandal_entry&quot; readability=&quot;32&quot;&gt;
&lt;blockquote readability=&quot;7&quot;&gt;
&lt;p&gt;Krugman played a major part in attacking what he saw as economic ignorance by “strategic traders” who argued that U.S. jobs and wages might be seriously affected by cheap labor from the developing world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;42&quot;&gt;
&lt;p&gt;Yet Trump has been able to launch an unprecedented trade war, exploiting the public’s mistrust and fear of China, thanks in part to the economists’ early misreadings—specifically of how swiftly China’s economic surge would displace so many U.S. industrial jobs. As Krugman now acknowledges, “manufacturing employment fell off a cliff after 2000, and this decline corresponded to a sharp increase” in the U.S. trade deficit, especially with China. Those numbers, in turn, have tended to lend credence to Trump’s mercantilist notions, no matter how spurious.&lt;/p&gt;
&lt;p&gt;“One of the most perverse effects of Trump was that it completely erased any reasonable discussion” about how to address trade, inequality, and the right degree of protection for workers, Rodrik said. And this, too, is a downstream effect of the bad advice economists delivered about free trade going back to the ’90s.&lt;/p&gt;
&lt;p&gt;Or as MIT’s Autor put it: “Ultimately this policy boosterism blinded policymakers to the potentially grave consequences of trade shocks and likely lulled us into underpreparing for these shocks (e.g., we had a paltry safety net and retraining policies on hand). It led us somewhat blithely into a non-negligible policy disaster (AKA the China Shock) and provoked a public backlash that has rendered free trade toxic in the U.S. policy debate. There’s an irony for you: trade boosterism has ultimately hurt the cause of free trade.”&lt;/p&gt;
&lt;p&gt;Asked whether the mistakes made by him and other economists helped lead to the rise of Trump, Krugman responded: “We’re still debating this, but as far as I can tell Trump’s trade policy isn’t resonating with many people, even his blue-collar base. So it’s kind of hard to blame trade analysts for the phenomenon.”&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;38&quot;&gt;
&lt;p class=&quot;wide_intro_lead&quot;&gt;Others would disagree. Part of the problem is that, back in the ’90s, when the post-Cold War consensus was just emerging, economists tended to take a simplistic either-or view of trade—either you were a free trader or a protectionist—and forced people to choose sides. Krugman was one of them, adopting by and large the free trade position, which was ironic considering that his Nobel-winning work in economics was far more nuanced than his books and columns (and actually helped lay the intellectual foundations for smart strategic trade policy).&lt;/p&gt;
&lt;p&gt;Yet there were others in the policy debates—such as Rodrik, Reich, and Laura D’Andrea Tyson, who led former President Bill Clinton’s Council of Economic Advisers—who were far more worried about rapid globalization. They dared to question the pro-free trade consensus or at least, in Tyson’s case, to push for government-led industrial policy that would sharpen American competitiveness at a time when, after the Cold War, many newly liberalized nations were piling into the global economy at a great rate. This idea also was anathema to Krugman.&lt;/p&gt;
&lt;p&gt;“Dani was way ahead of his time,” Autor said. “He was worried not about sudden shocks per se but about the way that globalization hemmed in the policy options of open economies (options for financing social insurance, taxing increasingly mobile capital, etc). That was and is a deep point. … Meanwhile, Laura Tyson was advocating forward-looking industrial policy at a time when industrial policy was the Voldemort of policy tools.” Those who have studied Krugman’s work closely, like Autor, say that of course he understood that just the right kind of industrial policy could help build competitive sectors. But Autor added: “I suspect that economists feared that stating these points aloud to policymakers would be like handing a loaded weapon to a impetuous child.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;scandal_entry&quot; readability=&quot;33&quot;&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;Those who advocated anything resembling government interference in markets and “fair trade” (more tariffs, unemployment insurance, and worker protections) over “free trade” were usually branded protectionists and excluded from the debate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;102.52632413574&quot;&gt;
&lt;p&gt;Krugman maintains that his new mea culpa “was a fairly narrow one” about how trade would affect lower-wage workers and exacerbate inequality. That is true. But after the Cold War ended, the debate over trade (Krugman’s Nobel-winning specialty) became a proxy for a larger intellectual struggle over free markets versus government intervention. And Krugman played a major part in attacking what he saw as economic ignorance by “strategic traders” who argued that U.S. jobs and wages might be seriously affected by competition from cheap labor in the developing world. When William Greider, the former &lt;em&gt;Washington Post&lt;/em&gt; journalist, warned in a deeply reported book called &lt;em&gt;One World, Ready or Not: The Manic Logic of Global Capitalism&lt;/em&gt; that developing nations were gearing up for major industrial competition that would mean “[s]ome sectors of Americans are triumphant and other sectors are devastated,” Krugman &lt;a href=&quot;https://slate.com/business/1997/01/the-accidental-theorist.html&quot;&gt;called&lt;/a&gt; it a “thoroughly silly book.” When Michael Lind, another prominent public intellectual, suggested (accurately) that U.S. productivity growth might not be enough to offset “the global sweatshop economy,” Krugman declared Lind to be ignorant of economic “facts” and said that “one should not expect someone who does not work in the field to be able to get it right without some guidance.” Krugman was no less kind to fellow economists who dared to question the free trade consensus. When Tyson was chosen to head Clinton’s Council of Economic Advisers in 1993, Krugman said she lacked the “necessary analytical skills.”&lt;/p&gt;
&lt;p&gt;It was all just bad economics, Krugman said. Don’t worry so much about what all the other countries are up to; things will even out thanks to neoclassical concepts such as comparative advantage, which allows all nations to benefit from open trade. Indeed, those who advocated anything resembling government interference in markets and “fair trade” (more tariffs, unemployment insurance, and worker protections) over “free trade” were usually branded protectionists and excluded from the debate. Clinton, reveling in his reputation as the “globalization” president, barely held a meeting on the fate of the industrially displaced. When his old Rhodes Scholar pal from the University of Oxford, Labor Secretary Reich, openly advocated reinvestment in education, training, and infrastructure at a time when Clinton was keen on deficit-cutting, Reich was also edged out of the conversation and, eventually, the administration.&lt;/p&gt;
&lt;p&gt;Some ex-Clintonites such as Gene Sperling, the former head of the National Economic Council, argue that the debate was never so stark. “Clinton cared about the middle class,” he told me. And had the Democrats continued in power, they would have worked much harder to bring China into compliance with trade norms, for example by enforcing “anti-surge” protections—required of China as part of its World Trade Organization membership negotiated by Clinton in 1999—against the dumping of huge amounts of cheap product that undercut U.S. jobs, Sperling said. “People think that the only difference with Al Gore [in the 2000 presidential election] was the Iraq War, but another huge difference would have been that Gore would have gone way beyond anything [George W.] Bush did to protect manufacturing,” Sperling said. (A &lt;a href=&quot;https://www.amazon.com/Schism-America-Fracturing-Global-Trading/dp/1928096840&quot;&gt;new book&lt;/a&gt; by the former &lt;em&gt;Washington Post&lt;/em&gt; economics reporter Paul Blustein, &lt;em&gt;Schism: China, America, and the Fracturing of the Global Trading System&lt;/em&gt;, also concludes that the Bush administration let China get away with far too much, including artificially devaluing its currency to boost exports—which led ultimately to Trump’s claim that China had committed “rape” of the U.S. economy.)&lt;/p&gt;
&lt;p&gt;Other former Krugman victims &lt;a href=&quot;https://www.thenation.com/article/why-was-paul-krugman-so-wrong/&quot;&gt;still blame him&lt;/a&gt; for his misjudgments and are not so assuaged by his penitence. “This is not bad as mea culpas go, but if you read through to the end, Krugman persists with the oversimplified dichotomy of free trade versus protectionism, ignoring such successful hybrids as East Asian neo-mercantilism,” said Robert Kuttner, the co-editor of the &lt;em&gt;American Prospect&lt;/em&gt; and a much-cited progressive thinker. “This is all the more bizarre because the young Krugman came to prominence demonstrating that [national] competitive advantage could be created, something that any non-economist student of economic history could have told him.”&lt;/p&gt;
&lt;p&gt;Krugman, in his defense, has always believed in protections for the middle class, including better health care and education (his old &lt;em&gt;Times&lt;/em&gt; blog was titled “The Conscience of a Liberal”), and he says now that just because he has admitted errors on trade doesn’t mean he ever endorsed the so-called Washington Consensus—the neoliberal (that is, pro-free trade) view that regularly came down on the side of fiscal discipline, rapid privatization, and deregulation. “I guess the point is that conceding that we got some things wrong doesn’t mean that every critic was right; it depends on what they said, and as far as I know almost nobody foresaw the massive rise in trade or focused at all on localized regional impacts,” Krugman told me last week.&lt;/p&gt;
&lt;p&gt;But there were deeper conceptual problems with the pro-globalization consensus as well. Another Nobel-winning economist, Joseph Stiglitz, who like Rodrik warned back in the ’90s of the disruptive effects of too rapid lowering of trade and capital barriers, told me that the problem with “standard neoclassical analysis” was that it “never paid any attention to adjustment. Labor market adjustment miraculously happened costlessly.” Like Tyson and Reich, Stiglitz, who served as a chair of Clinton’s Council of Economic Advisers, was an outlier at the time, seeking (but failing) to slow the pace of international capital flows. He also argued that “typically jobs were destroyed far faster than new jobs were created.”&lt;/p&gt;
&lt;p&gt;Krugman, in his new essay, admits that the economists like him in favor of the ’90s consensus behind free trade—who thought that the effects on labor would be minimal—“didn’t turn much to analytic methods that focus on workers in particular industries and communities, which would have given a better picture of short-run trends. This was, I now believe, a major mistake—one in which I shared a hand.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;scandal_entry&quot; readability=&quot;34.5&quot;&gt;
&lt;blockquote readability=&quot;12&quot;&gt;
&lt;p&gt;The main loser, again, is the American worker. Whereas economists used to believe that workers, during boom times, could drive up their compensation (thus leading to inflation), the emerging economic wisdom now suggests something different.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;wide_copy some_padding&quot; readability=&quot;54.480189022174&quot;&gt;
&lt;p&gt;But there were plenty who did pay attention to how the old verities about open trade and comparative advantage were no longer as telling, displaced by new trends such as global supply chains, which shifted huge numbers of jobs overseas and took out whole communities. Krugman himself eventually concluded in &lt;a href=&quot;https://www.brookings.edu/wp-content/uploads/2008/03/2008a_bpea_krugman.pdf&quot; target=&quot;_blank&quot;&gt;a 2008 academic paper&lt;/a&gt; that because of these supercomplex supply chains, “the changing nature of world trade has outpaced economists’ ability to engage in secure quantitative analysis.”&lt;/p&gt;
&lt;p&gt;As Stiglitz put it to &lt;em&gt;Foreign Policy&lt;/em&gt;: “Obviously, the costs [of globalization] would be borne by particular communities, particular places—and manufacturing had located [to] places where wages were low, suggesting that these were places where adjustment costs were likely large.” And it’s increasingly clear the detrimental effects may not be merely short-term trends. The swift opening up of trade with developing countries, combined with investment agreements, has “dramatically changed workers’ bargaining power (an effect reinforced by weakening unions and other changes in labor legislation and regulation).”&lt;/p&gt;
&lt;p&gt;That in turn has forced the rethinking of another major dimension of traditional economics. Economists once believed that low unemployment led to inflation, but today that relationship, called the standard Phillips curve, has broken down, the &lt;em&gt;Economist&lt;/em&gt; &lt;a href=&quot;https://www.economist.com/leaders/2019/10/10/the-world-economys-strange-new-rules&quot;&gt;wrote&lt;/a&gt; in a recent cover story. The main loser, again, is the American worker. Whereas economists used to believe that workers, during boom times, could drive up their compensation (thus leading to inflation), the emerging economic wisdom now suggests something different: After a quarter century in which multinationals have turned the whole globe into their economic turf (while workers usually have to stay in their home countries), globalized capital—manifesting itself as multinational supply chains—has the upper hand over domestic labor.&lt;/p&gt;
&lt;p&gt;Hence, economists themselves are surprised at how quickly the mainstream of their profession has moved leftward—as many of them found at last week’s conference on inequality. And when it comes to 2020 U.S. election politics, the profession is much more with progressives like Elizabeth Warren and Bernie Sanders, some of the participants said, than the centrist Joe Biden—open to radical solutions that give back bargaining power to labor (for example, Warren’s proposal to give workers a large place on corporate boards). “I came here as a French socialist, and now I find I’m in the center,” joked former IMF chief economist Blanchard.&lt;/p&gt;
&lt;p&gt;And this may be the ultimate downstream effect of all those misreadings dating back to the ’90s. “People,” Tyson remarked, “missed how fast things could change.”&lt;/p&gt;
&lt;/div&gt;
</description>
<pubDate>Fri, 25 Oct 2019 17:16:22 +0000</pubDate>
<dc:creator>cbHXBY1D</dc:creator>
<og:title>Economists on the Run</og:title>
<og:image>https://foreignpolicy.com/wp-content/uploads/2019/10/economics-globalization-paul-krugman-illustration.jpg</og:image>
<og:url>https://foreignpolicy.com/2019/10/22/economists-globalization-trade-paul-krugman-china/</og:url>
<og:description>Paul Krugman and other mainstream trade experts are now admitting that they were wrong about globalization: It hurt American workers far more than they thought…</og:description>
<og:type>article</og:type>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://foreignpolicy.com/2019/10/22/economists-globalization-trade-paul-krugman-china/</dc:identifier>
</item>
<item>
<title>Who Killed the Scrollbar?</title>
<link>https://ello.co/dredmorbius/post/0hgfswmoti3fi5zgftjecq</link>
<guid isPermaLink="true" >https://ello.co/dredmorbius/post/0hgfswmoti3fi5zgftjecq</guid>
<description>&lt;p&gt;It's not so bad on desktops, and I can restore it there anyway via CSS.&lt;/p&gt;
&lt;p&gt;But on Mobile, it seems the hip hawt coolness for today's kids is to either completely disappear, or make only occasionally visible, the scrollbar.&lt;/p&gt;
&lt;p&gt;Lord knows, you can't actually &lt;em&gt;grab&lt;/em&gt; the scrollbar and &lt;em&gt;navigate&lt;/em&gt; with the bloody thing.&lt;/p&gt;
&lt;p&gt;Problem is: with long articles (I'm reading on of &lt;a href=&quot;https://ello.co/cstross&quot; class=&quot;user-mention&quot;&gt;@cstross&lt;/a&gt;'s blog posts, and the inevitable &lt;em&gt;War and Peace&lt;/em&gt; length comments section) leave you with:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;No flipping clue how long the flipping post flipping is.&lt;/li&gt;
&lt;li&gt;No flipping way to quickly navigate to the top or bottom of the post.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;That last is &lt;em&gt;with&lt;/em&gt; a (really miserable, utterly unsuitable, totally disrecommended) Logitech Bluetooth keyboard. Which utterly flipping lacks flipping page-up, page-down, home, and end keys.&lt;/p&gt;
&lt;p&gt;You know: for rapidly getting around a document.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://o.ello.co/https://getpocket.com&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;Pocket&lt;/a&gt; is another service that effs this up. Here, we &lt;em&gt;get&lt;/em&gt; a scrollbar, but it's a skinny, scrawny-ass, emaciated, anaemic, pale pasty little twit, that disappears as soon as you flipping look at it. Mind that Pocket is &lt;em&gt;supposed&lt;/em&gt; to be a flipping tool for flipping &lt;em&gt;reading&lt;/em&gt; flipping stuff, and flipping &lt;em&gt;helping&lt;/em&gt; you with that.&lt;/p&gt;
&lt;p&gt;(Pocket gets a number of other things right. &lt;del&gt;It's a decent tool, and I'm happy to have it.&lt;/del&gt; &lt;a href=&quot;https://o.ello.co/https://www.reddit.com/r/dredmorbius/comments/5x2sfx/pocket_it_gets_worse_the_more_you_use_it/&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Though I'm increasingly disappointed with it over time&lt;/em&gt;&lt;/a&gt; But it sure as shootin' can use a few shots in the arm, or ass, to fill in some weaknesses.)&lt;/p&gt;
&lt;p&gt;Doing one whole hell of a flipping lot of flipping reading these flipping days, both hardcopy and online, I can tell you that the whole flipping idea of &lt;em&gt;knowing how much more flipping material there flipping is to read&lt;/em&gt; is one of the really flipping nice affordances of this funky Egyptian-Chinese-German hybrid technology people worked out. It's called a &lt;em&gt;book&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;But no, take a tablet, add keyboard, give it a 9-10 inch (~20 cm) screen, &lt;strong&gt;and take away every last flipping goddamned means developed over 45 years of graphical user interface design for flipping telling &lt;em&gt;where&lt;/em&gt; you are in a document and &lt;em&gt;efficiently going elsewhere&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This. Is. Not. Progress.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I swear heads have to roll. Literally.&lt;/p&gt;
&lt;p&gt;There's a viewport width at which scrollbars -- real flipping grabbable scrollbars -- make flipping sense. I'm not convinced there's one at which they don't.&lt;/p&gt;
&lt;p&gt;(Oh, hey, &lt;a href=&quot;https://ello.co/ello&quot; class=&quot;user-mention&quot;&gt;@ello&lt;/a&gt;, &lt;a href=&quot;https://ello.co/wtf&quot; class=&quot;user-mention&quot;&gt;@wtf&lt;/a&gt;, since I totally &lt;img class=&quot;emoji&quot; title=&quot;:two_hearts:&quot; alt=&quot;:two_hearts:&quot; src=&quot;https://d2r3yqi5wwm1w7.cloudfront.net/images/emoji/unicode/1f495.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot;/&gt; y'all, before I come around with my portable Gil-u-Teen and Revolutionary Carnival, y'all might wanna see about fixing scrollbars on Ello as well.)&lt;/p&gt;
&lt;p&gt;(Note: the word &quot;flipping&quot;, and cognates, in this document was originally similar, but some of the letters were different.)&lt;/p&gt;
</description>
<pubDate>Fri, 25 Oct 2019 16:21:39 +0000</pubDate>
<dc:creator>dredmorbius</dc:creator>
<og:type>website</og:type>
<og:url>https://ello.co/dredmorbius/post/0hgfswmoti3fi5zgftjecq</og:url>
<og:title>feeling ranty: killed scrollbar - dredmorbius | ello</og:title>
<og:description># While I'm feeling ranty: who killed the scrollbar? It's not so bad on desktops, and I can restore it there anyway via CSS. But on Mobile, it seems the hip hawt coolness for today's kids is to either completely disappear, or make only occasionally visible, the scrollbar. Lord knows, you can't actually _grab_ the scrollbar and _navigate_ with the bloody thing. Problem is: with long articles (I'm reading on of @cstross's blog posts, and the inevitable _War and Peace_ length comments section) leave you with: 1. No flipping clue how long the flipping post flipping is. 1. No flipping way to quickly navigate to the top or bottom of the post. That last is _with_ a (really miserable, utterly unsuitable, totally disrecommended) Logitech Bluetooth keyboard. Which utterly flipping lacks flipping page-up, page-down, home, and end keys. You know: for rapidly getting around a document. [Pocket](https://getpocket.com) is another service that effs this up. Here, we _get_ a scrollbar, but it's a skinny, scrawny-ass, emaciated, anaemic, pale pasty little twit, that disappears as soon as you flipping look at it. Mind that Pocket is _supposed_ to be a flipping tool for flipping _reading_ flipping stuff, and flipping _helping_ you with that. (Pocket gets a number of other things right. ~~It's a decent tool, and I'm happy to have it.~~ [_Though I'm increasingly disappointed with it over time_](https://www.reddit.com/r/dredmorbius/comments/5x2sfx/pocket_it_gets_worse_the_more_you_use_it/) But it sure as shootin' can use a few shots in the arm, or ass, to fill in some weaknesses.) Doing one whole hell of a flipping lot of flipping reading these flipping days, both hardcopy and online, I can tell you that the whole flipping idea of _knowing how much more flipping material there flipping is to read_ is one of the really flipping nice affordances of this funky Egyptian-Chinese-German hybrid technology people worked out. It's called a _book_. But no, take a tablet, add keyboard, give it a 9-10 inch (~20 cm) screen, **and take away every last flipping goddamned means developed over 45 years of graphical user interface design for flipping telling _where_ you are in a document and _efficiently going elsewhere_.** **This. Is. Not. Progress.** I swear heads have to roll. Literally. There's a viewport width at which scrollbars -- real flipping grabbable scrollbars -- make flipping sense. I'm not convinced there's one at which they don't. (Oh, hey, @ello, @wtf, since I totally :two_hearts: y'all, before I come around with my portable Gil-u-Teen and Revolutionary Carnival, y'all might wanna see about fixing scrollbars on Ello as well.) (Note: the word &quot;flipping&quot;, and cognates, in this document was originally similar, but some of the letters were different.)</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://ello.co/dredmorbius/post/0hgfswmoti3fi5zgftjecq</dc:identifier>
</item>
<item>
<title>Perfectly Cropped</title>
<link>https://tyler.io/perfectly-cropped/</link>
<guid isPermaLink="true" >https://tyler.io/perfectly-cropped/</guid>
<description>&lt;p&gt;Here’s a fun, personal story about what can go wrong in an otherwise fine UI when things are redesigned.&lt;/p&gt;&lt;p&gt;My wife typically only charges her phone when she’s at her desk during the day. She doesn’t leave it plugged in overnight, which means iOS’s software update never happens automatically for her. So, she just recently upgraded to iOS 13 a few days ago.&lt;/p&gt;
&lt;p&gt;Fast forward to today…&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1456&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/liz-text1.jpeg&quot; width=&quot;1125&quot; height=&quot;1137&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/liz-text1.jpeg 1125w, https://cdn.tyler.io/wp-content/uploads/2019/10/liz-text1-297x300.jpeg 297w, https://cdn.tyler.io/wp-content/uploads/2019/10/liz-text1-768x776.jpeg 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/liz-text1-1013x1024.jpeg 1013w&quot; sizes=&quot;(max-width: 1125px) 100vw, 1125px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;She claimed she couldn’t save photos to her phone that someone else texted her. My first thought was “oh god, it’s something to do with her iCloud account” that I tweeted about a few days ago.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1451&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/ios13-messages-convo.png&quot; width=&quot;1174&quot; height=&quot;1634&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/ios13-messages-convo.png 1174w, https://cdn.tyler.io/wp-content/uploads/2019/10/ios13-messages-convo-216x300.png 216w, https://cdn.tyler.io/wp-content/uploads/2019/10/ios13-messages-convo-768x1069.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/ios13-messages-convo-736x1024.png 736w&quot; sizes=&quot;(max-width: 1174px) 100vw, 1174px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;So, I call her and we start debugging this over speaker phone.&lt;/p&gt;
&lt;p&gt;“What app are you in?”&lt;/p&gt;
&lt;p&gt;“Messages.”&lt;/p&gt;
&lt;p&gt;“Are you tapping the Share button?”&lt;/p&gt;
&lt;p&gt;“The box with the up arrow? Yes.”&lt;/p&gt;
&lt;p&gt;“You don’t have a save option?”&lt;/p&gt;
&lt;p&gt;“No, all I can do is send it to other people or make a reminder or a note or stuff like that.”&lt;/p&gt;
&lt;p&gt;“Send me a screenshot.”&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1455&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1.png&quot; width=&quot;1242&quot; height=&quot;2208&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1.png 1242w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-169x300.png 169w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-768x1365.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-576x1024.png 576w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1200x2133.png 1200w&quot; sizes=&quot;(max-width: 1242px) 100vw, 1242px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1454&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2.png&quot; width=&quot;1242&quot; height=&quot;2208&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2.png 1242w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2-169x300.png 169w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2-768x1365.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2-576x1024.png 576w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-2-1200x2133.png 1200w&quot; sizes=&quot;(max-width: 1242px) 100vw, 1242px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;“Ohhh, no. You have to scroll down. I don’t know how to explain the difference, but “apps” are left and right and “actions” are up and down.”&lt;/p&gt;
&lt;p&gt;“I &lt;em&gt;am&lt;/em&gt; scrolling down. There’s no save option.”&lt;/p&gt;
&lt;p&gt;“Send me another screenshot.”&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1452&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3.png&quot; width=&quot;1242&quot; height=&quot;2208&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3.png 1242w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3-169x300.png 169w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3-768x1365.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3-576x1024.png 576w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-3-1200x2133.png 1200w&quot; sizes=&quot;(max-width: 1242px) 100vw, 1242px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1453&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4.png&quot; width=&quot;1242&quot; height=&quot;2208&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4.png 1242w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4-169x300.png 169w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4-768x1365.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4-576x1024.png 576w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-4-1200x2133.png 1200w&quot; sizes=&quot;(max-width: 1242px) 100vw, 1242px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;“No, no. You tapped the “More” button where you pick what apps show up. You need to scroll down from the main screen. Look for the black and white icons on the bottom.”&lt;/p&gt;
&lt;p&gt;At this point there were a few seconds of silence before she yells “Oh my god! This is just like the dumb new Music app. I didn’t even &lt;em&gt;know&lt;/em&gt; I could scroll down!”&lt;/p&gt;
&lt;p&gt;Why didn’t she know there were options further down the share sheet? Because she’s using an iPhone 8, which happens to be just the right height to perfectly crop the share sheet. Take a look again at the first screenshot she sent me:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1450&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1.png&quot; width=&quot;1242&quot; height=&quot;2208&quot; srcset=&quot;https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1.png 1242w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1-169x300.png 169w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1-768x1365.png 768w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1-576x1024.png 576w, https://cdn.tyler.io/wp-content/uploads/2019/10/sharesheet-1-1-1200x2133.png 1200w&quot; sizes=&quot;(max-width: 1242px) 100vw, 1242px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;The “Copy” action is perfectly spaced from the bottom of the screen to appear like it’s the only option. And since iOS (and in some places now macOS, too) doesn’t offer visual affordances like scroll indicators, she had no idea there was any content further below.&lt;/p&gt;
&lt;p&gt;I’m a developer with an eye for design, but I’m certainly &lt;em&gt;not&lt;/em&gt; a designer. So I don’t know what the solution is to these types of accidental UI bugs. But I see them impact my aging parents &lt;em&gt;all the time&lt;/em&gt;. This was just the first time one has so obviously confused my wife, and it caught me by surprise, too.&lt;/p&gt;
</description>
<pubDate>Fri, 25 Oct 2019 11:33:01 +0000</pubDate>
<dc:creator>keehun</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://tyler.io/perfectly-cropped/</dc:identifier>
</item>
<item>
<title>Rxdb: A reactive database where you can subscribe to the result of a query</title>
<link>https://github.com/pubkey/rxdb</link>
<guid isPermaLink="true" >https://github.com/pubkey/rxdb</guid>
<description>&lt;div class=&quot;Box-body&quot;&gt;
&lt;article class=&quot;markdown-body entry-content p-5&quot; itemprop=&quot;text&quot;&gt;&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/pubkey/rxdb&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/d37d727a62777a47be1064948a80ca04cec71f50/68747470733a2f2f63646e2e7261776769742e636f6d2f7075626b65792f727864622f62613763396238302f646f63732f66696c65732f6c6f676f2f6c6f676f5f746578742e737667&quot; width=&quot;380px&quot; data-canonical-src=&quot;https://cdn.rawgit.com/pubkey/rxdb/ba7c9b80/docs/files/logo/logo_text.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;strong&gt;A realtime Database for JavaScript Applications&lt;/strong&gt;&lt;/p&gt;
&lt;p align=&quot;justify&quot;&gt;RxDB (short for &lt;strong&gt;R&lt;/strong&gt;eactive &lt;strong&gt;D&lt;/strong&gt;ata&lt;strong&gt;b&lt;/strong&gt;ase) is a NoSQL-database for JavaScript Applications like Websites, hybrid Apps, Electron-Apps and NodeJs. Reactive means that you can not only query the current state, but &lt;strong&gt;subscribe&lt;/strong&gt; to all state-changes like the result of a query or even a single field of a document. This is useful for &lt;strong&gt;UI-based&lt;/strong&gt; apps that always display the realtime state to the user. RxDB can do a realtime replication with any &lt;strong&gt;CouchDB&lt;/strong&gt; compliant endpoint and also with &lt;strong&gt;GraphQL&lt;/strong&gt; endpoints.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://gitter.im/pubkey/rxdb&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/00adba2c288d5afed8b1310679b56639fb127e70/68747470733a2f2f63646e2e7261776769742e636f6d2f7075626b65792f727864622f6d61737465722f646f63732d7372632f66696c65732f6769747465722e737667&quot; data-canonical-src=&quot;https://cdn.rawgit.com/pubkey/rxdb/master/docs-src/files/gitter.svg&quot;/&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=rxdbjs&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/23e0da1e029787c452b457416088fb85a18d1867/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f727864626a732e7376673f7374796c653d736f6369616c266c6f676f3d74776974746572&quot; alt=&quot;follow on Twitter&quot; data-canonical-src=&quot;https://img.shields.io/twitter/follow/rxdbjs.svg?style=social&amp;amp;logo=twitter&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/realtime.gif&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/realtime.gif&quot; alt=&quot;reactive.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th/&gt;
&lt;th&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;💻📱&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Multiplatform support&lt;/strong&gt; for browsers, nodejs, electron, cordova, react-native and every other javascript-runtime&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;📨&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Reactive&lt;/strong&gt; data-handling based on &lt;a href=&quot;https://github.com/ReactiveX/rxjs&quot;&gt;RxJS&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;🚣&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Offline first&lt;/strong&gt; let your app still work when the users has no internet&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;🔄&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Replication&lt;/strong&gt; between client and server-data, compatible with &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/icons/pouchdb.png&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/icons/pouchdb.png&quot; alt=&quot;pouchdb&quot;/&gt;&lt;/a&gt;PouchDB, &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/icons/couchdb.png&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/icons/couchdb.png&quot; alt=&quot;couchdb&quot;/&gt;&lt;/a&gt;CouchDB and &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/icons/cloudant.png&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/icons/cloudant.png&quot; alt=&quot;cloudant&quot;/&gt;&lt;/a&gt;IBM Cloudant. There is also a plugin for a &lt;strong&gt;GraphQL replication&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;📄&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Schema-based&lt;/strong&gt; with the easy-to-learn standard of &lt;a href=&quot;https://json-schema.org/&quot; rel=&quot;nofollow&quot;&gt;json-schema&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;🍊&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Mango-Query&lt;/strong&gt; exactly like you know from mongoDB and mongoose&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;🔐&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Encryption&lt;/strong&gt; of single data-fields to protect your users data&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;📤📥&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Import/Export&lt;/strong&gt; of the database-state (json), awesome for coding with &lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot; rel=&quot;nofollow&quot;&gt;TDD&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;📡&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Multi-Window&lt;/strong&gt; to synchronise data between different browser-windows or nodejs-processes&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;💅&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;ORM-capabilities&lt;/strong&gt; to easily handle data-code-relations and customize functions of documents and collections&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;🔷&lt;/td&gt;
&lt;td&gt;Full &lt;strong&gt;TypeScript&lt;/strong&gt; support for fast and secure coding&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2&gt;Platform-support&lt;/h2&gt;
&lt;p&gt;RxDB is made so that you can use &lt;strong&gt;exactly the same code&lt;/strong&gt; at&lt;/p&gt;
&lt;p&gt;We optimized, double-checked and made boilerplates so you can directly start to use RxDB with frameworks like&lt;/p&gt;
&lt;h2&gt;Quickstart&lt;/h2&gt;
&lt;h3&gt;Installation:&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;
&lt;pre&gt;
npm install rxdb --save

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt; peerDependencies&lt;/span&gt;
npm install rxjs --save
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Import:&lt;/h3&gt;
&lt;details&gt;ES7
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;RxDB&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;rxdb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;RxDB&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;create&lt;/span&gt;({
    name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;heroesdb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    adapter&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;websql&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    password&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;myLongAndStupidPassword&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; optional&lt;/span&gt;
    multiInstance&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;                  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; default: true&lt;/span&gt;
  });                                                       &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; create database&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;db&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;collection&lt;/span&gt;({name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;heroes&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, schema&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; mySchema});    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; create collection&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;db&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;heroes&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;insert&lt;/span&gt;({ name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Bob&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; });                          &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; insert document&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;ES5
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; RxDB &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;rxdb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-smi&quot;&gt;RxDB&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;create&lt;/span&gt;({
    name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;heroesdb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    adapter&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;websql&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    password&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;myLongAndStupidPassword&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; optional&lt;/span&gt;
    multiInstance&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;                  &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; default: true&lt;/span&gt;
  })                                                                              &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; create database&lt;/span&gt;
  .&lt;span class=&quot;pl-c1&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;db&lt;/span&gt;) {&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;db&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;collection&lt;/span&gt;({name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;heroes&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, schema&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; mySchema});}) &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; create collection&lt;/span&gt;
  .&lt;span class=&quot;pl-c1&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;pl-k&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;collection&lt;/span&gt;) {&lt;span class=&quot;pl-smi&quot;&gt;collection&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;insert&lt;/span&gt;({name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Bob&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;});})                 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; insert document&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;h2&gt;Feature-Showroom (click to toggle)&lt;/h2&gt;
&lt;details&gt;&lt;strong&gt;Mango-Query&lt;/strong&gt;
&lt;p&gt;To find data in your collection, use the &lt;a href=&quot;https://github.com/aheckmann/mquery&quot;&gt;mquery&lt;/a&gt; api to create chained mango-queries, which you maybe know from &lt;strong&gt;mongoDB&lt;/strong&gt; or &lt;strong&gt;mongoose&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
myCollection
  .&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;()
  .&lt;span class=&quot;pl-en&quot;&gt;where&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;ne&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;Alice&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;where&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;age&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;gt&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;18&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;lt&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;67&lt;/span&gt;)
  .&lt;span class=&quot;pl-en&quot;&gt;limit&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;10&lt;/span&gt;)
  .&lt;span class=&quot;pl-c1&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;-age&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-c1&quot;&gt;exec&lt;/span&gt;().&lt;span class=&quot;pl-c1&quot;&gt;then&lt;/span&gt;( &lt;span class=&quot;pl-smi&quot;&gt;docs&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;dir&lt;/span&gt;(docs);
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Reactive&lt;/strong&gt;
&lt;p&gt;RxDB implements &lt;a href=&quot;https://github.com/ReactiveX/rxjs&quot;&gt;rxjs&lt;/a&gt; to make your data reactive. This makes it easy to always show the real-time database-state in the dom without manually re-submitting your queries.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;db&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;heroes&lt;/span&gt;
  .&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;()
  .&lt;span class=&quot;pl-c1&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;name&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
  .&lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &amp;lt;- returns observable of query&lt;/span&gt;
  .&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;( &lt;span class=&quot;pl-smi&quot;&gt;docs&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class=&quot;pl-smi&quot;&gt;myDomElement&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; docs
      .&lt;span class=&quot;pl-en&quot;&gt;map&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&amp;lt;li&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;doc&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&amp;lt;/li&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;)
      .&lt;span class=&quot;pl-c1&quot;&gt;join&lt;/span&gt;();
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/reactive.gif&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/reactive.gif&quot; alt=&quot;reactive.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;MultiWindow/Tab&lt;/strong&gt;
&lt;p&gt;When two instances of RxDB use the same storage-engine, their state and action-stream will be broadcasted. This means with two browser-windows the change of window #1 will automatically affect window #2. This works completely offline.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/multiwindow.gif&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/multiwindow.gif&quot; alt=&quot;multiwindow.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Replication&lt;/strong&gt;
&lt;p&gt;Because RxDB relies on glorious &lt;a href=&quot;https://github.com/pouchdb/pouchdb&quot;&gt;PouchDB&lt;/a&gt;, it is easy to replicate the data between devices and servers. And yes, the changeEvents are also synced.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/sync.gif&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/sync.gif&quot; alt=&quot;sync.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Schema&lt;/strong&gt;
&lt;p&gt;Schemas are defined via &lt;a href=&quot;http://json-schema.org/&quot; rel=&quot;nofollow&quot;&gt;jsonschema&lt;/a&gt; and are used to describe your data.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;mySchema&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; {
    title&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;hero schema&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    version&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;,                 &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &amp;lt;- incremental version-number&lt;/span&gt;
    description&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;describes a simple hero&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;object&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    properties&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
        name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
            type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
            primary&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;       &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &amp;lt;- this means: unique, required, string and will be used as '_id'&lt;/span&gt;
        },
        secret&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
            type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
            encrypted&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;     &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; &amp;lt;- this means that the value of this field is stored encrypted&lt;/span&gt;
        },
        skills&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
            type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;array&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
            maxItems&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;,
            uniqueItems&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;,
            item&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
                type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;object&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
                properties&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
                    name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
                        type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    },
                    damage&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; {
                        type&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;number&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    }
                }
            }
        }
    },
    required&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; [&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;color&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;]
};
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Encryption&lt;/strong&gt;
&lt;p&gt;By setting a schema-field to &lt;code&gt;encrypted: true&lt;/code&gt;, the value of this field will be stored in encryption-mode and can't be read without the password. Of course you can also encrypt nested objects. Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-json&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;secret&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: {
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;type&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;string&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;encrypted&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Level-adapters&lt;/strong&gt;
&lt;p&gt;The underlying pouchdb can use different &lt;a href=&quot;https://pouchdb.com/adapters.html&quot; rel=&quot;nofollow&quot;&gt;adapters&lt;/a&gt; as storage engine. So you can use RxDB in different environments by just switching the adapter. For example you can use websql in the browser, localstorage in mobile-browsers and a leveldown-adapter in nodejs.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; this requires the indexeddb-adapter&lt;/span&gt;
&lt;span class=&quot;pl-smi&quot;&gt;RxDB&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;plugin&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;pouchdb-adapter-idb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;));
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; this creates a database with the indexeddb-adapter&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;RxDB&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;create&lt;/span&gt;({
    name&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;mydatabase&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;,
    adapter&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;idb&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; the name of your adapter&lt;/span&gt;
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a &lt;a href=&quot;https://rxdb.info/adapters.html&quot; rel=&quot;nofollow&quot;&gt;big ecosystem&lt;/a&gt; of adapters you can use.&lt;/p&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Import / Export&lt;/strong&gt;
&lt;p&gt;RxDB lets you import and export the whole database or single collections into json-objects. This is helpful to trace bugs in your application or to move to a given state in your tests.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; export a single collection&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;jsonCol&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;myCollection&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;dump&lt;/span&gt;();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; export the whole database&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;jsonDB&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;myDatabase&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;dump&lt;/span&gt;();

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; import the dump to the collection&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;emptyCollection&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;importDump&lt;/span&gt;(json);


&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; import the dump to the database&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;emptyDatabase&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;importDump&lt;/span&gt;(json);
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Leader-Election&lt;/strong&gt;
&lt;p&gt;Imagine your website needs to get a piece of data from the server once every minute. To accomplish this task you create a websocket or pull-interval. If your user now opens the site in 5 tabs parallel, it will run the interval or create the socket 5 times. This is a waste of resources which can be solved by RxDB's LeaderElection.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;myRxDatabase&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;waitForLeadership&lt;/span&gt;()
  .&lt;span class=&quot;pl-c1&quot;&gt;then&lt;/span&gt;(() &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
      &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; this will only run when the instance becomes leader.&lt;/span&gt;
      mySocket &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;createWebSocket&lt;/span&gt;();
  });
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example the leader is marked with the crown ♛&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/files/leader-election.gif&quot;&gt;&lt;img src=&quot;https://github.com/pubkey/rxdb/raw/master/docs-src/files/leader-election.gif&quot; alt=&quot;reactive.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;Key-Compression&lt;/strong&gt;
&lt;p&gt;Depending on which adapter and in which environment you use RxDB, client-side storage is &lt;a href=&quot;https://pouchdb.com/2014/10/26/10-things-i-learned-from-reading-and-writing-the-pouchdb-source.html&quot; rel=&quot;nofollow&quot;&gt;limited&lt;/a&gt; in some way or the other. To save disc-space, RxDB has an internal schema-based key-compression to minimize the size of saved documents.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; when you save an object with big keys&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;myCollection&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;insert&lt;/span&gt;({
  firstName&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
  lastName&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;bar&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
  stupidLongKey&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;
});

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; RxDB will internally transform it to&lt;/span&gt;
{
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;|a&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;foo&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;|b&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;bar&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;|c&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;
}

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; so instead of 46 chars, the compressed-version has only 28&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; the compression works internally, so you can of course still access values via the original key.names&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;myDoc&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;firstName&lt;/span&gt;);
&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;//&lt;/span&gt; 'foo'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;&lt;details&gt;&lt;strong&gt;QueryChangeDetection&lt;/strong&gt;
&lt;p&gt;Similar to Meteors &lt;a href=&quot;https://github.com/meteor/docs/blob/version-NEXT/long-form/oplog-observe-driver.md&quot;&gt;oplog-observe-driver&lt;/a&gt;, RxDB has a QueryChangeDetection to optimize observed or reused queries. This makes sure that when you update/insert/remove documents, the query does not have to re-run over the whole database but the new results will be calculated from the events. This creates a huge performance-gain with zero cost. The QueryChangeDetection works internally and is currently in &lt;strong&gt;beta&lt;/strong&gt; (disabled by default).&lt;/p&gt;
&lt;h3&gt;Use-Case-Example&lt;/h3&gt;
&lt;p&gt;Imagine you have a very big collection with many user-documents. At your page you want to display a toplist with users which have the most &lt;code&gt;points&lt;/code&gt; and are currently logged in. You create a query and subscribe to it.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;usersCollection&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;find&lt;/span&gt;().&lt;span class=&quot;pl-en&quot;&gt;where&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;loggedIn&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-en&quot;&gt;eq&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;).&lt;span class=&quot;pl-c1&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;points&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;span class=&quot;pl-smi&quot;&gt;query&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;$&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;subscribe&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span class=&quot;pl-c1&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;body&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;).&lt;span class=&quot;pl-smi&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; users
        .&lt;span class=&quot;pl-en&quot;&gt;reduce&lt;/span&gt;((&lt;span class=&quot;pl-smi&quot;&gt;prev&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot;&gt;cur&lt;/span&gt;) &lt;span class=&quot;pl-k&quot;&gt;=&amp;gt;&lt;/span&gt; prev &lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;cur&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pl-k&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&amp;lt;br/&amp;gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;pl-pds&quot;&gt;'&lt;/span&gt;&lt;/span&gt;);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you may detect, the query can take very long time to run, because you have thousands of users in the collection. When a user now logs off, the whole query will re-run over the database which takes again very long.&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-js&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-smi&quot;&gt;anyUser&lt;/span&gt;.&lt;span class=&quot;pl-smi&quot;&gt;loggedIn&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt;;
&lt;span class=&quot;pl-k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;anyUser&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;save&lt;/span&gt;();
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But not with the QueryChangeDetection enabled. Now, when one user logs off, it will calculate the new results from the current results plus the RxChangeEvent. This often can be done in-memory without making IO-requests to the storage-engine. The QueryChangeDetection not only works on subscribed queries, but also when you do multiple &lt;code&gt;.exec()&lt;/code&gt;'s on the same query.&lt;/p&gt;
&lt;/details&gt;&lt;h2&gt;Browser support&lt;/h2&gt;
&lt;p&gt;All major evergreen browsers and IE11 are supported. Tests automatically run against Firefox and Chrome, and manually in a VirtualBox for IE11 and Edge.&lt;/p&gt;
&lt;p&gt;We soon will switch to &lt;a href=&quot;https://www.browserstack.com/&quot; rel=&quot;nofollow&quot;&gt;Browserstack&lt;/a&gt; and run automated tests in all major browsers&lt;br/&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://user-images.githubusercontent.com/7760/34738829-7327ddc4-f561-11e7-97e2-2fe0474eaf05.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/7760/34738829-7327ddc4-f561-11e7-97e2-2fe0474eaf05.png&quot; width=&quot;280px&quot;/&gt;&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;As RxDB heavily relies on PouchDB, see &lt;a href=&quot;https://pouchdb.com/learn.html#browser_support&quot; rel=&quot;nofollow&quot;&gt;their browser support&lt;/a&gt; for more information. Also do keep in mind that different browsers have different storage limits, especially on mobile devices.&lt;/p&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Get started now by &lt;a href=&quot;https://rxdb.info/&quot; rel=&quot;nofollow&quot;&gt;reading the docs&lt;/a&gt; or exploring the &lt;a href=&quot;https://github.com/pubkey/rxdb/blob/master/examples&quot;&gt;example-projects&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Contribute&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pubkey/rxdb/blob/master/docs-src/contribute.md&quot;&gt;Check out how you can contribute to this project&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Follow up&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Follow RxDB on &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=rxdbjs&quot; rel=&quot;nofollow&quot;&gt;twitter&lt;/a&gt; to not miss the latest enhancements.&lt;/li&gt;
&lt;li&gt;Join the chat on &lt;a href=&quot;https://gitter.im/pubkey/rxdb&quot; rel=&quot;nofollow&quot;&gt;gitter&lt;/a&gt; for discussion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A big &lt;strong&gt;Thank you&lt;/strong&gt; to every &lt;a href=&quot;https://github.com/pubkey/rxdb/graphs/contributors&quot;&gt;contributor&lt;/a&gt; of this project.&lt;/p&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pubkey/rxdb/blob/master/LICENSE.txt&quot;&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;
</description>
<pubDate>Fri, 25 Oct 2019 08:42:58 +0000</pubDate>
<dc:creator>dsun180</dc:creator>
<og:image>https://repository-images.githubusercontent.com/75425073/dd3c8c80-6551-11e9-828b-46eb2858c8cf</og:image>
<og:type>object</og:type>
<og:title>pubkey/rxdb</og:title>
<og:url>https://github.com/pubkey/rxdb</og:url>
<og:description>:computer: 🔄 :iphone: A realtime Database for JavaScript Applications - pubkey/rxdb</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/pubkey/rxdb</dc:identifier>
</item>
<item>
<title>Python and OpenGL for Scientific Visualization</title>
<link>https://www.labri.fr/perso/nrougier/python-opengl/#python-opengl-for-scientific-visualization</link>
<guid isPermaLink="true" >https://www.labri.fr/perso/nrougier/python-opengl/#python-opengl-for-scientific-visualization</guid>
<description>&lt;p&gt;For the &lt;strong&gt;really&lt;/strong&gt; impatient, you can try to run the code in the &lt;a class=&quot;reference external&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/code/chapter-03/glumpy-quad-solid.py&quot;&gt;teaser image&lt;/a&gt; above. If this works, a window should open on your desktop with a red color in the background. If you now want to understand how this works, you'll have to read the text below.&lt;/p&gt;&lt;div id=&quot;preliminaries&quot; readability=&quot;78.490348602708&quot;&gt;

&lt;p&gt;The main difficulty for newcomers in programming modern OpenGL is that it requires to understand a lot of different concepts at once and then, to perform a lot of operations before rendering anything on screen. This complexity implies that there are many places where your code can be wrong, both at the conceptual and code level. To illustrate this difficulty, we'll program our first OpenGL program using the raw interface and our goal is to display a simple colored quad (i.e. a red square).&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;normalize-device-coordinates&quot; readability=&quot;27.783018867925&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Normalize Device Coordinates&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/NDC.png&quot; readability=&quot;10&quot;&gt;&lt;img alt=&quot;images/chapter-03/NDC.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/NDC.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;Normalized Device Coordinates (NDC) where bottom-left corner coordinate is (-1,-1) and top-right corner is (+1,+1).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Before even diving into actual code, it is important to understand first how OpenGL handles coordinates. More precisely, OpenGL considers only coordinates &lt;code&gt;(x,y,z)&lt;/code&gt; that fall into the space where &lt;code&gt;-1 ≤ x,y,z ≤ +1&lt;/code&gt;. Any coordinates that are outside this range will be discarded or clipped (i.e. won't be visible on screen). This is called Normalized Device Coordinates, or NDC for short. This is something you cannot change because it is part of the OpenGL API and implemented in your hardware (GPU). Consequently, even if you intend to render the whole universe, you'll have utlimately to fit it into this small volume.&lt;/p&gt;
&lt;p&gt;The second important fact to know is that &lt;strong&gt;x&lt;/strong&gt; coordinates increase from left to right and &lt;strong&gt;y&lt;/strong&gt; coordinates increase from bottom to top. For this latter one, it is noticeably different from the usual convention and this might induce some problems, especially when you're dealing with the mouse pointer whose &lt;strong&gt;y&lt;/strong&gt; coordinate goes the other way around.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;triangulation&quot; readability=&quot;40.384170999422&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Triangulation&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/triangulation.png&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;images/chapter-03/triangulation.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/triangulation.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;Different triangulation of the same quad using from 2 to 5 triangles.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://en.wikipedia.org/wiki/Surface_triangulation&quot;&gt;Triangulation&lt;/a&gt; of a surface means to find a set of triangles, which covers a given surface. This can be a tedious process but fortunately, there exist many different methods and algorithms to perform such triangulation automatically for any 2D or 3D surface. The quality of the triangulation is measured in terms of the closeness to the approximated surface, the number of triangles necessary (the smaller, the better) and the homogeneity of the triangles (we prefer to have triangles that have more or less the same size and to not have any degenerated triangle).&lt;/p&gt;
&lt;p&gt;In our case, we want to render a square and we need to find the proper triangulation (which is not unique as illustrated on the figure). Since we want to minimize the number of triangles, we'll use the 2 triangles solution that requires only 4 (shared) vertices corresponding to the four corners of the quad. However, you can see from the figure that we could have used different triangulations using more vertices, and later in this book we will just do that (but for a reason).&lt;/p&gt;
&lt;p&gt;Considering the NDC, our quad will thus be composed of two triangles:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;One triangle described by vertices &lt;code&gt;(-1,+1), (+1,+1), (-1,-1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;One triangle described by vertices &lt;code&gt;(+1,+1), (-1,-1), (+1,-1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Here we can see that vertices &lt;code&gt;(-1,-1)&lt;/code&gt; and &lt;code&gt;(+1,+1)&lt;/code&gt; are common to both triangles. So instead of using 6 vertices to describe the two triangles, we can re-use the common vertices to describe the whole quad. Let's name them:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;&lt;code&gt;V₀&lt;/code&gt;: &lt;code&gt;(-1,+1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V₁&lt;/code&gt;: &lt;code&gt;(+1,+1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V₂&lt;/code&gt;: &lt;code&gt;(-1,-1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V₃&lt;/code&gt;: &lt;code&gt;(+1,-1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Our quad can now be using triangle &lt;code&gt;(V₀,V₁,V₂)&lt;/code&gt; and triangle &lt;code&gt;(V₁,V₂,V₃)&lt;/code&gt;. This is exactly what we need to tell OpenGL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;gl-primitives&quot; readability=&quot;49.620327102804&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;GL Primitives&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/gl-primitives.png&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;images/chapter-03/gl-primitives.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/gl-primitives.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;Common OpenGL rendering primitives.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ok, now things are getting serious because we need to actually tell OpenGL what to do with the vertices, i.e. how to render them? What do they describe in terms of geometrical primitives? This is quite an important topic since this will determine how fragments will actually be generated as illustrated on the image below:&lt;/p&gt;
&lt;p&gt;Mostly, OpenGL knows how to draw (ugly) points, (ugly) lines and (ugly) triangles. For lines and triangles, there exist some variations depending if you want to specify very precisely what to draw or if you can take advantage of some implicit assumptions. Let's consider lines first for example. Given a set of four vertices &lt;code&gt;(V₀,V₁,V₂,V₃)&lt;/code&gt;, you migh want to draw segments &lt;code&gt;(V₀,V₁)``(V₂,V₃)&lt;/code&gt; using &lt;code&gt;GL_LINES&lt;/code&gt; or a broken line &lt;code&gt;(V₀,V₁,V₂,V₃)&lt;/code&gt; using using &lt;code&gt;GL_LINE_STRIP&lt;/code&gt; or a closed broken line &lt;code&gt;(V₀,V₁,V₂,V₃,V₀,)&lt;/code&gt; using &lt;code&gt;GL_LINE_LOOP&lt;/code&gt;. For triangles, you have the choices of specifying each triangle individually using &lt;code&gt;GL_TRIANGLES&lt;/code&gt; or you can tell OpenGL that triangles follow an implicit structure using &lt;code&gt;GL_TRIANGLE_STRIP&lt;/code&gt;. For example, considering a set of vertices (Vᵢ), &lt;code&gt;GL_TRIANGLE_STRIP&lt;/code&gt; will produce triangles &lt;code&gt;(Vᵢ,Vᵢ₊₁,Vᵢ₊₂)&lt;/code&gt;. There exist other primitives but we won't used them in this book because they're mainly related to &lt;em&gt;geometry shaders&lt;/em&gt; that are not introduced.&lt;/p&gt;
&lt;p&gt;If you remember the previous section where we explained that our quad can be described using using triangle &lt;code&gt;(V₀,V₁,V₂)&lt;/code&gt; and triangle &lt;code&gt;(V₁,V₂,V₃)&lt;/code&gt;, you can now realize that we can take advantage or the &lt;code&gt;GL_TRIANGLE_STRIP&lt;/code&gt; primitive because we took care of describing the two triangles following this implicit structure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;interpolation&quot; readability=&quot;39.397812166489&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Interpolation&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/interpolation.png&quot; readability=&quot;8&quot;&gt;&lt;img alt=&quot;images/chapter-03/interpolation.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/interpolation.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;The Barycentric interpolation &lt;code&gt;f&lt;/code&gt; of a fragment &lt;code&gt;p&lt;/code&gt; is given by &lt;code&gt;f = 𝛌₁f₁ + 𝛌₂f₂ + 𝛌₃f₃&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The choice of the triangle as the only surface primitive is not an arbitrary choice, because a triangle offers the possibility of having a nice and intuitive interpolation of any point that is inside the triangle. If you look back at the graphic pipeline as it has been introduced in the &lt;a class=&quot;reference internal&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#modern-opengl&quot;&gt;Modern OpenGL&lt;/a&gt; section, you can see that the rasterisation requires for OpenGL to generate fragments inside the triangle but also to interpolate values (colors on the figure). One of the legitimate questions to be solved is then: if I have a triangle (V₁,V₂,V₃), each summit vertex having (for example) a different color, what is the color of a fragment &lt;code&gt;p&lt;/code&gt; inside the triangle? The answer is &lt;a class=&quot;reference external&quot; href=&quot;https://en.wikibooks.org/wiki/GLSL_Programming/Rasterization&quot;&gt;barycentric interpolation&lt;/a&gt; as illustrated on the figure on the right.&lt;/p&gt;
&lt;p&gt;More precisely, for any point p inside a triangle &lt;code&gt;A = (V₁,V₂,V₃)&lt;/code&gt;, we consider triangles:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;&lt;code&gt;A₁ = (P,V₂,V₃)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A₂ = (P,V₁,V₃)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A₃ = (P,V₁,V₂)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;And we can define (using area of triangles):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;&lt;code&gt;𝛌₁ = A₁/A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;𝛌₂ = A₂/A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;𝛌₃ = A₃/A&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Now, if we attach a value &lt;code&gt;f₁&lt;/code&gt; to vertex &lt;code&gt;V₁&lt;/code&gt;, &lt;code&gt;f₂&lt;/code&gt; to vertex &lt;code&gt;V₂&lt;/code&gt; and &lt;code&gt;f₃&lt;/code&gt; to vertex &lt;code&gt;V₃&lt;/code&gt;, the interpolated value &lt;code&gt;f&lt;/code&gt; of &lt;code&gt;p&lt;/code&gt; is given by: &lt;code&gt;f = 𝛌₁f₁ + 𝛌₂f₂ + 𝛌₃f₃&lt;/code&gt; You can check by yourself that if the point &lt;code&gt;p&lt;/code&gt; is on a border of the triangle, the resulting interpolated value &lt;code&gt;f&lt;/code&gt; is the linear interpolation of the two vertices defining the segment the point &lt;code&gt;p&lt;/code&gt; belongs to.&lt;/p&gt;
&lt;p&gt;This &lt;strong&gt;barycentric interpolation is important to understand&lt;/strong&gt; even if it is done automatically by OpenGL (with some variation to take projection into account). We took the example of colors, but the same interpolation scheme holds true for any value you pass from the vertex shader to the fragment shader. And this property will be used and abused in this book.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;the-hard-way&quot; readability=&quot;176.75494575622&quot;&gt;

&lt;p&gt;Having reviewed some important OpenGL concepts, it's time to code our quad example. But, before even using OpenGL, we need to open a window with a valid GL context. This can be done using a toolkit such as &lt;a class=&quot;reference external&quot; href=&quot;https://www.gtk.org&quot;&gt;Gtk&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;https://www.qt.io&quot;&gt;Qt&lt;/a&gt; or &lt;a class=&quot;reference external&quot; href=&quot;https://www.wxwidgets.org&quot;&gt;Wx&lt;/a&gt; or any native toolkit (Windows, Linux, OSX). Unfortunately, the &lt;a class=&quot;reference external&quot; href=&quot;https://docs.python.org/3/library/tk.html&quot;&gt;Tk&lt;/a&gt; Python interface does not allow to create a GL context and we cannot use it. Note there also exists dedicated toolkits such as &lt;a class=&quot;reference external&quot; href=&quot;http://www.glfw.org&quot;&gt;GLFW&lt;/a&gt; or &lt;a class=&quot;reference external&quot; href=&quot;http://freeglut.sourceforge.net&quot;&gt;GLUT&lt;/a&gt; and the advantage of GLUT is that it's already installed alongside OpenGL. Even if it is now deprecated, we'll use GLUT since it's a very lightweight toolkit and does not require any extra package. Here is a minimal setup that should open a window with garbage on it (since we do not even clear the window):&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;OpenGL.GL&lt;/span&gt; &lt;span class=&quot;keyword namespace&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;gl&lt;/span&gt;
&lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;OpenGL.GLUT&lt;/span&gt; &lt;span class=&quot;keyword namespace&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;glut&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutSwapBuffers&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glViewport&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;literal string affix&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;literal string escape&quot;&gt;\x1b&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;name&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutInit&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutInitDisplayMode&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GLUT_DOUBLE&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GLUT_RGBA&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutCreateWindow&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'Hello world!'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutReshapeWindow&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;512&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutReshapeFunc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutDisplayFunc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutKeyboardFunc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutMainLoop&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;admonition note&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;You won't have access to any GL command before the &lt;code&gt;glutInit()&lt;/code&gt; has been executed because no OpenGL context will be available before this command is executed.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;glutInitDisplayMode&lt;/code&gt; tells OpenGL what are the GL context properties. At this stage, we only need a swap buffer (we draw on one buffer while the other is displayed) and we use a full RGBA 32 bits color buffer (8 bits per channel). The &lt;code&gt;reshape&lt;/code&gt; callback informs OpenGL of the new window size while the &lt;code&gt;display&lt;/code&gt; method tells OpenGL what to do when a redraw is needed. In this simple case, we just ask OpenGL to swap buffers (this avoids flickering). Finally, the keyboard callback allows us to exit by pressing the &lt;code&gt;Escape&lt;/code&gt; key.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;writing-shaders&quot; readability=&quot;32.005649717514&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Writing shaders&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that your window has been created, we can start writing our program, that is, we need to write a vertex and a fragment shader. For the vertex shader, the code is very simple because we took care of using the normalized device coordinates to describe our quad in the previous section. This means vertices do not need to be transformed. Nonetheless, we have to take care of sending 4D coordinates even though we'll transmit only 2D coordinates (&lt;code&gt;x,y&lt;/code&gt;) or the final result will be undefined. For coordinate &lt;code&gt;z&lt;/code&gt; we'll just set it to &lt;code&gt;0.0&lt;/code&gt; (but any value would do) and for coordinate &lt;code&gt;w&lt;/code&gt;, we set it to &lt;code&gt;1.0&lt;/code&gt; (see section &lt;a class=&quot;reference internal&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#basic-mathematics&quot;&gt;Basic Mathematics&lt;/a&gt; for the explanation). Note also the (commented) alternative ways of writing the shader.&lt;/p&gt;
&lt;pre class=&quot;code glsl literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec2&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;gl_Position&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;

  

  
  

  
  
  
  
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;For the fragment shader, it is even simpler. We set the color to red which is described by the tuple &lt;code&gt;(1.0, 0.0, 0.0, 1.0)&lt;/code&gt; in normalized RGBA notation. &lt;code&gt;1.0&lt;/code&gt; for alpha channel means fully opaque.&lt;/p&gt;
&lt;pre class=&quot;code glsl literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;gl_FragColor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;

  

  
  
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;compiling-the-program&quot; readability=&quot;52.412354804646&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Compiling the program&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We wrote our shader and we need now to build a program that will link the vertex and the fragment shader together. Building such program is relatively straightforward (provided we do not check for errors). First we need to request program and shader slots from the GPU:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;  &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glCreateProgram&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;   &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glCreateShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_VERTEX_SHADER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glCreateShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_FRAGMENT_SHADER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We can now ask for the compilation of our shaders into GPU objects and we log for any error from the compiler (e.g. syntax error, undefined variables, etc):&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;vertex_code&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;&quot;&quot;
  attribute vec2 position;
  void main() { gl_Position = vec4(position, 0.0, 1.0); } &quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;fragment_code&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;&quot;&quot;
  void main() { gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); } &quot;&quot;&quot;&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glShaderSource&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;vertex_code&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glShaderSource&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;fragment_code&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glCompileShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetShaderiv&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_COMPILE_STATUS&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetShaderInfoLog&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;name exception&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;Vertex shader compilation error&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glCompileShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetShaderiv&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_COMPILE_STATUS&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetShaderInfoLog&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;name exception&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;Fragment shader compilation error&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Then we link our two objects in into a program and again, we check for errors during the process.&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glAttachShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glAttachShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glLinkProgram&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;operator word&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetProgramiv&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_LINK_STATUS&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetProgramInfoLog&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;name exception&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'Linking error'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;and we can get rid of the shaders, they won't be used again (you can think of them as &lt;code&gt;.o&lt;/code&gt; files in C).&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glDetachShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glDetachShader&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Finally, we make program the default program to be ran. We can do it now because we'll use a single program in this example:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glUseProgram&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;uploading-data-to-the-gpu&quot; readability=&quot;72.296724470135&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Uploading data to the GPU&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Next, we need to build CPU data and the corresponding GPU buffer that will hold a copy of the CPU data (GPU cannot access CPU memory). In Python, things are grealty facilitated by NumPy that allows to have a precise control over number representations. This is important because GLES 2.0 floats have to be exactly 32 bits long and a regular Python float would not work (they are actually equivalent to a C &lt;code&gt;double&lt;/code&gt;). So let us specify a NumPy array holding 4×2 32-bits float that will correspond to our 4×(x,y) vertices:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We then create a placeholder on the GPU without yet specifying the size:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name builtin&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGenBuffers&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glBindBuffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_ARRAY_BUFFER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We now need to bind the buffer to the program, that is, for each attribute present in the vertex shader program, we need to tell OpenGL where to find the corresponding data (i.e. GPU buffer) and this requires some computations. More precisely, we need to tell the GPU how to read the buffer in order to bind each value to the relevant attribute. To do this, GPU needs to know what is the stride between 2 consecutive elements and what is the offset to read one attribute:&lt;/p&gt;
&lt;pre class=&quot;code neutral literal-block&quot;&gt;
                 1ˢᵗ vertex  2ⁿᵈ vertex  3ʳᵈ vertex   …
                ┌───────────┬───────────┬───────────┬┄┄
                ┌─────┬─────┬─────┬─────┬─────┬─────┬─┄
                │  X  │  Y  │  X  │  Y  │  X  │  Y  │ …
                └─────┴─────┴─────┴─────┴─────┴─────┴─┄
     offset 0 → │ (x,y)     └───────────┘
                                stride
&lt;/pre&gt;
&lt;p&gt;In our simple quad scenario, this is relatively easy to write because we have a single attribute (&quot;&lt;code&gt;position&lt;/code&gt;&quot;). We first require the attribute location inside the program and then we bind the buffer with the relevant offset.&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;stride&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;ctypes&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;c_void_p&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetAttribLocation&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glEnableVertexAttribArray&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glBindBuffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_ARRAY_BUFFER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glVertexAttribPointer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_FLOAT&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin pseudo&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We're basically telling the program how to bind data to the relevant attribute. This is made by providing the stride of the array (how many bytes between each record) and the offset of a given attribute.&lt;/p&gt;
&lt;p&gt;Let's now fill our CPU data and upload it to the newly created GPU buffer:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glBufferData&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_ARRAY_BUFFER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;nbytes&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_DYNAMIC_DRAW&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;rendering&quot; readability=&quot;29.998540856031&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Rendering&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're done, we can now rewrite the display function:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glClear&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_COLOR_BUFFER_BIT&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glDrawArrays&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_TRIANGLE_STRIP&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;glut&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glutSwapBuffers&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/glumpy-quad-solid.png&quot; readability=&quot;8&quot;&gt;&lt;img alt=&quot;images/chapter-03/glumpy-quad-solid.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/glumpy-quad-solid.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;A red quad rendered using Python, raw OpenGL bindings and the venerable GLUT.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;0,4&lt;/code&gt; arguments in the &lt;code&gt;glDrawArrays&lt;/code&gt; tells OpenGL we want to display 4 vertices from our current active buffer and we start at vertex 0. You should obtain the figure on the right with the same red (boring) color. The whole source ia available from &lt;a class=&quot;reference external&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/code/chapter-03/glut-quad-solid.py&quot;&gt;code/chapter-03/glut-quad-solid.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All these operations are necessary for displaying a single colored quad on screen and complexity can escalate pretty badly if you add more objects, projections, lighting, texture, etc. This is the reason why we'll stop using the raw OpenGL interface in favor of a library. We'll use the &lt;a class=&quot;reference external&quot; href=&quot;http://glumpy.github.io&quot;&gt;glumpy&lt;/a&gt; library, mostly because I wrote it, but also because it offers a tight integration with numpy. Of course, you can design your own library to ease the writing of GL Python applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;uniform-color&quot; readability=&quot;30.739480752014&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Uniform color&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/glumpy-quad-uniform-color.png&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;images/chapter-03/glumpy-quad-uniform-color.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/glumpy-quad-uniform-color.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;A blue quad rendered using a &lt;code&gt;uniform&lt;/code&gt; variable specifying the color of the quad.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In the previous example, we hard-coded the red color inside the fragment shader source code. But what if we want to change the color from within the Python program? We could rebuild the program with the new color but that would not be very efficient. Fortunately there is a simple solution provided by OpenGL: &lt;code&gt;uniform&lt;/code&gt;. Uniforms, unlike attributes, do not change from one vertex to the other and this is precisely what we need in our case. We thus need to slightly modify our fragment shader to use this uniform color:&lt;/p&gt;
&lt;pre class=&quot;code glsl literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;uniform&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;gl_FragColor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Of course, we also need to upload a color to this new uniform location and this is easier than for attribute because the memory has already been allocated on the GPU (since the size is know and does not depend on the number of vertices).&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetUniformLocation&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glUniform4f&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;If you run the new &lt;a class=&quot;reference external&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/code/glut-quad-uniform-color.py&quot;&gt;code/glut-quad-uniform-color.py&lt;/a&gt; example, you should obtain the blue quad as shown on the right.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;varying-color&quot; readability=&quot;91.181382614648&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Varying color&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;right figure&quot; id=&quot;figure-images/chapter-03/glumpy-quad-varying-color.png&quot; readability=&quot;7&quot;&gt;&lt;img alt=&quot;images/chapter-03/glumpy-quad-varying-color.png&quot; src=&quot;https://www.labri.fr/perso/nrougier/python-opengl/images/chapter-03/glumpy-quad-varying-color.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure&lt;/p&gt;
&lt;p&gt;A colored quad using a per-vertex color.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Until now, we have been using a constant color for the four vertices of our quad and the result is (unsurprisingly) a boring uniform red or blue quad. We can make it a bit more interesting though by assigning different colors to each vertex and see how OpenGL will interpolate colors. Our new vertex shader would need to be rewritten as:&lt;/p&gt;
&lt;pre class=&quot;code glsl literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec2&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;varying&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;v_color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;gl_Position&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number float&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;v_color&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We just added our new attribute &lt;code&gt;color&lt;/code&gt; but we also added a new variable type: &lt;code&gt;varying&lt;/code&gt;. This type is actually used to transmit a value from the vertex shader to the fragment shader. As you might have guessed, the &lt;code&gt;varying&lt;/code&gt; type means this value won't be constant over the different fragments but will be interpolated depending on the relative position of the fragment in the triangle, as I explained in the &lt;a class=&quot;reference internal&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#interpolation&quot;&gt;Interpolation&lt;/a&gt; section. Note that we also have to rewrite our fragment shader accordingly, but now the &lt;code&gt;v_color&lt;/code&gt; will be an input:&lt;/p&gt;
&lt;pre class=&quot;code glsl literal-block&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;varying&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;vec4&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;v_color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;name&quot;&gt;gl_FragColor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We now need to upload vertex color to the GPU. We could create a new vertex dedicated buffer and bind it to the new &lt;code&gt;color&lt;/code&gt; attribute, but there is a more interesting solution. We'll use instead a single numpy array and a single buffer, taking advantage of the NumPy structured array:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt;
                    &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;name&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)])&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'position'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Our CPU data structure is thus:&lt;/p&gt;
&lt;pre class=&quot;code neutral literal-block&quot;&gt;
           1ˢᵗ vertex              2ⁿᵈ vertex
   ┌───────────────────────┬───────────────────────┬┄
   ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬─┄
   │ X │ Y │ R │ G │ B │ A │ X │ Y │ R │ G │ B │ A │ …
   └───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴───┴─┄
   ↑       ↑               └───────────────────────┘
 position  color                     stride
 offset    offset
&lt;/pre&gt;
&lt;p&gt;Binding the buffer is now a bit more complicated but it is made relatively easy thanks to NumPy:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;stride&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;ctypes&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;c_void_p&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetAttribLocation&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glEnableVertexAttribArray&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glBindBuffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_ARRAY_BUFFER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glVertexAttribPointer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_FLOAT&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin pseudo&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;ctypes&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;c_void_p&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;itemsize&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glGetAttribLocation&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal string double&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glEnableVertexAttribArray&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glBindBuffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_ARRAY_BUFFER&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;glVertexAttribPointer&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_FLOAT&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name builtin pseudo&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;div id=&quot;the-easy-way&quot; readability=&quot;78.604679802956&quot;&gt;

&lt;p&gt;As we've seen in the previous section, displaying a simple quad using modern GL is quite tedious and requires a fair number of operations and this is why, from now on, we'll use &lt;a class=&quot;reference external&quot; href=&quot;http://glumpy.github.io&quot;&gt;glumpy&lt;/a&gt; whose goal is to make this process both easy and intuitive.&lt;/p&gt;
&lt;p&gt;Glumpy is organized around three main modules:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;&lt;li&gt;The Application layer (&lt;code&gt;app&lt;/code&gt;) package is responsible for opening a window and handling user events such as mouse and keyboard interactions.&lt;/li&gt;
&lt;li&gt;The OpenGL object oriented layer (&lt;code&gt;gloo&lt;/code&gt;) package is responsible for handling shader programs and syncing CPU/GPU data through the numpy interface.&lt;/li&gt;
&lt;li&gt;The Graphic layer (&lt;code&gt;graphics&lt;/code&gt;) package provides higher-level common objects such as text, collections and widgets.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Those modules will help us writing any OpenGL program quite easily. Let's consider again our quad example:&lt;/p&gt;
&lt;div class=&quot;admonition note&quot; readability=&quot;9.8067632850242&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;Glumpy will look for any available backend in a given order, starting by &lt;a class=&quot;reference external&quot; href=&quot;http://www.glfw.org&quot;&gt;GLFW&lt;/a&gt;. I strongly advise to install the GLFW package on your system since this backend is activately maintainted and &quot;just works&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We still need to open a window, but now this is straightforward:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;keyword namespace&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;name namespace&quot;&gt;glumpy&lt;/span&gt; &lt;span class=&quot;keyword namespace&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gloo&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;If necessary, you can also indicate which backend to use by writing &lt;code&gt;app.use(&quot;glfw&quot;)&lt;/code&gt; before creating the window. The creation of the program is also straightforward:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name&quot;&gt;quad&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;gloo&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;vertex&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;fragment&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;With the above line, both the CPU data and GPU data (buffer) have been created and no extra command is necessary at this stage and uploading the data is only a matter of setting the different fields of the &lt;code&gt;quad&lt;/code&gt; program:&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name&quot;&gt;quad&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal string single&quot;&gt;'position'&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Under the hood, glumpy has parsed your shader programs and has identified attributes. Rendering is just a matter of calling the &lt;code&gt;draw&lt;/code&gt; method from our shader program, using the proper mode.&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;

&lt;span class=&quot;name decorator&quot;&gt;@window.event&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;name function&quot;&gt;on_draw&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;name&quot;&gt;quad&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;gl&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;GL_TRIANGLE_STRIP&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;name&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;operator&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;name&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The whole source is available in &lt;a class=&quot;reference external&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/code/chapter-03/glumpy-quad-solid.py&quot;&gt;code/chapter-03/glumpy-quad-solid.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you run this program using the &lt;code&gt;--debug&lt;/code&gt; switch, you should obtain the following output that shows what is being done in the background. More specifically, you can check that the program is actually compiled and linked using the specified shaders and that the buffer is created and bound to the program.&lt;/p&gt;
&lt;pre class=&quot;code output literal-block&quot;&gt;
[i] HiDPI detected, fixing window size
[i] Using GLFW (GL 2.1)
[i] Running at 60 frames/second
GPU: Creating program
GPU: Attaching shaders to program
GPU: Creating shader
GPU: Compiling shader
GPU: Creating shader
GPU: Compiling shader
GPU: Linking program
GPU: Activating program (id=1)
GPU: Activating buffer (id=7)
GPU: Creating buffer (id=7)
GPU: Updating position
GPU: Deactivating buffer (id=7)
GPU: Deactivating program (id=1)
&lt;/pre&gt;

&lt;div class=&quot;section&quot; id=&quot;id10&quot; readability=&quot;20.8&quot;&gt;
&lt;h3&gt;&lt;a class=&quot;toc-backref&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/#id7&quot;&gt;Varying color&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adding a per-vertex color is also only a matter of modifying the fragment shader as in the previous section and directly assigning the color to the quad program (see &lt;a class=&quot;reference external&quot; href=&quot;https://www.labri.fr/perso/nrougier/python-opengl/code/chapter-03/glumpy-quad-varying-color.py&quot;&gt;code/chapter-03/glumpy-quad-varying-color.py&lt;/a&gt;):&lt;/p&gt;
&lt;pre class=&quot;code python literal-block&quot;&gt;
&lt;span class=&quot;name&quot;&gt;quad&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;literal string double&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;literal number integer&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;punctuation&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;</description>
<pubDate>Fri, 25 Oct 2019 07:11:09 +0000</pubDate>
<dc:creator>dsego</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.labri.fr/perso/nrougier/python-opengl/</dc:identifier>
</item>
<item>
<title>Reflections on My Career at Microsoft</title>
<link>https://medium.com/@docjamesw/speaking-truth-to-power-reflections-on-a-career-at-microsoft-90f80a449e36</link>
<guid isPermaLink="true" >https://medium.com/@docjamesw/speaking-truth-to-power-reflections-on-a-career-at-microsoft-90f80a449e36</guid>
<description>&lt;p&gt;
&lt;h2 class=&quot;as cu et eu ax&quot;&gt;Former Microsoft engineer James Whittaker talks about how CEO Satya Nadella can fix the deeply flawed company&lt;/h2&gt;
&lt;/p&gt;
&lt;div class=&quot;ev&quot;&gt;
&lt;div class=&quot;o n&quot;&gt;
&lt;div&gt;&lt;a href=&quot;https://onezero.medium.com/@docjamesw?source=post_page-----90f80a449e36----------------------&quot; rel=&quot;noopener&quot;&gt;&lt;img alt=&quot;James Whittaker&quot; class=&quot;r ew ex ey&quot; src=&quot;https://miro.medium.com/fit/c/96/96/1*U23F-t9SKS0mcxGYo9vpHw.jpeg&quot; width=&quot;48&quot; height=&quot;48&quot;/&gt;&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

Photo: SOPA Image/Getty Images
&lt;p id=&quot;6977&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl hm&quot;&gt;&lt;span class=&quot;r hn hw hq gf hx&quot;&gt;&lt;img alt=&quot;T&quot; class=&quot;hy hz ia ib ic id do t u gj ak&quot; src=&quot;https://miro.medium.com/max/158/1*x3MLNrKVby4_GZ1VCCYktA.png&quot; width=&quot;79&quot; height=&quot;79&quot;/&gt;&lt;span class=&quot;r hn ho hp hq hr hs ht hu hv gf gh&quot;&gt;T&lt;/span&gt;&lt;/span&gt;he only easy answer to the question “what was it like working at Microsoft?” is “Which one?” My on-again, off-again Microsoft career spanned three different versions of the company, each deeply inspirational and tragically flawed in its own unique way. As it once again struggles to reinvent itself, the Microsoft of the future is being weighed down by the ghosts of its past.&lt;/p&gt;
&lt;p id=&quot;ba1a&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The Microsoft of the ’90s, with Bill Gates calling the shots, was a technology-forward company, fast-paced, ambitious, and unapologetically capitalistic. It was a beast, number one in nearly every genre that mattered, dreaded by its partners, feared by its competitors, and alternately loved and hated by its users. Raw ambition and single-minded drive for dominance pervaded the company, from senior leaders on down to individual contributors. Working for Microsoft during the ’90s was an intellectual rush, wrapped in the opulence of runaway personal wealth. Microsoft was the shit and they knew it.&lt;/p&gt;
&lt;p id=&quot;4863&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The Microsoft of the 2000s, under Steve Ballmer, was almost exactly the opposite. Bruised and battered by the consent decree handed down by the Department of Justice for the very same ambition that brought it to dominance, Ballmer’s Microsoft was sales-forward and cautious. It was either gazing at its own Windows-shaped navel or nervously clutching its pearls at the approach of Google in its rearview mirror. This inattention to anything resembling the imaginative or innovative caused it to hemorrhage talent, flatline its stock, bore its customers, and miss (or at least be very late to) the next three technology megatrends — web, cloud, and mobile — on the trot. It was an era of hand-wringing and coming to grips with a profitable but uninspired slide into irrelevance.&lt;/p&gt;

Photo courtesy of the author.
&lt;p id=&quot;3231&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The good aspects of working for Microsoft are very good, making repping the brand pretty easy.&lt;/p&gt;
&lt;p id=&quot;187f&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;This brings us to the present epoch under Satya Nadella who, against the odds, has revived the company’s mojo and returned it to prominence. He has accomplished this by abandoning the strategies of both his forebears. Microsoft is no longer a technology-forward or a sales-forward company. Nadella has embarked on a culture-forward vision, which presents some serious historical hurdles to clear. Namely: how does a company move toward a new version of itself when its ranks are replete with people who made their fame and fortune under the previous versions?&lt;/p&gt;
&lt;p id=&quot;c14b&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Nadella’s expectations have been made clear to everyone. Mandatory training has seen to that. He exhorts Microsoft to be a “learn it all” culture instead of a “know it all” culture. He warns Microsoft away from its “fixed mindset” and has hired a revolving door of consultants and evangelists (including a three-year stint as cultural attaché by yours truly) to help transition the company into a “growth mindset.”&lt;/p&gt;
&lt;blockquote class=&quot;ig&quot; readability=&quot;4.5&quot;&gt;
&lt;div id=&quot;be16&quot; class=&quot;ih ii ij at ec b et ik il im in io hl&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;ec b ip iq ax&quot;&gt;Draw any Microsoftie into a discussion about terrible managers and you better hope you have some time on your hands.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;bec3&quot; class=&quot;gy gz eb at ha b hb ir hd is hf it hh iu hj iv hl&quot;&gt;It’s the right fight, as he should know. His long tenure at the company provided him with a front-row seat to the repercussions of Gates’ and Ballmer’s management styles. He witnessed the adolescence and maturity of the culture he is now so keen to end. Imagine watching a beloved child grow into someone you privately deplore, and you are partway to understanding his situation.&lt;/p&gt;
&lt;p id=&quot;dff2&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Nadella’s public fight against the old Microsoft is tacit recognition of the long shadows that both Gates and Ballmer cast. Each exited the company, but their legacies linger. Nadella contorts all he can to make this exact case without naming names, but this misses the point and delays the cure. When he implicates the know-it-alls, we all know who he is talking about. When our fixed mindset gets called out, we can all trace it to its source.&lt;/p&gt;
&lt;blockquote class=&quot;ig&quot; readability=&quot;4&quot;&gt;
&lt;div id=&quot;4ac1&quot; class=&quot;ih ii ij at ec b et ik il im in io hl&quot; readability=&quot;7&quot;&gt;
&lt;p class=&quot;ec b ip iq ax&quot;&gt;It’s hard to move past a shameful era with its icons providing cover for its continued practice.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;2c42&quot; class=&quot;gy gz eb at ha b hb ir hd is hf it hh iu hj iv hl&quot;&gt;Truth is, Gates and Ballmer are creatures of an era that few, most especially their successor, want to see return. Both were consummate know-it-alls, convinced that no subject, no matter how subtle, was a match for their intellect. No expert’s analysis was ever more prescient than their own. No competitor could possibly match the insights of their superior strategic minds. They specialized in snap decisions and dominating their subordinates. But chalking up the shouting, on-the-spot firings, and alleged chair-throwing as simply “leader’s passion” misses a greater point: They perpetuated their toxic behavior by surrounding themselves almost exclusively with leaders who emulated that behavior. Together, they created a management monoculture of cocksure masculinity that ensured every manager looked the same, sounded the same, and acted the same. This culture persists. Draw any Microsoftie into a discussion about terrible managers and you better hope you have some time on your hands.&lt;/p&gt;
&lt;p id=&quot;f2e6&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Fast forward to today and the culpables still cannot be named. We dance around the sins of the past while keeping our heroes above the fray. Nadella’s internal culture-talks conjure images of a southern mayor disavowing racism while standing in the shade cast by a statue of Robert E. Lee. It’s hard to move past a shameful era with its icons providing cover for its continued practice.&lt;/p&gt;
&lt;p id=&quot;b45d&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Treating the culpables as untouchable sends a message to the current offenders that these behaviors are in bounds, and those who practice them suffer no lingering effects. It does nothing to stop the fiscal regularity of company-wide memos condemning ongoing sexism, racism, and bullying. It does nothing to stop the revolving door of the majority of new college hires leaving the moment their signing bonuses become permanent. It does nothing to stop the cycle of sucking up to those in power in an effort to gain power for oneself.&lt;/p&gt;
&lt;p id=&quot;2009&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;People who thrived under Microsoft’s toxic management style still hold power in discouragingly large numbers, and find plenty of hiding places in the shadow cast by Gates (Ballmer has shown the good sense to properly and fully abscond, indeed, his abdication was likely his single most valuable contribution to the company’s future). Those made-men (because they are exclusively of that gender) have each other’s backs. A know-it-all manager moves to a new product group and his know-it-all team follows him. A newcomer exposes a fixed-mindset executive and that executive’s fixed-mindset henchmen all rise to support him. Their herd immunity protects them from any serious attempts to change them. Emulating Gates and Ballmer made them wealthy and powerful and it’s going to take more than hallway culture posters, some online training, and the odd cheerleading hashtag like #MicrosoftLife to change that. It’s going to require a zero-tolerance policy on cultural malfeasance... past and present.&lt;/p&gt;
&lt;p id=&quot;7768&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The people who have the most to gain from Nadella’s attempts at changing Microsoft’s culture aren’t just the newbies and youngsters. Microsoft has diversity at every level of the experience spectrum, thanks to a laudable legacy of welcoming every class of minority along with hoards of misfits and dreamers. This diversity is part of what made Microsoft such an enjoyable place to work.&lt;/p&gt;
&lt;p id=&quot;25f0&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;However, welcoming diversity is mostly where it stops. All those square pegs are still trying to force their way into Microsoft’s round-hole management culture. The diverse class is persisting more than they are succeeding. Bill’s former favorites, still firmly entrenched under cover of his shadow, are seeing to that. When challenged, they simply invoke his name as a protective incantation, and, since Gates’ culpability remains unacknowledged, their spell succeeds.&lt;/p&gt;
&lt;p id=&quot;3c15&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;This is a shame because when Microsoft does manage to break the made-man oligarchy, the result is often magic. Despite being behind in every single technology vertical that matters (and so far behind in some, like mobile and personal agents, that they threw in the towel), Microsoft is killing it. Revenue is up. Stock is up. Industry stature is up. The places where Microsoft finds itself thriving all have one thing in common: key made-men were pushed aside for better people.&lt;/p&gt;
&lt;p id=&quot;6d57&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;This is the problem with the act-like-me, talk-like-me, think-like-me leadership monoculture: it doesn’t promote the best talent; it promotes the talent that most closely resembles those already in power. When those in power are swept aside in favor of candidates more in-line with Nadella’s new cultural vision, success quickly follows.&lt;/p&gt;
&lt;p id=&quot;13b8&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Take Amy Hood’s ascendency to become Microsoft’s CFO. No one knew her name. She wasn’t part of any known power circle or usual-suspects list. The decision was widely questioned via whisper campaigns inside the company. Those whispers have stopped. Indeed, few can recall the name of the made-man she replaced, and Hood is now regarded to be among the best CFOs in tech. She is the kind of atypical bet on talent, and talent alone, that moves the cultural needle.&lt;/p&gt;
&lt;p id=&quot;7ee9&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;It happened again with the transformation of the sales team. Ballmer’s man Kevin Turner was a chip off the old block. When he and Ballmer appeared together, it was difficult to tell where one of them stopped and the other started. Like Ballmer, Turner was an icon inside the company. Despite Microsoft’s innovation stagnation of the ’00s and early ’10s, his numbers always impressed. People inside the company joked he could sell dry air in the desert. The sales org kept printing money, quarter after quarter, year after year, despite having almost nothing exciting to sell. Insiders were convinced he was irreplaceable.&lt;/p&gt;
&lt;blockquote class=&quot;ig&quot; readability=&quot;4.5&quot;&gt;
&lt;div id=&quot;9bde&quot; class=&quot;ih ii ij at ec b et ik il im in io hl&quot; readability=&quot;8&quot;&gt;
&lt;p class=&quot;ec b ip iq ax&quot;&gt;Leaders should reflect the ideals and values of those below them rather than those above them. Promoting those leaders is the fastest way to fix a company’s broken culture.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;d2c5&quot; class=&quot;gy gz eb at ha b hb ir hd is hf it hh iu hj iv hl&quot;&gt;Those insiders were wrong. When Turner left, a renaissance occurred. New voices appeared. New ideas were finally listened to. New energy was created. The realization that it was Turner who was holding the sales org back took everyone by surprise. His aura wasn’t real, it was merely a reflection of Ballmer’s halo. There were better people, much better people, who were as good at what they do as Hood is at what she does. None of them would be doing it without the made-man cycle being broken.&lt;/p&gt;
&lt;p id=&quot;6eb8&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;But the biggest power transfer was created in the cloud group, currently the vanguard of Microsoft’s profit-and-shareholder-value brigade. Nadella himself ran this group and under his leadership, it was doing... ok, hitting its targets but dazzling no one. When he ascended to the CEO spot, junior, more qualified, and very unexpected people leapfrogged more likely candidates to replace him. The new bosses were people who wielded their picks, not during the Gates gold rush, but during the lean Ballmer years and still managed to occasionally strike gold. They labored when success was not a guarantee, so they never assumed it. What happened? They made Microsoft’s future. Nadella is a better CEO for having placed bets on them.&lt;/p&gt;
&lt;p id=&quot;ebcb&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Changes at the top — not speeches, training or hashtags — make the most cultural impact. If you want real and lasting cultural change, sweep away the made-men who succeeded under the previous culture and promote the people who look, act, and think more like their employees than their managers.&lt;/p&gt;
&lt;p id=&quot;8339&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;This is a key point: Leaders should reflect the ideals and values of those below them rather than those above them. Promoting those leaders is the fastest way to fix a company’s broken culture.&lt;/p&gt;
&lt;p id=&quot;7e32&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;My former skip-level manager, Qi Lu, another widely-regarded “magician,” who left Bing, thereby creating the circumstances for it to thrive, provides a case in point. Great ideas (and there were many) that bubbled up from the employees below him went nowhere. But the ineffective strategy passed down from above quickly became unquestioned law. Lu was a creature of his bosses and peers, not of his team. When the canopy of his fixed mindset was removed, new ideas found sunlight in which to grow. Alas that it was too late for Bing! The world would be a better place had someone given Google a proper run for its money. Instead, Microsoft’s made-men did little more than ensure Google’s monopoly.&lt;/p&gt;
&lt;blockquote class=&quot;ig&quot; readability=&quot;5&quot;&gt;
&lt;div id=&quot;898c&quot; class=&quot;ih ii ij at ec b et ik il im in io hl&quot; readability=&quot;9&quot;&gt;
&lt;p class=&quot;ec b ip iq ax&quot;&gt;Microsoft clearly understands it has a problem. If it didn’t, it wouldn’t be fighting such a public fight to reinvent itself.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p id=&quot;9792&quot; class=&quot;gy gz eb at ha b hb ir hd is hf it hh iu hj iv hl&quot;&gt;It’s worth noting that cultural transformation didn’t happen in places, like Windows, where Nadella simply rearranged the made-men deck chairs. Instead of following his culture-change playbook, he simply swapped Windows’ made-men with Windows Phone’s made-men. The same people unable, over the course of a decade, to craft a winning strategy for mobile were suddenly tasked with crafting a winning strategy for the desktop. The unsurprising result is that Windows continues its tradition of boring, buggy software, and consistently fumbled updates. Made-men aren’t fixable, and the real talent in Windows, and the diversity of ideas it possesses, remains anonymously buried under layers of made-men above it.&lt;/p&gt;
&lt;p id=&quot;7d9f&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;If Windows was the only refuge for recycled failures — the wannabe leaders who energetically and emphatically backed Gates’ and Ballmer’s strategy that whiffed on the web, cloud, and mobile — Microsoft might be ok. But the residue of the past is thick in enough places that it is suffocating the culture of tomorrow.&lt;/p&gt;
&lt;p id=&quot;3794&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;Microsoft clearly understands it has a problem. If it didn’t, it wouldn’t be fighting such a public fight to reinvent itself. My message is simple: You can’t leave an outdated culture behind while continuing to worship its icons. The symbolic memorials of the people who got you into this cultural mess are an obstacle to getting you out of it. Like those statues of Robert E. Lee, their continued presence is homage to what made-men consider as better days.&lt;/p&gt;
&lt;p id=&quot;4c00&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The destruction of the leadership monocultures of Turner, Lu, Nadella, and whoever the hell that CFO was, demonstrates that the best people at Microsoft are the ones whose names no one knows and whose values reflect the future and not the past.&lt;/p&gt;
&lt;p id=&quot;ae98&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The future trajectory of Microsoft depends, in large part, on Nadella’s actual commitment to his publicly professed desire to create a more diverse and humble company. One can make a case, citing the examples above, that Microsoft is making progress. But my former female colleagues who reviewed this document in advance of its publication are unconvinced. None of them report feeling emboldened by the new Microsoft. They continue to withhold reports of discriminatory management practices. They relate stories of reports of abuse going unpunished and continue to fear reprisals for speaking out. In fact, multiple reviewers noted, independently, the irony that the only reason I am comfortable enough to speak out is that I am a “50-year-old white dude” and, thus, girded against reprisal from the body politic. So they remain silent when, in fact, they are among the voices Microsoft needs to hear the most. Apparently, Microsoft has dipped only a single toe in the river that flows to the future.&lt;/p&gt;
&lt;p id=&quot;f42a&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;It’s time for a vigorous swim and the entire world should be encouraging Microsoft to take the plunge. At its core, Microsoft is a company that makes its money the old fashioned way: by creating products of value that people willingly part with their money to use. They stand as a bulwark against the data mongering and user exploitation that Google and Facebook see as the future of humanity.&lt;/p&gt;
&lt;p id=&quot;741e&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;The entire world has a stake in Nadella’s fledgling culture-forward strategy prevailing over the 40-year momentum of the made-men standing squarely in its way.&lt;/p&gt;
&lt;p id=&quot;6dc0&quot; class=&quot;gy gz eb at ha b hb hc hd he hf hg hh hi hj hk hl&quot;&gt;C’mon Microsoft. The world needs you.&lt;/p&gt;
</description>
<pubDate>Fri, 25 Oct 2019 07:01:58 +0000</pubDate>
<dc:creator>CPAhem</dc:creator>
<og:type>article</og:type>
<og:title>Speaking Truth to Power: Reflections on My Career at Microsoft</og:title>
<og:description>How about just: Former Facebook Microsoft engineer James Whittaker on how to fix the company</og:description>
<og:url>https://onezero.medium.com/speaking-truth-to-power-reflections-on-a-career-at-microsoft-90f80a449e36</og:url>
<og:image>https://miro.medium.com/focal/1024/539/48/48/1*juhYFFSvOBypwszsadiNQA.jpeg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://onezero.medium.com/speaking-truth-to-power-reflections-on-a-career-at-microsoft-90f80a449e36?gi=9eef942241a</dc:identifier>
</item>
<item>
<title>قلب: a non-ASCII programming language written in Arabic</title>
<link>http://nas.sr/%D9%82%D9%84%D8%A8/</link>
<guid isPermaLink="true" >http://nas.sr/%D9%82%D9%84%D8%A8/</guid>
<description>&lt;iframe height=&quot;400&quot; width=&quot;100%&quot; src=&quot;https://www.youtube.com/embed/77KAHPZUR8g&quot;&gt;[embedded content]&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://%D9%82%D9%84%D8%A8.%D9%85%D9%88%D9%82%D8%B9/&quot;&gt;قلب&lt;/a&gt; is a programming language exploring the role of human culture in coding. Code is written entirely in Arabic, highlighting cultural biases of computer science and challenging the assumptions we make about programming. It is implemented as a tree-walking language interpreter in JavaScript.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nas.sr/%D9%82%D9%84%D8%A8/repl.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;All modern programming tools are based on the &lt;a href=&quot;http://en.wikipedia.org/wiki/Ascii&quot;&gt;ASCII character set&lt;/a&gt;, which encodes Latin Characters and was originally based on the English Language. As a result, programming has become tied to a single written culture. It carries with it a cultural bias that favors those who grew up reading and writing in that cultural. قلب explores and challenges that by presenting a language that deviates almost entirely from ASCII.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/media/BBT7XurCQAARLeu.jpg:large&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;In addition to the language and its interpreter, the قلب project includes a calligraphy series. Traditional Computer Science algorithms are implemented in قلب, and the resulting Arabic source code is used as the content of calligraphy pieces, in effect treating the algorithms as high poetry. The current completed pieces are Hello World, Fibonacci, and Conway’s Game of Life.&lt;/p&gt;

&lt;p&gt;In my interview with &lt;a href=&quot;http://hyperstage.net/&quot;&gt;Hyperstage&lt;/a&gt;, I describe قلب’s history, the cultural areas the project is exploring, and the importance of the calligraphic component. This was the first time I got to talk about the project in Arabic, which was a treat.&lt;/p&gt;
&lt;iframe height=&quot;400&quot; width=&quot;100%&quot; src=&quot;https://www.youtube.com/embed/77KAHPZUR8g&quot;&gt;[embedded content]&lt;/iframe&gt;
&lt;p&gt;The project was featured twice on Animal New York, once as &lt;a href=&quot;http://animalnewyork.com/2013/arabic-programming-language-at-eyebeam-%D9%82%D9%84%D8%A8-opens-the-world/&quot;&gt;a feature&lt;/a&gt;, where it was called it “Novel…Crucial…[And] incredibly exciting”, and once as an &lt;a href=&quot;http://animalnewyork.com/2014/artists-notebook-ramsey-nasser/&quot;&gt;artist’s notebook&lt;/a&gt;. The video also features footage of the project’s debut at &lt;a href=&quot;http://eyebeam.org/&quot;&gt;Eyebeam&lt;/a&gt;’s Annual Artist Showcase in 2013.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://nas.sr/قلب/babycastles.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;قلب was part of the &lt;a href=&quot;https://www.facebook.com/events/1418549811751798/&quot;&gt;Assalamualaikum Babycastles&lt;/a&gt; show at the &lt;a href=&quot;http://babycastles.com/&quot;&gt;Babycastles&lt;/a&gt; gallery exploring the lived Muslim experience through videogames. A new work — بونج — was made for the show, an implementation of the game Pong.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nasser/---&quot;&gt;&lt;img class=&quot;noscale&quot; src=&quot;https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67&quot; alt=&quot;Fork me on GitHub&quot; data-canonical-src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;noline&quot; href=&quot;http://eyebeam.org/projects/%D9%82%D9%84%D8%A8-%D9%84%D8%BA%D8%A9-%D8%A8%D8%B1%D9%85%D8%AC%D8%A9&quot;&gt;&lt;img src=&quot;https://nas.sr/images/eyebeam.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
قلب was developed at Eyebeam as part of my fellowship exploring code as a medium of self expression.</description>
<pubDate>Fri, 25 Oct 2019 06:42:11 +0000</pubDate>
<dc:creator>kick</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://nas.sr/%D9%82%D9%84%D8%A8/</dc:identifier>
</item>
<item>
<title>Gmail marking email from me as spam</title>
<link>https://www.mail-archive.com/mailop@mailop.org/msg08806.html</link>
<guid isPermaLink="true" >https://www.mail-archive.com/mailop@mailop.org/msg08806.html</guid>
<description>&lt;pre&gt;
Hello All,
this is my first post to this list - I just learned about its existence and
someone told me that maybe it is possible to solve my issue here.
&lt;/pre&gt;
&lt;pre&gt;

I run my own personal mailserver at rafa.eu.org for quite a few years. All
the time I had absolutely no problems with sending messages to Gmail. Few
weeks ago I learned that Gmail suddenly started marking e-mails that I send
to Gmail users as spam. As users usually never look into their spam folders,
they don't receive my mail.

It happens mostly to recipients to whom I write for the first time (for
example, found their e-mail address at their website and want to ask for
something I'm interested in). People with whom I already corresponded
earlier receive my messages as usual (ie. they aren't marked as spam),
except for the case when I didn't write to this person for some time. For
example, I wrote to someone two or three times half a year ago, and din't
have any further messages exchange since then. If I write to him again now,
the message can fall to spam.

To test the issue I created a fresh account on Gmail and send a few messages
to it - they ended up right in the spam folder. I repeated this for three
different accounts and noticed that clicking &quot;This is not spam&quot; is not of
much help - ie. it helps for that particular account, but doesn't influence
the overall behaviour that my messages are going to spam on other accounts
(unless I click &quot;This is not spam&quot; on those accounts too).

The spam banner on the received message on Gmail account says that this
message is &quot;similar to ones already caught as spam&quot;, which is an absurd
explanation because each one of the messages I sent was different. I didn't
send a generic &quot;test 123&quot; or something similar, but tried to write an actual
email message that makes some sense, different in each case. Also they are
simple plain text messages without any HTML, links or attachments.

Of course DNS is configured correctly, ie. rafa.eu.org resolves to IP
address 217.182.79.147, and this IP address resolves back to rafa.eu.org.
I'm also not blacklisted. Obviously, I have never sent any spam-like message
myself nor my server wasn't relaying any.

I asked on different forums and tried to follow the advices I got.
Previously I didn't have SPF nor DKIM (as I wrote, for long time it was
absolutely no obstacle in getting my messages received by Gmail users), so I
configured them, I also published a DMARC record. DMARC reports I get from
Google indicate everything as passed, the same says Gmail in details of the
messages I sent to test accounts. I defined a MX record for my domain,
which I didn't have previously, because rafa.eu.org has an A record, so it
looked stupid (and superfluous) to me to define MX for rafa.eu.org that
points simply to rafa.eu.org :), and everything works perfectly with A
record only. But someone told me that Google may be suspicious about
domains that don't have a MX record, so I defined it. I registered my
domain and IP address at dnswl.org. I also registered for Google Postmaster
Tools, but it won't show me any information since I send too few messages to
Gmail users (the description says that I need at least a few hundred
messages sent daily, which I'll probably never achieve :)).

All this to no avail - my messages still go to spam (I just checked again on
the third of the test Gmail accounts). I only learned - by reading forums -
that more and more people start getting the same problem. What else can I do?

It would be best to get an actual advice from someone at Google who will
look into logs/config and check what actually happens. However, there seems
to be no way to contact them - no contact form or something like that is
published on the Gmail help pages.

Any help? I'm fighting with this for several weeks now, without any
success...
-- 
Regards,
   Jaroslaw Rafa
   r...@rafa.eu.org
--
&quot;In a million years, when kids go to school, they're gonna know: once there
was a Hushpuppy, and she lived with her daddy in the Bathtub.&quot;

_______________________________________________
mailop mailing list
mailop@mailop.org
&lt;a rel=&quot;nofollow&quot; href=&quot;https://chilli.nosignal.org/cgi-bin/mailman/listinfo/mailop&quot;&gt;https://chilli.nosignal.org/cgi-bin/mailman/listinfo/mailop&lt;/a&gt;
&lt;/pre&gt;</description>
<pubDate>Fri, 25 Oct 2019 05:31:49 +0000</pubDate>
<dc:creator>cnst</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.mail-archive.com/mailop@mailop.org/msg08806.html</dc:identifier>
</item>
</channel>
</rss>