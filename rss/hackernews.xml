<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Minecraft&amp;#039;s “Pack.png” Seed Reversal Methodology</title>
<link>https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/edit#</link>
<guid isPermaLink="true" >https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/edit#</guid>
<description>&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;meta property=&quot;og:title&quot; content=&quot;Pack.png seed reversal methodology&quot; /&gt;&lt;meta property=&quot;og:type&quot; content=&quot;article&quot; /&gt;&lt;meta property=&quot;og:site_name&quot; content=&quot;Google Docs&quot; /&gt;&lt;meta property=&quot;og:url&quot; content=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_&amp;amp;usp=embed_facebook&quot; /&gt;&lt;meta property=&quot;og:image&quot; content=&quot;https://lh3.googleusercontent.com/WsUykNJ2PnfbfJDigAE1pumt3p53yF2KQRHGeAcCe6B4JogosWWXaPH5r0QKoqzYPzbq5WTcIA=w1200-h630-p&quot; /&gt;&lt;meta property=&quot;og:image:width&quot; content=&quot;1200&quot; /&gt;&lt;meta property=&quot;og:image:height&quot; content=&quot;630&quot; /&gt;&lt;meta property=&quot;og:description&quot; content=&quot;Pack.png A Search By The Minecraft Community SalC1 Approved Unofficial_Approved pack.png This document documents the method used for reversing the seed of pack.png, the default icon of minecraft texture packs and servers. Brief Summary of what was useful (Full up-to-date methodology ...&quot; /&gt;&lt;meta name=&quot;google&quot; content=&quot;notranslate&quot; /&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge;&quot; /&gt;&lt;meta name=&quot;fragment&quot; content=&quot;!&quot; /&gt;&lt;meta name=&quot;referrer&quot; content=&quot;strict-origin-when-cross-origin&quot; /&gt;&lt;title&gt;Pack.png seed reversal methodology - Google Docs&lt;/title&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;https://ssl.gstatic.com/docs/documents/images/kix-favicon7.ico&quot; /&gt;&lt;link rel=&quot;chrome-webstore-item&quot; href=&quot;https://chrome.google.com/webstore/detail/ghbmnnjooekpmoecnnnilnnbdlolhkhi&quot; /&gt;&lt;link rel=&quot;chrome-webstore-item&quot; href=&quot;https://chrome.google.com/webstore/detail/apdfllckaahabafndbhieahigkjlhalf&quot; /&gt;&lt;meta itemprop=&quot;name&quot; content=&quot;Pack.png seed reversal methodology&quot; /&gt;&lt;meta itemprop=&quot;faviconUrl&quot; content=&quot;https://ssl.gstatic.com/docs/documents/images/kix-favicon7.ico&quot; /&gt;&lt;meta itemprop=&quot;url&quot; content=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_&amp;amp;usp=embed_googleplus&quot; /&gt;&lt;meta itemprop=&quot;embedURL&quot; content=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?usp=embed_googleplus&quot; /&gt;&lt;/head&gt;&lt;body dir=&quot;ltr&quot; class=&quot;docs-gm&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/CreativeWork/DocumentObject&quot; id=&quot;readabilityBody&quot; readability=&quot;757.08236318527&quot;&gt;
&lt;noscript&gt;
&lt;div class=&quot;docs-butterbar-container&quot; readability=&quot;6.5&quot;&gt;
&lt;div class=&quot;docs-butterbar-wrap&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;JavaScript isn't enabled in your browser, so this file can't be opened. Enable and reload.&lt;/p&gt;
&lt;/div&gt;
&lt;br /&gt;&lt;/div&gt;
&lt;/noscript&gt;
&lt;p&gt;&lt;span&gt;Pack.png&lt;/span&gt; &lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A Search By The Minecraft Community&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;title&quot; id=&quot;h.w8m0dghqbuho&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897888000&amp;amp;usg=AOvVaw3DElAjAzk61hDradmONSkw&quot;&gt;SalC1&lt;/a&gt;&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897888000&amp;amp;usg=AOvVaw3DElAjAzk61hDradmONSkw&quot;&gt;Approved&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897888000&amp;amp;usg=AOvVaw3DElAjAzk61hDradmONSkw&quot;&gt; &lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897888000&amp;amp;usg=AOvVaw3DElAjAzk61hDradmONSkw&quot;&gt;Unofficial&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897889000&amp;amp;usg=AOvVaw0PGpuXs4MDHxqR6UX9fmb5&quot;&gt;_&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://i.imgur.com/PVpeRKq.png&amp;amp;sa=D&amp;amp;ust=1601344897889000&amp;amp;usg=AOvVaw0PGpuXs4MDHxqR6UX9fmb5&quot;&gt;Approved&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;pack.png&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;span&gt;This document documents the method used for reversing the seed of pack.png, the default icon of minecraft texture packs and servers.&lt;/span&gt;&lt;/p&gt;


&lt;p class=&quot;subtitle&quot; id=&quot;h.wm48c85ntr63&quot;&gt;&lt;span&gt;(Full up-to-date methodology coming soon)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The pack.png seed-finding process was incredibly long and complicated, even discounting the many dead ends along the way. This section is meant to be a quick summary of how the seed was found; for the full methodology, see below (if you’re reading this right after the initial announcement, the method below is most likely being updated and may not reflect the actual method used).&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;To start, we determined the world orientation using the water texture, allowing us to determine the orientation of the player. The cloud texture was then used to find where the positive x axis was, and further confirmed a general approximate world location. After this, a recreation was made to nail down some of the block positions. Various regression algorithms worked alongside the recreation to get block positions accurate, while also refining the exact location and orientation of the player. This, combined with the clouds, eventually resulted in us determining the z-coordinate of the waterfall source block, specifically z=-31.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Once this was established, we used the dirt heights in conjunction with the pattern of dirt/sand on the beach to determine the most likely x coordinates of the waterfall. By far, the most common coordinate that resulted from this was x=116, and since this coordinate kept turning up we decided to go with it. We marked some clearly visible, unambiguous positions of dirt and sand along the beach, and if these were combined with the coordinates of the waterfall it was possible to filter the world seeds. That is, given a certain world seed, we could determine (without opening the game) whether it could potentially be pack.png.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Due to the very large number of potential seeds for randomly generated minecraft worlds (281,474,976,710,656), no one person could check every seed themselves. Instead, we used the compute-sharing platform BOINC to search through this entire seedspace to get a list of around 700,000 possible world seeds. While this may seem like a very large number, it made the rest of the search very easy to complete. Once the candidate seeds were determined, they were run through another program which checked if the height of the terrain matched the recreation of pack.png. This resulted in only one seed by the end: 3257840388504953787&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.zd11rm9xtihl&quot;&gt;Contents&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.zd11rm9xtihl&quot;&gt;2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.nvgqd53aq0rt&quot;&gt;Version&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.nvgqd53aq0rt&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.i4oxtbd4igk7&quot;&gt;Reading the code and modding&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.i4oxtbd4igk7&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.eidzsz65xgc&quot;&gt;Reading the code&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.eidzsz65xgc&quot;&gt;4&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.48rgmi53a6ee&quot;&gt;Modding&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.48rgmi53a6ee&quot;&gt;5&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.4ogfoouj4kja&quot;&gt;Basics of world generation in alpha&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.4ogfoouj4kja&quot;&gt;5&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.p5hk9pn9dczl&quot;&gt;The world seed&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.p5hk9pn9dczl&quot;&gt;5&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.gexv9hiolxx1&quot;&gt;System time (spoiler: this got us nowhere)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.gexv9hiolxx1&quot;&gt;5&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.rxl2o7s4asnt&quot;&gt;World generation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.rxl2o7s4asnt&quot;&gt;6&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dhtm1qpq3p0e&quot;&gt;Tree generation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dhtm1qpq3p0e&quot;&gt;7&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.5dcimnl26evq&quot;&gt;Recreation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.5dcimnl26evq&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.68tlxv8gvjrm&quot;&gt;Orientation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.68tlxv8gvjrm&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.ozonqx93mbkx&quot;&gt;Location&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.ozonqx93mbkx&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dr28xo2vocfo&quot;&gt;Y coordinate&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dr28xo2vocfo&quot;&gt;8&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.a3yrttsbnjn7&quot;&gt;Clouds&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.a3yrttsbnjn7&quot;&gt;9&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.8czcua2kn3dg&quot;&gt;Perspective fitting&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.8czcua2kn3dg&quot;&gt;10&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.su5gezarcat5&quot;&gt;Determining original resolution and cropping&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.su5gezarcat5&quot;&gt;12&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dp6q7599rjgg&quot;&gt;Upscaling attempts&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.dp6q7599rjgg&quot;&gt;14&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.1eua8hbbafhp&quot;&gt;Chunk borders&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.1eua8hbbafhp&quot;&gt;14&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.n1mfjqdiwuey&quot;&gt;X/Z coordinates from the clouds&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.n1mfjqdiwuey&quot;&gt;15&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.zfatlmkg6hw5&quot;&gt;Biomes&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.zfatlmkg6hw5&quot;&gt;16&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.ngjc3zq0begv&quot;&gt;Cloud clipping and sky gradient angles&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.ngjc3zq0begv&quot;&gt;16&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.z277r9xxlrt1&quot;&gt;Dirt anomaly&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.z277r9xxlrt1&quot;&gt;16&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.7mj63lkvgfw5&quot;&gt;Reversing chunk seeds (legacy section)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.7mj63lkvgfw5&quot;&gt;17&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.9ek9ssxl6cdh&quot;&gt;What can we use to reverse the chunk seed?&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.9ek9ssxl6cdh&quot;&gt;18&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.uqbhxfgr0pbg&quot;&gt;Splitting up the X coordinates: “x0,x1,x2..x14,x15”&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.uqbhxfgr0pbg&quot;&gt;19&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.hpg5yctmufig&quot;&gt;Lattices: mathematical reversal with trees&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.hpg5yctmufig&quot;&gt;20&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.qu9oz0uij9ir&quot;&gt;Seed-reversal-gpu&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.qu9oz0uij9ir&quot;&gt;20&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.l59k9svefyt2&quot;&gt;Seed-tester-native&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.l59k9svefyt2&quot;&gt;21&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.x4bglj6hyzv6&quot;&gt;Seed-reversal-merged&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.x4bglj6hyzv6&quot;&gt;21&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.8ewjf7tid301&quot;&gt;Reversing world seeds (legacy section)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.8ewjf7tid301&quot;&gt;21&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.iys3pdcjlte9&quot;&gt;Converting chunk seeds to world seeds&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.iys3pdcjlte9&quot;&gt;21&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.7cmgbzpbpnc6&quot;&gt;Terrain filter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.7cmgbzpbpnc6&quot;&gt;23&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.hgjtuktiuke&quot;&gt;Manual testing&lt;/a&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#h.hgjtuktiuke&quot;&gt;23&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;





&lt;hr /&gt;


&lt;p&gt;&lt;span&gt;We have identified the version to be a development version of&lt;/span&gt; &lt;span&gt;alpha 1.2.2a&lt;/span&gt;&lt;span&gt;. It cannot be from alpha 1.2.2a or later, as alpha 1.2.2a was released with the image in the game files. It cannot be from alpha 1.1.2 or earlier, as that update did not contain biomes, and had much brighter leaf colours not seen in the pack.png image. Alpha 1.2.2a was released on November 9th 2010, and according to the file metadata of pack.png, the image was last modified on November 8th 2010.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.eidzsz65xgc&quot;&gt;&lt;span&gt;Reading the code&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The recommended way to read the code is to set up the alpha example mod. To do this you will need:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_q8ayoog94dvd-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;A copy of&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://adoptopenjdk.net/&amp;amp;sa=D&amp;amp;ust=1601344897899000&amp;amp;usg=AOvVaw2kpTdNB1RvdSrv89LTFy80&quot;&gt;JDK8 or newer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;A copy of&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://www.jetbrains.com/idea/download/%23section%3Dlinux&amp;amp;sa=D&amp;amp;ust=1601344897899000&amp;amp;usg=AOvVaw3gb8HEROtNZMtiHO2d0rb3&quot;&gt;IntelliJ IDEA&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The Community edition is free for everyone and very good, but the Ultimate edition is better and free with a student license.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;To set up the example mod, follow these steps:&lt;/span&gt;&lt;/p&gt;
&lt;ol class=&quot;lst-kix_zdvlpm8kuz42-0 start&quot; start=&quot;1&quot;&gt;&lt;li&gt;&lt;span&gt;Clone/download the&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/alpha-example-mod&amp;amp;sa=D&amp;amp;ust=1601344897900000&amp;amp;usg=AOvVaw0I2k5Ay7GBs4BXdFOMSoyu&quot;&gt;alpha example mod repository&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Open the folder you cloned/downloaded and open the command prompt/terminal. In Windows run the command “gradlew genSources”, or in Linux/MacOS run “./gradlew genSources”. Wait for the command to finish.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Open IntelliJ IDEA, click “Import Project”, select the folder you cloned/downloaded, go to the next screen and select “gradle” from the project types. Leave all the rest of the settings on default and click finish. Wait for the project to finish importing.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The Minecraft alpha sources can be found in “External libraries” -&amp;gt; “net.minecraft:minecraft:blah blah” -&amp;gt; “minecraft blah.jar” -&amp;gt; “net.minecraft”.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Open any Minecraft class, and click “attach sources” on the blue banner at the top of the editor. It should automatically open to the location of the jar file; select the sources jar directly above it and press OK.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;Useful shortcuts in IntelliJ IDEA:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_vhkkdqv8t8lk-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;Ctrl+N: jump to Java file by name (press ctrl+N again to toggle between only showing files from your mod and showing all files).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Ctrl+left click on a reference: jump to declaration of method/field/variable/class.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Ctrl+left click on a declaration: find references of method/field/variable/class.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Sections in this document may contain references to parts of the code, marked in footnotes.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.48rgmi53a6ee&quot;&gt;&lt;span&gt;Modding&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;First, follow the steps for reading the code. Then, it’s the same as writing a normal Fabric mod, except remember there is no Fabric API, only the Fabric loader. For help with Fabric modding in general, ask in the Fabric discord (&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://discord.gg/v6v4pMv&amp;amp;sa=D&amp;amp;ust=1601344897901000&amp;amp;usg=AOvVaw2IhbsDgVcyrnYvaoPPMIMZ&quot;&gt;https://discord.gg/v6v4pMv&lt;/a&gt;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span&gt;but remember they have a rule against mentioning MCP names there, so don’t share any alpha class/field/method names there&lt;/span&gt;&lt;span&gt;. For mixin help, you can ask in the #mixin channel in the Sponge discord (&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://discord.gg/sponge&amp;amp;sa=D&amp;amp;ust=1601344897901000&amp;amp;usg=AOvVaw3SzSX78fGwZk6DC2mms4Hb&quot;&gt;https://discord.gg/sponge&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.p5hk9pn9dczl&quot;&gt;&lt;span&gt;The world seed&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;There was no way to choose a world seed in alpha 1.2.2a, all world seeds were random.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;World seeds have a data type of “long”, which means they can be in the range -2^63 to 2^63-1 inclusive, so at first glance it looks like there should be 2^64 possible seeds. However, random seeds are generated using the following code:&lt;br /&gt;&lt;/span&gt;&lt;span&gt;worldSeed = new Random().nextLong();&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt1&quot; id=&quot;ftnt_ref1&quot; name=&quot;ftnt_ref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Java’s&lt;/span&gt; &lt;span&gt;Random object&lt;/span&gt;&lt;span&gt; uses an RNG with only a 48-bit seed internally, meaning that there are only 2^48 possible outputs of nextLong. Moreover, some of these outputs are repeated, meaning that in actual fact there are only 2^48 * 0.82 possible seeds, or about 231 trillion.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.gexv9hiolxx1&quot;&gt;&lt;span&gt;System time (spoiler: this got us nowhere)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;How “&lt;/span&gt;&lt;span&gt;new Random()&lt;/span&gt;&lt;span&gt;” initializes its seed is platform and Java version dependent. Notch confirmed that they were using Java 6 and Windows 7. In Java 6, the seed was initialized as follows:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;setSeed(++seedUniquifier + System.nanoTime());&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt2&quot; id=&quot;ftnt_ref2&quot; name=&quot;ftnt_ref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Where “seedUniquifier” is a global variable that starts at 0 on program startup and increments each time a Random object is created.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;System.nanoTime()&lt;/span&gt;&lt;span&gt; returns a nanosecond-precision counter relative to an arbitrary point in time. On Windows 7, this returned the number of nanoseconds since system startup, except in 2010 most system clocks weren’t as advanced as today, and only had microsecond accuracy, which meant that until it overflowed (after a long time),&lt;/span&gt; &lt;span&gt;System.nanoTime()&lt;/span&gt;&lt;span&gt; would always be a multiple of 1000, and once it did overflow, it would still be a multiple of 8 (the greatest common divisor between 1000 and 2^64). However, since Random seeds are only 48-bit, the lowest 48 bits of&lt;/span&gt; &lt;span&gt;System.nanoTime()&lt;/span&gt;&lt;span&gt; would overflow sooner, after 2^48 nanoseconds or approximately 3 days. According to a Tumblr post by Notch from around the time, he tended to leave his computer on so it may well have overflowed. If the pack.png world is the first world to be created after game startup, then the Random which generated the world seed is the 17th Random to have been created, which would make the lowest 3 bits of the seed 001. However, this is a risky assumption to make, as multiple worlds may have been created. If it wasn’t the first world, then we can make no accurate guess on any bits of the seed using the system time.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.rxl2o7s4asnt&quot;&gt;&lt;span&gt;World generation&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Chunks are generated in 2 stages: “generation” and then “population”.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Generation&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt3&quot; id=&quot;ftnt_ref3&quot; name=&quot;ftnt_ref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; handles the basic terrain: its height, shape, the top decoration and caves. The shape of the terrain&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt4&quot; id=&quot;ftnt_ref4&quot; name=&quot;ftnt_ref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;is decided by perlin noise generators seeded based on the world seed. Decoration&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt5&quot; id=&quot;ftnt_ref5&quot; name=&quot;ftnt_ref5&quot;&gt;[5]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; refers to the top blocks of the terrain, usually grass and dirt and water below sea level, but sometimes sand and gravel and other blocks too, and the bedrock underground. The RNG used for this step is&lt;/span&gt; &lt;span&gt;independent&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;from the world seed&lt;/span&gt;&lt;span&gt; and only dependent on location, which is why bedrock is the same in every world; however, some things in this step also use perlin noise generators which are dependent on the world seed, so we can’t tell location from the sand on the beaches, for example. This independent from world seed fact will be used later on. Caves are seeded in the same way as population&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt6&quot; id=&quot;ftnt_ref6&quot; name=&quot;ftnt_ref6&quot;&gt;[6]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt;, but cannot really be used as it is hard to tell from just the pack.png image where any caves start generating.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Population&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt7&quot; id=&quot;ftnt_ref7&quot; name=&quot;ftnt_ref7&quot;&gt;[7]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; handles the more varied aspects of world generation, such as trees, flowers, dungeons and ores (and in later versions, structures). Population occurs the first time a 2x2 area of chunks is loaded, in the 16x16 block region in the middle of them (therefore offset by 8 blocks). This is done so that trees and other features don’t get cut off on chunk borders. This 16x16 region offset by 8 blocks is referred to as the “population region”.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Almost the entirety of population is done using a single Random object seeded from the world seed and location of the region as follows:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;rand.setSeed(worldSeed);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;long a = rand.nextLong() / 2 * 2 + 1;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;long b = rand.nextLong() / 2 * 2 + 1;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;rand.setSeed((chunkX * a + chunkZ * b) ^ worldSeed);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Where ^ is the bitwise xor operator, and / is the integer division operator, which always removes the decimal part (i.e. rounding towards zero). The seed of the Random after this point is referred to as the “population seed” or “chunk seed”.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Chunk seeds are important because there are only 2^48 of them, they are a way to gain information about the seed without explicitly knowing the location. Instead of cracking the world seed directly, we instead crack the seed at this point, and work backwards from there. A methodology for converting a chunk seed to a world seed given a guess of location will be shown later in this document.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.dhtm1qpq3p0e&quot;&gt;&lt;span&gt;Tree generation&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;There are a couple of annoying tree-related things in population which use simplex/perlin noise instead. One is biomes, which affects the number and types of trees which generate, and the other is what we call “tree density noise” or just “tree noise”&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt8&quot; id=&quot;ftnt_ref8&quot; name=&quot;ftnt_ref8&quot;&gt;[8]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt;, which is a perlin noise generator that also affects the number of trees which generate in a population region.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In rainforests, large trees can randomly generate where they otherwise couldn’t, which is both an extra random call (throwing off seed-reversal-gpu and seed-tester-native), and breaks one of our assumptions for the Z coordinate too (although we would still be very confident on that value). By observation of the image and foliage colour, we have concluded that the mountain is not in a rainforest biome.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Other than that, the number of tree attempts in a chunk is based on the tree density noise, with a biome-dependent constant added to it. The theoretical maximum number of tree attempts is actually very high, and if we went all the way to this maximum our search would be too slow. Therefore, we picked a lower maximum number of tree attempts of 12 which it is almost certainly below. To decide on this number, we simulated a large number of chunks for each biome:&lt;/span&gt;&lt;/p&gt;


&lt;table&gt;&lt;tbody readability=&quot;4&quot;&gt;&lt;tr readability=&quot;12&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Biome&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Number of chunks tested&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;Total tree attempts in sample&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;Min. tree attempts in sample&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;Mean tree attempts in sample&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;5&quot;&gt;
&lt;p&gt;&lt;span&gt;Max. tree attempts in sample&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Standard deviation&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Rainforest&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;611&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;4356&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;7.129296&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;13&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1.712436&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Swampland&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;905&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;96&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.106077&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.308107&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Seasonal Forest&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2856&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;11191&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;3.918417&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;9&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1.575646&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Forest&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;10130&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;68557&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;6.767720&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;13&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1.540529&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Savanna&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2756&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;276&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.100145&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.300248&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Shrubland&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;3037&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;299&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.098452&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.297974&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Taiga&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2019&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;13621&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;3&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;6.746409&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;12&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;1.550626&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Desert&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2835&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-56421&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-20&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19.90159&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.297924&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Plains&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;2024&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-40267&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-20&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19.89476&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.306935&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Tundra&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;3021&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-60139&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-20&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19.90698&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;-19&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;0.290502&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;The number of tree attempts can be negative, which is the same as 0 tree attempts.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;As of writing, there have been at least two major recreation-building efforts (in addition to several spinoff attempts).  Between these two attempts, major improvements were made to the techniques used:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_y75ingadoovd-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;Use of software and bots to provide visual overlays to check the accuracy of the recreation.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Use of programming and 3D projection math to precisely estimate the player’s relative position/orientation.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Additional discoveries about the image.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;As a result, a lot of older estimates have been revised, leading to significantly better accuracy.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;One of the first things to be found was the orientation of the player. This was found using the texture of the water. This was found by Gsmack and Braycam2; when he realized that streaks in the water’s texture could help us identify the&lt;/span&gt; &lt;span&gt;player’s location&lt;/span&gt;&lt;span&gt;. The Z axis is left-right (increasing right), and the X axis is front-back (increasing forwards). It is actually not possible to tell whether the player is facing towards +X or -X, they just got lucky; we later confirmed the direction with the clouds.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;Most of the time we will define the location of things in terms of the coordinates of the water source block in the waterfall, as that’s an obvious fixed point on the mountain that stands out. This section will focus on trying to find the location of the waterfall in the world, and everything else can lead on from there.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.dr28xo2vocfo&quot;&gt;&lt;span&gt;Y coordinate&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;This is the easiest of the 3 axes to find, as sea level is constant at y = 64&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt9&quot; id=&quot;ftnt_ref9&quot; name=&quot;ftnt_ref9&quot;&gt;[9]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; (note this was decreased to 63 in a later version). Counting up from the sea level, we get a value of&lt;/span&gt; &lt;span&gt;waterfall Y = 76&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;(Additional note: Here, “sea level” of 64 refers to the boundary between water and air.  Since the y-level of a block is measured by its bottom surface, this is the same as saying the uppermost water blocks are at y = 63 and the lowermost air blocks directly above sea level are at y = 64).&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.a3yrttsbnjn7&quot;&gt;&lt;span&gt;Clouds&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The first breakthrough for finding the location of the mountain was identifying that the cloud pattern is the same every time you start up the game. From the code&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt10&quot; id=&quot;ftnt_ref10&quot; name=&quot;ftnt_ref10&quot;&gt;[10]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt; and experimentation, we identified the following key information about clouds in alpha 1.2.2a:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_t83w8xxpbwf1-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;The cloud tile layout is taken from an image in the game files called “clouds.png” (depicted below).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Clouds move towards -X, but not in the Z axis.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Clouds move at a rate of 0.03 blocks per tick, or 0.6 blocks per second, but only when a world is open. They do not reset their position when closing and opening a world, but they do reset after restarting the game.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Clouds are a different size depending on whether you are using fancy or fast graphics. Clouds do not have a depth in fast graphics&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt11&quot; id=&quot;ftnt_ref11&quot; name=&quot;ftnt_ref11&quot;&gt;[11]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt;, so pack.png was taken with fancy graphics.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;With fancy graphics, a cloud tile is 12x12 blocks in size. Since clouds.png is 256x256px, clouds repeat every 3072 blocks.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The bottom of the clouds are at y = 108.33, and have a height of 4 blocks.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;At time 0, the corners of the clouds.png image is aligned to block coordinates (0, -4). Thus being offset towards -Z by 4 blocks for some unknown reason.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Clouds.png (with transparent pixels changed to black so you can see it):&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;We identified the location of pack.png to be here on clouds.png, near the bottom left.&lt;br /&gt;&lt;/span&gt;&lt;img /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The coordinates of all of the clouds at time 0 could then be determined:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, the time elapsed in-game would need to be found in order to get the x-coordinates of these points, as again, clouds move towards the -x direction.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.8czcua2kn3dg&quot;&gt;&lt;span&gt;Perspective fitting&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Finding the player’s position and orientation can be viewed as a sort of regression problem. By taking advantage of known 3D relationships that are visible in the image, it is possible to get relatively precise estimates.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Four main components were used to determine perspective:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_jlmisuboekgb-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;The clearly visible front face of the hill.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Clearly visible sand blocks on the beach.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Clouds.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The water texture.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;Various algorithms were used, and many different parameters were varied in this optimization process. These included not only the player’s position/orientation, but also any unknown X/Z offsets between the various components. Additionally, the screen resolution and the section of the screen which was cropped were needed. This helped to determine the player’s position relative to the clouds, and the hill position relative to the player. When combined, these gave the position of the waterfall relative to the clouds, which allowed the z-coordinate of the waterfall to be determined.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Example render from an (older) perspective fit:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;These following estimates were originally obtained:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_6x262ks3mewi-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;Player feet position relative to the waterfall source block is:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul class=&quot;lst-kix_6x262ks3mewi-1 start&quot;&gt;&lt;li&gt;&lt;span&gt;Most likely -68 to -69 on the X axis&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Definitely -12 on the Y axis (player is standing on a shore at sea level)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Most likely between +32 and +33 on the Z axis.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul class=&quot;lst-kix_6x262ks3mewi-0&quot;&gt;&lt;li&gt;&lt;span&gt;Player orientation is:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;ul class=&quot;lst-kix_6x262ks3mewi-1 start&quot;&gt;&lt;li&gt;&lt;span&gt;Facing east with a yaw between -119 and -121&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Looking slightly upwards with a pitch between -1 and -3&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;This fit was later refined as the recreation got better, and more points were used on the original image. The points used can be seen below:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;With the use of more points, the fit became much more accurate, and made some errors in the recreation apparent - most importantly, the position of the beach had to be moved slightly backwards.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;After visually altering the parameters slightly, a final, very accurate set of coordinates was found:&lt;/span&gt;&lt;/p&gt;

&lt;ul class=&quot;lst-kix_t6uh489ufh3x-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;Player is offset relative to the waterfall by (x = -66.84, y = -10.38, z = 31.72)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The pitch is -8.297 and the yaw is -119.23&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The global z coordinate is z = -31 (based on the cloud position)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The screen resolution is 1600x1116, with the original crop starting at pixel (622,284) (the full crop being 512x512, as explained below)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;This was a very important development, as it gave the z-coordinate for the waterfall.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.su5gezarcat5&quot;&gt;&lt;span&gt;Determining original resolution and cropping&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The image metadata clearly states that it was edited in&lt;/span&gt; &lt;span&gt;Paint.NET v3.5.5.  This version of the software only has a few options for downscaling algorithms. It was determined that the default algorithm (labeled “best quality” or “supersampling”) was a “box”-style algorithm, and upon visual comparison it was determined that this was the downscaling algorithm used.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;A major breakthrough occurred while studying the pixelated borders of the clouds. It was discovered that the color blending perfectly matched that produced from a 4x downscale.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Furthermore, the presence of many “sharp” edges with no blending also hints that the downscale ratio was a perfect integer. As a result, we can conclude that the original cropped image, before downscaling, was 512x512 pixels.  Each pixel in the final image is simply the average value of the 4x4=16 corresponding pixels in the original.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The vertical FOV of minecraft was hardcoded to be 70, but the vertical/horizontal FOVs of the cropped region must be estimated. Most importantly, the cropping/FOV estimates produced during the perspective matching process allow us to determine where the player’s crosshairs would be if they were visible.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;It also becomes possible to estimate the original vertical resolution of the uncropped screenshot.  The resulting value is in the neighborhood of 1125-1145 pixels. At first this value may seem unreasonably large, but it is in line with what would be produced by a maximized window on a 1600x1200 monitor, once the taskbar and title bar heights are subtracted (one such test produced 1138 pixels). Below is an early screenshot (a couple years before pack.png) from Notch which indicates he likely owned a 1600x1200 monitor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Unfortunately, no screenshot of him playing minecraft on such a monitor has been found.  Regardless, this mainly serves to confirm that the estimates of resolution and FOV are viable. After exploring various settings/configurations,&lt;/span&gt; &lt;span&gt;1600x1138 is considered the most likely original resolution&lt;/span&gt;&lt;span&gt;. It is unlikely that a better estimate of vertical resolution could be found.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.dp6q7599rjgg&quot;&gt;&lt;span&gt;Upscaling attempts&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;There have been a few attempts to upscale the image.  The first attempts to upscale the image, using “AI”, produced results that looked nice but distorted the positions of the block edges too much to really be usable.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Since the downscaling algorithm is very simple, it has been possible to manually “upscale” some of the simple parts of the image (such as the borders of the clouds) to the original 512x512 resolution, with the help of code to determine possible color combinations. This in turn helps to greatly improve the accuracy of the player position/orientation estimates.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Now that much more is known about the original resolution, orientation, and cropping, there is currently a second wave of attempts at producing a more accurate AI upscale. It should be noted, however, that seed-finding generally favors the use of a smaller number of unambiguous landmarks (like the tree positions easily seen in the raw image). Thus a higher quality AI upscale, perhaps rather unintuitively, is unlikely to be of significant benefit in this regard.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.1eua8hbbafhp&quot;&gt;&lt;span&gt;Chunk borders&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;To get exact coordinates, it would be helpful if we could find the chunk borders. The first major observation involves chunk borders showing between sand and grass on beaches. It is unknown exactly why this occurs.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It was initially believed that the effect was demonstrated in the pack.png image as well, which would tell us the Z chunk border.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tracing this back to the waterfall and aligning our previous estimate from the clouds with it, this gets us a value of waterfall Z = -30.  According to the most current recreation, however, this border appears to have been an optical illusion: the two grass blocks are not actually aligned.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The best estimate for waterfall position (as per the fit above) is Z=-31 based on alignment of the clouds, and this ended up being correct. As the estimate of player position changes, this estimate may also change, but the current value is believed to be +/- 1 block at the very worst.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Another thing that backs up the Z coordinate at least approximately is the tree types. In alpha 1.2.2a, it is not possible to have a small tree and a big tree in the same population region (except in rainforests). On the top left of the hill, you can see a big tree very close to a small tree, which means there must be a population border between them. There is also a similar case on the right of the image. This is not hard proof of the chunk border, but can serve to narrow down the possibilities.  Note: the precise locations of these trees were not completely determined.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.n1mfjqdiwuey&quot;&gt;&lt;span&gt;X/Z coordinates from the clouds&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Using a mesh from an early approximate reconstruction of pack.png imported into Blender, and the pack.png image overlayed, an approximate 3d reconstruction of the image was created, and the cloud edge was traced down to give an approximate Z coordinate of the waterfall of about Z = -31 to Z = -29&lt;/span&gt; &lt;span&gt;&amp;lt;I just made up these numbers but it was approximate like this. TODO look up our actual estimate from the time&amp;gt;&lt;/span&gt;&lt;span&gt;. The most up-to-date reconstruction and perspective gives Z = -31.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The approximate X coordinate of the waterfall as a function of time&lt;/span&gt; &lt;span&gt;t&lt;/span&gt;&lt;span&gt; seconds of ingame time since game startup is&lt;/span&gt; &lt;span&gt;x(t) ≈ 134 - 0.6t&lt;/span&gt;&lt;span&gt;.  We are starting by assuming that Notch took between 30 seconds and 5 minutes to take the screenshot, which gets a range of X coordinates of 116 down to -46.  (Note: an earlier estimate was&lt;/span&gt; &lt;span&gt;x(t) ≈ 196.61 - 0.6t&lt;/span&gt;&lt;span&gt; to give a range of 178.61 down to 16.61, simplified to 0-180.)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.zfatlmkg6hw5&quot;&gt;&lt;span&gt;Biomes&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;It is possible to extract a small amount of climate-related data.  For example, the hue of the sky places a lower bound on the temperature at the block where the player is standing. Furthermore, a slight color gradient visible in the tree foliage establishes the direction of the climate noise at that area.  It is not yet decided to what extent this information will be used in the search.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.ngjc3zq0begv&quot;&gt;&lt;span&gt;Cloud clipping and sky gradient angles&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;There is a visible horizontal line where the clouds are clipped at maximum render distance (set to FAR, giving a clipping plane 256 blocks away, oriented with the player head). There are also horizontal lines visible as slight color transitions in the sky. The angles to these lines can be determined (in the case of the cloud clip, it’s 9.5 +/- 0.1 degrees) and this can be used to estimate player distance from the hill. Unfortunately this method by itself only gives a +/- 3 block distance estimate which is not as accurate as other methods.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.z277r9xxlrt1&quot;&gt;&lt;span&gt;Dirt anomaly&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;Remember when we said earlier that the generation RNG is defined in terms of the location but not the world seed? Well, that fact can be used to narrow down possible X-coordinates for the waterfall. In alpha 1.2.2a, the depth of the dirt underneath the surface is variable, and is clearly visible in the hill in the pack.png image.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The height of the dirt at a given x and z coordinate is determined by:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;dirtHeight = floor((dirtNoise(x, z) / 3 + 3) + (rand.nextDouble() * 0.25));&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt12&quot; id=&quot;ftnt_ref12&quot; name=&quot;ftnt_ref12&quot;&gt;[12]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Notice there are two sections to this formula. The first section which depends on a perlin noise generator for dirt height, which depends on the world seed and location; and the second section which does not depend on the world seed, only the location. The key observation is the perlin noise generator produces a smoothed out curve of dirt depth, and does not produce abrupt changes which would require an abrupt change in the rate of change of dirt depth. Any abrupt change like this you see in the world must be caused by the RNG independent from the world seed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The image below is a sample of dirt heights from the front of the mountain in pack.png. You can see the general trend in the Z direction here is that dirt depth is increasing from 3 to 4 from left to right. However one column of dirt seems to ignore this trend, which means it must have got some extra height from the RNG compared to the block to its right. Additionally, X coordinates where the value from the RNG at the anomaly is higher than the value to the left are more likely, although we didn’t end up using this fact as it’s a bit too risky.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This allowed us to immediately eliminate half of the possible world X coordinates of the waterfall.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;The code used for filtering out x coordinates can be found here:&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/seed-tester/blob/master/src/me/balint/XFilter.java&amp;amp;sa=D&amp;amp;ust=1601344897941000&amp;amp;usg=AOvVaw3y6VUEEOhggT3vJ-nGA5he&quot;&gt;https://github.com/pack-png-mods/seed-tester/blob/master/src/me/balint/XFilter.java&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Important notes about the following sections of the document:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_elor9954cdee-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;It deals with a work-backwards approach of finding possible chunk seeds, then deriving world seeds from those. The newer approach will likely be working forwards, performing a more direct search over world seeds.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;It uses some older estimates for X and Z coordinates.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;The text currently remains how it was originally written.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span&gt;Refer back to the “world generation” section to remind yourself what a chunk seed is, if you’re forgotten.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.9ek9ssxl6cdh&quot;&gt;&lt;span&gt;What can we use to reverse the chunk seed?&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let’s tackle these things one by one:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_o8hfjedfsnj3-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;P: although in modern versions, animals can spawn with terrain, in alpha 1.2.2a they couldn’t, therefore this pig does not give us any information on the seed.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;F: flowers are added during population, but they spawn in patches&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt13&quot; id=&quot;ftnt_ref13&quot; name=&quot;ftnt_ref13&quot;&gt;[13]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt;, and it is hard to know the exact point where the patch started generating from, which we would need to know for reversal.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;W: a waterfall is a very good candidate for reversing a chunk seed, especially one this high up where they are quite rare; a waterfall has a 0.4257% chance of spawning at y = 76. We used this waterfall where we could, and used things in the same population region as it. There are 50 attempts at a waterfall per chunk, which means we would expect 21.3% of chunks to have at least one waterfall attempt at y = 76. However most of the time a waterfall attempt fails, as it needs to be inside stone, have 5 stone around it, and exactly 1 air block adjacent to it&lt;/span&gt;&lt;sup&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt14&quot; id=&quot;ftnt_ref14&quot; name=&quot;ftnt_ref14&quot;&gt;[14]&lt;/a&gt;&lt;/sup&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;A0, A3, A4, A5, A6, A7, A8, A9, A10: all these trees cannot be in the same population region as the waterfall, because they are across a population border in the Z axis. A5 is particularly on the edge, only just over the population border.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;A1, A2: these trees are close to the waterfall so were likely to be in range of it, and were used as part of the reversal process. The only thing about the location that matters about these trees is their x and z coordinates within the population region. A1 is at (-3, 3) relative to the waterfall, and A2 is at (-5, -8) relative to the waterfall.&lt;br /&gt;There is also a mathematical technique explained later to narrow down the seeds using a tree location without brute forcing.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;B: this tree is hard to make out exactly where it is on the image, so it earned the nickname “blobby tree”, because it looks like not much more than a blob. However, even it’s approximate location is useful information that can be used to narrow down the chunk seeds. We determined it to be (3 to 5, -9 to -6) relative to the waterfall.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;L: most of the leaves in the image are too ambiguous for us to rely upon, however these two are pretty obvious, so we used them.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h.uqbhxfgr0pbg&quot;&gt;&lt;span&gt;Splitting up the X coordinates: “x0,x1,x2..x14,x15”&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;To reverse chunk seeds, we need to know the coordinates of the features inside the chunk relative to the population region. However, we don’t know this information for the x coordinate (the narrowing down of the global X coordinate using the dirt anomaly does not help with this). So, we unfortunately had to try all 16 possible X alignments.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We named these X alignments after where the waterfall is relative to the start of the population region. Thus, x2 refers to the case where the waterfall X is 10 (mod 16), because 10 = 2 + 8, because population regions are offset by 8 from chunk borders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In some x alignments, there are some trees in range of the waterfall, and in others, different ones are:&lt;/span&gt;&lt;/p&gt;


&lt;table&gt;&lt;tbody readability=&quot;12&quot;&gt;&lt;tr&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;X alignment&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;Case&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;x0 to x2&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;A1 and A2 are not in range of the waterfall, blobby is in range. We search without the waterfall, but with A1 and A2.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;x3 to x4&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;A1 and blobby are in range of the waterfall, but A2 is not. We search with A1, blobby and the waterfall.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;x5 to x10&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;&lt;span&gt;A1, A2 and blobby are in range of the waterfall, we search with all of them.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;x11 to x12&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;A1 and A2 are in range, but it is ambiguous whether blobby is in range of the waterfall. We split these into the case where blobby is in range and blobby isn’t in range. These are named x11_blobby and x12_blobby for the former case and simply x11 and x12 for the latter case.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;7.5&quot;&gt;&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
&lt;p&gt;&lt;span&gt;x13 to x15&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; readability=&quot;8&quot;&gt;
&lt;p&gt;&lt;span&gt;A1 and A2 are in range, but blobby is not in range, we use A1, A2 and the waterfall.&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id=&quot;h.hpg5yctmufig&quot;&gt;&lt;span&gt;Lattices: mathematical reversal with trees&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The lattice technique exploits a weakness in the type of random number generator Java uses to generate its pseudo-random values. In simple terms, it’s a fast (and parallelizable) method to enumerate all possible seeds where 2 consecutive random calls produce a given output. Explaining it in full here would take up several pages on its own, so let me instead link an excellent source describing the method in detail:&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://nbviewer.jupyter.org/gist/EDDxample/38a9acddcd29f15af034fd91da93b8fa&amp;amp;sa=D&amp;amp;ust=1601344897947000&amp;amp;usg=AOvVaw37YgbBztpDhq_h6MaoKZP8&quot;&gt;https://nbviewer.jupyter.org/gist/EDDxample/38a9acddcd29f15af034fd91da93b8fa&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.qu9oz0uij9ir&quot;&gt;&lt;span&gt;Seed-reversal-gpu&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/seed-reversal-gpu&amp;amp;sa=D&amp;amp;ust=1601344897947000&amp;amp;usg=AOvVaw3dxEqEpMu9SXjNQSvnioeM&quot;&gt;https://github.com/pack-png-mods/seed-reversal-gpu&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Seed-reversal-gpu is the first step in the pipeline for generating a list of possible chunk seeds. The GitHub repository has a branch for each x alignment. The way it works is as follows:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_9d3u499dryb-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;Feed the position of A2 (x0-x2 and x5-x15) or A1 (x3-x4) into a lattice to obtain a list of initial seed guesses. There is some weird manipulation to convert the GPU thread ID and offset into a point on the parallelogram, but it is otherwise the same concept.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Filter out seeds where the height of that tree does not match what is seen on pack.png.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Since this tree may not have generated at the start of tree generation, iterate over the possible numbers of calls between the start of tree generation and the generation of this tree. A tree attempt does 3 random calls when it fails and 19 when it is successful. Using an upper bound of 12 tree attempts, a list of possible number of calls is precomputed with dynamic programming.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Checks whether this chunk generates small trees or big trees, and filters the seed out if it’s big trees.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;From the start of tree generation, simulate the tree generation forwards. A tree attempt fails if it’s not in the same location as in pack.png, and is successful if it is in the same location as in pack.png, this should find all matching seeds but can also generate false positives which will be filtered out by later programs. In the case of the blobby tree, any tree in that area is successful*.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;On iterations where all trees we are looking for have been generated, we skip over the rest of the generation as fast as we can to the waterfall generation, and test whether any of the 50 waterfall attempts generate a waterfall in the correct location.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Runs the LCG (RNG) backwards to the start of population to get the chunk seed**.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;* This may be a bit of a risky assumption. Trees can’t generate directly next to another tree that has already generated there, but may generate 2 blocks away, and seed-reversal-gpu may miss a small proportion of seeds, where the first tree in that area is supposed to fail (the blobby tree area is quite hilly so trees might fail there in some locations), but seed-reversal-gpu assumes the attempt to be successful. This may be something we have to come back to later if we don’t find the seed, one workaround is to try the case where the first tree in that area fails but the second one is successful, which shouldn’t produce nearly as many seeds to try, and only affects x3 to x12_blobby.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;** This step may fail if there was a dungeon in the chunk, which there is a 2.5% chance of.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.l59k9svefyt2&quot;&gt;&lt;span&gt;Seed-tester-native&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/seed-tester-native&amp;amp;sa=D&amp;amp;ust=1601344897950000&amp;amp;usg=AOvVaw2f1izAnzeixKAgJuOHOal2&quot;&gt;https://github.com/pack-png-mods/seed-tester-native&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Seed-tester-native takes the output list from seed-reversal-gpu and performs some slower checks (and checks not well-suited for a GPU) on the CPU to filter&lt;/span&gt;&lt;span&gt; out 86% of its output. The checks it carries out are as follows:&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;lst-kix_hb2f6o4ejnnj-0 start&quot;&gt;&lt;li&gt;&lt;span&gt;It double checks everything seed-reversal-gpu already checked (just to be sure).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;More accurate testing for tree spawning - rejects seeds where trees are attempted to spawn in wrong locations that would succeed in the pack.png image.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;A small number of tree leaves are tested (the ones we can make out for sure).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;h.x4bglj6hyzv6&quot;&gt;&lt;span&gt;Seed-reversal-merged&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/seed-reversal-merged&amp;amp;sa=D&amp;amp;ust=1601344897951000&amp;amp;usg=AOvVaw0eQCg8Yu5EYNNfWSE6K8-E&quot;&gt;https://github.com/pack-png-mods/seed-reversal-merged&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;For x0 to x4, seed-reversal-gpu generates too many seeds to reasonably store on an SSD or transfer between computers, so seed-reversal-merged is basically seed-reversal-gpu and seed-tester-native merged into one program, to remove the need for the intermediate file.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;h.iys3pdcjlte9&quot;&gt;&lt;span&gt;Converting chunk seeds to world seeds&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/chunk-to-world-seed&amp;amp;sa=D&amp;amp;ust=1601344897952000&amp;amp;usg=AOvVaw0aaKwzUtQIILvFvNi0JUyd&quot;&gt;https://github.com/pack-png-mods/chunk-to-world-seed&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;This program takes in a list of chunk seeds and a guess on the waterfall coordinates and outputs a list of world seeds with those chunk seeds at those coordinates. The coordinate guesses are exact in the Z axis and come from the filtered down list from the dirt anomaly in the X axis.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That’s all you need to know about this section, but if you’re in the mood for some maths, read the rest of it!&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Recall that the chunk seed hash is implemented as&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;rand.setSeed(worldSeed);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;long a = rand.nextLong() / 2 * 2 + 1;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;long b = rand.nextLong() / 2 * 2 + 1;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;rand.setSeed((chunkX * a + chunkZ * b) ^ worldSeed);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Our hope is that given a guess for x and z and the value rand is set to, we can easily recover the value of worldSeed. The first step in looking for such a method is to examine how nextLong() is implemented. We find&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;public long nextLong() {&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;   return ((long)next(32) &amp;lt;&amp;lt; 32) + next(32);&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Where&lt;/span&gt; &lt;span&gt;next(32)&lt;/span&gt;&lt;span&gt; runs&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(seed * 0x5DEECE66DL + 0xBL) &amp;amp; ((1L &amp;lt;&amp;lt; 48) - 1)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then returns&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(int)(seed &amp;gt;&amp;gt;&amp;gt; (48 - bits)). //bits = 32 in this case&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A close examination of&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; reveals a flaw. Though&lt;/span&gt; &lt;span&gt;seed&lt;/span&gt;&lt;span&gt; is a 48 bit number, the bottom&lt;/span&gt; &lt;span&gt;n&lt;/span&gt;&lt;span&gt; bits of&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; depend only on the bottom&lt;/span&gt; &lt;span&gt;n + 16&lt;/span&gt;&lt;span&gt; bits of the seed for some&lt;/span&gt; &lt;span&gt;n&lt;/span&gt;&lt;span&gt;. This dependency extends for the most part to the bottom&lt;/span&gt; &lt;span&gt;n&lt;/span&gt;&lt;span&gt; bits of the sum&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;chunkX * a + chunkZ * b&lt;/span&gt;&lt;span&gt;. To give a concrete example, if you only know the bottom 18 bits of&lt;/span&gt; &lt;span&gt;seed&lt;/span&gt;&lt;span&gt;, then you can work out the bottom 2 bits of the chunk seed.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Now that we are aware of this flaw in&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; and the sum within the hash, we can engage ourselves with the following thought experiment. Imagine that along with&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;z&lt;/span&gt;&lt;span&gt; and the chunk seed, we knew the bottommost 16 bits of the&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;span&gt; That is,&lt;/span&gt; &lt;span&gt;worldSeed = d * 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt; + c&lt;/span&gt;&lt;span&gt;, where we know&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt; and we don’t know&lt;/span&gt; &lt;span&gt;d&lt;/span&gt;&lt;span&gt;, and&lt;/span&gt; &lt;span&gt;c&lt;/span&gt;&lt;span&gt; is 16-bit.&lt;/span&gt; &lt;span&gt;Then, as we know the value of the chunk seed&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(chunkX * a + chunkZ * b) ^ worldSeed&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; we could undo the xor by&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; and recover the bottommost 16 bits of the sum&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;chunkX * a + chunkZ * b&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;which we know will only depend on the bottommost&lt;/span&gt; &lt;span&gt;16+16 = 32&lt;/span&gt;&lt;span&gt; bits of the world seed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we were to plug&lt;/span&gt;&lt;span&gt; in&lt;/span&gt; &lt;span&gt;d * 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt; + c&lt;/span&gt;&lt;span&gt; for&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; in the&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; formula and compare the result to the value we recovered by undoing the xor, we would recover an expression of the form&lt;/span&gt; &lt;span&gt;m*d = e (mod 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;, where&lt;/span&gt; &lt;span&gt;m&lt;/span&gt;&lt;span&gt; is a subexpression only depending on&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt; and&lt;/span&gt; &lt;span&gt;z&lt;/span&gt;&lt;span&gt;, and&lt;/span&gt; &lt;span&gt;e&lt;/span&gt;&lt;span&gt; is also a subexpression made of variables we already know. If we solve this equation for&lt;/span&gt; &lt;span&gt;d&lt;/span&gt;&lt;span&gt;, we will obtain an expression for the bottommost 16 bits of&lt;/span&gt; &lt;span&gt;d&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This equation is solvable by multiplying both sides by the multiplicative inverse of&lt;/span&gt; &lt;span&gt;m&lt;/span&gt;&lt;span&gt; modulo 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt;, which we can calculate with knowledge of only&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt; and&lt;/span&gt; &lt;span&gt;z&lt;/span&gt;&lt;span&gt;. We can even take this one step further, using our new knowledge of&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; to undo more of the xor and recover 16 more bits of&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; via the exact same process. Since&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; is 48 bits,&lt;/span&gt; &lt;span&gt;we see that we are done&lt;/span&gt;&lt;span&gt;. We have now achieved something wonderful, recovering the entirety of the&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt; from just&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span&gt;z&lt;/span&gt;&lt;span&gt;, a chunk seed, and the bottom 16 bits of&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One final detail of note before we abandon the thought experiment is that we don’t actually know exactly how&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;rand.nextLong() / 2 * 2 + 1&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;will change with respect to just the output of the&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; call, as the way Java implements integer division depends on both the sign and the parity (whether it’s odd/even) of the output of&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; and can result in 3 separate outcomes. Luckily, it is not much trouble to adjust our equations for&lt;/span&gt; &lt;span&gt;e&lt;/span&gt;&lt;span&gt; to account for each of the&lt;/span&gt; &lt;span&gt;3*3 = 9&lt;/span&gt;&lt;span&gt; possibilities for both&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; call’s rounding.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Of course, in practice we don’t know the bottom 16 bits of&lt;/span&gt; &lt;span&gt;worldSeed&lt;/span&gt;&lt;span&gt;, but this is not much of an issue. The simplest way around the obstruction is to iterate through all 9 * 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt; = 589,824 possible combinations of bottom 16 bits and ways&lt;/span&gt; &lt;span&gt;nextLong()&lt;/span&gt;&lt;span&gt; may have rounded, recover the world seed in that case, and check if the upper 16 bits of the chunk seed match our desired chunk seed. Since the actual reversal process is so cheap and this method does 9 * 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt; reversals per chunk seed, so long as 9 * 2&lt;/span&gt;&lt;span&gt;16&lt;/span&gt;&lt;span&gt; * number of chunk seeds is less than the number of world seeds * chunks to check, this will be a significant boost in speed.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.7cmgbzpbpnc6&quot;&gt;&lt;span&gt;Terrain filter&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/hube12/TerrainAlphaTemp&amp;amp;sa=D&amp;amp;ust=1601344897959000&amp;amp;usg=AOvVaw3qh8knUQTJ5eag43EhttAk&quot;&gt;https://github.com/hube12/TerrainAlphaTemp&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;We first check for valid biomes which are f&lt;/span&gt;&lt;span&gt;orest&lt;/span&gt;&lt;span&gt;, s&lt;/span&gt;&lt;span&gt;easonal forest&lt;/span&gt;&lt;span&gt;, p&lt;/span&gt;&lt;span&gt;lains and&lt;/span&gt;&lt;span&gt; s&lt;/span&gt;&lt;span&gt;hrubland.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then we check for those 4 blocks’ heights which are 77,78,77,75 from left to right.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;They are at z=12 to 15 in the chunk -3 (z axis) so z=-36 to -33. The x is entirely determined by the waterfall choice made before (-1 to account the block difference).&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.hgjtuktiuke&quot;&gt;&lt;span&gt;Manual testing&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The terrain filter outputs few enough seeds to test manually (approximately 1 for every 78 million), so we go through each seed it outputs and check it manually with&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.google.com/url?q=https://github.com/pack-png-mods/seed-selector&amp;amp;sa=D&amp;amp;ust=1601344897960000&amp;amp;usg=AOvVaw23ad_AxuP5SOTAJOzsCVSs&quot;&gt;the seed selector mod&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;


&lt;h2 id=&quot;h.mevqn179nz6f&quot;&gt;&lt;span&gt;Using statistics to find the x-coordinate&lt;/span&gt;&lt;/h2&gt;
&lt;h2 id=&quot;h.k92xbr4dnwqd&quot;&gt;&lt;span&gt;Filtering world seeds via sand&lt;/span&gt;&lt;/h2&gt;

&lt;hr /&gt;&lt;div readability=&quot;7.2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref1&quot; id=&quot;ftnt1&quot; name=&quot;ftnt1&quot;&gt;[1]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;World.World(File, String)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;6.25&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref2&quot; id=&quot;ftnt2&quot; name=&quot;ftnt2&quot;&gt;[2]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Random.Random() [JDK 6]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;7.4893617021277&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref3&quot; id=&quot;ftnt3&quot; name=&quot;ftnt3&quot;&gt;[3]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.func_533_b(int, int)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10.607142857143&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref4&quot; id=&quot;ftnt4&quot; name=&quot;ftnt4&quot;&gt;[4]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.func_4060_a(int, int, byte[], MobSpawnerBase[], double[])&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;9.6052631578947&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref5&quot; id=&quot;ftnt5&quot; name=&quot;ftnt5&quot;&gt;[5]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.func_4062_a(int, int, byte[], MobSpawnerBase[])&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;11.612903225806&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref6&quot; id=&quot;ftnt6&quot; name=&quot;ftnt6&quot;&gt;[6]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;MapGenBase.func_867_a(IChunkProvider, World, int, int, byte[])&lt;/span&gt;&lt;span&gt;, inherited by&lt;/span&gt; &lt;span&gt;MapGenCaves&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;8.5573770491803&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref7&quot; id=&quot;ftnt7&quot; name=&quot;ftnt7&quot;&gt;[7]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.populate(IChunkProvider, int, int)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;6.4473684210526&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref8&quot; id=&quot;ftnt8&quot; name=&quot;ftnt8&quot;&gt;[8]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.field_920_c&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;9.5945945945946&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref9&quot; id=&quot;ftnt9&quot; name=&quot;ftnt9&quot;&gt;[9]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.func_4062_a(int, int, byte[], MobSpawnerBase[])&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;6.2432432432432&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref10&quot; id=&quot;ftnt10&quot; name=&quot;ftnt10&quot;&gt;[10]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;RenderGlobal.func_6510_c(float)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;6.2432432432432&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref11&quot; id=&quot;ftnt11&quot; name=&quot;ftnt11&quot;&gt;[11]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;RenderGlobal.func_4141_b(float)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;12.641379310345&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref12&quot; id=&quot;ftnt12&quot; name=&quot;ftnt12&quot;&gt;[12]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;ChunkProviderGenerate.func_4062_a(int, int, byte[], MobSpawnerBase[]), ChunkProviderGenerate.field_908_o, ChunkProviderGenerate.field_903_t&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10.266666666667&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref13&quot; id=&quot;ftnt13&quot; name=&quot;ftnt13&quot;&gt;[13]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;WorldGenFlowers.generate(World, Random, int, int, int)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div readability=&quot;10.266666666667&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=#ftnt_ref14&quot; id=&quot;ftnt14&quot; name=&quot;ftnt14&quot;&gt;[14]&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;WorldGenLiquids.generate(World, Random, int, int, int)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;</description>
<pubDate>Mon, 28 Sep 2020 21:15:21 +0000</pubDate>
<dc:creator>jsnell</dc:creator>
<og:title>Pack.png seed reversal methodology</og:title>
<og:type>article</og:type>
<og:url>https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_&amp;usp=embed_facebook</og:url>
<og:image>https://lh3.googleusercontent.com/WsUykNJ2PnfbfJDigAE1pumt3p53yF2KQRHGeAcCe6B4JogosWWXaPH5r0QKoqzYPzbq5WTcIA=w1200-h630-p</og:image>
<og:description>Pack.png A Search By The Minecraft Community SalC1 Approved Unofficial_Approved pack.png This document documents the method used for reversing the seed of pack.png, the default icon of minecraft texture packs and servers. Brief Summary of what was useful (Full up-to-date methodology ...</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://docs.google.com/document/d/1PpZqHWXPLjOsXf_T7uyH4rWuxUMxzBlxvv5gm19P_Z8/preview?_escaped_fragment_=</dc:identifier>
</item>
<item>
<title>Water on Mars: discovery of three buried lakes intrigues scientists</title>
<link>https://www.nature.com/articles/d41586-020-02751-1</link>
<guid isPermaLink="true" >https://www.nature.com/articles/d41586-020-02751-1</guid>
<description>&lt;div class=&quot;content position-relative cleared clear mq1200-padded&quot; data-component=&quot;article-container&quot; role=&quot;main&quot;&gt;
&lt;header class=&quot;article-item__header clear cleared pull--both&quot;&gt;&lt;div class=&quot;article__type&quot;&gt;NEWS
&lt;div class=&quot;ml10 article__date&quot;&gt;&lt;time itemprop=&quot;datePublished&quot;&gt;28 September 2020&lt;/time&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&quot;article-item__teaser-text serif&quot;&gt;Researchers say they have detected a group of lakes hidden under the red planet’s icy surface.&lt;/div&gt;
&lt;/header&gt;
&lt;div class=&quot;bordered-container clear cleared pull--both&quot;&gt;
&lt;div id=&quot;author-affiliations&quot; class=&quot;tab-group text14&quot; role=&quot;tablist&quot; data-test=&quot;author-affiliations&quot; data-tab-group=&quot;&quot;&gt;
&lt;div class=&quot;cleared&quot;&gt;
&lt;div id=&quot;author-affiliation-news-0&quot; class=&quot;tab-box js-box-wrapper&quot;&gt;
&lt;h3 id=&quot;author-affiliation-news-0-head&quot; data-track=&quot;click&quot; data-track-label=&quot;view author info&quot; class=&quot;sans-serif strong tab tab-skin ma0&quot; role=&quot;tab&quot; aria-controls=&quot;author-affiliation-news-0-content&quot; data-tooltip=&quot;Show author information&quot;&gt;Jonathan O'Callaghan&lt;/h3&gt;
&lt;div id=&quot;author-affiliation-news-0-content&quot; class=&quot;tab-content pin-right grid grid-12 last&quot; role=&quot;tabpanel&quot;&gt;
&lt;div class=&quot;pa10&quot; aria-labelledby=&quot;author-affiliation-news-0-head&quot;&gt;
&lt;div class=&quot;clear cleared&quot;&gt;
&lt;div class=&quot;align-left&quot;&gt;
&lt;h4 class=&quot;sans-serif&quot;&gt;Search for this author in:&lt;/h4&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;align-left&quot;&gt;
&lt;div class=&quot;article__body serif cleared&quot;&gt;
&lt;div class=&quot;embed intensity--high&quot;&gt;&lt;img class=&quot;figure__image&quot; alt=&quot;An image of Mars&quot; data-src=&quot;//media.nature.com/lw800/magazine-assets/d41586-020-02751-1/d41586-020-02751-1_18423590.jpg&quot;/&gt;&lt;noscript&gt;
&lt;p&gt;&lt;img class=&quot;&quot; alt=&quot;An image of Mars&quot; src=&quot;https://media.nature.com/lw800/magazine-assets/d41586-020-02751-1/d41586-020-02751-1_18423590.jpg&quot;/&gt;&lt;/p&gt;
&lt;/noscript&gt;
&lt;p class=&quot;figure__caption sans-serif&quot;&gt;&lt;span class=&quot;mr10&quot;&gt;Scientists have long thought that there could be water trapped beneath the surface of Mars.&lt;/span&gt;&lt;span&gt;Credit: Steve Lee, Univ. Colorado/Jim Bell, Cornell Univ./Mike Wolff, SSI/NASA&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Two years ago, planetary scientists reported the discovery of a large saltwater lake under the ice at Mars’s south pole, a finding that was met with excitement and some scepticism. Now, researchers say they’ve confirmed the presence of that lake — and found three more.&lt;/p&gt;
&lt;p&gt;The discovery, reported on 28 September in &lt;em&gt;Nature Astronomy&lt;/em&gt;&lt;sup&gt;&lt;a href=&quot;https://www.nature.com/articles/d41586-020-02751-1#ref-CR1&quot; data-track=&quot;click&quot; data-action=&quot;anchor-link&quot; data-track-label=&quot;go to reference&quot; data-track-category=&quot;references&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, was made using radar data from the European Space Agency’s (ESA) orbiting Mars Express spacecraft. It follows the detection of a single subsurface lake &lt;a href=&quot;https://www.nature.com/articles/d41586-018-05795-6&quot; data-track=&quot;click&quot; data-label=&quot;https://www.nature.com/articles/d41586-018-05795-6&quot; data-track-category=&quot;body text link&quot;&gt;in the same region&lt;/a&gt; &lt;a href=&quot;https://www.nature.com/articles/d41586-018-05795-6&quot; data-track=&quot;click&quot; data-label=&quot;https://www.nature.com/articles/d41586-018-05795-6&quot; data-track-category=&quot;body text link&quot;&gt;in 2018&lt;/a&gt; — which, if confirmed, would be the first body of liquid water ever detected on the red planet and a possible habitat for life. But that finding was based on just 29 observations made from 2012 to 2015, and many researchers said they needed more evidence to support the claim. The latest study used a broader data set comprising 134 observations from between 2012 and 2019.&lt;/p&gt;
&lt;p&gt;“We identified the same body of water, but we also found three other bodies of water around the main one,” says planetary scientist Elena Pettinelli at the University of Rome, who is one of the paper’s co-authors. “It’s a complex system.”&lt;/p&gt;
&lt;p&gt;The team used a radar instrument on Mars Express called the Mars Advanced Radar for Subsurface and Ionosphere Sounding (MARSIS) to probe the planet’s southern polar region. MARSIS sends out radio waves that bounce off layers of material in the planet’s surface and subsurface. The way the signal is reflected back indicates the kind of material that is present at a particular location — rock, ice or water, for example. A similar method is used to identify subsurface glacial lakes on Earth. The team detected some areas of high reflectivity that they say indicate bodies of liquid water trapped under more than one kilometre of Martian ice.&lt;/p&gt;
&lt;p&gt;The lakes are spread over about 75,000 square kilometres — an area roughly one-fifth the size of Germany. The largest, central lake measures 30 kilometres across, and is surrounded by three smaller lakes, each a few kilometres wide.&lt;/p&gt;
&lt;h2&gt;Salty lakes&lt;/h2&gt;
&lt;p&gt;On the surface of Mars, the low pressure that results from the planet’s lack of a substantial atmosphere makes liquid water impossible. But scientists have long thought that there could be water trapped under Mars’s surface, perhaps a remnant of when the planet once had seas and lakes billions of years ago. If such reservoirs exist, they could be potential habitats for Martian life. On Earth, life is able to survive in subglacial lakes in &lt;a href=&quot;https://www.nature.com/articles/d41586-018-07669-3&quot; data-track=&quot;click&quot; data-label=&quot;https://www.nature.com/articles/d41586-018-07669-3&quot; data-track-category=&quot;body text link&quot;&gt;places such as Antarctica&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But the amount of salt present could pose problems. It’s thought that any underground lakes on Mars must have a reasonably high salt content for the water to remain liquid. Although this far beneath the surface there may be a small amount of heat from the interior of Mars, this alone would not be enough to melt the ice into water. “From a thermal point of view it has to be salty,” says Pettinelli.&lt;/p&gt;
&lt;p&gt;Lakes with a salt content about five times that of seawater can support life, but as you approach 20 times that of seawater life is no longer present, says John Priscu, an environmental scientist at Montana State University.&lt;/p&gt;
&lt;p&gt;“There’s not much active life in these briny pools in Antarctica,” says Priscu, whose group studies microbiology in icy environments. “They’re just pickled. And that might be the case [on Mars].”&lt;/p&gt;
&lt;h2&gt;Heated debate&lt;/h2&gt;
&lt;p&gt;The presence of the Martian lakes themselves is also still debated. After the 2018 discovery, researchers raised concerns such as the lack of an adequate heat source to turn the ice into water. And although the latest finding supports the 2018 observation and involves much more data, not everyone is yet convinced that the regions identified are liquid water.&lt;/p&gt;
&lt;p&gt;“If the bright material really is liquid water, I think it’s more likely to represent some sort of slush or sludge,” says Mike Sori, a planetary geophysicist at from Purdue University, in West Lafayette, Indiana.&lt;/p&gt;
&lt;p&gt;Jack Holt, a planetarty scientist at the University of Arizonasays that while he thinks the latest data are fine, he isn’t sure about the interpretation. “I do not think there are lakes,” says Holt, who is on the science team for the Mars Shallow Radar sounder (SHARAD) on NASA’s Mars Reconnaissance Orbiter (MRO). “There is not enough heat flow to support a brine here, even under the ice cap.”&lt;/p&gt;
&lt;p&gt;A Chinese mission that is on its way to Mars might offer one way to check the claims. The &lt;a href=&quot;https://www.nature.com/articles/d41586-020-02187-7&quot; data-track=&quot;click&quot; data-label=&quot;https://www.nature.com/articles/d41586-020-02187-7&quot; data-track-category=&quot;body text link&quot;&gt;Tianwen-1 mission&lt;/a&gt; will enter orbit in February 2021, and as well as deploying a rover onto the surface, the orbiter will carry a suite of scientific instruments. These include radar equipment that could be used to make similar observations. “Its capabilities are similar to MARSIS and SHARAD,” says David Flannery from the Queensland University of Technology.&lt;/p&gt;
&lt;p&gt;For the time being, the prospect that these lakes are remnants of Mars’s wet past remains an exciting possibility. “There may have been a lot of water on Mars,” says Pettinelli. “And if there was water, there was the possibility of life.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;emphasis&quot;&gt;doi: 10.1038/d41586-020-02751-1&lt;/div&gt;

&lt;div id=&quot;references&quot; class=&quot;references&quot; data-toggle=&quot;anchor-links-section&quot; data-label=&quot;References&quot; data-concertina=&quot;true&quot;&gt;
&lt;section aria-labelledby=&quot;Bib1&quot;&gt;&lt;div class=&quot;serif article-section js-article-section cleared clear&quot; id=&quot;Bib1-section&quot;&gt;
&lt;h2 class=&quot;js-section-title section-title strong position-relative tighten-line-height background-gray-light pt20 pb6 pl0 pr20 standard-space-below small-space-above mq640-pt10 mq640-pb10 mq640-pl20 mq640-mt0 mq640-ml-20 mq640-mr-20 extend-left&quot; id=&quot;Bib1&quot;&gt;References&lt;/h2&gt;
&lt;div class=&quot;pl20 mq875-pl0 js-collapsible-section&quot; id=&quot;Bib1-content&quot;&gt;
&lt;div data-container-section=&quot;references&quot;&gt;
&lt;ol class=&quot;clean-list ma0 standard-space-below indented-list&quot; data-test=&quot;references-list&quot;&gt;&lt;li class=&quot;small-space-below border-gray-medium border-bottom-1 position-relative js-ref-item&quot; itemprop=&quot;citation&quot; itemscope=&quot;itemscope&quot; itemtype=&quot;http://schema.org/Article&quot; data-test=&quot;citation&quot;&gt;&lt;span class=&quot;indented-counter serif h2 tighten-line-height text-right position-absolute grade-c-hide&quot;&gt;1.&lt;/span&gt;
&lt;p class=&quot;tiny-space-below&quot; id=&quot;ref-CR1&quot;&gt;Lauro, S.E. &lt;em&gt;et al.&lt;/em&gt; &lt;em&gt;Nature Astronomy&lt;/em&gt; https://doi.org/10.1038/s41550-020-1200-6 (2020).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;hide-print text-right&quot;&gt;&lt;a href=&quot;https://www.nature.com/articles/d41586-020-02751-1-references.ris&quot; class=&quot;text14 sans-serif strong&quot; data-track=&quot;click&quot; data-track-action=&quot;download citation references&quot; data-track-label=&quot;link&quot;&gt;Download references&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;&lt;/div&gt;
&lt;aside class=&quot;c-latest-content mt40 hide-print&quot; data-simple-tab=&quot;&quot; data-tab-group=&quot;&quot; data-component-id=&quot;latest-news&quot; data-track=&quot;in-view&quot; data-track-action=&quot;in-view&quot; data-track-category=&quot;latest content&quot; data-track-label=&quot;visible&quot;&gt;&lt;div id=&quot;latest-content&quot; role=&quot;tablist&quot;&gt;
&lt;p class=&quot;serif strong&quot;&gt;Latest on:&lt;/p&gt;
&lt;div class=&quot;cleared&quot;&gt;
&lt;div id=&quot;latest-content-0&quot; class=&quot;c-latest-content__container&quot; data-container=&quot;&quot;&gt;
&lt;p id=&quot;latest-content-0-head&quot; class=&quot;c-latest-content__category c-latest-content__switch serif&quot; data-switch=&quot;&quot; role=&quot;tab&quot; aria-controls=&quot;latest-content-0-content&quot; data-track=&quot;click&quot; data-track-label=&quot;latest tag (rank:0)&quot;&gt;Planetary science&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;div class=&quot;nature-briefing nature-briefing-box mt0 cleared hide-print&quot; data-component-id=&quot;nature-briefing-box&quot; data-track=&quot;in-view&quot; data-track-action=&quot;in-view&quot; data-track-category=&quot;nature briefing&quot; data-track-label=&quot;inPage box visible&quot;&gt;
&lt;div class=&quot;nature-briefing-box__header pa20&quot;&gt;

&lt;p class=&quot;nature-briefing-box__standfirst mb0 sans-serif tighten-line-height&quot;&gt;An essential round-up of science news, opinion and analysis, delivered to your inbox every weekday.&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;aside class=&quot;article__aside align-right&quot;&gt;&lt;div class=&quot;related-content shrink--aside hide-print&quot;&gt;
&lt;h3 class=&quot;aside__title sans-serif&quot;&gt;Related Articles&lt;/h3&gt;
&lt;/div&gt;

&lt;div id=&quot;div-gpt-ad-right-2&quot; class=&quot;div-gpt-ad medium-rectangle advert js-ad text-center hide-print grade-c-hide&quot; data-gpt-unitpath=&quot;/285/nature.com/article&quot; data-gpt-sizes=&quot;300x250&quot; data-gpt-targeting=&quot;pos=right;artid=/articles/d41586-020-02751-1;path=/articles/d41586-020-02751-1&quot; data-ad-type=&quot;right&quot;&gt;&lt;noscript&gt;
&lt;p&gt;&lt;a href=&quot;https://pubads.g.doubleclick.net/gampad/jump?iu=/285/nature.com/article&amp;amp;sz=300x250&amp;amp;c=536335246&amp;amp;t=pos%3Dright%26artid%3D/articles/d41586-020-02751-1&quot;&gt;&lt;img data-test=&quot;gpt-advert-fallback-img&quot; src=&quot;https://pubads.g.doubleclick.net/gampad/ad?iu=/285/nature.com/article&amp;amp;sz=300x250&amp;amp;c=536335246&amp;amp;t=pos%3Dright%26artid%3D/articles/d41586-020-02751-1&quot; alt=&quot;Advertisement&quot; width=&quot;300&quot; height=&quot;250&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/noscript&gt;&lt;/div&gt;

&lt;/aside&gt;&lt;/div&gt;
</description>
<pubDate>Mon, 28 Sep 2020 17:01:44 +0000</pubDate>
<dc:creator>headalgorithm</dc:creator>
<og:url>https://www.nature.com/articles/d41586-020-02751-1</og:url>
<og:type>article</og:type>
<og:title>Water on Mars: discovery of three buried lakes intrigues scientists</og:title>
<og:description>Researchers say they have detected a group of lakes hidden under the red planet’s icy surface.</og:description>
<og:image>https://media.nature.com/lw1024/magazine-assets/d41586-020-02751-1/d41586-020-02751-1_18423594.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.nature.com/articles/d41586-020-02751-1</dc:identifier>
</item>
<item>
<title>How to Get Promoted</title>
<link>https://defmacro.substack.com/p/how-to-get-promoted</link>
<guid isPermaLink="true" >https://defmacro.substack.com/p/how-to-get-promoted</guid>
<description>&lt;p&gt;What career advice do you get as an employee of a growing company? Do great work, keep yourself challenged, focus on learning at every step, find mentors, mentor others, crush your OKRs. Every few quarters you go through a performance review that identifies your strengths and weaknesses, and sets you up for learning and growth. Every week you have one on ones with your boss where you get continuous course corrections on your performance.&lt;/p&gt;
&lt;p&gt;But it's easy to see it's mostly social fiction. Following the overt mechanisms of advancement is neither sufficient nor necessary. It may even be actively harmful— almost everyone who does great work and takes performance reviews seriously toils in relative obscurity. Look at the people who occupy positions of considerable authority in your organization. Did any of them get there by following some middle manager's feedback?&lt;/p&gt;
&lt;p&gt;In college I had friends who studied biology, so I hung out in the life sciences building a lot. They had a beautiful little forest nearby. We'd often go on walks there and enjoy the serenity. One time I went with a trained botanist. Over the next hour, as she talked about what she was seeing, the forest transformed from an idyllic little haven to a savage battlefield. Trees would fight their enemies with ruthless efficiency for every square inch of precious access to the sun. Bushes would be relegated to the leftovers, and moss and grass on the forest floor were forced to subsist on even less sunlight than that. Young, light-green plants would tirelessly invade the territory of their older, dark-green rivals, never ceasing the effort to starve them of energy. Seeds and spores would invent ingenious mechanisms to cover a wider and wider area than their opponents.&lt;/p&gt;
&lt;p&gt;At first, when you start working at a rapidly growing company, what you see is smart, idealistic, driven people working together to accomplish a goal greater than themselves. When you leave, unless you are willfully blind or exceptionally naive, what you see is a ruthless political arena— a modern day Game of Thrones, where machinations take place over email, and battles are won and lost over cups of light roast coffee.&lt;/p&gt;
&lt;h4&gt;Opportunists&lt;/h4&gt;
&lt;p&gt;What are the dynamics of this arena invisible to an untrained eye? The first thing to realize is that the coveted advantages of a rapidly growing company— money, growth, publicity, status— come with a trade off. Precisely &lt;em&gt;because&lt;/em&gt; the company has all these things, it will attract people who seek them, and the more successful the company, the stronger the attraction.&lt;/p&gt;
&lt;p&gt;Don't all of us seek wealth and status? Yes, but it doesn't always manifest in quite the same way. A hacker who works at a unicorn and contributes patches to &lt;a href=&quot;https://xmonad.org/&quot;&gt;xmonad&lt;/a&gt; in his spare time may want wealth and status, but he also has firmly entrenched and far-reaching principles. He may care about his text editor, or his programming language, or the API naming scheme. His principles may be advantageous, or silly, or counterproductive. But has &lt;em&gt;has them&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The kinds of opportunists who are attracted solely to wealth and status have no principles at all beyond accumulation of these two objects. It isn't that they don't have taste or good judgement. They do— that's why they got hired in the first place. But if they ever had a compulsion to express their sense of taste, it's long ago been subordinated to their primary and only concern: climbing the corporate ladder.&lt;/p&gt;
&lt;p&gt;When you first encounter this mode of being, it may be so far outside of your normal range of experience you'll have trouble processing it. Marx thought that to be fulfilled, humans must feel a connection to the end result of their work. For example, a carpenter feels satisfaction when he finishes a chair or a table. But in an industrialized society people no longer feel this connection, which robs them of the fulfillment. He called this phenomenon &quot;estranged labor&quot;. One way to think about people who are attracted purely to wealth and status is that under these same conditions they don't feel estranged. They've either eradicated this feeling in themselves long ago, or never felt it in the first place.&lt;/p&gt;
&lt;p&gt;Can you build a successful organization that keeps the unprincipled out? No. As the company grows more successful, so does the allure. The organization starts getting constantly bombarded by world class actors who specialize in slipping past the founders's defenses. And since at higher rungs much of the job is recruiting, the new hire becomes a Trojan horse. As soon as they're in, they open the door to dozens of cronies who diffuse into the company. It's like putting a drop of ink in a glass of water-- there is no undo.&lt;/p&gt;
&lt;h4&gt;Exploit&lt;/h4&gt;
&lt;p&gt;How would you advance through the hierarchy if advancement were your only principle? You'd find vulnerabilities in the system and attack them, just like a black hat hacker would. Ideally the attack vectors would be inherent to a growing company— something that can't be patched. One such vulnerability is attracting opportunists. You could try to patch it, but ultimately it's inseparable from success. What are the others?&lt;/p&gt;
&lt;p&gt;Here is one of my favorite quotes by Jeff Bezos because of how it inadvertently captures an inherent vulnerability of growing companies:&lt;/p&gt;
&lt;blockquote readability=&quot;9&quot;&gt;
&lt;p&gt;When somebody congratulates Amazon on a good quarter, I say thank you. But what I'm thinking to myself is— those quarterly results were actually pretty much fully baked about 3 years ago. Today I'm working on a quarter that is going to happen in 2020. Not next quarter. Next quarter for all practical purposes is done already and it has probably been done for a couple of years.&quot;&lt;/p&gt;
&lt;p&gt;— Jeff Bezos, 2017&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The key to corporate opportunism is all there, in this quote. When a normal person reads it, he thinks &quot;wow! Amazon is really thinking long term!&quot; which is perhaps how Jeff intended it. But when an opportunist reads it, he thinks &quot;wow! I can do anything I want for three years and it won't show up in the metrics!&quot;&lt;/p&gt;
&lt;p&gt;Company metrics have momentum and lag. Nearly all political behavior exploits these two properties. A metric in motion tends to remain in motion. Changing that requires good decisions, a lot of luck, and application of enormous force. And observing a metric is like observing light from a distant star— you're observing the work done in the past. So opportunists don't worry about any of that. The winning strategy is to ignore company metrics completely and move between projects every eighteen months so that nobody notices.&lt;/p&gt;
&lt;p&gt;Wouldn't people notice anyway? Rank and file employees will, but not the management. In a fast growing company things change very quickly. There is a hurricane of activity. New projects and teams are constantly spun up, products launched, reorgs, valuations, office moves, new hires, funding rounds, customers lost and gained, offsites, PR victories and scandals— nobody can keep track of all of this. You can't remember what things looked like two weeks ago, let alone last quarter. Two years ago? Forget it! So long as you looked good at the time, nobody will remember what you did in your last role. And even if they do, people tend to attribute everything to the present. If you screwed up a project, switched roles, and it's only now apparent that the project is in trouble, the blame will naturally fall on its &lt;em&gt;current&lt;/em&gt; leader, not on you.&lt;/p&gt;
&lt;p&gt;So your job isn't to make good decisions to improve company metrics. It's to look good. That means you must understand basic tenets of human nature and learn to manipulate them.&lt;/p&gt;
&lt;h4&gt;Rituals&lt;/h4&gt;
&lt;p&gt;First, the fact that metrics have momentum means the company is always in one of two modes. When the metrics are up and to the right, the company is in peace mode. When they start to stall, the company is in &lt;a href=&quot;https://a16z.com/2011/04/14/peacetime-ceowartime-ceo-2/&quot;&gt;war mode&lt;/a&gt;. A rapidly growing company is by definition in peace mode, and you must act the appropriate part. When the money is flowing, everything is expanding and everyone is happy, nobody wants to hear doomsayers, even if the prophecies will eventually come true. It doesn't matter if the company &quot;doesn't have a culture of blame&quot;— bad news &lt;em&gt;always&lt;/em&gt; implies there is someone to blame. So in the upper echelons the flow of negative information is controlled &lt;em&gt;extremely&lt;/em&gt; carefully.&lt;/p&gt;
&lt;p&gt;Of course you can't seem like you never deliver bad news either. It's a matter of packaging. Bad news is &lt;em&gt;never&lt;/em&gt; individualized. If you ever carelessly imply that some team may be doing something poorly, you will make yourself a target for every opportunist in the company. Instead, bad news is always delivered in general terms and always as a matter of slight adjustments to a continuous variable, never as a binary switch.&lt;/p&gt;
&lt;p&gt;For example, &quot;the codebase is such a mess this team can't ship anything until we spend three months refactoring&quot; is &lt;em&gt;really&lt;/em&gt; bad delivery. An opportunist would say &quot;we need to work toward paying off the technical debt&quot;. See? Codebase quality is just another analog knob to tweak. No big deal— it's something we should be doing in the future. And it's the collective &quot;we&quot;. Nobody in particular is experiencing this problem.&lt;/p&gt;
&lt;p&gt;Second, you must understand that KPIs, OKRs, meetings, and company values are just performative rituals. Don't naively assume they contain actionable information. Look carefully— no successful opportunist takes them at face value. If you do take these rituals at face value, you will interfere with other people's reputation, career plans, and flow of money. That's unwise, because the powers that be will start getting negative feedback about you from multiple seemingly unrelated sources. That's not conducive to a successful career. It also explains why following traditional career advice rarely gets you promoted beyond middle management. Most good work doesn't look good. Sometimes it interferes with other people and tanks your career. But mostly it doesn't look bad either. It just doesn't look like much of anything.&lt;/p&gt;
&lt;p&gt;Third, while you shouldn't take performative rituals at face value, you must still perform them— enthusiastically and with gusto. In countries like Japan, Russia, and parts of Eastern Europe, to successfully work with someone you must drink with them. Drinking is a trust building ritual and a mechanism to signal that you are part of the in-group. No drinking, no promotion. In corporate America the lion's share of this signaling is done through proselytizing management technologies. Going to meetings, talking about KPIs, OKRs, collaboration, Agile— all are shibboleth to signal you're part of the in-group, in the same way drinking is an in-group signal in other parts of the world. No shibboleth, no promotion.&lt;/p&gt;
&lt;h4&gt;Covert&lt;/h4&gt;
&lt;p&gt;So far we've talked about how you should act, but what should you actually do? Since the overt objectives are merely performative, you need to determine your actual objectives. Fortunately they're the same in every growing company, so you don't need to do any detective work to discover what they are. Your primary objective is simple— headcount growth (&quot;do a lot with a little&quot; is another shibboleth, don't take it literally). Figure out the baseline headcount growth rate for the company, and grow your team at least as much. Any less, and you'll be left in the dust. More is better— superstars always grow their headcount considerably faster than baseline.&lt;/p&gt;
&lt;p&gt;Don't worry about what all these people will work on. The devil will conveniently find work for idle hands. Expanding companies never have a shortage of business opportunities, projects, and tasks. The work will invent itself. Your job isn't the work— it's to grow headcount and make it appear well-managed. That latter part is nearly entirely performative. Look at other teams that are considered well-managed and emulate the trappings. Usually that means lots of meetings, cross-functional collaboration, document writing, one on ones, performance reviews, and agile. You will need to ship things, but not that much. By the time any of this gets objectively evaluated, you'll be happily working in a different role, and someone else will deal with the objective metrics.&lt;/p&gt;
&lt;p&gt;While nearly all your objectives are performative (feigning excitement, generating meetings and documents) or covert (headcount growth), there is one objective you must take at face value. You cannot allow acute failures in your area of responsibility. Low product quality is fine because you can always use the analog knob trick for that. &quot;Latency spikes are an important issue, we need to budget engineering time to lower spike incidence.&quot; Then have a team work on latency for two quarters. But if you get a couple of major security breaches, you're done. This is why there are fewer opportunists in sensitive areas like security and infrastructure.&lt;/p&gt;
&lt;p&gt;Before I puzzled all this out, I spent years directly asking folks for their reasoning. &quot;Why did you decide to double the team, don't you see it will only make us slower? Why schedule all these meetings, don't you see they have negative utility? And why simultaneously talk about needing fewer meetings?&quot; Every time I asked, the questions were met with bewilderment. &quot;Of course we need to schedule meetings. And of course we need fewer of them. What's unclear about that?&quot;&lt;/p&gt;
&lt;p&gt;At first I thought the bewilderment was feigned. But over time, as I asked more and more people and always got the same answer, I decided it isn't feigned at all. Corporate apparatchiks are completely genuine when they want to reduce meeting load as they schedule more meetings. It's easy to hold contradictory beliefs as long as your paycheck depends on them, so most people learn to compartmentalize. Feigning sincerity in a convincing way is extremely difficult. So if you take any of this career advice, it's best to learn to candidly believe it.&lt;/p&gt;
&lt;h4&gt;TL;DR:&lt;/h4&gt;
&lt;p&gt;In summary, an opportunist's career advice is: ignore OKRs, switch projects well before the consequences of your decisions can be measured, act happy and easy-going, package bad news as appeals for slow systemic adjustments, don't make anyone look bad, perform rituals with enthusiasm, grow headcount faster than baseline, let work invent itself, follow management fashions, avoid acute failures, believe this sincerely.&lt;/p&gt;
</description>
<pubDate>Mon, 28 Sep 2020 16:56:08 +0000</pubDate>
<dc:creator>thatonewhere</dc:creator>
<og:type>article</og:type>
<og:title>How to get promoted</og:title>
<og:description>Almost everyone who does great work toils in relative obscurity. Performance reviews are social fiction. How do people really advance through the corporate hierarchy?</og:description>
<og:image>https://cdn.substack.com/image/fetch/w_256,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F817793f6-4298-4eba-8e3d-806bcc7653d2_355x355.png</og:image>
<dc:format>text/html</dc:format>
<dc:identifier>https://defmacro.substack.com/p/how-to-get-promoted</dc:identifier>
</item>
<item>
<title>CRDTs are the future</title>
<link>https://josephg.com/blog/crdts-are-the-future/</link>
<guid isPermaLink="true" >https://josephg.com/blog/crdts-are-the-future/</guid>
<description>&lt;p&gt;I saw &lt;a href=&quot;https://www.youtube.com/watch?v=x7drE24geUw&quot;&gt;Martin Kleppmann’s talk&lt;/a&gt; a few weeks ago about his approach to realtime editing with &lt;a href=&quot;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&quot;&gt;CRDTs&lt;/a&gt;, and I felt a deep sense of despair. Maybe all the work I’ve been doing for the past decade won’t be part of the future after all, because Martin’s work will supersede it. Its really good.&lt;/p&gt;&lt;p&gt;Lets back up a little.&lt;/p&gt;
&lt;p&gt;Around 2010 I worked on Google Wave. Wave was an attempt to make collaboratively editable spaces to replace email, google docs, web forums, instant messaging and a hundred other small single purpose applications. Wave had a property I love in my tools that I haven’t seen articulated anywhere: It was a general purpose medium (like paper). Unlike a lot of other tools, it doesn’t force you into its own workflow. You could use it to do anything from plan holidays, make a wiki, play D&amp;amp;D with your friends, schedule a meeting, etc.&lt;/p&gt;
&lt;p&gt;Internally, Wave’s collaborative editing was built on top of Operational Transform (OT). OT has been around for awhile - the algorithm we used was based on the original &lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;ved=2ahUKEwi3mr6CivnrAhXEfd4KHcAyBe4QFjAAegQIBBAB&amp;amp;url=http%3A%2F%2Flively-kernel.org%2Frepository%2Fwebwerkstatt%2Fprojects%2FCollaboration%2Fpaper%2FJupiter.pdf&amp;amp;usg=AOvVaw0HmIhcn7_VKk2h1bEeAOJS&quot;&gt;Jupiter paper&lt;/a&gt; from 1995. It works by storing a chronological list for each document of every change. “Type an &lt;em&gt;H&lt;/em&gt; at position 0”. “Type a &lt;em&gt;i&lt;/em&gt; at position 1”. Etc. Most of the time, users are editing the latest version of the document and the operation log is just a list of all the changes. But if users are collaboratively editing, we get concurrent edits. When this happens, the first edit to arrive at the server gets recorded as usual. If the second edit is out of date, we use the log of operations as a reference to figure out what the user really intended. (Usually this just means updating character positions). Then we pretend as if thats what the user meant all along and append the new (edited) operation. Its like realtime git-rebase.&lt;/p&gt;
&lt;p&gt;Once Wave died, I reimplemented the OT model in &lt;a href=&quot;https://github.com/josephg/sharejs&quot;&gt;ShareJS&lt;/a&gt;. This was back when node was new and weird. I think I had ShareJS working before npm launched. It only took about 1000 lines of code to get a simple collaborative editor working, and when I first demoed it I collaboratively edited a document in a browser and from a native application.&lt;/p&gt;
&lt;p&gt;At its heart, OT is a &lt;a href=&quot;https://github.com/share/sharedb/blob/c711cfcb777213d193b1f4a101125e8f6e8e6864/lib/submit-request.js#L194-L212&quot;&gt;glorified for() loop&lt;/a&gt; with &lt;a href=&quot;https://github.com/ottypes/text-unicode/blob/bdcfc545c1a2eda48fe5968ae2ce80cf743b9c08/lib/type.ts#L304-L380&quot;&gt;some helper functions&lt;/a&gt; to update character offsets. In practice, this works great. OT is simple and understandable. Implementations are fast. (10k-100k operations per second in unoptimized javascript. 1-20M ops/sec in &lt;a href=&quot;https://github.com/ottypes/libot&quot;&gt;optimized C&lt;/a&gt;.). The only storage overhead is the operation log, and you can trim that down if you want to. (Though you can’t merge super old edits if you do). You need a centralized server to globally order operations, but most systems have a centralized server / database anyway, right?&lt;/p&gt;
&lt;h2 id=&quot;centralizedservers&quot;&gt;Centralized servers&lt;/h2&gt;
&lt;p&gt;The big problem with OT is that dependancy on a centralized server. Have you ever wondered why google docs shows you that weird “This document is overloaded so editing is disabled” thing when a document is shared to social media? The reason (I think) is that when you open a google doc, one server is picked as the computer all the edits run through. When the mob descends, google needs to pull out a bunch of tricks so that computer doesn’t becomes overwhelmed.&lt;/p&gt;
&lt;p&gt;There’s some workarounds they could use to fix this. Aside from sharding by document (like google docs), you could edit via a retry loop around a database transaction. This pushes the serialization problem to your database. (&lt;a href=&quot;https://firepad.io/&quot;&gt;Firepad&lt;/a&gt; and &lt;a href=&quot;https://github.com/share/sharedb/&quot;&gt;ShareDB&lt;/a&gt; work this way).&lt;/p&gt;
&lt;p&gt;Its not perfect though. We wanted Wave to replace email. Email is federated. An email thread can span multiple companies and it all just works. And unlike facebook messenger, emails are only be sent to the companies that are CC’ed. If I email my coworker, my email doesn’t leave the building. For Wave to replace email, we needed the same functionality. But how can that work on top of OT? We got it working, kinda, but it was complex and buggy. We ended up with &lt;a href=&quot;https://web.archive.org/web/20180112171345/http://www.waveprotocol.org/protocol/draft-protocol-specs/draft-protocol-spec&quot;&gt;a scheme&lt;/a&gt; where every wave would arrange a tree of wave servers and operations were passed up and down the tree. But it never really worked. &lt;a href=&quot;https://www.youtube.com/watch?v=AyvQYCv6j34&quot;&gt;I gave a talk&lt;/a&gt; at the Wave Protocol Summit just shy of 10 years ago explaining how to get on the network. I practiced that talk, and did a full runthrough. I followed literally step by step on the day and the version I made live didn’t work. I still have no idea why. Whatever the bugs are, I don’t think they were ever fixed in the opensource version. Its all just too complicated.&lt;/p&gt;
&lt;h2 id=&quot;theriseofcrdts&quot;&gt;The rise of CRDTs&lt;/h2&gt;
&lt;p&gt;Remember, the algorithm Wave used was invented in 1995. Thats a pretty long time ago. I don’t think I even had the internet at home back in 1995. Since then, researchers have been busy trying to make OT work better. The most promising work uses CRDTs (Conflict-Free Replicated data types). CRDTs approach the problem slightly differently to allow realtime editing without needing a central source of truth. Martin lays out how they work in his talk better than I can, so I’ll skip the details.&lt;/p&gt;
&lt;p&gt;People have been asking me what I think of them for many years, and my answer was always something like this:&lt;/p&gt;
&lt;blockquote readability=&quot;5&quot;&gt;
&lt;p&gt;They’re neat and I’m glad people are working on them &lt;em&gt;but&lt;/em&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;They’re slow. Like, really slow. Eg Delta-CRDTs takes nearly 6 hours to process a real world editing session with a single user typing a 100KB academic paper. (&lt;a href=&quot;https://github.com/dmonad/crdt-benchmarks/tree/d7f4d774a302f13f26cded6e614d44e0b5e496c9&quot;&gt;Benchmarks - look for B4&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Because of how CRDTs work, documents grow without bound. The current automerge master takes 83MB to represent that 100KB document on disk. Can you ever delete that data? Probably not. And that data can’t just sit on disk. It needs to be loaded into memory to handle edits. (Automerge currently grows to 1.1GB in memory for that.)&lt;/li&gt;
&lt;li&gt;CRDTs are missing features that OT has had for years. For example, nobody has yet made a CRDT that supports /object move/ (move something from one part of a JSON tree to another). You need this for applications like Workflowy. OT &lt;a href=&quot;https://github.com/ottypes/json1/&quot;&gt;handles this fine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;CRDTs are complicated and hard to reason about.&lt;/li&gt;
&lt;li&gt;You probably have a centralized server / database anyway.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I made all those criticisms and dismissed CRDTs. But in doing so I stopped keeping track of the literature. And - surprise! CRDTs went and quietly got better. &lt;a href=&quot;https://www.youtube.com/watch?v=x7drE24geUw&quot;&gt;Martin’s talk&lt;/a&gt; (which is well worth a watch) addressed the main points:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Speed:&lt;/strong&gt; Using modern CRDTs (Automerge / RGA or y.js / YATA), applying operations should be possible with just an log(n) lookup. (More on this below).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Size:&lt;/strong&gt; Martin’s columnar encoding can store a text document with only about a 1.5x-2x size overhead compared to the contents themselves. Martin talks about this &lt;a href=&quot;https://youtu.be/x7drE24geUw?t=3273&quot;&gt;54 minutes into his talk&lt;/a&gt;. The code to make this work in automerge hasn’t merged yet, but Yjs implemented Martin’s ideas. And in doing so, Yjs can store that same 100KB document in 160KB on disk, or 3MB in memory. Much better.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Features:&lt;/strong&gt; There’s at least a theoretical way to add all the features using rewinding and replaying, though nobody’s implemented this stuff yet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complexity:&lt;/strong&gt; I think a decent CRDT will be bigger than the equivalent OT implementation, but not by much. Martin managed to make a tiny, slow &lt;a href=&quot;https://github.com/automerge/automerge/blob/a8d8b602ec273aaa48679e251de8829f3ce5ad41/test/fuzz_test.js&quot;&gt;implementation of automerge in only about 100 lines of code&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I still wasn’t completely convinced by the speed argument, so I made a &lt;a href=&quot;https://github.com/josephg/text-crdt-rust&quot;&gt;simple proof of concept CRDT implementation in Rust&lt;/a&gt; using a B-tree using ideas from automerge and benchmarked it. Its missing features (deleting characters, conflicts). But it can handle &lt;a href=&quot;https://home.seph.codes/public/crdt1/user%20pair%20append%20end/report/index.html&quot;&gt;6 million edits per second&lt;/a&gt;. (Each &lt;a href=&quot;https://github.com/josephg/text-crdt-rust/blob/cc3325019887ad03e89f27e26b4295d1fb2048c9/benches/benchmark.rs#L29-L42&quot;&gt;iteration&lt;/a&gt; does 2000 edits to an empty document by an alternating pair of users, and that takes 330µs. So, 6.06 million inserts / second). So that means we’ve made CRDTs good enough that the difference in speed between CRDTs and OT is smaller than the speed difference between Rust and Javascript.&lt;/p&gt;
&lt;p&gt;All these improvements have been “coming soon” in automerge’s performance branch for a really long time now. But automerge isn’t the only decent CRDT out there. &lt;a href=&quot;https://github.com/yjs/yjs&quot;&gt;Y.js&lt;/a&gt; works well and kicks the pants off automerge’s current implementation &lt;a href=&quot;https://github.com/dmonad/crdt-benchmarks&quot;&gt;in the Y.js benchmarks&lt;/a&gt;. Its missing some features I want, but its generally easier to fix an implementation than invent a new algorithm.&lt;/p&gt;
&lt;h2 id=&quot;inventingthefuture&quot;&gt;Inventing the future&lt;/h2&gt;
&lt;p&gt;I care a lot about inventing the future. What would it be ridiculous not to have in 100 years? Obviously we’ll have realtime editing. But I’m no longer convinced OT - and all the work I’ve done on it - will still be around. I feel really sad about that.&lt;/p&gt;
&lt;p&gt;JSON and REST are used everywhere these days. Lets say in 15 years realtime collaborative editing is everywhere. Whats the JSON equivalent for realtime editing that anyone can just drop in to their project? In the glorious future we’ll need high quality CRDT implementations, because OT just won’t work for some applications. You couldn’t make a realtime version of Git, or a simple remake of Google Wave with OT. But if we have good CRDTs, do we need good OT implementations too? I’m not convinced we do. Every feature OT has can be put in to a CRDT. (Including trimming operations, by the way). But the reverse is not true. Smart people disagree with me, but if we had a good, fast CRDT available from every language, with integration on the web, I don’t think we need OT at all.&lt;/p&gt;
&lt;p&gt;OT’s one advantage is that it fits well in centralized software - which is most software today. But distributed algorithms work great in centralized software too. (Eg look at Github). And I think a really high quality CRDT running in wasm would be faster than an OT implementation in JS. And even if you only care about centralized systems, remember - Google runs into scaling problems with Google Docs because of OT’s limitations.&lt;/p&gt;
&lt;p&gt;So I think its about time we made a lean and fast CRDT. The academic work has been mostly done. We need more kick-ass implementations.&lt;/p&gt;
&lt;h2 id=&quot;whatsnext&quot;&gt;Whats next&lt;/h2&gt;
&lt;p&gt;I increasingly don’t care for the world of centralized software.&lt;br/&gt;Software interacts with my data, on my computers. Its about time my software reflected that relationship. I want my laptop and my phone to share my files over my wifi. Not by uploading all my data to servers in another country. Especially if those servers are &lt;a href=&quot;https://www.thesocialdilemma.com/&quot;&gt;financed by advertisers bidding for my eyeballs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Philosophically, if I modify a google doc my computer is asking Google for &lt;em&gt;permission&lt;/em&gt; to edit the file. (You can tell because if google’s servers say no, I lose my changes.) In comparison, if I &lt;code&gt;git push&lt;/code&gt; to github, I’m only &lt;em&gt;notifying&lt;/em&gt; github about the change to my code. My repository is mine. I own all the bits, and all the hardware that houses them. This is how I want all my software to work. Thanks to people like Martin, we now know &lt;em&gt;how&lt;/em&gt; to make good CRDTs. But there’s still a lot of code to write before &lt;a href=&quot;https://www.inkandswitch.com/local-first.html&quot;&gt;local first software&lt;/a&gt; can become the default.&lt;/p&gt;
&lt;p&gt;So Operational Transform, I think this is goodbye from me. We had some great times. Some of the most challenging, fun code I’ve ever written was &lt;a href=&quot;https://github.com/josephg/sharejs&quot;&gt;operational&lt;/a&gt; &lt;a href=&quot;https://github.com/share/sharedb/&quot;&gt;transform&lt;/a&gt; &lt;a href=&quot;https://github.com/ottypes/json1/&quot;&gt;code&lt;/a&gt;. OT - you’re clever and fascinating, but CRDTs can do things you were never capable of. And CRDTs need me. With some good implementations, I think we can make something really special.&lt;/p&gt;
&lt;p&gt;I mourn all the work I’ve done on OT over the years. But OT is no longer fits into the vision I have for the future. CRDTs would let us remake Wave, but simpler and better. And they would let us write software that treats users as digital citizens, not a digital serfs. &lt;a href=&quot;https://josephg.com/blog/home-is-where-the-bits-flow/&quot;&gt;And that matters.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The time to build is now.&lt;/p&gt;
&lt;hr/&gt;&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=24617542#24621238&quot;&gt;Discussion on HN&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 28 Sep 2020 15:18:06 +0000</pubDate>
<dc:creator>lewisjoe</dc:creator>
<og:type>article</og:type>
<og:title>I was wrong. CRDTs are the future</og:title>
<og:description>I saw Martin Kleppmann’s talk a few weeks ago about his approach to realtime editing with CRDTs, and I felt a deep sense of despair. Maybe all the work I’ve been doing for the past decade won’t be part of the future after all, because Martin’s</og:description>
<og:url>http://josephg.com/blog/crdts-are-the-future/</og:url>
<dc:format>text/html</dc:format>
<dc:identifier>https://josephg.com/blog/crdts-are-the-future/</dc:identifier>
</item>
<item>
<title>Netflix CEO explains why he pays technologists huge salaries</title>
<link>https://insights.dice.com/2020/09/28/netflix-ceo-explains-why-he-pays-technologists-huge-salaries/</link>
<guid isPermaLink="true" >https://insights.dice.com/2020/09/28/netflix-ceo-explains-why-he-pays-technologists-huge-salaries/</guid>
<description>&lt;p&gt;For years, Netflix has maintained a reputation as a company that pays its technologists huge salaries. Data has backed up that assertion; for example, crowdsourced compensation numbers from &lt;a href=&quot;https://www.levels.fyi/&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;levels.fyi&lt;/a&gt; suggest that Netflix’s software engineers &lt;a href=&quot;https://insights.dice.com/2020/03/31/disney-netflix-apple-engineer-salaries-high-covid-19-boosts-streaming/?ads_kw=netflix&quot;&gt;can make nearly half a million dollars per year&lt;/a&gt;, well ahead of what they might earn at rivals such as Disney and Amazon. Why does the company pay so much?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnbc.com/2020/09/08/netflix-ceo-reed-hastings-on-high-salaries-the-best-are-easily-10x-better-than-average.html&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;In a posting on CNBC&lt;/a&gt;, Netflix CEO Reed Hastings walked through his reasoning, which is pretty straightforward: During Netflix’s relatively early days, he came to believe that “the best programmer doesn’t add 10 times the value” but “more like a 100 times.”&lt;/p&gt;
&lt;p&gt;Moreover, Hastings thinks that an exceptional technologist’s abilities extend beyond coding or debugging faster than an “average” colleague: It’s also about the ability to tackle more abstract problems. “The reason the rock-star engineer is so much more valuable than his counterparts isn’t unique to programming,” he wrote. “The great &lt;a title=&quot;&quot; class=&quot;aalmanual&quot; target=&quot;_self&quot; href=&quot;https://www.dice.com/jobs/q-Software+engineering-jobs&quot;&gt;software engineer&lt;/a&gt; is incredibly creative and can see conceptual patterns that others can’t.”&lt;/p&gt;
&lt;p&gt;The focus on exceptional performers (and the budget they consume) also forces Netflix to embrace a “lean” workforce: “Managing people well is hard and takes a lot of effort,” he added. “Managing mediocre-performing employees is harder and more time consuming. By keeping our organization small and our teams lean, each manager has fewer people to manage and can therefore do a better job at it.”&lt;/p&gt;
&lt;p&gt;Netflix has enjoyed a stratospheric rise over the past several years, coupled with burgeoning revenue. Hastings feels that those bottom-line results prove his theory correct. However, there’s a lot of debate in the tech industry about whether exceptional developers and engineers are actually multiple times more effective than other colleagues. &lt;/p&gt;
&lt;p&gt;Back in 2017, a developer named Jonathan Solorzano-Hamilton &lt;a href=&quot;https://medium.com/free-code-camp/we-fired-our-top-talent-best-decision-we-ever-made-4c0a99728fde&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;wrote a Medium posting that went super-viral&lt;/a&gt; within the tech industry. In that posting, he described working with an enormously talented developer (dubbed “Rick”) who did everything from architecting software products to solving troublesome bugs. There was just one little problem: Despite working around the clock, Rick became the organization’s bottleneck, refusing to accept help from a team who couldn’t possibly understand his “genius” work.&lt;/p&gt;
&lt;p&gt;As Solorzano-Hamilton wrote: “I dove into the source code. Rick was right: no-one could possibly understand what Rick had created. Except for Rick. It was a reflection of the workings of his own mind. Some of it was very clever, a lot of it was &lt;a href=&quot;https://en.wiktionary.org/wiki/copypasta&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;copy-pasta&lt;/a&gt;, it was all very idiosyncratic, and it was not at all &lt;a href=&quot;https://medium.freecodecamp.org/our-team-broke-up-with-instant-legacy-releases-and-you-can-too-d129d7ae96bb&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;documented&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;Eventually, Rick snapped. Once he departed the company, the team of supposedly “mediocre” engineers redid his work to make it more elegant and efficient: “We didn’t have any mad geniuses building everything from scratch. But our productivity was never higher.”&lt;/p&gt;
&lt;p&gt;Sure, Solorzano-Hamilton is just telling his personal story—&lt;a href=&quot;https://www.fastcompany.com/90320578/10x-rock-stars-and-the-myth-of-meritocracy&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;but as one &lt;em&gt;Fast Company&lt;/em&gt; article breaks down&lt;/a&gt;, the tech industry is filled with geniuses who thought they were infinitely better than the technologists around them… only for reality to come crashing in, either via blown deadlines or a broken software product. An exceptional developer is great, in other words, but their presence alone won’t magically solve issues or complete projects.&lt;/p&gt;
&lt;p&gt;If you have the time, &lt;a href=&quot;https://news.ycombinator.com/item?id=22349531&quot; class=&quot;external&quot; rel=&quot;nofollow&quot;&gt;this Hacker News thread is also worth reading&lt;/a&gt;, because it neatly reveals the arguments for and against the “myth of the 10x developer.” Supporters of the theory like to point out (as Hastings does, in his CNBC article) research studies from the 1960s that show how skilled programmers are supposedly orders-of-magnitude more effective than their “average” colleagues. Meanwhile, many of the detractors don’t disagree that ultra-skilled developers and engineers exist—but their productivity hinges on a variety of other factors, including the skill of their team and the functionality of the overall company.&lt;/p&gt;
&lt;p&gt;In any case, Hastings has leaned hard into this theory to justify paying his technologists huge sums of money. And so far, Netflix’s results seem to support his ideas. But with a variety of rivals entering the streaming space, including Disney and Apple, he’s also facing a new era of competition that will test his model.&lt;/p&gt;
&lt;aside class=&quot;dhi-callout f1&quot;&gt;&lt;div&gt;
&lt;header&gt;Sign Up Today&lt;/header&gt;&lt;p&gt;Membership has its benefits. Sign up for a free Dice profile, add your resume, discover great career insights and set your tech career in motion. &lt;a href=&quot;https://www.dice.com/register&quot;&gt;Register now&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/aside&gt;
</description>
<pubDate>Mon, 28 Sep 2020 14:58:15 +0000</pubDate>
<dc:creator>pmodek</dc:creator>
<og:type>article</og:type>
<og:title>Netflix CEO Explains Why He Pays Technologists Huge Salaries</og:title>
<og:description>For years, Netflix has maintained a reputation as a company that pays its technologists huge salaries. Data has backed up that assertion; for example,</og:description>
<og:url>https://insights.dice.com/2020/09/28/netflix-ceo-explains-why-he-pays-technologists-huge-salaries/</og:url>
<og:image>https://insights.dice.com/wp-content/uploads/2019/03/shutterstock_1286354773.jpg</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://insights.dice.com/2020/09/28/netflix-ceo-explains-why-he-pays-technologists-huge-salaries/</dc:identifier>
</item>
<item>
<title>Zig&amp;#039;s New Relationship with LLVM</title>
<link>https://kristoff.it/blog/zig-new-relationship-llvm/</link>
<guid isPermaLink="true" >https://kristoff.it/blog/zig-new-relationship-llvm/</guid>
<description>&lt;p&gt;While not yet at version 1.0, Zig is about to reach a new level of maturity and stability.&lt;/p&gt;&lt;div readability=&quot;187.60288353863&quot;&gt;
&lt;p&gt;In the early days, Zig was but a thin frontend in front of LLVM. This was instrumental for getting started quickly and filling in gaps of Andrew’s knowledge as a compiler developer. Now, the training wheels of the bicycle are coming off, and LLVM is transitioning into an optional component.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://kristoff.it/static/2cc08c37498f0cec888734c477d5f358/98017/protty1.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img class=&quot;gatsby-resp-image-image&quot; src=&quot;https://kristoff.it/static/2cc08c37498f0cec888734c477d5f358/c7805/protty1.png&quot; alt=&quot;protty1&quot; title=&quot;protty1&quot;/&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The work to replace the current C++ compiler implementation with a new pure Zig version has begun. Moving to a self-hosted implementation is usually considered a step towards maturity, with most benefits being felt by developers of the language itself. As an example, &lt;a href=&quot;https://www.youtube.com/watch?v=cF1zJYkBW4A&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Go lost&lt;/a&gt; some speed of compilation by switching to the self-hosted compiler but, in exchange, it streamlined the toolchain, removed dependencies, and improved the whole development experience.&lt;/p&gt;
&lt;p&gt;The move to a self-hosted compiler for Zig has similar advantages for the core contributors, but it also &lt;strong&gt;makes LLVM an optional dependency&lt;/strong&gt;, &lt;strong&gt;increases compilation speed&lt;/strong&gt; (instead of losing it), and adds an amazing feature for debug builds of your code: &lt;strong&gt;incremental compilation with in-place binary patching&lt;/strong&gt;, &lt;a href=&quot;https://kristoff.it/blog/what-is-zig-comptime/&quot;&gt;another&lt;/a&gt; &lt;a href=&quot;https://kristoff.it/blog/zig-colorblind-async-await/&quot;&gt;unique&lt;/a&gt; Zig feature.&lt;/p&gt;
&lt;h2 id=&quot;speeding-up-compilation&quot;&gt;Speeding up compilation&lt;/h2&gt;
&lt;p&gt;Most languages offer some form of caching to speed up compilation, starting from C’s compilation units, up to modules, packages, and other comparable boundaries in more modern languages.&lt;/p&gt;
&lt;p&gt;Zig also implements a caching system that comes particularly handy when building a project that mixes C and Zig source code, or when using Zig as a C compiler with the &lt;code&gt;zig cc&lt;/code&gt; command. Zig keeps track of all the files involved in the compilation, so it can very easily know when an object file can be reused, and this is &lt;a href=&quot;https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;only one of the advantages&lt;/a&gt; of using Zig to compile C code.&lt;/p&gt;
&lt;p&gt;Zig sources always get bundled into a single compilation unit, so the caching system in its current form doesn’t provide any speedup when editing and recompiling a pure Zig project. The upside is that, not only compiling Zig code is very fast, but also that incremental compilation will provide smart caching for Zig code, more than making up for what we can’t get from simple caching.&lt;/p&gt;
&lt;h2 id=&quot;incremental-compilation&quot;&gt;Incremental compilation&lt;/h2&gt;
&lt;p&gt;Incremental compilation is a form of caching that acts at a higher granularity level than normal “compilation unit”-level caching. The Rust blog has a &lt;a href=&quot;https://blog.rust-lang.org/2016/09/08/incremental.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;great post&lt;/a&gt; that explains how it works.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://kristoff.it/static/c8f09130b97cf9ec0fd60c85eb21418e/d4d70/rust.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img class=&quot;gatsby-resp-image-image&quot; src=&quot;https://kristoff.it/static/c8f09130b97cf9ec0fd60c85eb21418e/c7805/rust.png&quot; alt=&quot;rust&quot; title=&quot;Taken from the Rust blog post linked above.&quot;/&gt;&lt;/a&gt;&lt;/span&gt; Taken from the Rust blog post linked above.&lt;/p&gt;
&lt;p&gt;In the case of Rust, the compiler builds a dependency graph at the AST level and then saves it to disk alongside the cached intermediate results (object files). When a new compilation is requested, the compiler will be able to easily notice which parts of the AST have changed and thus invalidate all the intermediate results that depend on it.&lt;/p&gt;
&lt;p&gt;One important detail about this graph is the fact that the right-most box is always invalidated. In other words, the final executable is always re-linked from scratch starting from a mix of old and newly generated object files. It’s clear that this has to be the case, since the final executable depends on everything else and so any meaningful change to the code will invalidate it, but this is where the Zig self-hosted compiler brings a new ingenious idea to the table.&lt;/p&gt;
&lt;h2 id=&quot;in-place-binary-patching&quot;&gt;In-Place Binary Patching&lt;/h2&gt;
&lt;p&gt;As of Zig version 0.6.0, regardless of the type of release (debug, release-safe, release-fast), there is always a final step delegated to &lt;strong&gt;LLVM, which takes at least 70% of the total compilation time&lt;/strong&gt; including when compiling a debug build, where optimizations aren’t even enabled.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The self-hosted compiler will not depend on LLVM for debug builds&lt;/strong&gt; and will be able to cut compilation time considerably, &lt;strong&gt;basically reducing that 70% to almost zero&lt;/strong&gt;, just by virtue of being a simpler piece of software compared to LLVM.&lt;/p&gt;
&lt;p&gt;On top of that, since the compiler will have full control over the whole process, it will generate machine code using an ad-hoc strategy optimized for incremental compilation, allowing the compiler to patch the final executable in-place with the new changes.&lt;/p&gt;
&lt;p&gt;In-place binary patching is based on a granularity of top-level declarations. Each global variable and function can be independently patched because the final binary is structured as a sequence of loosely coupled blocks. Another important characteristic is that all this information is kept in memory, so the compiler will stay open between compilations.&lt;/p&gt;
&lt;p&gt;If you want to see the self-hosted compiler in action, here’s a 5 minute demo by Andrew:&lt;/p&gt;

&lt;h2 id=&quot;designing-machine-code-for-incremental-compilation&quot;&gt;Designing machine code for incremental compilation&lt;/h2&gt;
&lt;p&gt;Efficient in-place binary patching is something that can only be accomplished by tightly coupling the compiler frontend and backend. Part of the reason this feature is so rarely seen in the wild is that it goes against our better sense of abstraction and clean code organization. But we must never forget: abstraction is just a tool to reach a practical outcome, and not always the most appropriate one.&lt;/p&gt;
&lt;p&gt;In order to perform in-place binary patching, we need code to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Position-independent_code&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;position independent&lt;/a&gt;. This allows us to move it around in virtual memory when a function grows outside its allocated boundary. We also need to be able to reference virtual addresses indirectly, so that N callsites do not need to be updated when a function is moved to a new virtual address.&lt;/p&gt;
&lt;p&gt;To accomplish this Zig uses a Global Offset Table for all function calls.&lt;/p&gt;
&lt;p&gt;However, that only solves functions. There are more components to consider here, such as debug information. When we add new lines to a function, that modifies the debug information, which is used to print stack traces! Solving this involves creatively organizing an allocation scheme for debug line information, and figuring out how to do NOPs. Andrew’s journey here involved creating a &lt;a href=&quot;http://dwarfstd.org/ShowIssue.php?issue=200803.1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;proposal for a new DWARF line number opcode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This problem must be solved repeatedly for each kind of linking backend - ELF, DWARF, PE, PDB, MachO, and WebAssembly. Special thanks for the contributors who have stepped up and taken on the added challenge of supporting in-place binary patching: &lt;a href=&quot;https://github.com/alexnask&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Alexandros Naskos&lt;/a&gt;, &lt;a href=&quot;http://www.jakubkonka.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Jakub Konka&lt;/a&gt;, and &lt;a href=&quot;https://ifreund.xyz/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Isaac Freund&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be on the lookout for a more technical post on &lt;a href=&quot;https://andrewkelley.me&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Andrew’s blog&lt;/a&gt;, where he’ll dive into some of these fascinating details — &lt;strong&gt;including how this design gets us 90% of the way to hot code swapping!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;when-is-it-going-to-be-ready&quot;&gt;When is it going to be ready?&lt;/h2&gt;
&lt;p&gt;The self-hosted backend is &lt;a href=&quot;https://github.com/ziglang/zig/projects/2&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;still a work in progress&lt;/a&gt;, but all the functionalities presented in this post have been designed and prototyped to the point where it’s just a matter of doing the methodical part of the work.&lt;/p&gt;
&lt;p&gt;The self-hosted backend will ship in Zig 0.7.0 behind a flag, supporting only a subset of the Zig language. In the meantime, the core development team and a few other contributors are sprinting forward with more language support and additional targets. The current aim is to fully replace the C++ implementation with the self-hosted backend for Zig 0.8.0, roughly 7 months from now.&lt;/p&gt;
&lt;p&gt;If you like where Zig is going, there’s no better time &lt;a href=&quot;https://github.com/ziglang/zig/wiki/Community&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;to join the Zig community&lt;/a&gt; than now, and if you want to help speed the development up, please &lt;a href=&quot;https://ziglang.org/zsf/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;consider donating to the Zig Software Foundation&lt;/a&gt; to allow core developers to spend more time working on Zig.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;gatsby-resp-image-wrapper&quot;&gt;&lt;a class=&quot;gatsby-resp-image-link&quot; href=&quot;https://kristoff.it/static/2ec6c0ef555e8f1383c4cb5d7b3edba2/8eeed/protty2.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; &lt;img class=&quot;gatsby-resp-image-image&quot; src=&quot;https://kristoff.it/static/2ec6c0ef555e8f1383c4cb5d7b3edba2/c7805/protty2.png&quot; alt=&quot;protty2&quot; title=&quot;Thanks to kprotty for the cute doodles!&quot;/&gt;&lt;/a&gt;&lt;/span&gt; Thanks to kprotty for the cute doodles!&lt;/p&gt;
&lt;/div&gt;</description>
<pubDate>Mon, 28 Sep 2020 12:32:24 +0000</pubDate>
<dc:creator>todsacerdoti</dc:creator>
<og:title>Zig's New Relationship with LLVM</og:title>
<og:description>While not yet at version 1.0, Zig is about to reach a new level of maturity and stability.</og:description>
<og:type>website</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://kristoff.it/blog/zig-new-relationship-llvm/</dc:identifier>
</item>
<item>
<title>Show HN: A SQL database implemented purely in TypeScript type annotations</title>
<link>https://github.com/codemix/ts-sql</link>
<guid isPermaLink="true" >https://github.com/codemix/ts-sql</guid>
<description>&lt;pre&gt;
&lt;code&gt; ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄               ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄
▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌             ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌
 ▀▀▀▀█░█▀▀▀▀ ▐░█▀▀▀▀▀▀▀▀▀              ▐░█▀▀▀▀▀▀▀▀▀ ▐░█▀▀▀▀▀▀▀█░▌▐░▌
     ▐░▌     ▐░▌                       ▐░▌          ▐░▌       ▐░▌▐░▌
     ▐░▌     ▐░█▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄ ▐░▌       ▐░▌▐░▌
     ▐░▌     ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░▌
     ▐░▌      ▀▀▀▀▀▀▀▀▀█░▌ ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌
     ▐░▌               ▐░▌                       ▐░▌▐░░░░░░░░░░░▌▐░▌
     ▐░▌      ▄▄▄▄▄▄▄▄▄█░▌              ▄▄▄▄▄▄▄▄▄█░▌ ▀▀▀▀▀▀█░█▀▀ ▐░█▄▄▄▄▄▄▄▄▄
     ▐░▌     ▐░░░░░░░░░░░▌             ▐░░░░░░░░░░░▌        ▐░▌  ▐░░░░░░░░░░░▌
      ▀       ▀▀▀▀▀▀▀▀▀▀▀               ▀▀▀▀▀▀▀▀▀▀▀          ▀    ▀▀▀▀▀▀▀▀▀▀▀
&lt;/code&gt;
&lt;/pre&gt;&lt;p&gt;This is a SQL database implemented purely in TypeScript type annotations.&lt;br/&gt;This means that it operates solely on types - you define a &quot;database&quot; (just a type annotation) and then query it using some more type annotations.&lt;/p&gt;
&lt;p&gt;It supports a subset of SQL, including SELECT (with conditions and joins), INSERT, UPDATE and DELETE statements.&lt;/p&gt;

&lt;p&gt;You can install ts-sql in your own project with &lt;code&gt;npm install @codemix/ts-sql&lt;/code&gt; or &lt;code&gt;yarn install @codemix/ts-sql&lt;/code&gt; (TypeScript 4.1 is required).&lt;/p&gt;
&lt;p&gt;An example query looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ts&quot; readability=&quot;23&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;@codemix/ts-sql&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;pl-c1&quot;&gt;things&lt;/span&gt;: &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;ActiveThings&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;&amp;lt;&lt;/span&gt;
  &lt;span class=&quot;pl-s&quot;&gt;&quot;SELECT id, name AS nom FROM things WHERE active = true&quot;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;db&lt;/span&gt;
&lt;span class=&quot;pl-kos&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;// ActiveThings is now equal to the following type:&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;Expected&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;nom&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;nom&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#&quot; rel=&quot;nofollow&quot;&gt;See the full demo on the TypeScript playground!&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Mon, 28 Sep 2020 10:38:05 +0000</pubDate>
<dc:creator>phpnode</dc:creator>
<og:image>https://avatars0.githubusercontent.com/u/4009461?s=400&amp;v=4</og:image>
<og:type>object</og:type>
<og:title>codemix/ts-sql</og:title>
<og:url>https://github.com/codemix/ts-sql</og:url>
<og:description>A SQL database implemented purely in TypeScript type annotations. - codemix/ts-sql</og:description>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://github.com/codemix/ts-sql</dc:identifier>
</item>
<item>
<title>Assange Trial Day 18</title>
<link>https://www.craigmurray.org.uk/archives/2020/09/your-man-in-the-public-gallery-assange-hearing-day-18/</link>
<guid isPermaLink="true" >https://www.craigmurray.org.uk/archives/2020/09/your-man-in-the-public-gallery-assange-hearing-day-18/</guid>
<description>&lt;p&gt;It is hard to believe, but Judge Baraitser on Friday ruled that there will be no closing speeches in the Assange extradition hearing. She accepted the proposal initially put forward by counsel for the US government, that closing arguments should simply be submitted in writing and without an oral hearing. This was accepted by the defence, as they need time to address the new superseding indictment in the closing arguments, and Baraitser was not willing for oral argument to take place later than 8 October. By agreeing to written arguments only, the defence gained a further three weeks to put together the closing of their case.&lt;/p&gt;&lt;p&gt;But this entire hearing has been conducted in effective secrecy, a comprehensive secrecy that gives sharp insight into the politico-economic structures of current western society. Physical access to the courtroom has been extremely limited, with the public gallery cut to five people. Video link access has similarly been extremely limited, with 40 NGOs having their access cut by the judge from day 1 at the Old Bailey, including Amnesty International, PEN, Reporters without Borders and observers from the European Parliament, among many others. The state and corporate media have virtually blacked out this hearing, with a truly worrying unanimity, and despite the implications of the case for media freedom. Finally, the corporations that act as internet gatekeepers have heavily suppressed social media posts about Assange, and traffic to those few websites which are reporting.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1258.png&quot; alt=&quot;&quot; width=&quot;740&quot; height=&quot;288&quot; class=&quot;aligncenter size-full wp-image-60864&quot; srcset=&quot;https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1258.png 740w, https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1258-300x117.png 300w&quot; sizes=&quot;(max-width: 740px) 100vw, 740px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;I am reminded of the words of another friend of mine, Harold Pinter, in accepting the Nobel Prize for Literature. It seems perfectly to fit the trial of Julian Assange:&lt;/p&gt;
&lt;blockquote readability=&quot;14&quot;&gt;
&lt;p&gt;It never happened. Nothing ever happened. Even while it was happening it wasn’t happening. It didn’t matter. It was of no interest. The crimes of the United States have been systematic, constant, vicious, remorseless, but very few people have actually talked about them. You have to hand it to America. It has exercised a quite clinical manipulation of power worldwide while masquerading as a force for universal good. It’s a brilliant, even witty, highly successful act of hypnosis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Harold sent me a copy of that speech printed for the ceremony, with a kind dedication that I knew was by then painful for him to write as lines of ink shot uncontrollably across the page. After he died, I had it framed and it hangs on my study wall. That was a mistake. When I get back home to Edinburgh, I will break the frame and get the pamphlet out. It needs to be read, often.&lt;/p&gt;
&lt;p&gt;The closing arguments are the part of any trial which the media is most likely to report. They sum up all the evidence heard on both sides and what might be drawn from the evidence. To have these simply submitted on paper, without the drama of the courtroom, is to ensure that the hearing will continue to be a media non-event.&lt;/p&gt;
&lt;p&gt;The timetable which has been accepted is that the defence will lodge their closing arguments in writing on 30 October, the prosecution will reply on 13 November, with the defence able to make a further response by 20 November purely on any legal questions; Baraitser will then deliver her judgement in January. She made plain that she would not accept any further submissions based on developments in the interim, including the US Presidential election.&lt;/p&gt;
&lt;p&gt;Friday was yet another day when the process was as important to the result as the evidence heard, if not more so. The day had started with discussion over a defence attempt to submit two new statements from two new witnesses. Both were psychiatrists with expert knowledge of the US prison system. Previous witnesses, both psychiatrists and US attorneys, who had testified for the defence had been criticised by the prosecution as not having direct knowledge of the specific prison, &lt;a href=&quot;https://www.amnesty.org.uk/press-releases/usa-federal-supermax-prison-colorado-inhuman-and-breach-international-law?utm_source=google&amp;amp;utm_medium=grant&amp;amp;utm_campaign=BRD_AWA_GEN_dynamic-search-ads&amp;amp;utm_content=&quot;&gt;ADX Florence, Colorado&lt;/a&gt;, in which Julian would serve his sentence if convicted.&lt;/p&gt;
&lt;p&gt;The prosecution had provided two affidavits on conditions in the prison, one from US Assistant Attorney Gordon Kromberg dated 20 August 2020 and one from a prison psychiatrist named Lukfeld (as heard) dated 3 September 2020. Now it is a very strange feature indeed of these extradition hearings that the defence have no right to cross-examine witnesses who are US federal employees. Gordon Kromberg has submitted five separate affidavits, containing much which is disputed hotly as to fact, but he cannot be cross-examined. Nor may Lukfeld be cross-examined.&lt;/p&gt;
&lt;p&gt;Fitzgerald made the point that the defence had to respond to this prosecution evidence somehow, as it could not be cross-examined. He stated that as it had been submitted by the prosecution with the last four weeks, it had taken the defence a little time to find expert witnesses who were in a position to contradict, and then to take their evidence. The defence now had two excellent witnesses with personal knowledge of ADX Florence, and wished to enter their evidence. The defence accepted that because Baraitser had stated the trial will end next week, there would not be time to cross-examine these new witnesses. But then, the prosecution witnesses could not be cross-examined either. As Fitzgerald put it “the prosecution do not have a divine right to cross-examine our witnesses when we do not have any right to cross-examine their witnesses.”&lt;/p&gt;
&lt;p&gt;For the US government, James Lewis QC “strongly objected” to this new evidence being submitted. He said the defence had more than a year to prepare these statements and kept trying to prolong the hearing. He said that the defence witnesses did not have the authority of the US government witnesses, and they needed to be cross-examined because many of the defence “experts” were not really expert at all. If these witnesses were called, he would insist on the right to cross-examine and that would extend the hearing.&lt;/p&gt;
&lt;p&gt;Having heard the lawyers, Judge Baraitser yet again read out a ruling from her laptop which had been written before she heard either Lewis or Fitzgerald speak. Entirely predictably, she ruled that the defence statements were not admissible, as being too late. The defence “had had a fair opportunity to investigate”. Defence witnesses must be liable to cross-examination. These proceedings had lasted too long already and there must be an end to new evidence. “As a matter of fairness a line must be drawn”, she intoned. She seemed particularly pre-occupied with the notion of “fairness”, which apparently almost always entails ruling against the defence.&lt;/p&gt;
&lt;p&gt;For the first time in the course of these hearings, Baraitser did look up briefly from her pre-prepared judgement to insert a reference to something Fitzgerald had said in court, that one possible approach might be that the new defence evidence could simply be cited as though it were an academic article. But only to dismiss it.&lt;/p&gt;
&lt;p&gt;So, no closing speeches and two key witnesses not admitted.&lt;/p&gt;
&lt;p&gt;We then moved on to the next leg of this very peculiar procedure, in which “case management” always trumps justice, with another defence evidence statement of which an agreed “gist” is simply read into the record, with no cross-examination. Under this procedure, which Baraitser expressly initiated to save time, where the defence will agree, witness statements are whittled down simply to those facts which are uncontested, and a “gist” or edit of that edit is read out, with the whole redacted statement entered into the court record.&lt;/p&gt;
&lt;p&gt;The defence have allowed themselves to be too easily browbeaten into submission on all of this “time saving”, which is of course pursued by the judge and the US government in the interests of having as little embarrassing information aired in public as possible, and closing down the hearing quickly. One consequence of the rather hangdog defence approach to this is that, after the first very effective reading of key passages from el-Masri’s evidence, subsequent “gists” read into the record have been raced through, as though the defence realise this evidence has been reduced to a pointless formality, with no expression or weight in the reading and at a speed that far exceeds my ability to take an accurate note.&lt;/p&gt;
&lt;p&gt;Like Thursday’s evidence from John Young of Cryptome, the witness statement of Jakob Augstein was important evidence that went to the fact that it was not Assange or Wikileaks who first published the unredacted material, and Augstein added additional information that Assange had tried to prevent it. Before Der Freitag had published its article of 25 August 2011, which revealed that both the password key and the file were out there, Assange had telephoned Augstein, editor of Der Freitag:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1257.png&quot; alt=&quot;&quot; width=&quot;1168&quot; height=&quot;537&quot; class=&quot;aligncenter size-full wp-image-60860&quot; srcset=&quot;https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1257.png 1168w, https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1257-300x138.png 300w, https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1257-1024x471.png 1024w, https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1257-768x353.png 768w&quot; sizes=&quot;(max-width: 1168px) 100vw, 1168px&quot;/&gt;&lt;/p&gt;
&lt;p&gt;This evidence negates the main thrust of the prosecution case, so much so that I cannot understand why the defence have agreed to having it slipped into the record in a manner nobody notices.&lt;/p&gt;
&lt;p&gt;The other interesting point about &lt;a href=&quot;https://www.tareqhaddad.com/wp-content/uploads/2020/09/yyyy.mm_.dd-Assange-Court-Proceedings-Statement-of-Jakob-Augstein-written-12.02.20.pdf.pdf&quot;&gt;Augstein’s evidence&lt;/a&gt; is that it pointed squarely at the possibility that it has been Daniel Domscheit-Berg who, in defecting from Wikileaks, had been responsible for the emergence of the encrypted but unredacted cache on the net.&lt;/p&gt;
&lt;p&gt;We then came on to the only witness who was actually heard in person on Friday, Patrick Eller, by videolink from the States. He was to address the accusation that Assange conspired with Chelsea Manning to crack a hash key password and obtain the documents which Manning leaked, and/or to help Manning cover his tracks. Securing Eller was rather a coup for the defence as there could not be a better expert witness on this particular subject. Eller is CEO of Metadata Forensics and a Professor teaching forensic evidence at the US Army Law School. A 25 year veteran, he was commander of the US Army digital forensic investigations unit at US Army Criminal Investigation Command in Virginia.&lt;/p&gt;
&lt;p&gt;I am not going to use my usual technique of reporting through Eller’s evidence and cross-examination chronologically, because the subject matter does not lend itself to that, being both highly technical and delivered in a very disjointed fashion. This was partly due to the approach by James Lewis QC, counsel for the US government, who adopted a policy of asking long runs of technical questions about the operation of the computer systems, most of which were basic, irrelevant, and both required and got the simple answer “yes”, and then after a run of a dozen to twenty “yeses”, Lewis would throw in a more dubious proposition. This did once work when he got a “yes” to the proposition that “a great hacker can crack a great cypher” by this system of inducing impulsive repetition of “yes”. Lewis went on to claim that Assange had once self-described as “a fantastic hacker”.&lt;/p&gt;
&lt;p&gt;I am not attempting to hide the fact that there were passages of Eller’s testimony in court which I simply did not understand. When I get a new laptop, it takes me days to work out how to turn it on and I am yet to find how to transfer any information from an old one. There are very definitely readers who would have done a much better job than me of reporting this, but then I was there and you were not. So these, for me, were the key points of Eller’s evidence.&lt;/p&gt;
&lt;p&gt;With respect to the Jabber conversations between Chelsea Manning and “Nathaniel Frank”, which form the basis of the charge of aiding the commission of computer intrusion, there is no forensic evidence that “Nathaniel Frank” is Julian Assange, or indeed any single individual.&lt;/p&gt;
&lt;p&gt;The “Hash key”, or encrypted half of a password, which Manning had requested assistance with cracking could not have been cracked with the technology available in 2010. It was “impossible” and “computationally infeasible”, according to Eller. This could not have been done with a brute force attack, dictionary attack or rainbow table. In cross-examination Lewis explored this at great length and read from a 2009 article on a vulnerability in Windows XP precisely with regard to the hash key system. Eller replied this was well known, but Microsoft had fixed it with a patch well before the events in question. That made it in practice impossible for the code to be cracked using one half of the hash key. Lewis did not query this and quickly moved on; it appeared he knew of the patch all along.&lt;/p&gt;
&lt;p&gt;Perhaps Eller’s most telling evidence was that Manning had in fact already downloaded the bulk of the material passed to the Wikileaks dropbox before initiating the conversation with Frank at all. Manning had full access to the SIPRnet, or classified infranet of material up to secret, under her own username, and had already been downloading using a program called &lt;em&gt;wget&lt;/em&gt;. Furthermore, Manning had already been taking steps to protect her identity by rebooting from a Linux CD thus evading several Windows security features. That would have been at least as effective as downloading from the FTP account if preventing detection were the goal.&lt;/p&gt;
&lt;p&gt;Manning therefore had no need of help from “Nathaniel Frank”, either to obtain the classified documents or to cover her tracks, although the problem of downloads being traceable to the IP address would remain. But this would not have been solved anyway by Manning’s interest in logging in to a File Transfer Protocol account. There was much discussion as to whether the FTP account would or would not have admin privileges, but as Eller was insistent it would neither have increased her access to classified material nor have better enabled her to cover her tracks, and that they could not have cracked the password with the hash key half anyway, I did not quite understand where that discussion was leading.&lt;/p&gt;
&lt;p&gt;One particularly jolting bit of information from Eller was that the SIPRnet from which Manning had downloaded all the material was open to “millions” of users. Eller’s final key point was that all of his evidence was consistent with the findings of the prosecution at Manning’s court martial, and presumably thus with the investigations of his old forensic team. Some of the lines taken by Lewis – including that it was in fact possible to crack the password from the half hash key – are inconsistent with the US prosecution’s own forensic evidence at the Manning court martial.&lt;/p&gt;
&lt;p&gt;Eller’s evidence is an example of those occasions where I know the comments below the line will be much more informed than my own efforts!&lt;/p&gt;
&lt;p&gt;Finally and ominously, Baraitser heard arguments on whether the full medical records of Assange from the doctors and psychiatrists who had given evidence should their public be released to the media. They have been requested by the press. The records contain a huge amount of background and many intimate details of Julian’s childhood and relationships which are in evidence but were not given in open court by the doctors. Both defence and prosecution opposed release, but Baraitser kept referring to “open justice”. You will remember that earlier this year, Baraitser decided that it was in the interests of “open justice” to release to the media the identity of Julian’s partner Stella Moris and her children. That too was against the wishes of both prosecution and defence.&lt;/p&gt;
&lt;p&gt;That a judge so intent on shutting down or refusing to hear defence evidence is suddenly so preoccupied with “open justice” when it comes to hurting Assange by release of his deeply personal information, is a great irony. Baraitser will rule on this on Monday and I hope humanity has prevailed with her.&lt;/p&gt;
&lt;p&gt; &lt;br/&gt;Forgive me for pointing out that my ability to provide this coverage is entirely dependent on your kind voluntary subscriptions which keep this blog going. This post is free for anybody to reproduce or republish, including in translation. You are still very welcome to read without subscribing.&lt;/p&gt;
&lt;p&gt;Unlike our adversaries including the Integrity Initiative, the 77th Brigade, Bellingcat, the Atlantic Council and hundreds of other warmongering propaganda operations, this blog has no source of state, corporate or institutional finance whatsoever. It runs entirely on voluntary subscriptions from its readers – many of whom do not necessarily agree with the every article, but welcome the alternative voice, insider information and debate.&lt;/p&gt;
&lt;p&gt;Subscriptions to keep this blog going are &lt;a href=&quot;https://www.craigmurray.org.uk/support-this-website/&quot;&gt;gratefully received&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Choose subscription amount from dropdown box:&lt;/p&gt;


&lt;p&gt;Paypal address for one-off donations: &lt;a href=&quot;https://www.craigmurray.org.uk/cdn-cgi/l/email-protection&quot; class=&quot;__cf_email__&quot; data-cfemail=&quot;8be8f9eae2ece6fef9f9eaf2babcbabbcbe9ffe2e5ffeef9e5eeffa5e8e4e6&quot;&gt;[email protected]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternatively by bank transfer or standing order:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Account name&lt;br/&gt;MURRAY CJ&lt;br/&gt;Account number 3 2 1 5 0 9 6 2&lt;br/&gt;Sort code 6 0 – 4 0 – 0 5&lt;br/&gt;IBAN GB98NWBK60400532150962&lt;br/&gt;BIC NWBKGB2L&lt;br/&gt;Bank address Natwest, PO Box 414, 38 Strand, London, WC2H 5JB&lt;/p&gt;
&lt;p&gt;Bitcoin: bc1q3sdm60rshynxtvfnkhhqjn83vk3e3nyw78cjx9&lt;/p&gt;
&lt;p&gt;Subscriptions are still preferred to donations as I can’t run the blog without some certainty of future income, but I understand why some people prefer not to commit to that.&lt;/p&gt;

</description>
<pubDate>Mon, 28 Sep 2020 07:34:10 +0000</pubDate>
<dc:creator>AllegedAlec</dc:creator>
<og:type>article</og:type>
<og:title>Your Man in the Public Gallery: Assange Hearing Day 18 - Craig Murray</og:title>
<og:description>It is hard to believe, but Judge Baraitser on Friday ruled that there will be no closing speeches in the Assange extradition hearing. She accepted the proposal initially put forward by counsel for the US government, that closing arguments should simply be submitted in writing and without an oral hearing. This was accepted by the […]</og:description>
<og:url>https://www.craigmurray.org.uk/archives/2020/09/your-man-in-the-public-gallery-assange-hearing-day-18/</og:url>
<og:image>https://www.craigmurray.org.uk/wp/wp-content/uploads/2020/09/Screenshot-1258.png</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.craigmurray.org.uk/archives/2020/09/your-man-in-the-public-gallery-assange-hearing-day-18/</dc:identifier>
</item>
<item>
<title>Judge temporarily blocks U.S. ban on TikTok downloads from U.S. app stores</title>
<link>https://www.reuters.com/article/us-usa-tiktok-ban-judge/judge-temporarily-blocks-u-s-ban-on-tiktok-downloads-from-u-s-app-stores-idUSKBN26J00R</link>
<guid isPermaLink="true" >https://www.reuters.com/article/us-usa-tiktok-ban-judge/judge-temporarily-blocks-u-s-ban-on-tiktok-downloads-from-u-s-app-stores-idUSKBN26J00R</guid>
<description>&lt;div class=&quot;ArticleBody-byline-container-3H6dy&quot;&gt;
&lt;p class=&quot;Byline-byline-1sVmo ArticleBody-byline-10B7D&quot;&gt;By &lt;span class=&quot;TextLabel__text-label___3oCVw TextLabel__black___2FN-Z TextLabel__serif___3lOpX Byline-author-2BSir&quot; target=&quot;_blank&quot;&gt;Reuters Staff&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;ArticleBody-read-time-and-social-2VOIr&quot;&gt;
&lt;p class=&quot;TextLabel__text-label___3oCVw TextLabel__gray___1V4fk TextLabel__small-all-caps-spaced-out___3O9H4 ReadTime-read-time-1s3CG ArticleBody-read-time-29pGN&quot;&gt;1 Min Read&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;FILE PHOTO: TikTok's logo is displayed on the smartphone while standing on the U.S. flag in this illustration picture taken, November 8, 2019. REUTERS/Dado Ruvic/File Photo&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;&lt;span&gt;WASHINGTON (Reuters) - A U.S. judge in Washington has temporarily blocked a Trump administration order banning Apple Inc&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.reuters.com/companies/AAPL.O&quot;&gt;AAPL.O&lt;/a&gt;&lt;/span&gt; &lt;span&gt;and Alphabet Inc's Google&lt;/span&gt; &lt;span&gt;&lt;a href=&quot;https://www.reuters.com/companies/GOOGL.O&quot;&gt;GOOGL.O&lt;/a&gt;&lt;/span&gt; &lt;span&gt;from offering Chinese-owned short video-sharing app TikTok for download that was set to take effect at 11:59 p.m. Sunday.&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;Paragraph-paragraph-2Bgue ArticleBody-para-TD_9x&quot;&gt;U.S. District Judge Carl Nichols granted a preliminary injunction sought by TikTok owner ByteDance to allow the app to remain available at U.S. app stores, but declined “at this time” to block additional Commerce Department restrictions that are set to take effect on Nov. 12 that TikTok has said would have the impact of making the app impossible to use in the United States.&lt;/p&gt;
&lt;div readability=&quot;4.5566037735849&quot;&gt;
&lt;div class=&quot;Attribution-attribution-Y5JpY&quot; readability=&quot;7&quot;&gt;
&lt;p&gt;Reporting by David Shepardson; Editing by Kim Coghill&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
</description>
<pubDate>Mon, 28 Sep 2020 00:30:55 +0000</pubDate>
<dc:creator>pseudolus</dc:creator>
<og:title>Judge temporarily blocks U.S. ban on TikTok downloads from U.S. app stores</og:title>
<og:description>A U.S. judge in Washington has temporarily blocked a Trump administration order banning Apple Inc &lt;AAPL.O&gt; and Alphabet Inc's Google &lt;GOOGL.O&gt; from offering Chinese-owned short video-sharing app TikTok for download that was set to take effect at 11:59 p.m. Sunday.</og:description>
<og:image>https://static.reuters.com/resources/r/?m=02&amp;d=20200928&amp;t=2&amp;i=1535135669&amp;r=LYNXMPEG8R00K&amp;w=800</og:image>
<og:url>https://www.reuters.com/article/uk-usa-tiktok-ban-judge-idUSKBN26J00T</og:url>
<og:type>article</og:type>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.reuters.com/article/us-usa-tiktok-ban-judge/judge-temporarily-blocks-u-s-ban-on-tiktok-downloads-from-u-s-app-stores-idUSKBN26J00R</dc:identifier>
</item>
<item>
<title>Fully documented source code for Elite on the BBC Micro</title>
<link>https://www.bbcelite.com/</link>
<guid isPermaLink="true" >https://www.bbcelite.com/</guid>
<description>&lt;pre class=&quot;codeBlock deepDive article&quot;&gt;
&lt;span class=&quot;articleSubheader homepage&quot;&gt;Fully documented source code for Elite on the BBC Micro
-------------------------------------------------------&lt;/span&gt;

&lt;a href=&quot;https://www.bbcelite.com/about_site/about_this_project.html&quot;&gt;&lt;img class=&quot;titleImage themeLight&quot; src=&quot;https://www.bbcelite.com/images/general/Elite-BBCMicro.png&quot; alt=&quot;BBC Micro Elite screenshot&quot;/&gt;&lt;img class=&quot;titleImage themeDark&quot; src=&quot;https://www.bbcelite.com/images/general/Elite-BBCMicro.png&quot; alt=&quot;BBC Micro Elite screenshot&quot;/&gt;&lt;img class=&quot;titleImage themeElite&quot; src=&quot;https://www.bbcelite.com/images/general/Elite-TubeMaster.png&quot; alt=&quot;BBC Micro Tube Elite screenshot&quot;/&gt;&lt;/a&gt;

This site contains the original source code for Elite on the BBC Micro, with every single line documented and (for the most part) explained.

My hope is that this site will be useful for those who want to learn more about Elite and what makes it tick. It is provided on an educational and non-profit basis, with the aim of helping people appreciate one of the most iconic games of the 8-bit era.

To start your journey into the secrets of the original Elite, you might like to try one the following:

&lt;span class=&quot;articleList article&quot;&gt;  * See the &lt;a href=&quot;https://www.bbcelite.com/about_site/quick_start_guide.html&quot;&gt;quick start guide&lt;/a&gt; to find out how to use this site&lt;/span&gt;
&lt;span class=&quot;articleList article&quot;&gt;  * Read more &lt;a href=&quot;https://www.bbcelite.com/about_site/about_this_project.html&quot;&gt;about this project&lt;/a&gt; and how it came to be&lt;/span&gt;
&lt;span class=&quot;articleList article&quot;&gt;  * Check out the &lt;a href=&quot;https://www.bbcelite.com/explore/indexes/deep_dives.html&quot;&gt;deep dive articles&lt;/a&gt; for lots of details about how Elite works under the hood&lt;/span&gt;
&lt;span class=&quot;articleList article&quot;&gt;  * Dive straight into the &lt;a href=&quot;https://www.bbcelite.com/explore/articles/map_of_the_source_code.html&quot;&gt;source code&lt;/a&gt;, though you might want to &lt;a href=&quot;https://www.bbcelite.com/explore/about_site/terminology_used_in_this_commentary.html&quot;&gt;read these notes&lt;/a&gt; first, which explain some of the terminology used in the commentary&lt;/span&gt;
&lt;span class=&quot;articleList article&quot;&gt;  * Jump straight to a &lt;a href=&quot;https://www.bbcelite.com/cgi-bin/random.cgi&quot;&gt;random routine from the source code&lt;/a&gt; - who knows where you might end up? (Hopefully not in witchspace...)&lt;/span&gt;
&lt;span class=&quot;articleList article&quot;&gt;  * You can change the site's colour scheme by clicking the theme icons in the top-right corner&lt;/span&gt;
There is also an &lt;a href=&quot;https://github.com/markmoxon/elite-beebasm&quot;&gt;accompanying GitHub repository&lt;/a&gt; containing exactly the same source code as on this site (in fact, this site is generated from the sources on GitHub, so they are guaranteed to be the same). The sources on GitHub can be assembled on modern computers to produce a working game disc that can be loaded into a BBC Micro or an emulator, so if you want to experiment with the code, that's the place to go.

Right on, Commanders!

&lt;a href=&quot;https://www.markmoxon.com/&quot;&gt;&lt;em&gt;Mark Moxon&lt;/em&gt;&lt;/a&gt;
&lt;/pre&gt;</description>
<pubDate>Mon, 28 Sep 2020 00:00:10 +0000</pubDate>
<dc:creator>gjvc</dc:creator>
<dc:language>en-GB</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bbcelite.com/</dc:identifier>
</item>
</channel>
</rss>