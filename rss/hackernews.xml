<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=hnrss.org%2Fnewest%3Fpoints%3D200&amp;max=10&amp;links=preserve&amp;exc=" />
<atom:link rel="alternate" title="Source URL" href="http://hnrss.org/newest?points=200" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dhnrss.org%252Fnewest%253Fpoints%253D200%26max%3D10%26links%3Dpreserve%26exc%3D" />
<title>Hacker News: Newest</title>
<link>https://news.ycombinator.com/newest</link>
<description>Hacker News RSS</description>
<item>
<title>Google emphasizes popularity over accuracy</title>
<link>https://www.superhighway98.com/google</link>
<guid isPermaLink="true" >https://www.superhighway98.com/google</guid>
<description>&lt;p class=&quot;&quot;&gt;In August 2018, I searched for &quot;Henry Beard&quot; in Google Images and got back a page full of pictures of Henry Cavill &lt;em&gt;with a beard&lt;/em&gt;. This didn't happen because Google is stupid. On the contrary, Google was smart enough to know that Henry Cavill's beard &lt;a href=&quot;https://trends.google.com/trends/explore?date=all&amp;amp;geo=US&amp;amp;q=henry%20cavill%20beard&quot;&gt;was a hot topic&lt;/a&gt;: A QDF (query deserves freshness) algorithm altered the search results to &lt;em&gt;emphasize popularity over accuracy&lt;/em&gt;.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Search for &quot;GM&quot; and the Gmail homepage ranks prominently. Is Google pushing its own products on people? Well, &lt;a href=&quot;http://www.seobook.com/brands-vs-ads&quot;&gt;yes&lt;/a&gt;, but not here. This is an example of a query refinement algorithm at work. Google is altering its results in recognition of the fact that many people who search &quot;gm&quot; subsequently search for &quot;gmail.&quot;&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;(I.e. Based on what you type next, Google knows when you’ve made a fat finger error and assumes other fingers are fat, too.)&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;These examples are trivial, but they speak to a bigger problem.&lt;/p&gt;
&lt;h2&gt;Rewarding stupidity and laziness leads to more stupidity and laziness&lt;/h2&gt;
&lt;p class=&quot;&quot;&gt;Remember that story about the Polish dentist who pulled out all of her ex-boyfriend's teeth in an act of revenge? It was complete and utter bullshit. 100% fabricated. &lt;a href=&quot;https://www.snopes.com/fact-check/boyfriend-pull-teeth/&quot;&gt;No one knows who wrote it&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Nevertheless, it was picked up by &lt;em&gt;Fox News&lt;/em&gt;, the &lt;em&gt;Los Angeles Times&lt;/em&gt; and many other publishers. That was eight years ago, yet when I search now for &quot;dentist pulled ex boyfriends teeth,&quot; I get a featured snippet that quotes &lt;em&gt;ABC News&lt;/em&gt;' original, uncorrected story.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Who invented the fidget spinner? Ask Google Assistant and it will tell you that Catherine Hettinger did: a conclusion based on poorly-reported stories from &lt;em&gt;The Guardian&lt;/em&gt;, &lt;em&gt;The New York Times&lt;/em&gt; and other major news outlets. &lt;a href=&quot;https://www.bloomberg.com/news/articles/2017-05-11/how-the-fidget-spinner-origin-story-spun-out-of-control&quot;&gt;&lt;em&gt;Bloomberg&lt;/em&gt;'s Joshua Brustein&lt;/a&gt; clearly demonstrated that Ms. Hettinger did not invent the low friction toy. Nevertheless, ask Google Assistant &quot;who &lt;em&gt;really&lt;/em&gt; invented the fidget spinner?&quot; and you'll get the same answer: Catherine Hettinger.&lt;/p&gt;
&lt;h2&gt;A person is smart. People are dumb, panicky dangerous animals...&lt;/h2&gt;
&lt;p class=&quot;&quot;&gt;In 1998, the velocity of information was slow and the cost of publishing it was high (even on the web). Google leveraged those realities to make the best information retrieval system in the world.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;Today, information is free, plentiful and fast moving; somewhat by design, Google has become a card catalog that is constantly being reordered by an angry, misinformed mob.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;The web was supposed to forcefully challenge our opinions and push back, like a personal trainer who doesn't care how tired you say you are. Instead, Google has become like the pampering robots in &lt;em&gt;WALL-E&lt;/em&gt;, giving us what we want at the expense of what we need. But, it's not our bodies that are turning into mush: It’s our minds.&lt;/p&gt;
&lt;p class=&quot;&quot;&gt;&lt;a href=&quot;https://www.superhighway98.com&quot;&gt;&amp;lt;- RETURN TO SUPERHIGHWAY 98&lt;/a&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 22:00:44 +0000</pubDate>
<dc:creator>midef</dc:creator>
<og:title>How Google Ruined the Internet — Superhighway 98</og:title>
<og:url>https://www.superhighway98.com/google</og:url>
<og:type>website</og:type>
<og:description>Google has become a card card catalog that is constantly being reordered by an angry, misinformed mob.</og:description>
<og:image>http://static1.squarespace.com/static/5e6a3dd54dd6d5121789a9ff/t/5e6b718781c61452cd9a9a7b/1584099721279/Superhighway-98.jpg?format=1500w</og:image>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.superhighway98.com/google</dc:identifier>
</item>
<item>
<title>FCC will require phone carriers to authenticate calls by June 2021 [pdf]</title>
<link>https://docs.fcc.gov/public/attachments/DOC-363399A1.pdf</link>
<guid isPermaLink="true" >https://docs.fcc.gov/public/attachments/DOC-363399A1.pdf</guid>
<description>&lt;a href=&quot;https://docs.fcc.gov/public/attachments/DOC-363399A1.pdf&quot;&gt;Download PDF&lt;/a&gt;</description>
<pubDate>Tue, 31 Mar 2020 20:44:02 +0000</pubDate>
<dc:creator>hbcondo714</dc:creator>
<og:title>How Google Ruined the Internet — Superhighway 98</og:title>
<og:url>https://www.superhighway98.com/google</og:url>
<og:type>website</og:type>
<og:description>Google has become a card card catalog that is constantly being reordered by an angry, misinformed mob.</og:description>
<og:image>http://static1.squarespace.com/static/5e6a3dd54dd6d5121789a9ff/t/5e6b718781c61452cd9a9a7b/1584099721279/Superhighway-98.jpg?format=1500w</og:image>
<dc:language>en-US</dc:language>
<dc:format>application/pdf</dc:format>
<dc:identifier>https://docs.fcc.gov/public/attachments/DOC-363399A1.pdf</dc:identifier>
</item>
<item>
<title>Apple acquires Dark Sky</title>
<link>https://blog.darksky.net/dark-sky-has-a-new-home/</link>
<guid isPermaLink="true" >https://blog.darksky.net/dark-sky-has-a-new-home/</guid>
<description>&lt;p&gt;By &lt;span itemprop=&quot;author&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/Person&quot;&gt;&lt;span itemprop=&quot;name&quot;&gt;Adam Grossman&lt;/span&gt;&lt;/span&gt; on &lt;time datetime=&quot;2020-03-31T13:00:00-04:00&quot; itemprop=&quot;datePublished&quot;&gt;March 31, 2020&lt;/time&gt;.&lt;/p&gt;
&lt;p&gt;Today we have some important and exciting news to share: Dark Sky has joined Apple.&lt;/p&gt;
&lt;p&gt;Our goal has always been to provide the world with the best weather information possible, to help as many people as we can stay dry and safe, and to do so in a way that respects your privacy.&lt;/p&gt;
&lt;p&gt;There is no better place to accomplish these goals than at Apple. We’re thrilled to have the opportunity to reach far more people, with far more impact, than we ever could alone.&lt;/p&gt;
&lt;h3&gt;What happens to our existing products?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;iOS App&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There will be no changes to Dark Sky for iOS at this time. It will continue to be available for &lt;a href=&quot;https://apps.apple.com/app/apple-store/id517329357&quot;&gt;purchase in the App Store.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Android and Wear OS App&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The app will no longer be available for download. Service to existing users and subscribers will continue until July 1, 2020, at which point the app will be shut down. Subscribers who are still active at that time will receive a refund.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Website&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Weather forecasts, maps, and embeds will continue until July 1, 2020. The website will remain active beyond that time in support of API and iOS App customers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;API&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Our API service for existing customers is not changing today, but we will no longer accept new signups. The API will continue to function through the end of 2021.&lt;/p&gt;
&lt;p&gt;As part of this transition, use of Dark Sky by Apple is subject to the Apple Privacy Policy, which can be found at apple.com/privacy.&lt;/p&gt;
&lt;h3&gt;Thank you!&lt;/h3&gt;
&lt;p&gt;To our customers, family and friends, we are grateful for your support over the past eight years. We look forward to continuing to build great products, so stay tuned…&lt;/p&gt;
&lt;p&gt;The Dark Sky Team&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 17:17:47 +0000</pubDate>
<dc:creator>LittleAthena</dc:creator>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://blog.darksky.net/dark-sky-has-a-new-home/</dc:identifier>
</item>
<item>
<title>Prisma 2.0 Beta: Type-safe Database Access</title>
<link>https://www.prisma.io/blog/prisma-2-beta-b7bcl0gd8d8e</link>
<guid isPermaLink="true" >https://www.prisma.io/blog/prisma-2-beta-b7bcl0gd8d8e</guid>
<description>&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;contents&quot;&gt;Contents&lt;/h3&gt;
&lt;hr class=&quot;styles__Hr-fvdpr4-12 hxIcfA&quot;/&gt;&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;
&lt;ul class=&quot;styles__Ul-fvdpr4-2 fpttBk&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;The Prisma 2.0 &lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Beta&lt;/strong&gt; is ready. With the new website and documentation, it's now the default for new developers getting started with Prisma.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 2.0 mainly consists of Prisma Client, an auto-generated and type-safe query builder for Node.js and TypeScript. Prisma Migrate is considered &lt;em&gt;experimental&lt;/em&gt;.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;The &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma/prisma2&lt;/code&gt; repo has been renamed to &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma/prisma&lt;/code&gt; (and the former Prisma 1 repo &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma/prisma&lt;/code&gt; repo is now called &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma/prisma1&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Try the new Prisma Client in 5 minutes by following the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Quickstart&lt;/strong&gt;&lt;/a&gt; in the new docs.&lt;/p&gt;
&lt;hr class=&quot;styles__Hr-fvdpr4-12 hxIcfA&quot;/&gt;&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;modern-database-access-with-prisma-client-20&quot;&gt;Modern database access with Prisma Client 2.0&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The new version of Prisma Client is a modern database access library for Node.js and TypeScript. It can be used as an alternative to traditional ORMs and SQL query builders to read and write data in your database.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;To set it up, you need a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file&quot;&gt;Prisma schema file&lt;/a&gt; and must add Prisma Client as a dependency to your project:&lt;/p&gt;
&lt;pre class=&quot;styles__Pre-fvdpr4-13 gqUzOk&quot;&gt;
&lt;code&gt;npm install @prisma&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;client
&lt;/code&gt;
&lt;/pre&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Prisma Client can be used in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application (including serverless applications and microservices). This can be a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/rest&quot;&gt;REST API&lt;/a&gt;, a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/graphql&quot;&gt;GraphQL API&lt;/a&gt;, a gRPC API, or anything else that needs a database.&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;be-more-productive-with-your-database&quot;&gt;Be more productive with your database&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The main goal of Prisma Client is to increase the productivity of application developers when working with databases. It achieves this by providing a clean data access API that returns plain JavaScript objects.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;This approach enables simpler reasoning about database queries and increases the confidence with predictable (and type-safe) query results. Here are a couple of the major benefits Prisma Client provides:&lt;/p&gt;
&lt;ul class=&quot;styles__Ul-fvdpr4-2 fpttBk&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Auto-completion&lt;/strong&gt; in code editors instead of needing to look up documentation&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Thinking in objects&lt;/strong&gt; instead of mapping relational data&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Type-safe database queries&lt;/strong&gt; that can be validated at compile time&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Single source of truth&lt;/strong&gt; for database and application models&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Healthy constraints&lt;/strong&gt; that prevent common pitfalls and antipatterns&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;An abstraction that makes the right thing easy&lt;/strong&gt; (&quot;pit of success&quot;)&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Queries not classes&lt;/strong&gt; to avoid complex model objects&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Less boilerplate&lt;/strong&gt; so developers can focus on the important parts of their app&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Learn more about how Prisma makes developers productive in the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/understand-prisma/introduction&quot;&gt;Introduction&lt;/a&gt; or get a taste of the Prisma Client API by checking out the code examples on the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;a-smart-node-module-&quot;&gt;A &quot;smart&quot; node module 🤓&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;@prisma/client&lt;/code&gt; module is different from &quot;conventional&quot; node modules. With conventional node modules (e.g., &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://lodash.com/&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;lodash&lt;/code&gt;&lt;/a&gt;), the entire package is downloaded into your &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;node_modules&lt;/code&gt; directory and only gets updated when you re-install the package.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;@prisma/client&lt;/code&gt; node module is different. It is a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/generating-prisma-client#the-prisma-client-npm-module&quot;&gt;&quot;facade package&quot;&lt;/a&gt; (basically a &lt;em&gt;stub&lt;/em&gt;) that doesn't contain any functional code.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;While you do need to install it &lt;em&gt;once&lt;/em&gt; with &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/client&lt;/code&gt;, it is likely that the code inside the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;node_modules/@prisma/client&lt;/code&gt; directory changes more often as you're evolving your application. That's because whenever you make changes to the Prisma schema, you need to re-generate Prisma Client, which updates the code in the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;@prisma/client&lt;/code&gt; node module.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Because the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;node_modules/@prisma/client&lt;/code&gt; directory contains some code that is &lt;em&gt;tailored to your&lt;/em&gt; project, it is sometimes called a &quot;smart node module&quot;:&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;&lt;span class=&quot;Image__Wrapper-sc-152tu6s-0 iUrdCz&quot;&gt;&lt;img class=&quot;Image-sc-152tu6s-1 cmQiWS&quot; src=&quot;https://i.imgur.com/83djlkl.png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;auto-completion-and-type-safety-benefits-even-in-plain-javascript&quot;&gt;Auto-completion and type-safety benefits even in plain JavaScript&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Auto-completion is an extremely powerful tool for developers. It allows them to explore an API directly in their editor instead of referring to documentation. Prisma Client brings auto-completion to your database queries!&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Thanks to Prisma Client's generated types, which are included in the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;index.d.ts&lt;/code&gt; of the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;@prisma/client&lt;/code&gt; module, this feature is available not only to TypeScript developers, but also when developing an application in plain JavaScript.&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;type-safety-for-partial-database-queries&quot;&gt;Type-safety for partial database queries&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;A major benefit of Prisma Client compared to other ORMs and database tools is that it provides &lt;em&gt;full type safety&lt;/em&gt; - even for &quot;partial&quot; database queries (i.e., when you query only the subset of a model's field or include a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/relations&quot;&gt;relation&lt;/a&gt;).&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;As an example, consider this Prisma Client query (you can switch the tab to view the corresponding &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/models&quot;&gt;Prisma models&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;styles__Wrapper-jk89g6-2 ediVBQ&quot; readability=&quot;9&quot;&gt;
&lt;p&gt;&lt;button class=&quot;LanguageSwitch__Button-sc-11f7vs0-1 gpwrSH&quot; aria-pressed=&quot;true&quot;&gt;TypeScript&lt;/button&gt;&lt;button class=&quot;LanguageSwitch__Button-sc-11f7vs0-1 fZbRqm&quot; aria-pressed=&quot;false&quot;&gt;Prisma models&lt;/button&gt;&lt;/p&gt;
&lt;pre class=&quot;styles__Pree-jk89g6-3 kEPaoj Pre__PreWrapper-sc-11yd2uf-0 geUvVl&quot;&gt;
&lt;code class=&quot;language-ts line-numbers&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; usersWithPartialPosts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; prisma&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;user&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findMany&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  include&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    posts&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      select&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        published&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Note that the resulting &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;usersWithPartialPosts&lt;/code&gt; will be &lt;em&gt;statically typed&lt;/em&gt; to:&lt;/p&gt;
&lt;pre class=&quot;styles__Pre-fvdpr4-13 gqUzOk&quot;&gt;
&lt;code class=&quot;language-ts&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;type&lt;/span&gt; User &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;number&lt;/span&gt;
  email&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;
  name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; usersWithPartialPosts&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;User &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    posts&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        published&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;This means that TypeScript will catch any errors when you make a typo or accidentally access a property that was not requested from the database!&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;getting-started&quot;&gt;Getting started&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The best way to get started with Prisma Client is by following the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Quickstart&lt;/strong&gt;&lt;/a&gt; in the docs:&lt;/p&gt;
&lt;br/&gt;&lt;a class=&quot;as24l5-0-Button__Base-loQaZi dDWHgL&quot; target=&quot;_blank&quot; href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;&lt;span&gt;Quickstart (5 min)&lt;/span&gt;&lt;/a&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Alternatively, you can:&lt;/p&gt;
&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;whats-in-this-release&quot;&gt;What's in this release?&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The Prisma 2.0 Beta comes with the following tools:&lt;/p&gt;
&lt;ul class=&quot;styles__Ul-fvdpr4-2 fpttBk&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Prisma Client&lt;/strong&gt;: Auto-generated, type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Prisma Migrate&lt;/strong&gt; (&lt;em&gt;experimental&lt;/em&gt;): Declarative schema migration tool&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Prisma Studio&lt;/strong&gt; (&lt;em&gt;experimental&lt;/em&gt;): GUI to view and edit data in your database&lt;/li&gt;
&lt;/ul&gt;&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Try the new Prisma Client in 5 minutes by following the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Quickstart&lt;/strong&gt;&lt;/a&gt; in the new docs.&lt;/p&gt;
&lt;blockquote class=&quot;styles__Blockquote-fvdpr4-6 dEZflj&quot; readability=&quot;3.9344262295082&quot;&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Note&lt;/strong&gt;: Learn more about the Beta release in the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://github.com/prisma/prisma/releases/tag/2.0.0-beta.1&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;renaming-the-prisma2-repository-to-prisma&quot;&gt;Renaming the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt; repository to &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Since its initial release, the main repository for Prisma 2.0 has been called &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt;.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Because Prisma 2.0 is now the default for developers getting started with Prisma, the Prisma repositories have been renamed as follows:&lt;/p&gt;
&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;renaming-the-prisma2-cli&quot;&gt;Renaming the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt; CLI&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;During the Preview period, the CLI for Prisma 2.0 was invoked using the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt; command. With Prisma 2.0 being the default for new developers getting started with Prisma, the command is changed to just &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;. The exist ing &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt; command of Prisma 1 is renamed to &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma1&lt;/code&gt;.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Also, note that the installation of the npm packages changes:&lt;/p&gt;
&lt;table class=&quot;styles__Table-fvdpr4-16 fuCqG&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th class=&quot;styles__TH-fvdpr4-17 dFHcDf&quot;&gt;Prisma version&lt;/th&gt;
&lt;th class=&quot;styles__TH-fvdpr4-17 dFHcDf&quot;&gt;Old CLI command&lt;/th&gt;
&lt;th class=&quot;styles__TH-fvdpr4-17 dFHcDf&quot;&gt;New CLI command&lt;/th&gt;
&lt;th class=&quot;styles__TH-fvdpr4-17 dFHcDf&quot;&gt;Old npm package name&lt;/th&gt;
&lt;th class=&quot;styles__TH-fvdpr4-17 dFHcDf&quot;&gt;New npm package name&lt;/th&gt;
&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;2.0&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;@prisma/cli&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;1.X&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma1&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;&lt;/td&gt;
&lt;td class=&quot;styles__TD-fvdpr4-18 boaFff&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;a-note-for-current-prisma-1-users&quot;&gt;A note for current Prisma 1 users&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you're currently using Prisma 1 with the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt; command, you can keep using it as before. &lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;If you want to upgrade to Prisma 2.0&lt;/strong&gt;, it is recommended to uninstall your current &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt; installation and install the new CLI versions locally in the projects where they are needed:&lt;/p&gt;
&lt;pre class=&quot;styles__Pre-fvdpr4-13 gqUzOk&quot;&gt;
&lt;code&gt;# Remove global installation
npm uninstall &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;g prisma

# Navigate into Prisma &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; project directory &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; install locally
cd path&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;to&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;prisma&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;project
npm install prisma1 &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;save&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;dev

# Invoke &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`prisma1`&lt;/span&gt;&lt;/span&gt; by prefixing it &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`npx`&lt;/span&gt;&lt;/span&gt;
npx prisma1
&lt;/code&gt;
&lt;/pre&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;the-prisma2-npm-package-is-deprecated&quot;&gt;The &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt; npm package is deprecated&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma2&lt;/code&gt; npm package is now deprecated. To prevent confusions during installation, it now outputs the following when you try to install it:&lt;/p&gt;
&lt;pre class=&quot;styles__Pre-fvdpr4-13 gqUzOk&quot;&gt;
&lt;code&gt;┌─────────────────────────────────────────────────────────────┐
│                                                             │
│   The &lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; prisma2 has been renamed to @prisma&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;cli&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;      │
│                                                             │
│   Please uninstall prisma2 &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; your project or globally&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;   │
│   Then install @prisma&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;cli to &lt;span class=&quot;token keyword&quot;&gt;continue&lt;/span&gt; using Prisma &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;    │
│                                                             │
│      # Uninstall old &lt;span class=&quot;token constant&quot;&gt;CLI&lt;/span&gt;                                    │
│      npm uninstall prisma2                                  │
│                                                             │
│      # Install &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CLI&lt;/span&gt;                                      │
│      npm install @prisma&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;cli &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;save&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;dev                     │
│                                                             │
│      # Invoke via npx                                       │
│      npx prisma2 &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;help                                     │
│                                                             │
│   Learn more here&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;pris&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ly&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;preview025               │
│                                                             │
└─────────────────────────────────────────────────────────────┘
&lt;/code&gt;
&lt;/pre&gt;
&lt;hr class=&quot;styles__Hr-fvdpr4-12 hxIcfA&quot;/&gt;&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;i-currently-use-prisma-1-what-should-i-do&quot;&gt;I currently use Prisma 1; what should I do?&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;First of all, we want to hugely thank all existing Prisma 1 users! 🙏 We are deeply grateful for a supportive and active community that has formed on GitHub and &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://slack.prisma.io&quot;&gt;Slack&lt;/a&gt;!&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;how-does-prisma-20-compare-to-prisma-1&quot;&gt;How does Prisma 2.0 compare to Prisma 1?&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Prisma 2.0 comes with a number of changes compared to Prisma 1. Here's a high-level overview of the &lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;main differences&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class=&quot;styles__Ul-fvdpr4-2 fpttBk&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 2.0 doesn't require hosting a database proxy server (i.e., the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/1.34/prisma-server/&quot;&gt;Prisma server&lt;/a&gt;).&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 2.0 doesn't expose &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/blog/prisma-and-graphql-mfl5y2r7t49c/&quot;&gt;&quot;a GraphQL API for your database&quot;&lt;/a&gt; anymore, but only allows for &lt;em&gt;programmatic access&lt;/em&gt; via the Prisma Client API.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 2.0 makes the features of Prisma 1 more modular and splits them into dedicated tools:
&lt;ul class=&quot;styles__Ul-fvdpr4-2 fpttBk&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma Client: An improved version of Prisma client 1.0&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma Migrate: Data modeling and migrations (formerly &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma deploy&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;More powerful introspection allows connecting Prisma 2.0 to any existing database.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 1 datamodel and &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma.yml&lt;/code&gt; have been merged into the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/prisma-schema-file&quot;&gt;Prisma schema&lt;/a&gt;.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Prisma 2.0 uses its own &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://github.com/prisma/specs/tree/master/schema&quot;&gt;modeling language&lt;/a&gt; instead of being based on GraphQL SDL.&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;You can build GraphQL servers with Prisma using &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://nexusjs.org/&quot;&gt;Nexus&lt;/a&gt; or any other &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/understand-prisma/prisma-in-your-stack/graphql&quot;&gt;GraphQL library&lt;/a&gt; of your choice.&lt;/li&gt;
&lt;/ul&gt;&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;how-can-i-access-the-prisma-1-docs&quot;&gt;How can I access the Prisma 1 docs?&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;You can keep accessing specific versions of the Prisma 1 docs by appending the version number to &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;https://www.prisma.io/docs&lt;/code&gt;. For example, to view the docs for Prisma version 1.34, you can go to &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/1.34&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;https://www.prisma.io/docs/1.34&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;The Prisma 1 examples have been moved to the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://github.com/prisma/prisma1-examples/&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma1-examples&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt;
&lt;h4 class=&quot;styles__H4-fvdpr4-9 hpabDE&quot; id=&quot;should-i-upgrade&quot;&gt;Should I upgrade?&lt;/h4&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Whether or not you should upgrade depends on the context of your project. In general, one major consideration is the fact that Prisma Migrate is still experimental. This means you probably need to make any future adjustments to your database schema using SQL or another migration tool.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Also, note that we will put together an &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://github.com/prisma/prisma2/issues/1937&quot;&gt;upgrade guide as well as dedicated tooling&lt;/a&gt; for the upgrade process over the next weeks. So, if you do want to upgrade despite Prisma Migrate not being ready, it might be worth waiting until these resources are in place.&lt;/p&gt;
&lt;div class=&quot;Collapse__Wrapper-sc-2if1z2-0 fTxXxl&quot;&gt;
&lt;div class=&quot;Collapse__Tab-sc-2if1z2-1 jdCioY&quot; readability=&quot;24.436787702094&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;Collapse__Input-sc-2if1z2-4 gRhsUz&quot; id=&quot;tab-1&quot; name=&quot;tab&quot;/&gt;&lt;label class=&quot;Collapse__Label-sc-2if1z2-2 ioXSty&quot; for=&quot;tab-1&quot;&gt;Expand for different upgrade scenarios&lt;/label&gt;
&lt;div class=&quot;tab-content Collapse__TabContent-sc-2if1z2-3 ixtdha&quot; readability=&quot;72.804097482592&quot;&gt;
&lt;h5 class=&quot;styles__H5-fvdpr4-8 drXHRi&quot; id=&quot;i-use-prisma-1-with-prisma-client-and-nexus-prisma-should-i-upgrade&quot;&gt;I use Prisma 1 with Prisma client and &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;nexus-prisma&lt;/code&gt;, should I upgrade?&lt;/h5&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;It is certainly possible to upgrade a project that's running on Prisma 1 and &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;nexus-prisma&lt;/code&gt; to Prisma 2.0.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you decide to upgrade, be aware that changing your database schema after having upgraded to Prisma 2.0, will require running migrations with SQL or a third-party migration tool. Also, note that the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;nexus-prisma&lt;/code&gt; API changes with Prisma 2.0.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Here is a high-level overview of the steps needed to upgrade:&lt;/p&gt;
&lt;ol class=&quot;styles__Ol-fvdpr4-3 aRkmR&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma 2.0 CLI in your project: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/cli --save-dev&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Create a Prisma schema with a &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;datasource&lt;/code&gt; that points to your Prisma 1 database&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Introspect your Prisma 1 database to get your datamodel: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma introspect&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma Client npm package: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/client&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Generate Prisma Client JS: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma generate&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Upgrade to the latest version of &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;nexus-prisma&lt;/code&gt; and adjust your resolvers.&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote class=&quot;styles__Blockquote-fvdpr4-6 dEZflj&quot; readability=&quot;5.5555555555556&quot;&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Note&lt;/strong&gt;: You can find your database credentials in the Docker Compose file that you used to deploy the Prisma server. These credentials are needed to compose the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/database-connectors/connection-urls&quot;&gt;connection URL&lt;/a&gt; for Prisma 2.0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 class=&quot;styles__H5-fvdpr4-8 drXHRi&quot; id=&quot;i-use-prisma-1-with-prisma-client-without-nexus-prisma-should-i-upgrade&quot;&gt;I use Prisma 1 with Prisma client (without &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;nexus-prisma&lt;/code&gt;), should I upgrade?&lt;/h5&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;It is certainly possible to upgrade a project that's running on Prisma 1.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you decide to upgrade, be aware that changing your database schema after having upgraded to Prisma 2.0 will require running migrations with SQL or a third-party migration tool. Here is a high-level overview of the steps needed to upgrade:&lt;/p&gt;
&lt;ol class=&quot;styles__Ol-fvdpr4-3 aRkmR&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Navigate into your project directory&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma 2.0 CLI in your project: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/cli --save-dev&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Create a Prisma schema with a &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;datasource&lt;/code&gt; that points to your Prisma 1 database&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Introspect your Prisma 1 database to get your datamodel: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma introspect&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma Client npm package: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/client&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Generate Prisma Client JS: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma generate&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Update your previous uses of Prisma client 1.0 to the new Prisma Client 2.0&lt;/li&gt;
&lt;/ol&gt;&lt;blockquote class=&quot;styles__Blockquote-fvdpr4-6 dEZflj&quot; readability=&quot;5.5555555555556&quot;&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Note&lt;/strong&gt;: You can find your database credentials in the Docker Compose file that you used to deploy the Prisma server. These credentials are needed to compose the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/database-connectors/connection-urls&quot;&gt;connection URL&lt;/a&gt; for Prisma 2.0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 class=&quot;styles__H5-fvdpr4-8 drXHRi&quot; id=&quot;i-use-prisma-1-with-prisma-binding-should-i-upgrade&quot;&gt;I use Prisma 1 with &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma-binding&lt;/code&gt;, should I upgrade?&lt;/h5&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;It is certainly possible to upgrade a project that's running on Prisma 1 and &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma-binding&lt;/code&gt; to Prisma 2.0.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you decide to upgrade, be aware that changing your database schema after having upgraded to Prisma 2.0 will require running migrations with SQL or a third-party migration tool.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Also, note that the way how your GraphQL resolvers are implemented changes with Prisma 2.0. As Prisma 2.0 doesn't expose a GraphQL API for your database, you can't use the &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma-binding&lt;/code&gt; npm package anymore. This is mostly relevant for implementing &lt;em&gt;relations&lt;/em&gt;, resolvers for these now need to be implemented on a &lt;em&gt;type level&lt;/em&gt;. Here's a quick &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/tutorials/a-guide-to-common-resolver-patterns-ct08/#scenario:-implementing-relations-with-prisma-client&quot;&gt;guide&lt;/a&gt; for implementing relations in GraphQL with Prisma Client. To learn more about why this is necessary, be sure to read this article about the basics of &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/blog/graphql-server-basics-the-schema-ac5e2950214e&quot;&gt;GraphQL schemas&lt;/a&gt;.&lt;/p&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;Here is a high-level overview of the steps needed to upgrade:&lt;/p&gt;
&lt;ol class=&quot;styles__Ol-fvdpr4-3 aRkmR&quot;&gt;&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma 2.0 CLI in your project: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/cli --save-dev&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Create a Prisma schema with a &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;datasource&lt;/code&gt; that points to your Prisma 1 database&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Introspect your Prisma 1 database to get your datamodel: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma introspect&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Install the Prisma Client npm package: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npm install @prisma/client&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Generate Prisma Client JS: &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;npx prisma generate&lt;/code&gt;&lt;/li&gt;
&lt;li class=&quot;styles__Li-fvdpr4-4 lcXSUH&quot;&gt;Adjust your resolvers to use Prisma Client instead of &lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma-binding&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you want to switch to a &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/blog/the-problems-of-schema-first-graphql-development-x1mn4cb0tyl3&quot;&gt;code-first&lt;/a&gt; approach, check out &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://nexusjs.org/&quot;&gt;GraphQL Nexus&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;styles__Blockquote-fvdpr4-6 dEZflj&quot; readability=&quot;5.5555555555556&quot;&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;&lt;strong class=&quot;styles__Strong-fvdpr4-15 eHeecn&quot;&gt;Note&lt;/strong&gt;: You can find your database credentials in the Docker Compose file that you used to deploy the Prisma server. These credentials are needed to compose the &lt;a class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://www.prisma.io/docs/reference/database-connectors/connection-urls&quot;&gt;connection URL&lt;/a&gt; for Prisma 2.0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;styles__H3-fvdpr4-10 fdlJWJ&quot; id=&quot;try-out-prisma-20-and-share-your-feedback&quot;&gt;Try out Prisma 2.0 and share your feedback&lt;/h3&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;We are really excited to finally share the Beta version of Prisma 2.0 and can't wait to see what you all build with it.&lt;/p&gt;
&lt;br/&gt;&lt;a class=&quot;as24l5-0-Button__Base-loQaZi dDWHgL&quot; target=&quot;_blank&quot; href=&quot;https://www.prisma.io/docs/getting-started/quickstart&quot;&gt;&lt;span&gt;Get started with Prisma 2.0&lt;/span&gt;&lt;/a&gt;
&lt;p class=&quot;styles__Paragraph-fvdpr4-5 hNKcsf&quot;&gt;If you want to leave feedback, share ideas, create feature requests or submit bug reports, please do so in the (renamed) &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://github.com/prisma/prisma&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;prisma&lt;/code&gt;&lt;/a&gt; repository on GitHub and join the (renamed) &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://app.slack.com/client/T0MQBS8JG/CKQTGR6T0&quot;&gt;&lt;code class=&quot;styles__InlineCode-fvdpr4-14 kPyZAF&quot;&gt;#prisma2-beta&lt;/code&gt;&lt;/a&gt; channel on the &lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;styles__A-fvdpr4-7 hLlHFt&quot; href=&quot;https://slack.prisma.io&quot;&gt;Prisma Slack&lt;/a&gt;!&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 16:19:14 +0000</pubDate>
<dc:creator>johnnyballgame</dc:creator>
<og:title>Prisma 2.0 is Now in Beta: Type-safe Database Access with Prisma Client | Prisma</og:title>
<og:description>We introduced the first Preview version of Prisma 2.0 in June last year. Today, we are excited to launch the first official Beta along with a new website and updated Prisma 2.0 documentation.</og:description>
<og:image>https://i.imgur.com/k8Mu5IR.png</og:image>
<og:url>https://www.prisma.io/blog/prisma-2-beta-b7bcl0gd8d8e</og:url>
<og:type>article</og:type>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.prisma.io/blog/prisma-2-beta-b7bcl0gd8d8e</dc:identifier>
</item>
<item>
<title>Amazon fires worker who led strike over virus</title>
<link>https://www.bloomberg.com/news/articles/2020-03-30/amazon-worker-who-led-strike-over-virus-says-company-fired-him</link>
<guid isPermaLink="true" >https://www.bloomberg.com/news/articles/2020-03-30/amazon-worker-who-led-strike-over-virus-says-company-fired-him</guid>
<description>[unable to retrieve full-text content]
&lt;p&gt;Article URL: &lt;a href=&quot;https://www.bloomberg.com/news/articles/2020-03-30/amazon-worker-who-led-strike-over-virus-says-company-fired-him&quot;&gt;https://www.bloomberg.com/news/articles/2020-03-30/amazon-worker-who-led-strike-over-virus-says-company-fired-him&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Comments URL: &lt;a href=&quot;https://news.ycombinator.com/item?id=22738592&quot;&gt;https://news.ycombinator.com/item?id=22738592&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Points: 705&lt;/p&gt;
&lt;p&gt;# Comments: 272&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 15:40:19 +0000</pubDate>
<dc:creator>blago</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.bloomberg.com/tosv2.html?vid=&amp;uuid=4d98d2b0-73b4-11ea-bb58-53ff5aca45af&amp;url=L25ld3MvYXJ0aWNsZXMvMjAyMC0wMy0zMC9hbWF6b24td29ya2VyLXdoby1sZWQtc3RyaWtlLW92ZXItdmlydXMtc2F5cy1jb21wYW55LWZpcmVkLWhpbQ==</dc:identifier>
</item>
<item>
<title>I think Catalina 10.15.4 broke SSH</title>
<link>https://feed.tyler.io/so-uh-i-think-catalina-10154-broke-ssh/</link>
<guid isPermaLink="true" >https://feed.tyler.io/so-uh-i-think-catalina-10154-broke-ssh/</guid>
<description>&lt;p&gt;I was completely at my wit’s end and feeling like I had lost my mind until about a half hour ago. Let me start from the beginning…&lt;/p&gt;
&lt;p&gt;I don’t have an exact date, but within the last week I realized that I was unable to &lt;code&gt;ssh&lt;/code&gt; into my primary web server – the one that runs my &lt;a href=&quot;https://clickontyler.com&quot;&gt;business website&lt;/a&gt;, activation server, etc. It’s sort of the linchpin for my tiny software company. When it goes down, I get worried.&lt;/p&gt;
&lt;p&gt;At first I thought maybe the server was down? I hadn’t received any alerts, so I did a quick check. And, yes, it was still up and running and serving web traffic. Ok, did &lt;code&gt;sshd&lt;/code&gt; somehow become unresponsive? I login through the &lt;a href=&quot;https://www.linode.com&quot;&gt;Linode&lt;/a&gt; control panel and restart the service. Still can’t login.&lt;/p&gt;
&lt;p&gt;It’s odd. I don’t get a connection refused. Not even a timeout. It just…hangs.&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-1959&quot; src=&quot;https://cdn.tyler.io/wp-content/uploads/2020/03/ssh1.png&quot; width=&quot;1241&quot; height=&quot;311&quot;/&gt;&lt;/p&gt;
&lt;p&gt;That’s the &lt;code&gt;ssh&lt;/code&gt; output with the verbose flag. Nothing. I waited 10+ minutes and it never timed out or produced any other output.&lt;/p&gt;
&lt;p&gt;I reboot the server itself and the problem persists.&lt;/p&gt;
&lt;p&gt;Then, I notice some more oddities. I’m able to connect using &lt;a href=&quot;https://binarynights.com&quot;&gt;ForkLift&lt;/a&gt; – my FTP client, which connects via SFTP. Also, &lt;a href=&quot;http://sequelpro.com&quot;&gt;SequelPro&lt;/a&gt; is able to connect to MySQL via &lt;code&gt;ssh&lt;/code&gt; as well.&lt;/p&gt;
&lt;p&gt;And then things get even stranger. This is all happening on my iMac. I try connecting from my laptop, and it works. My MacBook Pro is at home right next to my iMac, which is refusing to login. They’re both on the same wifi and thus the same IP. So, it can’t be that my home IP address got mistakenly banned somehow.&lt;/p&gt;
&lt;p&gt;Next, I &lt;code&gt;ssh&lt;/code&gt; into a different server and then hop to the problematic one. It connects without any trouble. At this point I’m thinking maybe the permissions on my local private key got screwed up. So, I blow away &lt;code&gt;~/.ssh&lt;/code&gt; and recreate all of my keys from a backup. Still can’t login.&lt;/p&gt;
&lt;p&gt;Ok. I think about it for a few minutes and then – aha! – I have an Ubuntu virtual machine running on this iMac inside &lt;a href=&quot;https://www.parallels.com&quot;&gt;Parallels&lt;/a&gt;. I’ll &lt;code&gt;ssh&lt;/code&gt; into it and then try and connect. That will rule out if there’s just something odd about my iMac’s LAN IP. (To be clear, my home network is perfectly ordinary. Just a cable modem and a router.) So, I login to the VM, try and connect, and it works fine.&lt;/p&gt;
&lt;p&gt;At this point here’s what I’ve found:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;My iMac is the only machine that cannot login.&lt;/li&gt;
&lt;li&gt;I’ve connected successfully from behind the same public IP using a laptop, a virtual machine, &lt;em&gt;and&lt;/em&gt; my iPhone and iPad.&lt;/li&gt;
&lt;li&gt;I’ve verified my &lt;code&gt;ssh&lt;/code&gt; keys are correct and have the appropriate permissions.&lt;/li&gt;
&lt;li&gt;I &lt;em&gt;can&lt;/em&gt; connect to other servers from the problematic machine – both at the same hosting provider (Linode) and others (AWS and DigitalOcean).&lt;/li&gt;
&lt;li&gt;I &lt;em&gt;can&lt;/em&gt; connect from my iMac if I jump through any other server, first.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I start trying to think what could possibly be different about this one machine. And then it dawns on me. This all started around the time I updated my iMac to 10.15.4. My laptop is still on 10.15.3 – and, of course, the virtual machine isn’t macOS at all.&lt;/p&gt;
&lt;p&gt;Totally grasping for straws I google for “10.15.4 ssh” and find &lt;a href=&quot;https://discussions.apple.com/thread/251226509&quot;&gt;this top result&lt;/a&gt; on the Apple discussion forums:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Catalina 10.15.4 SSH port &amp;gt; 8192 does not work when using server name instead of IP&lt;/p&gt;
&lt;p&gt;This issue started just after upgrading to macOS Catalina 10.15.4.&lt;/p&gt;
&lt;p&gt;After that update I am no longer able to open a SSH connection to a port greater than 8192 using server name (instead of IP). Yes, I do change the port on the server side prior to every test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That can’t possibly be real?&lt;/p&gt;
&lt;p&gt;Up until this point, I was connecting via a saved hostname defined in my &lt;code&gt;~/.ssh/config&lt;/code&gt;, which let me login simply by tying &lt;code&gt;ssh some-server&lt;/code&gt;. So, I tried &lt;code&gt;ssh ip-address -p9944&lt;/code&gt; and it worked! (That server runs on an alternate &lt;code&gt;ssh&lt;/code&gt; port.)&lt;/p&gt;
&lt;p&gt;Ok. Time to narrow this down a bit further. I changed the server to listen on standard port 22 and tried connecting via the hostname once again.&lt;/p&gt;
&lt;p&gt;Holy crap, it worked.&lt;/p&gt;
&lt;p&gt;The user in the Apple forums was right. At least in my case, my one server that happened to be running on a non-standard &lt;code&gt;ssh&lt;/code&gt; port above 8192 will not connect from Catalina 10.15.4 when using the hostname instead of the IP address.&lt;/p&gt;
&lt;p&gt;Just to verify, I boot up a Mojave and Catalina (10.15.3) VM on the same iMac. They both connect fine, while the host machine continues to fail.&lt;/p&gt;
&lt;p&gt;The internals of this is all so incredibly above my head I have no idea what the underlying problem might be. Am I and this one other forum poster just doing something totally bizarre yet the same? This &lt;code&gt;ssh&lt;/code&gt; setup has been working for &lt;em&gt;years&lt;/em&gt; for me until just the last week. I would love to be proven wrong and told I’m an idiot. But I don’t know what difference connecting via the hostname versus the IP address would make when specifically using a non-standard port above a certain threshold.&lt;/p&gt;
&lt;p&gt;It just….&lt;em&gt;sigh&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I’m not even going to go into it. I don’t want to end up on Hacker News again bitching about Catalina. I just hope I’ve stuffed this post with enough keywords so that anyone else searching on Google might come across the answer.&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 15:40:13 +0000</pubDate>
<dc:creator>chmaynard</dc:creator>
<dc:language>en-US</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://feed.tyler.io/so-uh-i-think-catalina-10154-broke-ssh/</dc:identifier>
</item>
<item>
<title>Honda bucks industry trend by removing touchscreen controls</title>
<link>https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/honda-bucks-industry-trend-removing-touchscreen-controls</link>
<guid isPermaLink="true" >https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/honda-bucks-industry-trend-removing-touchscreen-controls</guid>
<description>&lt;p&gt;Honda has done what no other car maker is doing, and returned to analogue controls for some functions on the new &lt;a href=&quot;https://www.autocar.co.uk/car-review/honda/jazz&quot;&gt;Honda Jazz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While most manufacturers are moving to touchscreen controls, identifying smartphone use as their inspiration - most recently seen in &lt;a href=&quot;https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/new-audi-a3-seen-undisguised-ahead-early-2020-launch&quot;&gt;Audi’s latest A3&lt;/a&gt; - &lt;a href=&quot;https://www.autocar.co.uk/car-reviews/honda&quot;&gt;Honda&lt;/a&gt; has decided to reintroduce heating and air conditioning controls via a dial rather than touchscreen, as in the previous-generation Jazz.&lt;/p&gt;

&lt;p&gt;Jazz project leader Takeki Tanaka explained: “The reason is quite simple - we wanted to minimise driver disruption for operation, in particular, for the heater and air conditioning.&lt;/p&gt;
&lt;p&gt;“We changed it from touchscreen to dial operation, as we received customer feedback that it was difficult to operate intuitively. You had to look at the screen to change the heater seating, therefore, we changed it so one can operate it without looking, giving more confidence while driving.”&lt;/p&gt;
&lt;p&gt;More and more manufacturers are moving to touchscreen-only controls. The new &lt;a href=&quot;https://www.autocar.co.uk/car-reviews/audi&quot;&gt;Audi&lt;/a&gt; A3’s electronics boss Melanie Limmer told Autocar recently its decision to remove some physical buttons was made as “more and more people are getting into touch functions with smartphones” and added that the new system is as user-friendly as the previous one.&lt;/p&gt;
&lt;p&gt;While Honda’s decision to return to physical controls will be popular with some - including, no doubt, its ageing owner base in the UK - the predicted move towards &lt;a href=&quot;https://www.autocar.co.uk/car-news/new-cars/volkswagen-get-amazon-alexa-voice-control-connectivity-push&quot;&gt;more voice-controlled actions in cars&lt;/a&gt; could eliminate the debate around touchscreens versus analogue controls in the future.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;READ MORE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/honda-reveals-2020-jazz-pricing-uk-trims&quot;&gt;Honda reveals 2020 Jazz pricing, UK trims&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 15:25:59 +0000</pubDate>
<dc:creator>trenning</dc:creator>
<og:type>article</og:type>
<og:url>https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/honda-bucks-industry-trend-removing-touchscreen-controls</og:url>
<og:title>Honda bucks industry trend by removing touchscreen controls | Autocar</og:title>
<og:description>Japanese firm reckons new tech is &quot;difficult to operate intuitively&quot; for functions such as air conditioning, moving against growing industry norm</og:description>
<og:image>https://www.autocar.co.uk/sites/autocar.co.uk/files/images/car-reviews/first-drives/legacy/honda-jazz-2020-interior.jpg</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://www.autocar.co.uk/car-news/motor-shows-geneva-motor-show/honda-bucks-industry-trend-removing-touchscreen-controls</dc:identifier>
</item>
<item>
<title>Court: Violating a site’s terms of service isn’t criminal hacking</title>
<link>https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/</link>
<guid isPermaLink="true" >https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/</guid>
<description>&lt;img src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2020/03/GettyImages-1140860048-800x533.jpg&quot; alt=&quot;Court: Violating a site’s terms of service isn’t criminal hacking&quot;/&gt;&lt;div class=&quot;caption-credit&quot;&gt;Jamie Grill / Getty&lt;/div&gt;
&lt;aside id=&quot;social-left&quot; class=&quot;social-left&quot; aria-label=&quot;Read the comments or share this article&quot;&gt;
&lt;h4 class=&quot;comment-count-before&quot;&gt;&lt;a title=&quot;41 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/?comments=1&quot;&gt;reader comments&lt;/a&gt;&lt;/h4&gt;
&lt;a title=&quot;41 posters participating&quot; class=&quot;comment-count icon-comment-bubble-down&quot; href=&quot;https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/?comments=1&quot;&gt;&lt;span class=&quot;comment-count-number&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;visually-hidden&quot;&gt;with 41 posters participating&lt;/span&gt;&lt;/a&gt;
&lt;div class=&quot;share-links&quot;&gt;
&lt;h4&gt;Share this story&lt;/h4&gt;
&lt;/div&gt;
&lt;/aside&gt;&lt;p&gt;A federal court in Washington, DC, has &lt;a href=&quot;https://www.aclu.org/sites/default/files/field_document/sandvig_opinion.pdf&quot;&gt;ruled&lt;/a&gt; that violating a website's terms of service isn't a crime under the Computer Fraud and Abuse Act, America's primary anti-hacking law. The lawsuit was initiated by a group of academics and journalists with the support of the American Civil Liberties Union.&lt;/p&gt;
&lt;p&gt;The plaintiffs wanted to investigate possible racial discrimination in online job markets by creating accounts for fake employers and job seekers. Leading job sites have terms of service prohibiting users from supplying fake information, and the researchers worried that their research could expose them to criminal liability under the CFAA, which makes it a crime to &quot;access a computer without authorization or exceed authorized access.&quot;&lt;/p&gt;
&lt;p&gt;So in 2016 they sued the federal government, seeking a declaration that this part of the CFAA violated the First Amendment.&lt;/p&gt;
&lt;p&gt;But rather than addressing that constitutional issue, Judge John Bates ruled on Friday that the plaintiffs' proposed research wouldn't violate the CFAA's criminal provisions at all. Someone violates the CFAA when they bypass an access restriction like a password. But someone who logs into a website with a valid password doesn't become a hacker simply by doing something prohibited by a website's terms of service, the judge concluded.&lt;/p&gt;
&lt;p&gt;&quot;Criminalizing terms-of-service violations risks turning each website into its own criminal jurisdiction and each webmaster into his own legislature,&quot; Bates wrote.&lt;/p&gt;
&lt;p&gt;Bates noted that website terms of service are often long, complex, and change frequently. While some websites require a user to read through the terms and explicitly agree to them, others merely include a link to the terms somewhere on the page. As a result, most users aren't even aware of the contractual terms that supposedly govern the site. Under those circumstances, it's not reasonable to make violation of such terms a criminal offense, Bates concluded.&lt;/p&gt;
&lt;h2&gt;Courts disagree about how to interpret the CFAA&lt;/h2&gt;
&lt;p&gt;This isn't the first time a court has held that violating a website's terms of use is not a criminal hacking offense. In 2009, a California federal judge &lt;a href=&quot;https://arstechnica.com/tech-policy/2009/08/judge-says-tos-violations-arent-a-crime-acquits-lori-drew/&quot;&gt;rejected&lt;/a&gt; a CFAA prosecution against Lori Drew, a woman who contributed to a MySpace hoax that led to the suicide of 13-year-old Megan Meier. Prosecutors had argued that Drew violated MySpace's terms of service.&lt;/p&gt;
&lt;p&gt;In 2014, the Ninth Circuit Court of Appeals—which includes California—&lt;a href=&quot;https://arstechnica.com/tech-policy/2012/04/terms-of-service-violations-not-a-crime-appeals-court-rules/&quot;&gt;rejected&lt;/a&gt; another CFAA prosecution based on a terms-of-service violation. In that case, an employee had used a valid password to access confidential information, which the employee then used in ways that violated the employer's policies.&lt;/p&gt;
&lt;p&gt;A 2015 ruling by the Second Circuit Court of Appeals interpreted the CFAA in a similar way. It &lt;a href=&quot;https://www.jacksonlewis.com/publication/second-circuit-adopts-narrow-construction-federal-computer-fraud-statute-joins-circuit-split&quot;&gt;overturned&lt;/a&gt; the conviction of a cop who had used a police database to look up information about women he knew personally. While his creepy behavior violated police department policies, the court held, that didn't make it a violation of the anti-hacking law.&lt;/p&gt;
&lt;p&gt;&quot;The government's construction of the statute would expand its scope far beyond computer hacking to criminalize any unauthorized use of information obtained from a computer,&quot; the appeals court concluded.&lt;/p&gt;
&lt;p&gt;But some other courts have interpreted the CFAA more broadly. For example, in a 2010 case, the Eleventh Circuit &lt;a href=&quot;https://caselaw.findlaw.com/us-11th-circuit/1549806.html&quot;&gt;ruled&lt;/a&gt; that a Social Security Administration employee &lt;em&gt;had&lt;/em&gt; violated the CFAA when he used an SSA database to look up information about people he knew personally. The ruling runs directly counter to the Second Circuit's ruling a few years later.&lt;/p&gt;
&lt;p&gt;In a &lt;a href=&quot;https://en.wikipedia.org/wiki/International_Airport_Centers,_L.L.C._v._Citrin&quot;&gt;2006 ruling&lt;/a&gt; the Seventh Circuit Court of Appeals ruled that an employee, Jacob Citrin, had violated the anti-hacking law when, after quitting his job, he wiped an employer-owned laptop that contained information that was valuable to his employer—as well as data that would have revealed misconduct by Citrin. Citrin hadn't in any sense hacked into the laptop, but the court found that deleting the data nevertheless exceeded his authorized access.&lt;/p&gt;
&lt;p&gt;Ultimately, these conflicting interpretations of the CFAA will need to be resolved by the Supreme Court, which has yet to rule on the question.&lt;/p&gt;
&lt;p&gt;Last week's ruling only deals with criminal liability under the CFAA. There's a separate question about whether violating a website's terms of service could expose someone to a lawsuit from the site's owner. Here, too, the courts have yet to reach a clear answer.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;https://arstechnica.com/tech-policy/2016/07/startup-that-we-all-forgot-gets-small-win-against-facebook-on-appeal/&quot;&gt;2016 ruling&lt;/a&gt; by the Ninth Circuit sided with Facebook in a CFAA lawsuit against a startup that had logged in to Facebook credentials supplied by users in violation of Facebook's policies. On the other hand, the Ninth Circuit &lt;a href=&quot;https://arstechnica.com/tech-policy/2019/09/web-scraping-doesnt-violate-anti-hacking-law-appeals-court-rules/&quot;&gt;ruled&lt;/a&gt; last year that a small company, called hiQ Labs, didn't violate the CFAA when it scraped data from LinkedIn in violation of LinkedIn's terms of service.&lt;/p&gt;

</description>
<pubDate>Tue, 31 Mar 2020 15:04:26 +0000</pubDate>
<dc:creator>LinuxBender</dc:creator>
<og:url>https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/</og:url>
<og:title>Court: Violating a site’s terms of service isn’t criminal hacking</og:title>
<og:image>https://cdn.arstechnica.net/wp-content/uploads/2020/03/GettyImages-1140860048-760x380.jpg</og:image>
<og:description>Courts have struggled to interpret the vague Computer Fraud and Abuse Act.</og:description>
<og:type>article</og:type>
<dc:language>en-us</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://arstechnica.com/tech-policy/2020/03/court-violating-a-sites-terms-of-service-isnt-criminal-hacking/</dc:identifier>
</item>
<item>
<title>“C is how the computer works” is a dangerous mindset for C programmers</title>
<link>https://words.steveklabnik.com/c-is-how-the-computer-works-is-a-dangerous-mindset-for-c-programmers</link>
<guid isPermaLink="true" >https://words.steveklabnik.com/c-is-how-the-computer-works-is-a-dangerous-mindset-for-c-programmers</guid>
<description>&lt;time datetime=&quot;2020-03-31&quot; class=&quot;article_time&quot;&gt;March 31, 2020&lt;/time&gt;&lt;p&gt;A long time ago, I wrote &lt;a href=&quot;https://words.steveklabnik.com/should-you-learn-c-to-learn-how-the-computer-works&quot;&gt;“Should you learn C to “learn how the computer works”?”&lt;/a&gt;. This was part 1 in a three part series. A year later, I got around to part 2, &lt;a href=&quot;https://words.steveklabnik.com/c-is-not-how-the-computer-works-can-lead-to-inefficient-code&quot;&gt;““C is not how the computer works” can lead to inefficient code”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s been five more months. I don’t think I really want to write out the third part; I expected this to be a quick series of blog posts, not something that was on my plate for a year and a half. Here’s the thesis of part 3:&lt;/p&gt;
&lt;blockquote readability=&quot;10&quot;&gt;
&lt;p&gt;Part three is going to show what happens if you make a mistake with the ideas from part two. If you incorrectly assume that C’s abstract model maps directly to hardware, you can make mistakes. This is where UB gets dangerous. While you can take advantages of some properties of the machine you’re relying on, you have to know which ones fit within C’s model and which ones don’t.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I honestly don’t feel like writing more than that, so I’m just gonna leave it there. Basically, the overall thrust of this series has been this: C is not the hardware, it’s an abstract machine. But that machine runs on real hardware, and abstractions are leaky. If you go too far into “purely only the abstract machine,” you may not be able to accomplish your tasks. If you go too far into “C runs directly on the hardware,” you may be surprised when a compiler does something that you didn’t expect.&lt;/p&gt;


&lt;p&gt;908&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;


&lt;p&gt;908&lt;/p&gt;
&lt;p&gt;Kudos&lt;/p&gt;
</description>
<pubDate>Tue, 31 Mar 2020 14:04:14 +0000</pubDate>
<dc:creator>todsacerdoti</dc:creator>
<og:url>https://words.steveklabnik.com/c-is-how-the-computer-works-is-a-dangerous-mindset-for-c-programmers</og:url>
<og:title>&quot;C is how the computer works&quot; is a dangerous mindset for C programmers • Steve Klabnik</og:title>
<og:type>article</og:type>
<og:description>A long time ago, I wrote “Should you learn C to “learn how the computer works”?”. This was part 1 in a three part series. A year later, I got around to part 2, ““C is not how the computer works” can lead to inefficient code”. It’s been five more... | Steve Klabnik | “The most violent element in society is ignorance.” - Emma Goldman</og:description>
<og:image>https://svbtleusercontent.com/dGL8qLwtMPmR79ercCq8fx02480xsuap_large.png</og:image>
<dc:language>en</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>https://words.steveklabnik.com/c-is-how-the-computer-works-is-a-dangerous-mindset-for-c-programmers</dc:identifier>
</item>
<item>
<title>Ask HN: How to prosper under negative interest rates?</title>
<link>https://news.ycombinator.com/item?id=22737423</link>
<guid isPermaLink="true" >https://news.ycombinator.com/item?id=22737423</guid>
<description>&lt;tr readability=&quot;0.58823529411765&quot;&gt;&lt;td bgcolor=&quot;#FF6600&quot;&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr id=&quot;pagespace&quot; title=&quot;Ask HN: How to prosper under negative interest rates?&quot;&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;6.9586983729662&quot;&gt;&lt;td&gt;
&lt;table class=&quot;fatitem&quot; border=&quot;0&quot; readability=&quot;5.2190237797247&quot;&gt;&lt;tr class=&quot;athing&quot; id=&quot;22737423&quot; readability=&quot;0&quot;&gt;&lt;td align=&quot;right&quot; valign=&quot;top&quot; class=&quot;title&quot;/&gt;
&lt;td valign=&quot;top&quot; class=&quot;votelinks&quot;&gt;
&lt;center&gt;

&lt;/center&gt;
&lt;/td&gt;
&lt;td class=&quot;title&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22737423&quot; class=&quot;storylink&quot;&gt;Ask HN: How to prosper under negative interest rates?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;0.74074074074074&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td class=&quot;subtext&quot;&gt;&lt;span class=&quot;score&quot; id=&quot;score_22737423&quot;&gt;223 points&lt;/span&gt; by &lt;a href=&quot;https://news.ycombinator.com/user?id=gatleon&quot; class=&quot;hnuser&quot;&gt;gatleon&lt;/a&gt; &lt;span class=&quot;age&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=22737423&quot;&gt;11 hours ago&lt;/a&gt;&lt;/span&gt; &lt;span id=&quot;unv_22737423&quot;/&gt; | &lt;a href=&quot;https://news.ycombinator.com/hide?id=22737423&amp;amp;goto=item%3Fid%3D22737423&quot;&gt;hide&lt;/a&gt; | &lt;a href=&quot;https://hn.algolia.com/?query=Ask%20HN%3A%20How%20to%20prosper%20under%20negative%20interest%20rates%3F&amp;amp;sort=byDate&amp;amp;dateRange=all&amp;amp;type=story&amp;amp;storyText=false&amp;amp;prefix&amp;amp;page=0&quot; class=&quot;hnpast&quot;&gt;past&lt;/a&gt; | &lt;a href=&quot;https://www.google.com/search?q=Ask%20HN%3A%20How%20to%20prosper%20under%20negative%20interest%20rates%3F&quot;&gt;web&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/fave?id=22737423&amp;amp;auth=7d5f7639b9aa92df6850b752370e6335a64d4977&quot;&gt;favorite&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/item?id=22737423&quot;&gt;222 comments&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr readability=&quot;14&quot;&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td readability=&quot;15&quot;&gt;The US Fed is at 0% interest rates and there is increasing speculation they might go to negative interest rates. There are already other central banks around the world in negative interest rate territory.
&lt;p&gt;How do you prosper under a situation like that? What would you do or plan to do?&lt;/p&gt;
&lt;p&gt;For example, should I stop saving? Should I put my savings elsewhere? Should I take out loans to buy up assets? Should I build businesses and raise venture capital for them?&lt;/p&gt;
&lt;p&gt;I was brought up to work diligently, not take on debt, and save - a simple approach to building wealth - but I'm concerned that will put me at a disadvantage under an economic system with negative rates.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td/&gt;
&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot;/&gt;
&lt;td&gt;

&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr readability=&quot;1&quot;&gt;&lt;td&gt;&lt;img src=&quot;https://news.ycombinator.com/s.gif&quot; height=&quot;10&quot; width=&quot;0&quot;/&gt;&lt;br/&gt;&lt;center&gt;&lt;span class=&quot;yclinks&quot;&gt;&lt;a href=&quot;https://news.ycombinator.com/newsguidelines.html&quot;&gt;Guidelines&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/newsfaq.html&quot;&gt;FAQ&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Support&lt;/a&gt; | &lt;a href=&quot;https://github.com/HackerNews/API&quot;&gt;API&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/security.html&quot;&gt;Security&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/lists&quot;&gt;Lists&lt;/a&gt; | &lt;a href=&quot;https://news.ycombinator.com/bookmarklet.html&quot; rel=&quot;nofollow&quot;&gt;Bookmarklet&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/legal/&quot;&gt;Legal&lt;/a&gt; | &lt;a href=&quot;http://www.ycombinator.com/apply/&quot;&gt;Apply to YC&lt;/a&gt; | &lt;a href=&quot;mailto:hn@ycombinator.com&quot;&gt;Contact&lt;/a&gt;&lt;/span&gt;
&lt;/center&gt;
&lt;/td&gt;
&lt;/tr&gt;</description>
<pubDate>Tue, 31 Mar 2020 13:41:10 +0000</pubDate>
<dc:creator>gatleon</dc:creator>
<dc:format>text/html</dc:format>
<dc:identifier>https://news.ycombinator.com/item?id=22737423</dc:identifier>
</item>
</channel>
</rss>