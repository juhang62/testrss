<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>此人提出平行线可以相交遭嘲讽，郁郁而终，12年后却被认可</title>
<link>http://www.jintiankansha.me/t/xOkv0VxoiQ</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/xOkv0VxoiQ</guid>
<description>&lt;strong&gt;
                &lt;a href=&quot;http://www.jintiankansha.me/about&quot; class=&quot;dark&quot; target=&quot;_self&quot;&gt;关于&lt;/a&gt;
                 
                &lt;a class=&quot;go-mobile&quot; href=&quot;javascript:;&quot;&gt;移动版&lt;/a&gt;
                  &lt;span class=&quot;snow&quot;&gt;·&lt;/span&gt;  
                &lt;a tar=&quot;&quot; href=&quot;https://www.sov5.cn&quot; class=&quot;dark&quot; target=&quot;_blank&quot;&gt;SoV5搜索&lt;/a&gt;
                  &lt;span class=&quot;snow&quot;&gt;·&lt;/span&gt;  
                &lt;a tar=&quot;&quot; href=&quot;http://www.python88.com&quot; class=&quot;dark&quot; target=&quot;_blank&quot;&gt;Python社区&lt;/a&gt;
                  &lt;span class=&quot;snow&quot;&gt;·&lt;/span&gt;  
                &lt;a href=&quot;http://link.sov5.cn/&quot; class=&quot;dark&quot; target=&quot;_blank&quot;&gt;Link管理&lt;/a&gt;
                  &lt;span class=&quot;snow&quot;&gt;·&lt;/span&gt;  
                &lt;a href=&quot;http://www.3daima.com/&quot; class=&quot;dark&quot; target=&quot;_blank&quot;&gt;三行代码&lt;/a&gt;
            &lt;/strong&gt;

            
            今天看啥 - 让阅读更高品质

            
            &lt;span class=&quot;f12 gray&quot;&gt;
                &lt;a href=&quot;http://www.miibeian.gov.cn/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;© 2019 ~ 沪ICP备11025650号&lt;/a&gt;&lt;/span&gt;
            
        </description>
<pubDate>Thu, 13 Feb 2020 01:02:50 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/xOkv0VxoiQ</dc:identifier>
</item>
<item>
<title>有前途的程序员的14个习惯，你有几个？</title>
<link>http://www.jintiankansha.me/t/pulzm4xB0i</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/pulzm4xB0i</guid>
<description>&lt;section/&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0609375&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkyibhvGLgaqX9NkLdhIcdPwR25icvKqfV9L0leq4zoIuDGk5MVNXKRO7bZg9KgWg9ozC6icfRIWtSQKg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;慎于说Yes&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在没有搞清楚开发需求、任务工作量、团队期望值之前，有前途的程序员不会轻易答应。特别是对于新人来说，比较急于表现自己，对于同事或者老板的工作安排来者不拒，精神可嘉，方法不可取。承诺太多，会出现自己无法按时完成的情况，即使按时完成，也可能没有达到别人的期望值，长期以往别人对你的失望会越来越多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;敢于说No&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;看起来和第一条雷同，其实细究起来不一样。第二条执行起来比第一条难得多。当遇到明显不合理的要求时，可以考虑拒绝，前提是准备好了全面充分的理由。不要经常说No，但是一旦说了，就要切中要害。有前途的程序员不会闷头干活，知道自己的定位和团队期望，分清楚哪些是不合理的要求，哪些是合理的要求，然后把明显不合理的要求和领导沟通下，取得支持。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;构建自己的知识体系&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在信息爆炸的年代，碎片化的知识很多，系统学习的时间越来越少，如果没有自己的知识体系，很容易被淹没在知识的海洋中，而且难以记忆。100分程序员推荐的做法，通过Wiki或者其他知识管理工具构建一个知识框架，大的分类可以包括软技能、架构、语言、前端、后端等，小的分类可以更细化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;培养大局观&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;程序员比较容易陷入的困境是专注于自己的一亩三分地，不关心团队的进度和业绩，也不关心软件的整体架构和其他模块。这种状态长期下去没有好处，特别是在大公司中，逐渐成长为一颗螺丝钉。100分程序员会在工作之余，多看看其他在做什么，看看团队的整体规划，看看软件系统的架构和说明文档。对自己的工作更理解，而且知道为什么这个产品应该这样设计，为什么领导应该这样做规划，这种大局观非常有利于自己的职业生涯。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;代码规范&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;程序员在新手时期需要培养良好的代码规范。最直接的办法，遵循公司已有的代码规范（如果没有类似的规定，也是醉了），从简单的变量命名到模块划分，有些规则可以导入到编码工具中，更多的部分需要自己体会和遵守。关于此方面的知识，最权威的书籍是《代码大全》，别误会，书名是个美丽的错误，里面不是代码集锦。对于新手来说，养成一个统一的编码风格非常重要，是基础一步。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;代码审查&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;把这个单独拎出来说，是因为对于程序员来说很重要。很多快速成长的公司没有这个步骤，建议大家能够坚持下来。让别人审查自己的代码，可以得到更多的反馈，也是和同事交流的好机会；审查别人的代码，可以借鉴别人的经验和思路。通常情况下，代码审查比自己写代码的收获更大，对于新手来说更有价值。只要你想做，不论形式是不是正规，都可以执行下去，最好形成团队的习惯。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一个时间段内只专注于一种类型的语言&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你正在设计或开发网站，你将需要同时熟悉多种不同的语言。你可能会想同时学习所有的这些语言，特别是考虑到它们是如何相互关联的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我想，在某种程度上，这是不可避免的。但如果你真的想快速提高，我建议你专注于一个特定领域的专业知识。你想更好地利用CSS？把你的重点放在这一点。尝试使用一个单一的HTML文档只使用CSS实现不同的布局。CSS Zen Garden 是一个使用相同布局实现不同页面样式非常棒的例子。你也可以通过查找元素的列表，并把精力集中在里面。举个例子来说，你熟悉CSS2，但想提升对 CSS3 的理解，你可以学习CSS3属性并逐一的实现它们。你可以阅读当前的 CSS3规范 ，还可以通过每个模块的学习来了解它在浏览器上能（或不能）做什么。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;通过注释来写逻辑&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;说到编码，我有坚持很多原则和想法。其中一个就是，代码中95%都是逻辑。另一个就是从人类语言到编程语言，逻辑并没有改变。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这也就是意味着，如果你能在代码中写出来，也就可以用英语或者其他语言写下来。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;良好的时间管理&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;迟到对于任何一家公司都是个头痛的问题。作为一个程序员，有时候为了完成任务常常不得不熬夜，从而导致第二天上班就迟到了。但是我们忽略了这一点，我们的工作时间至关重要，因为在这段时间里我们要和客户同步，也要与团队其他成员一齐协作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;strong&gt;深入理解客户需求&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;仅仅了解单一用户的表面意思是远远不够的。一个伟大的程序员应该具备能把繁琐的要求理解并分解成项目的技术任务或子任务的能力，并且最后拿到的成果应精确满足客户的需求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;绞尽脑汁还是“NO”&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;假如抓耳挠腮还是找不出解决办法，我们该如何是好？一个伟大的程序员应该足智多谋，能灵活应对困境。他们会去询问同事，或者是向团队领导者请教；在互联网上面搜索，然后耐下心来一遍又一遍地试验。相信山穷水尽疑无路，柳暗花明又一村，投降两个字从未出现在他们的字典上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;编程之前准备好全套算法&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;亲~还记得我们老师逼我们画的流程图吗？还记得一个个案例和伪代码吗？他们都是灰常重要的软件开发手段。一个伟大的程序员如果木有事先准备好算法，那他会不会像个傻小子似的只顾写代码呢？所以，在开工之前，做好全套的算法是必须的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;理解and帮助定义验收标准&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;是否需要高成次测试脚本是产品所有者决定的，但是，作为一个伟大的程序员必须能够编写技术测试脚本，并且也要认识到如果跳过了这一步骤可能会带来的后果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;主动一点点&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一个优秀的程序员不需要别人告诉他该做什么，他的主动性要比别人强一些，他可以自觉的关注流程，提高应用程序的灵活性以及快速的解决开发过程中出现的Bug。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;————&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;编辑 ∑Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt; 来源：伯乐在线&lt;/span&gt;&lt;/p&gt;



&lt;section&gt;&lt;img data-ratio=&quot;0.1871508379888268&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/pSqFmkOFya18spZuOticj7bLrtCCQtBxpHx4BBD29iahkbNf25fqIiczCkvDTp0OFK2S9GVx8z8aaTvDKrIOsLPiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;358&quot;/&gt;&lt;/section&gt;&lt;section data-style-type=&quot;5&quot; data-tools=&quot;&amp;#x65B0;&amp;#x5A92;&amp;#x4F53;&amp;#x6392;&amp;#x7248;&quot; data-id=&quot;2625492&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-tools=&quot;&amp;#x65B0;&amp;#x5A92;&amp;#x4F53;&amp;#x6392;&amp;#x7248;&quot; data-id=&quot;2617381&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485129&amp;amp;idx=1&amp;amp;sn=50c0444191095330955d568b6628c7c2&amp;amp;chksm=ebe9cc74dc9e4562b9e10c99f077bed823eb02f7dac8d58a5a9e25c6d3f1695438d0cc370f90&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数学家探索两个几何世界之间的镜像链接&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485129&amp;amp;idx=2&amp;amp;sn=af6c7ada19573dc6d219a8b26b1d92f6&amp;amp;chksm=ebe9cc74dc9e456218e394fcfaeaf17c14a90bdaacf30e5a7a56adeefe70ee63ed5d560804b5&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数学天才帕吉特：他有如电影般的人生际遇&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt;  ☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485067&amp;amp;idx=2&amp;amp;sn=c143f9b22cc37ba97b2736c046a0f557&amp;amp;chksm=ebe9cc36dc9e45203d049bfb10f76bc3f9143e378274b5f04d788aeac8e03eaa6209b3059071&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;世界上最奇怪的数学天才，被奖励100万却拒领，宁愿过得像乞丐&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485056&amp;amp;idx=2&amp;amp;sn=92f735f3b3ee3445b7c166129b18a7a9&amp;amp;chksm=ebe9cc3ddc9e452ba9cf6f78bb20bb2e14a86fde39a3d9528d32adc0aa4ec73d9ca31b107df3&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;斯坦福大学教育学院院长：学习本身就是一门学问&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485125&amp;amp;idx=2&amp;amp;sn=e163b38da9a2e1526414e0bf776c0e33&amp;amp;chksm=ebe9cc78dc9e456e8c56643f3893d1059dd50bbb552f2f141fae1dabeddc0fb1dd63a9ce9094&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;如果没有数学，我们如何测量&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247485122&amp;amp;idx=2&amp;amp;sn=312d7ef2598932a542b446b91e337f08&amp;amp;chksm=ebe9cc7fdc9e4569d3e171cbe822df399a7018b6240370c6c2a3b63c18ea909f86cad9066b37&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数学的真相：物理时空的数字模型还是现实本身？&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;



&lt;p&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;欢迎加入算与数学术交流群，请添加微信：nhyilin&lt;span&gt;（备注：算数粉丝）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Thu, 13 Feb 2020 01:02:47 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/pulzm4xB0i</dc:identifier>
</item>
</channel>
</rss>