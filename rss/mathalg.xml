<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="css/feed.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:og="http://ogp.me/ns#">
<channel>
<atom:link rel="self" href="http://192.168.1.4/fivefilters/makefulltextfeed.php?url=feed43.com%2Fmathalg-jtks.xml&amp;max=5&amp;links=preserve&amp;exc=1" />
<atom:link rel="alternate" title="Source URL" href="http://feed43.com/mathalg-jtks.xml" />
<atom:link rel="related" title="Subscribe to feed" href="http://www.subtome.com/#/subscribe?feeds=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1&amp;back=http%3A%2F%2F192.168.1.4%2Ffivefilters%2Fmakefulltextfeed.php%3Furl%3Dfeed43.com%252Fmathalg-jtks.xml%26max%3D5%26links%3Dpreserve%26exc%3D1" />
<title>算法与数学之美</title>
<link>http://www.jintiankansha.me/column/c9dZ5TM2aS</link>
<description>算法与数学之美 - 今天看啥</description>
<ttl>360</ttl>
<item>
<title>数学公式、可视化图齐齐上阵，神经网络如何一步步走向最优化「看得见」！</title>
<link>http://www.jintiankansha.me/t/JxE3DTtX7X</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/JxE3DTtX7X</guid>
<description>&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0609375&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/951TjTgiabkyibhvGLgaqX9NkLdhIcdPwR25icvKqfV9L0leq4zoIuDGk5MVNXKRO7bZg9KgWg9ozC6icfRIWtSQKg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;

&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;164&quot; data-source-title=&quot;&quot;&gt;
&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;span&gt;继在《要做好深度学习任务，不妨先在损失函数上「做好文章」》一文中为大家深入浅出地介绍了损失函数的相关知识后，Deep Learning Demystified 编辑、数据科学家 Harsha Bommana 本次接着从优化的角度，结合数学方式和可视化图，带大家以「看得见」的方式来了解神经网络如何一步步找到最小化的损失值，并最终实现最优化。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;在前一篇文章《要做好深度学习任务，不妨先在损失函数上「做好文章」》中，我们对损失函数有了一个比较清晰的认知，它能够让我们知道模型在某一阶段的表现情况。现在，我们需要使用损失函数来训练网络以提高网络的性能。根本上，我们需要做的其实是获得损失值并尽可能地将其最小化，因为损失值越小，模型的性能就越高。最小化数学表示的这一过程就叫做优化，下面我们就看看如何在神经网络上将这些优化方法用其起来~&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在神经网络中，每个层之间都有很多权重。我们需要了解的是：神经网络中每层的每个权重都会以某种方式影响到网络的输出，这是因为它们全都直接或间接地与输出有关联。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;因此，我们可以说，如果我们改变神经网络中的任一特定的权重，网络的输出也会改变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如下图所示，我们尝试了 3 种不同的场景。在每个场景中，我们都选择了一些随机的权重，并对其进行了更改。同时，下图也显示了，改变选择好的权重会对神经网络的哪些部分产生影响以及哪些部分不构成影响。在这 3 个场景中，网络的最后一层都至少有一个受影响的节点。由于最后一层的所有节点都与输出节点相连，所以我们可以说，只要最后这层的部分某部分受到权重变化的影响，那输出节点也同样会受到影响。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.5625&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2wb1GZ9s4yGzwxhicqgJs9VGiauRxiaXzNmTCn8If2pmm0ETzeibXt5EeBQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;网络更改特定权重会对网络的哪些部分产生影响的可视化图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从上图中，我们同样可以观察到，权重离输出节点更远（离网络的始端更近），会更多地影响到网络始端和输出节点之间的节点。因而，我们可以判断，权重对输出的影响是非常间接的，因为在这些权重和输出之间还存在很多权重。离输出节点更近的权重则会更少地影响到网络始端和输出节点之间的节点，因此它们会更加直接地影响到输出节点。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;了解如何通过改变权重来改变网络的输出后，我们接下来要知道如何最小化损失。改变权重就会改变输出，而改变输出就会改变损失——因为损失就是一个预测 (Y_pred) 值的函数，而这个值本质上就是网络的输出。所以，我们可以得出的结论是，改变权重最终会让损失也发生改变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们已经展示了权重和最终的损失之间的关系，但是目前为止我们还仅仅探讨了改变。改变可以是增加的意思，也可以是减少的意思，而在这里我们需要的是减少损失。所以，我们需要探索以这种方式来改变权重究竟如何能够能让损失减少。这一过程就叫做优化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;从数学的角度来看，我们可以通过使用偏导数（Partial Derivatives）来实现这个过程。偏导数能够让我们理解两个数学表达式如何相互影响。让我们先假设 X 和 Y，它们之间存在某些任意的数学关系，如果我们能够得到 X 对 Y 的偏导数，我们就能够知道 X 的改变如何影响 Y。如果偏导数为正，就意味着 Y 会随着 X 的增大而增大；如果为负，则意味着 Y 随 X 的增大而减小。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如此一来，我们需要得到神经网络中的每个权重对损失的偏导数。在某个特定案例中，如果权重的偏导数为正，那我们就减小权重从而减小损失；如果为负，我们就增大权重以减小损失——毕竟优化最终的目标就是：减小损失！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6236044657097288&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2CmVak6TlUaYJRoDwjd4zicJSc4vy9dPJhmrOK1gxZla7nF9XFiaCFYwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;627&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;优化损失的偏导数可视化图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;对应用到的算法就是梯度下降（Gradient Descent）算法，它又名随机梯度下降（Stochastic Gradient Descent，SGD），是神经网络优化中最基础的算法。这一算法执行的是一个迭代过程，所以我们要多次更新每个权重的值，直到损失收敛为一个合适的值。我们不妨将单轮更新用以下数学公式来表示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.25333333333333335&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2GqxUdibQdx8PRicnr49UicqftKGSclKibwYqrvWK6rKbjN6LGPv9sybUXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在这里，alpha 符号表示学习率（Learning Rate），它对神经网络的优化速度有影响。如果学习率较大，我们就能更快地给损失找到一个最小值，因为每次更新的权重跨度够大，不过，从最终的值来看，我们或许无法找到一个很好的最小值，这是由于每次更新的权重跨度太大，就有很能会直接跨过这个很好的最小值。而采用更小的学习率则能够解决这一问题，不过这就需要花很多步来让神经网络的损失减小到一个不错的值。所以，我们需要让学习率维持为一个最佳值，一般而言，0.01 是 alpha 的一个比较安全的取值。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然而仅仅使用梯度下降算法存在的一个大问题是，如下图所示，损失无法趋近于全局最小值，而仅能不断接近局部最小值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7130434782608696&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2Nce6znxibQVrtF2UsmxKOXSltZtZNEr3WuicG9ic3rmzSd7IqMrAuDXbA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;575&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SGD 局部最小值问题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们从标记的绿点看起，第一个绿点之后的每个绿点都表示依次更新后的新权重和损失。由于偏导数（梯度）在无限接近局部最小值时基本上等于 0，因此梯度下降仅仅在找到局部最小值之前发生。所以，在求到局部最小值后，梯度下降基本上就会原封不动，并不会继续尝试去找到全局最小值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;上图非常简单，而在现实中，这张图要复杂得多，存在很多个局部最小值，所以如果仅仅使用梯度下降算法，并不能确保能够找到一个不错的损失。针对这一问题，我们可以采用动量的方法。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;动量（Momentum）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在动量中，我们需要做的基本上就是获取权重在本次更新之前经过的所有更新的一些信息。根本上而言，如果权重持续往一个特定方向变化（增大或减小），它就会慢慢地积累下该方向的「动量」。因此，当权重遇到一些抵抗力并最终往相反的方向变化时，由于此前积累的动量，它就能够继续按原来的方向变化。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这与物理中的实际动量类似。我们想象有一个走廊和一个球，当我们在走廊的一遍发球时，它会持续滚动一段时间，在此过程中，它就为往该方向的前进获取的动量。最后，当球滚动到底时，也不会就停在那里，而是往相反的方向再滚动一会，这是因为它在此之前所获得的动量——即便重力会让它停下来，然而动量会让它继续滚动一会。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;我们尝试从数学的角度来再现这一场景，以便让梯度下降算法能够在经过局部最小值后继续尝试取得全局最小值，公式如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2566489361702128&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ20MuNkuWOYmohnJS7mlqVF9tQCsMMYEU5W300LybJgk7hxrjP2EfRng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;752&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;动量算法的权重更新公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.14630872483221477&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2iaYqyEwxJc8vvROwgLE6nHcBPBg8vxZKmQJzPeIDSayFe61qYgwC9FA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;745&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;权重更新公式（动量）&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里的 V 表示的是动量因子（Momentum Factor），如公式所示，在每次更新中，它都会将前一次更新的动量因子加到当前导数上。之后，我们仅需要将这个值加上权重，即可得出更新后的权重。其中 n 在这里指的是动量系数（Coefficient of Momentum），它决定权重每次往前移动所获得的动量为多少。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;当权重更新后，权重也会在动量因子中将所有此前的梯度存储为一个部分。这样的话，一旦权重需要往相反的方向变化，例如达到局部最小值时，它依旧会朝同一个方向变化一段时间，直到动量因子的数量逐渐减少，才往相反的方向变化。在多数情况下，动量因子通常都足以让权重解决到了局部最小值便停止的问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7171381031613977&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2lRmjAibQvpLGwfq9j0wUKTIAOHMk22HlPR2gWp8EZicgEUNSib7XLG45Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;601&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;动量可视化示例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;动量算法的另一个附加优势是：由于梯度的积累，权重会更快地收敛成一个合适的损失值。优化中还有哪些能够让梯度下降以更精准的方式执行的技术呢？我们下面来看。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;涅斯捷罗夫梯度加速（Nesterov accelerated gradient，NAG）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在 NAG 中，我们要做的不是计算当前位置的梯度，而是计算与当前位置接近的未来位置的梯度。这样做的原因是我们希望以一种更加精准的方式来计算梯度。动量在取得最小值前就会开始减小，因为其使用的梯度是未来位置的梯度。这种方法结果会提高收敛期间的稳定性并减少波动，进一步，它在实际应用中的表现也比单纯用动量算法更好。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;接下来我们来看具体如何在神经网络权重的优化中使用 NAG。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;扩展后的整个动量方程式如下：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2047556142668428&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2723KF55n5PxOhW60ibrDEJbh0JeyAcsZIOhy2QFQzmjxofZor8aJiaeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;757&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;扩展后的动量全方程式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里的下一个权重值 W 由「n*v_old」和「alpha *当前梯度」以及当前权重相加得出。假设「alpha *当前梯度」的值变得很小，我们就能通过仅将「n*v_old」与当前权重值相加来趋近于下一个 W 值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.14209827357237717&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2CtJbYSZBSmHLia6Bia8ldAiblbZYfSZLhsBm0VDIwpU6InUCQ47icFkQiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;753&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;计算趋近于未来位置的权重值&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;现在，我们要计算的不是当前 W 值的梯度，而是未来 W 值的梯度。这就让动量因子在真正面临剧烈的梯度变化前提前适应，从而其训练期间的稳定性得以提高。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.21948051948051947&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2DvTHsiaxvrq02tZHBrZhc1K3Dw0V2mQT4cfgdYEEf1vVvgKemdvxSDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;770&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;涅斯捷罗夫动量公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这个带有 NAG 的新的动量方程式显示，我们采用的是趋近于未来位置的 W 值的梯度而不是当前位置的 W 值的梯度。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7277397260273972&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ25Ypa4OytmzxC0ESUicrEicU36N7YdEFUZ29OqHglqwhMNEvslDjcwhTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;584&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;涅斯捷罗夫可视化示例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如上面使用 NAG 方法的示例所示，我们给当前位置的 W 值加上了「n*v_old」以趋近于未来位置的 W 值。然后，我们计算未来位置的梯度值，并在计算「v_new」值时使用该值而非当前位置的梯度值。在本示例中，虽然在该场景中，动量在理论上应该是增加的，然而它在经过该位置时就开始减小了，这是因为未来位置的 W 值的梯度是指向相反方向的，所以动量值不增反减。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下面我们来看一些自适应优化方法。&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;&lt;strong&gt;自适应优化（Adaptive Optimization）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;在自适应优化方法中，学习率（alpha）和动量系数（n）在整个训练过程中都不再是连续的，而是连续地适应网络中的各个权重，因而会随权重一同变化。这些类型的优化算法都属于自适应优化这类方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;第一个要介绍的自适应优化算法是 Adagrad 算法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Adagrad&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;涅斯捷罗夫是自适应梯度算法的简称。在该算法中，我们需要为权重的每轮更新更改学习率（alpha），它们在每轮更新期间的更改方式为：如果权重在较短时间内被更新的太多次，它就会减小；反之增大。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;首先，每个权重都有自身的缓存（Cache）值，新的缓存值由自身原本的缓存值加上其在当前位置前的梯度的平方得出。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2162516382699869&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2ImtvK6xyw8dpNibIFBhBhvFv41NM1licWHJzkctTL4YEUqxYQ5YhmjnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Adagrad 的缓存更新值&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在训练过程中，该缓存值会持续增大，新的权重更新公式如下所示：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1806775407779172&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2NQDQgf99Yial3QrIFVBQyh9P41zjeibXbmvOVSYZEoCFAPUYJKAO7hHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;797&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Adagrad 权重更新公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;除了学习率（alpha）在整个训练过程中会持续变化外，该公式与原本的梯度下降公式一样。公式分母中的 E 是一个非常小的值，它是为了确保该公式不会出现「分子除以零」的情况。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;具体而言，在该公式中，如果权重的更新非常大，缓存值就会增大，结果会导致学习率变小，从而让权重的更新幅度持续减小。另一方面，如果权重并没有发生较为明显的更新，缓存值就会变得很小，结果会让学习率增大，进而会增大权重的更新幅度。这就是 Adagrad 优化器的基本原理。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;然而，该算法的缺点就是，无论权重过去的梯度为多少，缓存值总会增大些，这是因为公式中的平方结果是非负数。这样的话，每个权重的学习率最终都会减小至一个非常小的值，直到训练过程再也不会发生较明显的变化为止。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下一个要介绍的自适应优化器——RMSProp 则能够解决这一问题。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RMSProp &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;与 Adagrad 相比，RMSProp 唯一的不同点就在于它的缓存更新策略。RMSProp 的公式引入了一个新参数——衰减率（Decay Rate），即 gamma：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.17191601049868765&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2jwqMngKBahpjXcFD4h1BvQHObTiclDnAwicUdASt66VcfjWLcXDaiaddg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;762&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;RMSProp 的缓存权重更新公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;这里的 gamma 值一般为 0.9 或 0.99，因此对于每轮更新而言，相比于 Adagrad，公式中相加的与梯度的平方会乘上非常低的比率。这就确保了学习率能够基于此前更新的权重，像在 Adagrad 算法中一样持续变化，但与此同时，该学习率不会衰减得很快，因而它的训练过程会持续更长的时间。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;再接下来，我们要介绍的是 Adam 优化器，总体而言，它被广泛视作深度学习优化中最佳的优化器之一。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Adam&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Adam 有点像 RMSProp 和动量（Momentum）方法的结合体。我们首先计算 m 值，它表示的是当前位置的动量：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.19895287958115182&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ29GicQvHjQRSTAiaEhiahbErBwHUMv9g1vGTANLnyJlLcMzUzqeDibtwA4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Adam 动量权重更新公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;该公式与动量公式的唯一区别就是，当前梯度值乘以的不是学习率（alpha）而是 (1-Beta_1)。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;下一步我们计算累积的缓存值，这跟 RMSProp 中的计算方法一样：&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.15782493368700265&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2MRGjzLlzNMvDhfAia8zFlTzBqcUAVXIazl65h7m8T1AkjnXQ4rOf43g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;754&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;最后得到的权重更新公式如下：&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.16821192052980133&quot; data-s=&quot;300,640&quot; data-src=&quot;http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/951TjTgiabkwjqjfqxuo0YMpicoSFhcxQ2rvQf6QtyqSOXMGuFSVMgS8BGicXD2LJPbmKLaq4QpDa0bZhKMhQ1wIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;755&quot;/&gt;&lt;/p&gt;
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Adam 权重更新公式&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;如上公式所示，我们通过计算动量值来累加梯度值，与此同时，我们可以通过利用缓存值来持续更改学习率。由于这两个特征，Adam 的性能一般会比本文提到的以外的所有优化器都更好，因而在训练神经网络方面，它也是被开发人员偏好使用的优化器。在 Adam 的相关论文中，推荐 (Beta_1) 的参数取值为 0.9、(Beta_2) 的参数取值为 0.99 、（epsilon）的参数取值为 1e-08。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;在本文中，我提到了多数深度学习从业者在基本的深度学习任务中最常用的几个最重要的优化器，希望大家能够通过阅读本文有所收获！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;注：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;作者在本文中使用的 a(Loss)/a(Wi) 符号，实际上表示的是 Wi 值的 a(Loss)/a(W)。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;via&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span&gt;https://medium.com/deep-learning-demystified/https-medium-com-deep-learning-demystified-understanding-optimizers-313b787a69fe &lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;————&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;编辑 ∑Gemini&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt; 来源：雷锋网&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484097&amp;amp;idx=1&amp;amp;sn=9566979109fefc1907edad8a0b67cb27&amp;amp;chksm=ebe9c87cdc9e416ac5246da86ef23e6b45671441511a210554a965eb8c5a5ad210f72834a141&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;泰勒定理的奇闻轶事&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484094&amp;amp;idx=1&amp;amp;sn=1a93ee4b182b6fd3a74bd4b93d205d9e&amp;amp;chksm=ebe9c803dc9e4115ae1e90d7e64af1ccb0687cb77237d45fdc5039f771ec122da2d9b7ece9fd&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;丘成桐：漫谈微分几何&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484092&amp;amp;idx=1&amp;amp;sn=56e2befc4cbcc6e0a138c41c0a445451&amp;amp;chksm=ebe9c801dc9e4117126f5df3938fe5b93ce10ca4bb00692fe16e906e64620c14754895e24d9c&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Leibniz 如何想出微积分？（一）&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484090&amp;amp;idx=1&amp;amp;sn=c4778f29071d0388f6f7d5d25b2207d3&amp;amp;chksm=ebe9c807dc9e4111784b02ad43ed7b9958a0da5108c9db84a659f2b1d853a4a982bcef72aacc&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;线性相关和秩的物理意义&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484087&amp;amp;idx=1&amp;amp;sn=466ad19b059aa635a0ae282adca9342e&amp;amp;chksm=ebe9c80adc9e411c38ec3006c5bc2f622b4d7d6a3887f356db114ed3b79f0bf957a43b79eb75&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数学史上你认为最丑陋的公式是什么？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484083&amp;amp;idx=2&amp;amp;sn=107822b9a73eba79d34ba6a8488b13a6&amp;amp;chksm=ebe9c80edc9e411812d049bdd6ca8d4607688e815c8ba92c504748fdbbeab852f3166371eb9d&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;陶哲轩谈什么是好的数学&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484080&amp;amp;idx=1&amp;amp;sn=b754ee91c37493f3cff118a925f3d7d8&amp;amp;chksm=ebe9c80ddc9e411bc25ceef06631a406d7eafc73bb913f697b533c67665396e55565d1675bcd&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;田渊栋：数学的用处（下篇）&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;/&gt; &lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484029&amp;amp;idx=1&amp;amp;sn=d85a35df3ebd0884f3cb60536c5ccf75&amp;amp;chksm=ebe9c8c0dc9e41d6b43a3918624d8885f91c9af2346c2163c54c090c80c58ab844872278635c&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;你绝对没想过原来数学家这么流氓，一言不合就进行暴力证明&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484037&amp;amp;idx=1&amp;amp;sn=16e68092098b573bfff13f69c28b6285&amp;amp;chksm=ebe9c838dc9e412e4f0eceece3372c28256508af1f77d714dd1a7b8fd7f20de71e01d77bc836&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;世界上最牛的五篇博士论文&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484082&amp;amp;idx=2&amp;amp;sn=85da1e76707c8c1a9120cbbcf1da9aca&amp;amp;chksm=ebe9c80fdc9e411984cf41a248860de6982e8c9d291f25fe4420fbf43c38b138a2ea38bd644a&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数学中有哪些巧合让人眼前一亮？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247484014&amp;amp;idx=1&amp;amp;sn=5b94b17a277a0e25581d58a2582b5d0a&amp;amp;chksm=ebe9c8d3dc9e41c57f2137c285ac44ec24f6e20029158351588cf519b022ba65f417a0710fac&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;算法立功！清华毕业教授美国被抢车，警察无能为力自己用“贪心算法”找回&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247483984&amp;amp;idx=2&amp;amp;sn=620b603edf54785adeeae775b5cf7325&amp;amp;chksm=ebe9c8eddc9e41fba6883062a4b82f05d17d8292771a397d2fafdad2b1a77062472e95e13405&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;学术史上的奇文：怎样用数学抓狮子&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;☞&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247483968&amp;amp;idx=1&amp;amp;sn=098491812586b1806465ef2c7f055b39&amp;amp;chksm=ebe9c8fddc9e41eb88a15c509a228568da5cdbfe4eeda595941c9bd5d25a135fef17a239fc00&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;台大教授的反思：最难的一课 我们却没教给学生&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247483962&amp;amp;idx=1&amp;amp;sn=13ebe38d0b455b43c525284f550f1eda&amp;amp;chksm=ebe9c887dc9e4191bbe4c64d9027a27e94b01aaa6ae8435e2e5846374b3b94b8a8c46ddaaecb&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;☞麻省理工学院(MIT)研究生学习指导—— 怎样做研究生&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTY3OTU3MA==&amp;amp;mid=2247483957&amp;amp;idx=1&amp;amp;sn=f97ade0ac2643a31e2859f2f0186509f&amp;amp;chksm=ebe9c888dc9e419e8623cf164d9d5964ffcf80d6ac1c90c9cbe721533ec0848495bcab82e5be&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;☞分享 数学，常识和运气 ——投资大师詹姆斯·西蒙斯2010年在MIT的讲座&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;算法数学之美微信公众号欢迎赐稿&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;稿件涉及数学、物理、算法、计算机、编程等相关领域，经采用我们将奉上稿酬。&lt;/span&gt;&lt;/p&gt;
&lt;p helvetica=&quot;&quot; neue=&quot;&quot; sc=&quot;&quot; sans=&quot;&quot; gb=&quot;&quot; yahei=&quot;&quot; ui=&quot;&quot; arial=&quot;&quot; sans-serif=&quot;&quot; normal=&quot;&quot; center=&quot;&quot; border-box=&quot;&quot; break-word=&quot;&quot;&gt;&lt;span&gt;投稿邮箱：math_alg@163.com&lt;/span&gt;&lt;/p&gt;
</description>
<pubDate>Sat, 02 Nov 2019 00:37:18 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/JxE3DTtX7X</dc:identifier>
</item>
<item>
<title>这数学是美术老师教的吧，好玩儿~</title>
<link>http://www.jintiankansha.me/t/rqKp2U303Y</link>
<guid isPermaLink="true" >http://www.jintiankansha.me/t/rqKp2U303Y</guid>
<description>&lt;div id=&quot;img-content&quot; class=&quot;paper rich_media_area_primary &quot; readability=&quot;4.6068376068376&quot;&gt;

                        

                        
                            
&lt;ins class=&quot;adsbygoogle&quot; data-ad-layout=&quot;in-article&quot; data-ad-format=&quot;fluid&quot; data-ad-client=&quot;ca-pub-1837452791782084&quot; data-ad-slot=&quot;7041996284&quot;&gt;&lt;/ins&gt;
&lt;p&gt;
                &lt;h2 class=&quot;common_share_title&quot;&gt;
                                        &lt;span id=&quot;video_title&quot;&gt;这数学是美术老师教的吧，好玩儿~&lt;/span&gt;
                &lt;/h2&gt;
                            &lt;/p&gt;
                        

                        &lt;br /&gt;&lt;/div&gt;

                    &lt;div class=&quot;post-meta&quot;&gt;
                        &lt;div class=&quot;&quot;&gt;
                            &lt;p&gt;分享到&lt;/p&gt;
                            &lt;a target=&quot;_blank&quot; href=&quot;http://service.weibo.com/share/share.php?url=http%3A%2F%2Fwww.jintiankansha.me%2Ft%2FrqKp2U303Y&amp;amp;appkey=2206014828&amp;amp;pic=&amp;amp;title=%E8%BF%99%E6%95%B0%E5%AD%A6%E6%98%AF%E7%BE%8E%E6%9C%AF%E8%80%81%E5%B8%88%E6%95%99%E7%9A%84%E5%90%A7%EF%BC%8C%E5%A5%BD%E7%8E%A9%E5%84%BF%7E+%40%E4%BB%8A%E5%A4%A9%E7%9C%8B%E5%95%A5&quot;&gt;
                                &lt;img width=&quot;30px&quot; src=&quot;http://www.jintiankansha.me/static/img/site/weibo.svg?v=fa758ebd6691cf5931bbbed63230327b&quot; /&gt;&lt;/a&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;

                    
                    
                </description>
<pubDate>Sat, 02 Nov 2019 00:37:16 +0000</pubDate>
<dc:language>zh-CN</dc:language>
<dc:format>text/html</dc:format>
<dc:identifier>http://www.jintiankansha.me/t/rqKp2U303Y</dc:identifier>
</item>
</channel>
</rss>